.code32
.text
.globl main
main:
		jmp	_0784ec_func

.data

_010003_data:
		.ascii  "\x90\x90\x90\x90\x90\x90\x90\x90"
		.ascii  "\x90\x90\x90\x90\x90"

.text



_010010_func:
		pusha  
		mov    $_0107bb_func,%edi
		add    $0x00005a,%edi
		mov    $0xfffffec0,%eax

	_01001e_jump:
		mov    %eax,(%edi)
		add    $0x000060,%edi
		add    $0x000004,%eax
		jne    _01001e_jump
		mov    $_090008_data,%edi
		mov    $0x0000c8,%cl

	_01002f_jump:
		movl   $0x00ffff,(%edi)
		movl   $0x000000,0x000004(%edi)
		add    $0x000020,%edi
		dec    %cl
		jne    _01002f_jump
		popa   
		ret    



_010045_func:
		pusha  
		mov    %eax,_091932_data
		mov    %esi,%eax
		add    $0x000004,%eax
		mov    %eax,_091908_data
		mov    (%esi),%eax
		mov    %eax,_091916_data
		xor    %eax,%eax
		mov    0x00002a(%esi),%al
		sub    0x000024(%esi),%al
		mov    %eax,_091922_data
		neg    %eax
		mov    %eax,_091926_data
		xor    %eax,%eax
		mov    0x000027(%esi),%al
		sub    0x000025(%esi),%al
		mov    %eax,_09192a_data
		neg    %eax
		mov    %eax,_09192e_data
		mov    %esi,%ebx
		mov    $0x000003,%cl
		add    $0x000004,%ebx
		add    $0x000010,%esi
		mov    0x000004(%ebx),%eax
		mov    %eax,%edx

	_010093_jump:
		mov    (%esi),%edi
		cmp    %eax,%edi
		jge    _01009b_jump
		mov    %edi,%eax

	_01009b_jump:
		cmp    %edx,%edi
		jle    _0100a1_jump
		mov    %edi,%edx

	_0100a1_jump:
		add    $0x000008,%esi
		dec    %cl
		jne    _010093_jump
		cmp    $0x0000c8,%eax
		jge    _01263e_jump
		or     %edx,%edx
		js     _01263e_jump
		or     %eax,%eax
		jns    _0100c1_jump
		xor    %eax,%eax

	_0100c1_jump:
		mov    %eax,_090004_data
		cmp    $0x0000c8,%edx
		jb     _0100d3_jump
		mov    $0x0000c7,%edx

	_0100d3_jump:
		sub    %eax,%edx
		inc    %edx
		mov    %edx,_09193e_data
		mov    (%ebx),%esi
		mov    0x000004(%ebx),%ecx
		mov    0x000018(%ebx),%ebp
		mov    0x00001c(%ebx),%edi
		or     %ecx,%ecx
		jns    _0100f3_jump
		or     %edi,%edi
		js     _01022e_jump

	_0100f3_jump:
		cmp    $0x0000c8,%ecx
		jl     _010107_jump
		cmp    $0x0000c8,%edi
		jge    _01022e_jump

	_010107_jump:
		mov    0x000026(%ebx),%ah
		sub    %ebp,%esi
		mov    0x000027(%ebx),%al
		mov    _091926_data,%edx
		sub    %edi,%ecx
		jns    _010129_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000020(%ebx),%ah
		neg    %esi
		mov    0x000021(%ebx),%al
		neg    %edx

	_010129_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_0101f9_func
		mov    %al,_010216_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_010223_jump
		mov    %ax,_010198_data
		or     %edx,%edx
		jns    _010162_jump
		sub    $0x000002,%edx

	_010162_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_01021a_jump
		mov    %ax,_0101b0_func
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _0101c6_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
		data16 		.byte 0x0000b8

.data

_010198_data:
		.ascii  "\xff\xff\xf7\xe7\x66\x89\xc2\xc1"
		.ascii  "\xe2\x10\xc1\xe8\x10\x00\xc7\x52"
		.ascii  "\x66\x89\xf0\xc1\xe0\x10\x66\xb8"

_0101b0_data:
		.ascii  "\xff\xff\xf7\xe7\x5a\x66\x89\xc2"
		.ascii  "\xc1\xe8\x10\x66\x01\xc5\x29\xf9"
		.ascii  "\x58\xbf\xac\x26\x00\x00"

_0101c6_data:
		.ascii  "\x57\x01\xcf\x81\xff\x74\x27\x00"
		.ascii  "\x00\x72\x08\x81\xef\x74\x27\x00"
		.ascii  "\x00\x29\xf9\x5f\xc1\xe7\x05"

_0101dd_data:
		.ascii  "\x66\x39\xaf"
		.long   _042a88_jump
		.ascii  "\x76\x14\x66\x89\xaf"
		.long   _042a88_jump
		.ascii  "\x88\xbf"
		.long   _042a90_jump
		.ascii  "\xc6\x87"
		.long   _042a98_jump

.text



_0101f9_func:
		add    %ah,0x000039(%esi)
		scas   %es:(%edi),%eax
		mov    %gs,(%edx)
		add    $0x000000,%al
		jae    _010217_jump
		mov    %bp,_042a8c_jump(%edi)
		mov    %bh,_042a94_jump(%edi)
		movb   $0x000000,_042a9c_jump(%edi)

	_010217_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _0101dd_jump

	_01022e_jump:
		mov    _091908_data,%ebx
		mov    0x000018(%ebx),%esi
		mov    0x00001c(%ebx),%ecx
		mov    0x000010(%ebx),%ebp
		mov    0x000014(%ebx),%edi
		or     %ecx,%ecx
		jns    _01024c_jump
		or     %edi,%edi
		js     _010387_jump

	_01024c_jump:
		cmp    $0x0000c8,%ecx
		jl     _010260_jump
		cmp    $0x0000c8,%edi
		jge    _010387_jump

	_010260_jump:
		mov    0x000024(%ebx),%al
		sub    %ebp,%esi
		mov    0x000025(%ebx),%ah
		mov    _09192e_data,%edx
		sub    %edi,%ecx
		jns    _010282_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000026(%ebx),%al
		neg    %esi
		mov    0x000027(%ebx),%ah
		neg    %edx

	_010282_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_01034c_jump
		mov    %al,_010369_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_01037c_jump
		mov    %ax,_0102f1_jump
		or     %edx,%edx
		jns    _0102bb_jump
		sub    $0x000002,%edx

	_0102bb_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_010373_jump
		mov    %ax,_010309_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _01031f_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_0102f1_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_010309_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_01031f_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _010332_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_010332_jump:
		pop    %edi
		shl    $0x000005,%edi

	_010336_jump:
		cmp    %bp,_042a88_jump(%edi)
		jbe    _010353_jump
		mov    %bp,_042a88_jump(%edi)
		movb   $0x0000ff,_042a90_jump(%edi)
		mov    %bh,_042a98_jump(%edi)

	_010353_jump:
		cmp    %bp,_042a8c_jump(%edi)
		jae    _010370_jump
		mov    %bp,_042a8c_jump(%edi)
		movb   $0x0000ff,_042a94_jump(%edi)
		mov    %bh,_042a9c_jump(%edi)

	_010370_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _010336_jump

	_010387_jump:
		mov    _091908_data,%ebx
		mov    0x000010(%ebx),%esi
		mov    0x000014(%ebx),%ecx
		mov    0x000008(%ebx),%ebp
		mov    0x00000c(%ebx),%edi
		or     %ecx,%ecx
		jns    _0103a5_jump
		or     %edi,%edi
		js     _0104e0_jump

	_0103a5_jump:
		cmp    $0x0000c8,%ecx
		jl     _0103b9_jump
		cmp    $0x0000c8,%edi
		jge    _0104e0_jump

	_0103b9_jump:
		mov    0x000023(%ebx),%al
		sub    %ebp,%esi
		mov    0x000022(%ebx),%ah
		mov    _091922_data,%edx
		sub    %edi,%ecx
		jns    _0103db_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000025(%ebx),%al
		neg    %esi
		mov    0x000024(%ebx),%ah
		neg    %edx

	_0103db_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_0104ab_jump
		mov    %al,_0104c8_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_0104d5_jump
		mov    %ax,_01044a_jump
		or     %edx,%edx
		jns    _010414_jump
		sub    $0x000002,%edx

	_010414_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_0104cc_jump
		mov    %ax,_010462_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _010478_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_01044a_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_010462_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_010478_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _01048b_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_01048b_jump:
		pop    %edi
		shl    $0x000005,%edi

	_01048f_jump:
		cmp    %bp,_042a88_jump(%edi)
		jbe    _0104ac_jump
		mov    %bp,_042a88_jump(%edi)
		mov    %bh,_042a90_jump(%edi)
		movb   $0x0000ff,_042a98_jump(%edi)

	_0104ac_jump:
		cmp    %bp,_042a8c_jump(%edi)
		jae    _0104c9_jump
		mov    %bp,_042a8c_jump(%edi)
		mov    %bh,_042a94_jump(%edi)
		movb   $0x0000ff,_042a9c_jump(%edi)

	_0104c9_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _01048f_jump

	_0104e0_jump:
		mov    _091908_data,%ebx
		mov    (%ebx),%ebp
		mov    0x000004(%ebx),%edi
		mov    0x000008(%ebx),%esi
		mov    0x00000c(%ebx),%ecx
		or     %ecx,%ecx
		jns    _0104fd_jump
		or     %edi,%edi
		js     _010638_jump

	_0104fd_jump:
		cmp    $0x0000c8,%ecx
		jl     _010511_jump
		cmp    $0x0000c8,%edi
		jge    _010638_jump

	_010511_jump:
		mov    0x000020(%ebx),%al
		sub    %ebp,%esi
		mov    0x000021(%ebx),%ah
		mov    _09192a_data,%edx
		sub    %edi,%ecx
		jns    _010533_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000022(%ebx),%al
		neg    %esi
		mov    0x000023(%ebx),%ah
		neg    %edx

	_010533_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_0105fd_jump
		mov    %al,_01061a_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_01062d_jump
		mov    %ax,_0105a2_jump
		or     %edx,%edx
		jns    _01056c_jump
		sub    $0x000002,%edx

	_01056c_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_010624_jump
		mov    %ax,_0105ba_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _0105d0_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_0105a2_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_0105ba_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_0105d0_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _0105e3_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_0105e3_jump:
		pop    %edi
		shl    $0x000005,%edi

	_0105e7_jump:
		cmp    %bp,_042a88_jump(%edi)
		jbe    _010604_jump
		mov    %bp,_042a88_jump(%edi)
		movb   $0x000000,_042a90_jump(%edi)
		mov    %bh,_042a98_jump(%edi)

	_010604_jump:
		cmp    %bp,_042a8c_jump(%edi)
		jae    _010621_jump
		mov    %bp,_042a8c_jump(%edi)
		movb   $0x000000,_042a94_jump(%edi)
		mov    %bh,_042a9c_jump(%edi)

	_010621_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _0105e7_jump

	_010638_jump:
		mov    _090004_data,%ebp
		mov    %ebp,%esi
		shl    $0x000002,%esi
		add    %ebp,%esi
		shl    $0x000006,%esi
		shl    $0x000005,%ebp
		add    _091932_data,%esi
		mov    %esi,_091936_data
		mov    %ebp,_09193a_data

	_01065d_jump:
		mov    _09193a_data,%ebp
		mov    _090008_data(%ebp),%edi
		movw   $0x00ffff,_090008_data(%ebp)
		mov    _09000c_data(%ebp),%ecx
		movw   $0x000000,_09000c_data(%ebp)
		cmp    $0x007e40,%edi
		jae    _012621_jump
		cmp    $0x007d00,%ecx
		jb     _012621_jump
		sub    %edi,%ecx
		inc    %ecx
		mov    _09001c_data(%ebp),%edx
		mov    _090018_data(%ebp),%esi
		shl    $0x000010,%ecx
		sub    %esi,%edx
		xor    %eax,%eax
		inc    %edx
		shl    $0x000008,%esi
		idiv   %ecx
		mov    %eax,%ebx
		mov    _090014_data(%ebp),%edx
		mov    _090010_data(%ebp),%eax
		sub    %eax,%edx
		add    %eax,%esi
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,%dx
		shl    $0x000010,%edx
		mov    %bx,%ax
		rol    $0x000010,%eax
		shr    $0x000010,%ebx
		mov    %bl,%dl
		mov    %si,%bx
		xor    %esi,%esi
		shr    $0x000010,%ecx
		sub    $0x007d00,%edi
		jns    _01070b_jump
		mov    %eax,%ebp
		mov    %edx,%esi
		neg    %edi
		sub    %edi,%ecx
		mul    %edi
		add    %eax,%ebx
		adc    %dl,%bh
		mov    %esi,%eax
		mul    %edi
		add    %dl,%bl
		add    %al,%bh
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ebp,%eax
		xor    %edi,%edi

	_01070b_jump:
		mov    %edi,%ebp
		add    %ecx,%edi
		cmp    $0x000140,%edi
		jb     _01071f_jump
		sub    $0x000140,%edi
		sub    %edi,%ecx

	_01071f_jump:
		mov    %ebp,%edi
		add    _091936_data,%edi
		mov    %edi,%ebp
		and    $0x000003,%ebp
		sub    %bp,%cx
		jns    _010738_jump
		add    %bp,%cx
		mov    %ecx,%ebp
		xor    %ecx,%ecx

	_010738_jump:
		add    %ebp,%edi
		push   %ecx
		mov    %bp,%cx
		shl    $0x000005,%cx
		shl    $0x000003,%bp
		sub    %bp,%cx
		sub    $_01079b_func,%ecx
		neg    %ecx
		jmp    *%ecx



_01079b_func:
		pop    %ecx
		push   %ecx
		shr    $0x000002,%ecx
		lea    (%edi,%ecx,4),%edi
		mov    %cx,%bp
		shl    $0x000005,%bp
		shl    $0x000007,%cx
		sub    %bp,%cx
		sub    $_0125bb_jump,%ecx
		neg    %ecx
		jmp    *%ecx



_0107bb_func:
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091916_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh

	_0125bb_jump:
		pop    %ecx
		and    $0x000003,%ecx
		add    %ecx,%edi
		mov    %cx,%bp
		shl    $0x000005,%cx
		shl    $0x000003,%bp
		sub    %bp,%cx
		sub    $_012621_jump,%ecx
		neg    %ecx
		jmp    *%ecx

	_012621_jump:
		addl   $0x000140,_091936_data
		addl   $0x000020,_09193a_data
		decl   _09193e_data
		jne    _01065d_jump

	_01263e_jump:
		popa   
		ret    



_01268a_func:
		pushaw 
		cld    
		sub    $0x000050,%ebx
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000001,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126a9_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126a9_jump
		pop    %esi
		add    %edx,%esi
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000002,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126d3_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126d3_jump
		pop    %esi
		add    %edx,%esi
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000004,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126fd_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126fd_jump
		pop    %esi
		add    %edx,%esi
		mov    $0x0ab000,%edi
		mov    $0x000008,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_012726_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _012726_jump
		popaw  
		ret    



_012748_func:
		pusha  
		mov    $0x000000,%ah
		int    $0x00001a
		shl    $0x000010,%ecx
		and    $0x00ffff,%edx
		add    %ecx,%edx
		mov    %edx,(%esi)
		popa   
		ret    



_012783_func:
		mov    $0x0003c4,%edx
		mov    $0x000f02,%eax
		out    %ax,(%dx)
		mov    $0x000fa0,%ecx
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		ret    

_012799_switch:
		.long   0

_01279d_switch:
		.long   0


	_0127a1_jump:
		add    %dl,-0x000077(%ebp)
		or     $_01279d_switch,%eax
		mov    %eax,%ebp
		mov    %edx,%ecx
		and    $0x0000ff,%ecx
		mov    %ecx,_012799_switch
		and    $0x00ff00,%edx
		mov    %dh,_0127a1_jump
		mov    $0x000001,%ah
		mov    %edi,%ecx
		and    $0x000003,%ecx
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000001,%ch
		sub    _01279d_switch,%esi
		mov    $0x000002,%al
		out    %ax,(%dx)

	_0127de_jump:
		push   %ecx
		push   %edi
		add    _01279d_switch,%esi
		push   %esi
		push   %ebp

	_0127e8_jump:
		push   %edi
		push   %esi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %esi
		pop    %edi
		add    $0x000050,%edi
		add    _012799_switch,%esi
		dec    %ebp
		jne    _0127e8_jump
		pop    %ebp
		pop    %esi
		pop    %edi
		call   _012ca7_func
		mov    _0127a1_jump,%ch
		shl    %ch
		cmp    $0x000010,%ch
		jne    _01282c_jump
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		inc    %esi
		mov    $0x000001,%ch

	_01282c_jump:
		mov    %ch,_0127a1_jump
		pop    %ecx
		shl    %ch
		cmp    $0x000010,%ch
		jne    _0127de_jump
		pop    %ebp
		ret    



_01283c_func:
		push   %dx
		mov    $0x0003c4,%dx
		and    $0x00ffff,%eax
		mov    %al,%ah
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %dx
		ret    



_0129c7_func:
		push   %ebp
		push   %ebp
		movl   $0x000000,(%esp)
		push   %ecx
		push   %ebx
		mov    %ecx,%ebx
		add    $0x004600,%ebx
		sub    $0x000080,%edx
		mov    $0x000000,%cl
		jmp    _012a02_jump

	_0129e4_jump:
		addl   $0x000500,(%esp)
		cmp    %ebx,(%esp)
		jb     _0129f7_jump
		subl   $0x004600,(%esp)

	_0129f7_jump:
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _012b45_jump

	_012a02_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000001,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		jmp    _012a20_jump

	_012a1e_jump:
		inc    %cl

	_012a20_jump:
		cmp    $0x000014,%cl
		jge    _012b35_jump
		mov    0x000004(%eax),%di
		and    $0x0000ff,%di
		cmp    $0x000000,%di
		jne    _012b27_jump
		cmp    $0x000000,%bx
		jne    _012aaa_jump
		push   %edi
		push   %ecx
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    0x000014(%esp),%ecx
		push   %edx
		mov    0x00001c(%esp),%edx
		push   %eax
		push   %ebx
		push   %edx
		mov    %edi,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		mov    %al,%bl
		mov    %ecx,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		cmp    %bl,%al
		je     _012a76_jump
		stc    
		jmp    _012a77_jump

	_012a76_jump:
		clc    

	_012a77_jump:
		pop    %edx
		pop    %ebx
		pop    %eax
		pop    %edx
		pop    %ecx
		pop    %edi
		jae    _012a90_jump
		cmpl   $0x000050,0x000014(%esp)
		je     _012aa1_jump
		movl   $0x000050,0x000014(%esp)
		jmp    _012af7_jump

	_012a90_jump:
		cmpl   $0x000000,0x000014(%esp)
		je     _012aa1_jump
		movl   $0x000000,0x000014(%esp)
		jmp    _012af7_jump

	_012aa1_jump:
		incl   0x00000c(%edx,%ebp,1)
		jmp    _012b27_jump

	_012aaa_jump:
		movl   $0x000000,0x000014(%esp)
		push   %edi
		push   %ecx
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    0x000014(%esp),%ecx
		push   %edx
		mov    0x00001c(%esp),%edx
		push   %eax
		push   %ebx
		push   %edx
		mov    %edi,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		mov    %al,%bl
		mov    %ecx,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		cmp    %bl,%al
		je     _012ae6_jump
		stc    
		jmp    _012ae7_jump

	_012ae6_jump:
		clc    

	_012ae7_jump:
		pop    %edx
		pop    %ebx
		pop    %eax
		pop    %edx
		pop    %ecx
		pop    %edi
		jae    _012af7_jump
		movl   $0x000050,0x000014(%esp)

	_012af7_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		sub    0x00001c(%esp),%edi
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		incl   0x00000c(%edx,%ebp,1)
		jmp    _012b27_jump

	_012b27_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _012a1e_jump

	_012b35_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		pop    %ebx
		pop    %ecx
		jmp    _0129e4_jump

	_012b45_jump:
		pop    %ebx
		pop    %ecx
		pop    %ebp
		pop    %ebp
		ret    



_012b4a_func:
		push   %ebp
		push   %ebx
		mov    %ecx,%ebx
		sub    $0x000080,%edx
		mov    $0x000000,%cl
		jmp    _012b66_jump

	_012b58_jump:
		add    %ebx,(%esp)
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _012be7_jump

	_012b66_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000000,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		jmp    _012b84_jump

	_012b82_jump:
		inc    %cl

	_012b84_jump:
		cmp    $0x000014,%cl
		jge    _012bd7_jump
		mov    0x000004(%eax),%di
		and    $0x0000ff,%di
		cmp    $0x000000,%di
		je     _012bcc_jump
		cmp    $0x000000,%bx
		je     _012ba4_jump

	_012b9e_jump:
		incl   0x00000c(%edx,%ebp,1)
		jmp    _012bcc_jump

	_012ba4_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		jmp    _012b9e_jump

	_012bcc_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _012b82_jump

	_012bd7_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		pop    %ebx
		pop    %ecx
		jmp    _012b58_jump

	_012be7_jump:
		pop    %ebx
		pop    %ebp
		ret    



_012bea_func:
		push   %ebp
		push   %ebx
		mov    %ecx,%ebx
		sub    $0x000080,%edx
		add    $0x000078,%eax
		add    %edi,%eax
		mov    $0x00000e,%cl
		jmp    _012c05_jump

	_012bfd_jump:
		dec    %cl
		je     _012ca4_jump

	_012c05_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000000,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		add    $0x000006,%eax
		add    $0x000004,%esi
		addl   $0x000004,0x00000c(%esp)
		jmp    _012c2e_jump

	_012c2c_jump:
		inc    %cl

	_012c2e_jump:
		cmp    $0x000013,%cl
		jge    _012c8c_jump
		mov    0x000004(%eax),%di
		and    $0x0000ff,%di
		je     _012c47_jump
		or     %bx,%bx
		je     _012c57_jump
		incl   0x00000c(%edx,%ebp,1)

	_012c47_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		addl   $0x000004,0x00000c(%esp)
		jmp    _012c2c_jump

	_012c57_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		addl   $0x000004,0x000014(%esp)
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		incl   0x00000c(%edx,%ebp,1)
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _012c2c_jump

	_012c8c_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		addl   $0x0004b0,0x000008(%esp)
		pop    %ebx
		pop    %ecx
		jmp    _012bfd_jump

	_012ca4_jump:
		pop    %ebx
		pop    %ebp
		ret    



_012ca7_func:
		shl    %ah
		cmp    $0x000010,%ah
		jne    _012cb1_jump
		inc    %edi
		mov    $0x000001,%ah

	_012cb1_jump:
		out    %ax,(%dx)
		ret    



_012cb4_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012ce4_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		mov    %esi,%edx
		mov    %dl,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012d15_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000007,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012d45_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000008,(%edi)
		movb   $0x000007,0x000050(%edi)
		call   _012ca7_func
		movb   $0x000007,(%edi)
		movb   $0x000006,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012d85_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x000050(%edi)
		call   _012ca7_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012ca7_func
		movb   $0x000006,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012dd2_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000003,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012e02_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		call   _012ca7_func
		movb   $0x000005,(%edi)
		movb   $0x000007,0x000050(%edi)
		movb   $0x000007,0x0000a0(%edi)
		movb   $0x000005,0x0000f0(%edi)
		call   _012ca7_func
		movb   $0x000005,(%edi)
		movb   $0x000007,0x000050(%edi)
		movb   $0x000007,0x0000a0(%edi)
		movb   $0x000005,0x0000f0(%edi)
		call   _012ca7_func
		movb   $0x000005,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012e7e_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,0x000050(%edi)
		call   _012ca7_func
		movb   $0x000004,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012eb7_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012ca7_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012ca7_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012ca7_func
		movb   $0x000006,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012f33_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000003,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012ca7_func
		movb   $0x000002,(%edi)
		movb   $0x000005,0x000050(%edi)
		movb   $0x000003,0x0000a0(%edi)
		call   _012ca7_func
		movb   $0x000004,(%edi)
		movb   $0x000002,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012f8a_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012ca7_func
		movb   $0x000007,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000007,0x000140(%edi)
		call   _012ca7_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000008,0x000140(%edi)
		movb   $0x000006,0x000190(%edi)
		call   _012ca7_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000008,0x000140(%edi)
		movb   $0x000006,0x000190(%edi)
		call   _012ca7_func
		movb   $0x000007,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000007,0x000140(%edi)
		call   _012ca7_func
		movb   $0x000006,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_013064_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000004,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012ca7_func
		movb   $0x000003,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		movb   $0x000004,0x0000f0(%edi)
		call   _012ca7_func
		movb   $0x000002,(%edi)
		movb   $0x000004,0x000050(%edi)
		movb   $0x000003,0x0000a0(%edi)
		call   _012ca7_func
		movb   $0x000003,(%edi)
		movb   $0x000002,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_01325e_func:
		femms  
		or     $0x000008,%al

	_013262_jump:
		sgdtl  (%ebx)
		pop    %es



_013266_func:
		pusha  
		cmp    $0x000000,%ebx
		jle    _01332c_jump
		cmp    $0x000000,%ecx
		jle    _01332c_jump
		shl    $0x000004,%edx
		add    %edx,%edi
		shl    $0x000002,%edx
		add    %edx,%edi
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %edx
		add    %esi,%ecx
		mov    %esi,%eax
		shr    $0x000002,%esi
		and    $0x000003,%eax
		je     _0132c7_jump
		push   %edi
		push   %ebx
		mov    _01325e_func(%eax),%al
		mov    %ecx,%ebx
		shr    $0x000002,%ebx
		cmp    %esi,%ebx
		jne    _0132b6_jump
		mov    %ecx,%ebx
		and    $0x000003,%ebx
		mov    _013262_jump(%ebx),%ah
		and    %ah,%al

	_0132b6_jump:
		pop    %ebx
		out    %al,(%dx)
		add    %esi,%edi
		mov    %ebx,%eax

	_0132bc_jump:
		movb   $0x000000,(%edi)
		add    $0x000050,%edi
		dec    %eax
		jne    _0132bc_jump
		pop    %edi
		inc    %esi

	_0132c7_jump:
		mov    %ecx,%eax
		shr    $0x000002,%eax
		sub    %esi,%eax
		jl     _01332c_jump
		je     _01330e_jump
		push   %edi
		push   %ecx
		push   %ebx
		add    %esi,%edi
		mov    %eax,%ecx
		mov    $0x000050,%esi
		mov    $0x00000f,%al
		sub    %ecx,%esi
		out    %al,(%dx)
		xor    %eax,%eax
		push   %edx
		mov    %ecx,%edx
		shr    $0x000002,%ecx
		and    $0x000003,%edx
		jne    _0132fd_jump
		mov    %ecx,%edx

	_0132f2_jump:
		rep stos %eax,%es:(%edi)
		mov    %edx,%ecx
		add    %esi,%edi
		dec    %ebx
		jne    _0132f2_jump
		jmp    _01330a_jump

	_0132fd_jump:
		push   %ecx
		rep stos %eax,%es:(%edi)
		mov    %edx,%ecx
		rep stos %al,%es:(%edi)
		pop    %ecx
		add    %esi,%edi
		dec    %ebx
		jne    _0132fd_jump

	_01330a_jump:
		pop    %edx
		pop    %ebx
		pop    %ecx
		pop    %edi

	_01330e_jump:
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		and    $0x000003,%eax
		je     _01332c_jump
		mov    _013262_jump(%eax),%al
		add    %ecx,%edi
		out    %al,(%dx)
		mov    %ebx,%eax

	_013323_jump:
		movb   $0x000000,(%edi)
		add    $0x000050,%edi
		dec    %eax
		jne    _013323_jump

	_01332c_jump:
		popa   
		ret    



_01332e_func:
		push   %ebp
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		pop    %ebp
		pop    %ecx
		push   %edi
		mov    %ecx,%ebx
		inc    %ebx

	_01335e_jump:
		movb   $0x0000ff,(%edi)
		add    $0x000050,%edi
		dec    %ebx
		jne    _01335e_jump
		pop    %edi
		call   _012ca7_func
		mov    %ecx,%ebx
		dec    %ebp
		push   %ecx
		mov    %ecx,%ebx
		shl    $0x000006,%ecx
		shl    $0x000004,%ebx
		add    %ecx,%ebx

	_01337b_jump:
		movb   $0x0000ff,(%edi)
		movb   $0x0000ff,(%edi,%ebx,1)
		call   _012ca7_func
		dec    %ebp
		jne    _01337b_jump
		pop    %ecx
		inc    %ecx

	_01338c_jump:
		movb   $0x0000ff,(%edi)
		add    $0x000050,%edi
		dec    %ecx
		jne    _01338c_jump
		pop    %edi
		pop    %ebp
		ret    



_013429_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		jmp    _013457_jump

	_013446_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _0139af_jump

	_013457_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_01345f_jump:
		cmp    $0x000000,%ecx
		je     _0139a8_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _013479_jump
		sub    0x000018(%esp),%esi

	_013479_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _01375d_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _013685_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _013904_jump

	_013685_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _013904_jump

	_01375d_jump:
		test   $0x000002,%edi
		je     _013904_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_013904_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _013998_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_013998_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _01345f_jump

	_0139a8_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013446_jump

	_0139af_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_0139b6_func:
		push   %ebp
		mov    %esi,%ebp
		push   %edx
		push   %eax
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		and    $0x0000fc,%al
		or     $0x000001,%al
		out    %al,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		mov    $0x00000f,%ah
		out    %ax,(%dx)
		mov    %ecx,%edi
		mov    $0x0ab000,%esi
		add    $0x000502,%edi
		add    $0x000502,%esi
		mov    $0x0000b8,%ecx

	_0139ee_jump:
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		add    $0x00004c,%edi
		add    $0x00004c,%esi
		dec    %ecx
		jne    _0139ee_jump
		cli    
		xor    %ecx,%ecx
		jmp    _013a11_jump

	_013a00_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000c,%cl
		jge    _013ad0_jump

	_013a11_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_013a19_jump:
		cmp    $0x000000,%ecx
		je     _013ac9_jump
		push   %ecx
		mov    0x000000(%ebp),%esi
		mov    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		or     %ecx,%ecx
		je     _013abf_jump
		shl    $0x000002,%ecx
		add    $0x000001,%ecx
		mov    %ecx,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		mov    %eax,%edx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)

	_013abf_jump:
		pop    %ecx
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _013a19_jump

	_013ac9_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013a00_jump

	_013ad0_jump:
		push   %edx
		push   %eax
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		and    $0x0000fc,%al
		out    %al,(%dx)
		pop    %eax
		pop    %edx
		pop    %ebp
		sti    
		ret    



_013ae4_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		mov    $0x000000,%cl
		jmp    _013b14_jump

	_013b03_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _01406c_jump

	_013b14_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_013b1c_jump:
		cmp    $0x000000,%ecx
		je     _014065_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _013b36_jump
		sub    0x000018(%esp),%esi

	_013b36_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _013e1a_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _013d42_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _013fc1_jump

	_013d42_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _013fc1_jump

	_013e1a_jump:
		test   $0x000002,%edi
		je     _013fc1_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_013fc1_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _014055_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_014055_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _013b1c_jump

	_014065_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013b03_jump

	_01406c_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_014073_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		mov    $0x000000,%cl
		jmp    _0140a3_jump

	_014092_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000c,%cl
		jge    _0145fb_jump

	_0140a3_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_0140ab_jump:
		cmp    $0x000000,%ecx
		je     _0145f4_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _0140c5_jump
		sub    0x000018(%esp),%esi

	_0140c5_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _0143a9_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _0142d1_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _014550_jump

	_0142d1_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _014550_jump

	_0143a9_jump:
		test   $0x000002,%edi
		je     _014550_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_014550_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _0145e4_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_0145e4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _0140ab_jump

	_0145f4_jump:
		pop    %ebp
		pop    %ecx
		jmp    _014092_jump

	_0145fb_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_014602_func:
		push   %ebp
		push   %ecx
		push   %ecx
		mov    %ecx,%ebp
		mov    %edx,%esi
		mov    $0x0000f0,%ecx
		movl   $0x00000e,0x000004(%esp)
		jmp    _014629_jump

	_014618_jump:
		decl   0x000004(%esp)
		je     _014661_jump
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _014661_jump
		add    0x000008(%ebx),%edi

	_014629_jump:
		push   %ebx
		push   %esi
		xor    %ebx,%ebx
		movl   $0x000014,0x000008(%esp)
		jmp    _014643_jump

	_014637_jump:
		add    $0x000006,%esi
		add    $0x000004,%edi
		decl   0x000008(%esp)
		je     _01465d_jump

	_014643_jump:
		mov    0x000004(%esi),%bl
		cmp    $0x000002,%bl
		jne    _014637_jump
		mov    (%esi),%bx
		mov    0x000000(%ebp,%ebx,4),%edx
		cmp    $0x000000,%edx
		je     _014637_jump
		push   %edi
		call   *%edx
		pop    %edi
		jmp    _014637_jump

	_01465d_jump:
		pop    %esi
		pop    %ebx
		jmp    _014618_jump

	_014661_jump:
		pop    %ecx
		pop    %ecx
		pop    %ebp
		ret    



_014665_func:
		push   %ebp
		push   %ecx
		push   %ecx
		mov    %ecx,%ebp
		mov    %edx,%esi
		mov    $0x0000f0,%ecx
		add    0x000008(%ebx),%edi
		add    $0x000050,%edi
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _0146d2_jump
		movl   $0x00000c,0x000004(%esp)
		jmp    _01469a_jump

	_014689_jump:
		decl   0x000004(%esp)
		je     _0146d2_jump
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _0146d2_jump
		add    0x000008(%ebx),%edi

	_01469a_jump:
		push   %ebx
		push   %esi
		xor    %ebx,%ebx
		movl   $0x000014,0x000008(%esp)
		jmp    _0146b4_jump

	_0146a8_jump:
		add    $0x000006,%esi
		add    $0x000004,%edi
		decl   0x000008(%esp)
		je     _0146ce_jump

	_0146b4_jump:
		mov    0x000004(%esi),%bl
		cmp    $0x000002,%bl
		jne    _0146a8_jump
		mov    (%esi),%bx
		mov    0x000000(%ebp,%ebx,4),%edx
		cmp    $0x000000,%edx
		je     _0146a8_jump
		push   %edi
		call   *%edx
		pop    %edi
		jmp    _0146a8_jump

	_0146ce_jump:
		pop    %esi
		pop    %ebx
		jmp    _014689_jump

	_0146d2_jump:
		pop    %ecx
		pop    %ecx
		pop    %ebp
		ret    



_01474b_func:
		pusha  
		mov    $0x000f02,%eax
		mov    $0x0003c4,%edx
		sub    $0x000002,%edi
		out    %ax,(%dx)
		mov    $0x000140,%ebx
		xor    %eax,%eax
		mov    %edi,%esi
		mov    $0x000011,%ecx
		add    $0x000050,%esi

	_01476c_jump:
		mov    %eax,(%edi)
		mov    %eax,(%esi)
		mov    %eax,0x0000a0(%edi)
		mov    %eax,0x0000a0(%esi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%esi,%ebx,1)
		mov    %eax,0x0000a0(%edi,%ebx,1)
		mov    %eax,0x0000a0(%esi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,(%esi,%ebx,2)
		mov    %eax,0x0000a0(%edi,%ebx,2)
		mov    %eax,0x0000a0(%esi,%ebx,2)
		add    $0x0003c0,%edi
		add    $0x0003c0,%esi
		dec    %ecx
		jne    _01476c_jump
		popa   
		ret    



_0147b5_func:
		pusha  
		push   %edi
		mov    $0x000f02,%eax
		mov    $0x0003c4,%edx
		sub    $0x000002,%edi
		out    %ax,(%dx)
		mov    $0x000140,%ebx
		xor    %eax,%eax
		mov    %edi,%esi
		mov    $0x000011,%ecx
		add    $0x000050,%esi

	_0147d7_jump:
		mov    %eax,(%edi)
		mov    %eax,(%esi)
		mov    %eax,0x0000a0(%edi)
		mov    %eax,0x0000a0(%esi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%esi,%ebx,1)
		mov    %eax,0x0000a0(%edi,%ebx,1)
		mov    %eax,0x0000a0(%esi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,(%esi,%ebx,2)
		mov    %eax,0x0000a0(%edi,%ebx,2)
		mov    %eax,0x0000a0(%esi,%ebx,2)
		add    $0x0003c0,%edi
		add    $0x0003c0,%esi
		dec    %ecx
		jne    _0147d7_jump
		pop    %edi
		cld    
		xor    %eax,%eax
		mov    $0x000140,%ecx
		rep stos %eax,%es:(%edi)
		add    $0x003700,%edi
		mov    $0x0000a0,%ecx
		rep stos %eax,%es:(%edi)
		popa   
		ret    



_014838_func:
		push   %edx
		mov    $0x0003d4,%dx
		mov    $0x00000c,%al
		out    %ax,(%dx)
		pop    %edx
		ret    



_0148da_func:
		pusha  
		mov    $0x000013,%ax
		int    $0x000010
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09195e_data
		mov    $0x0003ce,%dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09195f_data
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_091960_data
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_091961_data
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_091962_data
		mov    $0x0003d4,%dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_091963_data
		popa   
		ret    



_01493d_func:
		pusha  
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09195e_data,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09195f_data,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		mov    _091960_data,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		mov    _091961_data,%al
		out    %al,(%dx)
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		mov    _091962_data,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		mov    _091963_data,%al
		out    %al,(%dx)
		popa   
		ret    



_014996_func:
		pusha  
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09195e_data,%al
		and    $0x0000ef,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09195f_data,%al
		and    $0x0000fd,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		mov    _091960_data,%al
		and    $0x0000f7,%al
		or     $0x000004,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		mov    _091961_data,%al
		out    %al,(%dx)
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		mov    _091962_data,%al
		and    $0x0000bf,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		mov    _091963_data,%al
		or     $0x000040,%al
		out    %al,(%dx)
		popa   
		ret    



_0149fb_func:
		pusha  
		mov    $0x000000,%eax
		mov    $0x000050,%ebx
		mov    $0x000140,%ecx
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		popa   
		ret    



_014a43_func:
		pusha  
		mov    $0x000050,%ebp
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		popa   
		ret    



_014acd_func:
		pusha  
		mov    $0x000003,%ax
		int    $0x000010
		popa   
		ret    

_014ad6_switch:
		.long   0

_014ada_switch:
		.long   0

_014ade_switch:
		.long   0

_014ae2_switch:
		.long   0

_014ae6_switch:
		.long   0

_014aea_switch:
		.long   0

_014aee_switch:
		.long   0

_014af2_switch:
		.long   0

_014af6_switch:
		.long   0

_014afa_switch:
		.long   0

_014afe_switch:
		.long   0

_014b02_switch:
		.long   0

_014b06_switch:
		.long   0

_014b0a_switch:
		.long   0




_014b0e_func:
		pusha  
		dec    %esi
		mov    %esi,_014af6_switch
		push   %ecx
		push   %edi
		mov    0x000020(%ecx),%ebx
		mov    0x000024(%ecx),%edx
		sar    $0x000002,%ebx
		mov    $0xa1a1a1a1,%eax
		inc    %ebx

	_014b27_jump:
		mov    %ebx,%ecx
		rep stos %eax,%es:(%edi)
		dec    %edx
		jne    _014b27_jump
		pop    %edi
		pop    %ecx
		mov    (%ecx),%eax
		mov    0x000004(%ecx),%ebx
		mov    %eax,_014ad6_switch
		mov    %ebx,_014ada_switch
		mov    0x000008(%ecx),%eax
		mov    0x00000c(%ecx),%ebx
		mov    %eax,_014ade_switch
		mov    %ebx,_014ae2_switch
		mov    0x000010(%ecx),%eax
		mov    0x000014(%ecx),%ebx
		mov    %eax,_014ae6_switch
		mov    %ebx,_014aea_switch
		mov    0x000018(%ecx),%eax
		mov    0x00001c(%ecx),%ebx
		mov    %eax,_014aee_switch
		mov    %ebx,_014af2_switch
		mov    %ebx,%edx
		add    %eax,%edx
		mov    %edx,_014b0a_switch
		mov    0x00002c(%ecx),%ebx
		mov    0x000030(%ecx),%eax
		mov    %ebx,_014b06_switch
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _014b0a_switch
		mov    %eax,_014b02_switch
		mov    _014af6_switch,%esi
		add    0x000028(%ecx),%edi
		mov    _014ade_switch,%eax
		mov    _014ae2_switch,%ebx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %edx,%edx
		cmp    %ebx,%eax
		jbe    _014c92_jump
		mov    _014af2_switch,%ebx
		push   %eax
		mov    _014b06_switch,%eax
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _014ade_switch
		mov    %eax,_014afe_switch
		mov    %eax,_014afa_switch
		pop    %eax
		xor    %edx,%edx

	_014be1_jump:
		push   %ecx
		push   %edi
		push   %ebp
		push   %ebx
		push   %edx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %ebx,%ebx

	_014bec_jump:
		push   %ebx
		shr    $0x000010,%ebx
		mov    (%esi,%ebx,1),%edx
		inc    %ebp
		pop    %ebx
		cmpb   $0x0000a1,(%edi)
		jne    _014bfc_jump
		mov    %dh,(%edi)

	_014bfc_jump:
		add    _014afe_switch,%ebx
		add    _014ae2_switch,%ecx
		cmp    %eax,%ebp
		jge    _014c28_jump
		add    _014ad6_switch,%edi
		cmp    _014ade_switch,%ecx
		jbe    _014bec_jump
		add    _014ada_switch,%edi
		sub    _014ade_switch,%ecx
		jmp    _014bec_jump

	_014c28_jump:
		pop    %edx
		pop    %ebx
		pop    %ebp
		pop    %edi
		pop    %ecx
		inc    %ebp
		mov    _014af6_switch,%esi
		add    _014aee_switch,%ecx
		add    _014aea_switch,%edi
		add    _014b02_switch,%edx
		push   %edx
		shr    $0x000010,%edx

	_014c4a_jump:
		je     _014c55_jump
		add    _014b06_switch,%esi
		dec    %edx
		jmp    _014c4a_jump

	_014c55_jump:
		mov    _014afa_switch,%edx
		mov    %edx,_014afe_switch
		pop    %edx
		cmp    %ebx,%ebp
		jge    _014d67_jump
		cmp    $0x000000,%ecx
		jle    _014be1_jump
		add    _014ae6_switch,%edi
		dec    %ebp
		sub    _014b0a_switch,%ecx
		sub    _014aea_switch,%edi
		subl   $0x000040,_014afe_switch
		jmp    _014be1_jump

	_014c92_jump:
		mov    _014b06_switch,%eax
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _014ae2_switch
		mov    %eax,_014afe_switch
		mov    %eax,_014afa_switch
		xor    %edx,%edx
		mov    _014aee_switch,%ebx
		mov    _014ae2_switch,%eax

	_014cba_jump:
		push   %ecx
		push   %edi
		push   %ebp
		push   %ebx
		push   %edx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %ebx,%ebx

	_014cc5_jump:
		push   %ebx
		shr    $0x000010,%ebx
		mov    (%esi,%ebx,1),%edx
		inc    %ebp
		pop    %ebx
		cmpb   $0x000081,(%edi)
		jne    _014cd5_jump
		mov    %dh,(%edi)

	_014cd5_jump:
		add    _014afe_switch,%ebx
		add    _014ade_switch,%ecx
		cmp    %eax,%ebp
		jge    _014cfe_jump
		add    _014ada_switch,%edi
		cmp    $0x000000,%ecx
		jle    _014cc5_jump
		add    _014ad6_switch,%edi
		sub    _014ae2_switch,%ecx
		jmp    _014cc5_jump

	_014cfe_jump:
		pop    %edx
		pop    %ebx
		pop    %ebp
		pop    %edi
		pop    %ecx
		inc    %ebp
		mov    _014af6_switch,%esi
		add    _014af2_switch,%ecx
		add    _014ae6_switch,%edi
		add    _014b02_switch,%edx
		push   %edx
		shr    $0x000010,%edx

	_014d20_jump:
		je     _014d2b_jump
		add    _014b06_switch,%esi
		dec    %edx
		jmp    _014d20_jump

	_014d2b_jump:
		mov    _014afa_switch,%edx
		mov    %edx,_014afe_switch
		pop    %edx
		cmp    %ebx,%ebp
		jge    _014d67_jump
		cmp    _014aee_switch,%ecx
		jle    _014cba_jump
		add    _014aea_switch,%edi
		dec    %ebp
		sub    _014b0a_switch,%ecx
		sub    _014ae6_switch,%edi
		subl   $0x000040,_014afe_switch
		jmp    _014cba_jump

	_014d67_jump:
		popa   
		ret    



_014d9d_func:
		push   %ecx
		mov    $0x003e80,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %ecx
		ret    



_014da7_func:
		imul   $0x000180,%ebx,%ebx
		add    %ebx,%edi
		add    %eax,%edi
		movw   $0x000c00,0x000001(%edi)
		movl   $0xc0e0a00,0x000180(%edi)
		movl   $0x0a0900,0x000300(%edi)
		movw   $0x000000,0x000481(%edi)
		ret    



_014dd5_func:
		pusha  
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %eax,%edi
		mov    $0x000000,%eax
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_014dec_jump:
		push   %ecx
		mov    %edx,%ecx
		test   $0x000001,%ecx
		je     _014df9_jump
		stos   %al,%es:(%edi)
		dec    %ecx

	_014df9_jump:
		test   $0x000002,%ecx
		je     _014e06_jump
		stos   %ax,%es:(%edi)
		sub    $0x000002,%ecx

	_014e06_jump:
		sar    $0x000002,%ecx
		rep stos %eax,%es:(%edi)
		add    %ebx,%edi
		pop    %ecx
		loop   _014dec_jump
		popa   
		ret    



_014e12_func:
		cmp    $0x000002,%eax
		je     _014e57_jump
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %esi,%edi
		mov    %edi,%esi
		add    $0x000141,%esi
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_014e30_jump:
		push   %ecx
		mov    %edx,%ecx

	_014e33_jump:
		mov    (%esi),%al
		mov    %al,%ah
		and    $0x0000e0,%ah
		sub    $0x000005,%al
		xor    %al,%ah
		and    $0x0000e0,%ah
		je     _014e47_jump
		mov    %ah,%al
		and    $0x0000e0,%al

	_014e47_jump:
		mov    %al,(%edi)
		inc    %edi
		inc    %esi
		dec    %ecx
		jne    _014e33_jump
		add    %ebx,%edi
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _014e30_jump
		ret    

	_014e57_jump:
		add    %ecx,%ebx
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %edx,%edi
		add    %esi,%edi
		sub    $0x000141,%edi
		mov    %edi,%esi
		sub    $0x000141,%esi
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_014e7a_jump:
		push   %ecx
		mov    %edx,%ecx

	_014e7d_jump:
		mov    (%esi),%al
		mov    %al,%ah
		and    $0x0000e0,%ah
		add    $0x000005,%al
		xor    %al,%ah
		and    $0x0000e0,%ah
		je     _014e91_jump
		mov    %ah,%al
		or     $0x00001f,%al

	_014e91_jump:
		mov    %al,(%edi)
		dec    %edi
		dec    %esi
		dec    %ecx
		jne    _014e7d_jump
		sub    %ebx,%edi
		sub    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _014e7a_jump
		ret    



_014ea1_func:
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %esi,%edi
		dec    %edx
		mov    %ecx,%ebx
		push   %edi

	_014eaf_jump:
		mov    %al,(%edi)
		add    $0x000140,%edi
		dec    %ecx
		jne    _014eaf_jump
		mov    %edx,%ecx
		sub    $0x000140,%edi
		inc    %edi
		xchg   %al,%ah
		rep stos %al,%es:(%edi)
		add    $0x00013f,%edi
		sub    %edx,%edi
		mov    %edx,%ecx
		inc    %ecx
		rep stos %al,%es:(%edi)
		pop    %edi
		xchg   %al,%ah
		mov    %edx,%ecx
		inc    %ecx
		rep stos %al,%es:(%edi)
		mov    %ebx,%ecx
		dec    %ecx
		mov    %ah,%al
		add    $0x00013f,%edi

	_014ee7_jump:
		mov    %al,(%edi)
		mov    %al,-0x00013f(%edi)
		add    $0x000140,%edi
		dec    %ecx
		jne    _014ee7_jump
		mov    %al,-0x00013f(%edi)
		ret    



_014eff_func:
		imul   0x000004(%esp),%ebx
		add    %ebx,%esi
		add    %eax,%esi
		imul   $0x000140,%edx,%edx
		add    %edx,%edi
		add    %ecx,%edi
		mov    $0x000140,%ebx
		sub    0x000008(%esp),%ebx
		mov    0x000004(%esp),%edx
		sub    0x000008(%esp),%edx
		mov    0x00000c(%esp),%eax

	_014f27_jump:
		mov    0x000008(%esp),%ecx
		test   $0x000001,%ecx
		je     _014f35_jump
		movsb  %ds:(%esi),%es:(%edi)
		dec    %ecx

	_014f35_jump:
		test   $0x000002,%ecx
		je     _014f42_jump
		movsw  %ds:(%esi),%es:(%edi)
		sub    $0x000002,%ecx

	_014f42_jump:
		sar    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %ebx,%edi
		add    %edx,%esi
		dec    %eax
		jne    _014f27_jump
		ret    $0x00000c



_014f51_func:
		push   %ecx
		push   %eax
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    %esi,%edi
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		pop    %eax
		pop    %ecx
		ret    

	_014f6c_jump:
		inc    %eax
		add    %eax,(%eax)
	_014f70_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %al,0x000001(%eax)
		add    %al,(%eax)



_014f74_func:
		push   %ecx
		push   %eax
		mov    $0x003e80,%ecx
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		pop    %eax
		pop    %ecx
		ret    



_014f82_func:
		pusha  
		sub    $0x000004,%esp
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_014f90_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _014f6c_jump,%ebx
		add    _014f70_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _014f90_jump
		add    $0x000004,%esp
		popa   
		ret    



_014fad_func:
		pusha  
		mov    $0x000140,%ebx
		lea    0x000140(%edx),%eax
		shr    %ecx

	_014fbb_jump:
		movl   $0x000000,(%edi)
		movl   $0x000000,(%edi,%edx,1)
		mov    %edi,%esi
		movl   $0x000000,(%edi,%ebx,1)
		movl   $0x000000,(%edi,%eax,1)
		dec    %ecx
		lea    (%esi,%ebx,2),%edi
		jne    _014fbb_jump
		popa   
		ret    



_014fe0_func:
		pusha  
		cmp    $0x000000,%ecx
		jle    _015020_jump
		cmp    $0x000000,%ebx
		jle    _015020_jump
		sub    $0x000008,%esp
		mov    %ebx,0x000004(%esp)
		mov    %edx,%eax
		mov    %ecx,%ebx
		mov    %esi,%ebp
		shr    $0x000002,%ebx
		and    $0x000003,%ecx
		jne    _015001_jump
		inc    %ebx

	_015001_jump:
		mov    %edi,(%esp)
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		lea    0x000000(%ebp,%edx,1),%esi
		mov    (%esp),%edi
		add    %eax,%edx
		add    _014f6c_jump,%edi
		decl   0x000004(%esp)
		jne    _015001_jump
		add    $0x000008,%esp

	_015020_jump:
		popa   
		ret    



_015022_func:
		pusha  
		mov    0x000200(%esi),%eax
		sub    $0x000004,%esp
		movl   $0x000004,(%esp)

	_015033_jump:
		test   $0x40000000,%eax
		jne    _01507e_jump
		test   $0x80000000,%eax
		jne    _015191_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_01507e_jump:
		add    _014f6c_jump,%edi
		add    $0x000010,%esi
		test   $0x10000000,%eax
		jne    _0150d2_jump
		test   $0x20000000,%eax
		jne    _0151ac_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_0150d2_jump:
		add    _014f6c_jump,%edi
		add    $0x000010,%esi
		test   $0x4000000,%eax
		jne    _015126_jump
		test   $0x8000000,%eax
		jne    _0151c7_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_015126_jump:
		add    _014f6c_jump,%edi
		add    $0x000010,%esi
		test   $0x1000000,%eax
		jne    _01517a_jump
		test   $0x2000000,%eax
		jne    _0151e2_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_01517a_jump:
		add    _014f6c_jump,%edi
		add    $0x000010,%esi
		shl    $0x000008,%eax
		decl   (%esp)
		jne    _015033_jump
		jmp    _0151fa_jump

	_015191_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _01507e_jump

	_0151ac_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _0150d2_jump

	_0151c7_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _015126_jump

	_0151e2_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _01517a_jump

	_0151fa_jump:
		add    $0x000004,%esp
		popa   
		ret    



_0151ff_func:
		pusha  
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		mov    0x000010(%esi),%ebx
		mov    0x000014(%esi),%ecx
		mov    0x000018(%esi),%edx
		mov    0x00001c(%esi),%ebp
		mov    %ebx,0x000140(%edi)
		mov    %ecx,0x000144(%edi)
		mov    %edx,0x000148(%edi)
		mov    %ebp,0x00014c(%edi)
		mov    0x000020(%esi),%ebx
		mov    0x000024(%esi),%ecx
		mov    0x000028(%esi),%edx
		mov    0x00002c(%esi),%ebp
		mov    %ebx,0x000280(%edi)
		mov    %ecx,0x000284(%edi)
		mov    %edx,0x000288(%edi)
		mov    %ebp,0x00028c(%edi)
		mov    0x000030(%esi),%ebx
		mov    0x000034(%esi),%ecx
		mov    0x000038(%esi),%edx
		mov    0x00003c(%esi),%ebp
		mov    %ebx,0x0003c0(%edi)
		mov    %ecx,0x0003c4(%edi)
		mov    %edx,0x0003c8(%edi)
		mov    %ebp,0x0003cc(%edi)
		mov    0x000040(%esi),%ebx
		mov    0x000044(%esi),%ecx
		mov    0x000048(%esi),%edx
		mov    0x00004c(%esi),%ebp
		mov    %ebx,0x000500(%edi)
		mov    %ecx,0x000504(%edi)
		mov    %edx,0x000508(%edi)
		mov    %ebp,0x00050c(%edi)
		mov    0x000050(%esi),%ebx
		mov    0x000054(%esi),%ecx
		mov    0x000058(%esi),%edx
		mov    0x00005c(%esi),%ebp
		mov    %ebx,0x000640(%edi)
		mov    %ecx,0x000644(%edi)
		mov    %edx,0x000648(%edi)
		mov    %ebp,0x00064c(%edi)
		mov    0x000060(%esi),%ebx
		mov    0x000064(%esi),%ecx
		mov    0x000068(%esi),%edx
		mov    0x00006c(%esi),%ebp
		mov    %ebx,0x000780(%edi)
		mov    %ecx,0x000784(%edi)
		mov    %edx,0x000788(%edi)
		mov    %ebp,0x00078c(%edi)
		mov    0x000070(%esi),%ebx
		mov    0x000074(%esi),%ecx
		mov    0x000078(%esi),%edx
		mov    0x00007c(%esi),%ebp
		mov    %ebx,0x0008c0(%edi)
		mov    %ecx,0x0008c4(%edi)
		mov    %edx,0x0008c8(%edi)
		mov    %ebp,0x0008cc(%edi)
		mov    0x000080(%esi),%ebx
		mov    0x000084(%esi),%ecx
		mov    0x000088(%esi),%edx
		mov    0x00008c(%esi),%ebp
		mov    %ebx,0x000a00(%edi)
		mov    %ecx,0x000a04(%edi)
		mov    %edx,0x000a08(%edi)
		mov    %ebp,0x000a0c(%edi)
		mov    0x000090(%esi),%ebx
		mov    0x000094(%esi),%ecx
		mov    0x000098(%esi),%edx
		mov    0x00009c(%esi),%ebp
		mov    %ebx,0x000b40(%edi)
		mov    %ecx,0x000b44(%edi)
		mov    %edx,0x000b48(%edi)
		mov    %ebp,0x000b4c(%edi)
		mov    0x0000a0(%esi),%ebx
		mov    0x0000a4(%esi),%ecx
		mov    0x0000a8(%esi),%edx
		mov    0x0000ac(%esi),%ebp
		mov    %ebx,0x000c80(%edi)
		mov    %ecx,0x000c84(%edi)
		mov    %edx,0x000c88(%edi)
		mov    %ebp,0x000c8c(%edi)
		mov    0x0000b0(%esi),%ebx
		mov    0x0000b4(%esi),%ecx
		mov    0x0000b8(%esi),%edx
		mov    0x0000bc(%esi),%ebp
		mov    %ebx,0x000dc0(%edi)
		mov    %ecx,0x000dc4(%edi)
		mov    %edx,0x000dc8(%edi)
		mov    %ebp,0x000dcc(%edi)
		mov    0x0000c0(%esi),%ebx
		mov    0x0000c4(%esi),%ecx
		mov    0x0000c8(%esi),%edx
		mov    0x0000cc(%esi),%ebp
		mov    %ebx,0x000f00(%edi)
		mov    %ecx,0x000f04(%edi)
		mov    %edx,0x000f08(%edi)
		mov    %ebp,0x000f0c(%edi)
		mov    0x0000d0(%esi),%ebx
		mov    0x0000d4(%esi),%ecx
		mov    0x0000d8(%esi),%edx
		mov    0x0000dc(%esi),%ebp
		mov    %ebx,0x001040(%edi)
		mov    %ecx,0x001044(%edi)
		mov    %edx,0x001048(%edi)
		mov    %ebp,0x00104c(%edi)
		mov    0x0000e0(%esi),%ebx
		mov    0x0000e4(%esi),%ecx
		mov    0x0000e8(%esi),%edx
		mov    0x0000ec(%esi),%ebp
		mov    %ebx,0x001180(%edi)
		mov    %ecx,0x001184(%edi)
		mov    %edx,0x001188(%edi)
		mov    %ebp,0x00118c(%edi)
		mov    0x0000f0(%esi),%ebx
		mov    0x0000f4(%esi),%ecx
		mov    0x0000f8(%esi),%edx
		mov    0x0000fc(%esi),%ebp
		mov    %ebx,0x0012c0(%edi)
		mov    %ecx,0x0012c4(%edi)
		mov    %edx,0x0012c8(%edi)
		mov    %ebp,0x0012cc(%edi)
		popa   
		ret    

_015494_switch:
		.long   0




_015498_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_015494_switch
		cmp    _0ce50c_data,%eax
		jl     _0154e7_jump
		add    %eax,%edx
		cmp    _0ce510_data,%edx
		ja     _0154d0_jump
		mov    $0x000004,%cl

	_0154b6_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _0ce504_data,%ebx
		jl     _015520_jump

	_0154c2_jump:
		add    %ebx,%edx
		cmp    _0ce508_data,%edx
		ja     _01550c_jump

	_0154cc_jump:
		clc    
		ret    

	_0154ce_jump:
		stc    
		ret    

	_0154d0_jump:
		cmp    _0ce510_data,%eax
		jae    _0154ce_jump
		mov    _0ce510_data,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _01556d_jump

	_0154e7_jump:
		sub    _0ce50c_data,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _0154ce_jump
		and    $0x00fffc,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		lea    (%esi,%eax,1),%esi
		lea    (%edi,%eax,1),%edi
		mov    _0ce50c_data,%eax
		shr    $0x000002,%cl
		jmp    _0154b6_jump

	_01550c_jump:
		cmp    _0ce508_data,%ebx
		jae    _0154ce_jump
		mov    _0ce508_data,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _0154cc_jump

	_015520_jump:
		add    %ebx,%edx
		cmp    _0ce504_data,%edx
		jle    _0154ce_jump
		xor    %edx,%edx
		sub    _0ce504_data,%ebx
		mov    %ch,%dl
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _015494_switch,%eax
		mul    %bx
		add    %eax,%esi
		mov    _014f6c_jump,%eax
		mul    %bx
		add    %eax,%edi

	_015555_jump:
		shll   $0x000002,0x000008(%esp)
		dec    %ebx
		jne    _015555_jump
		pop    %eax
		mov    _0ce504_data,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _0154c2_jump

	_01556d_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		shr    $0x000002,%cl
		and    $0x000003,%edx
		je     _0154b6_jump
		inc    %cl
		jmp    _0154b6_jump



_015584_func:
		pusha  
		mov    $0x001010,%ecx
		sub    $0x000005,%esp
		mov    0x000200(%esi),%ebp
		mov    %ebp,(%esp)
		call   _015498_func
		jb     _015717_jump
		mov    (%esp),%eax
		mov    %ch,0x000004(%esp)
		cmp    $0x000003,%cl
		je     _015639_jump
		cmp    $0x000002,%cl
		je     _01569a_jump
		cmp    $0x000001,%cl
		je     _0156e3_jump

	_0155c3_jump:
		test   $0x40000000,%eax
		jne    _0155e7_jump
		test   $0x80000000,%eax
		je     _0155fe_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)

	_0155e7_jump:
		add    _014f6c_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _0155c3_jump
		jmp    _015717_jump

	_0155fe_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)
		jmp    _0155e7_jump

	_015639_jump:
		test   $0x40000000,%eax
		jne    _015657_jump
		test   $0x80000000,%eax
		je     _01566e_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)

	_015657_jump:
		add    _014f6c_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _015639_jump
		jmp    _015717_jump

	_01566e_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x000008(%esi),%ebx
		and    %ecx,0x000008(%edi)
		or     %ebx,0x000008(%edi)
		jmp    _015657_jump

	_01569a_jump:
		test   $0x40000000,%eax
		jne    _0156b2_jump
		test   $0x80000000,%eax
		je     _0156c6_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)

	_0156b2_jump:
		add    _014f6c_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _01569a_jump
		jmp    _015717_jump

	_0156c6_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		jmp    _0156b2_jump

	_0156e3_jump:
		test   $0x40000000,%eax
		jne    _0156f5_jump
		test   $0x80000000,%eax
		je     _015709_jump
		mov    (%esi),%ebx
		mov    %ebx,(%edi)

	_0156f5_jump:
		add    _014f6c_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _0156e3_jump
		jmp    _015717_jump

	_015709_jump:
		mov    0x000100(%esi),%ecx
		mov    (%esi),%ebx
		and    %ecx,(%edi)
		or     %ebx,(%edi)
		jmp    _0156f5_jump

	_015717_jump:
		add    $0x000005,%esp
		popa   
		ret    



_01571c_func:
		pusha  
		mov    $0x001010,%ecx
		sub    $0x000005,%esp
		movl   $0x000000,(%esp)
		call   _015498_func
		jb     _0157c2_jump
		mov    %ch,0x000004(%esp)
		cmp    $0x000003,%cl
		je     _015771_jump
		cmp    $0x000002,%cl
		je     _015792_jump
		cmp    $0x000001,%cl
		je     _0157ad_jump

	_01574a_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		add    _014f6c_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _01574a_jump
		jmp    _0157c2_jump

	_015771_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		add    _014f6c_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _015771_jump
		jmp    _0157c2_jump

	_015792_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		add    _014f6c_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _015792_jump
		jmp    _0157c2_jump

	_0157ad_jump:
		mov    (%esi),%ebx
		mov    %ebx,(%edi)
		add    _014f6c_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _0157ad_jump
		jmp    _0157c2_jump

	_0157c2_jump:
		add    $0x000005,%esp
		popa   
		ret    



_0157c7_func:
		pusha  
		add    _091af4_data(,%ebx,4),%eax
		mov    %esi,%edx
		mov    %dl,(%edi,%eax,1)
		popa   
		ret    

_0157d6_switch:
		.long   0

_0157da_switch:
		.long   0

_0157de_switch:
		.long   0

_0157e2_switch:
		.long   0




_0157e6_func:
		mov    %eax,_0157d6_switch
		mov    %ebx,_0157da_switch
		mov    %ecx,_0157de_switch
		mov    %edx,_0157e2_switch
		ret    



_0157fe_func:
		push   %eax
		push   %edi
		cmp    _0157de_switch,%eax
		jl     _01582b_jump
		cmp    _0157e2_switch,%eax
		ja     _01582b_jump
		cmp    _0157d6_switch,%ebx
		jl     _01582b_jump
		cmp    _0157da_switch,%ebx
		ja     _01582b_jump
		add    _091af4_data(,%ebx,4),%eax
		movb   $0x000005,(%edi,%eax,1)

	_01582b_jump:
		pop    %edi
		pop    %eax
		ret    



_01582e_func:
		push   %eax
		push   %edi
		cmp    _0157de_switch,%eax
		jl     _01585b_jump
		cmp    _0157e2_switch,%eax
		ja     _01585b_jump
		cmp    _0157d6_switch,%ebx
		jl     _01585b_jump
		cmp    _0157da_switch,%ebx
		ja     _01585b_jump
		add    _091af4_data(,%ebx,4),%eax
		movb   $0x000007,(%edi,%eax,1)

	_01585b_jump:
		pop    %edi
		pop    %eax
		ret    



_01585e_func:
		push   %edi
		push   %eax
		cmp    _0157de_switch,%eax
		jl     _015897_jump
		cmp    _0157e2_switch,%eax
		ja     _015897_jump
		cmp    _0157d6_switch,%ebx
		jl     _015897_jump
		cmp    _0157da_switch,%ebx
		ja     _015897_jump
		add    _091af4_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000807,(%edi)
		movw   $0x000706,0x000140(%edi)

	_015897_jump:
		pop    %eax
		pop    %edi
		ret    



_01589a_func:
		push   %edi
		push   %eax
		cmp    _0157de_switch,%eax
		jl     _0158e0_jump
		cmp    _0157e2_switch,%eax
		ja     _0158e0_jump
		cmp    _0157d6_switch,%ebx
		jl     _0158e0_jump
		cmp    _0157da_switch,%ebx
		ja     _0158e0_jump
		add    _091af4_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000608,0x000140(%edi)
		movb   $0x000006,0x000142(%edi)
		movb   $0x000006,0x000001(%edi)
		movb   $0x000006,0x000281(%edi)

	_0158e0_jump:
		pop    %eax
		pop    %edi
		ret    



_0158e3_func:
		push   %edi
		push   %eax
		cmp    _0157de_switch,%eax
		jl     _015910_jump
		cmp    _0157e2_switch,%eax
		ja     _015910_jump
		cmp    _0157d6_switch,%ebx
		jl     _015910_jump
		cmp    _0157da_switch,%ebx
		ja     _015910_jump
		add    _091af4_data(,%ebx,4),%eax
		movb   $0x000003,(%edi,%eax,1)

	_015910_jump:
		pop    %eax
		pop    %edi
		ret    



_015913_func:
		push   %edi
		push   %eax
		cmp    _0157de_switch,%eax
		jl     _015961_jump
		cmp    _0157e2_switch,%eax
		ja     _015961_jump
		cmp    _0157d6_switch,%ebx
		jl     _015961_jump
		cmp    _0157da_switch,%ebx
		ja     _015961_jump
		add    _091af4_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000505,0x000001(%edi)
		movl   $0x5070705,0x000140(%edi)
		movl   $0x5070705,0x000280(%edi)
		movw   $0x000505,0x0003c1(%edi)

	_015961_jump:
		pop    %eax
		pop    %edi
		ret    



_015964_func:
		push   %edi
		push   %eax
		cmp    _0157de_switch,%eax
		jl     _01599a_jump
		cmp    _0157e2_switch,%eax
		ja     _01599a_jump
		cmp    _0157d6_switch,%ebx
		jl     _01599a_jump
		cmp    _0157da_switch,%ebx
		ja     _01599a_jump
		add    _091af4_data(,%ebx,4),%eax
		add    %eax,%edi
		movb   $0x000005,0x000140(%edi)
		movb   $0x000004,0x000001(%edi)

	_01599a_jump:
		pop    %eax
		pop    %edi
		ret    



_01599d_func:
		push   %edi
		push   %eax
		cmp    _0157de_switch,%eax
		jl     _0159eb_jump
		cmp    _0157e2_switch,%eax
		ja     _0159eb_jump
		cmp    _0157d6_switch,%ebx
		jl     _0159eb_jump
		cmp    _0157da_switch,%ebx
		ja     _0159eb_jump
		add    _091af4_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000606,0x000001(%edi)
		movl   $0x6080806,0x000140(%edi)
		movl   $0x6080806,0x000280(%edi)
		movw   $0x000606,0x0003c1(%edi)

	_0159eb_jump:
		pop    %eax
		pop    %edi
		ret    



_0159ee_func:
		push   %edi
		push   %eax
		cmp    _0157de_switch,%eax
		jl     _015a38_jump
		cmp    _0157e2_switch,%eax
		ja     _015a38_jump
		cmp    _0157d6_switch,%ebx
		jl     _015a38_jump
		cmp    _0157da_switch,%ebx
		ja     _015a38_jump
		add    _091af4_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000204,0x000001(%edi)
		movw   $0x000305,0x000140(%edi)
		movb   $0x000002,0x000142(%edi)
		movw   $0x000603,0x000280(%edi)

	_015a38_jump:
		pop    %eax
		pop    %edi
		ret    



_015a3b_func:
		push   %edi
		push   %eax
		cmp    _0157de_switch,%eax
		jl     _015aaf_jump
		cmp    _0157e2_switch,%eax
		ja     _015aaf_jump
		cmp    _0157d6_switch,%ebx
		jl     _015aaf_jump
		cmp    _0157da_switch,%ebx
		ja     _015aaf_jump
		add    _091af4_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000606,0x000002(%edi)
		movl   $0x7080807,0x000141(%edi)
		movl   $0x8080806,0x000280(%edi)
		movl   $0x8080806,0x0003c0(%edi)
		movl   $0x7080807,0x000501(%edi)
		movw   $0x000606,0x000642(%edi)
		movw   $0x000608,0x000284(%edi)
		movw   $0x000608,0x0003c4(%edi)

	_015aaf_jump:
		pop    %eax
		pop    %edi
		ret    



_015ab2_func:
		push   %edi
		push   %eax
		cmp    _0157de_switch,%eax
		jl     _015b0c_jump
		cmp    _0157e2_switch,%eax
		ja     _015b0c_jump
		cmp    _0157d6_switch,%ebx
		jl     _015b0c_jump
		cmp    _0157da_switch,%ebx
		ja     _015b0c_jump
		add    _091af4_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000203,0x000002(%edi)
		movb   $0x000003,0x000141(%edi)
		movw   $0x000402,0x000142(%edi)
		movw   $0x000405,0x000280(%edi)
		movb   $0x000003,0x000282(%edi)
		movw   $0x000604,0x0003c0(%edi)

	_015b0c_jump:
		pop    %eax
		pop    %edi
		ret    

	_015b0f_jump:
		inc    %eax
		add    %eax,(%eax)
	_015b13_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %al,0x000001(%eax)
		add    %al,(%eax)

_015b17_switch:
		.long   0




_015d13_func:
		pusha  
		cli    
		cld    
		movw   $0x000000,_0ce814_data
		movw   $0x000000,_0ce816_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0c6966_data
		sbbw   $0x000000,_0c6966_data
		shr    %al
		movw   $0x000001,_0c6968_data
		sbbw   $0x000000,_0c6968_data
		shr    %al
		movw   $0x000001,_0c696a_data
		sbbw   $0x000000,_0c696a_data
		shr    %al
		movw   $0x000001,_0c696c_data
		sbbw   $0x000000,_0c696c_data
		and    $0x000003,%ebx
		jne    _015db2_jump
		mov    $0x0007d0,%ebx
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_015d8b_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		je     _015d9a_jump
		incw   _0ce814_data

	_015d9a_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		je     _015da8_jump
		incw   _0ce816_data

	_015da8_jump:
		dec    %ebx
		je     _015db2_jump
		and    $0x000003,%ebp
		jne    _015d8b_jump
		jmp    _015dce_jump

	_015db2_jump:
		mov    _0ce7fa_data,%bx
		mov    %bx,_0ce814_data
		mov    _0ce7fc_data,%bx
		mov    %bx,_0ce816_data

	_015dce_jump:
		sti    
		popa   
		ret    

	_0162d3_jump:
		or     %al,(%eax)
		add    %al,(%eax)

	_0162d7_jump:
		cmp    %al,(%ecx)
		add    %al,(%eax)

_0162db_switch:
		.long   0


	_0162df_jump:
		enter  $0x000000,$0x000000



_0162e3_func:
		movl   $0x000008,_0162d3_jump
		movl   $0x000138,_0162d7_jump
		movl   $0x000000,_0162db_switch
		movl   $0x0000c8,_0162df_jump
		ret    



_01630c_func:
		push   %ebp
		push   %edi
		mov    _0162d3_jump,%ebp
		mov    %ebp,(%eax)
		mov    _0162d7_jump,%edi
		mov    %edi,(%ebx)
		mov    _0162db_switch,%ebp
		mov    %ebp,(%ecx)
		mov    _0162df_jump,%edi
		mov    %edi,(%edx)
		pop    %edi
		pop    %ebp
		ret    



_016349_func:
		cmp    $0x000000,%eax
		jge    _016353_jump
		mov    $0x000000,%eax

	_016353_jump:
		cmp    $0x000140,%eax
		jle    _01635f_jump
		mov    $0x000140,%eax

	_01635f_jump:
		mov    %eax,_0162d3_jump
		cmp    $0x000000,%ebx
		jge    _01636e_jump
		mov    $0x000000,%ebx

	_01636e_jump:
		cmp    $0x000140,%ebx
		jle    _01637b_jump
		mov    $0x000140,%ebx

	_01637b_jump:
		mov    %ebx,_0162d7_jump
		cmp    $0x000000,%ecx
		jge    _01638b_jump
		mov    $0x000000,%ecx

	_01638b_jump:
		cmp    $0x0000c8,%ecx
		jle    _016398_jump
		mov    $0x0000c8,%ecx

	_016398_jump:
		mov    %ecx,_0162db_switch
		cmp    $0x000000,%edx
		jge    _0163a8_jump
		mov    $0x000000,%edx

	_0163a8_jump:
		cmp    $0x0000c8,%edx
		jle    _0163b5_jump
		mov    $0x0000c8,%edx

	_0163b5_jump:
		mov    %edx,_0162df_jump
		ret    



_0163bc_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092138_data
		cmp    _0162d3_jump,%eax
		jl     _016406_jump

	_0163ce_jump:
		add    %eax,%edx
		cmp    _0162d7_jump,%edx
		ja     _0163f2_jump

	_0163d8_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _0162db_switch,%ebx
		jl     _016438_jump

	_0163e4_jump:
		add    %ebx,%edx
		cmp    _0162df_jump,%edx
		ja     _016424_jump

	_0163ee_jump:
		clc    
		ret    

	_0163f0_jump:
		stc    
		ret    

	_0163f2_jump:
		cmp    _0162d7_jump,%eax
		jae    _0163f0_jump
		mov    _0162d7_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _0163d8_jump

	_016406_jump:
		sub    _0162d3_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _0163f0_jump
		and    $0x00ffff,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		add    %eax,%esi
		mov    _0162d3_jump,%eax
		jmp    _0163ce_jump

	_016424_jump:
		cmp    _0162df_jump,%ebx
		jae    _0163f0_jump
		mov    _0162df_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _0163ee_jump

	_016438_jump:
		add    %ebx,%edx
		cmp    _0162db_switch,%edx
		jle    _0163f0_jump
		sub    _0162db_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _092138_data,%eax
		mul    %bx
		add    %eax,%esi
		pop    %eax
		mov    _0162db_switch,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _0163e4_jump



_016472_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092138_data
		cmp    _0162d3_jump,%eax
		jl     _0164c3_jump

	_016484_jump:
		add    %eax,%edx
		cmp    _0162d7_jump,%edx
		ja     _0164a7_jump

	_01648e_jump:
		movzbl %ch,%edx
		cmp    _0162db_switch,%ebx
		jl     _0164f3_jump

	_016499_jump:
		add    %ebx,%edx
		cmp    _0162df_jump,%edx
		ja     _0164df_jump

	_0164a3_jump:
		clc    
		ret    

	_0164a5_jump:
		stc    
		ret    

	_0164a7_jump:
		cmp    _0162d7_jump,%eax
		jae    _0164a5_jump
		mov    _0162d7_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		add    _092138_data,%esi
		sub    %edx,%esi
		jmp    _01648e_jump

	_0164c3_jump:
		sub    _0162d3_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _0164a5_jump
		and    $0x00ffff,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		mov    _0162d3_jump,%eax
		jmp    _016484_jump

	_0164df_jump:
		cmp    _0162df_jump,%ebx
		jae    _0164a5_jump
		mov    _0162df_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _0164a3_jump

	_0164f3_jump:
		add    %ebx,%edx
		cmp    _0162db_switch,%edx
		jle    _0164a5_jump
		sub    _0162db_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _092138_data,%eax
		mul    %bx
		add    %eax,%esi
		pop    %eax
		mov    _0162db_switch,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _016499_jump

_01652d_switch:
		.long   0

_016531_switch:
		.long   0




_016535_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092138_data
		jmp    _01654c_jump



_016541_func:
		call   _0163bc_func
		jb     _0166a7_jump

	_01654c_jump:
		push   %ebp
		mov    _092138_data,%edx
		mov    %edx,_01652d_switch
		add    _091e14_data(,%ebx,4),%edi
		movzbl %ch,%edx
		mov    _091e14_data(,%edx,4),%ebx
		add    %edi,%ebx
		and    $0x0000ff,%ecx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0165cd_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016531_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi

	_0165a9_jump:
		xor    %ebp,%ebp

	_0165ab_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0165b5_jump
		mov    %ah,(%edi)

	_0165b5_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0165ab_jump
		add    _016531_switch,%edi
		add    _01652d_switch,%esi
		cmp    %ebx,%edi
		jb     _0165a9_jump
		pop    %edi
		pop    %esi

	_0165cd_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016618_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016531_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0165f1_jump
		inc    %edi
		mov    $0x000001,%al

	_0165f1_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_0165f4_jump:
		xor    %ebp,%ebp

	_0165f6_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016600_jump
		mov    %ah,(%edi)

	_016600_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0165f6_jump
		add    _016531_switch,%edi
		add    _01652d_switch,%esi
		cmp    %ebx,%edi
		jb     _0165f4_jump
		pop    %edi
		pop    %esi

	_016618_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016663_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016531_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _01663c_jump
		inc    %edi
		mov    $0x000001,%al

	_01663c_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_01663f_jump:
		xor    %ebp,%ebp

	_016641_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01664b_jump
		mov    %ah,(%edi)

	_01664b_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016641_jump
		add    _016531_switch,%edi
		add    _01652d_switch,%esi
		cmp    %ebx,%edi
		jb     _01663f_jump
		pop    %edi
		pop    %esi

	_016663_jump:
		pop    %ecx
		inc    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0166a6_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016531_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016683_jump
		inc    %edi
		mov    $0x000001,%al

	_016683_jump:
		out    %al,(%dx)

	_016684_jump:
		xor    %ebp,%ebp

	_016686_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016690_jump
		mov    %ah,(%edi)

	_016690_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016686_jump
		add    _016531_switch,%edi
		add    _01652d_switch,%esi
		cmp    %ebx,%edi
		jb     _016684_jump

	_0166a6_jump:
		pop    %ebp

	_0166a7_jump:
		ret    



_0166a8_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092138_data
		jmp    _0166bf_jump



_0166b4_func:
		call   _016472_func
		jb     _016825_jump

	_0166bf_jump:
		push   %ebp
		mov    _092138_data,%edx
		mov    %edx,_01652d_switch
		add    _091e14_data(,%ebx,4),%edi
		movzbl %ch,%edx
		mov    _091e14_data(,%edx,4),%ebx
		add    %edi,%ebx
		and    $0x0000ff,%ecx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		add    %ecx,%esi
		dec    %esi
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016745_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016531_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi

	_016721_jump:
		xor    %ebp,%ebp

	_016723_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01672d_jump
		mov    %ah,(%edi)

	_01672d_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016723_jump
		add    _016531_switch,%edi
		add    _01652d_switch,%esi
		cmp    %ebx,%edi
		jb     _016721_jump
		pop    %edi
		pop    %esi

	_016745_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016792_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016531_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _01676b_jump
		inc    %edi
		mov    $0x000001,%al

	_01676b_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_01676e_jump:
		xor    %ebp,%ebp

	_016770_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01677a_jump
		mov    %ah,(%edi)

	_01677a_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016770_jump
		add    _016531_switch,%edi
		add    _01652d_switch,%esi
		cmp    %ebx,%edi
		jb     _01676e_jump
		pop    %edi
		pop    %esi

	_016792_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0167df_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016531_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0167b8_jump
		inc    %edi
		mov    $0x000001,%al

	_0167b8_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_0167bb_jump:
		xor    %ebp,%ebp

	_0167bd_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0167c7_jump
		mov    %ah,(%edi)

	_0167c7_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0167bd_jump
		add    _016531_switch,%edi
		add    _01652d_switch,%esi
		cmp    %ebx,%edi
		jb     _0167bb_jump
		pop    %edi
		pop    %esi

	_0167df_jump:
		pop    %ecx
		dec    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016824_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016531_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016801_jump
		inc    %edi
		mov    $0x000001,%al

	_016801_jump:
		out    %al,(%dx)

	_016802_jump:
		xor    %ebp,%ebp

	_016804_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01680e_jump
		mov    %ah,(%edi)

	_01680e_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016804_jump
		add    _016531_switch,%edi
		add    _01652d_switch,%esi
		cmp    %ebx,%edi
		jb     _016802_jump

	_016824_jump:
		pop    %ebp

	_016825_jump:
		ret    

_016826_switch:
		.long   0

_01682a_switch:
		.long   0




_01682e_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092134_data
		call   _0163bc_func
		jb     _0169c4_jump
		push   %ebp
		mov    _092138_data,%edx
		mov    %edx,_016826_switch
		xor    %edx,%edx
		add    _091e14_data(,%ebx,4),%edi
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		and    $0x0000ff,%ecx
		add    %edi,%ebx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0168d1_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_01682a_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi
		push   %eax
		mov    _092134_data,%eax

	_0168aa_jump:
		xor    %ebp,%ebp

	_0168ac_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0168b8_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_0168b8_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0168ac_jump
		add    _01682a_switch,%edi
		add    _016826_switch,%esi
		cmp    %ebx,%edi
		jb     _0168aa_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_0168d1_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016925_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_01682a_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0168f5_jump
		inc    %edi
		mov    $0x000001,%al

	_0168f5_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092134_data,%eax

	_0168fe_jump:
		xor    %ebp,%ebp

	_016900_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01690c_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_01690c_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016900_jump
		add    _01682a_switch,%edi
		add    _016826_switch,%esi
		cmp    %ebx,%edi
		jb     _0168fe_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016925_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016979_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_01682a_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016949_jump
		inc    %edi
		mov    $0x000001,%al

	_016949_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092134_data,%eax

	_016952_jump:
		xor    %ebp,%ebp

	_016954_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016960_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016960_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016954_jump
		add    _01682a_switch,%edi
		add    _016826_switch,%esi
		cmp    %ebx,%edi
		jb     _016952_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016979_jump:
		pop    %ecx
		inc    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0169c3_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_01682a_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016999_jump
		inc    %edi
		mov    $0x000001,%al

	_016999_jump:
		out    %al,(%dx)

	_01699a_jump:
		xor    %ebp,%ebp
		mov    _092134_data,%eax

	_0169a1_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0169ad_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_0169ad_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0169a1_jump
		add    _01682a_switch,%edi
		add    _016826_switch,%esi
		cmp    %ebx,%edi
		jb     _01699a_jump

	_0169c3_jump:
		pop    %ebp

	_0169c4_jump:
		ret    



_0169c5_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092134_data
		call   _016472_func
		jb     _016b66_jump
		push   %ebp
		mov    _092138_data,%edx
		mov    %edx,_016826_switch
		xor    %edx,%edx
		add    _091e14_data(,%ebx,4),%edi
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		and    $0x0000ff,%ecx
		add    %edi,%ebx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		add    %ecx,%esi
		dec    %esi
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016a6d_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_01682a_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi
		push   %eax
		mov    _092134_data,%eax

	_016a46_jump:
		xor    %ebp,%ebp

	_016a48_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016a54_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016a54_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016a48_jump
		add    _01682a_switch,%edi
		add    _016826_switch,%esi
		cmp    %ebx,%edi
		jb     _016a46_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016a6d_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016ac3_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_01682a_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016a93_jump
		inc    %edi
		mov    $0x000001,%al

	_016a93_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092134_data,%eax

	_016a9c_jump:
		xor    %ebp,%ebp

	_016a9e_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016aaa_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016aaa_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016a9e_jump
		add    _01682a_switch,%edi
		add    _016826_switch,%esi
		cmp    %ebx,%edi
		jb     _016a9c_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016ac3_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016b19_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_01682a_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016ae9_jump
		inc    %edi
		mov    $0x000001,%al

	_016ae9_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092134_data,%eax

	_016af2_jump:
		xor    %ebp,%ebp

	_016af4_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016b00_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016b00_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016af4_jump
		add    _01682a_switch,%edi
		add    _016826_switch,%esi
		cmp    %ebx,%edi
		jb     _016af2_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016b19_jump:
		pop    %ecx
		dec    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016b65_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_01682a_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016b3b_jump
		inc    %edi
		mov    $0x000001,%al

	_016b3b_jump:
		out    %al,(%dx)
		mov    _092134_data,%eax

	_016b41_jump:
		xor    %ebp,%ebp

	_016b43_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016b4f_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016b4f_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016b43_jump
		add    _01682a_switch,%edi
		add    _016826_switch,%esi
		cmp    %ebx,%edi
		jb     _016b41_jump

	_016b65_jump:
		pop    %ebp

	_016b66_jump:
		ret    



_016b67_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092138_data
		jmp    _016b7f_jump

	_016b73_jump:
		call   _0163bc_func
		jb     _016beb_jump
		cmp    $0x000000,%cl
		jbe    _016beb_jump

	_016b7f_jump:
		mov    _091e14_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092138_data,%edx
		xor    %eax,%eax

	_016bb4_jump:
		xor    %ebp,%ebp

	_016bb6_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016bd3_jump
		mov    %al,(%edi,%ebp,1)
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016bb6_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016bb4_jump
		pop    %ebp
		ret    

	_016bd3_jump:
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		cmp    %ecx,%ebp
		jl     _016bb6_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016bb4_jump
		pop    %ebp

	_016beb_jump:
		ret    



_016bec_func:
		call   _0163bc_func
		jb     _016c49_jump
		cmp    $0x000000,%cl
		jbe    _016c49_jump
		mov    _091e14_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092138_data,%edx

	_016c2b_jump:
		xor    %ebp,%ebp

	_016c2d_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x000000,%al
		je     _016c37_jump
		mov    %al,(%edi,%ebp,1)

	_016c37_jump:
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016c2d_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016c2b_jump
		pop    %ebp

	_016c49_jump:
		ret    



_016c4b_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092138_data
		jmp    _016c63_jump

	_016c57_jump:
		call   _016472_func
		jb     _016cd6_jump
		cmp    $0x000000,%cl
		jbe    _016cd6_jump

	_016c63_jump:
		mov    _091e14_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092138_data,%edx
		xor    %eax,%eax

	_016c98_jump:
		xor    %ebp,%ebp
		push   %edi

	_016c9b_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016cbb_jump
		mov    %al,-0x000001(%edi,%ecx,1)
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _016c9b_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016c98_jump
		pop    %ebp
		ret    

	_016cbb_jump:
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		sub    %eax,%edi
		cmp    %ecx,%ebp
		jl     _016c9b_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016c98_jump
		pop    %ebp

	_016cd6_jump:
		ret    



_016cd7_func:
		call   _016472_func
		jb     _016d38_jump
		cmp    $0x000000,%cl
		jbe    _016d38_jump
		mov    _091e14_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092138_data,%edx

	_016d16_jump:
		xor    %ebp,%ebp
		push   %edi

	_016d19_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x000000,%al
		je     _016d24_jump
		mov    %al,-0x000001(%edi,%ecx,1)

	_016d24_jump:
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _016d19_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016d16_jump
		pop    %ebp

	_016d38_jump:
		ret    



_016d39_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092134_data
		call   _0163bc_func
		jb     _016dd7_jump
		cmp    $0x000000,%cl
		jbe    _016dd8_jump
		mov    _091e14_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092138_data,%edx
		mov    _092134_data,%ah

	_016d93_jump:
		xor    %ebp,%ebp

	_016d95_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016db4_jump
		or     %ah,%al
		mov    %al,(%edi,%ebp,1)
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016d95_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016d93_jump
		pop    %ebp
		ret    

	_016db4_jump:
		and    $0x0000ff,%eax
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		mov    _092134_data,%ah
		cmp    %ecx,%ebp
		jl     _016d95_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016d93_jump
		pop    %ebp

	_016dd7_jump:
		ret    

	_016dd8_jump:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092134_data
		call   _016472_func
		jb     _016e7d_jump
		cmp    $0x000000,%cl
		jbe    _016e7d_jump
		mov    _091e14_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092138_data,%edx
		mov    _092134_data,%ah

	_016e32_jump:
		xor    %ebp,%ebp
		push   %edi

	_016e35_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016e57_jump
		or     %ah,%al
		mov    %al,-0x000001(%edi,%ecx,1)
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _016e35_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016e32_jump
		pop    %ebp
		ret    

	_016e57_jump:
		and    $0x0000ff,%eax
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		sub    %eax,%edi
		mov    _092134_data,%ah
		cmp    %ecx,%ebp
		jl     _016e35_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016e32_jump
		pop    %ebp

	_016e7d_jump:
		ret    

_016e7e_switch:
		.long   0




_016e82_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_016e7e_switch
		cmp    _0162d3_jump,%eax
		jl     _016ecf_jump
		add    %eax,%edx
		cmp    _0162d7_jump,%edx
		ja     _016ebb_jump
		shr    $0x000002,%cl

	_016ea1_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _0162db_switch,%ebx
		jl     _016f09_jump

	_016ead_jump:
		add    %ebx,%edx
		cmp    _0162df_jump,%edx
		ja     _016ef5_jump

	_016eb7_jump:
		clc    
		ret    

	_016eb9_jump:
		stc    
		ret    

	_016ebb_jump:
		cmp    _0162d7_jump,%eax
		jae    _016eb9_jump
		mov    _0162d7_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _016f43_jump

	_016ecf_jump:
		push   %eax
		sub    _0162d3_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _016eb9_jump
		and    $0x00fffc,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		mov    %eax,%edx
		pop    %eax
		add    %edx,%eax
		add    %edx,0x000004(%esp)
		add    %edx,%esi
		shr    $0x000002,%cl
		jmp    _016ea1_jump

	_016ef5_jump:
		cmp    _0162df_jump,%ebx
		jae    _016eb9_jump
		mov    _0162df_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _016eb7_jump

	_016f09_jump:
		add    %ebx,%edx
		cmp    _0162db_switch,%edx
		jle    _016eb9_jump
		sub    _0162db_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _016e7e_switch,%eax
		mul    %bx
		add    %eax,%esi
		add    %eax,0x000008(%esp)
		pop    %eax
		mov    _0162db_switch,%ebx
		jmp    _016ead_jump

	_016f43_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		shr    $0x000002,%cl
		and    $0x000003,%edx
		je     _016ea1_jump
		inc    %cl
		jmp    _016ea1_jump



_016f5b_func:
		sub    $0x00000c,%esp
		mov    %edx,(%esp)
		call   _016e82_func
		jb     _016fd4_jump
		cmp    $0x000000,%cl
		jbe    _016fd4_jump
		mov    _091e14_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e14_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		mov    %ebx,0x000004(%esp)
		add    %eax,%edi
		mov    (%esp),%edx
		and    $0x0000ff,%ecx
		push   %ebp
		xor    %ebx,%ebx

	_016fa3_jump:
		xor    %ebp,%ebp

	_016fa5_jump:
		mov    (%esi,%ebp,4),%eax
		cmp    $0x000000,%eax
		je     _016fb6_jump
		mov    (%edx,%ebp,4),%ebx
		and    %ebx,(%edi,%ebp,4)
		or     %eax,(%edi,%ebp,4)

	_016fb6_jump:
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016fa5_jump
		add    $0x000140,%edi
		add    _016e7e_switch,%esi
		add    _016e7e_switch,%edx
		cmp    0x000008(%esp),%edi
		jb     _016fa3_jump
		pop    %ebp

	_016fd4_jump:
		add    $0x00000c,%esp
		ret    



_016fd8_func:
		push   %edx
		push   %eax
		mov    $0x0003da,%dx

	_016fde_jump:
		in     (%dx),%al
		test   $0x000008,%ax
		je     _016fde_jump
		pop    %eax
		pop    %edx
		ret    



_016fe8_func:
		push   %edx
		push   %eax
		mov    $0x0003da,%dx

	_016fee_jump:
		in     (%dx),%al
		test   $0x000008,%ax
		jne    _016fee_jump
		pop    %eax
		pop    %edx
		ret    



_016ff8_func:
		movl   $0x000000,_09214c_data
		movl   $0x000000,_092148_data
		movl   $0x000000,_092144_data
		push   %eax
		in     $0x000061,%al
		or     $0x000003,%al
		out    %al,$0x000061
		movl   $0x00ffff,_09213c_data
		mov    $0x0000b4,%al
		out    %al,$0x000043
		mov    _09213c_data,%eax
		out    %al,$0x000042
		mov    %ah,%al
		out    %al,$0x000042
		pop    %eax
		ret    



_017038_func:
		push   %eax
		in     $0x000061,%al
		and    $0x0000fc,%al
		out    %al,$0x000061
		mov    $0x0000b4,%al
		out    %al,$0x000043
		mov    $0x000000,%al
		out    %al,$0x000042
		out    %al,$0x000042
		pop    %eax
		ret    



_01704b_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000080,%eax
		out    %al,$0x000043
		nop
		in     $0x000042,%al
		mov    %al,%ah
		in     $0x000042,%al
		xchg   %al,%ah
		mov    _09213c_data,%ebx
		sub    %eax,%ebx
		mov    %ebx,%eax
		cmp    _092144_data,%eax
		jg     _017097_jump
		jne    _01708b_jump
		mov    _09214c_data,%edx
		inc    %edx
		cmp    $0x000014,%edx
		jle    _01708b_jump
		movl   $0x000000,_09213c_data
		xor    %edx,%edx

	_01708b_jump:
		mov    _09213c_data,%ebx
		add    %ebx,_092148_data

	_017097_jump:
		mov    %eax,_092144_data
		add    _092148_data,%eax
		mov    %edx,_09214c_data
		pop    %edx
		pop    %ebx
		ret    



_0170ab_func:
		mov    $0x000001,%ecx
		cmpl   $0x000000,_09213c_data
		je     _0170c5_jump
		dec    %ecx
		dec    %ecx

	_0170bb_jump:
		call   _01704b_func
		inc    %ecx
		cmp    %ebx,%eax
		jle    _0170bb_jump

	_0170c5_jump:
		ret    



_0170c6_func:
		movl   $0x000000,_092148_data
		movl   $0x000000,_092144_data
		ret    



_0170e0_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %ebx,%edi
		xor    %ah,%ah
		xor    %dh,%dh
		and    $0x00000f,%al
		and    $0x00000f,%dl
		mov    %ax,_0ce81c_data
		mov    %dx,_0ce81e_data
		mov    _0ce81c_data,%esi
		mov    $0x000010,%ebx
		sar    $0x000010,%esi
		sub    %esi,%ebx
		lea    0x000000(,%ebx,4),%ebp
		add    %ebx,%ebp
		mov    _0ce81a_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0ccfd0_data,%edx
		sub    %eax,%edx
		movswl %di,%eax
		add    $0x000010,%eax
		sub    %ebx,%eax
		mov    %eax,_0ce824_data
		movswl %cx,%eax
		add    $0x000010,%eax
		sub    %esi,%eax
		shl    $0x000004,%ebp
		mov    %eax,_0ce828_data
		mov    _0ce824_data,%eax
		add    %edx,%ebp
		mov    %eax,%edx
		mov    $0x000004,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0c94b8_data,%ebx
		shr    $0x000002,%ebx
		imul   %edx,%ebx
		mov    _0ce824_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		add    _0c94ac_data,%eax
		mov    _0c94b4_data,%ecx
		add    %eax,%ebx
		mov    _0ce828_data,%eax
		imul   %ecx,%eax
		add    %eax,%ebx
		mov    _0ce81c_data,%ax
		xor    %ah,%ah
		and    $0x000003,%al
		movswl %ax,%ecx
		mov    $0x000003,%eax
		sub    %ecx,%eax
		sub    $0x0004ff,%ebp
		mov    %eax,%ecx
		mov    $0x000001,%eax
		mov    %ebp,_0ce820_data
		shl    %cl,%eax
		mov    %ebx,_0ce82c_data
		mov    %eax,_0ce830_data
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0171d4_func:
		push   %edx
		mov    %al,%dl
		cmpb   $0x000000,_0ce841_data
		je     _0171f1_jump
		xor    %eax,%eax
		mov    _0c25e2_data,%al
		cmp    $0x000001,%eax
		je     _0171f1_jump
		call   _06b8e4_func

	_0171f1_jump:
		mov    $_0c692c_data,%eax
		call   _0411e0_func
		cmpb   $0x000000,_0c25e2_data
		jne    _017219_jump
		call   _052398_func
		cmpb   $0x000000,_0c25e2_data
		jne    _01721e_jump
		call   _05252c_func
		jmp    _01721e_jump

	_017219_jump:
		call   _052f40_func

	_01721e_jump:
		call   _0465b0_func
		test   %dl,%dl
		jne    _017231_jump
		mov    $_0ce550_data,%eax
		call   _05425c_func

	_017231_jump:
		pop    %edx
		ret    



_017234_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,0x000004(%esp)
		movb   $0x000001,_0c117e_data
		call   _053090_func

	_01724d_jump:
		xor    %eax,%eax
		mov    _0c24d2_data,%al
		test   %eax,%eax
		je     _0176d1_jump
		cmpw   $0x000000,_0c24ec_data
		jne    _0176d1_jump
		cmpw   $0x000000,_0c24ee_data
		jne    _0176d1_jump
		xor    %eax,%eax
		mov    _0cdae8_data,%al
		cmp    $0x000002,%eax
		je     _0176d1_jump
		call   _0170c6_func
		cmpb   $0x000000,_0c6b47_data
		je     _01729b_jump
		call   _016fd8_func

	_01729b_jump:
		cmpb   $0x000000,_0c6b46_data
		je     _0172ac_jump
		call   _01704b_func
		mov    %eax,(%esp)

	_0172ac_jump:
		cmpb   $0x000000,_0c6b46_data
		je     _0172c1_jump
		mov    (%esp),%edx
		movzwl _0c6b44_data,%ebp
		add    %edx,%ebp

	_0172c1_jump:
		call   _04ced0_func
		cmpw   $0x000000,_0c1af4_data
		jne    _0172d5_jump
		call   _03caf8_func

	_0172d5_jump:
		call   _03bdd4_func
		cmpw   $0x000000,_095b3c_data
		jne    _017343_jump
		cmpw   $0x000000,_0ce7e6_data
		jne    _017343_jump
		mov    _0ce504_data,%eax
		mov    _0ce504_data,%edi
		mov    _0ce50c_data,%ebx
		shl    $0x000008,%eax
		shl    $0x000006,%edi
		mov    _0cdefc_data,%esi
		add    %eax,%edi
		mov    _095b08_data,%ecx
		add    %ebx,%edi
		xor    %edx,%edx
		add    %edi,%esi
		add    %ecx,%edi
		mov    _0ce510_data,%ecx
		mov    _0ce508_data,%eax
		sub    %ebx,%ecx
		mov    _0ce504_data,%ebx
		mov    _0ce7ee_data,%dl
		sub    %ebx,%eax
		cmp    $0x000001,%edx
		jne    _017383_jump
		call   *_0cdf14_data
		jmp    _017388_jump

	_017343_jump:
		xor    %eax,%eax
		mov    _0ce7ee_data,%al
		cmp    $0x000001,%eax
		jne    _01736d_jump
		mov    $0x000140,%ecx
		mov    _0ce508_data,%eax
		mov    _095b08_data,%edi
		mov    _0cdefc_data,%esi
		call   *_0cdf14_data
		jmp    _017388_jump

	_01736d_jump:
		mov    $0x000140,%ecx
		mov    _0ce508_data,%eax
		mov    _095b08_data,%edi
		mov    _0cdefc_data,%esi

	_017383_jump:
		call   _014f82_func

	_017388_jump:
		cmpb   $0x000000,_0c6b46_data
		je     _017396_jump
		call   _01704b_func

	_017396_jump:
		cmpb   $0x000000,_0c694c_data
		je     _0173a4_jump
		call   _06bb94_func

	_0173a4_jump:
		xor    %eax,%eax
		mov    _0ce7ee_data,%al
		test   %eax,%eax
		jne    _0173b4_jump
		call   _040e8c_func

	_0173b4_jump:
		mov    _0c6b4e_data,%dl
		inc    %dl
		xor    %ecx,%ecx

	_0173be_jump:
		dec    %dl
		cmp    $0x0000ff,%dl
		je     _0173ce_jump
		mov    %ecx,%eax
		call   _0171d4_func
		jmp    _0173be_jump

	_0173ce_jump:
		cmpb   $0x000000,_0c6b46_data
		je     _0173dc_jump
		call   _01704b_func

	_0173dc_jump:
		call   _046628_func
		cmpb   $0x000000,_095b3e_data
		je     _01744e_jump
		cmpb   $0x000000,_0ce843_data
		je     _01744e_jump
		mov    _0c247a_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0c94b2_data,%bx
		mov    _0c94b0_data,%dx
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		call   _06ff3c_func
		xor    %eax,%eax
		mov    _0ce504_data,%cx
		mov    _0ce508_data,%ax
		xor    %ebx,%ebx
		push   %eax
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0ce510_data,%ax
		mov    _0ce50c_data,%bx
		push   %eax
		xor    %eax,%eax
		mov    _0c94b2_data,%dx
		mov    _0c94b0_data,%ax
		call   _06f2bc_func
		jmp    _017460_jump

	_01744e_jump:
		mov    _0ccfd0_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e88,%ecx
		rep stos %eax,%es:(%edi)

	_017460_jump:
		cmpw   $0x000000,_0c51a2_data
		je     _017491_jump
		mov    _0ce510_data,%edx
		mov    _0ce50c_data,%ecx
		mov    _0ce508_data,%ebx
		mov    _0ce504_data,%eax
		sub    $0x000004,%edx
		sub    $0x000006,%ebx
		call   _0157e6_func
		call   _019840_func

	_017491_jump:
		mov    $_0ce550_data,%edx
		mov    _0cdefc_data,%eax
		call   _054a30_func
		call   _01ab24_func
		cmpb   $0x000000,_0c6b46_data
		je     _0174b3_jump
		call   _01704b_func

	_0174b3_jump:
		call   _019538_func
		cmpb   $0x000000,_0c6b46_data
		je     _0174c6_jump
		call   _01704b_func

	_0174c6_jump:
		call   _019e6c_func
		xor    %eax,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    _0ce508_data,%ax
		xor    %edx,%edx
		push   %eax
		xor    %eax,%eax
		mov    _0ce504_data,%cx
		mov    _0ce510_data,%ax
		mov    _0ce50c_data,%bx
		push   %eax
		xor    %eax,%eax
		mov    _0c94b2_data,%dx
		mov    _0c94b0_data,%ax
		call   _06fbdc_func
		cmpw   $0x000000,_0c51a2_data
		je     _017514_jump
		call   _019c50_func

	_017514_jump:
		mov    _0cdefc_data,%eax
		call   _046aa4_func
		mov    _0cdefc_data,%edx
		mov    _0ce504_data,%eax
		mov    _0ce50c_data,%ecx
		shl    $0x000008,%eax
		add    %ecx,%edx
		add    %eax,%edx
		mov    _0ce504_data,%eax
		shl    $0x000006,%eax
		add    %edx,%eax
		sub    $0x000004,%eax
		mov    %eax,_0ce53c_data
		mov    _0ce510_data,%eax
		mov    _0ce504_data,%edi
		sub    %ecx,%eax
		mov    _0ce508_data,%ecx
		lea    0x000004(%eax),%edx
		sub    %edi,%ecx
		mov    _0ce53c_data,%edi
		call   _014fad_func
		cmpb   $0x000000,_0c32f4_data
		je     _01757b_jump
		call   _01abf0_func
		jmp    _017585_jump

	_01757b_jump:
		mov    _0c4738_data,%eax
		call   _018f98_func

	_017585_jump:
		mov    _0c4738_data,%eax
		call   _01b288_func
		cmpb   $0x000000,_0cd0df_data
		je     _01759d_jump
		call   _035678_func

	_01759d_jump:
		mov    $0x000001,%eax
		call   _040a7c_func
		test   %al,%al
		je     _0175db_jump
		cmpw   $0x000000,_0c1af4_data
		jne    _0175db_jump
		cmpb   $0x000000,_0ce7e5_data
		jne    _0175db_jump
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		je     _0175db_jump
		cmpb   $0x000000,_0cdae8_data
		jne    _0175db_jump
		movb   $0x000001,_0ce7e5_data

	_0175db_jump:
		call   _040b24_func
		test   %ax,%ax
		jne    _01762b_jump
		call   _040ab0_func
		test   %ax,%ax
		jne    _01762b_jump
		call   _040b98_func
		test   %ax,%ax
		jne    _01762b_jump
		call   _040c0c_func
		test   %ax,%ax
		jne    _01762b_jump
		call   _040c80_func
		test   %ax,%ax
		jne    _01762b_jump
		call   _040ce8_func
		test   %ax,%ax
		jne    _01762b_jump
		call   _040d50_func
		test   %ax,%ax
		jne    _01762b_jump
		call   _040db8_func
		test   %ax,%ax
		je     _017632_jump

	_01762b_jump:
		xor    %eax,%eax
		mov    %eax,_0ce8dc_data

	_017632_jump:
		mov    _0ce8dc_data,%edx
		inc    %edx
		mov    %edx,_0ce8dc_data
		cmp    $0x005460,%edx
		jl     _017657_jump
		mov    $0x000001,%ah
		xor    %ecx,%ecx
		mov    %ah,_0c6964_data
		mov    %ecx,_0ce8dc_data

	_017657_jump:
		cmpb   $0x000000,_0c6964_data
		je     _017665_jump
		call   _037e74_func

	_017665_jump:
		mov    0x000004(%esp),%eax
		call   _036b4c_func
		cmpb   $0x000000,_0c6b46_data
		je     _01724d_jump
		cmpb   $0x000000,_0c6b47_data
		je     _01724d_jump
		mov    %ebp,%ebx
		call   _0170ab_func
		test   %ecx,%ecx
		jne    _01724d_jump
		mov    $0x000001,%eax
		call   _0171d4_func
		mov    _0c1b70_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0176b5_jump
		incw   _0c1b72_data

	_0176b5_jump:
		call   _046b64_func
		cmpb   $0x000000,_0c6b47_data
		je     _01724d_jump
		call   _016fe8_func
		jmp    _01724d_jump

	_0176d1_jump:
		xor    %cl,%cl
		mov    %cl,_0c117e_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0176e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0ce841_data
		je     _017702_jump
		xor    %eax,%eax
		mov    _0c25e2_data,%al
		cmp    $0x000001,%eax
		je     _017702_jump
		call   _06b8e4_func

	_017702_jump:
		mov    $_0c692c_data,%eax
		call   _0411e0_func
		cmpb   $0x000000,_0c25e2_data
		jne    _01772a_jump
		call   _052398_func
		cmpb   $0x000000,_0c25e2_data
		jne    _01772f_jump
		call   _05252c_func
		jmp    _01772f_jump

	_01772a_jump:
		call   _052f40_func

	_01772f_jump:
		cmpb   $0x000000,_0c25e2_data
		jne    _017760_jump
		mov    _0c2480_data,%ecx
		mov    _0c247e_data,%ebx
		mov    _0c247c_data,%edx
		mov    _0c247a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03b02c_func

	_017760_jump:
		cmpb   $0x000000,_0ce843_data
		je     _017789_jump
		call   _0472a4_func
		mov    _0c949e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _017792_jump
		mov    _0c94b2_data,%ax
		add    %ax,_0c94a0_data
		jmp    _017792_jump

	_017789_jump:
		xor    %edx,%edx
		mov    %dx,_0c94a0_data

	_017792_jump:
		cmpb   $0x000000,_095b3e_data
		je     _0177e4_jump
		cmpb   $0x000000,_0ce843_data
		je     _0177e4_jump
		mov    _0c247a_data,%esi
		sar    $0x000010,%esi
		mov    $0x000003,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %eax,%edx
		mov    _0c94b0_data,%bx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0c949e_data,%ecx
		sar    $0x000010,%ecx
		movswl %dx,%ebx
		mov    _0c247c_data,%edx
		mov    %esi,%eax
		sar    $0x000010,%edx
		jmp    _0177f9_jump

	_0177e4_jump:
		mov    _0c247c_data,%edx
		mov    _0c247a_data,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax

	_0177f9_jump:
		call   _0170e0_func
		mov    _0c247c_data,%edx
		mov    _0c247a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03b884_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01781c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ebp
		movb   $0x000001,_0c117e_data
		call   _053090_func

	_017833_jump:
		xor    %eax,%eax
		mov    _0c24d2_data,%al
		test   %eax,%eax
		je     _017afc_jump
		cmpw   $0x000000,_0c24ec_data
		jne    _017afc_jump
		cmpw   $0x000000,_0c24ee_data
		jne    _017afc_jump
		xor    %eax,%eax
		mov    _0cdae8_data,%al
		cmp    $0x000002,%eax
		je     _017afc_jump
		call   _0170c6_func
		call   _03a9e0_func
		cmpb   $0x000000,_0c6b46_data
		je     _017889_jump
		call   _01704b_func
		mov    %eax,(%esp)

	_017889_jump:
		cmpb   $0x000000,_0c6b46_data
		je     _0178a0_jump
		xor    %esi,%esi
		mov    (%esp),%edx
		mov    _0c6b44_data,%si
		add    %edx,%esi

	_0178a0_jump:
		call   _04ced0_func
		cmpw   $0x000000,_0c1af4_data
		jne    _0178b4_jump
		call   _03caf8_func

	_0178b4_jump:
		call   _03bdd4_func
		cmpb   $0x000000,_0c694c_data
		je     _0178c7_jump
		call   _06bb94_func

	_0178c7_jump:
		cmpl   $0x000001,_0c4734_data
		jne    _0178e6_jump
		mov    _0c247c_data,%edx
		mov    _0c247a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03acc8_func

	_0178e6_jump:
		call   _040e8c_func
		mov    _0c6b4e_data,%dl
		inc    %dl

	_0178f3_jump:
		dec    %dl
		cmp    $0x0000ff,%dl
		je     _017901_jump
		call   _0176e4_func
		jmp    _0178f3_jump

	_017901_jump:
		cmpb   $0x000000,_0c6b46_data
		je     _01790f_jump
		call   _01704b_func

	_01790f_jump:
		cmpb   $0x000000,_095b3e_data
		je     _017939_jump
		cmpb   $0x000000,_0ce843_data
		je     _017939_jump
		mov    _0c247c_data,%edx
		mov    _0c247a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03b2ec_func
		jmp    _017956_jump

	_017939_jump:
		mov    _0ccfd0_data,%edi
		mov    $0x0003ce,%edx
		mov    $0x000a04,%ax
		out    %ax,(%dx)
		mov    $0x000000,%eax
		mov    $0x000fa0,%ecx
		rep stos %eax,%es:(%edi)

	_017956_jump:
		cmpw   $0x000000,_0c51a2_data
		je     _017965_jump
		call   _019840_func

	_017965_jump:
		mov    _0c247c_data,%edx
		mov    _0c247a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03b3a8_func
		call   _01ab24_func
		cmpb   $0x000000,_0c6b46_data
		je     _01798e_jump
		call   _01704b_func

	_01798e_jump:
		call   _019538_func
		cmpb   $0x000000,_0c6b46_data
		je     _0179a1_jump
		call   _01704b_func

	_0179a1_jump:
		call   _019e6c_func
		cmpw   $0x000000,_0c51a2_data
		je     _0179b5_jump
		call   _019c50_func

	_0179b5_jump:
		cmpb   $0x000000,_0c32f4_data
		je     _0179c5_jump
		call   _01abf0_func
		jmp    _0179cf_jump

	_0179c5_jump:
		mov    _0c4738_data,%eax
		call   _018f98_func

	_0179cf_jump:
		mov    _0c4738_data,%eax
		call   _01b288_func
		cmpb   $0x000000,_0ce834_data
		je     _0179ef_jump
		mov    _0ccfd0_data,%edi
		call   _0147b5_func
		jmp    _0179fa_jump

	_0179ef_jump:
		mov    _0ccfd0_data,%edi
		call   _01474b_func

	_0179fa_jump:
		cmpb   $0x000000,_0cd0df_data
		je     _017a08_jump
		call   _035678_func

	_017a08_jump:
		call   _040b24_func
		test   %ax,%ax
		jne    _017a58_jump
		call   _040ab0_func
		test   %ax,%ax
		jne    _017a58_jump
		call   _040b98_func
		test   %ax,%ax
		jne    _017a58_jump
		call   _040c0c_func
		test   %ax,%ax
		jne    _017a58_jump
		call   _040c80_func
		test   %ax,%ax
		jne    _017a58_jump
		call   _040ce8_func
		test   %ax,%ax
		jne    _017a58_jump
		call   _040d50_func
		test   %ax,%ax
		jne    _017a58_jump
		call   _040db8_func
		test   %ax,%ax
		je     _017a60_jump

	_017a58_jump:
		xor    %ecx,%ecx
		mov    %ecx,_0ce8dc_data

	_017a60_jump:
		mov    _0ce8dc_data,%edi
		inc    %edi
		mov    %edi,_0ce8dc_data
		cmp    $0x005460,%edi
		jl     _017a85_jump
		mov    $0x000001,%bh
		xor    %edx,%edx
		mov    %bh,_0c6964_data
		mov    %edx,_0ce8dc_data

	_017a85_jump:
		cmpb   $0x000000,_0c6964_data
		je     _017a9c_jump
		cmpb   $0x000000,_0ce7e5_data
		jne    _017a9c_jump
		call   _037e74_func

	_017a9c_jump:
		mov    %ebp,%eax
		call   _036b4c_func
		cmpb   $0x000000,_0c6b46_data
		je     _017833_jump
		cmpb   $0x000000,_0c6b47_data
		je     _017833_jump
		mov    %esi,%ebx
		call   _0170ab_func
		test   %ecx,%ecx
		jne    _017833_jump
		call   _0176e4_func
		mov    _0c1b70_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _017ae5_jump
		incw   _0c1b72_data

	_017ae5_jump:
		cmpb   $0x000000,_0c6b47_data
		je     _017833_jump
		call   _016fe8_func
		jmp    _017833_jump

	_017afc_jump:
		xor    %dh,%dh
		mov    %dh,_0c117e_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_017c7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		call   _077020_func
		mov    $0x3eb00000,%ecx
		mov    %eax,%esi
		xor    %ebx,%ebx
		call   _07806f_func
		call   _07825f_func
		push   %edx
		push   %eax
		push   $_0bf6e4_data
		call   _0783fc_func
		mov    _0ce844_data,%al
		add    $0x00000c,%esp
		cmp    $0x000081,%al
		jb     _017d42_jump
		jbe    _017cd7_jump
		cmp    $0x000082,%al
		jbe    _017ce6_jump
		cmp    $0x000083,%al
		je     _017d04_jump
		jmp    _017d4e_jump

	_017cc5_jump:
		push   $_0bf707_data
		call   _0783fc_func
		add    $0x000004,%esp
		jmp    _017d4e_jump

	_017cd7_jump:
		push   $_0bf71d_data
		call   _0783fc_func
		add    $0x000004,%esp
		jmp    _017d4e_jump

	_017ce6_jump:
		push   $_0bf73a_data
		call   _0783fc_func
		add    $0x000004,%esp
		jmp    _017d4e_jump

	_017cf5_jump:
		push   $_0bf75b_data
		call   _0783fc_func
		add    $0x000004,%esp
		jmp    _017d4e_jump

	_017d04_jump:
		xor    %eax,%eax
		mov    _0ce845_data,%al
		cmp    $0x000004,%eax
		jne    _017d29_jump
		xor    %edx,%edx
		mov    _0ce846_data,%dl
		push   %edx
		push   %eax
		push   $_0bf778_data
		call   _0783fc_func
		add    $0x00000c,%esp
		jmp    _017d4e_jump

	_017d29_jump:
		xor    %edx,%edx
		mov    _0ce846_data,%dl
		push   %edx
		push   %eax
		push   $_0bf78e_data
		call   _0783fc_func
		add    $0x00000c,%esp
		jmp    _017d4e_jump

	_017d42_jump:
		test   %al,%al
		jbe    _017cc5_jump
		cmp    $0x000001,%al
		je     _017cf5_jump

	_017d4e_jump:
		xor    %ah,%ah
		mov    %ah,_0ce834_data
		cmp    $0x200000,%esi
		jae    _017d6d_jump
		mov    $_0bf7a9_data,%eax
		call   _01f628_func
		jmp    _017e42_jump

	_017d6d_jump:
		cmp    $0x400000,%esi
		jae    _017dd9_jump
		mov    $0x000001,%bl
		mov    $0x007000,%ebp
		mov    $0x062c00,%edx
		mov    $0x0d0400,%ecx
		mov    %ah,_0cdf10_data
		mov    %ah,_0cdf60_data
		mov    %ah,_0ce840_data
		mov    %ah,_0ce843_data
		mov    $0x04ec00,%eax
		mov    %bl,_0ce841_data
		mov    %bl,_0ce842_data
		mov    %bl,_095b0d_data
		mov    %ebp,_0c6b2c_data
		mov    %edx,_0c6b34_data
		mov    %ecx,_0c6b3c_data
		mov    $0x032800,%ebx
		mov    %eax,_0c6b30_data
		mov    %ebx,_0c6b38_data
		jmp    _017e42_jump

	_017dd9_jump:
		mov    $0x000001,%dl
		mov    $0x04ec00,%ebx
		mov    $0x0f4c00,%ecx
		mov    $0x047c00,%esi
		mov    $0x0d0400,%edi
		mov    %ah,_0cdf60_data
		mov    %ah,_0ce840_data
		mov    %ah,_095b0d_data
		mov    %dl,_0cdf10_data
		mov    %dl,_0ce841_data
		mov    %dl,_0ce842_data
		mov    %dl,_0ce843_data
		mov    %dl,_0ce834_data
		mov    %ebx,_0c6b30_data
		mov    %ecx,_0c6b34_data
		mov    %esi,_0c6b38_data
		mov    $0x021000,%edx
		mov    %edi,_0c6b3c_data
		mov    %edx,_0c6b2c_data

	_017e42_jump:
		cmpb   $0x000000,_0ce841_data
		je     _017e79_jump
		call   _077a10_func
		test   %eax,%eax
		je     _017e62_jump
		xor    %dh,%dh
		mov    %dh,_0ce842_data
		mov    %dh,_0ce841_data

	_017e62_jump:
		call   _077a80_func
		test   %eax,%eax
		je     _017e79_jump
		xor    %bh,%bh
		mov    %bh,_0ce842_data
		mov    %bh,_0ce841_data

	_017e79_jump:
		push   $_0bf7bc_data
		call   _0783fc_func
		mov    _0cdf10_data,%ch
		add    $0x000004,%esp
		test   %ch,%ch
		je     _017e97_jump
		push   $_0bf7be_data
		jmp    _017e9c_jump

	_017e97_jump:
		push   $_0bf7dc_data

	_017e9c_jump:
		call   _0783fc_func
		add    $0x000004,%esp
		cmpb   $0x000000,_0ce841_data
		je     _017ec4_jump
		cmpb   $0x000000,_0c694c_data
		je     _017ebd_jump
		push   $_0bf7f4_data
		jmp    _017ed9_jump

	_017ebd_jump:
		push   $_0bf809_data
		jmp    _017ed9_jump

	_017ec4_jump:
		cmpb   $0x000000,_0c694c_data
		je     _017ed4_jump
		push   $_0bf823_data
		jmp    _017ed9_jump

	_017ed4_jump:
		push   $_0bf83d_data

	_017ed9_jump:
		call   _0783fc_func
		add    $0x000004,%esp
		cmpb   $0x000000,_0ce843_data
		je     _017ef9_jump
		push   $_0bf855_data
		call   _0783fc_func
		add    $0x000004,%esp
		jmp    _017f06_jump

	_017ef9_jump:
		push   $_0bf86c_data
		call   _0783fc_func
		add    $0x000004,%esp

	_017f06_jump:
		push   $_0bf87c_data
		mov    $0x000064,%esi
		call   _0783fc_func
		xor    %edx,%edx
		add    $0x000004,%esp

	_017f1a_jump:
		call   _07841e_func
		test   %eax,%eax
		je     _017f33_jump

	_017f23_jump:
		call   _07841e_func
		test   %eax,%eax
		je     _017f42_jump
		call   _078435_func
		jmp    _017f23_jump

	_017f33_jump:
		mov    %esi,%eax
		inc    %edx
		call   _078452_func
		cmp    $0x000028,%edx
		jl     _017f1a_jump
		jmp    _017f23_jump

	_017f42_jump:
		push   $_0bf87e_data
		call   _0783fc_func
		add    $0x000004,%esp
		call   _017f5c_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_017f5c_func:
		push   %edx
		mov    $0x000300,%edx
		mov    $0x000010,%eax
		call   _077848_func
		mov    %eax,_0c916c_data
		test   %eax,%eax
		jne    _017f7f_jump
		mov    $_0bf880_data,%eax
		call   _01f628_func

	_017f7f_jump:
		mov    $0x000008,%edx
		mov    $0x000200,%eax
		call   _077848_func
		mov    %eax,_0c51a4_data
		test   %eax,%eax
		jne    _017fa1_jump
		mov    $_0bf8a0_data,%eax
		call   _01f628_func

	_017fa1_jump:
		mov    _0cdf10_data,%ah
		test   %ah,%ah
		sete   %al
		mov    %al,_095b0d_data
		pop    %edx
		ret    



_017fb4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		call   _03cdcc_func
		mov    $0x0b8000,%edx
		push   $_0bf8ef_data
		mov    $_0bf8c0_data,%ebp
		mov    $_0bf8cd_data,%ebx
		call   _0783fc_func
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)
		add    $0x000004,%esp

	_017fe6_jump:
		add    $0x000002,%edx
		movb   $0x00001e,-0x000001(%edx)
		cmp    $0x0b80a0,%edx
		jne    _017fe6_jump
		mov    (%esp),%ebx
		mov    %ebp,%esi
		xor    %edx,%edx
		jmp    _018008_jump

	_017ffe_jump:
		add    $0x000002,%ebx
		mov    (%esi),%cl
		inc    %esi
		inc    %edx
		mov    %cl,-0x000002(%ebx)

	_018008_jump:
		mov    %ebp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		cmp    %ecx,%edx
		jb     _017ffe_jump
		mov    (%esp),%edx
		mov    0x000004(%esp),%esi
		xor    %ebx,%ebx
		jmp    _018036_jump

	_018023_jump:
		mov    (%esi),%cl
		mov    0x00005f(%edx),%ah
		add    $0x000002,%edx
		inc    %esi
		or     $0x000080,%ah
		mov    %cl,0x00005c(%edx)
		inc    %ebx
		mov    %ah,0x00005d(%edx)

	_018036_jump:
		mov    0x000004(%esp),%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		cmp    %ecx,%ebx
		jb     _018023_jump
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018054_func:
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    $_0bf8f2_data,%eax
		mov    $_0ce846_data,%edx
		call   _078457_jump
		call   _017fb4_func
		mov    $_0ce845_data,%eax
		mov    $_0ce6e0_data,%edi
		call   _076ee0_func
		mov    %al,_0ce844_data
		mov    $0x000001,%ah
		mov    (%esi),%esi
		mov    %ah,_0ce8e4_data
		push   %edi

	_01808b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0180a3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _01808b_jump

	_0180a3_jump:
		pop    %edi
		call   _0180ac_func
		pop    %edi
		pop    %esi
		ret    



_0180ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %ah,%ah
		mov    %ah,(%esp)
		call   _0643c8_func
		mov    _0ce8e4_data,%al
		mov    %al,_0c694c_data
		test   %al,%al
		je     _0180df_jump
		push   $_0bf8fd_data
		call   _0783fc_func
		add    $0x000004,%esp
		call   _06bd10_func

	_0180df_jump:
		call   _017c7c_func
		mov    $0x000001,%dh
		mov    $0x000140,%ebx
		mov    %dh,_0c6965_data
		call   _041434_func
		mov    $_041474_func,%eax
		xor    %ecx,%ecx
		call   _0784ad_func
		mov    $_017038_func,%eax
		mov    $0x0000c8,%edx
		call   _0784ad_func
		xor    %eax,%eax
		call   _016349_func
		xor    %bl,%bl
		mov    %bl,_0cd0d6_data
		call   _051e50_func
		call   _036248_func
		call   _06a514_func
		call   _035e84_func
		call   _047360_func
		call   _036350_func
		mov    $0x000003,%bh
		mov    _0c694c_data,%cl
		mov    %bh,_0cd0d2_data
		test   %cl,%cl
		je     _018155_jump
		call   _01cd14_func

	_018155_jump:
		mov    $0x000140,%ebp
		mov    $0x000001,%edi

	_01815f_jump:
		cmpb   $0x000000,_0c2566_data
		jne    _0183ed_jump
		call   _036bc8_jump
		call   _0614a8_func
		call   _054338_func
		call   _035a7c_func
		cmpb   $0x000000,_0c2565_data
		jne    _0183d1_jump

	_01818d_jump:
		mov    _0c24c6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _0183d1_jump
		cmpw   $0x000000,_0c24ee_data
		je     _0183d1_jump
		call   _0643c8_func
		call   _063d20_func
		call   _0162e3_func
		call   _0353ac_func
		mov    $0x0000c8,%edx
		mov    %ebp,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _016349_func
		call   _036744_func
		cmpb   $0x000000,_0ce841_data
		je     _0181f3_jump
		cmpb   $0x000000,_0ce842_data
		jne    _0181f3_jump
		mov    _0c25ec_data,%eax
		sar    $0x000010,%eax
		call   _077cc8_func

	_0181f3_jump:
		cmpb   $0x000000,_0c2565_data
		jne    _0183a1_jump
		cmpw   $0x000000,_0c24ee_data
		jne    _0183a1_jump
		cmpw   $0x000000,_0c24ec_data
		je     _0183a1_jump
		call   _0170c6_func
		call   _036854_func
		mov    %esp,%eax
		call   _0362f0_func
		mov    _0c24ea_data,%eax
		sar    $0x000010,%eax
		call   _051f9c_func
		call   _038914_func
		call   _073898_func
		call   _03c350_func
		cmpb   $0x000000,_0c2565_data
		jne    _018392_jump

	_018256_jump:
		mov    _0c24ec_data,%si
		test   %si,%si
		jne    _018392_jump
		cmpw   $0x000000,_0c24ee_data
		jne    _018392_jump
		call   _052284_func
		call   _0522d0_func
		call   _035eb8_func
		xor    %eax,%eax
		mov    $0x000001,%bh
		mov    _095b0d_data,%al
		mov    %bh,_0cdae8_data
		test   %eax,%eax
		jne    _0182d9_jump
		call   _0474f8_func
		xor    %eax,%eax
		mov    _0c7968_data,%al
		call   _03cddc_func
		xor    %eax,%eax
		mov    _0ce7ea_data,%al
		call   _047498_func
		call   _054db0_func
		mov    %esp,%eax
		mov    %si,_095bac_data
		mov    $0x000001,%esi
		call   _017234_func
		mov    %si,_095bac_data
		call   _054e14_func
		jmp    _018351_jump

	_0182d9_jump:
		call   _0162e3_func
		xor    %eax,%eax
		mov    _0c7968_data,%al
		call   _03cca8_func
		xor    %eax,%eax
		mov    _0ce7ea_data,%al
		call   _047498_func
		mov    _0c247c_data,%edx
		mov    _0c247a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03acc8_func
		mov    _0c94b8_data,%edx
		mov    _0c94b4_data,%ebx
		mov    _0c94ac_data,%esi
		shr    $0x000002,%edx
		call   _01268a_func
		mov    %esp,%eax
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    %dx,_095bac_data
		call   _01781c_func
		mov    _0c2565_data,%cl
		mov    %bx,_095bac_data
		test   %cl,%cl
		jne    _018351_jump
		call   _03c014_func

	_018351_jump:
		cmpb   $0x000000,_0ce841_data
		je     _01835f_jump
		call   _06a570_func

	_01835f_jump:
		mov    $0x0000c8,%edx
		xor    %eax,%eax
		mov    %ebp,%ebx
		mov    _0c7968_data,%al
		xor    %ecx,%ecx
		call   _03cddc_func
		xor    %eax,%eax
		call   _016349_func
		call   _035eb8_func
		call   _0627e0_func
		cmpb   $0x000000,_0c2565_data
		je     _018256_jump

	_018392_jump:
		call   _052198_func
		call   _036bc8_jump
		jmp    _0181f3_jump

	_0183a1_jump:
		cmpb   $0x000000,_0c694c_data
		je     _0183af_jump
		call   _01cd14_func

	_0183af_jump:
		call   _036bc8_jump
		cmpb   $0x000000,_0cdae8_data
		je     _0183c4_jump
		movb   $0x000001,_0c2565_data

	_0183c4_jump:
		cmpb   $0x000000,_0c2565_data
		je     _01818d_jump

	_0183d1_jump:
		call   _036bcc_func
		cmpb   $0x000000,_0cdae8_data
		je     _01815f_jump
		call   _035cc4_func
		jmp    _01815f_jump

	_0183ed_jump:
		cmpb   $0x000000,_0c694c_data
		je     _0183fb_jump
		call   _06bd48_func

	_0183fb_jump:
		cmpb   $0x000000,_0ce841_data
		je     _01840e_jump
		call   _06a570_func
		call   _077e88_func

	_01840e_jump:
		call   _036bec_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018420_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %dl,0x000010(%esp)
		mov    %bl,0x00000c(%esp)
		mov    %cl,0x000014(%esp)
		mov    _0c25a8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _0185e3_jump
		mov    _0c25aa_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _0185e3_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    _0c25bc_data,%edx
		movsbl (%ebx,%eax,1),%eax
		add    _0c25c0_data,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x00000e,%edx
		sbb    %edx,%eax
		sar    $0x00000e,%eax
		mov    _0c25ac_data,%di
		mov    %eax,%ecx
		mov    0x000028(%esi),%dx
		mov    _0c25aa_data,%ax
		mov    0x00002c(%esi),%bx
		sub    %edx,%eax
		sub    %ebx,%edi
		shl    $0x000004,%eax
		shl    $0x000004,%edi
		mov    %ax,0x000004(%esp)
		test   %ax,%ax
		jne    _0184cd_jump
		test   %di,%di
		je     _0185e3_jump

	_0184cd_jump:
		test   %ecx,%ecx
		je     _0185e3_jump
		movswl %di,%ebp
		mov    %ebp,%eax
		test   %eax,%eax
		jge    _0184e0_jump
		neg    %eax

	_0184e0_jump:
		mov    %eax,%ebx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0184ef_jump
		neg    %eax

	_0184ef_jump:
		cmp    %ebx,%eax
		jge    _0184f5_jump
		mov    %ebx,%eax

	_0184f5_jump:
		mov    %eax,%edx
		mov    %ecx,%ebx
		cwtl   
		mov    $0x000004,%cl
		cmp    %ebx,%eax
		jle    _018502_jump
		mov    %ebx,%eax

	_018502_jump:
		mov    %eax,(%esp)
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		mov    (%esp),%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    0x000004(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000004,%cl
		mov    %ax,0x000008(%esp)
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0185ef_jump
		xor    %eax,%eax
		mov    $0x0000ff,%ebx
		mov    0x00000c(%esp),%al
		mov    0x00003e(%esi),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax
		mov    %edx,%ebx
		imul   %eax,%ebx
		mov    0x000006(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00000c(%esp),%al
		imul   %eax,%edx
		add    %ebx,%edx
		mov    $0x0000ff,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000040(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _0185a3_jump
		cmp    (%esp),%ebp
		jg     _0185a3_jump
		movb   $0x0000ff,0x000014(%esp)

	_0185a3_jump:
		xor    %eax,%eax
		mov    $0x0000ff,%ebx
		mov    0x000014(%esp),%al
		mov    0x000040(%esi),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax
		mov    %edx,%ebx
		imul   %eax,%ebx
		xor    %eax,%eax
		movswl %cx,%edx
		mov    0x000014(%esp),%al
		imul   %eax,%edx
		add    %ebx,%edx
		mov    $0x0000ff,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_0185e3_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)

	_0185ef_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0185f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0c25a8_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		cmp    $0xffff8300,%ebx
		jne    _01862e_jump
		mov    _0c25aa_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffff8300,%ebx
		jne    _01862e_jump
		mov    0x000046(%edx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _018653_jump
		jmp    _01864e_jump

	_01862e_jump:
		mov    _0c25a8_data,%ebx
		mov    0x000028(%edx),%ecx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jne    _018653_jump
		mov    _0c25aa_data,%ebx
		mov    0x00002c(%edx),%esi
		sar    $0x000010,%ebx
		cmp    %esi,%ebx
		jne    _018653_jump

	_01864e_jump:
		mov    $0x000001,%eax

	_018653_jump:
		test   %ax,%ax
		je     _01865f_jump
		movb   $0x000001,_0c25b4_data

	_01865f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0186d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ebx,%ebx
		mov    0x00002c(%eax),%cx
		mov    0x000069(%eax),%bl
		movzbw 0x000068(%eax),%si
		add    %ecx,%ebx
		mov    0x000028(%eax),%dx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%esi

	_0186f4_jump:
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e288_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_092204_data(%edx)
		jne    _018731_jump
		mov    _0c24f2_data,%edx
		sar    $0x000010,%edx
		movswl %bx,%ecx
		add    $0x0000c8,%edx
		cmp    %edx,%ecx
		jg     _018731_jump
		add    $0x000010,%ebx
		movswl %bx,%eax
		sar    $0x000004,%eax
		jmp    _0186f4_jump

	_018731_jump:
		and    $0x0000f0,%bl
		and    $0x00000f,%esi
		mov    %ebx,%ecx
		movswl %si,%edx
		and    $0x0000ff,%eax
		xor    %ebx,%ebx
		call   _0241d4_func
		add    %ecx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018750_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c24f6_data,%dx
		mov    _0c25a4_data,%bx
		mov    _0c25a2_data,%cx
		mov    _0c24f4_data,%di
		xor    %eax,%eax
		mov    _095b0d_data,%al
		test   %eax,%eax
		jne    _0187dc_jump
		mov    _0ce50c_data,%eax
		neg    %eax
		movswl %cx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jge    _018799_jump
		mov    _0ce50c_data,%cx
		neg    %ecx
		add    $0x000008,%ecx

	_018799_jump:
		movswl %dx,%eax
		movswl %cx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jle    _0187ab_jump
		mov    %edx,%ecx
		add    $0x000008,%ecx

	_0187ab_jump:
		mov    _0ce50c_data,%eax
		neg    %eax
		movswl %bx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jge    _0187c8_jump
		mov    _0ce50c_data,%bx
		neg    %ebx
		add    $0x000008,%ebx

	_0187c8_jump:
		movswl %dx,%eax
		movswl %bx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jle    _0187fc_jump
		mov    %edx,%ebx
		add    $0x000008,%ebx
		jmp    _0187fc_jump

	_0187dc_jump:
		movswl %cx,%eax
		test   %eax,%eax
		jge    _0187e5_jump
		xor    %ecx,%ecx

	_0187e5_jump:
		cmp    %dx,%cx
		jle    _0187ec_jump
		mov    %edx,%ecx

	_0187ec_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _0187f5_jump
		xor    %ebx,%ebx

	_0187f5_jump:
		cmp    %dx,%bx
		jle    _0187fc_jump
		mov    %edx,%ebx

	_0187fc_jump:
		mov    _0c25a4_data,%esi
		mov    _0ce504_data,%eax
		sar    $0x000010,%esi
		neg    %eax
		cmp    %eax,%esi
		jge    _01881e_jump
		mov    _0ce504_data,%ax
		neg    %eax
		mov    %ax,_0c25a6_data

	_01881e_jump:
		mov    _0c25a6_data,%ax
		cmp    %di,%ax
		jle    _018830_jump
		mov    %di,_0c25a6_data

	_018830_jump:
		mov    _0c25a6_data,%esi
		mov    _0ce504_data,%eax
		sar    $0x000010,%esi
		neg    %eax
		cmp    %eax,%esi
		jge    _018852_jump
		mov    _0ce504_data,%ax
		neg    %eax
		mov    %ax,_0c25a8_data

	_018852_jump:
		mov    _0c25a8_data,%ax
		cmp    %di,%ax
		jle    _018864_jump
		mov    %di,_0c25a8_data

	_018864_jump:
		mov    %di,_0c24f4_data
		mov    %cx,_0c25a2_data
		mov    %bx,_0c25a4_data
		mov    %dx,_0c24f6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018890_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ebp
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ebp),%eax
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		and    $0x00003f,%dh
		mov    %dx,0x000010(%esp)
		mov    0x00000e(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x00006b(%ebp),%dl
		imul   %ebx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    %eax,0x000004(%esp)
		xor    %edx,%edx
		mov    _0ccfd0_data,%eax
		mov    %edx,0x000014(%esp)
		mov    %eax,0x00000c(%esp)
		jmp    _0189e5_jump

	_0188ef_jump:
		mov    0x000058(%ebp),%eax
		sar    $0x000010,%eax
		cmp    $0x000100,%eax
		jne    _018917_jump
		cmp    $0x000005,%ecx
		jne    _018917_jump
		xor    %eax,%eax
		mov    0x00006a(%ebp),%al
		cmp    $0x000010,%eax
		jg     _018917_jump
		cmp    $0x00000e,%eax
		jl     _018917_jump
		mov    $0xfffffff0,%eax
		jmp    _018919_jump

	_018917_jump:
		xor    %eax,%eax

	_018919_jump:
		mov    0x000004(%esp),%edi
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    0x000068(%ebp),%dl
		mov    0x000001(%edi),%cl
		add    %edx,%edx
		sub    %ecx,%edx
		mov    %edx,%ecx
		xor    %edx,%edx
		mov    0x000005(%ebx),%dl
		sub    %edx,%ecx
		mov    0x000036(%ebp),%di
		add    %ecx,%eax
		add    %edi,%eax

	_01893c_jump:
		mov    0x000081(%ebp),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    0x000004(%esp),%edi
		xor    %ecx,%ecx
		and    $0x0000ff,%edx
		mov    (%edi),%cl
		xor    %ecx,%edx
		jne    _018962_jump
		mov    _0cdf18_data,%edx
		jmp    _018968_jump

	_018962_jump:
		mov    _0cdf20_data,%edx

	_018968_jump:
		mov    %edx,(%esp)
		movswl %ax,%edx
		mov    0x000058(%ebp),%eax
		sar    $0x000010,%eax
		movswl %si,%ecx
		call   _01d264_func
		movswl %ax,%esi
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d1fc_func
		mov    %eax,%edi
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		shl    $0x000008,%edi
		call   _01d1fc_func
		add    %edi,%eax
		xor    %edi,%edi
		mov    (%ebx),%edx
		mov    %ax,%di
		mov    0x000008(%ebp),%eax
		add    %edx,%eax
		mov    %eax,0x000008(%esp)
		mov    0x00000a(%ebx),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %ecx,%ebx
		mov    %al,%dl
		mov    %edi,%ecx
		mov    0x00000c(%esp),%edi
		mov    %esi,%eax
		mov    0x000008(%esp),%esi
		call   *(%esp)

	_0189d1_jump:
		mov    0x000014(%esp),%eax
		mov    0x000004(%esp),%ebx
		inc    %eax
		add    $0x000004,%ebx
		mov    %eax,0x000014(%esp)
		mov    %ebx,0x000004(%esp)

	_0189e5_jump:
		xor    %ecx,%ecx
		mov    0x00000e(%esp),%eax
		mov    0x000014(%esp),%cx
		sar    $0x000010,%eax
		cmp    %eax,%ecx
		jge    _018a58_jump
		mov    0x000004(%esp),%edx
		xor    %eax,%eax
		mov    0x000038(%ebp),%bx
		mov    0x000002(%edx),%al
		add    %ebx,%eax
		movswl %ax,%edx
		mov    0x000058(%ebp),%eax
		sar    $0x000010,%eax
		call   _01d2a0_func
		mov    0x000004(%esp),%edx
		mov    %eax,%esi
		xor    %ah,%ah
		mov    0x000003(%edx),%al
		test   %ax,%ax
		je     _0189d1_jump
		and    $0x00ffff,%eax
		imul   $0x00000c,%eax,%eax
		mov    0x000000(%ebp),%ebx
		add    %eax,%ebx
		cmpb   $0x000000,0x000004(%ebx)
		je     _0189d1_jump
		testb  $0x000008,0x000081(%ebp)
		jne    _0188ef_jump
		mov    0x000004(%esp),%edx
		xor    %eax,%eax
		mov    0x000036(%ebp),%cx
		mov    0x000001(%edx),%al
		add    %ecx,%eax
		jmp    _01893c_jump

	_018a58_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_018a61_jump:
		ret    



_018a64_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x00000b(%ebx),%al
		shl    $0x000005,%al
		shr    $0x000007,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x00001c(%esp),%dl
		xor    %edx,%eax
		je     _018aa3_jump
		mov    _0cdf18_data,%eax
		jmp    _018aa8_jump

	_018aa3_jump:
		mov    _0cdf20_data,%eax

	_018aa8_jump:
		mov    %eax,(%esp)
		mov    0x000058(%esi),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d2a0_func
		movswl %ax,%ecx
		mov    0x000058(%esi),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		call   _01d264_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%esi),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d1fc_func
		shl    $0x000008,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x000058(%esi),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d1fc_func
		add    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    _0ccfd0_data,%eax
		mov    %eax,0x000004(%esp)
		mov    0x000008(%esi),%eax
		mov    (%ebx),%esi
		add    %eax,%esi
		mov    0x00000a(%ebx),%al
		shr    $0x000004,%al
		mov    %ecx,%ebx
		movzbl %al,%ebp
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %ebp,%edx
		mov    0x000004(%esp),%edi
		call   *(%esp)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_018b30_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x00000b(%ebx),%al
		shl    $0x000005,%al
		shr    $0x000007,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x00001c(%esp),%dl
		xor    %edx,%eax
		je     _018b6f_jump
		mov    _0cdf1c_data,%eax
		jmp    _018b74_jump

	_018b6f_jump:
		mov    _0cdf24_data,%eax

	_018b74_jump:
		mov    %eax,(%esp)
		mov    0x000058(%esi),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d2a0_func
		movswl %ax,%ecx
		mov    0x000058(%esi),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		call   _01d264_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%esi),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d1fc_func
		shl    $0x000008,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x000058(%esi),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d1fc_func
		add    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    _0ccfd0_data,%eax
		mov    %eax,0x000004(%esp)
		mov    0x000008(%esi),%eax
		mov    (%ebx),%esi
		add    %eax,%esi
		mov    0x00000a(%ebx),%al
		shr    $0x000004,%al
		mov    %ecx,%ebx
		movzbl %al,%ebp
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %ebp,%edx
		mov    0x000004(%esp),%edi
		call   *(%esp)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_018bfc_func:
		cmpb   $0x000000,_0c1ed2_data
		je     _018a61_jump
		mov    _0c1ec0_data,%eax
		jmp    _018890_func



_018c14_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    _0c25da_data,%eax
		mov    $0x000001,%edx
		sar    $0x000010,%eax
		mov    %dx,_0c25e0_data
		cmp    $0xffffffff,%eax
		je     _018cad_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %esi,%eax
		mov    _0c1b04_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x00007f(%esi),%al
		test   %eax,%eax
		jne    _018cad_jump
		xor    %eax,%eax
		mov    $0x00003d,%edx
		mov    0x000068(%esi),%al
		lea    0x000008(%esp),%ecx
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000036(%esi)
		mov    $0x000005,%edx
		mov    0x000074(%esi),%al
		lea    0x000004(%esp),%ebx
		sub    %eax,%edx
		mov    %esp,%eax
		mov    %dx,0x000038(%esi)
		lea    0x00000c(%esp),%edx
		call   _01630c_func
		mov    $0x000064,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %edx,%ebx
		call   _016349_func
		mov    %esi,%eax
		call   _018890_func
		mov    0x00000c(%esp),%edx
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    (%esp),%eax
		call   _016349_func

	_018cad_jump:
		mov    _0c25dc_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _018d33_jump
		mov    %edx,%esi
		shl    $0x000005,%esi
		add    %edx,%esi
		mov    _0c1b04_data,%eax
		shl    $0x000002,%esi
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x00007f(%esi),%al
		test   %eax,%eax
		jne    _018d33_jump
		xor    %eax,%eax
		mov    $0x000042,%edx
		mov    0x000068(%esi),%al
		lea    0x000008(%esp),%ecx
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000036(%esi)
		mov    $0x00000e,%edx
		mov    0x000074(%esi),%al
		lea    0x000004(%esp),%ebx
		sub    %eax,%edx
		mov    %esp,%eax
		mov    %dx,0x000038(%esi)
		lea    0x00000c(%esp),%edx
		call   _01630c_func
		mov    $0x000064,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %edx,%ebx
		call   _016349_func
		mov    %esi,%eax
		call   _018890_func
		mov    0x00000c(%esp),%edx
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    (%esp),%eax
		call   _016349_func

	_018d33_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018d3c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    _095b0d_data,%al
		test   %eax,%eax
		jne    _018d5e_jump
		mov    $0x000004,%ebx
		xor    %edi,%edi
		mov    %ebx,0x000004(%esp)
		jmp    _018d6c_jump

	_018d5e_jump:
		mov    $0x000008,%edx
		mov    $0x000010,%edi
		mov    %edx,0x000004(%esp)

	_018d6c_jump:
		cmpb   $0x000000,_0c25b1_data
		je     _018f53_jump
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		test   %eax,%eax
		jne    _018dcd_jump
		jmp    _018f53_jump

	_018d87_jump:
		movb   $0x00002c,0x000008(%esp)
		jmp    _018f13_jump

	_018d91_jump:
		movb   $0x00006c,0x000008(%esp)
		jmp    _018f13_jump

	_018d9b_jump:
		movb   $0x00006e,0x000008(%esp)
		jmp    _018f13_jump

	_018da5_jump:
		movb   $0x000071,0x000008(%esp)
		jmp    _018f13_jump

	_018daf_jump:
		movb   $0x00006d,0x000008(%esp)
		jmp    _018f13_jump

	_018db9_jump:
		movb   $0x000070,0x000008(%esp)
		jmp    _018f13_jump

	_018dc3_jump:
		movb   $0x00006f,0x000008(%esp)
		jmp    _018f13_jump

	_018dcd_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000077(%esi),%al
		mov    0x000076(%esi),%dl
		mov    %eax,%ebx
		sub    %edx,%ebx
		imul   $0x000006,%ebx,%edx
		mov    $0x00001d,%ebx
		sub    %eax,%ebx
		imul   $0x000006,%ebx,%eax
		mov    %eax,(%esp)
		mov    _0ce508_data,%ax
		sub    $0x000013,%eax
		sub    %edi,%eax
		movswl %ax,%ecx
		mov    _0ce50c_data,%ax
		mov    0x000004(%esp),%ebx
		sub    $0x000004,%eax
		add    %ebx,%eax
		add    $0x000014,%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		push   $0x000001
		sub    %edx,%eax
		mov    $0x00003d,%edx
		movswl %ax,%ebx
		mov    _0c1ec0_data,%eax
		call   _018a64_func
		mov    _0ce508_data,%ax
		sub    $0x000014,%eax
		sub    %edi,%eax
		movswl %ax,%ecx
		mov    _0ce50c_data,%ax
		mov    0x000004(%esp),%ebx
		sub    $0x000004,%eax
		add    %ebx,%eax
		mov    (%esp),%edx
		add    $0x000015,%eax
		push   $0x000001
		sub    %edx,%eax
		mov    $0x00003c,%edx
		movswl %ax,%ebx
		mov    _0c1ec0_data,%eax
		call   _018a64_func
		mov    0x000060(%esi),%ax
		cmp    $0x0000bb,%ax
		jb     _018ecd_jump
		jbe    _018da5_jump
		cmp    $0x0000da,%ax
		jb     _018ea9_jump
		jbe    _018db9_jump
		cmp    $0x0000e3,%ax
		jb     _018e9a_jump
		jbe    _018d87_jump
		cmp    $0x0000e7,%ax
		je     _018db9_jump
		jmp    _018f13_jump

	_018e9a_jump:
		cmp    $0x0000df,%ax
		je     _018db9_jump
		jmp    _018f13_jump

	_018ea9_jump:
		cmp    $0x0000d4,%ax
		jb     _018ec1_jump
		jbe    _018db9_jump
		cmp    $0x0000d5,%ax
		je     _018d9b_jump
		jmp    _018f13_jump

	_018ec1_jump:
		cmp    $0x0000c6,%ax
		je     _018d91_jump
		jmp    _018f13_jump

	_018ecd_jump:
		cmp    $0x00004a,%ax
		jb     _018efd_jump
		jbe    _018dc3_jump
		cmp    $0x000096,%ax
		jb     _018ef1_jump
		jbe    _018daf_jump
		cmp    $0x0000b4,%ax
		je     _018dc3_jump
		jmp    _018f13_jump

	_018ef1_jump:
		cmp    $0x000062,%ax
		je     _018d9b_jump
		jmp    _018f13_jump

	_018efd_jump:
		cmp    $0x00002e,%ax
		jb     _018f13_jump
		jbe    _018d91_jump
		cmp    $0x000032,%ax
		je     _018d87_jump

	_018f13_jump:
		mov    _0ce508_data,%ax
		sub    $0x00001e,%eax
		sub    %edi,%eax
		mov    0x000004(%esp),%ebx
		movswl %ax,%ecx
		mov    _0ce50c_data,%ax
		push   $0x000001
		add    %ebx,%eax
		xor    %edx,%edx
		sub    $0x000004,%eax
		mov    0x00000c(%esp),%dl
		movswl %ax,%ebx
		mov    _0c1ec0_data,%eax
		call   _01f66c_func
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0c1ec0_data,%eax
		call   _018a64_func

	_018f53_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018f98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _018fdb_jump
		mov    _0c5198_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _01935e_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0c1b04_data,%eax
		shl    $0x000002,%esi
		add    %esi,%eax
		call   _027a98_func
		jmp    _01935e_jump

	_018fdb_jump:
		call   _03eeb8_func
		xor    %eax,%eax
		mov    _0c24d2_data,%al
		cmp    $0x000040,%eax
		je     _018fff_jump
		cmpw   $0x000000,_0ce7e6_data
		jne    _018fff_jump
		movw   $0x00012c,_0ce7e6_data

	_018fff_jump:
		mov    _0ce7e4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _019012_jump
		decw   _0ce7e6_data

	_019012_jump:
		cmpw   $0x000000,_095b3c_data
		jne    _01902a_jump
		cmpw   $0x000000,_0ce7e6_data
		je     _01935e_jump

	_01902a_jump:
		xor    %edx,%edx
		mov    $0x000023,%esi
		mov    _095b0d_data,%dl
		mov    $0x00004d,%eax
		test   %edx,%edx
		jne    _019179_jump
		cmpl   $0x000010,_0ce50c_data
		jg     _01905a_jump
		cmpl   $0x000005,_0ce504_data
		jle    _019179_jump

	_01905a_jump:
		cmpw   $0x000000,_0c25e0_data
		je     _019077_jump
		mov    $0x000055,%eax
		xor    %ebx,%ebx
		mov    $0x00002d,%esi
		mov    %bx,_0c25e0_data

	_019077_jump:
		mov    _0ce504_data,%edx
		movswl %si,%ecx
		sub    $0x000005,%edx
		cmp    %ecx,%edx
		jge    _0190d3_jump
		push   $0x000000
		mov    _0ce502_data,%ecx
		movswl %ax,%ebx
		xor    %edx,%edx
		push   $0x0000ff
		mov    $0x00000d,%eax
		sar    $0x000010,%ecx
		add    $0x000005,%esi
		call   _019f18_func
		push   $0x000000
		mov    _0ce504_data,%cx
		mov    _0ce50c_data,%ax
		mov    _0ce502_data,%edx
		push   $0x0000ff
		sub    $0x00000f,%eax
		sub    %ecx,%esi
		sar    $0x000010,%edx
		movswl %si,%ecx
		movswl %ax,%ebx
		jmp    _0190df_jump

	_0190d3_jump:
		push   $0x000000
		movswl %ax,%ebx
		push   $0x0000ff
		xor    %edx,%edx

	_0190df_jump:
		mov    $0x00000d,%eax
		call   _019f18_func
		mov    _0ce504_data,%eax
		sub    $0x000005,%eax
		cmp    $0x000017,%eax
		jge    _019159_jump
		push   $0x000000
		mov    $0x000044,%ebx
		mov    _0ce504_data,%ax
		mov    $0x000004,%edx
		sub    $0x000004,%eax
		push   $0x0000ff
		movswl %ax,%ecx
		mov    $0x0000f1,%eax
		call   _019f18_func
		mov    $0x00001c,%eax
		mov    _0ce504_data,%si
		push   $0x000000
		sub    %esi,%eax
		mov    _0ce510_data,%dx
		movswl %ax,%ecx
		mov    $0x000138,%eax
		push   $0x0000ff
		sub    %edx,%eax
		mov    _0ce502_data,%edx
		movswl %ax,%ebx
		mov    _0ce50e_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		jmp    _019174_jump

	_019159_jump:
		push   $0x000000
		mov    $0x000017,%ecx
		mov    $0x000044,%ebx
		push   $0x0000ff
		mov    $0x000004,%edx
		mov    $0x0000f1,%eax

	_019174_jump:
		call   _019f18_func

	_019179_jump:
		mov    _0c24d8_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %esi,%eax
		mov    _0c1b04_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmp    $0xfffffffe,%edi
		jne    _0192bb_jump
		xor    %eax,%eax
		mov    _095b0d_data,%al
		cmp    $0x000001,%eax
		jne    _0191af_jump
		mov    $0x000010,%eax
		jmp    _0191b1_jump

	_0191af_jump:
		xor    %eax,%eax

	_0191b1_jump:
		push   $0x000001
		mov    %eax,0x000004(%esp)
		add    $0x000005,%eax
		mov    $0x000010,%ebx
		movswl %ax,%edi
		mov    $0x00001b,%edx
		mov    %edi,%ecx
		mov    %esi,%eax
		call   _018b30_func
		push   $0x000001
		mov    $0x0000f4,%ebx
		mov    $0x000038,%edx
		mov    %edi,%ecx
		mov    %esi,%eax
		call   _018b30_func
		push   $0x000001
		mov    $0x000037,%ebx
		mov    _0c24ca_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018b30_func
		push   $0x000001
		mov    $0x000046,%ebx
		mov    _0c24cb_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018b30_func
		xor    %eax,%eax
		mov    _0c1b92_data,%al
		cmp    $0x0000ff,%eax
		je     _019281_jump
		cmpb   $0x000000,_0c2565_data
		jne    _019281_jump
		mov    (%esp),%eax
		push   $0x000001
		add    $0x00001b,%eax
		mov    $0x000023,%ebx
		movswl %ax,%edi
		mov    _0c24cd_data,%al
		xor    %edx,%edx
		add    $0x000011,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018b30_func
		xor    %eax,%eax
		mov    _0c24d1_data,%al
		cmp    $0x000004,%eax
		jne    _019281_jump
		push   $0x000001
		mov    $0x00003b,%ebx
		mov    _0c24cc_data,%al
		xor    %edx,%edx
		add    $0x000014,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018b30_func

	_019281_jump:
		mov    (%esp),%eax
		push   $0x000001
		add    $0x000005,%eax
		mov    $0x000114,%ebx
		movswl %ax,%edi
		mov    _0c24cf_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018b30_func
		push   $0x000001
		mov    $0x000122,%ebx
		mov    _0c24d0_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		jmp    _019336_jump

	_0192bb_jump:
		mov    _0ce508_data,%ax
		sub    $0x000020,%eax
		movswl %ax,%ecx
		mov    _0ce50c_data,%ax
		push   $0x000001
		add    $0x00000e,%eax
		mov    $0x000038,%edx
		movswl %ax,%ebx
		mov    %esi,%eax
		call   _018b30_func
		mov    _0ce508_data,%ax
		sub    $0x000020,%eax
		movswl %ax,%ecx
		mov    _0ce50c_data,%ax
		add    $0x00002e,%eax
		movswl %ax,%ebx
		mov    _0c24cf_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018b30_func
		mov    _0ce508_data,%ax
		sub    $0x000020,%eax
		movswl %ax,%ecx
		mov    _0ce50c_data,%ax
		add    $0x00003c,%eax
		movswl %ax,%ebx
		mov    _0c24d0_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001

	_019336_jump:
		mov    %al,%dl
		mov    %esi,%eax
		call   _018b30_func
		mov    _0c25da_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _019359_jump
		mov    _0c25dc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _01935e_jump

	_019359_jump:
		call   _018c14_func

	_01935e_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019368_func:
		push   %ebx
		push   %edi
		mov    _0c94c0_data,%edi
		movswl %dx,%ebx
		cwtl   
		sub    $0x000002,%ebx
		call   _014da7_func
		pop    %edi
		pop    %ebx
		ret    



_0193c8_func:
		push   %esi
		mov    0x000006(%esp),%esi
		sar    $0x000010,%esi
		push   %esi
		movswl %cx,%ecx
		push   $0x000007
		add    $0x000008,%ebx
		add    $0x000008,%eax
		push   %ecx
		movswl %bx,%ecx
		movswl %dx,%ebx
		movswl %ax,%edx
		mov    $_019368_func,%eax
		call   _01f1b4_func
		pop    %esi
		ret    $0x000004



_0193f8_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%ebp),%edx
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		xor    %ecx,%ecx
		and    $0x00003f,%dh
		mov    %dx,%cx
		xor    %edx,%edx
		mov    0x00006b(%ebp),%dl
		imul   %ecx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    %eax,0x000004(%esp)
		xor    %eax,%eax
		mov    %bl,%al
		test   %eax,%eax
		jne    _019451_jump
		mov    $0x000005,%ebx
		mov    $0x000003,%eax
		mov    %ebx,0x000010(%esp)
		jmp    _01945c_jump

	_019451_jump:
		mov    $0x000002,%edx
		xor    %eax,%eax
		mov    %edx,0x000010(%esp)

	_01945c_jump:
		mov    0x000010(%esp),%ecx
		mov    %eax,0x00000c(%esp)
		cmp    %cx,%ax
		jmp    _019479_jump

	_019469_jump:
		mov    0x00000c(%esp),%esi
		inc    %esi
		mov    0x000010(%esp),%edi
		mov    %esi,0x00000c(%esp)
		cmp    %di,%si

	_019479_jump:
		ja     _01952f_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%ax
		mov    0x000004(%esp),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %ebx,%ebx
		mov    0x000003(%eax),%bl
		imul   $0x00000c,%ebx,%ebx
		xor    %edx,%edx
		mov    0x000038(%ebp),%cx
		mov    0x000002(%eax),%dl
		add    %edx,%ecx
		mov    0x000000(%ebp),%edx
		add    %edx,%ebx
		cmpb   $0x000000,0x000004(%ebx)
		je     _019469_jump
		mov    0x000001(%eax),%al
		mov    0x000036(%ebp),%si
		xor    %ah,%ah
		add    %eax,%esi
		mov    0x000058(%ebp),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d2a0_func
		movswl %ax,%ecx
		mov    0x000058(%ebp),%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		call   _01d264_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d1fc_func
		mov    %eax,%esi
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		shl    $0x000008,%esi
		call   _01d1fc_func
		add    %esi,%eax
		and    $0x00ffff,%eax
		mov    (%ebx),%esi
		mov    %eax,0x000008(%esp)
		add    0x000008(%ebp),%esi
		mov    0x00000a(%ebx),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %ecx,%ebx
		mov    0x000008(%esp),%ecx
		mov    %al,%dl
		mov    %edi,%eax
		mov    (%esp),%edi
		call   *_0cdf18_data
		jmp    _019469_jump

	_01952f_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_019538_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		movw   $0x000007,0x000010(%esp)
		mov    $0x001000,%ebp
		jmp    _019739_jump

	_019552_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000051,%eax
		jne    _019574_jump
		mov    $0x000001,%ebx
		mov    _0ccfd0_data,%edx
		mov    %esi,%eax
		call   _0193f8_func
		jmp    _019625_jump

	_019574_jump:
		cmp    $0x0000fe,%eax
		jne    _0195c9_jump
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _019587_jump
		neg    %eax

	_019587_jump:
		mov    _09473e_data(,%eax,2),%edx
		mov    0x000073(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		shl    $0x000009,%edx
		cmp    $0x000000,%eax
		je     _0195a8_jump
		mov    $0x000001,%eax
		jg     _0195a8_jump
		neg    %eax

	_0195a8_jump:
		neg    %eax
		imul   %eax,%edx
		mov    $0x000168,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ebp,%ecx
		movswl %ax,%edx
		mov    %ebp,%ebx
		mov    %esi,%eax
		call   _01b900_func
		jmp    _019625_jump

	_0195c9_jump:
		cmp    $0x0000fc,%eax
		je     _0195e2_jump
		cmp    $0x0000fb,%eax
		je     _0195e2_jump
		cmp    $0x0000ad,%eax
		jne    _0196c0_jump

	_0195e2_jump:
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		mov    %esp,%eax
		call   _01630c_func
		mov    $0x0000a0,%edx
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    (%esp),%eax
		call   _016349_func
		mov    %esi,%eax
		call   _018890_func
		mov    0x00000c(%esp),%edx
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    (%esp),%eax
		call   _016349_func

	_019625_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0c2390_data(,%eax,2),%esi
		sar    $0x000010,%esi
		imul   $0x000084,%esi,%esi
		mov    _0c1b04_data,%eax
		add    %eax,%esi
		cmp    _0c245a_data,%di
		jge    _0196cc_jump

	_01964d_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _019670_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000080,_092244_data(,%eax,4)
		je     _019670_jump
		mov    %esi,%eax
		call   _018d3c_func

	_019670_jump:
		mov    0x00000e(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00007e(%esi),%al
		cmp    %edx,%eax
		jne    _019625_jump
		xor    %edx,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00009d,%eax
		jne    _019552_jump
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _019552_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jne    _019552_jump
		cmpl   $0x00012c,0x000028(%esi)
		jl     _019625_jump

	_0196c0_jump:
		mov    %esi,%eax
		call   _018890_func
		jmp    _019625_jump

	_0196cc_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _019776_jump
		mov    _0c6b4c_data,%ecx
		mov    _0c1b70_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		lea    0x000000(,%ecx,2),%eax
		mov    %ebx,%edx
		lea    0x000002(%eax),%esi
		sar    $0x00001f,%edx
		mov    %ebx,%eax
		idiv   %esi
		cmp    %ecx,%edx
		jle    _019713_jump
		cmp    $0x00005a,%ebx
		jle    _019734_jump
		testb  $0x000001,_0c32e6_data
		jne    _019734_jump

	_019713_jump:
		testb  $0x000004,_0c1b9d_data
		je     _019734_jump
		cmpl   $0x000000,_0c1b40_data
		je     _019734_jump
		mov    $_0c1b1c_data,%eax
		call   _018890_func
		call   _018bfc_func

	_019734_jump:
		decw   0x000010(%esp)

	_019739_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jl     _0197c8_jump
		mov    _0c2390_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%esi
		mov    _0c245a_data,%cx
		xor    %edi,%edi
		add    %eax,%esi
		test   %cx,%cx
		jle    _0196cc_jump
		jmp    _01964d_jump

	_019776_jump:
		cmp    $0x000002,%eax
		jne    _019734_jump
		xor    %eax,%eax
		mov    _0c24ea_data,%al
		test   %eax,%eax
		je     _019734_jump
		xor    %ecx,%ecx
		xor    %esi,%esi
		jmp    _01978d_jump

	_01978c_jump:
		inc    %ecx

	_01978d_jump:
		xor    %edx,%edx
		movswl %cx,%eax
		mov    _0c24ea_data,%dl
		cmp    %edx,%eax
		jge    _019734_jump
		mov    _0c24e4_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%edx
		add    %edx,%eax
		cmp    0x000024(%eax),%esi
		je     _01978c_jump
		mov    _0ccfd0_data,%edx
		mov    %esi,%ebx
		call   _0193f8_func
		jmp    _01978c_jump

	_0197c8_jump:
		mov    _0c2390_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c245a_data,%bx
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		xor    %edi,%edi
		add    %edx,%eax
		test   %bx,%bx
		jg     _019815_jump
		jmp    _019836_jump

	_0197f2_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0c2390_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%edx
		add    %edx,%eax
		cmp    %si,%di
		jl     _01981c_jump
		jmp    _019836_jump

	_019815_jump:
		mov    _0c245a_data,%si

	_01981c_jump:
		xor    %edx,%edx
		mov    0x00007e(%eax),%dl
		test   %edx,%edx
		jne    _0197f2_jump
		mov    0x000060(%eax),%dx
		cmp    $0x0000f5,%edx
		jne    _0197f2_jump
		call   _018890_func

	_019836_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019840_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    $0x0000aa,%edx
		mov    _0c25e4_data,%ax
		mov    $0x000003,%ebx
		mov    %eax,0x000004(%esp)
		mov    _0c25e6_data,%ax
		mov    $0x000020,%ecx
		mov    %eax,0x000008(%esp)
		mov    $0x0000a0,%eax
		mov    %bx,0x000010(%esp)
		call   _01d1ec_func
		mov    $0x000006,%edx
		mov    %cx,0x00000c(%esp)
		mov    %dx,(%esp)
		mov    $0x010000,%ebp
		jmp    _0198a6_jump

	_019890_jump:
		mov    0x000010(%esp),%eax
		mov    0x00000c(%esp),%edx
		inc    %eax
		add    $0x000020,%edx
		mov    %ax,0x000010(%esp)
		mov    %dx,0x00000c(%esp)

	_0198a6_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x0000c0,%eax
		jge    _019c30_jump
		lea    0x000100(%eax),%ebx
		mov    %ebp,%edx
		mov    %ebp,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		decw   (%esp)
		mov    %eax,%esi
		movswl %ax,%edx
		mov    _0c25e2_data,%eax
		mov    %edx,%ebx
		sar    $0x000010,%eax
		imul   %eax,%ebx
		sar    $0x000008,%ebx
		sub    %ebx,%eax
		mov    %ax,0x000034(%esp)
		mov    _0c25e4_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		sar    $0x000008,%edx
		mov    0x00000e(%esp),%ebx
		sub    %edx,%eax
		sar    $0x000010,%ebx
		mov    %ax,0x000030(%esp)
		mov    _0c51a6_data(,%ebx,2),%eax
		sar    $0x000010,%eax
		mov    _0c51a4_data,%edx
		shl    $0x000003,%eax
		mov    _0c51b8_data(,%ebx,2),%cx
		add    %eax,%edx
		mov    _0c51a8_data(,%ebx,2),%ax
		mov    _0c24f0_data,%ebx
		sar    $0x000010,%ebx
		add    %eax,%ecx
		cmp    $0x000001,%ebx
		je     _019b14_jump
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    $0x000005,%ebx
		jne    _0199a1_jump
		mov    %eax,0x000024(%esp)
		cmp    %cx,%ax
		jge    _019890_jump

	_019955_jump:
		mov    (%edx),%ebx
		movswl %si,%eax
		sar    $0x000010,%ebx
		imul   %eax,%ebx
		mov    0x00002e(%esp),%edi
		sar    $0x000010,%edi
		sar    $0x000008,%ebx
		add    %edi,%ebx
		movswl (%edx),%edi
		imul   %edi,%eax
		mov    0x000032(%esp),%edi
		sar    $0x000008,%eax
		sar    $0x000010,%edi
		add    %edi,%eax
		mov    _0ccfd0_data,%edi
		call   *_0cdf44_data
		mov    0x000024(%esp),%ebx
		inc    %ebx
		add    $0x000008,%edx
		mov    %ebx,0x000024(%esp)
		cmp    %bx,%cx
		jle    _019890_jump
		jmp    _019955_jump

	_0199a1_jump:
		cmp    $0x000004,%ebx
		jne    _0199ff_jump
		mov    %eax,0x000028(%esp)
		cmp    %cx,%ax
		jge    _019890_jump

	_0199b3_jump:
		mov    (%edx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%edx),%edi
		imul   %eax,%edi
		mov    0x000032(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0ccfd0_data,%edi
		call   *_0cdf40_data
		mov    0x000028(%esp),%edi
		inc    %edi
		add    $0x000008,%edx
		mov    %edi,0x000028(%esp)
		cmp    %di,%cx
		jle    _019890_jump
		jmp    _0199b3_jump

	_0199ff_jump:
		cmp    $0x000003,%ebx
		jne    _019a5d_jump
		mov    %eax,0x00001c(%esp)
		cmp    %cx,%ax
		jge    _019890_jump

	_019a11_jump:
		mov    (%edx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%edx),%edi
		imul   %eax,%edi
		mov    0x000032(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0ccfd0_data,%edi
		call   *_0cdf3c_data
		mov    0x00001c(%esp),%eax
		inc    %eax
		add    $0x000008,%edx
		mov    %eax,0x00001c(%esp)
		cmp    %ax,%cx
		jle    _019890_jump
		jmp    _019a11_jump

	_019a5d_jump:
		cmp    $0x000002,%ebx
		jne    _019abb_jump
		mov    %eax,0x00002c(%esp)
		cmp    %cx,%ax
		jge    _019890_jump

	_019a6f_jump:
		mov    (%edx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%edx),%edi
		imul   %eax,%edi
		mov    0x000032(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0ccfd0_data,%edi
		call   *_0cdf38_data
		mov    0x00002c(%esp),%ebx
		inc    %ebx
		add    $0x000008,%edx
		mov    %ebx,0x00002c(%esp)
		cmp    %bx,%cx
		jle    _019890_jump
		jmp    _019a6f_jump

	_019abb_jump:
		mov    %eax,0x000038(%esp)
		cmp    %cx,%ax
		jge    _019890_jump

	_019ac8_jump:
		mov    (%edx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%edx),%edi
		imul   %edi,%eax
		mov    0x000032(%esp),%edi
		sar    $0x000008,%eax
		sar    $0x000010,%edi
		add    %edi,%eax
		mov    _0ccfd0_data,%edi
		call   *_0cdf34_data
		mov    0x000038(%esp),%edi
		inc    %edi
		add    $0x000008,%edx
		mov    %edi,0x000038(%esp)
		cmp    %di,%cx
		jle    _019890_jump
		jmp    _019ac8_jump

	_019b14_jump:
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    $0x000005,%ebx
		jne    _019b79_jump
		mov    %eax,0x000014(%esp)
		cmp    %cx,%ax
		jge    _019890_jump

	_019b2d_jump:
		mov    (%edx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%edx),%edi
		imul   %eax,%edi
		mov    0x000032(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0ccfd0_data,%edi
		call   *_0cdf54_data
		mov    0x000014(%esp),%eax
		inc    %eax
		add    $0x000008,%edx
		mov    %eax,0x000014(%esp)
		cmp    %ax,%cx
		jle    _019890_jump
		jmp    _019b2d_jump

	_019b79_jump:
		cmp    $0x000002,%ebx
		jle    _019bd7_jump
		mov    %eax,0x000018(%esp)
		cmp    %cx,%ax
		jge    _019890_jump

	_019b8b_jump:
		mov    (%edx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%edx),%edi
		imul   %eax,%edi
		mov    0x000032(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0ccfd0_data,%edi
		call   *_0cdf58_data
		mov    0x000018(%esp),%ebx
		inc    %ebx
		add    $0x000008,%edx
		mov    %ebx,0x000018(%esp)
		cmp    %bx,%cx
		jle    _019890_jump
		jmp    _019b8b_jump

	_019bd7_jump:
		mov    %eax,0x000020(%esp)
		cmp    %cx,%ax
		jge    _019890_jump

	_019be4_jump:
		mov    (%edx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%edx),%edi
		imul   %eax,%edi
		mov    0x000032(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0ccfd0_data,%edi
		call   *_0cdf5c_data
		mov    0x000020(%esp),%edi
		inc    %edi
		add    $0x000008,%edx
		mov    %edi,0x000020(%esp)
		cmp    %di,%cx
		jle    _019890_jump
		jmp    _019be4_jump

	_019c30_jump:
		mov    0x000004(%esp),%eax
		mov    %ax,_0c25e4_data
		mov    0x000008(%esp),%eax
		mov    %ax,_0c25e6_data
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019c50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    _0c25e4_data,%ax
		mov    %eax,0x000020(%esp)
		mov    _0c25e6_data,%ax
		mov    $0x0000aa,%edx
		mov    %eax,0x00001c(%esp)
		mov    $0x0000a0,%eax
		mov    $0xffffffc0,%ebx
		call   _01d1ec_func
		xor    %edx,%edx
		mov    %bx,0x000004(%esp)
		mov    %dx,0x000024(%esp)
		jmp    _019ca5_jump

	_019c8f_jump:
		mov    0x000024(%esp),%ecx
		mov    0x000004(%esp),%esi
		inc    %ecx
		add    $0x000020,%esi
		mov    %cx,0x000024(%esp)
		mov    %si,0x000004(%esp)

	_019ca5_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000020,%eax
		jge    _019e4d_jump
		mov    0x000022(%esp),%edi
		sar    $0x000010,%edi
		mov    _0c51a6_data(,%edi,2),%edx
		mov    _0c51a4_data,%ecx
		sar    $0x000010,%edx
		lea    0x000100(%eax),%esi
		shl    $0x000003,%edx
		mov    $0x010000,%eax
		add    %edx,%ecx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%esi
		movswl %ax,%edx
		mov    _0c25e2_data,%eax
		mov    %edx,%ebp
		sar    $0x000010,%eax
		imul   %eax,%ebp
		sar    $0x000008,%ebp
		sub    %ebp,%eax
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    %ax,0x000010(%esp)
		mov    _0c25e4_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		sar    $0x000008,%edx
		mov    _0c24f0_data,%ebx
		sub    %edx,%eax
		sar    $0x000010,%ebx
		mov    %ax,0x000014(%esp)
		mov    _0c51b8_data(,%edi,2),%dx
		mov    _0c51a8_data(,%edi,2),%ax
		add    %eax,%edx
		cmp    $0x000001,%ebx
		je     _019df4_jump
		test   %edi,%edi
		jne    _019d9b_jump
		mov    %eax,0x000008(%esp)
		cmp    %dx,%ax
		jge    _019c8f_jump

	_019d4f_jump:
		mov    (%ecx),%ebx
		movswl %si,%eax
		sar    $0x000010,%ebx
		imul   %eax,%ebx
		mov    0x000012(%esp),%edi
		sar    $0x000010,%edi
		sar    $0x000008,%ebx
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %edi,%eax
		mov    0x00000e(%esp),%edi
		sar    $0x000008,%eax
		sar    $0x000010,%edi
		add    %edi,%eax
		mov    _0ccfd0_data,%edi
		call   *_0cdf4c_data
		mov    0x000008(%esp),%eax
		inc    %eax
		add    $0x000008,%ecx
		mov    %eax,0x000008(%esp)
		cmp    %ax,%dx
		jle    _019c8f_jump
		jmp    _019d4f_jump

	_019d9b_jump:
		mov    %eax,0x00000c(%esp)
		cmp    %dx,%ax
		jge    _019c8f_jump

	_019da8_jump:
		mov    (%ecx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %edi,%eax
		mov    0x00000e(%esp),%edi
		sar    $0x000008,%eax
		sar    $0x000010,%edi
		add    %edi,%eax
		mov    _0ccfd0_data,%edi
		call   *_0cdf48_data
		mov    0x00000c(%esp),%ebx
		inc    %ebx
		add    $0x000008,%ecx
		mov    %ebx,0x00000c(%esp)
		cmp    %bx,%dx
		jle    _019c8f_jump
		jmp    _019da8_jump

	_019df4_jump:
		mov    %eax,0x000018(%esp)
		cmp    %dx,%ax
		jge    _019c8f_jump

	_019e01_jump:
		mov    (%ecx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %eax,%edi
		mov    0x00000e(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0ccfd0_data,%edi
		call   *_0cdf50_data
		mov    0x000018(%esp),%edi
		inc    %edi
		add    $0x000008,%ecx
		mov    %edi,0x000018(%esp)
		cmp    %di,%dx
		jle    _019c8f_jump
		jmp    _019e01_jump

	_019e4d_jump:
		mov    0x000020(%esp),%eax
		mov    %ax,_0c25e4_data
		mov    0x00001c(%esp),%eax
		mov    %ax,_0c25e6_data
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019e6c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    %dx,(%esp)
		jmp    _019e80_jump

	_019e7c_jump:
		incw   (%esp)

	_019e80_jump:
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    $0x000008,%edx
		jge    _01935e_jump
		imul   $0x000282,%edx,%edx
		cmpw   $0x000000,_0c571e_data(%edx)
		je     _019e7c_jump
		add    $_0c549e_data,%edx
		xor    %ecx,%ecx
		jmp    _019ed9_jump

	_019eaa_jump:
		and    $0x00007f,%bl
		and    $0x0000ff,%ebx
		sar    $0x000005,%eax
		add    $0x000004,%ebx
		add    %eax,%ebx

	_019ebb_jump:
		mov    _0ccfd0_data,%edi
		movzbl %bl,%esi
		movswl (%edx),%eax
		mov    (%edx),%ebx
		sar    $0x000006,%eax
		sar    $0x000016,%ebx
		call   *_0cdf30_data

	_019ed5_jump:
		add    $0x00000a,%edx
		inc    %ecx

	_019ed9_jump:
		movswl %cx,%eax
		cmp    $0x000040,%eax
		jge    _019e7c_jump
		mov    0x000009(%edx),%bl
		xor    %eax,%eax
		mov    %bl,%al
		cmp    $0x000080,%eax
		jl     _019ed5_jump
		mov    (%edx),%esi
		mov    _0ce524_data,%eax
		sar    $0x000010,%esi
		shl    $0x000006,%eax
		cmp    %eax,%esi
		jle    _019ed5_jump
		xor    %eax,%eax
		mov    0x000006(%edx),%al
		test   %eax,%eax
		jge    _019f0b_jump
		neg    %eax

	_019f0b_jump:
		cwtl   
		cmp    $0x000080,%eax
		jl     _019eaa_jump
		mov    $0x000058,%bl
		jmp    _019ebb_jump



_019f18_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %ax,0x000008(%esp)
		mov    %dx,(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000004(%esp)
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _019f4f_jump
		mov    0x000008(%esp),%eax
		xor    %ecx,%ecx
		add    %eax,%ebx
		mov    %cx,0x000008(%esp)
		mov    %bx,0x00000c(%esp)
		jmp    _019f5d_jump

	_019f4f_jump:
		cmp    $0x000140,%eax
		jle    _019f5d_jump
		movw   $0x000140,0x000008(%esp)

	_019f5d_jump:
		mov    0x000006(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0x000140,%eax
		jle    _019f84_jump
		mov    $0x000140,%eax
		mov    0x000008(%esp),%esi
		sub    %esi,%eax
		mov    %ax,0x00000c(%esp)

	_019f84_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _019fa5_jump
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		xor    %ebx,%ebx
		add    %eax,%edx
		mov    %bx,(%esp)
		mov    %dx,0x000004(%esp)
		jmp    _019fb2_jump

	_019fa5_jump:
		cmp    $0x0000c8,%eax
		jle    _019fb2_jump
		movw   $0x0000c8,(%esp)

	_019fb2_jump:
		mov    -0x000002(%esp),%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		cmp    $0x0000c8,%eax
		jle    _019fd8_jump
		mov    $0x0000c8,%eax
		mov    (%esp),%ecx
		sub    %ecx,%eax
		mov    %ax,0x000004(%esp)

	_019fd8_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _01a15f_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _01a15f_jump
		xor    %eax,%eax
		mov    0x00001c(%esp),%al
		cmp    $0x0000ff,%eax
		jne    _01a099_jump
		xor    %eax,%eax
		mov    _095b0c_data,%al
		cmp    $0x000001,%eax
		jne    _01a03c_jump
		mov    0x00000a(%esp),%ecx
		mov    0x000002(%esp),%ebx
		mov    -0x000002(%esp),%edx
		mov    0x000006(%esp),%esi
		mov    _0ccfd0_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%esi
		call   _013266_func
		jmp    _01a099_jump

	_01a03c_jump:
		cmpb   $0x000000,0x000020(%esp)
		je     _01a072_jump
		mov    0x00000a(%esp),%edx
		mov    0x000002(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%esi
		xor    %eax,%eax
		mov    _0ccfd0_data,%edi
		mov    0x000020(%esp),%al
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		call   _014e12_func
		jmp    _01a099_jump

	_01a072_jump:
		mov    0x00000a(%esp),%edx
		mov    0x000002(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%eax
		mov    _0ccfd0_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _014dd5_func

	_01a099_jump:
		xor    %eax,%eax
		mov    0x000020(%esp),%al
		cmp    $0x000001,%eax
		jne    _01a0f3_jump
		xor    %eax,%eax
		mov    _095b0c_data,%al
		cmp    $0x000001,%eax
		jne    _01a0dc_jump
		mov    0x00000a(%esp),%edx
		mov    0x000002(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%eax
		mov    _0ccfd0_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _01332e_func
		jmp    _01a15f_jump

	_01a0dc_jump:
		mov    0x00000a(%esp),%edx
		mov    0x000002(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%esi
		mov    $0x002026,%eax
		jmp    _01a148_jump

	_01a0f3_jump:
		cmp    $0x000002,%eax
		jne    _01a15f_jump
		xor    %eax,%eax
		mov    _095b0c_data,%al
		cmp    $0x000001,%eax
		jne    _01a133_jump
		mov    0x00000a(%esp),%edx
		mov    0x000002(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%eax
		mov    _0ccfd0_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _01332e_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_01a133_jump:
		mov    0x00000a(%esp),%edx
		mov    0x000002(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%esi
		mov    $0x002620,%eax

	_01a148_jump:
		mov    _0ccfd0_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		call   _014ea1_func

	_01a15f_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01a168_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,(%esp)
		mov    %dx,0x000018(%esp)
		mov    %cl,0x000028(%esp)
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x000002,%eax
		jne    _01a1a2_jump
		mov    $0x00000f,%ecx
		mov    $0x000001,%esi
		mov    $0x000008,%edi
		mov    %ecx,0x000024(%esp)
		mov    %si,0x000010(%esp)
		mov    %di,0x000014(%esp)
		jmp    _01a1e3_jump

	_01a1a2_jump:
		cmp    $0x000001,%eax
		jne    _01a1c6_jump
		mov    $0x000017,%edi
		mov    $0x000003,%eax
		mov    $0x00000a,%edx
		mov    %edi,0x000024(%esp)
		mov    %ax,0x000010(%esp)
		mov    %dx,0x000014(%esp)
		jmp    _01a1e3_jump

	_01a1c6_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%ecx
		mov    $0x00000c,%esi
		mov    %edx,0x000024(%esp)
		mov    %cx,0x000010(%esp)
		mov    %si,0x000014(%esp)

	_01a1e3_jump:
		mov    0x000018(%esp),%eax
		mov    %ax,0x00000c(%esp)
		mov    (%esp),%eax
		mov    (%eax),%dl
		mov    %ebx,0x000020(%esp)
		test   %dl,%dl
		je     _01a3c1_jump
		xor    %eax,%eax
		mov    %ax,0x00001c(%esp)
		jmp    _01a358_jump

	_01a209_jump:
		cmp    $0x000020,%dh
		jne    _01a221_jump
		mov    0x000014(%esp),%eax
		mov    0x00000c(%esp),%edx
		add    %eax,%edx
		xor    %bl,%bl
		mov    %dx,0x00000c(%esp)
		jmp    _01a22c_jump

	_01a221_jump:
		xor    %eax,%eax
		mov    %dh,%al
		call   _01eda4_func
		mov    %al,%bl

	_01a22c_jump:
		xor    %ecx,%ecx
		mov    %bl,%cl
		test   %ecx,%ecx
		jne    _01a305_jump
		jmp    _01a353_jump

	_01a23d_jump:
		cmp    $0x000001,%esi
		jne    _01a245_jump
		add    $0x000029,%bl

	_01a245_jump:
		xor    %eax,%eax
		mov    %bl,%al
		imul   $0x00000c,%eax,%eax
		mov    _0c2468_data,%ebp
		add    %eax,%ebp
		xor    %eax,%eax
		mov    0x000020(%esp),%edx
		mov    0x000006(%ebp),%al
		sub    %eax,%edx
		movswl %dx,%ebx
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    0x00000a(%esp),%eax
		shl    $0x000008,%edx
		sar    $0x000010,%eax
		add    %edi,%edx
		mov    _0c246c_data,%ecx
		mov    0x000000(%ebp),%esi
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    _0ccfd0_data,%edi
		mov    0x00003c(%esp),%cl
		and    $0x00ffff,%edx
		mov    %ecx,0x000004(%esp)
		mov    %edx,%ecx
		mov    0x000004(%esp),%edx
		call   *_0cdf28_data
		jmp    _01a32b_jump

	_01a2a5_jump:
		imul   $0x00000c,%ecx,%ecx
		mov    _0c245c_data,%ebp
		add    %ecx,%ebp
		xor    %edx,%edx
		mov    0x000020(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000004(%esp)
		xor    %dh,%dh
		mov    _0ccfd0_data,%edi
		mov    0x000006(%ebp),%dl
		mov    _0c2460_data,%ecx
		shl    $0x000008,%edx
		mov    0x000000(%ebp),%esi
		add    %edx,%eax
		xor    %edx,%edx
		add    %ecx,%esi
		mov    %ax,%dx
		xor    %eax,%eax
		movswl %bx,%ebx
		mov    0x00003c(%esp),%al
		mov    %edx,%ecx
		mov    %eax,0x000008(%esp)
		mov    0x000004(%esp),%eax
		mov    0x000008(%esp),%edx
		call   *_0cdf28_data
		jmp    _01a32b_jump

	_01a305_jump:
		movzbl 0x000028(%esp),%esi
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _01ec84_func
		mov    %eax,%edi
		mov    0x000028(%esp),%dl
		cmp    $0x000001,%dl
		jbe    _01a23d_jump
		cmp    $0x000002,%dl
		je     _01a2a5_jump

	_01a32b_jump:
		mov    0x000009(%ebp),%al
		and    $0x00000f,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x000007(%ebp),%dl
		add    %edx,%eax
		mov    0x00000e(%esp),%edx
		mov    0x00000a(%esp),%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sub    %edx,%eax
		add    %eax,%ecx
		mov    %cx,0x00000c(%esp)

	_01a353_jump:
		incw   0x00001c(%esp)

	_01a358_jump:
		mov    0x00001a(%esp),%esi
		mov    (%esp),%ecx
		sar    $0x000010,%esi
		add    %esi,%ecx
		mov    (%ecx),%dh
		test   %dh,%dh
		je     _01a3c1_jump
		cmp    $0x00002f,%dh
		jne    _01a209_jump
		mov    0x00000e(%esp),%ecx
		mov    0x000012(%esp),%ebx
		xor    %eax,%eax
		mov    %esi,%edx
		mov    0x000028(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    0x000004(%esp),%eax
		call   _01ee54_func
		cwtl   
		mov    0x000016(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %dx,0x00000c(%esp)
		cmp    $0x000001,%esi
		jle    _01a3b1_jump
		mov    0x000024(%esp),%eax
		add    %eax,0x000020(%esp)

	_01a3b1_jump:
		xor    %bl,%bl
		xor    %ecx,%ecx
		mov    %bl,%cl
		test   %ecx,%ecx
		jne    _01a305_jump
		jmp    _01a353_jump

	_01a3c1_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01a3cc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,(%esp)
		mov    %dx,0x00000c(%esp)
		mov    %cl,0x00001c(%esp)
		xor    %ah,%ah
		mov    %ah,0x000020(%esp)
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x000002,%eax
		jne    _01a40c_jump
		mov    $0x00000f,%edi
		mov    $0x000001,%eax
		mov    $0x000008,%edx
		mov    %edi,0x000008(%esp)
		mov    %ax,0x000014(%esp)
		mov    %dx,0x000004(%esp)
		jmp    _01a44d_jump

	_01a40c_jump:
		cmp    $0x000001,%eax
		jne    _01a430_jump
		mov    $0x000017,%eax
		mov    $0x000003,%edx
		mov    $0x00000a,%ecx
		mov    %eax,0x000008(%esp)
		mov    %dx,0x000014(%esp)
		mov    %cx,0x000004(%esp)
		jmp    _01a44d_jump

	_01a430_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%ecx
		mov    $0x00000c,%edi
		mov    %edx,0x000008(%esp)
		mov    %cx,0x000014(%esp)
		mov    %di,0x000004(%esp)

	_01a44d_jump:
		mov    (%esp),%eax
		mov    0x00000c(%esp),%edi
		mov    (%eax),%dl
		mov    %ebx,0x000018(%esp)
		test   %dl,%dl
		je     _01a5e8_jump
		xor    %ebx,%ebx
		mov    %bx,0x000010(%esp)
		jmp    _01a57c_jump

	_01a46e_jump:
		cmp    $0x000020,%dh
		jne    _01a47f_jump
		add    0x000004(%esp),%edi
		xor    %cl,%cl
		mov    %cl,0x000020(%esp)
		jmp    _01a48f_jump

	_01a47f_jump:
		mov    %dh,%al
		and    $0x0000ff,%eax
		call   _01eda4_func
		mov    %al,0x000020(%esp)

	_01a48f_jump:
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		test   %edx,%edx
		jne    _01a532_jump
		jmp    _01a577_jump

	_01a4a2_jump:
		xor    %eax,%eax
		mov    0x000020(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    _0c2468_data,%esi
		add    %eax,%esi
		mov    0x00003e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000024(%esp),%edx
		mov    0x000006(%esi),%al
		sub    %eax,%edx
		movswl %di,%ebx
		movswl %dx,%ecx
		mov    %esi,%eax
		mov    _0c246c_data,%edx
		call   _01bbe0_func
		jmp    _01a559_jump

	_01a4eb_jump:
		movzbl 0x000020(%esp),%esi
		imul   $0x00000c,%esi,%esi
		mov    _0c245c_data,%eax
		add    %eax,%esi
		mov    0x00003e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x000024(%esp),%edx
		mov    0x000006(%esi),%al
		sub    %eax,%edx
		movswl %di,%ebx
		movswl %dx,%ecx
		mov    %esi,%eax
		mov    _0c2460_data,%edx
		call   _01bbe0_func
		jmp    _01a559_jump

	_01a532_jump:
		movzbl 0x00001c(%esp),%ebp
		mov    %ebp,%eax
		call   _01ec84_func
		lea    0x000020(%esp),%edx
		mov    %ebp,%eax
		call   _01ee44_func
		mov    0x00001c(%esp),%al
		cmp    $0x000001,%al
		jbe    _01a4a2_jump
		cmp    $0x000002,%al
		je     _01a4eb_jump

	_01a559_jump:
		mov    0x000009(%esi),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		add    %edx,%eax
		mov    0x000012(%esp),%edx
		sar    $0x000010,%edx
		movswl %di,%edi
		sub    %edx,%eax
		add    %eax,%edi

	_01a577_jump:
		incw   0x000010(%esp)

	_01a57c_jump:
		mov    0x00000e(%esp),%ebp
		mov    (%esp),%eax
		sar    $0x000010,%ebp
		add    %ebp,%eax
		mov    (%eax),%dh
		test   %dh,%dh
		je     _01a5e8_jump
		cmp    $0x00002f,%dh
		jne    _01a46e_jump
		mov    0x000012(%esp),%ecx
		mov    0x000002(%esp),%ebx
		xor    %eax,%eax
		mov    %ebp,%edx
		mov    0x00001c(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    0x000004(%esp),%eax
		call   _01ee54_func
		cwtl   
		mov    0x00000a(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,%edi
		cmp    $0x000001,%ebp
		jle    _01a5d2_jump
		mov    0x000008(%esp),%eax
		add    %eax,0x000018(%esp)

	_01a5d2_jump:
		xor    %ch,%ch
		mov    %ch,0x000020(%esp)
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		test   %edx,%edx
		jne    _01a532_jump
		jmp    _01a577_jump

	_01a5e8_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000010



_01a5f4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,0x000004(%esp)
		mov    %dx,0x00000c(%esp)
		xor    %ah,%ah
		mov    %ah,0x000028(%esp)
		xor    %eax,%eax
		mov    0x00003c(%esp),%al
		cmp    $0x000002,%eax
		jne    _01a633_jump
		mov    $0x00000f,%edi
		mov    $0x000001,%eax
		mov    $0x000008,%edx
		mov    %edi,0x000024(%esp)
		mov    %ax,0x000008(%esp)
		mov    %dx,0x00001c(%esp)
		jmp    _01a674_jump

	_01a633_jump:
		cmp    $0x000001,%eax
		jne    _01a657_jump
		mov    $0x000017,%eax
		mov    $0x000003,%edx
		mov    $0x00000a,%esi
		mov    %eax,0x000024(%esp)
		mov    %dx,0x000008(%esp)
		mov    %si,0x00001c(%esp)
		jmp    _01a674_jump

	_01a657_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%esi
		mov    $0x00000c,%edi
		mov    %edx,0x000024(%esp)
		mov    %si,0x000008(%esp)
		mov    %di,0x00001c(%esp)

	_01a674_jump:
		mov    0x00000c(%esp),%eax
		mov    %ax,0x000010(%esp)
		mov    0x000004(%esp),%eax
		mov    (%eax),%dl
		mov    %ebx,0x000018(%esp)
		test   %dl,%dl
		je     _01a893_jump
		xor    %ebx,%ebx
		mov    %cx,0x000014(%esp)
		mov    %bx,0x000020(%esp)
		jmp    _01a820_jump

	_01a6a0_jump:
		cmp    $0x000020,%dh
		jne    _01a6b6_jump
		mov    0x00001c(%esp),%eax
		add    %ax,0x000010(%esp)
		xor    %cl,%cl
		mov    %cl,0x000028(%esp)
		jmp    _01a6c6_jump

	_01a6b6_jump:
		mov    %dh,%al
		and    $0x0000ff,%eax
		call   _01eda4_func
		mov    %al,0x000028(%esp)

	_01a6c6_jump:
		xor    %edx,%edx
		mov    0x000028(%esp),%dl
		test   %edx,%edx
		jne    _01a794_jump
		jmp    _01a80a_jump

	_01a6d9_jump:
		xor    %edx,%edx
		mov    0x000028(%esp),%dl
		imul   $0x00000c,%edx,%edx
		mov    _0c2468_data,%ebp
		add    %edx,%ebp
		xor    %edx,%edx
		mov    0x000018(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		add    %ebx,%eax
		mov    0x00000e(%esp),%edi
		movswl %ax,%ebx
		xor    %ah,%ah
		xor    %ecx,%ecx
		mov    %dl,%al
		sar    $0x000010,%edi
		shl    $0x000008,%eax
		mov    0x000000(%ebp),%edx
		add    %esi,%eax
		mov    _0c246c_data,%esi
		mov    %ax,%cx
		mov    _0ccfd0_data,%eax
		add    %edx,%esi
		xor    %edx,%edx
		mov    %eax,(%esp)
		mov    0x000040(%esp),%dl
		mov    %edi,%eax
		mov    (%esp),%edi
		call   *_0cdf28_data
		jmp    _01a7e1_jump

	_01a738_jump:
		movzbl 0x000028(%esp),%ebp
		imul   $0x00000c,%ebp,%ebp
		mov    _0c245c_data,%edx
		add    %edx,%ebp
		xor    %edx,%edx
		mov    0x000018(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		add    %ebx,%eax
		movswl %ax,%ebx
		xor    %ah,%ah
		mov    0x000006(%ebp),%al
		shl    $0x000008,%eax
		xor    %ecx,%ecx
		add    %esi,%eax
		mov    %ax,%cx
		mov    0x000000(%ebp),%esi
		mov    _0c2460_data,%eax
		mov    _0ccfd0_data,%edi
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x00000e(%esp),%edx
		mov    0x000040(%esp),%al
		sar    $0x000010,%edx
		mov    %eax,(%esp)
		mov    %edx,%eax
		mov    (%esp),%edx
		call   *_0cdf28_data
		jmp    _01a7e1_jump

	_01a794_jump:
		xor    %ebx,%ebx
		mov    0x00003c(%esp),%bl
		mov    %ebx,%eax
		call   _01ec84_func
		lea    0x000028(%esp),%edx
		mov    %eax,%esi
		mov    %ebx,%eax
		call   _01ee44_func
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000005,%cl
		call   _0557d0_func
		test   %ax,%ax
		js     _01a7c6_jump
		sar    %cl,%ax
		jmp    _01a7cf_jump

	_01a7c6_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01a7cf_jump:
		cmp    $0x000001,%bl
		jbe    _01a6d9_jump
		cmp    $0x000002,%bl
		je     _01a738_jump

	_01a7e1_jump:
		mov    0x000009(%ebp),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%ebp),%al
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000010(%esp)

	_01a80a_jump:
		mov    0x000014(%esp),%edi
		mov    0x000020(%esp),%eax
		add    $0x000020,%edi
		inc    %eax
		mov    %di,0x000014(%esp)
		mov    %ax,0x000020(%esp)

	_01a820_jump:
		mov    0x00001e(%esp),%esi
		mov    0x000004(%esp),%eax
		sar    $0x000010,%esi
		add    %esi,%eax
		mov    (%eax),%dh
		test   %dh,%dh
		je     _01a893_jump
		cmp    $0x00002f,%dh
		jne    _01a6a0_jump
		mov    0x000006(%esp),%ecx
		mov    0x00001a(%esp),%ebx
		xor    %eax,%eax
		mov    %esi,%edx
		mov    0x00003c(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    0x000008(%esp),%eax
		call   _01ee54_func
		cwtl   
		mov    0x00000a(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %dx,0x000010(%esp)
		cmp    $0x000001,%esi
		jle    _01a87a_jump
		mov    0x000024(%esp),%eax
		add    %eax,0x000018(%esp)

	_01a87a_jump:
		xor    %ch,%ch
		mov    %ch,0x000028(%esp)
		xor    %edx,%edx
		mov    0x000028(%esp),%dl
		test   %edx,%edx
		jne    _01a794_jump
		jmp    _01a80a_jump

	_01a893_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01a89c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    0x0000c8(%eax),%ax
		mov    0x0000ca(%esi),%di
		mov    0x0000cc(%esi),%bx
		mov    0x0000ce(%esi),%dx
		mov    0x0000d5(%esi),%cl
		sub    $0x000003,%eax
		sub    $0x000003,%edi
		add    $0x000006,%ebx
		add    $0x000006,%edx
		test   %cl,%cl
		je     _01a968_jump
		xor    %ecx,%ecx
		mov    0x0000d6(%esi),%cl
		push   %ecx
		movswl %bx,%ebx
		cwtl   
		push   $0x0000ff
		movswl %dx,%ecx
		movswl %di,%edx
		call   _019f18_func
		xor    %eax,%eax
		mov    0x0000d6(%esi),%al
		cmp    $0x000001,%eax
		jne    _01a92f_jump
		xor    %eax,%eax
		mov    0x0000d7(%esi),%al
		push   %eax
		mov    0x0000d2(%esi),%ax
		dec    %eax
		movswl %ax,%ebx
		mov    0x0000d0(%esi),%ax
		xor    %ecx,%ecx
		dec    %eax
		mov    0x0000d4(%esi),%cl
		movswl %ax,%edx
		jmp    _01a9b1_jump

	_01a92f_jump:
		cmp    $0x000002,%eax
		jne    _01a98e_jump
		xor    %eax,%eax
		mov    0x0000d7(%esi),%al
		push   %eax
		mov    0x0000d2(%esi),%ax
		inc    %eax
		movswl %ax,%ebx
		mov    0x0000d0(%esi),%ax
		xor    %ecx,%ecx
		inc    %eax
		mov    0x0000d4(%esi),%cl
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01a168_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01a968_jump:
		cmpb   $0x000000,0x0000d6(%esi)
		je     _01a98e_jump
		xor    %ecx,%ecx
		mov    0x0000d6(%esi),%cl
		push   %ecx
		movswl %bx,%ebx
		cwtl   
		push   $0x0000fe
		movswl %dx,%ecx
		movswl %di,%edx
		call   _019f18_func

	_01a98e_jump:
		mov    0x0000d0(%esi),%ebx
		mov    0x0000ce(%esi),%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x0000d7(%esi),%al
		sar    $0x000010,%edx
		push   %eax
		mov    0x0000d4(%esi),%cl

	_01a9b1_jump:
		mov    %esi,%eax
		call   _01a168_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01a9c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		xor    %eax,%eax
		mov    _095b0c_data,%al
		cmp    $0x000001,%eax
		jne    _01a9e5_jump
		mov    $0x003e80,%ecx
		mov    _0ccfd0_data,%edi
		call   _012783_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01a9e5_jump:
		mov    $0x00fa00,%ebx
		mov    _0cdefc_data,%eax
		xor    %edx,%edx
		call   _0787d0_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01a9fc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,0x000008(%esp)
		mov    %edx,0x000010(%esp)
		mov    _0c6926_data,%eax
		mov    %esp,%edi
		sar    $0x000010,%eax
		mov    $_0c68b0_data,%edx
		shl    $0x000002,%eax
		mov    $_095bb4_data,%esi
		add    %eax,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    (%edx),%ah
		mov    %edx,%ecx
		inc    %ah
		mov    0x000001(%edx),%bl
		mov    %ah,(%edx)
		cmp    %bl,%ah
		jbe    _01aa58_jump
		mov    $0x000007,%eax
		call   _064360_func
		mov    %eax,%ebx
		mov    $0x000005,%eax
		movb   $0x000000,(%edx)
		call   _064360_func
		mov    %al,0x000001(%edx)
		mov    %bl,0x000002(%edx)
		mov    %bl,0x000003(%edx)

	_01aa58_jump:
		mov    0x000008(%esp),%edx
		mov    _0c247c_data,%bx
		mov    0x000002(%ecx),%al
		sub    %ebx,%edx
		mov    _0c247e_data,%si
		mov    %edx,%ebx
		mov    0x000010(%esp),%edx
		sub    %esi,%edx
		xor    %ah,%ah
		mov    %edx,%esi
		add    %eax,%ebx
		add    %eax,%esi
		movswl %bx,%eax
		test   %eax,%eax
		jle    _01ab06_jump
		mov    $0x000140,%edx
		sub    %eax,%edx
		test   %edx,%edx
		jle    _01ab06_jump
		movswl %si,%ebx
		test   %ebx,%ebx
		jle    _01ab06_jump
		mov    $0x0000c8,%edx
		sub    %ebx,%edx
		test   %edx,%edx
		jle    _01ab06_jump
		xor    %edx,%edx
		mov    0x000003(%ecx),%dl
		xor    %ecx,%ecx
		mov    (%esp,%edx,1),%cl
		lea    0x000000(,%ecx,4),%edx
		sub    %ecx,%edx
		mov    _0c1ec0_data,%ecx
		shl    $0x000002,%edx
		mov    (%ecx),%esi
		add    %esi,%edx
		movzbw 0x000006(%edx),%si
		shl    $0x000008,%esi
		mov    %esi,0x00000c(%esp)
		mov    0x00000c(%esp),%edi
		movzbw 0x000005(%edx),%si
		mov    _0ccfd0_data,%ebp
		add    %edi,%esi
		xor    %edi,%edi
		mov    0x000008(%ecx),%ecx
		mov    %si,%di
		mov    (%edx),%esi
		mov    0x00000a(%edx),%dl
		add    %ecx,%esi
		shr    $0x000004,%dl
		and    $0x0000ff,%edx
		mov    %edi,%ecx
		mov    %ebp,%edi
		call   *_0cdf18_data

	_01ab06_jump:
		mov    _0c6926_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00001e,%eax
		jge    _01ab1a_jump
		incw   _0c6928_data

	_01ab1a_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01ab24_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000007,%eax
		jne    _01abe5_jump
		testb  $0x000004,_0c1b9d_data
		je     _01abe5_jump
		mov    _0c25d8_data,%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		shl    $0x000005,%eax
		lea    0x000008(%esp),%ecx
		add    %esi,%eax
		mov    _0c1b04_data,%esi
		shl    $0x000002,%eax
		lea    0x000004(%esp),%ebx
		add    %eax,%esi
		mov    %esp,%eax
		xor    %edx,%edx
		push   %eax
		lea    0x000010(%esp),%eax
		mov    %dx,_0c6928_data
		push   %eax
		mov    $0x000001,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d840_func
		mov    0x00000a(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%esi),%al
		mov    0x000006(%esp),%edx
		add    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000011,%eax
		add    %edx,%eax
		sub    $0x000006,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000074(%esi),%al
		push   $0x000080
		add    %ecx,%eax
		push   $0x000005
		cwtl   
		movswl %bx,%ecx
		push   %eax
		movswl %dx,%ebx
		mov    $_01a9fc_func,%eax
		movswl %di,%edx
		call   _01f1b4_func

	_01abe5_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01abf0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000d8,%esp
		push   $0x000000
		mov    $0x000010,%ecx
		mov    $0x000140,%ebx
		push   $0x0000ff
		xor    %edx,%edx
		xor    %eax,%eax
		call   _019f18_func
		push   $0x000000
		mov    $0x000028,%ecx
		mov    $0x000140,%ebx
		push   $0x0000ff
		mov    $0x0000a0,%edx
		xor    %eax,%eax
		call   _019f18_func
		xor    %edx,%edx
		mov    _0c32ee_data,%dl
		cmp    $0x0000ff,%edx
		je     _01ad5b_jump
		mov    _0c32f0_data,%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		shl    $0x000005,%eax
		add    %esi,%eax
		mov    _0c1b04_data,%ebp
		shl    $0x000002,%eax
		add    %eax,%ebp
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    $0x0000d8,%ecx
		sub    %edx,%eax
		mov    $_0c32f6_data,%esi
		shl    $0x000003,%eax
		mov    %esp,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01ad5b_jump
		testb  $0x000004,0x000081(%ebp)
		je     _01ad54_jump
		xor    %eax,%eax
		mov    $0x0000be,%edx
		mov    0x000069(%ebp),%al
		sub    %eax,%edx
		xor    %ebx,%ebx
		mov    %dx,0x000038(%ebp)
		mov    0x000068(%ebp),%bl
		add    0x000036(%ebp),%bx
		mov    0x0000c6(%esp),%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		lea    -0x000008(%edx),%esi
		cmp    %eax,%esi
		jle    _01acfd_jump
		mov    0x0000ca(%esp),%edi
		sar    $0x000010,%edi
		add    %eax,%edi
		cmp    %edi,%edx
		jge    _01acfd_jump
		mov    %esi,%edx
		sub    %eax,%edx
		mov    $0x000007,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cwtl   
		xor    %dh,%dh
		mov    %dh,(%esp,%eax,1)
		jmp    _01ad1a_jump

	_01acfd_jump:
		mov    0x0000c6(%esp),%edx
		mov    0x0000ca(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		movswl %bx,%edx
		cmp    %eax,%edx
		jl     _01ad21_jump

	_01ad1a_jump:
		mov    %esp,%eax
		call   _01a89c_func

	_01ad21_jump:
		xor    %eax,%eax
		mov    0x000038(%ebp),%cx
		mov    0x000069(%ebp),%al
		push   $0x000000
		add    %ecx,%eax
		push   $0x0000ff
		sub    $0x000014,%eax
		mov    $0x000012,%ecx
		movswl %ax,%edx
		movswl %bx,%eax
		mov    $0x00001e,%ebx
		call   _019f18_func
		mov    %ebp,%eax
		call   _018890_func
		jmp    _01ad5b_jump

	_01ad54_jump:
		mov    %esp,%eax
		call   _01a89c_func

	_01ad5b_jump:
		xor    %edx,%edx
		mov    _0c32ef_data,%dl
		cmp    $0x0000ff,%edx
		je     _01ada7_jump
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    $_0c32f6_data,%esi
		sub    %edx,%eax
		mov    $0x0000d8,%ecx
		shl    $0x000003,%eax
		mov    %esp,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01ada7_jump
		mov    %esp,%eax
		call   _01a89c_func

	_01ada7_jump:
		add    $0x0000d8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01adb4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		movswl %dx,%ebp
		shl    $0x000002,%ebp
		xor    %ebx,%ebx
		mov    _0c5178_data(%ebp),%bl
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%eax
		mov    %ebx,%edx
		mov    %ax,0x000004(%esp)
		sar    $0x00001f,%edx
		mov    %ebx,%eax
		idiv   %ecx
		mov    _0cd07e_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		add    $0x00001c,%edx
		mov    %dx,0x000008(%esp)
		mov    _0cd072_data,%dx
		push   $0x000001
		add    %edx,%eax
		movswl %si,%ebx
		sub    $0x000017,%eax
		mov    $0x00001b,%edx
		movswl %ax,%ecx
		mov    $_0c1db0_data,%eax
		call   _018a64_func
		mov    _0c1db0_data,%eax
		mov    0x000149(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cd07e_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cd072_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000008(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0c1db0_data,%eax
		call   _018a64_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0c1db0_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cd07e_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cd072_data,%cx
		xor    %edx,%edx
		add    %ecx,%eax
		mov    0x00000c(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0c1db0_data,%eax
		call   _018a64_func
		xor    %edx,%edx
		mov    _0c517b_data(%ebp),%dl
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x00001c,%edx
		mov    %dx,0x000008(%esp)
		mov    _0c1db0_data,%eax
		mov    0x000155(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cd07e_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cd072_data,%dx
		add    $0x00000a,%esi
		add    %edx,%eax
		movswl %si,%ebx
		sub    $0x000017,%eax
		mov    $0x000039,%edx
		movswl %ax,%ecx
		mov    $_0c25f4_data,%eax
		call   _018a64_func
		mov    _0c25f4_data,%edx
		xor    %eax,%eax
		mov    0x0002b1(%edx),%al
		add    %eax,%esi
		mov    _0cd07e_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cd072_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x00000c(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0c1db0_data,%eax
		call   _018a64_func
		xor    %edx,%edx
		mov    _0c517a_data(%ebp),%dl
		lea    0x000000(,%edx,4),%ebx
		sub    %edx,%ebx
		shl    $0x000003,%ebx
		add    %ebx,%edx
		shl    $0x000002,%edx
		mov    $0x000066,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %ax,%ebx
		mov    $0x000064,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x00000a,%ecx
		add    $0x00001c,%eax
		mov    %ebx,%edx
		mov    %ax,(%esp)
		sar    $0x00001f,%edx
		mov    %ebx,%eax
		idiv   %ecx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%edx
		mov    %dx,0x000004(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%edx
		mov    _0c1db0_data,%eax
		mov    %dx,0x000008(%esp)
		mov    0x0001c1(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cd07e_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		xor    %edx,%edx
		mov    _0cd072_data,%cx
		mov    0x000004(%esp),%dl
		add    %ecx,%eax
		add    $0x00000a,%esi
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0c1db0_data,%eax
		call   _018a64_func
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1db0_data,%edx
		mov    0x000005(%edx,%eax,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cd07e_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cd072_data,%dx
		movswl %si,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    $0x000017,%eax
		mov    0x000008(%esp),%dl
		movswl %ax,%ecx
		mov    $_0c1db0_data,%eax
		call   _018a64_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0c1db0_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cd07e_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cd072_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x00000c(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0c1db0_data,%eax
		call   _018a64_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0c1db0_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cd07e_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000002
		mov    _0cd072_data,%cx
		movswl %si,%edx
		add    %ecx,%eax
		mov    $0x000001,%ecx
		movswl %ax,%ebx
		mov    $_0bffda_data,%eax
		call   _01a168_func
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01b0fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cd086_data,%dx
		mov    _0cd07e_data,%ax
		dec    %edx
		add    $0x000017,%eax
		imul   %edx,%eax
		mov    _0cd072_data,%dx
		push   $0x000000
		add    %edx,%eax
		mov    $0x00000a,%ebx
		sub    $0x000017,%eax
		mov    $0x000002,%edx
		movswl %ax,%ecx
		mov    $_0c25f4_data,%eax
		call   _018a64_func
		mov    _0c25f4_data,%eax
		xor    %edx,%edx
		mov    0x00001e(%eax),%dl
		add    $0x000018,%eax
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0cd072_data,%edx
		sar    $0x000010,%edx
		sub    $0x00000b,%edx
		sub    %eax,%edx
		mov    _0cd088_data,%ax
		dec    %eax
		imul   $0x000064,%eax,%eax
		push   $0x000000
		movswl %dx,%ecx
		mov    $0x000002,%edx
		movswl %ax,%ebx
		mov    $_0c25f4_data,%eax
		call   _018a64_func
		mov    _0cd090_data,%bx
		test   %bx,%bx
		je     _01b1c1_jump
		mov    %ebx,%edx
		mov    _0cd07e_data,%ax
		dec    %edx
		add    $0x000017,%eax
		imul   %edx,%eax
		mov    _0cd072_data,%cx
		push   $0x000000
		add    %ecx,%eax
		mov    $0x00000a,%ebx
		sub    $0x000017,%eax
		mov    $0x000001,%edx
		movswl %ax,%ecx
		mov    $_0c25f4_data,%eax
		call   _018a64_func

	_01b1c1_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b288_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000024,%esp
		mov    %eax,%ebx
		mov    _0c24d8_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmp    $0xfffffffe,%ebx
		je     _01b4d3_jump
		mov    $0x00003c,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    $0x00000a,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000258,%ecx
		mov    %dl,0x000018(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    $0x00000a,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x001770,%ecx
		mov    %dl,0x000020(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    $0x00000a,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ah,%ah
		mov    %ah,0x000014(%esp)
		mov    _0ce508_data,%ax
		sub    $0x000020,%eax
		push   $0x000005
		movswl %ax,%ebx
		mov    _0ce510_data,%ax
		mov    $0x000002,%ecx
		sub    $0x000034,%eax
		mov    %dl,0x000020(%esp)
		movswl %ax,%edx
		mov    _0cd9cc_data,%eax
		call   _01a168_func
		mov    0x00001c(%esp),%dl
		test   %dl,%dl
		je     _01b375_jump
		mov    _0ce508_data,%ax
		sub    $0x00001e,%eax
		movswl %ax,%ecx
		mov    _0ce510_data,%ax
		sub    $0x000032,%eax
		movswl %ax,%ebx
		mov    %dl,%al
		add    $0x00001c,%al
		xor    %edx,%edx
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018a64_func
		movb   $0x00000f,0x000014(%esp)

	_01b375_jump:
		mov    _0ce508_data,%ax
		sub    $0x00001e,%eax
		movswl %ax,%ecx
		mov    _0ce510_data,%ax
		movzbw 0x000014(%esp),%di
		sub    $0x000032,%eax
		add    %edi,%eax
		movswl %ax,%ebx
		mov    0x000020(%esp),%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018a64_func
		mov    _0ce508_data,%ax
		sub    $0x00001e,%eax
		movswl %ax,%ecx
		mov    _0ce510_data,%ax
		sub    $0x000023,%eax
		push   $0x000001
		add    %eax,%edi
		mov    0x00001c(%esp),%al
		xor    %edx,%edx
		add    $0x00001c,%al
		movswl %di,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018a64_func
		mov    _0c4734_data,%edx
		cmp    $0x000064,%edx
		jg     _01b48e_jump
		xor    %eax,%eax
		mov    _0c5186_data,%al
		push   %eax
		mov    _0cd9c0_data,%edi
		push   %edi
		lea    0x000008(%esp),%eax
		xor    %esi,%esi
		push   %eax
		mov    %esi,_0c1b40_data
		call   _0787fb_func
		xor    %eax,%eax
		mov    _0c24a0_data,%al
		add    $0x00000c,%esp
		cmp    $0x000004,%eax
		jge    _01b4d3_jump
		mov    _095bb1_data,%al
		mov    _095bb0_data,%bl
		add    %al,%bl
		xor    %eax,%eax
		mov    %bl,%al
		mov    %bl,_095bb0_data
		cmp    $0x000005,%eax
		jle    _01b44b_jump
		mov    _095bb1_data,%ch
		mov    $0x000005,%al
		neg    %ch
		mov    %al,_095bb0_data
		mov    %ch,_095bb1_data
		jmp    _01b465_jump

	_01b44b_jump:
		test   %eax,%eax
		jne    _01b465_jump
		mov    _095bb1_data,%bh
		mov    $0x000001,%cl
		neg    %bh
		mov    %cl,_095bb0_data
		mov    %bh,_095bb1_data

	_01b465_jump:
		xor    %eax,%eax
		mov    $0x000002,%ecx
		mov    _095bb0_data,%al
		mov    $0x000064,%ebx
		push   %eax
		mov    $0x0000a0,%edx
		lea    0x000004(%esp),%eax
		call   _01a168_func
		add    $0x000024,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01b48e_jump:
		cmp    $0x0000a0,%edx
		jg     _01b4d3_jump
		cmp    $0x000078,%edx
		jle    _01b4d3_jump
		mov    $_0bffdc_data,%esi
		mov    %esp,%edi
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		push   %edi

	_01b4ad_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _01b4c5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _01b4ad_jump

	_01b4c5_jump:
		pop    %edi
		push   $0x000005
		xor    %ecx,%ecx
		lea    0x000004(%esp),%eax
		call   _01a168_func

	_01b4d3_jump:
		add    $0x000024,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b4dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000008,%esp
		mov    _0c4584_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000ff,%eax
		jne    _01b532_jump
		xor    %eax,%eax
		mov    _0cd74c_data,%al
		test   %eax,%eax
		je     _01b517_jump
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b6,%ebx
		mov    $0x0000b5,%edx
		mov    $_0bffe3_data,%eax
		jmp    _01b654_jump

	_01b517_jump:
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b6,%ebx
		mov    $0x0000b5,%edx
		mov    $_0bfff1_data,%eax
		jmp    _01b654_jump

	_01b532_jump:
		push   $0x000001
		mov    $0x0000a2,%ecx
		mov    $0x000092,%ebx
		mov    $0x00001b,%edx
		mov    $_0c1db0_data,%eax
		call   _018a64_func
		push   $0x000000
		mov    $0x000022,%ecx
		mov    $0x000016,%ebx
		push   $0x0000ff
		mov    $0x0000a2,%edx
		mov    $0x000092,%eax
		call   _019f18_func
		xor    %ebx,%ebx
		mov    _0cd0d4_data,%bl
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %ax,(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		mov    $0x0000bc,%ebx
		mov    0x000004(%esp),%al
		mov    %dx,0x000008(%esp)
		add    $0x00001c,%al
		xor    %edx,%edx
		mov    $0x0000a2,%ecx
		mov    %al,%dl
		mov    $_0c1db0_data,%eax
		call   _018a64_func
		push   $0x000001
		mov    0x000008(%esp),%al
		mov    $0x0000a2,%ecx
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x0000cb,%ebx
		mov    %al,%dl
		mov    $_0c1db0_data,%eax
		call   _018a64_func
		mov    _0c4584_data,%ebx
		sar    $0x000010,%ebx
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %ax,(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		mov    $0x000034,%ebx
		mov    0x000004(%esp),%al
		mov    %dx,0x000008(%esp)
		add    $0x00001c,%al
		xor    %edx,%edx
		mov    $0x0000a2,%ecx
		mov    %al,%dl
		mov    $_0c1db0_data,%eax
		call   _018a64_func
		push   $0x000001
		mov    0x000008(%esp),%al
		mov    $0x0000a2,%ecx
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x000043,%ebx
		mov    %al,%dl
		mov    $_0c1db0_data,%eax
		call   _018a64_func
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b8,%ebx
		mov    $0x000058,%edx
		mov    $_0bfffb_data,%eax

	_01b654_jump:
		call   _01a168_func
		mov    $_0c1b1c_data,%eax
		call   _018890_func
		mov    $_0c1d2c_data,%eax
		call   _018890_func
		testb  $0x000004,_0c2675_data
		je     _01b680_jump
		mov    $_0c25f4_data,%eax
		call   _018890_func

	_01b680_jump:
		add    $0x000008,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b688_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000068,%esp
		mov    0x000078(%esp),%esi
		mov    %eax,0x000054(%esp)
		mov    %edx,0x00003c(%esp)
		mov    0x00007c(%esp),%eax
		mov    0x000088(%esp),%edi
		mov    %ebx,%edx
		mov    %di,0x000064(%esp)
		cmp    %bx,%si
		jge    _01b6bf_jump
		mov    0x000080(%esp),%edi
		mov    %esi,%edx
		mov    %di,0x000064(%esp)

	_01b6bf_jump:
		mov    0x000080(%esp),%edi
		cmp    %di,%dx
		jle    _01b6d2_jump
		mov    %edi,%edx
		mov    %si,0x000064(%esp)

	_01b6d2_jump:
		mov    0x000088(%esp),%edi
		cmp    %di,%dx
		jle    _01b6e5_jump
		mov    %edi,%edx
		mov    %bx,0x000064(%esp)

	_01b6e5_jump:
		mov    0x00008c(%esp),%edi
		mov    %cx,0x00005c(%esp)
		mov    %di,0x000060(%esp)
		cmp    %cx,%ax
		jge    _01b70c_jump
		mov    0x000084(%esp),%edi
		mov    %ax,0x00005c(%esp)
		mov    %di,0x000060(%esp)

	_01b70c_jump:
		mov    0x000084(%esp),%edi
		cmp    0x00005c(%esp),%di
		jge    _01b724_jump
		mov    %di,0x00005c(%esp)
		mov    %ax,0x000060(%esp)

	_01b724_jump:
		mov    0x00008c(%esp),%edi
		cmp    0x00005c(%esp),%di
		jge    _01b73c_jump
		mov    %di,0x00005c(%esp)
		mov    %cx,0x000060(%esp)

	_01b73c_jump:
		mov    0x000062(%esp),%edi
		sar    $0x000010,%edi
		cwtl   
		mov    %edi,0x000034(%esp)
		movswl %si,%esi
		mov    0x000034(%esp),%ebp
		movswl %dx,%edi
		mov    %eax,0x000034(%esp)
		sub    %edi,%ebp
		movswl %cx,%eax
		mov    %ebp,%edi
		mov    0x000034(%esp),%ebp
		mov    %esi,0x000034(%esp)
		sub    %eax,%ebp
		movswl %bx,%esi
		mov    %ebp,%eax
		mov    0x000034(%esp),%ebp
		sub    %esi,%ebp
		mov    %ebp,0x000050(%esp)
		test   %eax,%eax
		jge    _01b786_jump
		mov    %edi,%esi
		neg    %esi
		neg    %eax
		mov    %esi,0x000040(%esp)
		jmp    _01b78a_jump

	_01b786_jump:
		mov    %edi,0x000040(%esp)

	_01b78a_jump:
		cmpl   $0x000000,0x000050(%esp)
		jge    _01b7a6_jump
		mov    0x000050(%esp),%ebp
		mov    $0xffffffff,%esi
		neg    %ebp
		mov    %esi,0x00004c(%esp)
		mov    %ebp,0x000050(%esp)
		jmp    _01b7ae_jump

	_01b7a6_jump:
		movl   $0x000001,0x00004c(%esp)

	_01b7ae_jump:
		mov    0x000082(%esp),%esi
		sar    $0x000010,%esi
		mov    %esi,0x000034(%esp)
		mov    0x000034(%esp),%ebp
		movswl %cx,%esi
		sub    %esi,%ebp
		mov    %ebp,%esi
		mov    0x00007e(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,0x000034(%esp)
		movswl %bx,%ebp
		mov    %ebp,0x000038(%esp)
		mov    0x000034(%esp),%ebp
		sub    0x000038(%esp),%ebp
		mov    %ebp,0x000058(%esp)
		test   %esi,%esi
		jge    _01b7f5_jump
		mov    %edi,%ebp
		neg    %ebp
		neg    %esi
		mov    %ebp,0x000048(%esp)
		jmp    _01b7f9_jump

	_01b7f5_jump:
		mov    %edi,0x000048(%esp)

	_01b7f9_jump:
		cmpl   $0x000000,0x000058(%esp)
		jge    _01b80e_jump
		movl   $0xffffffff,0x000044(%esp)
		negl   0x000058(%esp)
		jmp    _01b816_jump

	_01b80e_jump:
		movl   $0x000001,0x000044(%esp)

	_01b816_jump:
		test   %eax,%eax
		jne    _01b81b_jump
		inc    %eax

	_01b81b_jump:
		test   %esi,%esi
		jne    _01b820_jump
		inc    %esi

	_01b820_jump:
		mov    0x00004c(%esp),%ebp
		mov    %eax,0x00000c(%esp)
		mov    0x000044(%esp),%eax
		mov    %ebp,(%esp)
		mov    0x000040(%esp),%ebp
		mov    %eax,0x000010(%esp)
		mov    0x000048(%esp),%eax
		mov    %ebp,0x000004(%esp)
		mov    0x000050(%esp),%ebp
		mov    %eax,0x000014(%esp)
		mov    0x000058(%esp),%eax
		mov    %ebp,0x000008(%esp)
		mov    0x00005a(%esp),%ebp
		mov    %eax,0x000018(%esp)
		mov    0x00005e(%esp),%eax
		sar    $0x000010,%ebp
		sar    $0x000010,%eax
		sub    %ebp,%eax
		mov    %eax,0x000024(%esp)
		movswl %cx,%eax
		sub    %ebp,%eax
		mov    %edi,0x000020(%esp)
		imul   %eax,%edi
		movswl %dx,%ecx
		movswl %bx,%eax
		mov    %esi,0x00001c(%esp)
		sub    %ecx,%eax
		mov    %ecx,0x000038(%esp)
		add    %edi,%eax
		mov    0x000054(%esp),%ecx
		mov    %eax,0x000028(%esp)
		xor    %eax,%eax
		mov    0x000005(%ecx),%al
		mov    %eax,0x00002c(%esp)
		xor    %eax,%eax
		mov    0x000006(%ecx),%al
		mov    %eax,0x000030(%esp)
		mov    0x00003c(%esp),%esi
		mov    (%ecx),%ecx
		mov    _0caa48_data,%edi
		add    %ecx,%esi
		mov    %esp,%ecx
		mov    0x00005c(%esp),%ebx
		call   _014b0e_func
		mov    0x000060(%esp),%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000064(%esp),%eax
		shl    $0x000008,%ebx
		sub    %edx,%eax
		xor    %ecx,%ecx
		add    %ebx,%eax
		mov    %ax,%cx
		mov    0x000054(%esp),%eax
		mov    _0ccfd0_data,%edi
		mov    _0caa48_data,%esi
		mov    0x00000a(%eax),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %ebp,%ebx
		mov    %al,%dl
		mov    0x000038(%esp),%eax
		call   *_0cdf18_data
		add    $0x000068,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000018



_01b900_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000060,%esp
		mov    %eax,0x000004(%esp)
		mov    %dx,0x00005c(%esp)
		mov    %bx,0x000028(%esp)
		mov    %cx,0x000024(%esp)
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esp),%edx
		shl    $0x000002,%eax
		mov    0x000004(%edx),%edx
		add    %eax,%edx
		mov    0x000008(%edx),%ax
		mov    %edx,0x00000c(%esp)
		and    $0x00003f,%ah
		mov    0x000004(%esp),%ebx
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    0x00006b(%ebx),%dl
		imul   %edx,%eax
		mov    0x00000c(%esp),%edx
		shl    $0x000002,%eax
		mov    (%edx),%edx
		add    %eax,%edx
		mov    %edx,(%esp)
		testb  $0x000020,0x000081(%ebx)
		je     _01b9c3_jump
		lea    0x000018(%esp),%eax
		lea    0x000010(%esp),%ecx
		xor    %edx,%edx
		push   %eax
		lea    0x000038(%esp),%eax
		mov    0x000075(%ebx),%dl
		push   %eax
		mov    %ebx,%eax
		lea    0x000044(%esp),%ebx
		call   _01d840_func
		mov    0x00003a(%esp),%edx
		mov    _0c247a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x000004(%esp),%ebx
		sub    %eax,%edx
		mov    0x000032(%esp),%eax
		add    $0x000008,%edx
		sar    $0x000011,%eax
		mov    _0c247e_data,%cx
		add    %edx,%eax
		mov    0x000010(%esp),%edx
		mov    %eax,0x00001c(%esp)
		xor    %eax,%eax
		sub    %ecx,%edx
		mov    0x000074(%ebx),%al
		add    %eax,%edx
		mov    %edx,0x00002c(%esp)
		jmp    _01ba2b_jump

	_01b9c3_jump:
		lea    0x000058(%esp),%eax
		lea    0x000038(%esp),%ecx
		lea    0x000054(%esp),%ebx
		push   %eax
		lea    0x000034(%esp),%edx
		mov    0x000008(%esp),%eax
		call   _01d3c0_func
		mov    0x000030(%esp),%eax
		sub    _0c247c_data,%ax
		mov    0x000054(%esp),%ebx
		add    $0x000008,%eax
		mov    0x000036(%esp),%edx
		mov    %ax,0x000030(%esp)
		mov    _0c247e_data,%ax
		sar    $0x000011,%edx
		sub    %eax,%ebx
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		mov    %bx,0x000054(%esp)
		add    %edx,%eax
		mov    0x000052(%esp),%edx
		mov    %eax,0x00001c(%esp)
		mov    0x000056(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000011,%eax
		add    %edx,%eax
		mov    %eax,0x00002c(%esp)

	_01ba2b_jump:
		xor    %esi,%esi
		mov    %si,0x000020(%esp)
		jmp    _01ba39_jump

	_01ba34_jump:
		incw   0x000020(%esp)

	_01ba39_jump:
		mov    0x00000c(%esp),%eax
		mov    0x000008(%eax),%ax
		xor    %edx,%edx
		and    $0x00003f,%ah
		mov    %ax,%dx
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _01bbd6_jump
		mov    (%esp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		xor    %edx,%edx
		mov    0x000003(%esi),%dl
		xor    %eax,%eax
		mov    %dl,%al
		test   %eax,%eax
		je     _01ba34_jump
		movswl %dx,%eax
		imul   $0x00000c,%eax,%eax
		mov    0x000004(%esp),%ebp
		mov    0x000004(%esp),%edx
		mov    0x000004(%esp),%ebx
		mov    0x000000(%ebp),%ebp
		mov    0x000036(%edx),%di
		xor    %edx,%edx
		mov    0x000038(%ebx),%cx
		mov    0x000002(%esi),%dl
		xor    %ebx,%ebx
		add    %ecx,%edx
		add    %eax,%ebp
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    0x000001(%esi),%al
		mov    0x000005(%ebp),%cl
		add    %edi,%eax
		mov    0x00001c(%esp),%edi
		mov    %eax,%esi
		mov    0x000006(%ebp),%bl
		sub    %edi,%esi
		add    %ecx,%eax
		mov    %si,0x000014(%esp)
		mov    %si,0x00004c(%esp)
		sub    %edi,%eax
		mov    0x00002c(%esp),%esi
		mov    0x000026(%esp),%edi
		mov    %ax,0x000044(%esp)
		sar    $0x000010,%edi
		mov    %edx,%eax
		mov    %edi,%ecx
		sub    %esi,%eax
		add    %ebx,%edx
		mov    %ax,0x000040(%esp)
		mov    %ax,0x000048(%esp)
		sub    %esi,%edx
		mov    0x000022(%esp),%eax
		mov    0x00005a(%esp),%esi
		mov    %dx,0x000050(%esp)
		lea    0x000040(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		mov    %eax,0x000008(%esp)
		push   %eax
		mov    %esi,%ebx
		lea    0x000018(%esp),%eax
		call   _01bd68_func
		mov    0x000008(%esp),%ebx
		lea    0x000048(%esp),%edx
		lea    0x000044(%esp),%eax
		push   %ebx
		mov    %edi,%ecx
		mov    %esi,%ebx
		call   _01bd68_func
		mov    0x000008(%esp),%ecx
		lea    0x000050(%esp),%edx
		lea    0x00004c(%esp),%eax
		push   %ecx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _01bd68_func
		mov    0x00001c(%esp),%eax
		mov    0x000014(%esp),%edx
		mov    0x000044(%esp),%ebx
		mov    0x00004c(%esp),%ecx
		mov    0x000040(%esp),%esi
		mov    0x000048(%esp),%edi
		add    %eax,%edx
		add    %eax,%ebx
		add    %eax,%ecx
		mov    0x00002c(%esp),%eax
		mov    %dx,0x000014(%esp)
		mov    %bx,0x000044(%esp)
		mov    0x000050(%esp),%edx
		add    %eax,%esi
		add    %eax,%edi
		add    %eax,%edx
		mov    %di,0x000048(%esp)
		mov    %dx,0x000050(%esp)
		mov    %edi,%eax
		mov    0x000050(%esp),%edi
		mov    %ebx,%edx
		sub    %esi,%eax
		mov    0x000014(%esp),%ebx
		add    %edi,%eax
		sub    %ebx,%edx
		cwtl   
		add    %ecx,%edx
		push   %eax
		movswl %dx,%eax
		push   %eax
		mov    0x000056(%esp),%eax
		sar    $0x000010,%eax
		mov    %cx,0x000054(%esp)
		push   %eax
		mov    0x000056(%esp),%eax
		mov    %si,0x00004c(%esp)
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%ebx
		push   %eax
		mov    0x000056(%esp),%eax
		mov    0x00004e(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000056(%esp),%eax
		mov    0x000018(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x000008(%edx),%edx
		mov    %ebp,%eax
		call   _01b688_func
		jmp    _01ba34_jump

	_01bbd6_jump:
		add    $0x000060,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_01bbe0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    0x000009(%eax),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		movswl %bx,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		sar    %eax
		add    %edx,%eax
		mov    %eax,0x000008(%esp)
		mov    0x000009(%esi),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %al,%dl
		movswl %cx,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000008(%esi),%dl
		inc    %eax
		sar    %edx
		add    %edx,%eax
		mov    0x000008(%esp),%edx
		mov    %eax,0x00001c(%esp)
		mov    %ebx,%eax
		sub    %edx,%eax
		mov    %ax,0x000020(%esp)
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		add    %ebx,%eax
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    0x000020(%esp),%eax
		mov    0x00001c(%esp),%edi
		mov    %ax,0x000014(%esp)
		mov    %ecx,%eax
		mov    0x000036(%esp),%ebp
		sub    %edi,%eax
		sar    $0x000010,%ebp
		mov    %ax,0x000024(%esp)
		mov    %ax,0x000010(%esp)
		xor    %eax,%eax
		mov    %ebp,%ebx
		mov    0x000006(%esi),%al
		lea    0x000024(%esp),%edx
		add    %eax,%ecx
		mov    0x00003e(%esp),%eax
		sub    %edi,%ecx
		mov    0x00003a(%esp),%edi
		sar    $0x000010,%eax
		mov    %cx,0x000018(%esp)
		mov    %eax,0x000004(%esp)
		push   %eax
		sar    $0x000010,%edi
		lea    0x000024(%esp),%eax
		mov    %edi,%ecx
		call   _01bd68_func
		mov    0x000004(%esp),%ebx
		lea    0x000010(%esp),%edx
		lea    0x00000c(%esp),%eax
		push   %ebx
		mov    %edi,%ecx
		mov    %ebp,%ebx
		call   _01bd68_func
		mov    0x000004(%esp),%ecx
		lea    0x000018(%esp),%edx
		lea    0x000014(%esp),%eax
		push   %ecx
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _01bd68_func
		mov    0x000008(%esp),%eax
		mov    0x000020(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000014(%esp),%ecx
		mov    0x000024(%esp),%edi
		add    %eax,%edx
		add    %eax,%ebx
		add    %eax,%ecx
		mov    0x00001c(%esp),%eax
		mov    %dx,0x000020(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000014(%esp)
		mov    0x000010(%esp),%edx
		mov    0x000018(%esp),%ebx
		mov    0x000020(%esp),%ecx
		add    %eax,%edi
		add    %eax,%edx
		add    %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %dx,0x000010(%esp)
		mov    0x000014(%esp),%edx
		sub    %ecx,%eax
		add    %eax,%edx
		mov    0x000010(%esp),%eax
		sub    %edi,%eax
		add    %ebx,%eax
		cwtl   
		push   %eax
		movswl %dx,%eax
		mov    %bx,0x00001c(%esp)
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		mov    %di,0x000030(%esp)
		push   %eax
		mov    0x00001e(%esp),%eax
		mov    0x000032(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x00001e(%esp),%eax
		mov    0x000032(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01b688_func
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_01bd68_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		movswl %cx,%edx
		movswl (%eax),%eax
		imul   %edx,%eax
		sar    $0x00000c,%eax
		mov    0x000016(%esp),%edx
		mov    %eax,%ecx
		sar    $0x000010,%edx
		movswl (%esi),%eax
		imul   %edx,%eax
		sar    $0x00000c,%eax
		mov    %esp,%edx
		mov    %ax,0x000008(%esp)
		movswl %bx,%eax
		lea    0x000004(%esp),%ebx
		call   _055868_func
		mov    0x000002(%esp),%ebx
		movswl %cx,%edx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    0x000006(%esp),%eax
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		imul   %eax,%ecx
		sub    %ecx,%ebx
		sar    $0x000009,%ebx
		mov    %bx,(%edi)
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   %edx,%eax
		add    %ebx,%eax
		sar    $0x000009,%eax
		mov    %ax,(%esi)
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01bdf0_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    0x000010(%esp),%ebp
		movzbl 0x00006d(%eax),%esi
		lea    0x000000(,%esi,4),%edi
		mov    0x00000c(%eax),%esi
		add    %esi,%edi
		movzbl 0x00006c(%eax),%esi
		mov    (%edi),%edi
		shl    $0x000003,%esi
		add    %edi,%esi
		testb  $0x000040,0x000007(%esi)
		je     _01be3b_jump
		mov    0x000028(%eax),%si
		add    $0x000045,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000026,%eax
		mov    %ax,(%ebx)
		movw   $0x000015,(%ecx)
		movw   $0x00001e,0x000000(%ebp)
		jmp    _01be89_jump

	_01be3b_jump:
		testb  $0x000080,0x000007(%esi)
		je     _01be68_jump
		mov    0x000028(%eax),%si
		add    $0x000045,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000056,%eax
		mov    %ax,(%ebx)
		movw   $0x000022,(%ecx)
		movw   $0x00000a,0x000000(%ebp)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_01be68_jump:
		mov    0x000028(%eax),%si
		add    $0x000047,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000047,%eax
		mov    %ax,(%ebx)
		movw   $0x00001d,(%ecx)
		movw   $0x000013,0x000000(%ebp)

	_01be89_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01be90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%edi
		call   _01d4b4_func
		mov    %ax,0x000010(%esp)
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d5dc_func
		mov    0x00006d(%edi),%dl
		mov    %ax,0x000018(%esp)
		test   %edx,%edx
		jne    _01bed0_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x00001b,%edx
		je     _01beec_jump
		cmp    $0x000018,%edx
		je     _01beec_jump
		cmp    $0x00001e,%edx
		je     _01beec_jump
		cmp    $0x00000b,%edx
		je     _01beec_jump

	_01bed0_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		cmp    $0x000001,%edx
		jne    _01bf9b_jump
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x000002,%edx
		jne    _01bf9b_jump

	_01beec_jump:
		cmpb   $0x000000,_0c1ed2_data
		je     _01bfc1_jump
		mov    _0c1ec0_data,%edx
		xor    %eax,%eax
		mov    0x000068(%edx),%al
		mov    0x000028(%edx),%bx
		xor    %ecx,%ecx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    %bx,0x00000c(%esp)
		mov    0x000069(%edx),%al
		mov    0x00002c(%edx),%bx
		mov    0x000074(%edx),%cl
		add    %ebx,%eax
		xor    %edx,%edx
		add    %ebx,%ecx
		mov    0x000068(%edi),%dl
		mov    0x000028(%edi),%bx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    %bx,0x00001c(%esp)
		mov    0x000069(%edi),%dl
		add    0x00002c(%edi),%dx
		xor    %ebx,%ebx
		mov    0x00002c(%edi),%si
		mov    0x000074(%edi),%bl
		add    %esi,%ebx
		add    $0x000005,%edx
		sub    $0x000005,%ebx
		cmp    %dx,%ax
		jle    _01bf59_jump
		cmp    %dx,%cx
		jg     _01bfc1_jump

	_01bf59_jump:
		cmp    %bx,%ax
		jge    _01bf63_jump
		cmp    %bx,%cx
		jl     _01bfc1_jump

	_01bf63_jump:
		mov    0x00001a(%esp),%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		lea    0x00003c(%edx),%ecx
		cmp    %ecx,%ebx
		jg     _01bfc1_jump
		sub    $0x00003c,%edx
		cmp    %edx,%ebx
		jl     _01bfc1_jump
		mov    $0x000019,%ebx
		mov    %edi,%eax
		movw   $0x000000,0x000040(%edi)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%edi)
		call   _01d4a8_func
		jmp    _01bfc1_jump

	_01bf9b_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		test   %edx,%edx
		jne    _01bfc1_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x00001a,%edx
		jne    _01bfc1_jump
		cmpb   $0x000000,_0c1ed2_data
		jne    _01bfc1_jump
		mov    $0x00001b,%edx
		mov    %edi,%eax
		call   _01d498_func

	_01bfc1_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		cmp    $0x000001,%edx
		jne    _01c03f_jump
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x000002,%edx
		jne    _01c03f_jump
		mov    %edi,%eax
		call   _04d2c4_func
		xor    %edx,%edx
		mov    %edi,%eax
		call   _024568_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000001,_092204_data(%edx)
		je     _01c038_jump
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		sub    %edx,%ebx
		mov    %bl,%al
		xor    %edx,%edx
		mov    0x000081(%edi),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%cl
		mov    $0x000018,%ebx
		or     %al,%cl
		mov    %edi,%eax
		mov    %cl,0x000081(%edi)
		call   _01d4a8_func
		mov    %edi,%eax
		call   _04d2c4_func

	_01c038_jump:
		mov    %edi,%eax
		call   _024ba8_func

	_01c03f_jump:
		mov    0x000016(%esp),%ecx
		mov    0x00000e(%esp),%esi
		mov    %edi,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%esi
		mov    %ecx,%ebx
		mov    %esi,%edx
		call   _01d754_func
		test   %ax,%ax
		je     _01c11e_jump
		mov    %ecx,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _02eb40_func
		test   %ax,%ax
		je     _01c11e_jump
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		cmp    $0x000001,%edx
		jne    _01c0d9_jump
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x000002,%edx
		jne    _01c0d9_jump
		mov    $0x000015,%ebx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		sub    %edx,%ebx
		mov    0x000081(%edi),%ch
		mov    %bl,%al
		movw   $0x000000,0x000040(%edi)
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		movw   $0x000000,0x000042(%edi)
		mov    %ch,%ah
		or     %al,%ah
		mov    %ah,0x000081(%edi)
		jmp    _01c292_jump

	_01c0d9_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		cmp    $0x000002,%edx
		jne    _01c292_jump
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x000003,%edx
		je     _01c0ff_jump
		cmp    $0x000001,%edx
		je     _01c0ff_jump
		cmp    $0x000002,%edx
		jne    _01c292_jump

	_01c0ff_jump:
		mov    $0x00000c,%ebx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000040(%edi)
		movw   $0x000000,0x000042(%edi)
		jmp    _01c292_jump

	_01c11e_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		cmp    $0x000002,%edx
		jne    _01c14c_jump
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x000001,%edx
		jne    _01c14c_jump
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		test   %edx,%edx
		jne    _01c14c_jump
		movw   $0x000000,0x000040(%edi)
		movw   $0x00fff6,0x000042(%edi)
		jmp    _01c292_jump

	_01c14c_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		test   %edx,%edx
		jne    _01c292_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x000014,%edx
		jne    _01c292_jump
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		cmp    $0x00001b,%edx
		jne    _01c292_jump
		mov    _0c1b04_data,%esi
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _01c19c_jump
		jmp    _01c292_jump

	_01c18c_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _01c292_jump

	_01c19c_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x0000c4,%edx
		jne    _01c18c_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _01c18c_jump
		mov    %esp,%edx
		lea    0x000004(%esp),%ecx
		push   %edx
		lea    0x000018(%esp),%edx
		lea    0x00000c(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000002,%edx
		call   _01d840_func
		andb   $0x0000f7,0x000081(%esi)
		mov    0x000006(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    0x000012(%esp),%edx
		sar    $0x000011,%edx
		add    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		xor    %edx,%edx
		mov    0x000002(%esp),%ebx
		mov    0x000069(%esi),%dl
		sar    $0x000010,%ebx
		sub    %edx,%ebx
		mov    -0x000002(%esp),%edx
		movw   $0x000000,0x000040(%esi)
		movw   $0x000020,0x000042(%esi)
		sar    $0x000011,%edx
		movl   $0x000001,0x000024(%esi)
		add    %edx,%ebx
		mov    %ebx,0x00002c(%esi)
		mov    0x000081(%esi),%dh
		mov    0x00002c(%esi),%ax
		or     $0x000004,%dh
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		mov    %dh,0x000081(%esi)
		call   _01f584_func
		mov    0x000081(%esi),%bl
		xor    %edx,%edx
		or     $0x000010,%bl
		mov    _0c1b89_data,%dl
		mov    %bl,0x000081(%esi)
		lea    0x000000(,%edx,4),%ebx
		mov    _0c1b28_data,%edx
		movw   $0x00ffff,0x000046(%esi)
		add    %ebx,%edx
		movw   $0x000000,0x000048(%esi)
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    _0c1b88_data,%bl
		mov    0x000007(%edx,%ebx,8),%cl
		test   $0x000040,%cl
		setne  %al
		mov    %al,_0ce8e8_data
		mov    %esi,%eax
		call   _01c4f4_func

	_01c292_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		test   %edx,%edx
		jne    _01c2d1_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x000014,%edx
		je     _01c2ad_jump
		cmp    $0x00000d,%edx
		je     _01c2ad_jump
		cmp    $0x000017,%edx
		jne    _01c2d1_jump

	_01c2ad_jump:
		mov    _0c1b44_data,%ebx
		mov    0x000028(%edi),%ecx
		lea    0x000081(%edi),%edx
		cmp    %ecx,%ebx
		setg   %al
		mov    (%edx),%ch
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		mov    %ch,%ah
		or     %al,%ah
		mov    %ah,(%edx)

	_01c2d1_jump:
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c2dc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    0x000076(%eax),%ah
		dec    %ah
		mov    %ah,0x000076(%ecx)
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _01c369_jump
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01c313_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000c,%eax
		je     _01c336_jump
		cmp    $0x00000d,%eax
		je     _01c336_jump
		cmp    $0x000017,%eax
		je     _01c336_jump
		cmp    $0x000014,%eax
		je     _01c336_jump

	_01c313_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _01c33d_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		je     _01c336_jump
		cmp    $0x000003,%eax
		je     _01c336_jump
		cmp    $0x00001c,%eax
		je     _01c336_jump
		cmp    $0x000007,%eax
		jne    _01c33d_jump

	_01c336_jump:
		mov    $0x000013,%ebx
		jmp    _01c342_jump

	_01c33d_jump:
		mov    $0x000012,%ebx

	_01c342_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%bl
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%bl
		mov    %bl,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01c369_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _01c37d_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		je     _01c3ac_jump

	_01c37d_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01c3cb_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000b,%eax
		je     _01c3ac_jump
		cmp    $0x00001d,%eax
		je     _01c3ac_jump
		cmp    $0x00001a,%eax
		je     _01c3ac_jump
		cmp    $0x000019,%eax
		je     _01c3ac_jump
		cmp    $0x00001b,%eax
		je     _01c3ac_jump
		cmp    $0x000018,%eax
		je     _01c3ac_jump
		cmp    $0x00001e,%eax
		jne    _01c3cb_jump

	_01c3ac_jump:
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000042(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01c3cb_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01c414_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000c,%eax
		je     _01c3eb_jump
		cmp    $0x00000d,%eax
		je     _01c3eb_jump
		cmp    $0x000017,%eax
		je     _01c3eb_jump
		cmp    $0x000014,%eax
		jne    _01c414_jump

	_01c3eb_jump:
		mov    _0c1b44_data,%edx
		cmp    0x000028(%ecx),%edx
		jle    _01c3ff_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _01c406_jump

	_01c3ff_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_01c406_jump:
		mov    $0x000011,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func

	_01c414_jump:
		pop    %ecx
		pop    %ebx
		ret    



_01c418_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _01c43f_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x00000d,%edx
		je     _01c431_jump
		cmp    $0x00000c,%edx
		jne    _01c43f_jump

	_01c431_jump:
		mov    $0x000014,%edx
		call   _01d498_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c43f_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _01c450_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x00000b,%edx
		je     _01c479_jump

	_01c450_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _01c461_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x00001e,%edx
		je     _01c479_jump

	_01c461_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		cmp    $0x000001,%edx
		jne    _01c4ef_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000002,%edx
		jne    _01c4ef_jump

	_01c479_jump:
		mov    _0c1b44_data,%edx
		cmp    0x000028(%eax),%edx
		setg   %dl
		mov    %edx,%ebx
		mov    0x000081(%eax),%dl
		shl    $0x000004,%dl
		and    $0x0000ff,%ebx
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		cmp    %ebx,%edx
		setne  %dl
		and    $0x0000ff,%edx
		je     _01c4ef_jump
		mov    _0c1b44_data,%ebx
		mov    0x000028(%eax),%ecx
		lea    0x000081(%eax),%edx
		cmp    %ecx,%ebx
		setg   %bl
		and    $0x0000ff,%ebx
		and    $0x000001,%bl
		mov    (%edx),%bh
		and    $0x0000f7,%bh
		shl    $0x000003,%bl
		mov    %bh,%cl
		or     %bl,%cl
		mov    %cl,(%edx)
		mov    $0x000018,%ebx
		movw   $0x000000,0x000040(%eax)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%eax)
		call   _01d4a8_func

	_01c4ef_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c4f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000070(%esi),%al
		cmp    $0x000001,%eax
		je     _01c775_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%di
		mov    0x000068(%esi),%al
		add    %eax,%edi
		xor    %eax,%eax
		mov    _0c1b44_data,%dx
		mov    _0c1b84_data,%al
		add    %edx,%eax
		sub    %edi,%eax
		mov    _0ce8e8_data,%dh
		mov    %eax,%edi
		test   %dh,%dh
		je     _01c557_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b48_data,%cx
		mov    _0c1b85_data,%al
		add    %ecx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		jmp    _01c574_jump

	_01c557_jump:
		xor    %eax,%eax
		mov    _0c1b85_data,%al
		mov    _0c1b48_data,%ebx
		sar    %eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		sub    %eax,%ebx

	_01c574_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _01c57d_jump
		neg    %eax

	_01c57d_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _01c588_jump
		neg    %eax

	_01c588_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    0x000069(%esi),%dl
		mov    _0c1b48_data,%ecx
		sub    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    _0c1b85_data,%al
		add    %ebp,%edx
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _01c73a_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b44_data,%ebp
		mov    _0c1b84_data,%al
		add    %ebp,%eax
		cmp    %edx,%eax
		jle    _01c5e6_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		je     _01c622_jump

	_01c5e6_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0c1b44_data,%ecx
		mov    _0c1b84_data,%dl
		add    %ecx,%edx
		cmp    %eax,%edx
		jge    _01c73a_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _01c73a_jump

	_01c622_jump:
		mov    -0x000002(%esp),%ebp
		sar    $0x000010,%ebp
		test   %ebp,%ebp
		jle    _01c64d_jump
		mov    $0x000005,%cl
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000005,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_01c64d_jump:
		mov    0x000040(%esi),%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    $0x000020,%ebx
		cmp    $0x000000,%eax
		je     _01c66b_jump
		mov    $0x000001,%eax
		jg     _01c66b_jump
		neg    %eax

	_01c66b_jump:
		add    %edx,%eax
		cmp    %ebx,%eax
		jle    _01c673_jump
		mov    %ebx,%eax

	_01c673_jump:
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jge    _01c67b_jump
		mov    %ebx,%eax

	_01c67b_jump:
		mov    %ax,0x000042(%esi)
		test   %ax,%ax
		je     _01c6be_jump
		mov    0x00003e(%esi),%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    $0x000020,%ebx
		cmp    $0x000000,%eax
		je     _01c6a2_jump
		mov    $0x000001,%eax
		jg     _01c6a2_jump
		neg    %eax

	_01c6a2_jump:
		add    %edx,%eax
		cmp    %ebx,%eax
		jle    _01c6aa_jump
		mov    %ebx,%eax

	_01c6aa_jump:
		mov    $0xffffffe0,%ebx
		cmp    %ebx,%eax
		jge    _01c6b5_jump
		mov    %ebx,%eax

	_01c6b5_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c7a5_jump

	_01c6be_jump:
		testb  $0x000008,0x000081(%esi)
		je     _01c702_jump
		mov    $0xffffffe0,%edx
		mov    0x000040(%esi),%cx
		mov    $0x000020,%ebx
		cmp    %cx,%di
		setg   %al
		mov    %eax,%ecx
		mov    0x00003e(%esi),%eax
		and    $0x0000ff,%ecx
		sar    $0x000010,%eax
		sub    %ecx,%eax
		cmp    %ebx,%eax
		jle    _01c6f1_jump
		mov    %ebx,%eax

	_01c6f1_jump:
		mov    %edx,%ebx
		cmp    %ebx,%eax
		jge    _01c6f9_jump
		mov    %ebx,%eax

	_01c6f9_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c7a5_jump

	_01c702_jump:
		mov    $0xffffffe0,%edx
		mov    0x000040(%esi),%cx
		mov    $0x000020,%ebx
		cmp    %cx,%di
		setl   %al
		mov    %eax,%ecx
		mov    0x00003e(%esi),%eax
		and    $0x0000ff,%ecx
		sar    $0x000010,%eax
		add    %ecx,%eax
		cmp    %ebx,%eax
		jle    _01c72c_jump
		mov    %ebx,%eax

	_01c72c_jump:
		mov    %edx,%ebx
		cmp    %ebx,%eax
		jge    _01c734_jump
		mov    %ebx,%eax

	_01c734_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c7a5_jump

	_01c73a_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		mov    $0x000020,%ebx
		add    %eax,%eax
		cmp    %ebx,%eax
		jle    _01c74d_jump
		mov    %ebx,%eax

	_01c74d_jump:
		mov    $0xffffffe0,%ebx
		cmp    %ebx,%eax
		jge    _01c758_jump
		mov    %ebx,%eax

	_01c758_jump:
		mov    %ax,0x000040(%esi)
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		mov    $0x000020,%ebx
		add    %eax,%eax
		cmp    %ebx,%eax
		jle    _01c76f_jump
		mov    %ebx,%eax

	_01c76f_jump:
		mov    %ax,0x000042(%esi)
		jmp    _01c7a5_jump

	_01c775_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0c1b44_data,%ebx
		mov    _0c1b84_data,%dl
		add    %ebx,%edx
		cmp    %eax,%edx
		jle    _01c79c_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _01c7a5_jump

	_01c79c_jump:
		jge    _01c7a5_jump
		orb    $0x000008,0x000081(%esi)

	_01c7a5_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _01c7d9_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _01c7d9_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _01c7d0_jump
		mov    $0xffffffff,%eax
		jmp    _01c7d5_jump

	_01c7d0_jump:
		mov    $0x000001,%eax

	_01c7d5_jump:
		mov    %ax,0x000040(%esi)

	_01c7d9_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01c7e5_jump
		neg    %eax

	_01c7e5_jump:
		cwtl   
		mov    0x000040(%esi),%ebx
		lea    0x000000(,%eax,4),%ecx
		sar    $0x000010,%ebx
		sub    %eax,%ecx
		cmp    %ebx,%ecx
		jge    _01c7ff_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _01c834_jump

	_01c7ff_jump:
		lea    0x000000(,%ebx,4),%edx
		lea    0x000000(,%eax,4),%ebp
		sub    %ebx,%edx
		cmp    %edx,%ebp
		jge    _01c819_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _01c834_jump

	_01c819_jump:
		shl    $0x000002,%ebx
		cmp    %ebx,%ecx
		jge    _01c826_jump
		movb   $0x00000b,0x00006b(%esi)
		jmp    _01c834_jump

	_01c826_jump:
		cmp    %edx,%eax
		jge    _01c830_jump
		movb   $0x00000a,0x00006b(%esi)
		jmp    _01c834_jump

	_01c830_jump:
		movb   $0x000009,0x00006b(%esi)

	_01c834_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _01c85d_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _01c85d_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _01c881_jump

	_01c85d_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01c881_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _01c881_jump
		orb    $0x000008,0x000081(%esi)

	_01c881_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c88c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000007,%eax
		jne    _01c8ba_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%dl
		mov    %dl,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c8ba_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		test   %edx,%edx
		jne    _01c8d5_jump
		test   %eax,%eax
		jne    _01c8d5_jump
		movw   $0x000000,0x000052(%ecx)

	_01c8d5_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000001,%al
		jbe    _01c8e8_jump
		cmp    $0x000002,%al
		je     _01c9f0_jump

	_01c8e4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c8e8_jump:
		and    $0x0000ff,%eax
		jne    _01c8f8_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _01c8ff_jump

	_01c8f8_jump:
		orb    $0x000008,0x000081(%ecx)

	_01c8ff_jump:
		mov    %ecx,%eax
		call   _04d2c4_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		movw   $0x000001,0x000050(%ecx)
		test   %eax,%eax
		jne    _01c923_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func

	_01c923_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _01c8e4_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024568_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _01c984_jump
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01c968_jump
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		or     $0x000008,%ah
		mov    $0x000002,%edx
		mov    %ah,0x000081(%ecx)
		jmp    _01c97d_jump

	_01c968_jump:
		mov    0x000081(%ecx),%al
		mov    $0x000001,%ebx
		and    $0x0000f7,%al
		xor    %edx,%edx
		mov    %al,0x000081(%ecx)

	_01c97d_jump:
		mov    %ecx,%eax
		call   _058bb4_func

	_01c984_jump:
		mov    %ecx,%eax
		call   _04d2c4_func
		mov    %ecx,%eax
		call   _024ba8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c996_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000004,%eax
		jne    _01c9a6_jump
		movw   $0x000000,0x000052(%ecx)

	_01c9a6_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000008,%eax
		jne    _01c8e4_jump
		mov    %ecx,%eax
		call   _0246f4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c9bf_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024568_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		jne    _01c9df_jump
		mov    %ecx,%eax
		call   _04d2c4_func
		jmp    _01c9e5_jump

	_01c9df_jump:
		movw   $0x000000,0x000040(%ecx)

	_01c9e5_jump:
		mov    %ecx,%eax
		call   _024ba8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c9f0_jump:
		mov    0x00006d(%ecx),%al
		test   %al,%al
		jbe    _01c996_jump
		cmp    $0x000001,%al
		je     _01c9bf_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ca00_func:
		push   %edx
		mov    %eax,%edx
		call   _01c88c_func
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		test   %eax,%eax
		jne    _01ca30_jump
		mov    0x00006c(%edx),%al
		cmp    $0x000003,%eax
		jne    _01ca30_jump
		mov    0x000050(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _01ca30_jump
		mov    %edx,%eax
		call   _01ca34_func
		movw   $0x000001,0x000052(%edx)

	_01ca30_jump:
		pop    %edx
		ret    



_01ca34_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0c1b04_data,%esi
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _01ca67_jump
		jmp    _01cb73_jump

	_01ca57_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _01cb73_jump

	_01ca67_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000042,%edx
		jne    _01ca57_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _01ca57_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		mov    0x000081(%esi),%dh
		movw   $0x000000,0x000042(%esi)
		test   $0x000008,%dh
		je     _01caab_jump
		mov    $0xfffffffd,%edx
		jmp    _01cab0_jump

	_01caab_jump:
		mov    $0x000003,%edx

	_01cab0_jump:
		mov    %dx,0x000040(%esi)
		lea    0x000008(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x000008(%esp),%edx
		lea    0x000010(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000003,%edx
		call   _01d840_func
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000011,%edx
		sar    $0x000010,%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x000006(%esp),%edx
		mov    -0x000002(%esp),%ebx
		sar    $0x000011,%edx
		sar    $0x000010,%ebx
		movb   $0x000004,0x00007e(%esi)
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000028(%esi),%ax
		mov    0x000069(%esi),%bl
		mov    %ax,0x00003c(%esi)
		sub    %ebx,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		movb   $0x000000,0x00006d(%esi)
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		movb   $0x000009,0x00006c(%esi)
		call   _058bb4_func
		mov    %esi,%eax
		call   _01dcec_func
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f584_func
		mov    0x000081(%esi),%bh
		movb   $0x000009,0x00006b(%esi)
		and    $0x0000bf,%bh
		mov    %bh,0x000081(%esi)

	_01cb73_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01cb7c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e92c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _01cbb2_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    0x000081(%ecx),%dh
		movb   $0x000000,0x00006b(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01cbb2_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01cbd6_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		je     _01cbd2_jump
		cmp    $0x000003,%eax
		je     _01cbd2_jump
		cmp    $0x000004,%eax
		je     _01cbd2_jump
		cmp    $0x000005,%eax
		jne    _01cbd6_jump

	_01cbd2_jump:
		movb   $0x0000ff,0x00007c(%ecx)

	_01cbd6_jump:
		mov    _0c1ec0_data,%eax
		movw   $0x000000,0x000050(%ecx)
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _01cc05_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		orb    $0x000008,0x000081(%ecx)
		jmp    _01cc1a_jump

	_01cc05_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _058bb4_func
		andb   $0x0000f7,0x000081(%ecx)

	_01cc1a_jump:
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _058c50_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		movb   $0x000000,0x00006b(%ecx)
		call   _058c50_func
		pop    %ecx
		pop    %ebx
		ret    



_01cc44_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _01cccc_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _01cccc_jump
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _01cccc_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		movb   $0x000000,0x00006b(%ecx)
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _01cc9e_jump
		mov    0x000081(%ecx),%dl
		mov    $0x000001,%ebx
		or     $0x000008,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    $0x000003,%edx
		jmp    _01ccb6_jump

	_01cc9e_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		and    $0x0000f7,%ah
		mov    %ebx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax

	_01ccb6_jump:
		call   _058bb4_func
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _058c50_func

	_01cccc_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ccd0_func:
		ret    



_01ccd4_func:
		push   %edx
		cmpb   $0x000000,_0ce7e0_data
		je     _01cce6_jump
		xor    %dl,%dl
		mov    %dl,_0c694c_data

	_01cce6_jump:
		cmpb   $0x000000,_0c694c_data
		je     _01ccf9_jump
		mov    $0x000002,%eax
		call   _029dcc_func

	_01ccf9_jump:
		pop    %edx
		mov    %eax,%eax



_01ccfc_func:
		ret    



_01cd00_func:
		cmpb   $0x000000,_0ce841_data
		je     _01ccfc_func
		mov    $0x000008,%eax
		jmp    _06bb34_jump



_01cd14_func:
		cmpb   $0x000000,_0c694c_data
		je     _01ccfc_func
		call   _028930_func
		and    $0x0000ff,%eax
		jmp    _029c64_func



_01cd50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0c1b06_data,%eax
		mov    _0c1b04_data,%esi
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		mov    %eax,(%esp)
		test   %eax,%eax
		jle    _01cdb5_jump

	_01cd6f_jump:
		mov    %ecx,%edx
		and    $0x00000f,%edx
		mov    %ecx,%edi
		mov    0x000081(%esi),%dh
		mov    0x000024(%esi),%eax
		shl    $0x000005,%dh
		xor    %ebx,%ebx
		shr    $0x000007,%dh
		add    %eax,%eax
		mov    %dh,%bl
		sar    $0x000004,%edi
		add    %eax,%ebx
		lea    0x000000(,%edi,4),%eax
		and    $0x0000ff,%edx
		add    $_0c132c_data,%eax
		inc    %ecx
		call   _055700_func
		mov    (%esp),%ebx
		add    $0x000084,%esi
		cmp    %ebx,%ecx
		jl     _01cd6f_jump

	_01cdb5_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01cdc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0c1b06_data,%ebp
		mov    _0c1b04_data,%esi
		sar    $0x000010,%ebp
		xor    %edi,%edi
		test   %ebp,%ebp
		jle    _01ce3d_jump
		jmp    _01cdeb_jump

	_01cde0_jump:
		inc    %edi
		add    $0x000084,%esi
		cmp    %ebp,%edi
		jge    _01ce3d_jump

	_01cdeb_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00003a,%eax
		je     _01cde0_jump
		mov    %edi,%eax
		mov    %edi,%edx
		sar    $0x000004,%eax
		and    $0x00000f,%edx
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		shl    $0x000002,%eax
		and    $0x0000ff,%edx
		add    $_0c132c_data,%eax
		call   _055734_func
		mov    (%esp),%eax
		mov    %eax,0x000024(%esi)
		mov    0x000004(%esp),%al
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000fb,%ah
		shl    $0x000002,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _01cde0_jump

	_01ce3d_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01ce48_switch:
		.long   _01d042_case
		.long   _01d05a_case
		.long   _01d063_case
		.long   _01d048_case

_01ce58_switch:
		.long   _01d0c0_case
		.long   _01d0d8_case
		.long   _01d0e1_case
		.long   _01d0c6_case




_01ce68_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %bl,0x000020(%esp)
		mov    %ecx,0x000018(%esp)
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		shl    $0x000002,%eax
		mov    0x00000c(%edx),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%edi),%al
		mov    (%edx),%ebp
		shl    $0x000003,%eax
		add    %eax,%ebp
		xor    %edx,%edx
		mov    0x000002(%ebp),%dl
		mov    0x000005(%ebp),%al
		mov    %dx,0x00001c(%esp)
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x00006b(%edi),%dl
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0c2498_data(%eax)
		jne    _01cf4c_jump
		mov    0x00001a(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%edi),%ebx
		mov    0x00000a(%ebx,%eax,4),%bl
		testb  $0x000010,0x000007(%ebp)
		je     _01cedd_jump
		mov    $0xffffffff,%eax
		jmp    _01cee2_jump

	_01cedd_jump:
		mov    $0x000001,%eax

	_01cee2_jump:
		xor    %ecx,%ecx
		movswl %dx,%edx
		mov    %bl,%cl
		add    %eax,%edx
		dec    %ecx
		movswl %dx,%eax
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jl     _01cf00_jump
		cmp    %ecx,%eax
		jg     _01cf00_jump
		mov    $0x000001,%eax
		jmp    _01cf02_jump

	_01cf00_jump:
		xor    %eax,%eax

	_01cf02_jump:
		test   %eax,%eax
		jne    _01cf4c_jump
		mov    0x000003(%ebp),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000004(%ebp),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000002(%edx),%al
		mov    %al,%bl
		mov    %ax,0x00001c(%esp)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%edi),%ebx
		mov    0x000007(%edx),%cl
		mov    0x00000a(%ebx,%eax,4),%al
		test   $0x000010,%cl
		je     _01cf4a_jump
		xor    %edx,%edx
		mov    %al,%dl
		dec    %edx
		jmp    _01cf4c_jump

	_01cf4a_jump:
		xor    %edx,%edx

	_01cf4c_jump:
		xor    %eax,%eax
		mov    0x00006b(%edi),%al
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00006a(%edi),%al
		lea    0x00000c(%esp),%ecx
		mov    %ax,0x000014(%esp)
		mov    0x00001c(%esp),%al
		mov    %esp,%ebx
		mov    %al,0x00006a(%edi)
		lea    0x000010(%esp),%eax
		mov    %dl,0x00006b(%edi)
		push   %eax
		lea    0x00000c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000028(%esp),%dl
		mov    %edi,%eax
		call   _01d840_func
		mov    0x000014(%esp),%al
		mov    %al,0x00006a(%edi)
		mov    0x000004(%esp),%al
		mov    %al,0x00006b(%edi)
		mov    0x000018(%esp),%edx
		mov    (%esp),%ecx
		mov    0x000028(%esi),%bx
		add    %edx,%ecx
		sub    %ebx,%ecx

	_01cfa4_jump:
		movswl %cx,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _01cfaf_jump
		neg    %eax

	_01cfaf_jump:
		cmp    $0x000010,%eax
		jl     _01cfe6_jump
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _01cfc4_jump
		mov    $0x000001,%eax
		jg     _01cfc4_jump
		neg    %eax

	_01cfc4_jump:
		shl    $0x000004,%eax
		mov    0x000028(%esi),%ebx
		add    %eax,%ebx
		mov    %edx,%eax
		mov    %ebx,0x000028(%esi)
		cmp    $0x000000,%eax
		je     _01cfdf_jump
		mov    $0x000001,%eax
		jg     _01cfdf_jump
		neg    %eax

	_01cfdf_jump:
		shl    $0x000004,%eax
		sub    %eax,%ecx
		jmp    _01cfa4_jump

	_01cfe6_jump:
		mov    0x00000c(%esp),%ebx
		mov    0x000034(%esp),%eax
		mov    0x00002c(%esi),%dx
		add    %eax,%ebx
		sub    %edx,%ebx

	_01cff6_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _01d001_jump
		neg    %eax

	_01d001_jump:
		cmp    $0x000010,%eax
		jl     _01d038_jump
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _01d016_jump
		mov    $0x000001,%eax
		jg     _01d016_jump
		neg    %eax

	_01d016_jump:
		shl    $0x000004,%eax
		mov    0x00002c(%esi),%ebp
		add    %eax,%ebp
		mov    %edx,%eax
		mov    %ebp,0x00002c(%esi)
		cmp    $0x000000,%eax
		je     _01d031_jump
		mov    $0x000001,%eax
		jg     _01d031_jump
		neg    %eax

	_01d031_jump:
		shl    $0x000004,%eax
		sub    %eax,%ebx
		jmp    _01cff6_jump

	_01d038_jump:
		test   %cx,%cx
		jne    _01d072_jump
		jmp    _01d0b6_jump

	_01d042_case:
		add    0x000040(%edi),%cx
		jmp    _01d0b6_jump

	_01d048_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%ecx
		call   _04d240_func
		add    %eax,%ecx
		jmp    _01d0b6_jump

	_01d05a_case:
		add    0x000040(%edi),%cx
		shl    $0x000004,%ecx
		jmp    _01d0b6_jump

	_01d063_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		call   _04d240_func
		add    %eax,%ecx
		jmp    _01d0b6_jump

	_01d072_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		mov    _092245_data(,%eax,4),%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		mov    _092245_data(,%eax,4),%al
		shl    $0x000003,%dl
		shl    $0x000003,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		add    %eax,%eax
		and    $0x0000ff,%edx
		add    %edx,%eax
		cmp    $0x000003,%eax
		ja     _01d0b6_jump
		jmp    *%cs:_01ce48_switch(,%eax,4)

	_01d0b6_jump:
		test   %bx,%bx
		jne    _01d0f0_jump
		jmp    _01d134_jump

	_01d0c0_case:
		add    0x000042(%edi),%bx
		jmp    _01d134_jump

	_01d0c6_case:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%ebx
		call   _04d240_func
		add    %eax,%ebx
		jmp    _01d134_jump

	_01d0d8_case:
		add    0x000042(%edi),%bx
		shl    $0x000004,%ebx
		jmp    _01d134_jump

	_01d0e1_case:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		call   _04d240_func
		add    %eax,%ebx
		jmp    _01d134_jump

	_01d0f0_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		mov    _092245_data(,%eax,4),%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		mov    _092245_data(,%eax,4),%al
		shl    $0x000002,%dl
		shl    $0x000002,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		add    %eax,%eax
		and    $0x0000ff,%edx
		add    %edx,%eax
		cmp    $0x000003,%eax
		ja     _01d134_jump
		jmp    *%cs:_01ce58_switch(,%eax,4)

	_01d134_jump:
		mov    %cx,0x000040(%esi)
		mov    %bx,0x000042(%esi)
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01d148_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0c1b04_data,%eax
		mov    _0c1b08_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jg     _01d16f_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01d164_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %bx,%dx
		jge    _01d175_jump

	_01d16f_jump:
		cmp    0x000060(%eax),%cx
		jne    _01d164_jump

	_01d175_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01d1b4_func:
		push   %esi
		push   %edi
		mov    %eax,%esi
		add    (%ecx),%dx
		mov    0x00002c(%eax),%ax
		and    $0x00000f,%dh
		mov    0x00003e(%esi),%di
		mov    %eax,%esi
		movswl %dx,%eax
		sar    $0x000003,%eax
		cwtl   
		sub    %edi,%esi
		call   _055820_func
		movswl %ax,%edi
		movswl %bx,%eax
		imul   %edi,%eax
		sar    $0x000009,%eax
		mov    %dx,(%ecx)
		sub    %esi,%eax
		pop    %edi
		pop    %esi
		ret    



_01d1ec_func:
		mov    %ax,_0c25e4_data
		mov    %dx,_0c25e6_data
		ret    



_01d1fc_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cmpb   $0x000000,_0c25ea_data
		jne    _01d20e_jump
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_01d20e_jump:
		movswl %ax,%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		add    $0x000100,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d23c_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		movswl %ax,%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		add    $0x000100,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%ecx
		imul   %ecx,%eax
		sar    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d264_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0c25e2_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d2a0_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0c25e4_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d2dc_func:
		mov    %al,_0c25ea_data
		ret    



_01d2e4_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0c25e2_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		shl    $0x000008,%edx
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d31c_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0c25e4_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		shl    $0x000008,%edx
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d354_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		mov    %dl,%ch
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x00006c(%ebx),%dl
		mov    (%eax),%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000002(%eax),%dl
		mov    0x000005(%eax),%cl
		lea    0x000000(,%edx,4),%eax
		and    $0x00000f,%cl
		sub    %edx,%eax
		mov    0x000004(%ebx),%edx
		movzbw %cl,%si
		mov    0x00000a(%edx,%eax,4),%dx
		imul   %esi,%edx
		xor    %eax,%eax
		mov    %ch,%al
		imul   %eax,%edx
		xor    %eax,%eax
		mov    %cl,%al
		mov    _0c2498_data(%eax),%al
		xor    %ah,%ah
		sub    %eax,%edx
		inc    %edx
		movswl %dx,%eax
		test   %eax,%eax
		jg     _01d3b9_jump
		mov    $0x000001,%eax

	_01d3b9_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01d3c0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %edx,%esi
		mov    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x000004(%ebx,%edx,4),%edx
		xor    %ebx,%ebx
		mov    0x00006b(%eax),%bl
		shl    $0x000002,%ebx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000002(%edx),%bl
		mov    %bx,(%ecx)
		xor    %ebx,%ebx
		mov    0x000018(%esp),%ebp
		mov    0x000003(%edx),%bl
		mov    %bx,0x000000(%ebp)
		testb  $0x000008,0x000081(%eax)
		jne    _01d41c_jump
		xor    %ebx,%ebx
		mov    (%edx),%bl
		mov    %ebx,(%esp)
		mov    (%esp),%ecx
		mov    0x000028(%eax),%bx
		add    %ecx,%ebx
		mov    %bx,(%esi)
		jmp    _01d44f_jump

	_01d41c_jump:
		xor    %ebx,%ebx
		mov    0x000068(%eax),%bl
		add    %ebx,%ebx
		mov    %ebx,(%esp)
		mov    0x000028(%eax),%bx
		add    (%esp),%ebx
		mov    %ebx,(%esp)
		xor    %ebx,%ebx
		mov    (%edx),%bl
		mov    %ebx,0x000004(%esp)
		mov    (%esp),%ebx
		sub    0x000004(%esp),%ebx
		mov    %ebx,0x000004(%esp)
		mov    (%ecx),%bx
		mov    0x000004(%esp),%ecx
		sub    %ebx,%ecx
		mov    %cx,(%esi)

	_01d44f_jump:
		mov    0x000001(%edx),%dl
		mov    0x00002c(%eax),%ax
		xor    %dh,%dh
		add    %edx,%eax
		mov    %ax,(%edi)
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01d498_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006c(%eax)
		ret    



_01d4a0_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006d(%eax)
		ret    



_01d4a8_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006d(%eax)
		mov    %bl,0x00006c(%eax)
		ret    



_01d4b4_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x00008a,%ax
		jb     _01d599_jump
		jbe    _01d55b_jump
		cmp    $0x0000ae,%ax
		jb     _01d576_jump
		jbe    _01d542_jump
		cmp    $0x0000bd,%ax
		jb     _01d569_jump
		jbe    _01d519_jump
		cmp    $0x0000e1,%ax
		jb     _01d4f3_jump
		cmp    $0x0000e2,%ax
		jbe    _01d542_jump

	_01d4f3_jump:
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d4fa_jump:
		mov    $0x000040,%eax
		pop    %edx
		ret    

	_01d501_jump:
		mov    _0c24f2_data,%ax
		mov    %eax,%edx
		cmp    $0x000001,%ax
		jb     _01d4f3_jump
		jbe    _01d4f3_jump
		cmp    $0x000002,%ax
		je     _01d4fa_jump
		jmp    _01d4f3_jump

	_01d519_jump:
		mov    $0x000012,%eax
		pop    %edx
		ret    

	_01d520_jump:
		mov    _0c24f2_data,%ax
		cmp    $0x000001,%ax
		jb     _01d519_jump
		jbe    _01d519_jump
		cmp    $0x000002,%ax
		jmp    _01d519_jump

	_01d534_jump:
		mov    $0x000046,%eax
		pop    %edx
		ret    

	_01d53b_jump:
		mov    $0x000080,%eax
		pop    %edx
		ret    

	_01d542_jump:
		mov    $0x000050,%eax
		pop    %edx
		ret    

	_01d549_jump:
		mov    0x000075(%edx),%al
		cmp    $0x000005,%al
		jb     _01d4f3_jump
		cmp    $0x000007,%al
		jbe    _01d542_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d55b_jump:
		mov    $0x000068,%eax
		pop    %edx
		ret    

	_01d562_jump:
		mov    $0x000024,%eax
		pop    %edx
		ret    

	_01d569_jump:
		cmp    $0x0000b8,%ax
		je     _01d542_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d576_jump:
		cmp    $0x00008c,%ax
		jb     _01d4f3_jump
		jbe    _01d562_jump
		cmp    $0x00009a,%ax
		jb     _01d4f3_jump
		cmp    $0x00009b,%ax
		jbe    _01d55b_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d599_jump:
		cmp    $0x000031,%ax
		jb     _01d5ba_jump
		jbe    _01d53b_jump
		cmp    $0x00006a,%ax
		jb     _01d4f3_jump
		jbe    _01d534_jump
		cmp    $0x00007b,%ax
		je     _01d549_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d5ba_jump:
		cmp    $0x000016,%ax
		jb     _01d4f3_jump
		jbe    _01d501_jump
		cmp    $0x00002d,%ax
		je     _01d520_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    



_01d5dc_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000060(%eax),%ax
		cmp    $0x00008c,%ax
		jb     _01d6fc_jump
		jbe    _01d6ae_jump
		cmp    $0x0000b8,%ax
		jb     _01d6dc_jump
		jbe    _01d6b8_jump
		cmp    $0x0000c3,%ax
		jb     _01d6cc_jump
		jbe    _01d6c2_jump
		cmp    $0x0000e1,%ax
		jb     _01d624_jump
		cmp    $0x0000e2,%ax
		jbe    _01d6b8_jump

	_01d624_jump:
		mov    $0x000028,%edx

	_01d629_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d62e_jump:
		mov    _0c24f2_data,%ax
		mov    %eax,%edx
		cmp    $0x000001,%ax
		jb     _01d624_jump
		jbe    _01d624_jump
		cmp    $0x000002,%ax
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d64c_jump:
		mov    _0c24f2_data,%ax
		mov    %eax,%edx
		cmp    $0x000001,%ax
		jb     _01d660_jump
		jbe    _01d660_jump
		cmp    $0x000002,%ax

	_01d660_jump:
		mov    $0x000012,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d66a_jump:
		mov    0x000040(%ebx),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jle    _01d67e_jump

	_01d674_jump:
		mov    $0x000040,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d67e_jump:
		mov    $0x00004e,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d688_jump:
		mov    $0x000048,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d692_jump:
		mov    0x000075(%ebx),%al
		cmp    $0x000005,%al
		jb     _01d629_jump
		jbe    _01d688_jump
		cmp    $0x000007,%al
		jbe    _01d66a_jump
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d6a4_jump:
		mov    $0x000068,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d6ae_jump:
		mov    $0x000020,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d6b8_jump:
		mov    $0x000060,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d6c2_jump:
		mov    $0x00005a,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d6cc_jump:
		cmp    $0x0000bd,%ax
		je     _01d660_jump
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d6dc_jump:
		cmp    $0x00009a,%ax
		jb     _01d624_jump
		cmp    $0x00009b,%ax
		jbe    _01d6a4_jump
		cmp    $0x0000ae,%ax
		je     _01d6b8_jump
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d6fc_jump:
		cmp    $0x000031,%ax
		jb     _01d72e_jump
		jbe    _01d674_jump
		cmp    $0x00007b,%ax
		jb     _01d720_jump
		jbe    _01d692_jump
		cmp    $0x00008a,%ax
		je     _01d6a4_jump
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d720_jump:
		cmp    $0x00006a,%ax
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d72e_jump:
		cmp    $0x000016,%ax
		jb     _01d624_jump
		jbe    _01d62e_jump
		cmp    $0x00002d,%ax
		je     _01d64c_jump
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_01d754_func:
		push   %ecx
		push   %esi
		movswl %bx,%ebx
		movswl %dx,%edx
		mov    0x00002c(%eax),%ecx
		mov    0x000028(%eax),%esi
		add    %ecx,%ebx
		add    %esi,%edx
		sar    $0x000004,%ebx
		sar    $0x000004,%edx
		movswl %bx,%ebx
		movswl %dx,%eax
		mov    %ebx,%edx
		call   _01e288_func
		and    $0x0000ff,%eax
		mov    _092204_data(%eax),%al
		shl    $0x000002,%al
		shr    $0x000007,%al
		xor    %ah,%ah

	_01d78c_jump:
		pop    %esi
		pop    %ecx
		ret    



_01d790_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    %ebx,%edx
		mov    0x000008(%esi),%bx
		and    $0x00003f,%bh
		xor    %ecx,%ecx
		and    $0x00ffff,%ebx
		mov    0x00006b(%eax),%cl
		imul   %ecx,%ebx
		lea    0x000000(,%ebx,4),%ecx
		mov    (%esi),%ebx
		mov    0x000008(%edx),%si
		and    $0x003fff,%esi
		movzwl %si,%ebp
		movswl %di,%esi
		imul   %ebp,%esi
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    0x000075(%eax),%cl
		mov    (%edx),%edx
		shl    $0x000002,%ecx
		shl    $0x000002,%esi
		add    %ecx,%ebx
		add    %esi,%edx
		movzbl 0x000003(%ebx),%esi
		add    %edx,%ecx
		lea    0x000000(,%esi,4),%edx
		sub    %esi,%edx
		mov    (%eax),%esi
		movzbw 0x000005(%esi,%edx,4),%si
		testb  $0x000008,0x000081(%eax)
		je     _01d81a_jump
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		add    %edx,%edx
		sub    %esi,%edx
		mov    %edx,%edi
		movzbw 0x000001(%ecx),%si
		sub    %esi,%edi
		mov    %edi,%esi
		movzbw 0x000001(%ebx),%di
		sub    %edi,%edx
		jmp    _01d824_jump

	_01d81a_jump:
		xor    %edx,%edx
		movzbw 0x000001(%ecx),%si
		mov    0x000001(%ebx),%dl

	_01d824_jump:
		mov    0x000002(%ebx),%bl
		mov    0x000002(%ecx),%cl
		xor    %bh,%bh
		xor    %ch,%ch
		sub    %esi,%edx
		sub    %ecx,%ebx
		mov    %dx,0x00004e(%eax)
		mov    %bx,0x00004c(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_01d840_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %dx,0x000004(%esp)
		mov    %ebx,%esi
		mov    %ecx,%edi
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		shl    $0x000002,%edx
		mov    0x000004(%eax),%ebx
		add    %ebx,%edx
		mov    0x000008(%edx),%bx
		xor    %ecx,%ecx
		and    $0x00003f,%bh
		mov    %bx,%cx
		xor    %ebx,%ebx
		mov    0x00006b(%eax),%bl
		imul   %ecx,%ebx
		mov    (%edx),%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %ecx,%ecx
		mov    0x000003(%ebx),%dl
		mov    %dl,%cl
		mov    %dl,0x000008(%esp)
		lea    0x000000(,%ecx,4),%edx
		sub    %ecx,%edx
		shl    $0x000002,%edx
		mov    (%eax),%ecx
		add    %ecx,%edx
		cmpb   $0x000000,0x000008(%esp)
		je     _01d97b_jump
		cmpb   $0x000000,0x000004(%edx)
		je     _01d97b_jump
		xor    %ecx,%ecx
		mov    0x000007(%edx),%cl
		mov    0x000020(%esp),%ebp
		mov    %cx,0x000000(%ebp)
		xor    %ecx,%ecx
		mov    0x000024(%esp),%ebp
		mov    0x000008(%edx),%cl
		mov    %cx,0x000000(%ebp)
		mov    0x000081(%eax),%cl
		shl    $0x000004,%cl
		shr    $0x000007,%cl
		movzbl %cl,%ebp
		mov    0x00000b(%edx),%cl
		shl    $0x000005,%cl
		shr    $0x000007,%cl
		mov    %cl,0x00000c(%esp)
		xor    %ecx,%ecx
		mov    0x00000c(%esp),%cl
		xor    %ebp,%ecx
		je     _01d932_jump
		xor    %ecx,%ecx
		mov    0x000001(%ebx),%cl
		mov    %ecx,(%esp)
		mov    0x000009(%edx),%cl
		and    $0x00000f,%cl
		mov    (%esp),%ebp
		and    $0x0000ff,%ecx
		add    %ecx,%ebp
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		add    %ecx,%ecx
		sub    %ebp,%ecx
		mov    %ecx,(%esp)
		xor    %ecx,%ecx
		mov    (%esp),%ebp
		mov    0x000005(%edx),%cl
		sub    %ecx,%ebp
		mov    %ebp,%ecx
		mov    0x000028(%eax),%ebp
		jmp    _01d946_jump

	_01d932_jump:
		mov    0x000001(%ebx),%cl
		mov    0x000028(%eax),%ebp
		add    %ecx,%ebp
		mov    0x000009(%edx),%cl
		and    $0x00000f,%cl
		and    $0x0000ff,%ecx

	_01d946_jump:
		add    %ecx,%ebp
		mov    %ebp,(%esp)
		mov    (%esp),%ecx
		mov    %cx,(%esi)
		mov    0x000002(%ebx),%bl
		mov    0x000009(%edx),%dl
		and    $0x0000ff,%ebx
		shr    $0x000004,%dl
		and    $0x0000ff,%edx
		add    %ebx,%edx
		add    0x00002c(%eax),%edx
		mov    $0x000001,%al
		mov    %dx,(%edi)
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_01d97b_jump:
		xor    %al,%al
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01d988_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    0x00001c(%esp),%ebp
		mov    %eax,%esi
		mov    %edx,%edi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		mov    %eax,0x000004(%esp)
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%edx),%eax
		add    (%esp),%eax
		testb  $0x000040,0x000007(%eax)
		je     _01d9e5_jump
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000040,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x00000e,0x000000(%ebp)
		jmp    _01daa4_jump

	_01d9e5_jump:
		mov    0x000004(%esp),%eax
		cmp    $0x000005,%eax
		jne    _01da16_jump
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x00002e,0x000000(%ebp)
		jmp    _01daa4_jump

	_01da16_jump:
		cmp    $0x000007,%eax
		jne    _01da81_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x00006b(%esi),%al
		mov    %al,%dl
		cmp    $0x000020,%edx
		jle    _01da2c_jump
		sub    $0x000020,%eax

	_01da2c_jump:
		cwtl   
		cmp    $0x000009,%eax
		jle    _01da5c_jump
		cmp    $0x000017,%eax
		jge    _01da5c_jump
		mov    0x000028(%esi),%ax
		add    $0x000040,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000036,%eax
		mov    %ax,(%ebx)
		movw   $0x000024,(%ecx)
		movw   $0x000014,0x000000(%ebp)
		jmp    _01daa4_jump

	_01da5c_jump:
		mov    0x000028(%esi),%ax
		add    $0x000046,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%ebx)
		movw   $0x000014,(%ecx)
		movw   $0x000028,0x000000(%ebp)
		jmp    _01daa4_jump

	_01da81_jump:
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000018,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x000036,0x000000(%ebp)

	_01daa4_jump:
		cmpw   $0x000000,0x00005a(%esi)
		je     _01db44_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    %eax,0x000008(%esp)
		mov    0x000028(%esi),%ax
		add    0x000008(%esp),%eax
		mov    %ax,0x000008(%esp)
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		call   _01d1ec_func
		mov    0x000058(%esi),%eax
		movswl (%edi),%edx
		sar    $0x000010,%eax
		call   _01d264_func
		mov    %ax,(%edi)
		mov    0x000058(%esi),%eax
		movswl (%ebx),%edx
		sar    $0x000010,%eax
		call   _01d2a0_func
		mov    %ax,(%ebx)
		mov    0x000058(%esi),%eax
		movswl (%ecx),%edx
		sar    $0x000010,%eax
		call   _01d23c_func
		mov    %ax,(%ecx)
		mov    0x000058(%esi),%eax
		movswl 0x000000(%ebp),%edx
		sar    $0x000010,%eax
		call   _01d23c_func
		mov    %ax,0x000000(%ebp)
		xor    %eax,%eax
		mov    0x000038(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000036(%esi),%cx
		mov    0x000068(%esi),%al
		add    %ecx,%eax
		cwtl   
		call   _01d1ec_func

	_01db44_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01db50_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,(%esp)
		movw   $0x000006,0x000008(%esp)
		lea    0x000004(%esp),%edx
		push   %edx
		mov    %edi,%edx
		call   _01d3c0_func
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		cmp    $0x000002,%edx
		jne    _01db91_jump
		xor    %edx,%edx
		mov    0x00006c(%esi),%dl
		test   %edx,%edx
		je     _01db8a_jump
		cmp    $0x000004,%edx
		jne    _01db91_jump

	_01db8a_jump:
		movw   $0x000003,0x000008(%esp)

	_01db91_jump:
		mov    0x00001c(%esp),%edx
		mov    (%esp),%ebx
		mov    %ebp,%ecx
		push   %edx
		mov    %esi,%eax
		mov    0x00000a(%esp),%edx
		push   %ebx
		sar    $0x000010,%edx
		mov    %edi,%ebx
		call   _01d840_func
		mov    (%edi),%ax
		mov    0x000020(%esp),%edx
		sub    $0x000007,%eax
		mov    %ax,(%edx)
		mov    0x00001c(%esp),%edx
		mov    0x000000(%ebp),%ax
		mov    (%edx),%cx
		mov    0x000024(%esp),%edx
		add    %ecx,%eax
		mov    %ax,(%edx)
		mov    (%esp),%eax
		mov    (%eax),%ax
		mov    0x000028(%esp),%edx
		add    $0x00000e,%eax
		mov    %ax,(%edx)
		mov    0x000002(%esp),%edx
		mov    0x00002c(%esp),%eax
		sar    $0x000011,%edx
		mov    %dx,(%eax)
		mov    (%edi),%ax
		add    $0x000004,%eax
		mov    (%esp),%edx
		mov    %ax,(%edi)
		subw   $0x000008,(%edx)
		mov    0x000000(%ebp),%cx
		add    $0x000004,%ecx
		mov    0x00001c(%esp),%edx
		mov    %cx,0x000000(%ebp)
		subw   $0x000008,(%edx)
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		test   %edx,%edx
		jne    _01dc23_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000010,%edx
		je     _01dc34_jump

	_01dc23_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		test   %edx,%edx
		jne    _01dc4a_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000013,%edx
		jne    _01dc4a_jump

	_01dc34_jump:
		mov    0x00001c(%esp),%ecx
		mov    (%esp),%eax
		push   %ecx
		mov    %edi,%ebx
		xor    %edx,%edx
		push   %eax
		mov    %ebp,%ecx
		mov    %esi,%eax
		call   _01d840_func

	_01dc4a_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000014



_01dc54_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0c1b44_data,%ebx
		mov    _0c1b84_data,%dl
		mov    0x000028(%eax),%ecx
		add    %ebx,%edx
		xor    %ebx,%ebx
		sub    %ecx,%edx
		mov    0x000068(%eax),%bl
		sub    %ebx,%edx
		test   %edx,%edx
		jle    _01dc82_jump
		orb    $0x000008,0x000081(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01dc82_jump:
		andb   $0x0000f7,0x000081(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01dc90_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x000009,%ax
		jb     _01dcd3_jump
		jbe    _01dcad_jump
		cmp    $0x000090,%ax
		jb     _01dcc0_jump
		jbe    _01dcad_jump
		cmp    $0x0000a5,%ax
		jne    _01dcc0_jump

	_01dcad_jump:
		mov    0x00007b(%edx),%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		sete   %al
		xor    %ah,%ah
		pop    %edx
		ret    

	_01dcc0_jump:
		mov    0x00007b(%edx),%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		setge  %al
		xor    %ah,%ah
		pop    %edx
		ret    

	_01dcd3_jump:
		cmp    $0x000003,%ax
		je     _01dcad_jump
		mov    0x00007b(%edx),%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		setge  %al
		xor    %ah,%ah
		pop    %edx
		ret    



_01dcec_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c247e_data,%bx
		mov    0x00002c(%eax),%dx
		sub    %ebx,%edx
		mov    %dx,0x000038(%eax)
		mov    _0c247c_data,%cx
		mov    0x000028(%eax),%dx
		sub    %ecx,%edx
		add    $0x000008,%edx
		mov    %dx,0x000036(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01dd18_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		movb   $0x0000ff,(%esp)
		mov    0x000060(%ecx),%ax
		cmp    $0x000046,%ax
		jb     _01e1d7_jump
		jbe    _01df6e_jump
		cmp    $0x00009c,%ax
		jb     _01e1b3_jump
		jbe    _01e0da_jump
		cmp    $0x0000c3,%ax
		jb     _01e1a4_jump
		jbe    _01e10c_jump
		cmp    $0x0000d9,%ax
		je     _01e03c_jump
		jmp    _01e22c_jump

	_01dd67_jump:
		xor    %eax,%eax
		mov    0x000075(%ecx),%al
		cmp    $0x000001,%eax
		je     _01dd84_jump
		cmp    $0x000002,%eax
		je     _01dd84_jump
		cmp    $0x000004,%eax
		je     _01dd84_jump
		cmp    $0x000007,%eax
		jne    _01e22c_jump

	_01dd84_jump:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01dd9d_jump
		movb   $0x000003,(%esp)
		orb    $0x000008,0x000081(%ecx)
		jmp    _01e22c_jump

	_01dd9d_jump:
		cmp    $0x000001,%eax
		jne    _01e22c_jump
		movb   $0x000002,(%esp)
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _01e22c_jump

	_01ddb6_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01de03_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000003,%eax
		je     _01e22c_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _01e22c_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000005,%eax
		je     _01e22c_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000004,%eax
		je     _01e22c_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000006,%eax
		je     _01e22c_jump

	_01de03_jump:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01de1c_jump
		movb   $0x000001,(%esp)
		orb    $0x000008,0x000081(%ecx)
		jmp    _01e22c_jump

	_01de1c_jump:
		cmp    $0x000001,%eax
		jne    _01e22c_jump
		xor    %dl,%dl
		mov    %dl,(%esp)
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _01e22c_jump

	_01de36_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01de54_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000003,%eax
		je     _01e22c_jump
		cmp    $0x000001,%eax
		je     _01e22c_jump

	_01de54_jump:
		mov    0x000081(%ecx),%bh
		test   $0x000010,%bh
		je     _01de98_jump
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01de7c_jump
		movb   $0x000001,(%esp)
		mov    %bh,%ah
		or     $0x000008,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _01e22c_jump

	_01de7c_jump:
		cmp    $0x000001,%eax
		jne    _01e22c_jump
		xor    %bl,%bl
		mov    %bl,(%esp)
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%ecx)
		jmp    _01e22c_jump

	_01de98_jump:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01deb5_jump
		movb   $0x000006,(%esp)
		mov    %bh,%dh
		or     $0x000008,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _01e22c_jump

	_01deb5_jump:
		cmp    $0x000001,%eax
		jne    _01e22c_jump
		movb   $0x000005,(%esp)
		mov    %bh,%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _01e22c_jump

	_01ded2_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01dee7_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000003,%eax
		je     _01e22c_jump

	_01dee7_jump:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01df09_jump
		mov    0x000081(%ecx),%bl
		mov    $0x000001,%dh
		or     $0x000008,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e22c_jump

	_01df09_jump:
		cmp    $0x000001,%eax
		jne    _01e22c_jump
		mov    0x000081(%ecx),%dl
		xor    %ah,%ah
		and    $0x0000f7,%dl
		mov    %ah,(%esp)
		mov    %dl,0x000081(%ecx)
		jmp    _01e22c_jump

	_01df2b_jump:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01df4c_jump
		mov    0x000081(%ecx),%al
		mov    $0x000005,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e22c_jump

	_01df4c_jump:
		cmp    $0x000001,%eax
		jne    _01e22c_jump
		mov    0x000081(%ecx),%bl
		mov    $0x000004,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e22c_jump

	_01df6e_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01df83_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _01e22c_jump

	_01df83_jump:
		testb  $0x000010,0x000081(%ecx)
		je     _01e22c_jump
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01dfa9_jump
		movb   $0x000001,(%esp)
		orb    $0x000008,0x000081(%ecx)
		jmp    _01e22c_jump

	_01dfa9_jump:
		cmp    $0x000001,%eax
		jne    _01e22c_jump
		xor    %dl,%dl
		mov    %dl,(%esp)
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _01e22c_jump

	_01dfc3_jump:
		mov    0x000081(%ecx),%bl
		test   $0x000010,%bl
		je     _01e22c_jump
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01dff0_jump
		mov    %bl,%dl
		mov    $0x000001,%ah
		or     $0x000008,%dl
		mov    %ah,(%esp)
		mov    %dl,0x000081(%ecx)
		jmp    _01e22c_jump

	_01dff0_jump:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		cmp    $0x000001,%eax
		jne    _01e22c_jump
		xor    %bh,%bh
		mov    %bl,%al
		and    $0x0000f7,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e22c_jump

	_01e012_jump:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01e02b_jump
		orb    $0x000008,0x000081(%ecx)
		movb   $0x000002,(%esp)
		jmp    _01e22c_jump

	_01e02b_jump:
		andb   $0x0000f7,0x000081(%ecx)
		xor    %ah,%ah
		mov    %ah,(%esp)
		jmp    _01e22c_jump

	_01e03c_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _01e058_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _01e05f_jump

	_01e058_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_01e05f_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01e074_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000003,%eax
		je     _01e22c_jump

	_01e074_jump:
		mov    $0x000003,%al
		movw   $0x000000,0x00004a(%ecx)
		mov    %al,(%esp)
		jmp    _01e22c_jump

	_01e084_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01e099_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		je     _01e22c_jump

	_01e099_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d4a8_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _01e0ca_jump
		orb    $0x000008,0x000081(%ecx)
		movb   $0x000003,(%esp)
		jmp    _01e22c_jump

	_01e0ca_jump:
		andb   $0x0000f7,0x000081(%ecx)
		movb   $0x000002,(%esp)
		jmp    _01e22c_jump

	_01e0da_jump:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _01e0f3_jump
		movb   $0x000002,(%esp)
		orb    $0x000008,0x000081(%ecx)
		jmp    _01e22c_jump

	_01e0f3_jump:
		cmp    $0x000001,%eax
		jne    _01e22c_jump
		movb   $0x000001,(%esp)
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _01e22c_jump

	_01e10c_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01e121_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000018,%eax
		je     _01e22c_jump

	_01e121_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01e136_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000012,%eax
		je     _01e22c_jump

	_01e136_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _01e14b_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000013,%eax
		je     _01e22c_jump

	_01e14b_jump:
		mov    $0x000018,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%ecx),%bl
		sub    %eax,%edx
		and    $0x0000f7,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%ecx)
		and    $0x000001,%al
		mov    %bl,%bh
		shl    $0x000003,%al
		movw   $0x000000,0x000042(%ecx)
		or     %al,%bh
		mov    0x000042(%ecx),%ax
		mov    %bh,0x000081(%ecx)
		mov    %ax,0x000040(%ecx)
		jmp    _01e22c_jump

	_01e1a4_jump:
		cmp    $0x0000a5,%ax
		je     _01de36_jump
		jmp    _01e22c_jump

	_01e1b3_jump:
		cmp    $0x00007b,%ax
		jb     _01e1cb_jump
		jbe    _01dd67_jump
		cmp    $0x000098,%ax
		je     _01e084_jump
		jmp    _01e22c_jump

	_01e1cb_jump:
		cmp    $0x000064,%ax
		je     _01e05f_jump
		jmp    _01e22c_jump

	_01e1d7_jump:
		cmp    $0x000023,%ax
		jb     _01e20b_jump
		jbe    _01df2b_jump
		cmp    $0x00003c,%ax
		jb     _01e1ff_jump
		cmp    $0x00003d,%ax
		jbe    _01dfc3_jump
		cmp    $0x000041,%ax
		je     _01e012_jump
		jmp    _01e22c_jump

	_01e1ff_jump:
		cmp    $0x00002b,%ax
		je     _01df2b_jump
		jmp    _01e22c_jump

	_01e20b_jump:
		cmp    $0x000009,%ax
		jb     _01e223_jump
		jbe    _01de36_jump
		cmp    $0x000014,%ax
		je     _01ded2_jump
		jmp    _01e22c_jump

	_01e223_jump:
		test   %ax,%ax
		je     _01ddb6_jump

	_01e22c_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x0000ff,%eax
		je     _01e27e_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000010,_092245_data(,%eax,4)
		je     _01e259_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		call   _04d240_func
		cwtl   
		sub    %eax,0x000028(%ecx)
		jmp    _01e267_jump

	_01e259_jump:
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)

	_01e267_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    (%esp),%dl
		movw   $0x000000,0x000040(%ecx)
		call   _058bb4_func

	_01e27e_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e288_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    _0c24b2_data,%ecx
		movswl %ax,%esi
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    %esi,%eax
		dec    %ecx
		cmp    %ebx,%eax
		jl     _01e2ab_jump
		cmp    %ecx,%eax
		jg     _01e2ab_jump
		mov    $0x000001,%eax
		jmp    _01e2ad_jump

	_01e2ab_jump:
		xor    %eax,%eax

	_01e2ad_jump:
		test   %eax,%eax
		je     _01e300_jump
		mov    _0c24b4_data,%ecx
		movswl %dx,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		dec    %ecx
		cmp    %ebx,%eax
		jl     _01e2d1_jump
		cmp    %ecx,%eax
		jg     _01e2d1_jump
		mov    $0x000001,%eax
		jmp    _01e2d3_jump

	_01e2d1_jump:
		xor    %eax,%eax

	_01e2d3_jump:
		test   %eax,%eax
		je     _01e300_jump
		mov    _0c24b2_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		add    %esi,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_01e300_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01e308_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000017,%eax
		jne    _01e32f_jump
		testb  $0x000002,_0c32e5_data
		je     _01e32b_jump
		mov    $0x000004,%dl
		jmp    _01e331_jump

	_01e32b_jump:
		mov    $0x000008,%dl
		jmp    _01e331_jump

	_01e32f_jump:
		mov    $0x000010,%dl

	_01e331_jump:
		movzbw 0x000068(%esi),%di
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%edi
		mov    0x00002c(%esi),%bx
		add    %eax,%ebx
		mov    $0x000004,%cl
		mov    %ebx,%eax
		mov    %ebx,0x000010(%esp)
		test   %ax,%ax
		js     _01e359_jump
		sar    %cl,%ax
		jmp    _01e362_jump

	_01e359_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e362_jump:
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %ax,0x00000c(%esp)
		mov    %edi,%eax
		test   %ax,%ax
		js     _01e377_jump
		sar    %cl,%ax
		jmp    _01e380_jump

	_01e377_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e380_jump:
		mov    %ax,0x000008(%esp)
		mov    %ax,0x000004(%esp)
		mov    %edi,%eax
		xor    %dh,%dh
		mov    $0x000004,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _01e39c_jump
		sar    %cl,%ax
		jmp    _01e3a5_jump

	_01e39c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e3a5_jump:
		mov    %ax,(%esp)
		mov    %edi,%eax
		mov    $0x000004,%cl
		add    %edx,%eax
		test   %ax,%ax
		js     _01e3b9_jump
		sar    %cl,%ax
		jmp    _01e3c2_jump

	_01e3b9_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e3c2_jump:
		mov    %ax,0x000014(%esp)
		mov    %ebx,%eax
		mov    0x000006(%esp),%ecx
		dec    %eax
		sar    $0x000010,%ecx
		movswl %ax,%edx
		mov    %ecx,%eax
		movswl %bx,%ebx
		call   _01e288_func
		mov    %al,0x000065(%esi)
		mov    -0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		call   _01e288_func
		mov    %al,0x000063(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _01e427_jump
		mov    0x000010(%esp),%eax
		xor    %ah,%ah
		and    $0x00000f,%edi
		and    $0x00000f,%al
		mov    %ebx,%edx
		movswl %ax,%ebp
		mov    %ecx,%eax
		movswl %di,%edi
		call   _01e288_func
		and    $0x0000ff,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _0241f0_func
		cwtl   
		jmp    _01e435_jump

	_01e427_jump:
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _01e288_func
		and    $0x0000ff,%eax

	_01e435_jump:
		mov    0x00000a(%esp),%edx
		mov    %al,0x000062(%esi)
		mov    0x000012(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _01e288_func
		mov    %al,0x000064(%esi)
		mov    0x00000c(%esp),%eax
		inc    %eax
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		call   _01e288_func
		mov    %al,0x000066(%esi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e494_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		call   _01e308_func
		movzbw 0x000068(%ebx),%si
		mov    0x000028(%ebx),%dx
		movzbw 0x000069(%ebx),%di
		xor    %eax,%eax
		mov    0x00002c(%ebx),%cx
		mov    0x000060(%ebx),%ax
		add    %edx,%esi
		add    %ecx,%edi
		cmp    $0x000017,%eax
		je     _01e4d9_jump
		jmp    _01e51b_jump

	_01e4c6_jump:
		movb   $0x000001,_0c256c_data
		jmp    _01e51b_jump

	_01e4cf_jump:
		xor    %ah,%ah
		mov    %ah,_0c256c_data
		jmp    _01e51b_jump

	_01e4d9_jump:
		mov    $0xffffffff,%eax
		mov    _0c1b7e_data,%cl
		mov    %ax,_0c1b6c_data
		cmp    $0x00000c,%cl
		jb     _01e511_jump
		jbe    _01e4c6_jump
		cmp    $0x000012,%cl
		jb     _01e507_jump
		cmp    $0x000017,%cl
		jbe    _01e4cf_jump
		cmp    $0x000019,%cl
		jbe    _01e51b_jump
		cmp    $0x00001e,%cl
		je     _01e4cf_jump
		jmp    _01e51b_jump

	_01e507_jump:
		cmp    $0x00000e,%cl
		jb     _01e51b_jump
		cmp    $0x00000f,%cl
		jmp    _01e519_jump

	_01e511_jump:
		cmp    $0x000002,%cl
		jb     _01e51b_jump
		cmp    $0x000007,%cl

	_01e519_jump:
		jbe    _01e4c6_jump

	_01e51b_jump:
		xor    %eax,%eax
		mov    0x000062(%ebx),%al
		testb  $0x000002,_092204_data(%eax)
		jne    _01e7af_jump
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		cmp    $0x000017,%eax
		jne    _01e556_jump
		mov    _0c1b6e_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		jmp    _01e56b_jump

	_01e556_jump:
		movswl %di,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e288_func

	_01e56b_jump:
		xor    %edx,%edx
		mov    0x00006d(%ebx),%dl
		cmp    $0x000002,%edx
		jne    _01e59a_jump
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_092204_data(%edx)
		jne    _01e59a_jump
		movswl %di,%eax
		add    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e288_func

	_01e59a_jump:
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_092204_data(%edx)
		je     _01e5ae_jump
		xor    %ah,%ah
		jmp    _01e7b4_jump

	_01e5ae_jump:
		xor    %eax,%eax
		mov    0x000064(%ebx),%al
		mov    _092204_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,2),%edx
		xor    %eax,%eax
		mov    0x000063(%ebx),%al
		mov    _092204_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		add    %edx,%eax
		mov    %al,%cl
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x000003,%eax
		jne    _01e600_jump
		mov    %esi,%eax
		xor    %ah,%ah
		and    $0x00000f,%al
		cmp    $0x000008,%ax
		jge    _01e5fe_jump
		mov    $0x000001,%cl
		jmp    _01e600_jump

	_01e5fe_jump:
		mov    $0x000002,%cl

	_01e600_jump:
		test   %cl,%cl
		je     _01e7af_jump
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		dec    %cl
		cmp    $0x000017,%eax
		jne    _01e6a9_jump
		xor    %eax,%eax
		mov    _0c256c_data,%al
		cmp    $0x000001,%eax
		jne    _01e7af_jump
		test   %cl,%cl
		je     _01e632_jump
		add    $0x000010,%esi
		jmp    _01e635_jump

	_01e632_jump:
		sub    $0x000010,%esi

	_01e635_jump:
		movswl %di,%eax
		sub    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e288_func
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		jne    _01e7af_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		je     _01e688_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%cl
		je     _01e682_jump
		movw   $0x000000,0x000050(%ebx)
		jmp    _01e688_jump

	_01e682_jump:
		movw   $0x000001,0x000050(%ebx)

	_01e688_jump:
		test   %cl,%cl
		setne  %al
		and    $0x0000ff,%eax
		inc    %eax
		mov    _0c1b7e_data(%eax),%al
		mov    %al,_0c1b7e_data
		xor    %eax,%eax
		mov    0x000062(%ebx),%al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01e6a9_jump:
		mov    0x000081(%ebx),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		cmp    %cl,%dl
		je     _01e7af_jump
		xor    %edx,%edx
		mov    0x00006d(%ebx),%dl
		cmp    $0x000002,%edx
		je     _01e7af_jump
		test   %eax,%eax
		jne    _01e6e9_jump
		mov    0x000081(%ebx),%al
		shl    $0x000003,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _01e7a4_jump

	_01e6e9_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		cmp    $0x000009,%eax
		je     _01e7a4_jump
		cmp    $0x0000a5,%eax
		je     _01e7a4_jump
		cmp    $0x000014,%eax
		je     _01e7a4_jump
		cmp    $0x000023,%eax
		je     _01e7a4_jump
		cmp    $0x00002b,%eax
		je     _01e7a4_jump
		cmp    $0x00003c,%eax
		je     _01e7a4_jump
		cmp    $0x00003d,%eax
		je     _01e7a4_jump
		cmp    $0x000041,%eax
		jne    _01e740_jump
		cmpw   $0x000000,0x000050(%ebx)
		jne    _01e7a4_jump

	_01e740_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		cmp    $0x000046,%eax
		je     _01e7a4_jump
		cmp    $0x000064,%eax
		je     _01e7a4_jump
		cmp    $0x0000d9,%eax
		je     _01e7a4_jump
		cmp    $0x000098,%eax
		je     _01e7a4_jump
		cmp    $0x00009c,%eax
		je     _01e7a4_jump
		cmp    $0x0000c3,%eax
		je     _01e7a4_jump
		cmp    $0x00007b,%eax
		jne    _01e7af_jump
		xor    %eax,%eax
		mov    0x000075(%ebx),%al
		cmp    $0x000001,%eax
		je     _01e793_jump
		cmp    $0x000004,%eax
		je     _01e793_jump
		cmp    $0x000007,%eax
		jne    _01e7af_jump
		xor    %eax,%eax
		mov    0x00007d(%ebx),%al
		cmp    $0x000002,%eax
		jne    _01e7af_jump

	_01e793_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		test   %eax,%eax
		jne    _01e7a4_jump
		mov    0x00006c(%ebx),%al
		cmp    $0x000004,%eax
		je     _01e7af_jump

	_01e7a4_jump:
		mov    %ebx,%eax
		call   _01dd18_func
		movb   $0x00000f,0x000062(%ebx)

	_01e7af_jump:
		xor    %eax,%eax
		mov    0x000062(%ebx),%al

	_01e7b4_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e7bc_func:
		movb   $0x000000,0x000071(%eax)
		movb   $0x000000,0x000072(%eax)
		ret    



_01e7c8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _01e7eb_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01e7e2_jump
		neg    %eax

	_01e7e2_jump:
		cmp    $0x000020,%eax
		jge    _01e7eb_jump
		add    %dx,0x000040(%ecx)

	_01e7eb_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x000006,%eax
		jne    _01e814_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _01e809_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _01e83d_jump

	_01e809_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		jmp    _01e831_jump

	_01e814_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _01e828_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		je     _01e83d_jump

	_01e828_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_01e831_jump:
		call   _01d4a8_func
		mov    %ecx,%eax
		call   _01e7bc_func

	_01e83d_jump:
		pop    %ecx
		pop    %ebx
		ret    



_01e840_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%edx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%edx),%al
		testb  $0x000010,0x000007(%ebx,%eax,8)
		je     _01e86d_jump
		xor    %eax,%eax
		mov    0x00006b(%edx),%al
		test   %eax,%eax
		jmp    _01e897_jump

	_01e86d_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%edx),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		lea    0x000000(,%eax,4),%ebx
		mov    0x000004(%edx),%eax
		mov    0x00000a(%ebx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %ebx,%ebx
		dec    %eax
		mov    0x00006b(%edx),%bl
		cmp    %eax,%ebx

	_01e897_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _01e928_jump
		xor    %ebx,%ebx
		mov    0x00006d(%edx),%bl
		mov    0x00000c(%edx),%eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%edx),%al
		mov    0x000005(%ebx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _01e928_jump
		mov    0x000081(%edx),%ch
		mov    %eax,0x000024(%edx)
		mov    _0c257e_data,%eax
		and    $0x0000fb,%ch
		sar    $0x000010,%eax
		mov    %ch,0x000081(%edx)
		cmp    $0x000005,%eax
		jne    _01e8fd_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x0000a1,%eax
		je     _01e908_jump

	_01e8fd_jump:
		mov    0x000032(%edx),%eax
		sar    $0x000010,%eax
		call   _01f5b4_func

	_01e908_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x0000aa,%eax
		je     _01e91a_jump
		cmp    $0x00004b,%eax
		jne    _01e928_jump

	_01e91a_jump:
		movl   $0xffff8300,0x000028(%edx)
		movl   $0xffff8300,0x00002c(%edx)

	_01e928_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e92c_func:
		push   %ebx
		push   %edx
		mov    0x000076(%eax),%dl
		mov    _0c1ed3_data,%dh
		cmp    %dh,%dl
		jae    _01e942_jump
		movb   $0x000000,0x000076(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_01e942_jump:
		mov    %dl,%bl
		sub    %dh,%bl
		mov    %bl,0x000076(%eax)
		pop    %edx
		pop    %ebx
		ret    



_01e94c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %cx,0x000010(%esp)
		movw   $0x000000,(%edx)
		xor    %eax,%eax
		movw   $0x000000,(%ebx)
		mov    _0c1b84_data,%al
		mov    0x00004e(%esi),%dx
		mov    0x000028(%esi),%bx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000068(%esi),%al
		mov    0x00004c(%esi),%cx
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x00001c(%esp)
		mov    _0c1b85_data,%al
		mov    0x00002c(%esi),%dx
		add    %ecx,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		mov    0x00001a(%esp),%ecx
		sub    %edx,%eax
		sar    $0x000010,%ecx
		mov    %ax,0x000014(%esp)
		mov    %ecx,%eax
		mov    0x000012(%esp),%ebx
		test   %eax,%eax
		jge    _01e9b8_jump
		neg    %eax

	_01e9b8_jump:
		mov    %eax,%edx
		sar    $0x000010,%ebx
		mov    %ax,0x00000c(%esp)
		mov    %ebx,%eax
		test   %eax,%eax
		jge    _01e9ca_jump
		neg    %eax

	_01e9ca_jump:
		mov    %eax,0x000004(%esp)
		mov    0x000004(%esp),%eax
		mov    %ax,0x000008(%esp)
		test   %ecx,%ecx
		je     _01eae2_jump
		test   %ebx,%ebx
		je     _01eae2_jump
		cmp    %ax,%dx
		jle    _01ea7f_jump
		mov    0x000002(%esp),%eax
		mov    %ecx,%edx
		sar    $0x000010,%eax
		sar    $0x00001f,%edx
		mov    %eax,(%esp)
		mov    %ecx,%eax
		idivl  (%esp)
		mov    %eax,0x000018(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,0x000020(%esp)
		test   %ecx,%ecx
		jle    _01ea23_jump
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01ea2c_jump

	_01ea23_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01ea2c_jump:
		mov    0x000032(%esp),%edx
		mov    %ax,(%edi)
		mov    0x000012(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000000(%ebp)
		cwtl   
		test   %eax,%eax
		jne    _01eb6d_jump
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _01ea6d_jump
		mov    $0x000010,%eax
		jmp    _01ea72_jump

	_01ea6d_jump:
		mov    $0xfffffff0,%eax

	_01ea72_jump:
		movswl (%edi),%edx
		add    %eax,%edx
		mov    %dx,(%edi)
		jmp    _01eb6d_jump

	_01ea7f_jump:
		movswl %dx,%eax
		mov    %eax,(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,0x000020(%esp)
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,0x000018(%esp)
		test   %ebx,%ebx
		jle    _01eaae_jump
		mov    0x000032(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01eab7_jump

	_01eaae_jump:
		mov    0x000032(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01eab7_jump:
		mov    0x00000e(%esp),%edx
		mov    %ax,0x000000(%ebp)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,(%edi)
		jmp    _01eb6d_jump

	_01eae2_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _01eb32_jump
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _01eb03_jump
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax
		jmp    _01eb0a_jump

	_01eb03_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax

	_01eb0a_jump:
		mov    %ax,(%edi)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _01eb22_jump
		movl   $0x000001,0x000018(%esp)
		jmp    _01eb2a_jump

	_01eb22_jump:
		movl   $0xffffffff,0x000018(%esp)

	_01eb2a_jump:
		xor    %ecx,%ecx
		mov    %ecx,0x000020(%esp)
		jmp    _01eb6d_jump

	_01eb32_jump:
		jle    _01eb3d_jump
		mov    0x000032(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01eb46_jump

	_01eb3d_jump:
		mov    0x000032(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01eb46_jump:
		mov    %ax,0x000000(%ebp)
		mov    0x000012(%esp),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    %ebx,0x000018(%esp)
		test   %eax,%eax
		jle    _01eb65_jump
		movl   $0x000001,0x000020(%esp)
		jmp    _01eb6d_jump

	_01eb65_jump:
		movl   $0xffffffff,0x000020(%esp)

	_01eb6d_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _01eb87_jump
		movswl (%edi),%eax
		test   %eax,%eax
		jg     _01eba4_jump

	_01eb87_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _01ebb5_jump
		movswl (%edi),%eax
		test   %eax,%eax
		jge    _01ebb5_jump

	_01eba4_jump:
		negw   (%edi)
		movswl 0x000000(%ebp),%eax
		test   %eax,%eax
		jne    _01ebb5_jump
		movw   $0x000002,0x000000(%ebp)

	_01ebb5_jump:
		mov    0x000018(%esp),%eax
		mov    0x00004e(%esi),%bx
		add    %eax,%eax
		add    %eax,%ebx
		mov    0x000020(%esp),%eax
		mov    0x00004c(%esi),%cx
		add    %eax,%eax
		mov    %bx,0x00004e(%esi)
		add    %eax,%ecx
		mov    %cx,0x00004c(%esi)
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01ec84_func:
		push   %ebx
		cmp    $0x000001,%al
		jbe    _01ec94_jump
		cmp    $0x000002,%al
		je     _01ecbd_jump

	_01ec8d_jump:
		xor    %eax,%eax
		mov    0x000005(%ebx),%al
		pop    %ebx
		ret    

	_01ec94_jump:
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _01eca1_jump
		add    $0x000029,%dl

	_01eca1_jump:
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c2468_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		jmp    _01ec8d_jump

	_01ecbd_jump:
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c245c_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000005(%ebx),%al
		pop    %ebx
		ret    



_01ece0_func:
		push   %ebx
		cmp    $0x000001,%al
		jbe    _01ecfc_jump
		cmp    $0x000002,%al
		je     _01ed23_jump

	_01ece9_jump:
		mov    0x000009(%ebx),%dl
		xor    %eax,%eax
		and    $0x00000f,%dl
		mov    0x000007(%ebx),%al
		xor    %ebx,%ebx
		mov    %dl,%bl
		add    %ebx,%eax
		pop    %ebx
		ret    

	_01ecfc_jump:
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _01ed09_jump
		add    $0x000029,%dl

	_01ed09_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c2468_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		jmp    _01ece9_jump

	_01ed23_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0c245c_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x000009(%ebx),%dl
		xor    %eax,%eax
		and    $0x00000f,%dl
		mov    0x000007(%ebx),%al
		xor    %ebx,%ebx
		mov    %dl,%bl
		add    %ebx,%eax
		pop    %ebx
		ret    



_01ed50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0c32f6_data,%ebx
		xor    %edx,%edx

	_01ed5c_jump:
		imul   $0x0000d8,%edx,%ecx
		mov    $_0c0000_data,%esi
		mov    %ebx,%edi
		push   %edi

	_01ed6a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _01ed82_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _01ed6a_jump

	_01ed82_jump:
		pop    %edi
		xor    %ah,%ah
		add    $0x0000d8,%ebx
		mov    %ah,_0c33cb_data(%ecx)
		inc    %edx
		mov    %ah,_0c33cc_data(%ecx)
		cmp    $0x000009,%edx
		jle    _01ed5c_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01eda4_func:
		xor    %ah,%ah
		cmp    $0x000061,%al
		jb     _01edb3_jump
		cmp    $0x00007a,%al
		ja     _01edb3_jump
		mov    %al,%ah
		sub    $0x00005d,%ah

	_01edb3_jump:
		cmp    $0x000030,%al
		jb     _01edc0_jump
		cmp    $0x000039,%al
		ja     _01edc0_jump
		mov    %al,%ah
		sub    $0x000012,%ah

	_01edc0_jump:
		cmp    $0x00002e,%al
		jb     _01ee23_jump
		jbe    _01ede7_jump
		cmp    $0x00005e,%al
		jb     _01ee16_jump
		jbe    _01edfb_jump
		cmp    $0x00007e,%al
		jb     _01ee0f_jump
		jbe    _01edf6_jump
		cmp    $0x0000f8,%al
		je     _01ee00_jump
		mov    %ah,%al
		ret    

	_01eddd_jump:
		mov    $0x000001,%ah
		mov    %ah,%al
		ret    

	_01ede2_jump:
		mov    $0x000002,%ah
		mov    %ah,%al
		ret    

	_01ede7_jump:
		mov    $0x000003,%ah
		mov    %ah,%al
		ret    

	_01edec_jump:
		mov    $0x000028,%ah
		mov    %ah,%al
		ret    

	_01edf1_jump:
		mov    $0x000029,%ah
		mov    %ah,%al
		ret    

	_01edf6_jump:
		mov    $0x00002c,%ah
		mov    %ah,%al
		ret    

	_01edfb_jump:
		mov    $0x00002b,%ah
		mov    %ah,%al
		ret    

	_01ee00_jump:
		mov    $0x00002a,%ah
		mov    %ah,%al
		ret    

	_01ee05_jump:
		mov    $0x00002d,%ah
		mov    %ah,%al
		ret    

	_01ee0a_jump:
		mov    $0x00002e,%ah
		mov    %ah,%al
		ret    

	_01ee0f_jump:
		cmp    $0x00007c,%al
		je     _01ee0a_jump
		mov    %ah,%al
		ret    

	_01ee16_jump:
		cmp    $0x00003a,%al
		jb     _01ee40_jump
		jbe    _01edec_jump
		cmp    $0x00003f,%al
		je     _01eddd_jump
		mov    %ah,%al
		ret    

	_01ee23_jump:
		cmp    $0x000025,%al
		jb     _01ee36_jump
		jbe    _01edfb_jump
		cmp    $0x000027,%al
		jb     _01ee40_jump
		jbe    _01edf1_jump
		cmp    $0x00002a,%al
		je     _01ee05_jump
		mov    %ah,%al
		ret    

	_01ee36_jump:
		cmp    $0x000021,%al
		jb     _01ee40_jump
		jbe    _01ede2_jump
		cmp    $0x000023,%al
		je     _01edf6_jump

	_01ee40_jump:
		mov    %ah,%al
		ret    



_01ee44_func:
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _01ee51_jump
		addb   $0x000029,(%edx)

	_01ee51_jump:
		ret    



_01ee54_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		mov    %ecx,(%esp)
		mov    %edx,%ecx
		xor    %ebx,%ebx

	_01ee64_jump:
		inc    %ecx
		movswl %cx,%eax
		add    %esi,%eax
		mov    (%eax),%dl
		test   %dl,%dl
		je     _01eea4_jump
		cmp    $0x00002f,%dl
		je     _01eea4_jump
		cmp    $0x000020,%dl
		jne    _01ee7e_jump
		add    %edi,%ebx
		jmp    _01ee64_jump

	_01ee7e_jump:
		mov    %dl,%al
		and    $0x0000ff,%eax
		xor    %edx,%edx
		call   _01eda4_func
		mov    %al,%dl
		test   %edx,%edx
		je     _01ee64_jump
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		call   _01ece0_func
		sub    (%esp),%eax
		add    %eax,%ebx
		jmp    _01ee64_jump

	_01eea4_jump:
		mov    %ebx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01eeb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000ec,%esp
		mov    %eax,%ebp
		mov    0x0000d4(%eax),%al
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,0x0000c8(%esp)
		mov    %dx,0x0000dc(%esp)
		mov    %edx,0x0000d0(%esp)
		mov    %al,0x0000e8(%esp)
		xor    %eax,%eax
		mov    %edx,0x0000e4(%esp)
		mov    0x0000e8(%esp),%al
		mov    %edx,0x0000cc(%esp)
		cmp    $0x000002,%eax
		jne    _01ef28_jump
		mov    $0x00000f,%edx
		mov    $0x000001,%ecx
		mov    $0x000008,%esi
		mov    %edx,0x0000e0(%esp)
		mov    %ecx,0x0000d8(%esp)
		mov    %esi,0x0000d4(%esp)
		jmp    _01ef77_jump

	_01ef28_jump:
		cmp    $0x000001,%eax
		jne    _01ef53_jump
		mov    $0x000017,%esi
		mov    $0x000003,%edi
		mov    $0x00000a,%eax
		mov    %esi,0x0000e0(%esp)
		mov    %edi,0x0000d8(%esp)
		mov    %eax,0x0000d4(%esp)
		jmp    _01ef77_jump

	_01ef53_jump:
		mov    $0x000024,%eax
		mov    $0x000003,%edx
		mov    $0x00000c,%ecx
		mov    %eax,0x0000e0(%esp)
		mov    %edx,0x0000d8(%esp)
		mov    %ecx,0x0000d4(%esp)

	_01ef77_jump:
		mov    $0x0000c8,%ecx
		mov    %esp,%edi
		mov    %ebp,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01f112_jump
		xor    %ecx,%ecx
		jmp    _01effc_jump

	_01ef9e_jump:
		cmp    $0x000020,%dl
		jne    _01efbf_jump
		mov    0x0000d4(%esp),%esi
		mov    0x0000e4(%esp),%edi
		xor    %al,%al
		inc    %edi
		add    %esi,%ebx
		mov    %edi,0x0000e4(%esp)
		jmp    _01efcb_jump

	_01efbf_jump:
		mov    %dl,%al
		and    $0x0000ff,%eax
		call   _01eda4_func

	_01efcb_jump:
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _01effb_jump
		xor    %eax,%eax
		mov    0x0000e8(%esp),%al
		mov    0x0000d8(%esp),%esi
		call   _01ece0_func
		mov    0x0000e4(%esp),%edx
		sub    %esi,%eax
		inc    %edx
		add    %eax,%ebx
		mov    %edx,0x0000e4(%esp)

	_01effb_jump:
		inc    %ecx

	_01effc_jump:
		movswl %cx,%eax
		mov    (%esp,%eax,1),%dl
		test   %dl,%dl
		je     _01f068_jump
		cmp    $0x00002f,%dl
		jne    _01ef9e_jump
		mov    $0x000001,%eax
		mov    0x0000dc(%esp),%edx
		mov    0x0000c8(%esp),%esi
		add    %eax,%edx
		mov    %eax,0x0000cc(%esp)
		mov    %dx,0x0000dc(%esp)
		cmp    %si,%bx
		jle    _01f03c_jump
		mov    %bx,0x0000c8(%esp)

	_01f03c_jump:
		mov    0x0000e4(%esp),%eax
		mov    0x0000d0(%esp),%edi
		xor    %ebx,%ebx
		cmp    %di,%ax
		jle    _01f058_jump
		mov    %eax,0x0000d0(%esp)

	_01f058_jump:
		xor    %eax,%eax
		mov    %eax,0x0000e4(%esp)
		xor    %al,%al
		jmp    _01efcb_jump

	_01f068_jump:
		mov    0x0000da(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _01f090_jump
		mov    0x0000dc(%esp),%eax
		inc    %eax
		mov    %bx,0x0000c8(%esp)
		mov    %ax,0x0000dc(%esp)
		jmp    _01f098_jump

	_01f090_jump:
		decw   0x0000dc(%esp)

	_01f098_jump:
		cmpw   $0x000000,0x0000cc(%esp)
		je     _01f0c1_jump
		mov    0x0000ce(%ebp),%edx
		mov    0x0000c6(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000011,%eax
		sub    %eax,%edx
		mov    %dx,0x0000c8(%ebp)
		jmp    _01f0cf_jump

	_01f0c1_jump:
		mov    0x0000d0(%ebp),%ax
		mov    %ax,0x0000c8(%ebp)

	_01f0cf_jump:
		mov    0x0000c8(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,0x0000cc(%ebp)
		mov    0x0000e0(%esp),%ebx
		mov    0x0000d2(%ebp),%ax
		sub    %ebx,%eax
		add    $0x000002,%eax
		mov    %ax,0x0000ca(%ebp)
		mov    0x0000dc(%esp),%eax
		imul   %ebx,%eax
		sub    $0x000002,%eax
		mov    %ax,0x0000ce(%ebp)

	_01f112_jump:
		add    $0x0000ec,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01f120_switch:
		.long   _01f16c_case
		.long   _01f172_case
		.long   _01f178_case
		.long   _01f17e_case




_01f130_func:
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		movswl %bx,%edx
		cmp    $0x0000ff,%edx
		jne    _01f15e_jump
		xor    %al,%al
		jmp    _01f147_jump

	_01f145_jump:
		inc    %al

	_01f147_jump:
		xor    %edx,%edx
		mov    %al,%dl
		add    %ecx,%edx
		mov    (%edx),%ah
		test   %ah,%ah
		je     _01f15e_jump
		cmp    $0x000024,%ah
		jne    _01f145_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		jmp    _01f145_jump

	_01f15e_jump:
		movswl %bx,%edx
		cmp    $0x0000ff,%edx
		jne    _01f184_jump
		pop    %esi
		pop    %ecx
		ret    

	_01f16c_case:
		movb   $0x000061,(%ecx)
		pop    %esi
		pop    %ecx
		ret    

	_01f172_case:
		movb   $0x000062,(%ecx)
		pop    %esi
		pop    %ecx
		ret    

	_01f178_case:
		movb   $0x000064,(%ecx)
		pop    %esi
		pop    %ecx
		ret    

	_01f17e_case:
		movb   $0x000063,(%ecx)
		pop    %esi
		pop    %ecx
		ret    

	_01f184_jump:
		cmp    $0x000003,%si
		ja     _01d78c_jump
		xor    %eax,%eax
		mov    %si,%ax
		add    %edx,%ecx
		jmp    *%cs:_01f120_switch(,%eax,4)



_01f1a0_func:
		push   %ebx
		push   %ecx
		mov    (%eax),%bx
		mov    (%edx),%cx
		mov    %bx,(%edx)
		mov    %cx,(%eax)
		pop    %ecx
		pop    %ebx
		ret    



_01f1b4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,0x000004(%esp)
		mov    %dx,0x000010(%esp)
		mov    %bx,0x00001c(%esp)
		mov    %cx,0x000024(%esp)
		mov    0x000040(%esp),%eax
		mov    0x00000e(%esp),%ecx
		mov    %eax,0x000014(%esp)
		mov    0x000022(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sub    %ecx,%eax
		mov    0x00001a(%esp),%esi
		mov    %eax,%ecx
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%esi
		sar    $0x000010,%eax
		sub    %esi,%eax
		xor    %edi,%edi
		mov    %eax,%esi
		test   %ecx,%ecx
		je     _01f218_jump
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %eax,%eax
		jge    _01f20c_jump
		neg    %eax

	_01f20c_jump:
		cmp    $0x000001,%eax
		jge    _01f218_jump
		mov    $0x000001,%ebx
		jmp    _01f21a_jump

	_01f218_jump:
		xor    %ebx,%ebx

	_01f21a_jump:
		movswl %bx,%eax
		cmp    $0x000001,%eax
		jne    _01f398_jump
		test   %ecx,%ecx
		jge    _01f24f_jump
		lea    0x000024(%esp),%edx
		lea    0x000010(%esp),%eax
		mov    $0x000001,%edi
		call   _01f1a0_func
		neg    %ecx
		lea    0x00003c(%esp),%edx
		lea    0x00001c(%esp),%eax
		neg    %esi
		call   _01f1a0_func
		jmp    _01f269_jump

	_01f24f_jump:
		jne    _01f269_jump
		test   %esi,%esi
		jge    _01f269_jump
		lea    0x00003c(%esp),%edx
		lea    0x00001c(%esp),%eax
		mov    $0x000001,%edi
		call   _01f1a0_func
		neg    %esi

	_01f269_jump:
		test   %esi,%esi
		jle    _01f276_jump
		movl   $0x000001,(%esp)
		jmp    _01f286_jump

	_01f276_jump:
		jge    _01f281_jump
		movl   $0xffffffff,(%esp)
		jmp    _01f286_jump

	_01f281_jump:
		xor    %ebp,%ebp
		mov    %ebp,(%esp)

	_01f286_jump:
		mov    %esi,%eax
		test   %eax,%eax
		jge    _01f28e_jump
		neg    %eax

	_01f28e_jump:
		mov    %eax,%esi
		lea    (%eax,%eax,1),%ebp
		add    %esi,%esi
		sub    %ecx,%eax
		mov    %si,0x00000c(%esp)
		add    %eax,%eax
		sub    %ecx,%ebp
		mov    %ax,0x000028(%esp)
		test   %di,%di
		je     _01f327_jump
		mov    0x000022(%esp),%edi
		mov    0x00000e(%esp),%eax
		mov    0x000042(%esp),%edx
		sar    $0x000010,%edi
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edi,%eax
		imul   %edx,%eax
		negl   (%esp)
		mov    $0x000007,%cl
		mov    0x00003a(%esp),%esi
		test   %eax,%eax
		je     _01f2d9_jump
		sar    %cl,%eax
		jmp    _01f2df_jump

	_01f2d9_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f2df_jump:
		mov    0x000022(%esp),%edi
		sar    $0x000010,%edi
		lea    (%edi,%eax,1),%ecx
		inc    %edi
		sar    $0x000010,%esi
		jmp    _01f30c_jump

	_01f2ef_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax

	_01f2f6_jump:
		add    %eax,%ebp
		cmp    0x000014(%esp),%bx
		jle    _01f30b_jump
		movswl %si,%edx
		movswl %di,%eax
		call   *0x000004(%esp)
		xor    %ebx,%ebx

	_01f30b_jump:
		dec    %edi

	_01f30c_jump:
		cmp    %ecx,%edi
		jl     _01f512_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f2ef_jump
		mov    0x000026(%esp),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		add    %edx,%esi
		jmp    _01f2f6_jump

	_01f327_jump:
		mov    0x00000e(%esp),%edi
		mov    0x000022(%esp),%eax
		mov    0x000042(%esp),%edx
		sar    $0x000010,%edi
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edi,%eax
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x00001a(%esp),%esi
		test   %eax,%eax
		je     _01f34f_jump
		sar    %cl,%eax
		jmp    _01f355_jump

	_01f34f_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f355_jump:
		mov    0x00000e(%esp),%edi
		sar    $0x000010,%edi
		lea    (%edi,%eax,1),%ecx
		inc    %edi
		sar    $0x000010,%esi
		jmp    _01f382_jump

	_01f365_jump:
		mov    0x00000a(%esp),%eax

	_01f369_jump:
		sar    $0x000010,%eax
		add    %eax,%ebp
		cmp    0x000014(%esp),%bx
		jle    _01f381_jump
		movswl %si,%edx
		movswl %di,%eax
		call   *0x000004(%esp)
		xor    %ebx,%ebx

	_01f381_jump:
		inc    %edi

	_01f382_jump:
		cmp    %ecx,%edi
		jg     _01f512_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f365_jump
		add    (%esp),%esi
		mov    0x000026(%esp),%eax
		jmp    _01f369_jump

	_01f398_jump:
		test   %esi,%esi
		jge    _01f3c1_jump
		lea    0x000024(%esp),%edx
		lea    0x000010(%esp),%eax
		mov    $0x000001,%edi
		call   _01f1a0_func
		neg    %ecx
		lea    0x00003c(%esp),%edx
		lea    0x00001c(%esp),%eax
		neg    %esi
		call   _01f1a0_func
		jmp    _01f3db_jump

	_01f3c1_jump:
		jne    _01f3db_jump
		test   %ecx,%ecx
		jge    _01f3db_jump
		lea    0x000024(%esp),%edx
		lea    0x000010(%esp),%eax
		mov    $0x000001,%edi
		call   _01f1a0_func
		neg    %ecx

	_01f3db_jump:
		test   %ecx,%ecx
		jle    _01f3e9_jump
		movl   $0x000001,0x000008(%esp)
		jmp    _01f3fb_jump

	_01f3e9_jump:
		jge    _01f3f5_jump
		movl   $0xffffffff,0x000008(%esp)
		jmp    _01f3fb_jump

	_01f3f5_jump:
		xor    %edx,%edx
		mov    %edx,0x000008(%esp)

	_01f3fb_jump:
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _01f403_jump
		neg    %eax

	_01f403_jump:
		mov    %eax,%ecx
		lea    (%eax,%eax,1),%ebp
		add    %ecx,%ecx
		sub    %esi,%eax
		mov    %cx,0x000018(%esp)
		add    %eax,%eax
		sub    %esi,%ebp
		mov    %ax,0x000020(%esp)
		test   %di,%di
		je     _01f4a4_jump
		mov    0x000008(%esp),%edx
		mov    0x00003a(%esp),%esi
		neg    %edx
		mov    0x000042(%esp),%eax
		mov    %edx,0x000008(%esp)
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %esi,%edx
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x000022(%esp),%edi
		test   %eax,%eax
		je     _01f455_jump
		sar    %cl,%eax
		jmp    _01f45b_jump

	_01f455_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f45b_jump:
		mov    0x00003a(%esp),%esi
		sar    $0x000010,%esi
		lea    (%esi,%eax,1),%ecx
		inc    %esi
		sar    $0x000010,%edi
		jmp    _01f488_jump

	_01f46b_jump:
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax

	_01f472_jump:
		add    %eax,%ebp
		cmp    0x000014(%esp),%bx
		jle    _01f487_jump
		movswl %si,%edx
		movswl %di,%eax
		call   *0x000004(%esp)
		xor    %ebx,%ebx

	_01f487_jump:
		dec    %esi

	_01f488_jump:
		cmp    %ecx,%esi
		jl     _01f512_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f46b_jump
		mov    0x00001e(%esp),%eax
		mov    0x000008(%esp),%edx
		sar    $0x000010,%eax
		add    %edx,%edi
		jmp    _01f472_jump

	_01f4a4_jump:
		mov    0x00001a(%esp),%esi
		mov    0x00003a(%esp),%edx
		mov    0x000042(%esp),%eax
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %esi,%edx
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x00000e(%esp),%edi
		test   %eax,%eax
		je     _01f4cc_jump
		sar    %cl,%eax
		jmp    _01f4d2_jump

	_01f4cc_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f4d2_jump:
		mov    0x00001a(%esp),%esi
		sar    $0x000010,%esi
		lea    (%esi,%eax,1),%ecx
		inc    %esi
		sar    $0x000010,%edi
		jmp    _01f4ff_jump

	_01f4e2_jump:
		mov    0x000016(%esp),%eax

	_01f4e6_jump:
		sar    $0x000010,%eax
		add    %eax,%ebp
		cmp    0x000014(%esp),%bx
		jle    _01f4fe_jump
		movswl %si,%edx
		movswl %di,%eax
		call   *0x000004(%esp)
		xor    %ebx,%ebx

	_01f4fe_jump:
		inc    %esi

	_01f4ff_jump:
		cmp    %ecx,%esi
		jg     _01f512_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f4e2_jump
		add    0x000008(%esp),%edi
		mov    0x00001e(%esp),%eax
		jmp    _01f4e6_jump

	_01f512_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_01f51c_func:
		push   %edx
		mov    _0c32ec_data,%ah
		mov    _0c32ed_data,%dl
		and    $0x000000,%ah
		and    $0x0000f0,%dl
		mov    %ah,_0c32ec_data
		mov    %dl,_0c32ed_data
		pop    %edx
		ret    



_01f540_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1b28_data,%eax
		mov    (%eax),%edx
		mov    0x00000c(%eax),%ebx
		mov    0x000002(%edx),%cl
		mov    0x0001c2(%edx),%dl
		mov    %dl,0x0000a2(%ebx)
		mov    (%eax),%edx
		mov    0x0001c2(%edx),%bl
		mov    %bl,0x000002(%edx)
		mov    (%eax),%eax
		mov    %cl,0x0001c2(%eax)
		mov    $0x000001,%al
		mov    _0c256f_data,%ah
		sub    %ah,%al
		mov    %al,_0c256f_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f584_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1b10_data,%dx
		movswl %dx,%ebx
		lea    0x000000(,%ebx,2),%ecx
		inc    %edx
		mov    _0c1b0c_data,%ebx
		mov    0x000034(%eax),%ax
		mov    %dx,_0c1b10_data
		mov    %ax,(%ecx,%ebx,1)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f5b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		mov    _0c1b10_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jg     _01f5d7_jump
		jmp    _01f5ed_jump

	_01f5ca_jump:
		mov    _0c1b10_data,%bx
		inc    %eax
		cmp    %bx,%ax
		jge    _01f5ed_jump

	_01f5d7_jump:
		movswl %ax,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    _0c1b0c_data,%edx
		cmp    (%edx,%ebx,1),%cx
		jne    _01f5ca_jump

	_01f5ed_jump:
		mov    _0c1b10_data,%di
		cmp    %di,%ax
		jge    _01f621_jump
		mov    %edi,%edx
		dec    %edx
		mov    %dx,_0c1b10_data
		mov    _0c1b0e_data,%ebx
		sar    $0x000010,%ebx
		mov    _0c1b0c_data,%edx
		add    %ebx,%ebx
		lea    (%edx,%ebx,1),%ecx
		movswl %ax,%ebx
		mov    (%ecx),%ax
		mov    %ax,(%edx,%ebx,2)

	_01f621_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f628_func:
		push   %edx
		mov    %eax,%edx
		call   _03cdcc_func
		push   %edx
		push   $_0c0001_data
		xor    %edx,%edx
		call   _0783fc_func
		mov    _0c6965_data,%dl
		add    $0x000008,%esp
		cmp    $0x000001,%edx
		je     _01f65d_jump
		push   $_0c001f_data
		call   _0783fc_func
		add    $0x000004,%esp
		call   _078435_func

	_01f65d_jump:
		mov    $0xffffffff,%eax
		call   _07882c_func
		pop    %edx
		ret    



_01f66c_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    %dl,(%esp)
		xor    %eax,%eax
		jmp    _01f67b_jump

	_01f67a_jump:
		inc    %eax

	_01f67b_jump:
		xor    %ecx,%ecx
		movswl %ax,%edx
		mov    0x000044(%ebx),%cx
		cmp    %ecx,%edx
		jge    _01f698_jump
		imul   $0x00000c,%edx,%ecx
		mov    (%ebx),%edx
		mov    0x000004(%ecx,%edx,1),%dl
		cmp    (%esp),%dl
		jne    _01f67a_jump
		jmp    _01f69a_jump

	_01f698_jump:
		xor    %al,%al

	_01f69a_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_01f6a0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    _0c2576_data,%eax
		mov    _0c2572_data,%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		movswl %si,%eax
		mov    _0c2574_data,%ebx
		sub    %eax,%edx
		mov    _0c2578_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000011,%eax
		add    %ebx,%eax
		movswl %di,%ebx
		sub    %ebx,%eax
		mov    %eax,%ebx
		movswl %dx,%eax
		test   %eax,%eax
		setg   %al
		mov    %al,0x000004(%esp)
		movswl %bx,%eax
		test   %eax,%eax
		setg   %al
		mov    %al,(%esp)
		cmpb   $0x000000,0x000004(%esp)
		jne    _01f6fd_jump
		neg    %edx

	_01f6fd_jump:
		cmpb   $0x000000,(%esp)
		jne    _01f705_jump
		neg    %ebx

	_01f705_jump:
		movswl %dx,%eax
		cmp    $0x0000c8,%eax
		jle    _01f741_jump
		mov    $0x000001,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _01f71d_jump
		sar    %cl,%ax
		jmp    _01f726_jump

	_01f71d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01f726_jump:
		mov    $0x000001,%cl
		mov    %eax,%edx
		mov    %ebx,%eax
		test   %ax,%ax
		js     _01f736_jump
		sar    %cl,%ax
		jmp    _01f73f_jump

	_01f736_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01f73f_jump:
		mov    %eax,%ebx

	_01f741_jump:
		movswl %bx,%ebx
		test   %ebx,%ebx
		jne    _01f774_jump
		cmpb   $0x000000,0x000004(%esp)
		je     _01f759_jump
		mov    $0x00001b,%eax
		jmp    _01f812_jump

	_01f759_jump:
		movswl %dx,%eax
		test   %eax,%eax
		je     _01f76a_jump
		mov    $0x000009,%eax
		jmp    _01f812_jump

	_01f76a_jump:
		mov    $0xffffffff,%eax
		jmp    _01f812_jump

	_01f774_jump:
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		cmpb   $0x000000,0x000004(%esp)
		je     _01f7d2_jump
		cmpb   $0x000000,(%esp)
		je     _01f7bc_jump
		cwtl   
		cmp    $0x0000ff,%eax
		jle    _01f7ad_jump
		mov    $0x00001b,%eax
		jmp    _01f812_jump

	_01f7ad_jump:
		mov    _094760_data(%eax),%al
		xor    %ah,%ah
		add    $0x00001b,%eax
		jmp    _01f812_jump

	_01f7bc_jump:
		cwtl   
		cmp    $0x0000ff,%eax
		jle    _01f7c8_jump
		xor    %eax,%eax
		jmp    _01f812_jump

	_01f7c8_jump:
		mov    _094760_data(%eax),%al
		xor    %ah,%ah
		jmp    _01f812_jump

	_01f7d2_jump:
		cmpb   $0x000000,(%esp)
		je     _01f7f6_jump
		cwtl   
		cmp    $0x0000ff,%eax
		jle    _01f7e7_jump
		mov    $0x000012,%eax
		jmp    _01f812_jump

	_01f7e7_jump:
		mov    _094760_data(%eax),%al
		xor    %ah,%ah
		add    $0x000012,%eax
		jmp    _01f812_jump

	_01f7f6_jump:
		cwtl   
		cmp    $0x0000ff,%eax
		jle    _01f805_jump
		mov    $0x000009,%eax
		jmp    _01f812_jump

	_01f805_jump:
		mov    _094760_data(%eax),%al
		xor    %ah,%ah
		add    $0x000009,%eax

	_01f812_jump:
		movswl %ax,%ebx
		movswl %di,%edx
		movswl %si,%eax
		call   _073214_func
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01f828_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x00000c(%esp),%edx
		push   %edx
		lea    0x000008(%esp),%edx
		lea    0x000004(%esp),%ecx
		push   %edx
		lea    0x000010(%esp),%ebx
		mov    $0x00000e,%edx
		call   _01d840_func
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    0x000006(%esp),%ebx
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000011,%eax
		add    %ebx,%eax
		cwtl   
		call   _01f6a0_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f87c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x00000c(%esp),%edx
		push   %edx
		lea    0x000008(%esp),%edx
		lea    0x000004(%esp),%ecx
		push   %edx
		lea    0x000010(%esp),%ebx
		mov    $0x00000e,%edx
		call   _01d840_func
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    0x000006(%esp),%ebx
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000011,%eax
		add    %ebx,%eax
		cwtl   
		call   _01f6a0_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f8d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x00000f,%edx
		mov    %esi,%eax
		call   _01d840_func
		mov    0x000006(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		mov    -0x000002(%esp),%ebx
		add    %edx,%eax
		sar    $0x000011,%ebx
		movswl %ax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		add    %ebx,%eax
		cwtl   
		call   _01f6a0_func
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x00000e,%edx
		mov    %esi,%eax
		call   _01d840_func
		mov    0x000006(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    0x00000a(%esp),%ebx
		movswl %ax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000011,%eax
		add    %ebx,%eax
		cwtl   
		call   _01f6a0_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f970_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0c1b44_data,%ebx
		mov    _0c1b84_data,%dl
		mov    0x000028(%eax),%ecx
		add    %ebx,%edx
		mov    0x000068(%eax),%al
		sub    %ecx,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		test   %edx,%edx
		setg   %al
		xor    %ah,%ah
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01fb14_switch:
		.long   _01fde4_case
		.long   _01fdd0_case
		.long   _01fe0e_case
		.long   _01fde4_case
		.long   _01fdd0_case

_01fb28_switch:
		.long   _01fe69_case
		.long   _01fe5c_case
		.long   _01ffab_case
		.long   _01fe83_case
		.long   _01fe76_case

_01fb3c_switch:
		.long   _01fbd2_case
		.long   _01fc56_case
		.long   _01fc56_case
		.long   _01fbf8_case
		.long   _01fca6_case
		.long   _01fca6_case
		.long   _01fd44_case
		.long   _01fdc4_case
		.long   _01fdc4_case
		.long   _01fd84_case
		.long   _01fdc4_case
		.long   _01fdc4_case
		.long   _01feaa_case
		.long   _01febf_case
		.long   _01fee8_case




_01fb78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		movzbw 0x00006c(%eax),%si
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		sete   %dl
		mov    %esi,%eax
		sub    $0x000002,%eax
		mov    %dl,%dh
		cmp    $0x00000e,%ax
		ja     _01ffab_case
		and    $0x00ffff,%eax
		jmp    *%cs:_01fb3c_switch(,%eax,4)

	_01fbd2_case:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x00000e,%eax
		jne    _01ffab_case
		test   %dl,%dl
		je     _01ffab_case
		mov    %ecx,%eax
		call   _01f8d0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fbf8_case:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000016,%eax
		jne    _01ffab_case
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _01fc29_jump
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fc29_jump:
		mov    $0x000001,%eax
		call   _064360_func
		cwtl   
		test   %eax,%eax
		jne    _01fd2a_jump

	_01fc3c_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fc56_case:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000013,%eax
		jne    _01ffab_case
		test   %dh,%dh
		je     _01ffab_case
		mov    _0c519c_data,%di
		inc    %edi
		movswl %si,%eax
		mov    %di,_0c519c_data
		cmp    $0x000004,%eax
		jne    _01fc8a_jump
		mov    %ecx,%eax
		call   _01f87c_func

	_01fc8a_jump:
		movswl %si,%eax
		cmp    $0x000003,%eax
		jne    _01ffab_case
		mov    %ecx,%eax
		call   _01f828_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fca6_case:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000014,%eax
		jne    _01ffab_case
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _01fd0a_jump
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fcd7_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _01d498_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fcec_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d498_func
		mov    %bx,_0c519c_data
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fd0a_jump:
		mov    _0c519c_data,%ax
		cmp    $0x000001,%ax
		jb     _01fd1e_jump
		jbe    _01fcd7_jump
		cmp    $0x000003,%ax
		je     _01fcec_jump

	_01fd1e_jump:
		movswl %si,%eax
		cmp    $0x000006,%eax
		jne    _01fc3c_jump

	_01fd2a_jump:
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fd44_case:
		mov    %ecx,%eax
		call   _01f970_func
		test   %ax,%ax
		je     _01fd6a_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fd6a_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fd84_case:
		mov    %ecx,%eax
		call   _01f970_func
		test   %ax,%ax
		je     _01fdaa_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fdaa_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fdc4_case:
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		cmp    $0x000014,%eax
		je     _01fdf6_jump
		jmp    _01fe16_jump

	_01fdd0_case:
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01fddc_jump
		neg    %eax

	_01fddc_jump:
		neg    %eax
		mov    %ax,0x000040(%ecx)
		jmp    _01fe0e_case

	_01fde4_case:
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01fdf0_jump
		neg    %eax

	_01fdf0_jump:
		mov    %ax,0x000040(%ecx)
		jmp    _01fe0e_case

	_01fdf6_jump:
		mov    %esi,%eax
		sub    $0x000009,%eax
		cmp    $0x000004,%ax
		ja     _01fe0e_case
		and    $0x00ffff,%eax
		jmp    *%cs:_01fb14_switch(,%eax,4)

	_01fe0e_case:
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_01fe16_jump:
		xor    %eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000068(%ecx),%al
		mov    0x000069(%ecx),%bl
		mov    %ax,(%esp)
		mov    %al,%dl
		mov    %ecx,%eax
		movzbw 0x000069(%ecx),%di
		call   _02eb40_func
		test   %ax,%ax
		je     _01ffab_case
		mov    -0x000002(%esp),%edx
		movswl %di,%ebx
		mov    %ecx,%eax
		sar    $0x000010,%edx
		call   _01d754_func
		test   %ax,%ax
		jne    _01fe90_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fe5c_case:
		movb   $0x000009,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fe69_case:
		movb   $0x00000a,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fe76_case:
		movb   $0x00000c,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fe83_case:
		movb   $0x00000d,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fe90_jump:
		sub    $0x000009,%esi
		cmp    $0x000004,%si
		ja     _01ffab_case
		xor    %eax,%eax
		mov    %si,%ax
		jmp    *%cs:_01fb28_switch(,%eax,4)

	_01feaa_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01febf_case:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x00001d,%eax
		jge    _01fed6_jump
		mov    $0xfffffffc,%eax
		jmp    _01fedb_jump

	_01fed6_jump:
		mov    $0xfffffff8,%eax

	_01fedb_jump:
		mov    %ax,0x000042(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fee8_case:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		movw   $0x00fff8,0x000042(%ecx)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _01ff12_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _01ff35_jump

	_01ff12_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_01ff35_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _01ffab_case
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _01ffab_case
		mov    0x000069(%ecx),%al
		mov    0x00002c(%ecx),%edx
		add    %eax,%edx
		mov    _0c247c_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jge    _01ffab_case
		mov    $_0c1b1c_data,%eax
		mov    0x000081(%ecx),%bh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    $0x000001,%edx
		mov    %bh,0x000081(%ecx)
		call   _071d94_func
		mov    %dx,_0c24ec_data

	_01ffab_case:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ffb4_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		jne    _01ffe3_jump
		xor    %edx,%edx
		mov    %dx,_0c519c_data
		mov    0x000081(%eax),%dl
		and    $0x0000f7,%dl
		mov    $0x000001,%ebx
		mov    %dl,0x000081(%eax)
		mov    %ebx,%edx
		call   _058bb4_func

	_01ffe3_jump:
		pop    %edx
		pop    %ebx
		ret    



_01ffe8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		movswl %dx,%eax
		cmp    $0x000002,%eax
		jne    _020056_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _01f970_func
		mov    0x00006c(%ebx),%dl
		mov    %eax,%ecx
		cmp    $0x000005,%edx
		je     _020023_jump
		cmp    $0x000006,%edx
		jne    _020011_jump
		cwtl   
		test   %eax,%eax
		je     _020023_jump

	_020011_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x000007,%eax
		jne    _020056_jump
		movswl %cx,%eax
		cmp    $0x000001,%eax
		jne    _020056_jump

	_020023_jump:
		mov    0x000076(%ebx),%dl
		dec    %dl
		mov    _0c1ec0_data,%eax
		mov    %dl,0x000076(%ebx)
		xor    %edx,%edx
		mov    0x000036(%eax),%bx
		mov    0x000068(%eax),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000038(%eax),%cx
		mov    0x000069(%eax),%dl
		call   _072f20_func
		add    %ecx,%edx
		movswl %bx,%eax
		movswl %dx,%edx
		call   _073614_func

	_020056_jump:
		pop    %ecx
		pop    %ebx
		ret    



_02005c_func:
		movw   $0x000028,_0c1b72_data
		call   _01f970_func
		test   %ax,%ax
		je     _020075_jump
		mov    $0x000001,%eax
		ret    

	_020075_jump:
		mov    $0xffffffff,%eax
		ret    



_020080_func:
		push   %ebx
		mov    %eax,%ebx
		movswl %dx,%eax
		cmp    $0x000006,%eax
		jne    _0200e5_jump
		mov    0x00004e(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _0200e5_jump
		mov    _0c1ec0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0200bb_jump
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d498_func
		mov    0x00003a(%ebx),%eax
		sar    $0x000010,%eax
		add    $0x000047,%eax
		jmp    _0200d0_jump

	_0200bb_jump:
		mov    $0x000005,%edx
		mov    %ebx,%eax
		call   _01d498_func
		mov    0x00003a(%ebx),%eax
		sar    $0x000010,%eax
		sub    $0x000055,%eax

	_0200d0_jump:
		mov    %eax,0x000028(%ebx)
		movw   $0x000000,0x000056(%ebx)
		movw   $0x0000ff,0x000050(%ebx)
		movb   $0x0000ff,0x00006b(%ebx)
		pop    %ebx
		ret    

	_0200e5_jump:
		movswl %dx,%eax
		cmp    $0x000001,%eax
		jle    _02010f_jump
		mov    _0c1ec0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _020103_jump
		mov    $0x000007,%edx
		jmp    _020108_jump

	_020103_jump:
		mov    $0x000006,%edx

	_020108_jump:
		mov    %ebx,%eax
		call   _01d498_func

	_02010f_jump:
		pop    %ebx
		ret    

_020114_switch:
		.long   _0202f7_case
		.long   _020209_case
		.long   _020239_case
		.long   _02026a_case
		.long   _02029b_case
		.long   _0202c9_case

_02012c_switch:
		.long   _0205de_case
		.long   _020510_case
		.long   _020579_case
		.long   _0205de_case
		.long   _0205de_case




_020140_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,(%esp)
		decw   0x000050(%eax)
		mov    0x00004e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020163_jump
		mov    (%esp),%eax
		movw   $0x000000,0x000050(%eax)

	_020163_jump:
		xor    %eax,%eax
		mov    _0ce902_data,%al
		cmp    $0x000003,%eax
		jne    _0203a1_jump
		mov    (%esp),%eax
		mov    _0c1b04_data,%esi
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    _0c1b08_data,%cx
		mov    %dl,0x000081(%eax)
		xor    %eax,%eax
		test   %cx,%cx
		jg     _0201b5_jump
		jmp    _0205de_case

	_0201a5_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %cx,%ax
		jge    _0205de_case

	_0201b5_jump:
		xor    %ebx,%ebx
		mov    0x000060(%esi),%bx
		cmp    $0x0000d3,%ebx
		jne    _0201a5_jump
		xor    %edi,%edi
		jmp    _02031f_jump

	_0201ca_jump:
		mov    $0x000004,%eax
		mov    $0x000002,%edx
		call   _064360_func
		sub    %eax,%edx
		mov    %dx,0x000040(%esi)
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _0201ef_jump
		movw   $0x000001,0x000040(%esi)

	_0201ef_jump:
		mov    $0x000003,%eax
		mov    $0xfffffffc,%edx
		call   _064360_func
		sub    %eax,%edx
		mov    %dx,0x000042(%esi)
		jmp    _020386_jump

	_020209_case:
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		movb   $0x00002b,0x000069(%esi)
		movb   $0x000019,0x000068(%esi)
		mov    0x000081(%esi),%al
		movb   $0x00001f,0x00006a(%esi)
		and    $0x0000f7,%al
		mov    %al,0x000081(%esi)
		jmp    _020318_jump

	_020239_case:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		movb   $0x000011,0x000069(%esi)
		movb   $0x00000c,0x000068(%esi)
		mov    0x000081(%esi),%ch
		movb   $0x000021,0x00006a(%esi)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%esi)
		jmp    _020318_jump

	_02026a_case:
		mov    $0x00000b,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		movb   $0x000007,0x000069(%esi)
		movb   $0x000007,0x000068(%esi)
		mov    0x000081(%esi),%cl
		movb   $0x000022,0x00006a(%esi)
		and    $0x0000f7,%cl
		mov    %cl,0x000081(%esi)
		jmp    _020318_jump

	_02029b_case:
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		movb   $0x00001c,0x000069(%esi)
		movb   $0x000011,0x000068(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x000020,0x00006a(%esi)
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%esi)
		jmp    _020318_jump

	_0202c9_case:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		movb   $0x000011,0x000069(%esi)
		movb   $0x00000c,0x000068(%esi)
		mov    0x000081(%esi),%bl
		movb   $0x000021,0x00006a(%esi)
		or     $0x000008,%bl
		mov    %bl,0x000081(%esi)
		jmp    _020318_jump

	_0202f7_case:
		mov    $0x000015,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    0x000081(%esi),%ah
		movb   $0x000025,0x00006a(%esi)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%esi)

	_020318_jump:
		add    $0x000084,%esi
		inc    %edi

	_02031f_jump:
		movswl %di,%ebp
		cmp    $0x000006,%ebp
		jge    _0205de_case
		lea    0x00000c(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    %ebp,%edx
		mov    0x000008(%esp),%eax
		call   _01d840_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000081(%esi),%dh
		mov    %eax,0x000028(%esi)
		or     $0x000004,%dh
		mov    0x00000e(%esp),%eax
		movl   $0x000001,0x000024(%esi)
		sar    $0x000010,%eax
		mov    %dh,0x000081(%esi)
		mov    %eax,0x00002c(%esi)
		test   %ebp,%ebp
		jne    _0201ca_jump
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)

	_020386_jump:
		movb   $0x000000,0x000071(%esi)
		movb   $0x000005,0x000072(%esi)
		cmp    $0x000005,%di
		ja     _020318_jump
		xor    %eax,%eax
		mov    %di,%ax
		jmp    *%cs:_020114_switch(,%eax,4)

	_0203a1_jump:
		mov    (%esp),%edx
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000007,%eax
		je     _0205de_case
		cmp    $0x000006,%eax
		je     _0205de_case
		cmp    $0x000003,%eax
		je     _0205de_case
		lea    0x00000c(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    0x000008(%esp),%eax
		call   _01d840_func
		push   $0x000020
		mov    0x000008(%esp),%ebx
		mov    0x000014(%esp),%ecx
		mov    0x00000c(%esp),%esi
		mov    0x000010(%esp),%edi
		mov    _0ce908_data,%eax
		push   $0x000020
		sar    $0x000010,%eax
		add    $0x000005,%ebx
		add    $0x000005,%ecx
		sub    $0x00000a,%esi
		sub    $0x00000a,%edi
		push   %eax
		mov    %bx,0x000010(%esp)
		mov    %cx,0x00001c(%esp)
		mov    %di,0x000018(%esp)
		mov    %si,0x000014(%esp)
		mov    0x000016(%esp),%ecx
		mov    0x000012(%esp),%ebx
		mov    _0ce906_data,%eax
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02aa7c_func
		test   %ax,%ax
		je     _02048f_jump
		xor    %eax,%eax
		mov    _0ce902_data,%al
		test   %eax,%eax
		jne    _02048f_jump
		movb   $0x000001,_0ce902_data
		mov    (%esp),%eax
		movw   $0x000004,0x000056(%eax)
		incw   _0ce8f4_data
		mov    _0ce8f2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jl     _020486_jump
		decw   _0ce8f4_data

	_020486_jump:
		xor    %ebx,%ebx
		mov    %bx,_0ce8f6_data

	_02048f_jump:
		mov    (%esp),%eax
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		mov    (%esp),%edx
		lea    0x000000(,%ebx,4),%eax
		mov    0x000004(%edx),%edx
		sub    %ebx,%eax
		mov    0x00000a(%edx,%eax,4),%ax
		mov    (%esp),%ebx
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebx),%dl
		cmp    %eax,%edx
		jne    _0204f0_jump
		xor    %eax,%edx
		mov    0x00006d(%ebx),%dl
		mov    0x00000c(%ebx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0204f0_jump
		mov    $0x000001,%al
		jmp    _0204f2_jump

	_0204f0_jump:
		xor    %al,%al

	_0204f2_jump:
		mov    (%esp),%edx
		mov    0x00006c(%edx),%ah
		sub    $0x000003,%ah
		cmp    $0x000004,%ah
		ja     _0205de_case
		xor    %edx,%edx
		mov    %ah,%dl
		jmp    *%cs:_02012c_switch(,%edx,4)

	_020510_case:
		test   %al,%al
		je     _0205de_case
		mov    (%esp),%eax
		incw   0x000056(%eax)
		mov    0x000054(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jge    _020553_jump
		mov    $0x000005,%edx
		mov    (%esp),%eax
		call   _01d498_func
		mov    (%esp),%eax
		mov    0x00003a(%eax),%eax
		sar    $0x000010,%eax
		mov    (%esp),%edx
		sub    $0x000055,%eax
		mov    %eax,0x000028(%edx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020553_jump:
		mov    $0x000006,%edx
		mov    (%esp),%eax
		call   _01d498_func
		mov    (%esp),%eax
		mov    0x00003a(%eax),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		mov    %eax,0x000028(%edx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020579_case:
		test   %al,%al
		je     _0205de_case
		mov    (%esp),%eax
		incw   0x000056(%eax)
		mov    0x000054(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jge    _0205b8_jump
		mov    $0x000004,%edx
		mov    (%esp),%eax
		call   _01d498_func
		mov    (%esp),%eax
		mov    0x00003a(%eax),%eax
		sar    $0x000010,%eax
		mov    (%esp),%edx
		add    $0x000047,%eax
		mov    %eax,0x000028(%edx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0205b8_jump:
		mov    $0x000007,%edx
		mov    (%esp),%eax
		call   _01d498_func
		mov    (%esp),%eax
		mov    0x00003a(%eax),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		mov    %eax,0x000028(%edx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0205de_case:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0205e8_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000040(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _020647_jump
		xor    %eax,%eax
		mov    0x00002c(%ebx),%edx
		mov    0x000069(%ebx),%al
		add    %edx,%eax
		cmp    $0x000108,%eax
		jle    _020647_jump
		mov    0x00003e(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,0x000040(%ebx)
		mov    0x000040(%ebx),%edx
		sar    $0x000010,%edx
		neg    %edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,0x000042(%ebx)
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02063d_jump
		movb   $0x0000ff,0x000072(%ebx)

	_02063d_jump:
		mov    $0x000005,%al
		mov    0x000071(%ebx),%ah
		sub    %ah,%al
		mov    %al,0x000071(%ebx)

	_020647_jump:
		pop    %edx
		pop    %ebx
		ret    



_02064c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    $0x000054,%eax
		call   _06b320_func
		mov    0x000028(%edx),%ebx
		movw   $0x00ffff,0x000040(%edx)
		add    $0x000014,%ebx
		mov    %edx,%eax
		mov    %ebx,0x000028(%edx)
		call   _074d30_func
		mov    0x000028(%edx),%ecx
		movw   $0x000001,0x000040(%edx)
		sub    $0x000028,%ecx
		mov    %edx,%eax
		mov    %ecx,0x000028(%edx)
		call   _074d30_func
		mov    0x000028(%edx),%esi
		add    $0x000014,%esi
		mov    %edx,%eax
		mov    %esi,0x000028(%edx)
		call   _072b98_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0206a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000032(%eax),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		mov    0x000050(%ecx),%ax
		cmp    $0x000002,%ax
		jb     _02076c_jump
		jbe    _0206e5_jump
		cmp    $0x000004,%ax
		je     _020717_jump
		jmp    _020775_jump

	_0206d0_jump:
		mov    $0x000003,%al
		mov    0x000071(%ecx),%bl
		movw   $0x00fffb,0x000042(%ecx)
		sub    %bl,%al
		mov    %al,0x000071(%ecx)
		jmp    _020775_jump

	_0206e5_jump:
		mov    $0x000003,%al
		mov    0x000071(%ecx),%dl
		movw   $0x00fffb,0x000042(%ecx)
		sub    %dl,%al
		mov    0x000081(%ecx),%dh
		mov    %al,0x000071(%ecx)
		test   $0x000008,%dh
		je     _020707_jump
		mov    $0xffffff7e,%eax
		jmp    _02070c_jump

	_020707_jump:
		mov    $0x000019,%eax

	_02070c_jump:
		add    0x000028(%ecx),%eax
		mov    %ax,_0ce8ee_data
		jmp    _020775_jump

	_020717_jump:
		mov    %ecx,%eax
		call   _02064c_func
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000034(%ecx),%dx
		cmp    _0c1b66_data,%dx
		jne    _020775_jump
		movw   $0x00ffff,_0c1b66_data
		mov    $0x000002,%ebx
		mov    $_0c1b1c_data,%eax
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d4a8_func
		mov    %ecx,%eax
		call   _024ec4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02076c_jump:
		test   %ax,%ax
		je     _0206d0_jump

	_020775_jump:
		mov    %ecx,%eax
		call   _024ec4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020780_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _0207af_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02079f_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _0208ac_jump

	_0207af_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x00007a,%edx
		jne    _02079f_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _02079f_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    _0ce8f6_data,%edx
		and    $0x0000ff,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _020802_jump
		mov    0x000081(%ecx),%bl
		or     $0x000008,%bl
		mov    $0xffffffec,%edx
		mov    %bl,0x000081(%ecx)
		jmp    _020816_jump

	_020802_jump:
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    $0x000104,%edx
		mov    %ah,0x000081(%ecx)

	_020816_jump:
		mov    %ecx,%eax
		call   _05622c_func
		movswl %dx,%eax
		movw   $0x00ffff,0x000046(%ecx)
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    0x000081(%ecx),%bh
		sub    $0x000014,%eax
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bh
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		mov    %bh,0x000081(%ecx)
		call   _01f584_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		mov    0x000081(%ecx),%al
		movb   $0x000002,0x00006d(%ecx)
		and    $0x0000bf,%al
		mov    %al,0x000081(%ecx)
		mov    0x000081(%ecx),%ah
		movb   $0x000002,0x00006c(%ecx)
		test   $0x000008,%ah
		je     _020887_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		jmp    _020890_jump

	_020887_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_020890_jump:
		call   _058bb4_func
		mov    %ecx,%eax
		call   _01dcec_func
		mov    _0ce8fa_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _0208ac_jump
		movb   $0x000001,0x000076(%ecx)

	_0208ac_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0208b4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %dx,0x000004(%esp)
		mov    _0c1b04_data,%esi
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _0208eb_jump
		jmp    _020bb0_jump

	_0208db_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _020bb0_jump

	_0208eb_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000061,%edx
		jne    _0208db_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _0208db_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _020911_jump
		andb   $0x0000df,0x000081(%esi)
		jmp    _020918_jump

	_020911_jump:
		orb    $0x000020,0x000081(%esi)

	_020918_jump:
		cmpw   $0x000000,0x000004(%esp)
		sete   %al
		lea    0x000010(%esp),%ecx
		xor    %ah,%ah
		mov    0x000081(%esi),%bl
		mov    %eax,%edx
		and    $0x0000f7,%bl
		mov    %esp,%eax
		add    $0x000008,%edx
		mov    %bl,0x000081(%esi)
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		movswl %dx,%edx
		mov    %edi,%eax
		call   _01d840_func
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    $0x000001,%edx
		jne    _0209e2_jump
		mov    0x00000a(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000006(%esp),%edx
		sar    $0x000011,%edx
		mov    0x000081(%edi),%bl
		add    %eax,%edx
		test   $0x000008,%bl
		je     _02098c_jump
		mov    $0x000040,%eax
		jmp    _020991_jump

	_02098c_jump:
		mov    $0xffffffc0,%eax

	_020991_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000028,%eax
		mov    %eax,0x00002c(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _0209b3_jump
		mov    $0x00000c,%eax
		jmp    _0209b8_jump

	_0209b3_jump:
		mov    $0xfffffff4,%eax

	_0209b8_jump:
		movw   $0x000000,0x000042(%esi)
		mov    %ax,0x000040(%esi)
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _020b2d_jump

	_0209e2_jump:
		test   %edx,%edx
		jne    _020a6b_jump
		mov    0x00000a(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000006(%esp),%edx
		sar    $0x000011,%edx
		mov    0x000081(%edi),%ch
		add    %eax,%edx
		test   $0x000008,%ch
		je     _020a15_jump
		mov    $0x000009,%eax
		jmp    _020a1a_jump

	_020a15_jump:
		mov    $0xfffffff7,%eax

	_020a1a_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000028,%eax
		mov    %eax,0x00002c(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _020a3c_jump
		mov    $0x000002,%eax
		jmp    _020a41_jump

	_020a3c_jump:
		mov    $0xfffffffe,%eax

	_020a41_jump:
		movw   $0x00fffb,0x000042(%esi)
		mov    %ax,0x000040(%esi)
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _020b2d_jump

	_020a6b_jump:
		cmp    $0x000003,%edx
		jne    _020aa1_jump
		testb  $0x000008,0x000081(%edi)
		je     _020a80_jump
		mov    $0x000078,%eax
		jmp    _020a85_jump

	_020a80_jump:
		mov    $0xffffffdc,%eax

	_020a85_jump:
		mov    0x000028(%edi),%edx
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00002c(%edi),%edx
		sub    $0x0000b9,%edx
		movw   $0x000004,0x000042(%esi)
		jmp    _020b24_jump

	_020aa1_jump:
		cmp    $0x00000a,%edx
		jge    _020acc_jump
		mov    _0c1b44_data,%eax
		mov    %eax,0x000028(%esi)
		cmp    $0x000028,%eax
		jge    _020aba_jump
		movl   $0x000028,0x000028(%esi)

	_020aba_jump:
		cmpl   $0x0000c8,0x000028(%esi)
		jle    _020b15_jump
		movl   $0x0000c8,0x000028(%esi)
		jmp    _020b15_jump

	_020acc_jump:
		testb  $0x000008,0x000081(%edi)
		je     _020af8_jump
		xor    %eax,%eax
		mov    _0ce90c_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		shl    $0x000003,%edx
		add    %eax,%edx
		mov    $0x0000f0,%eax
		add    %edx,%edx
		sub    %edx,%eax
		mov    %eax,0x000028(%esi)
		jmp    _020b15_jump

	_020af8_jump:
		xor    %eax,%eax
		mov    _0ce90c_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		shl    $0x000003,%edx
		add    %eax,%edx
		add    %edx,%edx
		sub    $0x000014,%edx
		mov    %edx,0x000028(%esi)

	_020b15_jump:
		mov    0x00002c(%edi),%edx
		sub    $0x0000c8,%edx
		movw   $0x000000,0x000042(%esi)

	_020b24_jump:
		mov    %edx,0x00002c(%esi)
		movw   $0x000000,0x000040(%esi)

	_020b2d_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		movw   $0x000026,0x000056(%esi)
		cmp    $0x000003,%eax
		je     _020b45_jump
		movb   $0x00000a,0x000072(%esi)
		jmp    _020b49_jump

	_020b45_jump:
		movb   $0x000007,0x000072(%esi)

	_020b49_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _020b58_jump
		movb   $0x000003,0x000072(%esi)

	_020b58_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		movb   $0x000002,0x00006d(%esi)
		mov    %ebx,%edx
		movb   $0x000006,0x00006c(%esi)
		call   _058bb4_func
		mov    %esi,%eax
		call   _01dcec_func
		orb    $0x000004,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f584_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		movb   $0x000000,0x000071(%esi)
		cmp    $0x00000a,%eax
		jge    _020baa_jump
		mov    0x000004(%esp),%eax
		mov    %ax,0x000050(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_020baa_jump:
		movw   $0x000004,0x000050(%esi)

	_020bb0_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_020bb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _020be3_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020bd3_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _020c7a_jump

	_020be3_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x000061,%edx
		jne    _020bd3_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _020bd3_jump
		movl   $0xffffffd8,0x000028(%ecx)
		movl   $0x0000a0,0x00002c(%ecx)
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		mov    $0x000001,%ebx
		mov    0x000028(%ecx),%ax
		movw   $0x000026,0x000056(%ecx)
		add    $0x000019,%eax
		movb   $0x000003,0x000072(%ecx)
		mov    %ax,_0ce8ee_data
		mov    0x000081(%ecx),%ah
		movb   $0x000002,0x00006d(%ecx)
		and    $0x0000f7,%ah
		mov    %ebx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movb   $0x000006,0x00006c(%ecx)
		call   _058bb4_func
		mov    %ecx,%eax
		call   _01dcec_func
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000024,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f584_func
		movb   $0x000000,0x000071(%ecx)
		movw   $0x000002,0x000050(%ecx)

	_020c7a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020c80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		call   _01dcec_func
		movl   $0x000000,0x000024(%edx)
		mov    $0x00000a,%bl
		movw   $0x000000,0x000050(%edx)
		mov    $0x000001,%cl
		mov    0x000081(%edx),%ah
		movb   $0x00000a,0x000072(%edx)
		xor    %esi,%esi
		or     $0x000004,%ah
		mov    %bl,_0c13b1_data
		mov    %cl,_0ce90c_data
		mov    %si,_0ce8f8_data
		mov    %si,_0c25c6_data
		xor    %ebx,%ebx
		mov    %ah,0x000081(%edx)
		mov    $0xffffffff,%eax
		mov    %bx,_0ce8f0_data
		mov    %bx,_0ce8f4_data
		mov    %bx,_0ce8f6_data
		mov    %bx,_0ce8ec_data
		mov    %bx,_0ce8fe_data
		xor    %dl,%dl
		mov    %bx,_0ce906_data
		mov    %dl,_0c13af_data
		mov    %dl,_0c13ae_data
		mov    %ax,_0ce900_data
		xor    %bh,%bh
		mov    $0x00270f,%edx
		mov    %bh,_0ce902_data
		mov    %dx,_0ce8ee_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020d2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpw   $0x000000,_0ce8f0_data
		je     _020d9c_jump
		call   _02064c_func
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000034(%ecx),%bx
		cmp    _0c1b66_data,%bx
		jne    _020d88_jump
		mov    $0xffffffff,%esi
		mov    $0x000002,%ebx
		mov    $_0c1b1c_data,%eax
		mov    %si,_0c1b66_data
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d4a8_func

	_020d88_jump:
		xor    %edi,%edi
		mov    $0x00270f,%eax
		mov    %di,_0ce8f0_data
		mov    %ax,_0ce8ee_data

	_020d9c_jump:
		mov    0x00004e(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _020dc7_jump
		decw   0x000056(%ecx)
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _020dc7_jump
		mov    0x000081(%ecx),%dl
		mov    %eax,0x000024(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)

	_020dc7_jump:
		mov    0x00003e(%ecx),%edx
		sar    $0x000010,%edx
		mov    $0x000014,%eax
		test   %edx,%edx
		jge    _020ddb_jump
		mov    $0xffffffec,%eax

	_020ddb_jump:
		xor    %edx,%edx
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%dl
		cwtl   
		add    %ebx,%edx
		mov    0x00002c(%ecx),%ebx
		add    %edx,%eax
		add    $0x000028,%ebx
		mov    _0c24b2_data,%edx
		sar    $0x000004,%ebx
		sar    $0x000010,%edx
		imul   %ebx,%edx
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000010,_092204_data(%eax)
		jne    _020f6e_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020e30_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020e4c_jump
		neg    %eax

	_020e4c_jump:
		cmp    $0x00000c,%eax
		jne    _020e77_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _020e62_jump
		mov    $0xfffffff3,%eax
		jmp    _020e67_jump

	_020e62_jump:
		mov    $0x00000d,%eax

	_020e67_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020e77_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020e83_jump
		neg    %eax

	_020e83_jump:
		cmp    $0x00000d,%eax
		jne    _020eae_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _020e99_jump
		mov    $0xfffffff2,%eax
		jmp    _020e9e_jump

	_020e99_jump:
		mov    $0x00000e,%eax

	_020e9e_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020eae_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020eba_jump
		neg    %eax

	_020eba_jump:
		cmp    $0x00000e,%eax
		jne    _020ee5_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _020ed0_jump
		mov    $0xfffffff1,%eax
		jmp    _020ed5_jump

	_020ed0_jump:
		mov    $0x00000f,%eax

	_020ed5_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020ee5_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020ef1_jump
		neg    %eax

	_020ef1_jump:
		cmp    $0x00000f,%eax
		jne    _020f81_jump
		mov    %ecx,%eax
		call   _02064c_func
		mov    0x000081(%ecx),%bl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		mov    _0c1b66_data,%ax
		cmp    0x000034(%ecx),%ax
		jne    _020f81_jump
		mov    $0xffffffff,%esi
		mov    $0x000002,%ebx
		mov    $_0c1b1c_data,%eax
		mov    %si,_0c1b66_data
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d4a8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020f4c_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000002,0x000050(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020f6e_jump:
		mov    0x000050(%ecx),%ax
		test   %ax,%ax
		jbe    _020f4c_jump
		cmp    $0x000001,%ax
		je     _020e30_jump

	_020f81_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020f88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0c1b04_data,%esi
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _020fbb_jump
		jmp    _0210e5_jump

	_020fab_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _0210e5_jump

	_020fbb_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000079,%edx
		jne    _020fab_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _020fab_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		movw   $0x000000,0x000042(%esi)
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _02101a_jump
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbw 0x000001(%edx,%eax,8),%ax
		jmp    _021033_jump

	_02101a_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbw (%edx,%eax,8),%ax

	_021033_jump:
		mov    %ax,0x000040(%esi)
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x00000a,%edx
		mov    %edi,%eax
		call   _01d840_func
		testb  $0x000008,0x000081(%edi)
		je     _021063_jump
		mov    $0x000010,%eax
		jmp    _021068_jump

	_021063_jump:
		mov    $0xfffffff0,%eax

	_021068_jump:
		mov    0x000006(%esp),%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _058bb4_func
		mov    %esi,%eax
		call   _01dcec_func
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f584_func
		mov    %esi,%eax
		call   _072b98_func

	_0210e5_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0210f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0c1b04_data,%esi
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _021123_jump
		jmp    _02130c_jump

	_021113_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _02130c_jump

	_021123_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000087,%edx
		jne    _021113_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _021113_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		movw   $0x000000,0x000042(%esi)
		test   %edx,%edx
		jne    _021174_jump
		movw   $0x000007,0x000040(%esi)
		jmp    _02117a_jump

	_021174_jump:
		movw   $0x00fff9,0x000040(%esi)

	_02117a_jump:
		lea    0x000004(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %edx
		lea    0x000010(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000003,%edx
		call   _01d840_func
		testb  $0x000008,0x000081(%edi)
		jne    _0211a8_jump
		xor    %edx,%edx
		mov    %dx,0x00000c(%esp)

	_0211a8_jump:
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x000006(%esp),%edx
		mov    0x000028(%esi),%ax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%esi)
		sub    $0x000008,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _058bb4_func
		mov    %esi,%eax
		call   _01dcec_func
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f584_func
		mov    0x000105(%esi),%bh
		mov    0x000081(%edi),%al
		and    $0x0000f7,%bh
		and    $0x000008,%al
		mov    %bh,%cl
		or     %al,%cl
		mov    %cl,0x000105(%esi)
		mov    0x000105(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		add    $0x000084,%esi
		mov    %al,%dl
		movw   $0x000000,0x000042(%esi)
		test   %edx,%edx
		jne    _021262_jump
		movw   $0x000007,0x000040(%esi)
		jmp    _021268_jump

	_021262_jump:
		movw   $0x00fff9,0x000040(%esi)

	_021268_jump:
		lea    0x000004(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %edx
		lea    0x000010(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000002,%edx
		call   _01d840_func
		testb  $0x000008,0x000081(%edi)
		jne    _021296_jump
		xor    %ebx,%ebx
		mov    %bx,0x00000c(%esp)

	_021296_jump:
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x000006(%esp),%edx
		mov    0x000028(%esi),%ax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%esi)
		sub    $0x000008,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _058bb4_func
		mov    %esi,%eax
		call   _01dcec_func
		orb    $0x000004,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f584_func
		mov    %esi,%eax
		call   _072b98_func

	_02130c_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi

	_021311_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_021334_switch:
		.long   _021372_case
		.long   _02138b_case
		.long   _0213a4_case
		.long   _0213be_case
		.long   _0213d8_case
		.long   _0213f1_case
		.long   _02140a_case
		.long   _021434_case




_021354_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0ce8f2_data,%ax
		cmp    $0x000007,%ax
		ja     _021311_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_021334_switch(,%eax,4)

	_021372_case:
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movb   $0x000001,_0c13af_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02138b_case:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movb   $0x000002,_0c13af_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0213a4_case:
		mov    $0x000006,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000003,%ch
		call   _01d4a8_func
		mov    %ch,_0c13af_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0213be_case:
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000004,%cl
		call   _01d4a8_func
		mov    %cl,_0c13af_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0213d8_case:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movb   $0x000005,_0c13af_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0213f1_case:
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movb   $0x00000c,_0c13af_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02140a_case:
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		movb   $0x00000b,_0c13af_data
		mov    $0x000001,%dh
		movw   $0x000023,0x000056(%ecx)
		mov    %dh,_0ce90c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021434_case:
		mov    $0x000016,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movb   $0x00000d,_0c13af_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021450_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		incw   _0ce8f6_data
		mov    _0ce8f4_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0x000007,%ebx
		jge    _021490_jump
		mov    _0ce8f2_data,%ecx
		sar    $0x000010,%ecx
		lea    0x000000(,%ecx,8),%eax
		shl    $0x000002,%ebx
		sub    %ecx,%eax
		mov    _095bbc_data(%ebx,%eax,4),%ax
		mov    %ax,_0ce8f2_data
		jmp    _021499_jump

	_021490_jump:
		movw   $0x0000ff,_0ce8f2_data

	_021499_jump:
		mov    _0ce8f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000ff,%eax
		jne    _0214d1_jump
		mov    _0ce8f2_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		xor    %esi,%esi
		mov    _095bbc_data(,%eax,4),%ax
		mov    %si,_0ce8f6_data
		mov    %ax,_0ce8f2_data

	_0214d1_jump:
		mov    _0ce8f2_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		lea    0x000000(,%eax,4),%ebx
		mov    _0ce8f4_data,%eax
		sar    $0x000010,%eax
		mov    _095bbe_data(%ebx,%eax,4),%al
		mov    %al,_0c13b1_data
		mov    %edx,%eax
		call   _021354_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02150c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    _0c13b1_data,%al
		test   %eax,%eax
		je     _021540_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _058bb4_func
		movb   $0x000006,_0c13af_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021540_jump:
		mov    %ecx,%eax
		call   _021450_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02154c_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		movw   $0x000000,0x000042(%eax)
		mov    $0x000006,%edx
		movw   $0x000000,0x000040(%eax)
		call   _024ec4_func
		mov    %ebx,%eax
		call   _01d498_func
		mov    %ebx,%eax
		mov    $0x000001,%edx
		call   _04d170_func
		mov    %dx,_0c25c8_data
		pop    %edx
		pop    %ebx
		ret    

_021584_switch:
		.long   _0218de_case
		.long   _02194c_case
		.long   _0219c9_case
		.long   _021b0c_case
		.long   _021b88_case
		.long   _021bf8_case
		.long   _021c78_case
		.long   _021ca6_case
		.long   _021d6e_case
		.long   _021df9_case
		.long   _021e9f_case
		.long   _021f82_case
		.long   _021fa5_case
		.long   _022041_case




_0215bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		movb   $0x000001,_0c25b1_data
		mov    _0ce8f6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _021606_jump
		decw   _0ce8fa_data
		mov    _0ce8f8_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _021606_jump
		mov    $0x000032,%ebx
		mov    %esi,%eax
		mov    %bx,_0ce8fa_data
		call   _020780_func
		decw   _0ce8f8_data

	_021606_jump:
		mov    %esp,%eax
		mov    $_0ce90a_data,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $_0ce908_data,%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %esi,%eax
		call   _01d840_func
		mov    0x000028(%esi),%ax
		mov    %eax,0x000004(%esp)
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %eax,(%esp)
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _02168d_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _02168d_jump
		movb   $0x000001,_0c13ad_data
		jmp    _021695_jump

	_02168d_jump:
		xor    %dl,%dl
		mov    %dl,_0c13ad_data

	_021695_jump:
		xor    %eax,%eax
		mov    _0ce902_data,%al
		cmp    $0x000002,%eax
		jne    _0216f8_jump
		cmpb   $0x000000,_0c13ad_data
		je     _0216f8_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000077(%esi),%al
		mov    0x000076(%esi),%dl
		dec    %eax
		cmp    %eax,%edx
		jne    _0216d1_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _058bb4_func
		movb   $0x000007,_0c13af_data

	_0216d1_jump:
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0ce904_data,%bl
		mov    _0ce903_data,%dl
		mov    $0x000001,%cl
		call   _01d4a8_func
		mov    _0ce906_data,%al
		mov    %cl,_0c13b1_data
		mov    %al,0x000070(%esi)

	_0216f8_jump:
		xor    %eax,%eax
		mov    _0ce902_data,%al
		cmp    $0x000001,%eax
		jne    _021788_jump
		mov    0x00006d(%esi),%al
		mov    $0x000009,%ebx
		mov    %al,_0ce903_data
		mov    0x00006c(%esi),%al
		xor    %edx,%edx
		mov    %al,_0ce904_data
		mov    %esi,%eax
		mov    $0x000002,%ch
		call   _01d4a8_func
		xor    %al,%al
		mov    %ch,_0ce902_data
		mov    %al,_0c13ad_data
		mov    0x000076(%esi),%ah
		movw   $0x000000,0x000040(%esi)
		dec    %ah
		mov    %ah,0x000076(%esi)
		xor    %ah,%ah
		mov    0x000070(%esi),%al
		mov    %ax,_0ce906_data
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    $0x000001,%eax
		jge    _021788_jump
		mov    $0x000003,%dl
		mov    $0x000014,%ebx
		mov    %esi,%eax
		mov    %dl,_0ce902_data
		xor    %edx,%edx
		mov    $0x0001a4,%edi
		call   _01d4a8_func
		movw   $0x000000,0x000040(%esi)
		mov    $0x000001,%dh
		mov    %di,_0ce906_data
		mov    %dh,_0c2571_data

	_021788_jump:
		xor    %eax,%eax
		mov    _0ce902_data,%al
		cmp    $0x000003,%eax
		jne    _022118_jump
		decw   _0ce906_data
		mov    _0ce904_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jge    _022150_jump
		movb   $0x000001,_0c2570_data
		mov    _0c32ec_data,%bh
		mov    $0x0003e7,%edx
		or     $0x000008,%bh
		mov    %dx,_0ce906_data
		mov    %bh,_0c32ec_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0217db_jump:
		andb   $0x0000f7,0x000081(%esi)

	_0217e2_jump:
		xor    %eax,%eax
		mov    0x000070(%esi),%al
		cmp    $0x000001,%eax
		jne    _0217f3_jump
		orb    $0x000008,0x000081(%esi)

	_0217f3_jump:
		mov    %esi,%eax
		call   _04d2c4_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _024568_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092204_data(%eax)
		je     _02184d_jump
		mov    0x000081(%esi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    $0x000006,%edx
		mov    %bh,(%eax)
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000008,%cl
		call   _058bb4_func
		mov    %cl,_0c13af_data

	_02184d_jump:
		xor    %eax,%eax
		mov    _0c13af_data,%al
		cmp    $0x000007,%eax
		jne    _0218d2_jump
		testb  $0x000008,0x000081(%esi)
		je     _02186d_jump
		mov    $0x00000a,%eax
		jmp    _021872_jump

	_02186d_jump:
		mov    $0xfffffff6,%eax

	_021872_jump:
		mov    _0ce8ec_data,%edx
		sar    $0x000010,%edx
		add    $0x000004,%edx
		add    %edx,%eax
		cmp    0x000028(%esi),%eax
		jle    _0218d2_jump
		testb  $0x000008,0x000081(%esi)
		je     _021895_jump
		mov    $0x00000a,%eax
		jmp    _02189a_jump

	_021895_jump:
		mov    $0xfffffff6,%eax

	_02189a_jump:
		mov    _0ce8ec_data,%edx
		sar    $0x000010,%edx
		sub    $0x000004,%edx
		mov    0x000028(%esi),%ebx
		add    %edx,%eax
		cmp    %ebx,%eax
		jge    _0218d2_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _058bb4_func
		movb   $0x000009,_0c13af_data

	_0218d2_jump:
		mov    %esi,%eax
		call   _024ba8_func
		jmp    _022133_jump

	_0218de_case:
		cmpb   $0x000000,_0ce90c_data
		je     _0218fc_jump
		mov    $0x000001,%bl
		call   _020bb8_func
		mov    %bl,_0c13ae_data
		xor    %bh,%bh
		mov    %bh,_0ce90c_data

	_0218fc_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _022133_jump
		cmpb   $0x000000,_0c13ae_data
		je     _022133_jump
		movb   $0x000000,0x00006b(%esi)
		mov    _095bbe_data,%al
		xor    %ecx,%ecx
		mov    %al,_0c13b1_data
		mov    _095bbc_data,%ax
		mov    %cx,_0ce8f4_data
		mov    %ax,_0ce8f2_data
		mov    %esi,%eax
		mov    %cx,_0ce8f6_data
		call   _021354_func
		jmp    _022133_jump

	_02194c_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000004,%eax
		jne    _0219b0_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x00000e,%eax
		jne    _0219b0_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0219b0_jump
		mov    _0c25c4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _0219b0_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		mov    %bx,_0c25c6_data
		call   _0208b4_func

	_0219b0_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _022133_jump
		mov    %esi,%eax
		call   _02150c_func
		jmp    _022133_jump

	_0219c9_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000b,%eax
		jne    _021a15_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000017,%eax
		jne    _021a15_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _021a15_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _0208b4_func

	_021a15_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _021aa5_jump
		xor    %edx,%edx
		mov    0x00006b(%esi),%dl
		cmp    $0x00000e,%edx
		jne    _021aa5_jump
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%esi),%edx
		mov    (%edx,%ebx,1),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _021aa5_jump
		mov    _0c25c4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _021aa5_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    %dx,_0c25c6_data
		mov    $0x000003,%edx
		call   _0208b4_func
		mov    _0ce8fa_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _021a92_jump
		mov    $0x000003,%edx
		jmp    _021a97_jump

	_021a92_jump:
		mov    $0x000001,%edx

	_021a97_jump:
		xor    %eax,%eax
		mov    _0c13b1_data,%al
		add    %edx,%eax
		mov    %al,_0c13b1_data

	_021aa5_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%eax
		jne    _021ade_jump
		cmpb   $0x000000,_0c13ad_data
		je     _021ade_jump
		mov    _0c13b1_data,%ch
		xor    %eax,%eax
		dec    %ch
		mov    %ch,%al
		mov    %ch,_0c13b1_data
		test   %eax,%eax
		je     _021ade_jump
		mov    $0x00000a,%edx
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01d498_func

	_021ade_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000b,%eax
		jne    _022133_jump
		cmpb   $0x000000,_0c13ad_data
		je     _022133_jump
		mov    $0x00000b,%ah
		movw   $0x000023,0x000056(%esi)
		mov    %ah,_0c13af_data
		jmp    _022133_jump

	_021b0c_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000006,%eax
		jne    _021b6f_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000040,%eax
		jne    _021b6f_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _021b6f_jump
		mov    _0ce8fa_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		setne  %al
		and    $0x0000ff,%eax
		add    $0x000003,%eax
		mov    %ax,_0ce8f8_data
		xor    %eax,%eax
		mov    %ax,_0ce8fa_data

	_021b6f_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _022133_jump
		mov    %esi,%eax
		call   _02150c_func
		jmp    _022133_jump

	_021b88_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000007,%eax
		jne    _021bdf_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x00002c,%eax
		jne    _021bdf_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _021bdf_jump
		mov    %esi,%eax
		call   _0210f0_func
		mov    0x000032(%esi),%edx
		mov    $0x000072,%eax
		sar    $0x000010,%edx
		call   _06ac04_func

	_021bdf_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _022133_jump
		mov    %esi,%eax
		call   _02150c_func
		jmp    _022133_jump

	_021bf8_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _021c4f_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000015,%eax
		jne    _021c4f_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _021c4f_jump
		mov    %esi,%eax
		call   _020f88_func
		mov    0x000032(%esi),%edx
		mov    $0x000072,%eax
		sar    $0x000010,%edx
		call   _06ac04_func

	_021c4f_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _022133_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01d498_func
		movb   $0x00000a,_0c13af_data
		jmp    _022133_jump

	_021c78_case:
		cmpb   $0x000000,_0c13ad_data
		je     _022133_jump
		decb   _0c13b1_data
		xor    %eax,%eax
		mov    _0c13b1_data,%al
		test   %eax,%eax
		jne    _022133_jump
		mov    %esi,%eax
		call   _021450_func
		jmp    _022133_jump

	_021ca6_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000008,%eax
		jne    _021cf4_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x00000e,%eax
		jne    _021cf4_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _021cf4_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _0208b4_func
		jmp    _022133_jump

	_021cf4_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _022133_jump
		mov    _0c13b1_data,%cl
		xor    %eax,%eax
		dec    %cl
		mov    %cl,%al
		mov    %cl,_0c13b1_data
		test   %eax,%eax
		jne    _021d5d_jump
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		testb  $0x000008,0x000081(%esi)
		je     _021d47_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _058bb4_func
		jmp    _022133_jump

	_021d47_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _058bb4_func
		jmp    _022133_jump

	_021d5d_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d498_func
		jmp    _022133_jump

	_021d6e_case:
		cmpb   $0x000000,_0c13ad_data
		je     _022133_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000009,%eax
		je     _022133_jump
		cmpb   $0x000000,_0ce90c_data
		jne    _021de5_jump
		mov    _0ce8f2_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		mov    _0ce8f2_data,%ebx
		mov    _095bbe_data(,%eax,4),%al
		sar    $0x000010,%ebx
		mov    %al,_0c13b1_data
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		mov    _095bbc_data(,%eax,4),%ax
		xor    %edi,%edi
		mov    %ax,_0ce8f2_data
		mov    %esi,%eax
		mov    %di,_0ce8f6_data
		call   _021354_func
		jmp    _022133_jump

	_021de5_jump:
		mov    %esi,%eax
		xor    %bl,%bl
		call   _021450_func
		mov    %bl,_0ce90c_data
		jmp    _022133_jump

	_021df9_case:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000014,%eax
		jne    _021e40_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c2498_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _021e40_jump
		cmp    $0x000009,%eax
		je     _021e40_jump
		movw   $0x000001,_0ce8f0_data

	_021e40_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _022133_jump
		xor    %eax,%eax
		mov    _0ce902_data,%al
		cmp    $0x000002,%eax
		je     _022133_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		testb  $0x000008,0x000081(%esi)
		je     _021e80_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		jmp    _021e8a_jump

	_021e80_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx

	_021e8a_jump:
		mov    %esi,%eax
		call   _058bb4_func
		xor    %esi,%esi
		mov    %si,_0ce8f0_data
		jmp    _022133_jump

	_021e9f_case:
		cmpb   $0x000000,_0c13ad_data
		je     _022133_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		movb   $0x000000,0x00006b(%esi)
		call   _01d4a8_func
		testb  $0x000008,0x000081(%esi)
		je     _021d47_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _058bb4_func
		jmp    _022133_jump

	_021ee1_jump:
		decw   0x000056(%esi)
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jle    _021f1a_jump
		movw   $0x00fff8,0x000042(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x000000,0x000071(%esi)
		test   $0x000008,%bh
		je     _021f0c_jump
		mov    $0x000004,%eax
		jmp    _021f11_jump

	_021f0c_jump:
		mov    $0xfffffffc,%eax

	_021f11_jump:
		mov    %ax,0x000040(%esi)
		jmp    _022133_jump

	_021f1a_jump:
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _01d498_func
		testb  $0x000008,0x000081(%esi)
		je     _021f36_jump
		mov    $0x000002,%eax
		jmp    _021f3b_jump

	_021f36_jump:
		mov    $0xfffffffe,%eax

	_021f3b_jump:
		mov    %ax,0x000040(%esi)
		jmp    _022133_jump

	_021f44_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _022133_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		testb  $0x000008,0x000081(%esi)
		je     _021d47_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _058bb4_func
		jmp    _022133_jump

	_021f82_case:
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%al
		jb     _021f98_jump
		jbe    _021ee1_jump
		cmp    $0x000006,%al
		je     _021f44_jump
		jmp    _022133_jump

	_021f98_jump:
		test   %al,%al
		je     _021ee1_jump
		jmp    _022133_jump

	_021fa5_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000004,%eax
		jne    _022010_jump
		xor    %edx,%edx
		mov    0x00006b(%esi),%dl
		cmp    $0x00000e,%edx
		jne    _022010_jump
		xor    %edx,%edx
		mov    0x00000c(%esi),%ebx
		mov    0x00006d(%esi),%dl
		mov    (%ebx,%edx,4),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _022010_jump
		mov    _0c25c4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _022010_jump
		xor    %eax,%eax
		mov    _0ce90c_data,%al
		mov    $0x000001,%edx
		add    $0x00000a,%eax
		mov    %dx,_0c25c6_data
		movswl %ax,%edx
		mov    %esi,%eax
		call   _0208b4_func
		incb   _0ce90c_data

	_022010_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _022133_jump
		xor    %eax,%eax
		mov    _0ce90c_data,%al
		cmp    $0x000003,%eax
		jne    _022133_jump
		xor    %ah,%ah
		mov    %ah,_0ce90c_data
		mov    %esi,%eax
		call   _02150c_func
		jmp    _022133_jump

	_022041_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000016,%eax
		jne    _022133_jump
		xor    %edx,%edx
		mov    0x00006b(%esi),%dl
		cmp    $0x00003f,%edx
		jne    _022088_jump
		xor    %edx,%edx
		mov    0x00000c(%esi),%ebx
		mov    0x00006d(%esi),%dl
		mov    (%ebx,%edx,4),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _022088_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _0208b4_func

	_022088_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x00000e,%eax
		jne    _0220e1_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0220e1_jump
		mov    _0c25c4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _0220e1_jump
		mov    $0x000001,%eax
		mov    $0x000003,%edx
		mov    %ax,_0c25c6_data
		mov    %esi,%eax
		call   _0208b4_func

	_0220e1_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _022133_jump
		mov    $0x00000b,%bh
		mov    $0x000001,%cl
		movw   $0x000023,0x000056(%esi)
		mov    %bh,_0c13af_data
		mov    %cl,_0ce90c_data
		jmp    _022133_jump

	_022102_jump:
		mov    _0c13af_data,%al
		cmp    $0x00000d,%al
		ja     _022133_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_021584_switch(,%eax,4)

	_022118_jump:
		mov    0x000070(%esi),%al
		cmp    $0x000001,%al
		jb     _02212b_jump
		jbe    _0217e2_jump
		cmp    $0x000002,%al
		je     _022102_jump
		jmp    _022133_jump

	_02212b_jump:
		test   %al,%al
		je     _0217db_jump

	_022133_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _022150_jump
		xor    %eax,%eax
		mov    _0ce902_data,%al
		cmp    $0x000002,%eax
		jne    _022150_jump
		xor    %dh,%dh
		mov    %dh,_0ce902_data

	_022150_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02215c_func:
		push   %ebx
		mov    %eax,%ebx
		movswl %dx,%eax
		cmp    $0x000009,%eax
		jne    _022187_jump
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d498_func
		mov    $0x000007,%ah
		mov    $0x000002,%dl
		movb   $0x000000,0x00006b(%ebx)
		mov    %ah,_0c13af_data
		mov    %dl,_0c13b1_data

	_022187_jump:
		pop    %ebx
		ret    

_02218c_switch:
		.long   _022411_case
		.long   _022533_case
		.long   _0225c5_case
		.long   _022664_case
		.long   _02295b_case
		.long   _022b45_case




_0221a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		movzbw 0x000068(%eax),%di
		mov    0x000028(%eax),%dx
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000074(%esi),%al
		add    %edx,%edi
		add    %ebx,%eax
		xor    %edx,%edx
		add    $0x000040,%eax
		mov    0x00006a(%esi),%dl
		mov    %ax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _022228_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _022228_jump
		movb   $0x000001,_0c13ad_data
		jmp    _022230_jump

	_022228_jump:
		xor    %ah,%ah
		mov    %ah,_0c13ad_data

	_022230_jump:
		xor    %eax,%eax
		mov    _0c13af_data,%al
		cmp    $0x000002,%eax
		jge    _0222a6_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		je     _0222a6_jump
		mov    _0c2572_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		mov    $0x000010,%ecx
		sub    %eax,%edx
		mov    $0xfffffff0,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02226f_jump
		cmp    %ecx,%eax
		jg     _02226f_jump
		mov    $0x000001,%eax
		jmp    _022271_jump

	_02226f_jump:
		xor    %eax,%eax

	_022271_jump:
		test   %eax,%eax
		je     _0222a6_jump
		mov    -0x000002(%esp),%eax
		mov    _0c2574_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    $0x000020,%eax
		cmp    %eax,%edx
		jge    _0222a6_jump
		mov    $0x000010,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)

	_0222a6_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _022343_jump
		xor    %eax,%eax
		mov    _0c13af_data,%al
		test   %eax,%eax
		jne    _0222c6_jump
		movb   $0x000001,_0c13af_data

	_0222c6_jump:
		mov    %esi,%eax
		call   _04d2c4_func
		xor    %eax,%eax
		mov    _0c13af_data,%al
		cmp    $0x000004,%eax
		jge    _0222e0_jump
		mov    %esi,%eax
		call   _024ba8_func

	_0222e0_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _022343_jump
		xor    %eax,%eax
		mov    _0ce8fc_data,%edx
		mov    0x00006c(%esi),%al
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		jne    _022321_jump
		jmp    _022343_jump

	_0222fe_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d4a8_func
		jmp    _022343_jump

	_02230e_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		jmp    _022343_jump

	_022321_jump:
		mov    _0ce8fe_data,%ax
		cmp    $0x000002,%ax
		jb     _022335_jump
		jbe    _0222fe_jump
		cmp    $0x000003,%ax
		je     _02230e_jump

	_022335_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func

	_022343_jump:
		mov    _0ce8fe_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jge    _022403_jump
		xor    %eax,%eax
		mov    _0c13af_data,%al
		test   %eax,%eax
		je     _022403_jump
		cmp    $0x000005,%eax
		je     _022403_jump
		mov    _0c259c_data,%ax
		cmp    _0c24f6_data,%ax
		jne    _022394_jump
		mov    _0c247a_data,%eax
		movswl %di,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _02238c_jump
		mov    %ebx,%eax

	_02238c_jump:
		mov    %ax,_0c259c_data
		jmp    _0223a2_jump

	_022394_jump:
		cmp    %ax,%di
		jle    _0223a2_jump
		movw   $0x000001,_0ce906_data

	_0223a2_jump:
		cmpw   $0x000000,_0ce906_data
		je     _0223e9_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _0223d5_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    _0c259c_data,%dx
		inc    %eax
		add    %eax,%edx
		mov    %dx,_0c259c_data
		jmp    _0223e9_jump

	_0223d5_jump:
		mov    _0c259c_data,%cx
		mov    0x000040(%esi),%ax
		add    %eax,%ecx
		mov    %cx,_0c259c_data

	_0223e9_jump:
		mov    _0c13af_data,%al
		cmp    $0x000005,%al
		ja     _022d8a_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_02218c_switch(,%eax,4)

	_022403_jump:
		mov    _0c24f6_data,%ax
		mov    %ax,_0c259c_data
		jmp    _0223e9_jump

	_022411_case:
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000002,_092204_data(%eax)
		jne    _022423_jump
		mov    $0x00003c,%al
		jmp    _022425_jump

	_022423_jump:
		mov    $0x000028,%al

	_022425_jump:
		xor    %edx,%edx
		mov    0x000062(%esi),%dl
		testb  $0x000002,_092204_data(%edx)
		jne    _022495_jump
		movswl %di,%edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		mov    _0c2572_data,%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jle    _022d8a_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _022d8a_jump
		mov    _0ce8fc_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _022d8a_jump
		mov    0x000081(%esi),%al
		mov    $0x000001,%ebx
		or     $0x000008,%al
		mov    $0x000002,%edx
		mov    %al,0x000081(%esi)
		mov    %esi,%eax
		call   _01d4a8_func
		movw   $0x000002,0x000042(%esi)
		jmp    _022d8a_jump

	_022495_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		test   %edx,%edx
		jne    _022d8a_jump
		mov    0x00006c(%esi),%dl
		test   %edx,%edx
		jne    _022d8a_jump
		movswl %di,%edx
		and    $0x0000ff,%eax
		add    %eax,%edx
		mov    _0c2572_data,%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _022500_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0224cd_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d4a8_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0224e5_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022500_jump:
		movb   $0x000001,_0c13af_data
		mov    _0ce8fe_data,%ax
		cmp    $0x000002,%ax
		jb     _02251b_jump
		jbe    _0224cd_jump
		cmp    $0x000003,%ax
		je     _0224e5_jump

	_02251b_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022533_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _022d8a_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		mov    _0c24b2_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		xor    %edx,%edx
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%dl
		add    %ecx,%edx
		sar    $0x000004,%edx
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c24bc_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		jne    _022d8a_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fff8,0x000042(%esi)
		movw   $0x000003,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0225c5_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _022d8a_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		mov    _0c24b2_data,%ebx
		add    $0x000008,%eax
		sar    $0x000010,%ebx
		sar    $0x000004,%eax
		imul   %eax,%ebx
		mov    0x000028(%esi),%edx
		xor    %eax,%eax
		sub    $0x000008,%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		jne    _022d8a_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    $0xffffffff,%ecx
		movw   $0x000000,0x000042(%esi)
		mov    %cx,_0ce900_data
		movw   $0x000000,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022664_case:
		mov    _0c259a_data,%eax
		mov    $0x0015cc,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _022677_jump
		mov    %ebx,%eax

	_022677_jump:
		mov    _0c2572_data,%edx
		mov    %ax,_0c259c_data
		movswl %di,%eax
		sar    $0x000010,%edx
		add    $0x000020,%eax
		cmp    %eax,%edx
		jle    _02278a_jump
		mov    _0ce8fe_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02278a_jump
		mov    (%esp),%ecx
		cmp    _0c2576_data,%cx
		jge    _02278a_jump
		mov    _0ce8fc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0226e7_jump
		jmp    _022717_jump

	_0226c4_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d4a8_func
		jmp    _022709_jump

	_0226d4_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		jmp    _022709_jump

	_0226e7_jump:
		mov    _0ce8fe_data,%ax
		cmp    $0x000002,%ax
		jb     _0226fb_jump
		jbe    _0226c4_jump
		cmp    $0x000003,%ax
		je     _0226d4_jump

	_0226fb_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func

	_022709_jump:
		xor    %ebx,%ebx
		mov    %bx,_0ce900_data
		jmp    _02278a_jump

	_022717_jump:
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x0000c8,%eax
		jge    _02275e_jump
		incw   0x000050(%esi)
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x0000c8,%eax
		jne    _02275e_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		mov    %dx,_0ce8fe_data
		mov    $0x000001,%edx
		call   _01d4a8_func
		xor    %ebx,%ebx
		movw   $0x0000ff,0x000050(%esi)
		mov    %bx,_0ce900_data

	_02275e_jump:
		mov    _0c247c_data,%ax
		mov    %ax,_0c259c_data
		cmp    %ax,%di
		jle    _02278a_jump
		mov    _0c1b5a_data,%ebx
		mov    $0x000001,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _022783_jump
		mov    %ebx,%eax

	_022783_jump:
		add    %ax,_0c259c_data

	_02278a_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _0227ef_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _0227ef_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000010,%eax
		je     _0227cd_jump
		jmp    _0227ef_jump

	_0227aa_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d4a8_func
		jmp    _0227ef_jump

	_0227ba_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		jmp    _0227ef_jump

	_0227cd_jump:
		mov    _0ce8fe_data,%ax
		cmp    $0x000002,%ax
		jb     _0227e1_jump
		jbe    _0227aa_jump
		cmp    $0x000003,%ax
		je     _0227ba_jump

	_0227e1_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func

	_0227ef_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _022854_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _022854_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		je     _022832_jump
		jmp    _022854_jump

	_02280f_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d4a8_func
		jmp    _022854_jump

	_02281f_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		jmp    _022854_jump

	_022832_jump:
		mov    _0ce8fe_data,%ax
		cmp    $0x000002,%ax
		jb     _022846_jump
		jbe    _02280f_jump
		cmp    $0x000003,%ax
		je     _02281f_jump

	_022846_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func

	_022854_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _022d8a_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%al
		add    %ebp,%eax
		mov    _0c24b2_data,%ebx
		add    $0x000008,%eax
		sar    $0x000010,%ebx
		sar    $0x000004,%eax
		imul   %eax,%ebx
		mov    0x000028(%esi),%edx
		xor    %eax,%eax
		sub    $0x000008,%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		jne    _0228d9_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movw   $0x00fffa,0x000042(%esi)
		mov    %esi,%eax
		movw   $0x000003,0x000040(%esi)
		call   _01d4a8_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)

	_0228d9_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		je     _022d8a_jump
		mov    $0x000010,%ecx
		mov    _0c2572_data,%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		mov    $0xfffffff0,%ebx
		sub    %edx,%eax
		cmp    %ebx,%eax
		jl     _02290d_jump
		cmp    %ecx,%eax
		jg     _02290d_jump
		mov    $0x000001,%eax
		jmp    _02290f_jump

	_02290d_jump:
		xor    %eax,%eax

	_02290f_jump:
		test   %eax,%eax
		je     _022d8a_jump
		mov    -0x000002(%esp),%eax
		mov    _0c2574_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    $0x000020,%eax
		cmp    %eax,%edx
		jge    _022935_jump
		mov    $0x000010,%ebx
		jmp    _02293a_jump

	_022935_jump:
		mov    $0x000001,%ebx

	_02293a_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000042(%esi)
		mov    0x000042(%esi),%ax
		mov    %ax,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02295b_case:
		mov    _0c25a0_data,%ax
		cmp    _0ce90a_data,%ax
		jle    _022974_jump
		mov    %eax,%ecx
		dec    %ecx
		mov    %cx,_0c25a0_data

	_022974_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _022a13_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _0229b1_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _0229b1_jump
		mov    $0x000001,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    %bx,_0ce8fe_data
		xor    %ebx,%ebx
		call   _01d4a8_func
		jmp    _022a13_jump

	_0229b1_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _022a13_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%eax
		jne    _022a13_jump
		incw   _0ce908_data
		mov    _0ce906_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jge    _0229f2_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		mov    %dx,_0ce8fe_data
		mov    $0x000001,%edx
		call   _01d4a8_func
		jmp    _022a13_jump

	_0229f2_jump:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movb   $0x000005,_0c13af_data
		mov    _0c247e_data,%ax
		mov    %ax,_0ce90a_data

	_022a13_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _022ad4_jump
		testb  $0x000008,0x000081(%esi)
		je     _022a31_jump
		mov    $0x000010,%eax
		jmp    _022a36_jump

	_022a31_jump:
		mov    $0xfffffff0,%eax

	_022a36_jump:
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		lea    (%eax,%edx,1),%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		mov    _0c24b2_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ebx
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		jne    _022ad4_jump
		mov    0x000081(%esi),%al
		movw   $0x000000,0x000042(%esi)
		shl    $0x000004,%al
		movw   $0x000000,0x000040(%esi)
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%bl
		sub    %eax,%edx
		and    $0x0000f7,%bl
		mov    %edx,%eax
		and    $0x000001,%al
		mov    %bl,%bh
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		mov    $0x000005,%ebx
		call   _01d4a8_func

	_022ad4_jump:
		mov    _0c2576_data,%eax
		mov    _0c2572_data,%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		movswl %di,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _022af4_jump
		neg    %eax

	_022af4_jump:
		cmp    $0x0000fa,%eax
		jle    _022d8a_jump
		mov    _0c24f4_data,%ax
		xor    %cl,%cl
		movl   $0x000000,0x000024(%esi)
		mov    %cl,_0c13b2_data
		mov    %ax,_0c25a0_data
		mov    0x000081(%esi),%ch
		mov    _0c24f6_data,%ax
		and    $0x0000fb,%ch
		mov    %ax,_0c259c_data
		mov    %cl,_0c13af_data
		mov    %ch,0x000081(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022b45_case:
		mov    _0ce8fe_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _022b76_jump
		mov    _0ce90a_data,%ax
		xor    %edx,%edx
		mov    _0ce900_data,%bx
		mov    _0c249d_data,%dl
		inc    %ebx
		sub    %edx,%eax
		mov    %bx,_0ce900_data
		mov    %ax,_0c25a0_data

	_022b76_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _022bad_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _022bad_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%eax
		jne    _022bad_jump
		mov    $0x000003,%ecx
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    %cx,_0ce8fe_data
		call   _01d4a8_func

	_022bad_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		test   %edx,%edx
		jne    _022c16_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _022c16_jump
		cmpb   $0x000000,_0c13ad_data
		je     _022be5_jump
		mov    $0x000002,%edx
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %dx,_0ce8fe_data
		mov    %ebx,%edx
		call   _01d4a8_func
		jmp    _022c16_jump

	_022be5_jump:
		xor    %ebx,%ebx
		mov    0x00006b(%esi),%bl
		cmp    $0x000015,%ebx
		jne    _022c16_jump
		mov    0x00000c(%esi),%ebx
		mov    (%ebx,%edx,4),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _022c16_jump
		movw   $0x00ffe2,_0ce900_data

	_022c16_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _022d27_jump
		testb  $0x000008,0x000081(%esi)
		je     _022c34_jump
		mov    $0x000010,%eax
		jmp    _022c39_jump

	_022c34_jump:
		mov    $0xfffffff0,%eax

	_022c39_jump:
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		lea    (%eax,%edx,1),%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		add    $0x000008,%eax
		mov    _0c24b2_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		imul   %edx,%eax
		sar    $0x000004,%ebx
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		jne    _022d27_jump
		mov    _0ce8fc_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _022cdb_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		movw   $0x00fffe,0x000042(%esi)
		movw   $0x000004,0x000040(%esi)
		mov    _0c24f4_data,%ax
		movb   $0x0000ff,0x000072(%esi)
		mov    %ax,_0c25a0_data
		mov    _0c24f6_data,%ax
		movb   $0x000000,0x000071(%esi)
		mov    %ax,_0c259c_data
		jmp    _022d27_jump

	_022cdb_jump:
		mov    0x000081(%esi),%al
		movw   $0x000000,0x000042(%esi)
		shl    $0x000004,%al
		movw   $0x000000,0x000040(%esi)
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		or     %al,%bl
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		mov    $0x000005,%ebx
		call   _01d4a8_func

	_022d27_jump:
		mov    _0c2576_data,%eax
		mov    _0c2572_data,%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		movswl %di,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _022d47_jump
		neg    %eax

	_022d47_jump:
		cmp    $0x000190,%eax
		jle    _022d8a_jump
		mov    _0c24f4_data,%ax
		mov    0x000081(%esi),%cl
		xor    %bh,%bh
		movl   $0x000000,0x000024(%esi)
		mov    %bh,_0c13b2_data
		and    $0x0000fb,%cl
		mov    %bh,_0c13af_data
		mov    %ax,_0c25a0_data
		mov    _0c24f6_data,%ax
		mov    %cl,0x000081(%esi)
		mov    %ax,_0c259c_data

	_022d8a_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi

	_022d8f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022d94_func:
		mov    0x000076(%eax),%al
		xor    %ah,%ah
		mov    %ax,_0ce8fe_data
		ret    

_022da0_switch:
		.long   _022dca_case
		.long   _022e13_case
		.long   _022e37_case
		.long   _022e6a_case




_022db0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    0x000040(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jg     _022ee3_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022dca_case:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d498_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022ddb_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d4a8_func

	_022de9_jump:
		mov    $0x000002,%dh
		mov    _0ce8fe_data,%ax
		mov    %dh,_0c13af_data
		mov    %ax,0x000040(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022e00_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		jmp    _022de9_jump

	_022e13_case:
		mov    _0ce8fe_data,%ax
		cmp    $0x000002,%ax
		jb     _022e27_jump
		jbe    _022ddb_jump
		cmp    $0x000003,%ax
		je     _022e00_jump

	_022e27_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		jmp    _022de9_jump

	_022e37_case:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d498_func
		mov    $0x000003,%dl
		mov    $0xffffffff,%eax
		mov    %dl,_0c13af_data
		mov    0x000028(%ecx),%edx
		movw   $0x000000,0x000050(%ecx)
		sub    $0x000020,%edx
		mov    %ax,_0ce8fe_data
		mov    %edx,0x000028(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022e6a_case:
		mov    $0x0002b3,%ebx
		mov    _0ce900_data,%dx
		mov    %ecx,%eax
		movb   $0x000005,0x000072(%ecx)
		inc    %edx
		movb   $0x000000,0x000071(%ecx)
		mov    %dx,_0ce900_data
		mov    $0x000002,%edx
		movw   $0x000002,0x000040(%ecx)
		call   _01d498_func
		mov    _0c247e_data,%ax
		xor    %esi,%esi
		mov    %ax,_0c25a0_data
		mov    %bx,_0ce90a_data
		mov    _0c259e_data,%eax
		mov    %si,_0ce908_data
		sar    $0x000010,%eax
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x0002b3,%eax
		jge    _022ed0_jump
		mov    %bx,_0c25a0_data

	_022ed0_jump:
		mov    $0x000004,%ah
		movw   $0x000000,0x000042(%ecx)
		mov    %ah,_0c13af_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022ee3_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		call   _024ec4_func
		mov    _0c13af_data,%al
		cmp    $0x000003,%al
		ja     _022d8f_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_022da0_switch(,%eax,4)



_022f10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jne    _022f70_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _022f70_jump
		movb   $0x000001,_0c13ad_data
		jmp    _022f78_jump

	_022f70_jump:
		xor    %ah,%ah
		mov    %ah,_0c13ad_data

	_022f78_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _023004_jump
		mov    %ecx,%eax
		call   _04d2c4_func
		mov    %ecx,%eax
		call   _024ba8_func
		cmpb   $0x000000,_0c13ad_data
		je     _023004_jump
		xor    %eax,%eax
		mov    _0ce8fc_data,%edx
		mov    0x00006c(%ecx),%al
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		jne    _022fe2_jump
		jmp    _023004_jump

	_022fb9_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d4a8_func
		jmp    _023004_jump

	_022fcc_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		jmp    _023004_jump

	_022fe2_jump:
		mov    _0ce8fe_data,%ax
		cmp    $0x000002,%ax
		jb     _022ff6_jump
		jbe    _022fb9_jump
		cmp    $0x000003,%ax
		je     _022fcc_jump

	_022ff6_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func

	_023004_jump:
		mov    _0c13af_data,%al
		test   %al,%al
		jbe    _02301a_jump
		cmp    $0x000001,%al
		je     _0230ea_jump

	_023015_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02301a_jump:
		andb   $0x0000f7,0x000081(%ecx)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		je     _023032_jump
		mov    %ecx,%eax
		call   _024ba8_func

	_023032_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _02305e_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _02305e_jump
		mov    $0x000002,%edx
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %dx,_0ce8fe_data
		mov    %ebx,%edx
		call   _01d4a8_func

	_02305e_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _023015_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%esi
		mov    0x000069(%ecx),%al
		add    %esi,%eax
		mov    _0c24b2_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %eax,%edx
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%eax
		mov    0x000068(%ecx),%bl
		sub    $0x000008,%eax
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c24bc_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		jne    _023015_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		movb   $0x000005,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		movw   $0x00fffe,0x000040(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0230ea_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _023015_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %edx,%eax
		add    $0x000008,%eax
		mov    _0c24b2_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		jne    _023015_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000042(%ecx)
		mov    $0x000002,%bh
		movw   $0x000000,0x000040(%ecx)
		mov    %bh,_0c13af_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023174_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000040(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jg     _0231d8_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023188_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d4a8_func

	_023196_jump:
		movb   $0x000001,_0c13af_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0231a1_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		jmp    _023196_jump

	_0231b4_jump:
		mov    _0ce8fe_data,%ax
		cmp    $0x000002,%ax
		jb     _0231c8_jump
		jbe    _023188_jump
		cmp    $0x000003,%ax
		je     _0231a1_jump

	_0231c8_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		jmp    _023196_jump

	_0231d8_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		call   _024ba8_func
		mov    _0c13af_data,%al
		test   %al,%al
		je     _0231b4_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0231f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x000081(%eax),%ah
		xor    %edx,%edx
		or     $0x000008,%ah
		mov    0x00006a(%ebx),%dl
		mov    %ah,0x000081(%ebx)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ebx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebx),%dl
		cmp    %eax,%edx
		jne    _023271_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ebx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		lea    0x000000(,%eax,8),%ecx
		mov    (%edx),%eax
		mov    0x000005(%ecx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _023271_jump
		movb   $0x000001,_0c13ad_data
		jmp    _023279_jump

	_023271_jump:
		xor    %dl,%dl
		mov    %dl,_0c13ad_data

	_023279_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		test   %eax,%eax
		jne    _0232e0_jump
		xor    %edx,%edx
		mov    0x00006c(%ebx),%dl
		cmp    $0x000007,%edx
		jne    _0232c2_jump
		xor    %ecx,%ecx
		mov    0x00006b(%ebx),%cl
		cmp    $0x00002c,%ecx
		jne    _0232c2_jump
		lea    0x000000(,%eax,4),%ecx
		mov    0x00000c(%ebx),%eax
		mov    (%ecx,%eax,1),%eax
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0232c2_jump
		mov    %ebx,%eax
		call   _0210f0_func

	_0232c2_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _0232e0_jump
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		test   %eax,%eax
		jne    _0232e0_jump
		mov    $0x000007,%edx
		mov    %ebx,%eax
		call   _01d498_func

	_0232e0_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0232e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x000070(%eax),%al
		test   %al,%al
		jbe    _0232fa_jump
		cmp    $0x000001,%al
		je     _023301_jump

	_0232f5_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0232fa_jump:
		andb   $0x0000f7,0x000081(%esi)

	_023301_jump:
		xor    %edx,%edx
		mov    0x000070(%esi),%dl
		cmp    $0x000001,%edx
		jne    _023312_jump
		orb    $0x000008,0x000081(%esi)

	_023312_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _04d2c4_func
		mov    0x000069(%esi),%dl
		add    0x00002c(%esi),%edx
		mov    _0c24b2_data,%ebx
		sar    $0x000004,%edx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		xor    %edx,%edx
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%dl
		add    %ecx,%edx
		sar    $0x000004,%edx
		add    %ebx,%edx
		movswl %dx,%ebx
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    _0c24bc_data,%ebx
		movw   $0x000000,0x000042(%esi)
		mov    0x000002(%ebx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000020,_092204_data(%edx)
		je     _0232f5_jump
		mov    _0c1b04_data,%edx
		mov    _0c1b08_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _023393_jump
		jmp    _02342f_jump

	_023383_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _02342f_jump

	_023393_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x000073,%ebx
		jne    _023383_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _023383_jump
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movw   $0x000000,0x000040(%edx)
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%edx)
		mov    0x000028(%esi),%ebx
		sub    $0x000020,%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%esi),%ebx
		mov    0x000028(%edx),%ax
		sub    $0x000030,%ebx
		mov    %ax,0x00003c(%edx)
		mov    %ebx,0x00002c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		call   _01dcec_func
		mov    0x000081(%edx),%cl
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%cl
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _01f584_func
		movw   $0x0000ff,0x000056(%edx)
		movw   $0x00001e,0x000050(%edx)
		movw   $0x00001e,0x000052(%edx)
		movb   $0x000000,0x00006d(%edx)
		movb   $0x000004,0x00006c(%edx)
		movb   $0x000000,0x00006b(%edx)
		movw   $0x00ffff,0x000046(%edx)
		movw   $0x000000,0x000048(%edx)

	_02342f_jump:
		mov    0x000081(%esi),%ch
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02344c_func:
		push   %edx
		mov    0x000070(%eax),%dl
		cmp    $0x000002,%dl
		jb     _02345c_jump
		jbe    _023466_jump
		cmp    $0x000003,%dl
		je     _02345e_jump

	_02345c_jump:
		pop    %edx
		ret    

	_02345e_jump:
		movw   $0x00ffff,0x000042(%eax)
		pop    %edx
		ret    

	_023466_jump:
		movw   $0x000000,0x000042(%eax)
		pop    %edx
		ret    



_023470_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    _0c1b14_data,%edx
		movswl (%edx),%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0c1b04_data,%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		mov    _0c1b18_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jg     _0234ca_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0234a4_jump:
		inc    %eax
		mov    _0c1b14_data,%ecx
		movswl %ax,%edx
		movswl (%ecx,%edx,2),%edx
		imul   $0x000084,%edx,%edx
		mov    _0c1b04_data,%ecx
		add    %edx,%ecx
		cmp    %si,%ax
		jl     _0234d1_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0234ca_jump:
		mov    _0c1b18_data,%si

	_0234d1_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x000082,%edx
		jne    _0234a4_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0234a4_jump
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000028(%ebx),%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%ebx),%edx
		movw   $0x000000,0x000042(%ecx)
		mov    %edx,0x00002c(%ecx)
		xor    %ebx,%ebx
		mov    0x000042(%ecx),%ax
		xor    %edx,%edx
		mov    0x00006e(%ecx),%bl
		mov    0x00006f(%ecx),%dl
		mov    %ax,0x000040(%ecx)
		mov    %ecx,%eax
		call   _01d4a8_func
		mov    %ecx,%eax
		call   _01dcec_func
		mov    %ecx,%eax
		call   _01dc54_func
		movw   $0x00ffff,0x000046(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000048(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f584_func
		andb   $0x0000bf,0x000081(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023558_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		testb  $0x000004,0x00007d(%eax)
		je     _0235dc_jump
		mov    %ecx,%eax
		call   _01d4b4_func
		mov    %eax,%edi
		mov    %ecx,%eax
		call   _01d5dc_func
		movswl %di,%edi
		movswl %ax,%esi
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01d754_func
		test   %ax,%ax
		je     _0235b0_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _02eb40_func
		test   %ax,%ax
		je     _0235b0_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _058bb4_func

	_0235b0_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00003e(%ecx),%esi
		mov    0x00004a(%ecx),%ax
		sar    $0x000010,%esi
		mov    %ax,0x000042(%ecx)
		test   %esi,%esi
		jle    _0235d3_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _0235dc_jump

	_0235d3_jump:
		jge    _0235dc_jump
		andb   $0x0000f7,0x000081(%ecx)

	_0235dc_jump:
		testb  $0x000008,0x00007d(%ecx)
		je     _0235f2_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_0235f2_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0235f8_func:
		push   %ebx
		push   %edx
		xor    %ebx,%ebx
		mov    0x000070(%eax),%bl
		mov    $0x0000ff,%dl
		test   %ebx,%ebx
		jne    _023618_jump
		mov    0x000081(%eax),%bl
		or     $0x000008,%bl
		mov    $0x000003,%dl
		mov    %bl,0x000081(%eax)
		jmp    _023626_jump

	_023618_jump:
		cmp    $0x000001,%ebx
		jne    _023626_jump
		mov    $0x000002,%dl
		andb   $0x0000f7,0x000081(%eax)

	_023626_jump:
		and    $0x0000ff,%edx
		cmp    $0x0000ff,%edx
		je     _02363e_jump
		mov    $0x000001,%ebx
		call   _058bb4_func

	_02363e_jump:
		pop    %edx
		pop    %ebx
		ret    



_023644_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		xor    %ecx,%ecx
		mov    0x00006d(%eax),%cl
		test   %ecx,%ecx
		jne    _02366a_jump
		mov    0x00006c(%eax),%cl
		cmp    $0x000004,%ecx
		jne    _02366a_jump
		call   _04d2c4_func
		negw   0x000040(%esi)
		jmp    _02378e_jump

	_02366a_jump:
		xor    %ecx,%ecx
		mov    0x000070(%esi),%cl
		test   %ecx,%ecx
		jne    _02367c_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _023683_jump

	_02367c_jump:
		orb    $0x000008,0x000081(%esi)

	_023683_jump:
		testb  $0x000002,0x00007d(%esi)
		je     _0236d3_jump
		mov    %esi,%eax
		call   _04d2c4_func
		xor    %edx,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   _024568_func
		mov    %al,%cl
		testb  $0x000001,_092204_data(%ecx)
		je     _0236cc_jump
		xor    %ecx,%ecx
		mov    0x000070(%esi),%cl
		test   %ecx,%ecx
		jne    _0236bb_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _0236c5_jump

	_0236bb_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_0236c5_jump:
		mov    %esi,%eax
		call   _058bb4_func

	_0236cc_jump:
		mov    %esi,%eax
		call   _024ba8_func

	_0236d3_jump:
		testb  $0x000001,0x00007d(%esi)
		je     _02377b_jump
		mov    $0x000028,%ebx
		lea    0x00004a(%esi),%ecx
		mov    $0x000030,%edx
		mov    %esi,%eax
		call   _01d1b4_func
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01d4b4_func
		mov    %eax,%edi
		mov    %esi,%eax
		call   _01d5dc_func
		movswl %di,%edi
		movswl %ax,%ecx
		mov    %edi,%edx
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _01d754_func
		test   %ax,%ax
		je     _023774_jump
		mov    %ecx,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _02eb40_func
		test   %ax,%ax
		je     _023774_jump
		mov    0x00003e(%esi),%ecx
		mov    0x000028(%esi),%edx
		sar    $0x000010,%ecx
		sub    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000070(%esi),%cl
		mov    %edx,0x000028(%esi)
		test   %ecx,%ecx
		jne    _02375c_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _058bb4_func
		orb    $0x000008,0x000081(%esi)
		jmp    _023774_jump

	_02375c_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _058bb4_func
		andb   $0x0000f7,0x000081(%esi)

	_023774_jump:
		mov    %esi,%eax
		call   _04d2c4_func

	_02377b_jump:
		testb  $0x000010,0x00007d(%esi)
		je     _02378e_jump
		mov    %esi,%eax
		call   _04d2c4_func
		movw   $0x000000,0x000042(%esi)

	_02378e_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023794_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		testb  $0x000010,0x00007d(%eax)
		je     _02385d_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _0237b5_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		je     _0237d1_jump

	_0237b5_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _02385d_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _02385d_jump

	_0237d1_jump:
		xor    %eax,%eax
		mov    0x00007f(%esi),%al
		cmp    $0x0000ff,%eax
		jne    _023810_jump
		mov    0x00002c(%esi),%ecx
		mov    0x000040(%esi),%ebx
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _0237fd_jump
		cmp    %ecx,%eax
		jg     _0237fd_jump
		mov    $0x000001,%eax
		jmp    _0237ff_jump

	_0237fd_jump:
		xor    %eax,%eax

	_0237ff_jump:
		test   %eax,%eax
		jne    _02380a_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _02385d_jump

	_02380a_jump:
		movb   $0x00003c,0x00007f(%esi)
		jmp    _02385d_jump

	_023810_jump:
		test   %eax,%eax
		jne    _023850_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		testb  $0x000008,0x000081(%esi)
		je     _023837_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _023841_jump

	_023837_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_023841_jump:
		mov    %esi,%eax
		call   _058bb4_func
		movw   $0x000000,0x000042(%esi)
		jmp    _02385d_jump

	_023850_jump:
		mov    %al,%dl
		movw   $0x000000,0x000042(%esi)
		dec    %dl
		mov    %dl,0x00007f(%esi)

	_02385d_jump:
		xor    %eax,%eax
		mov    0x000075(%esi),%al
		cmp    $0x000004,%eax
		jne    _0238e3_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _02387c_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		je     _023890_jump

	_02387c_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _0238e3_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _0238e3_jump

	_023890_jump:
		cmpb   $0x000000,0x00007b(%esi)
		je     _0238d2_jump
		mov    0x00002c(%esi),%ecx
		mov    0x000040(%esi),%ebx
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _0238b6_jump
		cmp    %ecx,%eax
		jg     _0238b6_jump
		mov    $0x000001,%eax
		jmp    _0238b8_jump

	_0238b6_jump:
		xor    %eax,%eax

	_0238b8_jump:
		test   %eax,%eax
		je     _0238e3_jump
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000042(%esi)
		jmp    _0238e3_jump

	_0238d2_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d4a8_func

	_0238e3_jump:
		testb  $0x000002,0x00007d(%esi)
		je     _02392d_jump
		cmpw   $0x000000,0x000040(%esi)
		je     _02392d_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _024568_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _02392d_jump
		xor    %eax,%eax
		mov    0x000070(%esi),%al
		test   %eax,%eax
		jne    _02391c_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _023926_jump

	_02391c_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_023926_jump:
		mov    %esi,%eax
		call   _058bb4_func

	_02392d_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023934_func:
		push   %edx
		mov    0x000070(%eax),%dl
		cmp    $0x000002,%dl
		jb     _023954_jump
		jbe    _02394b_jump
		cmp    $0x000014,%dl
		jb     _02394b_jump
		jbe    _02394d_jump
		cmp    $0x00001e,%dl
		je     _02395b_jump

	_02394b_jump:
		pop    %edx
		ret    

	_02394d_jump:
		call   _023558_func
		pop    %edx
		ret    

	_023954_jump:
		call   _023644_func
		pop    %edx
		ret    

	_02395b_jump:
		call   _023794_func
		pop    %edx
		ret    



_023964_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e92c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _0239ef_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    _0c1ec0_data,%edx
		movw   $0x000000,0x000042(%ecx)
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _0239bb_jump
		jle    _0239a9_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _0239c2_jump

	_0239a9_jump:
		testb  $0x000008,0x000081(%edx)
		je     _0239bb_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _0239c2_jump

	_0239bb_jump:
		orb    $0x000008,0x000081(%ecx)

	_0239c2_jump:
		mov    %ecx,%eax
		call   _023470_func
		testb  $0x000008,0x000081(%ecx)
		je     _0239de_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _0239e8_jump

	_0239de_jump:
		mov    $0x000001,%ebx
		mov    $0x000003,%edx

	_0239e8_jump:
		mov    %ecx,%eax
		call   _058bb4_func

	_0239ef_jump:
		pop    %ecx
		pop    %ebx
		ret    

_0239f4_switch:
		.long   _023c23_case
		.long   _023b9f_case
		.long   _023a76_case
		.long   _023c64_case
		.long   _023c64_case
		.long   _023a30_case




_023a0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000075(%eax),%al
		sub    $0x000002,%al
		cmp    $0x000005,%al
		ja     _023c64_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0239f4_switch(,%eax,4)

	_023a30_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _023c64_case
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		jne    _023c64_case
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		je     _023c64_case
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _058bb4_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023a76_case:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		je     _023c64_case
		mov    %esp,%eax
		lea    0x000004(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _01d3c0_func
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x00007a(%esi),%al
		mov    0x00000c(%esp),%ebx
		add    %edx,%eax
		mov    0x000002(%esp),%edx
		sub    %eax,%ebx
		sar    $0x000011,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000008(%esp)
		mov    0x000004(%esp),%eax
		mov    %eax,%ecx
		add    %eax,%ecx
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000004(%esp)
		xor    %eax,%eax
		mov    (%esp),%edi
		mov    0x00007a(%esi),%al
		add    %eax,%edi
		mov    %di,(%esp)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _023c64_case
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _023c64_case
		mov    _0c2578_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0c2576_data,%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    _0c2574_data,%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000012(%esp),%edx
		push   %eax
		mov    _0c2572_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02aa7c_func
		test   %ax,%ax
		je     _023c64_case
		xor    %edx,%edx
		mov    _0c2576_data,%ax
		mov    0x000074(%esi),%dl
		sub    %edx,%eax
		mov    %ax,0x000050(%esi)
		mov    0x00002c(%esi),%eax
		mov    0x00004e(%esi),%edx
		sub    $0x000010,%eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jge    _023c64_case
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000004,%edx
		call   _01dc54_func
		mov    %esi,%eax
		call   _058bb4_func
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%edx
		movb   $0x000006,0x000072(%esi)
		dec    %edx
		mov    %edx,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023b9f_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _023c64_case
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _023c64_case
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		je     _023c64_case
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01dc54_func
		mov    _0c1b90_data,%dl
		add    _0c1b48_data,%dx
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		mov    %dx,0x000050(%esi)
		mov    0x00002c(%esi),%eax
		mov    0x00004e(%esi),%edx
		sub    $0x000010,%eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jge    _023c64_case
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _058bb4_func
		movb   $0x000006,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ebx
		movb   $0x0000ff,0x00007f(%esi)
		dec    %ebx
		mov    %ebx,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023c23_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _023c64_case
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _023c64_case
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		je     _023c64_case
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000004,%edx
		call   _01dc54_func
		mov    %esi,%eax
		call   _058bb4_func
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ecx
		movb   $0x000006,0x000072(%esi)
		dec    %ecx
		mov    %ecx,0x00002c(%esi)

	_023c64_case:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023c70_func:
		push   %edx
		mov    _0c24f0_data,%edx
		mov    _0c24ee_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		shl    $0x000005,%edx
		dec    %eax
		sub    $0x000020,%edx
		add    %edx,%eax
		mov    _0c459a_data(,%eax,2),%ax
		pop    %edx
		ret    



_023c98_func:
		push   %ebx
		push   %edx
		push   %edi
		push   %ebp
		cmpw   $0x000000,_0c518e_data
		je     _023d61_jump
		mov    _0c24f0_data,%eax
		mov    _0c24ee_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000005,%eax
		dec    %edx
		sub    $0x000020,%eax
		mov    _0c4734_data,%ebx
		add    %eax,%edx
		cmp    $0x000001,%ebx
		jne    _023cf2_jump
		mov    _0c4598_data(,%edx,2),%eax
		sar    $0x000010,%eax
		mov    %eax,_0c4738_data
		cmp    $0xfffffffe,%eax
		je     _023cf2_jump
		mov    %eax,%ebx
		shl    $0x000004,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		mov    %eax,_0c4738_data

	_023cf2_jump:
		mov    _0c4598_data(,%edx,2),%edx
		sar    $0x000010,%edx
		cmp    $0xfffffffe,%edx
		je     _023d61_jump
		cmpl   $0x000000,_0c4738_data
		je     _023d61_jump
		mov    _0c4734_data,%edi
		cmp    $0x000078,%edi
		jle    _023d61_jump
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    $0x000001,%ebp
		shl    $0x000002,%eax
		lea    -0x000078(%edi),%edx
		mov    %ebp,_0c1b40_data
		sub    %edx,%eax
		mov    %eax,_0c4738_data
		jne    _023d61_jump
		mov    _0c5186_data,%al
		test   %eax,%eax
		je     _023d61_jump
		mov    _0c5188_data,%al
		xor    %ebx,%ebx
		mov    %al,_0c24ce_data
		mov    $_0c1b1c_data,%eax
		mov    %bx,_0c2488_data
		call   _071d94_func
		call   _03c014_func

	_023d61_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    



_023d68_func:
		dec    %eax
		dec    %edx
		shl    $0x000005,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    $_0c471c_data,%eax
		jmp    _0557a8_jump



_023d80_func:
		dec    %eax
		dec    %edx
		shl    $0x000005,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    $_0c471c_data,%eax
		jmp    _055768_jump



_023d98_func:
		push   %ebx
		push   %edx
		xor    %eax,%eax
		mov    _0c518c_data,%al
		test   %eax,%eax
		jle    _023dfa_jump
		cmpw   $0x000000,_0c518e_data
		jne    _023dfa_jump
		cmpb   $0x000000,_0c249c_data
		jne    _023dfa_jump
		mov    %al,%dl
		dec    %dl
		mov    %dl,_0c518c_data
		mov    _0c24ce_data,%dh
		xor    %eax,%eax
		inc    %dh
		mov    %dh,%al
		mov    %dh,_0c24ce_data
		cmp    $0x000063,%eax
		jle    _023dfa_jump
		mov    %dh,%bl
		sub    $0x000064,%bl
		mov    %bl,_0c24ce_data
		call   _07312c_func
		mov    %ax,_0c25dc_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _023dfa_jump
		call   _04fd90_func

	_023dfa_jump:
		pop    %edx
		pop    %ebx
		ret    



_023e00_func:
		push   %edx
		xor    %eax,%eax

	_023e03_jump:
		inc    %eax
		xor    %dl,%dl
		mov    %dl,_0c471b_data(%eax)
		cmp    $0x000018,%eax
		jl     _023e03_jump
		pop    %edx
		ret    



_023e14_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _04c6f4_func
		call   _040e8c_func
		mov    _0c518e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _023e8d_jump
		call   _03bfc4_func
		mov    $0x00003c,%ebx
		mov    _0c24f2_data,%cx
		mov    _0c24f0_data,%ax
		mov    _0c4734_data,%edx
		dec    %ecx
		dec    %eax
		shl    $0x000005,%ecx
		sub    $0x000078,%edx
		add    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %cx,%eax
		mov    _0c4598_data(,%eax,2),%ecx
		mov    _0c4738_data,%eax
		push   %edx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		sar    $0x000010,%ecx
		lea    -0x000001(%ecx),%edx
		sub    %eax,%edx
		push   %edx
		push   $_0c0038_data
		push   $_0ce914_data
		call   _0787fb_func
		add    $0x000010,%esp

	_023e8d_jump:
		mov    _0c24ee_data,%edx
		mov    _0c24f0_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _023d68_func
		test   %al,%al
		je     _023f48_jump
		mov    _0c1af2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _023ecf_jump
		mov    _0c249c_data,%al
		test   %eax,%eax
		jne    _023ecf_jump
		mov    $0x0000bf,%ebx
		mov    $0x000080,%edx
		call   _03bc78_func

	_023ecf_jump:
		mov    _0c1af2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _023ef3_jump
		mov    _0c249e_data,%al
		test   %eax,%eax
		jne    _023ef3_jump
		mov    $0x0000ef,%ebx
		mov    $0x0000c0,%edx
		call   _03bc78_func

	_023ef3_jump:
		call   _03c324_func
		push   $0x000005
		mov    $0x00003c,%ebx
		mov    $0x0000a0,%edx
		mov    _0cd9c4_data,%eax
		xor    %ecx,%ecx
		call   _01a168_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x00006e,%ebx
		mov    $0x0000a0,%edx
		mov    _0cd9c8_data,%eax
		call   _01a168_func
		push   $0x000005
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    $_0ce914_data,%eax
		xor    %ecx,%ecx
		call   _01a168_func
		jmp    _023ffa_jump

	_023f48_jump:
		mov    _0c1af2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _023f6c_jump
		mov    _0c249c_data,%al
		test   %eax,%eax
		jne    _023f6c_jump
		mov    $0x0000bf,%ebx
		mov    $0x000080,%edx
		call   _03bc78_func

	_023f6c_jump:
		mov    _0c1af2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _023f90_jump
		mov    _0c249e_data,%al
		test   %eax,%eax
		jne    _023f90_jump
		mov    $0x0000ef,%ebx
		mov    $0x0000c0,%edx
		call   _03bc78_func

	_023f90_jump:
		call   _03c324_func
		mov    _0c518e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000f,%eax
		jne    _023fc9_jump
		call   _072e5c_func
		movw   $0x00004b,0x000036(%eax)
		movw   $0x000032,0x000038(%eax)
		mov    %eax,_0ce910_data
		movl   $0x000001,0x000024(%eax)
		call   _04dbe4_func
		call   _04fd90_func

	_023fc9_jump:
		mov    _0c518e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000014,%eax
		jle    _023ffa_jump
		mov    _0ce910_data,%eax
		call   _04dbe4_func
		mov    _0ce910_data,%eax
		call   _01e840_func
		mov    _0ce910_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _023ffa_jump
		call   _018890_func

	_023ffa_jump:
		mov    _0c518e_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		cmp    $0x0001f4,%eax
		je     _024040_jump
		call   _040c80_func
		test   %ax,%ax
		jne    _024033_jump
		call   _040ce8_func
		test   %ax,%ax
		jne    _024033_jump
		call   _040d50_func
		test   %ax,%ax
		jne    _024033_jump
		call   _040db8_func
		test   %ax,%ax
		je     _02404f_jump

	_024033_jump:
		mov    _0c518e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000032,%eax
		jle    _02404f_jump

	_024040_jump:
		mov    $_0c1b1c_data,%eax
		mov    $0x000001,%edx
		call   _071d94_func

	_02404f_jump:
		mov    _0c5190_data,%bx
		inc    %ebx
		mov    %edx,%eax
		mov    %bx,_0c5190_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_024064_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c518e_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		test   %eax,%eax
		jge    _02419e_jump
		mov    _0c5190_data,%dx
		inc    %edx
		mov    %dx,_0c5190_data
		mov    _0c518e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02419e_jump
		mov    %edx,%esi
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _095b0c_data,%al
		inc    %esi
		mov    %cx,_0c2488_data
		mov    %si,_0c5190_data
		cmp    $0x000001,%eax
		jne    _0240ca_jump
		xor    %eax,%eax
		mov    _0c7968_data,%al
		mov    $0x000001,%ebx
		call   _03cddc_func

	_0240ca_jump:
		mov    $0x00fa00,%edx
		mov    $_0c6af0_data,%eax
		call   _077450_func
		mov    _0c24ee_data,%edx
		mov    _0c24f0_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _023d68_func
		test   %al,%al
		je     _0240ff_jump
		mov    $_0c6af0_data,%eax
		call   _036614_func
		jmp    _024109_jump

	_0240ff_jump:
		mov    $_0c6af0_data,%eax
		call   _036614_func

	_024109_jump:
		mov    $_0c886c_data,%eax
		call   _03c210_func
		call   _03c03c_func
		call   _01ccfc_func
		cmpb   $0x000000,_0ce841_data
		je     _024135_jump
		call   _06a570_func
		mov    $0x000006,%eax
		call   _06bb34_jump

	_024135_jump:
		mov    $_023e14_func,%eax
		call   _03c090_func
		cmpb   $0x000000,_0ce841_data
		je     _02414d_jump
		call   _077ee8_func

	_02414d_jump:
		call   _03c014_func
		mov    _0c5188_data,%al
		xor    %edx,%edx
		mov    %al,_0c24ce_data
		mov    %edx,_0c5188_data
		mov    _0c24ee_data,%edx
		mov    _0c24f0_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _023d80_func
		test   %ebx,%ebx
		je     _02418a_jump
		xor    %eax,%eax
		mov    _0c7968_data,%al
		call   _03cca8_func

	_02418a_jump:
		call   _03c03c_func
		call   _03c284_jump
		mov    $_0c6af0_data,%eax
		call   _077768_func

	_02419e_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0241b0_func:
		movswl %dx,%edx
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx
		cwtl   
		call   _01e288_func
		and    $0x0000ff,%eax
		cmp    $0x00000f,%eax
		sete   %al
		xor    %ah,%ah
		ret    



_0241d4_func:
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		movswl %ax,%esi
		movswl %bx,%edx
		movswl %cx,%eax
		call   *_0cdcfc_data(,%esi,4)
		sub    %ebx,%eax
		pop    %esi
		pop    %ecx
		ret    



_0241f0_func:
		push   %ecx
		mov    %eax,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		cwtl   
		call   _0241d4_func
		cwtl   
		test   %eax,%eax
		jle    _024206_jump
		xor    %ecx,%ecx

	_024206_jump:
		mov    %ecx,%eax
		pop    %ecx
		ret    

_02420c_switch:
		.long   _024356_case
		.long   _024356_case
		.long   _0243d0_case
		.long   _0243df_case
		.long   _0243f5_case
		.long   _0243f5_case
		.long   _02440f_case
		.long   _02440f_case
		.long   _024356_case
		.long   _02446d_case
		.long   _024356_case
		.long   _024361_case
		.long   _024361_case
		.long   _024361_case
		.long   _02446d_case
		.long   _02446d_case
		.long   _024361_case
		.long   _024361_case
		.long   _0243d0_case
		.long   _0243df_case
		.long   _0243f5_case
		.long   _0243f5_case
		.long   _02440f_case
		.long   _02440f_case
		.long   _024356_case
		.long   _024356_case
		.long   _024361_case
		.long   _024361_case
		.long   _024361_case
		.long   _024361_case
		.long   _02446d_case




_024288_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %dl,0x000008(%esp)
		xor    %edx,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000060(%edi),%ax
		mov    %edx,(%esp)
		cmp    $0x000017,%eax
		jne    _024310_jump
		testb  $0x000002,_0c32e5_data
		je     _024310_jump
		xor    %eax,%eax
		mov    $0x000001,%cl
		mov    0x000008(%esp),%al
		test   %ax,%ax
		js     _0242ca_jump
		sar    %cl,%ax
		jmp    _0242d3_jump

	_0242ca_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0242d3_jump:
		mov    _0c1b89_data,%dl
		mov    _0c1b28_data,%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    (%ecx),%ecx
		mov    _0c1b88_data,%dl
		mov    %al,0x000008(%esp)
		testb  $0x000040,0x000007(%ecx,%edx,8)
		jne    _024310_jump
		test   %al,%al
		je     _024307_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    _02430c_jump

	_024307_jump:
		mov    $0x000001,%edx

	_02430c_jump:
		mov    %dl,0x000008(%esp)

	_024310_jump:
		movzbw 0x000068(%edi),%si
		xor    %eax,%eax
		mov    0x000028(%edi),%dx
		mov    0x000069(%edi),%al
		add    %edx,%esi
		mov    0x00002c(%edi),%dx
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000014,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e288_func
		cmp    $0x00001e,%al
		ja     _024361_case
		and    $0x0000ff,%eax
		jmp    *%cs:_02420c_switch(,%eax,4)

	_024356_case:
		mov    $0x000008,%eax
		sub    0x000042(%edi),%ax
		add    %eax,%ebx

	_024361_case:
		mov    $0x000004,%cl
		mov    %ebx,%eax
		mov    0x000008(%esp),%dl
		test   %ax,%ax
		js     _024373_jump
		sar    %cl,%ax
		jmp    _02437c_jump

	_024373_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02437c_jump:
		sub    %al,%dl
		xor    %eax,%eax
		mov    %dl,%al
		mov    %dl,0x000008(%esp)
		cmp    $0x000080,%eax
		jle    _024393_jump
		xor    %dh,%dh
		mov    %dh,0x000008(%esp)

	_024393_jump:
		mov    $0x000004,%cl
		mov    %esi,%eax
		mov    0x000004(%esp),%edi
		test   %ax,%ax
		js     _0243a5_jump
		sar    %cl,%ax
		jmp    _0243ae_jump

	_0243a5_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0243ae_jump:
		sub    %ebx,%edi
		mov    $0x000004,%cl
		mov    %edi,%eax
		test   %ax,%ax
		js     _0243be_jump
		sar    %cl,%ax
		jmp    _0243c7_jump

	_0243be_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0243c7_jump:
		xor    %ebx,%ebx
		xor    %cl,%cl
		jmp    _024523_jump

	_0243d0_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _024361_case
		add    $0x000011,%ebx
		jmp    _024361_case

	_0243df_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _024361_case
		add    $0x000011,%ebx
		jmp    _024361_case

	_0243f5_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _024407_jump
		add    $0x000011,%ebx
		jmp    _024361_case

	_024407_jump:
		add    $0x000002,%ebx
		jmp    _024361_case

	_02440f_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _024407_jump
		add    $0x000011,%ebx
		jmp    _024361_case

	_024421_jump:
		add    $0x000008,%ebx

	_024424_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e288_func
		cmp    $0x000008,%al
		jb     _0244fe_jump
		jbe    _024488_jump
		cmp    $0x000013,%al
		jb     _0244e0_jump
		jbe    _0244a6_jump
		cmp    $0x000016,%al
		jb     _0244bc_jump
		cmp    $0x000017,%al
		jbe    _02450c_jump
		cmp    $0x000019,%al
		jbe    _024488_jump
		jmp    _0244d8_jump

	_02446d_case:
		mov    0x000062(%edi),%al
		cmp    $0x000003,%al
		jb     _024482_jump
		jbe    _024421_jump
		cmp    $0x000012,%al
		jb     _024424_jump
		jbe    _024421_jump
		cmp    $0x000013,%al
		je     _024421_jump
		jmp    _024424_jump

	_024482_jump:
		cmp    $0x000002,%al
		je     _024421_jump
		jmp    _024424_jump

	_024488_jump:
		add    $0x000009,%ebx
		jmp    _024361_case

	_024490_jump:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _024361_case
		add    $0x000019,%ebx
		jmp    _024361_case

	_0244a6_jump:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _024361_case
		add    $0x000019,%ebx
		jmp    _024361_case

	_0244bc_jump:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _024407_jump
		add    $0x000011,%ebx
		jmp    _024361_case

	_0244d2_jump:
		inc    %ebx
		jmp    _024361_case

	_0244d8_jump:
		add    $0x000008,%ebx
		jmp    _024361_case

	_0244e0_jump:
		cmp    $0x00000c,%al
		jb     _0244f2_jump
		jbe    _0244d2_jump
		cmp    $0x000012,%al
		je     _024490_jump
		add    $0x000008,%ebx
		jmp    _024361_case

	_0244f2_jump:
		cmp    $0x00000a,%al
		je     _024488_jump
		add    $0x000008,%ebx
		jmp    _024361_case

	_0244fe_jump:
		cmp    $0x000002,%al
		jb     _024488_jump
		jbe    _024490_jump
		cmp    $0x000004,%al
		jb     _0244a6_jump
		cmp    $0x000005,%al
		jbe    _0244bc_jump

	_02450c_jump:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _024407_jump
		add    $0x000011,%ebx
		jmp    _024361_case

	_024522_jump:
		inc    %ebx

	_024523_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		cmp    %eax,%ebx
		jg     _024550_jump
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		sub    %ebx,%eax
		mov    %edi,%edx
		shl    $0x000004,%eax
		sub    %eax,%edx
		movswl %dx,%edx
		movswl %si,%eax
		call   _0241b0_func
		test   %ax,%ax
		je     _024522_jump
		inc    %cl
		jmp    _024522_jump

	_024550_jump:
		test   %cl,%cl
		je     _02455b_jump
		movl   $0x00000f,(%esp)

	_02455b_jump:
		mov    (%esp),%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_024568_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _024585_jump
		mov    $0x000001,%eax
		jg     _024585_jump
		neg    %eax

	_024585_jump:
		mov    %eax,%ecx
		cwtl   
		test   %eax,%eax
		je     _0246e5_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000017,%eax
		jne    _0245cc_jump
		mov    _0c32e5_data,%ah
		mov    $0x000004,%dh
		test   $0x000002,%ah
		je     _0245b1_jump
		mov    $0x000008,%eax
		mov    $0x000002,%dh
		jmp    _0245b6_jump

	_0245b1_jump:
		mov    $0x00000e,%eax

	_0245b6_jump:
		mov    _0c1b6a_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _0245d1_jump
		xor    %ebx,%ebx
		mov    %dh,%bl
		sub    %ebx,%eax
		jmp    _0245d1_jump

	_0245cc_jump:
		mov    $0x00000e,%eax

	_0245d1_jump:
		movswl %cx,%ebx
		test   %ebx,%ebx
		jge    _0245da_jump
		neg    %eax

	_0245da_jump:
		test   %dl,%dl
		je     _0245e0_jump
		neg    %eax

	_0245e0_jump:
		cwtl   
		mov    0x000028(%esi),%ebx
		add    %eax,%ebx
		mov    0x000028(%esi),%di
		mov    %ebx,0x000028(%esi)
		test   %dl,%dl
		jne    _024620_jump
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		mov    _092245_data(,%edx,4),%bl
		mov    0x000040(%esi),%ax
		test   $0x000010,%bl
		je     _02461c_jump
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _024613_jump
		sar    %cl,%ax
		jmp    _02461c_jump

	_024613_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02461c_jump:
		cwtl   
		sub    %eax,0x000028(%esi)

	_024620_jump:
		testb  $0x000020,0x000081(%esi)
		je     _024649_jump
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d840_func
		jmp    _02464f_jump

	_024649_jump:
		xor    %edx,%edx
		mov    %edx,0x000008(%esp)

	_02464f_jump:
		mov    0x000008(%esp),%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    0x000069(%esi),%dl
		add    %ebx,%eax
		sub    %eax,%edx
		mov    $0x000004,%cl
		mov    %edx,%eax
		xor    %ebx,%ebx
		test   %ax,%ax
		js     _024671_jump
		sar    %cl,%ax
		jmp    _02467a_jump

	_024671_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02467a_jump:
		mov    0x000060(%esi),%bx
		mov    %eax,%edx
		cmp    $0x000017,%ebx
		jne    _0246c2_jump
		xor    %ebx,%ebx
		mov    _0c1b89_data,%bl
		mov    _0c1b28_data,%ecx
		shl    $0x000002,%ebx
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    (%ebx),%ebx
		mov    _0c1b88_data,%cl
		testb  $0x000040,0x000007(%ebx,%ecx,8)
		je     _0246c2_jump
		xor    %eax,%eax
		mov    $0x000001,%cl
		mov    %dl,%al
		test   %ax,%ax
		js     _0246b9_jump
		sar    %cl,%ax
		jmp    _0246c2_jump

	_0246b9_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0246c2_jump:
		test   %al,%al
		je     _0246c8_jump
		dec    %al

	_0246c8_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _024288_func
		mov    %al,%dl
		movswl %di,%eax
		mov    %eax,0x000028(%esi)
		mov    %dl,%al
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0246e5_jump:
		xor    %dl,%dl
		mov    %dl,%al
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0246f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000002,_092204_data(%eax)
		jne    _024a58_jump
		mov    0x000060(%ecx),%ax
		cmp    $0x000028,%ax
		jb     _024a0d_jump
		jbe    _024978_jump
		cmp    $0x00007a,%ax
		jb     _0249fd_jump
		jbe    _024978_jump
		cmp    $0x0000a5,%ax
		jb     _024a3a_jump
		jbe    _024965_jump
		cmp    $0x0000ac,%ax
		je     _0249dc_jump
		jmp    _024a3a_jump

	_02474f_jump:
		call   _0645b0_func
		xor    %eax,%eax
		mov    _0c24d6_data,%al
		cmp    $0x00000c,%eax
		je     _024a3a_jump
		xor    %eax,%eax
		mov    _0c24d8_data,%al
		cmp    $0x00000c,%eax
		je     _024a3a_jump
		xor    %eax,%eax
		mov    _0c24d7_data,%al
		cmp    $0x00000c,%eax
		je     _024a3a_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000005,%eax
		je     _024a3a_jump
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b28_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c1b88_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _0247dc_jump
		xor    %edx,%edx
		mov    _0c1b54_data,%bx
		mov    %dx,_0c1b5e_data
		mov    _0c1b48_data,%edx
		add    $0x000010,%ebx
		add    $0x000010,%edx
		mov    %bx,_0c1b54_data
		mov    %edx,_0c1b48_data

	_0247dc_jump:
		cmpb   $0x000000,_0c5184_data
		je     _024818_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _024809_jump
		mov    _0c1b88_data,%al
		cmp    $0x000028,%eax
		jne    _024809_jump
		mov    $0x00001a,%ebx
		mov    $0x000002,%edx
		jmp    _0248ca_jump

	_024809_jump:
		mov    $0x00001c,%ebx
		mov    $0x000002,%edx
		jmp    _0248ca_jump

	_024818_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000001,%eax
		jne    _02485b_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000009,%eax
		je     _024835_jump
		cmp    $0x00000b,%eax
		jne    _02485b_jump

	_024835_jump:
		mov    _0c1b9d_data,%ah
		test   $0x000008,%ah
		sete   %al
		and    $0x000001,%al
		mov    %ah,%dl
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,_0c1b9d_data
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,_0c1b9d_data

	_02485b_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _024869_jump
		neg    %eax

	_024869_jump:
		cmp    $0x000002,%eax
		jg     _0248b6_jump
		xor    %eax,%eax
		call   _065064_func
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000040,0x000007(%ebx,%eax,1)
		jne    _0248aa_jump
		mov    $0x000018,%ebx
		mov    $0x000002,%edx
		jmp    _0248ca_jump

	_0248aa_jump:
		mov    $0x000021,%ebx
		mov    $0x000002,%edx
		jmp    _0248ca_jump

	_0248b6_jump:
		mov    $0x000001,%eax
		mov    $0x000020,%ebx
		mov    $0x000002,%edx
		call   _065064_func

	_0248ca_jump:
		mov    %ecx,%eax
		call   _01d4a8_func
		xor    %eax,%eax
		xor    %esi,%esi
		mov    _0c256c_data,%al
		mov    %si,_0c24c4_data
		test   %eax,%eax
		je     _0248ef_jump
		cmpw   $0x000000,_0c2568_data
		je     _0248fd_jump

	_0248ef_jump:
		movw   $0x000001,_0c1b64_data
		jmp    _024a3a_jump

	_0248fd_jump:
		mov    %si,_0c1b64_data
		jmp    _024a3a_jump

	_024909_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		jmp    _024a3a_jump

	_02492d_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d4a0_func
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		je     _024954_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d498_func
		jmp    _024a3a_jump

	_024954_jump:
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d498_func
		jmp    _024a3a_jump

	_024965_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d4a8_func
		jmp    _024a3a_jump

	_024978_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		movb   $0x000007,0x000072(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _024a3a_jump

	_024998_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _058bb4_func
		jmp    _024a3a_jump

	_0249ab_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		movb   $0x0000ff,0x00007c(%ecx)
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _024a3a_jump

	_0249dc_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		mov    $0x00000f,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _058bb4_func
		jmp    _024a3a_jump

	_0249fd_jump:
		cmp    $0x000041,%ax
		jb     _024a3a_jump
		jbe    _0249ab_jump
		cmp    $0x000064,%ax
		je     _024998_jump
		jmp    _024a3a_jump

	_024a0d_jump:
		cmp    $0x000003,%ax
		jb     _024a31_jump
		jbe    _024909_jump
		cmp    $0x000009,%ax
		jb     _024a3a_jump
		jbe    _024965_jump
		cmp    $0x000017,%ax
		je     _02474f_jump
		jmp    _024a3a_jump

	_024a31_jump:
		test   %ax,%ax
		je     _02492d_jump

	_024a3a_jump:
		movw   $0x000000,0x000052(%ecx)
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		movb   $0x000000,0x000071(%ecx)
		cmp    $0x000028,%eax
		je     _024a58_jump
		cmp    $0x00007a,%eax
		je     _024a58_jump
		movb   $0x000000,0x000072(%ecx)

	_024a58_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_024a60_func:
		push   %ebx
		push   %edx
		xor    %ebx,%ebx
		mov    0x000062(%eax),%bl
		xor    %dl,%dl
		cmp    $0x000009,%ebx
		jne    _024a92_jump
		mov    0x000040(%eax),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jl     _024a92_jump
		mov    0x000060(%eax),%ax
		and    $0x00ffff,%eax
		cmp    $0x000017,%eax
		je     _024a90_jump
		testb  $0x000008,_092246_data(,%eax,4)
		je     _024a92_jump

	_024a90_jump:
		mov    $0x000001,%dl

	_024a92_jump:
		mov    %dl,%al
		pop    %edx
		pop    %ebx
		ret    



_024a98_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x000062(%eax),%dl
		xor    %cl,%cl
		cmp    $0x000009,%edx
		jne    _024b24_jump
		mov    0x000040(%eax),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jl     _024b24_jump
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		cmp    $0x000017,%edx
		jne    _024b13_jump
		mov    $0x000001,%cl
		mov    $_0c1b1c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %cl,_0c24d3_data
		call   _01d4a8_func
		call   _0652ac_func
		mov    $0xffffffff,%edx
		mov    $0x0000f9,%eax
		call   _06ac04_func
		mov    $0x00000c,%edx
		mov    _0c1b5e_data,%bx
		mov    $_0c1b1c_data,%eax
		sub    $0x000003,%ebx
		mov    %dx,_0c24c4_data
		mov    %bx,_0c1b5e_data
		call   _073b58_func
		jmp    _024b24_jump

	_024b13_jump:
		testb  $0x000008,_092246_data(,%edx,4)
		je     _024b24_jump
		call   _02eb84_func
		mov    $0x000001,%cl

	_024b24_jump:
		mov    %cl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_024b2c_switch:
		.long   _024d6e_case
		.long   _024d6e_case
		.long   _024d24_case
		.long   _024d30_case
		.long   _024d37_case
		.long   _024d48_case
		.long   _024d59_case
		.long   _024d62_case
		.long   _024d6e_case
		.long   _024cd2_case
		.long   _024d6e_case
		.long   _024d6e_case
		.long   _024dca_case
		.long   _024d6e_case
		.long   _024cd2_case
		.long   _024cd2_case
		.long   _024d6e_case
		.long   _024d6e_case
		.long   _024d24_case
		.long   _024d30_case
		.long   _024d37_case
		.long   _024d48_case
		.long   _024d59_case
		.long   _024d62_case
		.long   _024d6e_case
		.long   _024d6e_case
		.long   _024d6e_case
		.long   _024d6e_case
		.long   _024d6e_case
		.long   _024d6e_case
		.long   _024cd2_case




_024ba8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		testb  $0x000001,_092246_data(,%edx,4)
		jne    _024bcc_jump
		cmp    $0x000017,%edx
		jne    _024eb9_jump

	_024bcc_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000010,_092245_data(,%eax,4)
		je     _024bf0_jump
		cmp    $0x000017,%eax
		je     _024bf0_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		call   _04d240_func
		mov    %eax,%edi
		jmp    _024bf4_jump

	_024bf0_jump:
		mov    0x000040(%ecx),%di

	_024bf4_jump:
		xor    %eax,%eax
		mov    0x000028(%ecx),%dx
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x00000c(%esp)
		mov    0x000069(%ecx),%al
		mov    0x00002c(%ecx),%dx
		add    %eax,%edx
		mov    0x00000c(%esp),%eax
		mov    %dx,0x000008(%esp)
		mov    %edx,%ebx
		xor    %ah,%ah
		xor    %dh,%bh
		and    $0x00000f,%al
		xor    %edx,%edx
		and    $0x00000f,%bl
		mov    0x000060(%ecx),%dx
		add    %edi,%eax
		cmp    $0x000017,%edx
		jne    _024c6d_jump
		mov    _0c1b6a_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _024c6d_jump
		movswl %di,%edx
		test   %edx,%edx
		jle    _024c4c_jump
		mov    $0x00000f,%eax
		jmp    _024c50_jump

	_024c4c_jump:
		jge    _024c50_jump
		xor    %eax,%eax

	_024c50_jump:
		xor    %edx,%edx
		mov    0x000062(%ecx),%dl
		lea    0x000000(,%edx,4),%esi
		cwtl   
		movswl %bx,%edx
		call   *_0cdafc_data(%esi)
		mov    %eax,%ebx
		jmp    _024c83_jump

	_024c6d_jump:
		xor    %edx,%edx
		mov    0x000062(%ecx),%dl
		lea    0x000000(,%edx,4),%esi
		cwtl   
		movswl %bx,%edx
		call   *_0cdafc_data(%esi)

	_024c83_jump:
		sub    %ebx,%eax
		mov    0x000008(%esp),%ebx
		add    %eax,%ebx
		mov    %ax,0x000010(%esp)
		movswl %bx,%eax
		mov    0x00000c(%esp),%esi
		sar    $0x000004,%eax
		add    %edi,%esi
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		mov    %eax,(%esp)
		xor    %bh,%bh
		mov    (%esp),%eax
		and    $0x00000f,%bl
		cwtl   
		and    $0x00000f,%esi
		call   _01e288_func
		mov    %al,0x000014(%esp)
		cmp    $0x00001e,%al
		ja     _024d6e_case
		and    $0x0000ff,%eax
		jmp    *%cs:_024b2c_switch(,%eax,4)

	_024cd2_case:
		mov    0x000006(%esp),%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		sub    $0x000010,%eax
		mov    0x00000a(%esp),%ebp
		sar    $0x000004,%eax
		sar    $0x000010,%ebp
		movswl %ax,%edx
		movswl %di,%eax
		add    %ebp,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e288_func
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%edi
		movswl %bx,%edx
		movswl %si,%eax
		call   *_0cdbfc_data(%edi)
		mov    %ebx,%edx
		sub    $0x000010,%edx
		add    %eax,%edx
		jmp    _024dd0_jump

	_024d24_case:
		mov    $0x00000f,%edx
		sub    %esi,%edx
		jmp    _024dd0_jump

	_024d30_case:
		mov    %esi,%edx
		jmp    _024dd0_jump

	_024d37_case:
		movswl %si,%eax
		mov    $0x00000f,%edx
		sar    %eax
		sub    %eax,%edx
		jmp    _024dd0_jump

	_024d48_case:
		movswl %si,%eax
		mov    $0x000007,%edx
		sar    %eax
		sub    %eax,%edx
		jmp    _024dd0_jump

	_024d59_case:
		movswl %si,%eax
		sar    %eax
		mov    %eax,%edx
		jmp    _024dd0_jump

	_024d62_case:
		movswl %si,%eax
		sar    %eax
		add    $0x000008,%eax
		mov    %eax,%edx
		jmp    _024dd0_jump

	_024d6e_case:
		mov    0x000008(%esp),%eax
		mov    0x000010(%esp),%edx
		mov    0x00000c(%esp),%esi
		add    %edx,%eax
		add    %esi,%edi
		add    $0x000010,%eax
		mov    %edi,%edx
		mov    %eax,%esi
		xor    %dh,%dh
		cwtl   
		and    $0x00000f,%dl
		sar    $0x000004,%eax
		mov    %dx,0x000004(%esp)
		movswl %ax,%edx
		movswl %di,%eax
		sar    $0x000004,%eax
		and    $0x00000f,%esi
		cwtl   
		sub    $0x000010,%esi
		call   _01e288_func
		movzbl %al,%edi
		mov    0x000002(%esp),%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		call   *_0cdcfc_data(,%edi,4)
		mov    %eax,%edx
		sub    %esi,%edx
		movswl %dx,%eax
		cmp    $0x000002,%eax
		jle    _024dce_jump

	_024dca_case:
		mov    %ebx,%edx
		jmp    _024dd0_jump

	_024dce_jump:
		add    %ebx,%edx

	_024dd0_jump:
		mov    %ecx,%eax
		call   _024a98_func
		test   %al,%al
		jne    _024eb9_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x000017,%eax
		jne    _024ea6_jump
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _024e5c_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		je     _024e5c_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _024e13_jump
		neg    %eax

	_024e13_jump:
		cmp    $0x000002,%eax
		jle    _024e5c_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _024e24_jump
		neg    %eax

	_024e24_jump:
		cmp    $0x000010,%eax
		jge    _024e5c_jump
		xor    %eax,%eax
		mov    0x000014(%esp),%al
		testb  $0x000002,_092204_data(%eax)
		jne    _024e5c_jump
		mov    $_0c1b1c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000042(%ecx),%si
		call   _01d4a8_func
		movb   $0x000001,_0c24d3_data
		call   _0652ac_func
		mov    %si,0x000042(%ecx)
		jmp    _024eb9_jump

	_024e5c_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _024e74_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000020,%eax
		je     _024eb9_jump

	_024e74_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _024e8c_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000026,%eax
		je     _024eb9_jump

	_024e8c_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _024ea8_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000016,%eax
		je     _024eb9_jump
		jmp    _024ea8_jump

	_024ea6_jump:
		je     _024eb9_jump

	_024ea8_jump:
		add    0x000010(%esp),%edx
		sub    %ebx,%edx
		mov    %ecx,%eax
		mov    %dx,0x000042(%ecx)
		call   _0246f4_func

	_024eb9_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_024ec4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		mov    0x000028(%ebx),%dx
		mov    0x00002c(%ebx),%si
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    0x000069(%ebx),%cl
		mov    0x000068(%ebx),%al
		add    %esi,%ecx
		add    %edx,%eax
		mov    %ecx,%esi
		mov    %eax,%edi
		movswl %cx,%edx
		and    $0x00fff0,%esi
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx
		cwtl   
		and    $0x00000f,%edi
		call   _01e288_func
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%ebp
		xor    %edx,%edx
		movswl %di,%eax
		call   *_0cddfc_data(%ebp)
		xor    %edx,%edx
		mov    0x000060(%ebx),%dx
		cmp    $0x000017,%edx
		je     _024f36_jump
		movswl %si,%edx
		cwtl   
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%ebx),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%ebx)
		jmp    _024f3e_jump

	_024f36_jump:
		add    %esi,%eax
		sub    %ecx,%eax
		mov    %ax,0x000042(%ebx)

	_024f3e_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_024f48_func:
		mov    %edx,%eax
		inc    %eax
		ret    



_024f4c_func:
		mov    $0x00000f,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		lea    0x000000(%eax),%eax

	_024f58_jump:
		ret    



_024f5c_func:
		cwtl   
		mov    $0x00000f,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		ret    



_024f6c_func:
		cwtl   
		mov    $0x000007,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		ret    



_024f7c_func:
		cwtl   
		sar    %eax
		ret    



_024f80_func:
		cwtl   
		sar    %eax
		add    $0x000008,%eax
		ret    

	_024f88_jump:
		mov    %edx,%eax
		ret    

	_024f8c_jump:
		xor    %eax,%eax
		ret    

	_024f90_jump:
		mov    $0x000010,%eax
		ret    

_024f98_switch:
		.long   _025044_case
		.long   _025044_case
		.long   _025079_case
		.long   _02509e_case
		.long   _0250c3_case
		.long   _0250e8_case
		.long   _025112_case
		.long   _025139_case
		.long   _025044_case
		.long   _025189_case
		.long   _025044_case
		.long   _025044_case
		.long   _02515b_case
		.long   _025044_case
		.long   _025189_case
		.long   _025189_case
		.long   _025044_case
		.long   _025044_case
		.long   _025079_case
		.long   _02509e_case
		.long   _0250c3_case
		.long   _0250e8_case
		.long   _025112_case
		.long   _025139_case
		.long   _025044_case
		.long   _025044_case
		.long   _025044_case
		.long   _025044_case
		.long   _025044_case
		.long   _025044_case
		.long   _025189_case




_025014_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_024f4c_func,%esi
		mov    $_024f58_jump,%edi
		mov    $_024f5c_func,%ecx
		xor    %al,%al
		mov    $_024f80_func,%ebp
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000040,%edx
		jl     _0251c0_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025044_case:
		xor    %edx,%edx
		mov    %al,%dl
		movl   $_024f48_func,_0cdafc_data(,%edx,4)
		movl   $_024f90_jump,_0cdbfc_data(,%edx,4)
		movl   $_024f88_jump,_0cdcfc_data(,%edx,4)
		movl   $_024f8c_jump,_0cddfc_data(,%edx,4)
		jmp    _0251ae_jump

	_025079_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,_0cdafc_data(,%edx,4)
		mov    %esi,_0cdbfc_data(,%edx,4)
		mov    %esi,_0cdcfc_data(,%edx,4)
		mov    %esi,_0cddfc_data(,%edx,4)
		jmp    _0251ae_jump

	_02509e_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edi,_0cdafc_data(,%edx,4)
		mov    %edi,_0cdbfc_data(,%edx,4)
		mov    %edi,_0cdcfc_data(,%edx,4)
		mov    %edi,_0cddfc_data(,%edx,4)
		jmp    _0251ae_jump

	_0250c3_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ecx,_0cdafc_data(,%edx,4)
		mov    %ecx,_0cdbfc_data(,%edx,4)
		mov    %ecx,_0cdcfc_data(,%edx,4)
		mov    %ecx,_0cddfc_data(,%edx,4)
		jmp    _0251ae_jump

	_0250e8_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_024f6c_func,%ebx
		mov    %ebx,_0cdafc_data(,%edx,4)
		mov    %ebx,_0cdbfc_data(,%edx,4)
		mov    %ebx,_0cdcfc_data(,%edx,4)
		mov    %ebx,_0cddfc_data(,%edx,4)
		jmp    _0251ae_jump

	_025112_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_024f7c_func,%ebx
		mov    %ebx,_0cdafc_data(,%edx,4)
		mov    %ebx,_0cdbfc_data(,%edx,4)
		mov    %ebx,_0cdcfc_data(,%edx,4)
		mov    %ebx,_0cddfc_data(,%edx,4)
		jmp    _0251ae_jump

	_025139_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebp,_0cdafc_data(,%edx,4)
		mov    %ebp,_0cdbfc_data(,%edx,4)
		mov    %ebp,_0cdcfc_data(,%edx,4)
		mov    %ebp,_0cddfc_data(,%edx,4)
		jmp    _0251ae_jump

	_02515b_case:
		movl   $_024f88_jump,_0cdafc_data(,%edx,4)
		movl   $_024f90_jump,_0cdbfc_data(,%edx,4)
		movl   $_024f88_jump,_0cdcfc_data(,%edx,4)
		movl   $_024f8c_jump,_0cddfc_data(,%edx,4)
		jmp    _0251ae_jump

	_025189_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_024f8c_jump,%ebx
		mov    %ebx,_0cdafc_data(,%edx,4)
		mov    %ebx,_0cdbfc_data(,%edx,4)
		mov    %ebx,_0cdcfc_data(,%edx,4)
		mov    %ebx,_0cddfc_data(,%edx,4)

	_0251ae_jump:
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000040,%edx
		jl     _0251c0_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0251c0_jump:
		cmp    $0x00001e,%al
		ja     _025044_case
		xor    %ebx,%ebx
		mov    %al,%bl
		jmp    *%cs:_024f98_switch(,%ebx,4)



_0251e0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000044,%esp
		mov    %eax,%ecx
		mov    _0d6c34_data,%eax
		mov    %eax,0x000018(%esp)
		call   _010010_func
		mov    0x000018(%esp),%eax
		movw   $0x000000,0x000006(%eax)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _025212_jump
		mov    %ebx,%eax

	_025212_jump:
		mov    0x000018(%esp),%ebx
		mov    %ax,0x000008(%ebx)
		movswl %dx,%ebx
		test   %ebx,%ebx
		jl     _02522e_jump
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _02522c_jump
		mov    %ebx,%eax

	_02522c_jump:
		jmp    _02523d_jump

	_02522e_jump:
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _02523b_jump
		mov    %ebx,%eax

	_02523b_jump:
		neg    %eax

	_02523d_jump:
		mov    0x000018(%esp),%edx
		mov    %ax,0x00000a(%edx)
		xor    %eax,%eax
		mov    $0x000046,%ebx
		mov    %cx,%ax
		cmp    %ebx,%eax
		jle    _025255_jump
		mov    %ebx,%eax

	_025255_jump:
		mov    %eax,%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jge    _025262_jump
		mov    %ebx,%eax

	_025262_jump:
		mov    %al,0x00000c(%edx)
		xor    %eax,%eax
		mov    0x000001(%edx),%al
		call   _07806f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54524550,%eax
		mov    $0x400921fb,%edx
		call   _07885a_func
		mov    %edx,0x000010(%esp)
		mov    0x000018(%esp),%edx
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%edx),%al
		call   _07806f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54524550,%eax
		mov    $0x401921fb,%edx
		call   _07885a_func
		mov    $0xbff921fb,%ebx
		mov    %eax,0x000004(%esp)
		mov    0x000018(%esp),%eax
		mov    %edx,0x000024(%esp)
		mov    $0x54524550,%edx
		mov    0x000020(%eax),%eax
		mov    %ebx,0x000020(%esp)
		mov    %eax,0x000028(%esp)
		xor    %ah,%ah
		mov    %edx,0x000008(%esp)
		mov    %ah,0x000034(%esp)
		jmp    _02530b_jump

	_0252d6_jump:
		mov    0x000008(%esp),%eax
		mov    0x000020(%esp),%edx
		mov    (%esp),%ebx
		mov    0x000010(%esp),%ecx
		call   _0780a8_func
		mov    %edx,0x000020(%esp)
		mov    0x000034(%esp),%dl
		inc    %dl
		mov    %eax,0x000008(%esp)
		mov    %dl,0x000034(%esp)
		mov    %dl,%al
		mov    0x000018(%esp),%edx
		cmp    0x000001(%edx),%al
		ja     _025425_jump

	_02530b_jump:
		mov    0x000018(%esp),%edx
		xor    %eax,%eax
		mov    0x00000c(%edx),%al
		call   _07806f_func
		mov    %eax,%ebx
		mov    %edx,%edi
		mov    0x000008(%esp),%eax
		mov    0x000020(%esp),%edx
		call   _078c99_func
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    %ebx,%eax
		mov    %edi,%edx
		mov    %esi,%ebx
		call   _07825f_func
		mov    %edx,0x00002c(%esp)
		mov    0x000018(%esp),%edx
		mov    %eax,0x000014(%esp)
		xor    %eax,%eax
		mov    0x00000c(%edx),%al
		call   _07806f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000008(%esp),%eax
		mov    0x000020(%esp),%edx
		call   _078cc0_func
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%eax
		mov    %ecx,%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07825f_func
		mov    %eax,0x00001c(%esp)
		mov    %edx,0x000030(%esp)
		xor    %esi,%esi
		xor    %bh,%bh
		xor    %edi,%edi
		mov    %bh,0x000040(%esp)

	_025383_jump:
		mov    %esi,%eax
		mov    %edi,%edx
		call   _078c99_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00001c(%esp),%eax
		mov    0x000030(%esp),%edx
		call   _078d08_func
		mov    %eax,%ebp
		mov    %edx,0x00000c(%esp)
		call   _07825f_func
		call   _078d1c_func
		mov    0x000028(%esp),%edx
		mov    %ax,(%edx)
		mov    0x000014(%esp),%eax
		mov    0x00002c(%esp),%edx
		call   _078d1c_func
		mov    0x000028(%esp),%edx
		mov    %ax,0x000002(%edx)
		mov    %esi,%eax
		mov    %edi,%edx
		call   _078cc0_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00000c(%esp),%edx
		mov    %ebp,%eax
		call   _07825f_func
		call   _078d1c_func
		mov    0x000028(%esp),%edx
		mov    0x000004(%esp),%ebx
		lea    0x00000a(%edx),%ecx
		mov    %ax,0x000004(%edx)
		mov    %ecx,0x000028(%esp)
		mov    %esi,%eax
		mov    %edi,%edx
		mov    0x000024(%esp),%ecx
		call   _0780a8_func
		mov    %eax,%esi
		mov    0x000040(%esp),%al
		mov    %edx,%edi
		inc    %al
		mov    0x000018(%esp),%edx
		mov    %al,0x000040(%esp)
		cmp    (%edx),%al
		ja     _0252d6_jump
		jmp    _025383_jump

	_025425_jump:
		mov    0x000018(%esp),%eax
		mov    0x000018(%esp),%ebx
		xor    %ecx,%ecx
		mov    0x000002(%eax),%dx
		mov    0x000024(%ebx),%ebx
		test   %dx,%dx
		jbe    _025485_jump

	_02543b_jump:
		xor    %edx,%edx
		mov    0x000018(%esp),%esi
		mov    %cx,%dx
		movzbl (%esi),%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ecx,%edx
		add    %eax,%edx
		mov    %edx,%eax
		mov    %dx,(%ebx)
		inc    %edx
		mov    0x000018(%esp),%esi
		mov    %dx,0x000002(%ebx)
		xor    %dh,%dh
		mov    (%esi),%dl
		add    %eax,%edx
		add    $0x000002,%edx
		mov    %dx,0x000004(%ebx)
		xor    %dh,%dh
		mov    (%esi),%dl
		add    %edx,%eax
		inc    %eax
		mov    %ax,0x000006(%ebx)
		inc    %ecx
		mov    0x000002(%esi),%si
		add    $0x000034,%ebx
		cmp    %si,%cx
		jb     _02543b_jump

	_025485_jump:
		mov    0x000018(%esp),%eax
		mov    _0d6c2a_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    (%eax),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ecx,%ecx
		mov    _0d6c2c_data,%edx
		mov    %al,%bh
		mov    0x000018(%esp),%eax
		sar    $0x000010,%edx
		mov    0x000001(%eax),%cl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    0x000018(%esp),%edx
		mov    %al,0x00003c(%esp)
		xor    %cl,%cl
		mov    0x000018(%esp),%eax
		mov    %cl,0x000038(%esp)
		mov    0x000001(%edx),%ch
		mov    0x000024(%eax),%eax
		test   %ch,%ch
		jbe    _025598_jump
		jmp    _0254f1_jump

	_0254da_jump:
		mov    0x000038(%esp),%dl
		inc    %dl
		mov    0x000018(%esp),%ecx
		mov    %dl,0x000038(%esp)
		cmp    0x000001(%ecx),%dl
		jae    _025598_jump

	_0254f1_jump:
		mov    0x000018(%esp),%edx
		mov    (%edx),%cl
		xor    %bl,%bl
		test   %cl,%cl
		jbe    _0254da_jump
		jmp    _02555f_jump

	_0254ff_jump:
		xor    %esi,%esi
		mov    %dx,%si
		cmp    $0x0000a0,%esi
		jge    _025518_jump
		mov    0x000018(%esp),%esi
		mov    0x000018(%esi),%esi
		mov    %esi,0x000008(%eax)
		jmp    _025528_jump

	_025518_jump:
		mov    0x000018(%esp),%esi
		mov    0x00001c(%esi),%esi
		sub    $0x0000a0,%edx
		mov    %esi,0x000008(%eax)

	_025528_jump:
		mov    %dl,0x00002e(%eax)
		mov    %dl,0x00002c(%eax)
		mov    0x00003c(%esp),%dh
		add    %cl,%dh
		dec    %dh
		mov    %dh,0x000031(%eax)
		mov    %dh,0x00002f(%eax)
		add    %bh,%dl
		mov    %cl,0x000033(%eax)
		dec    %dl
		mov    %dl,0x000032(%eax)
		mov    %dl,0x000030(%eax)
		mov    0x000018(%esp),%edx
		mov    %cl,0x00002d(%eax)
		inc    %bl
		mov    (%edx),%ch
		add    $0x000034,%eax
		cmp    %ch,%bl
		jae    _0254da_jump

	_02555f_jump:
		xor    %dh,%dh
		xor    %ch,%ch
		mov    %bl,%dl
		mov    %bh,%cl
		imul   %ecx,%edx
		movzbw 0x000038(%esp),%si
		mov    0x00003c(%esp),%cl
		imul   %esi,%ecx
		mov    _0d6c2a_data,%esi
		sar    $0x000010,%esi
		cmp    $0x000100,%esi
		jg     _0254ff_jump
		mov    0x000018(%esp),%esi
		mov    0x000018(%esi),%esi
		mov    %esi,0x000008(%eax)
		jmp    _025528_jump

	_025598_jump:
		mov    0x000018(%esp),%eax
		movb   $0x000001,0x00000d(%eax)
		add    $0x000044,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0255a8_case:
		push   %edx
		mov    _0d6c34_data,%edx
		test   %edx,%edx
		je     _0255e2_jump
		cmpl   $0x000000,0x000020(%edx)
		je     _0255c1_jump
		lea    0x000020(%edx),%eax
		call   _077858_func

	_0255c1_jump:
		cmpl   $0x000000,0x000024(%edx)
		je     _0255cf_jump
		lea    0x000024(%edx),%eax
		call   _077858_func

	_0255cf_jump:
		cmpl   $0x000000,_0d6c34_data
		je     _0255e2_jump
		mov    $_0d6c34_data,%eax
		call   _077858_func

	_0255e2_jump:
		pop    %edx
		ret    



_0255e4_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %edx,0x000004(%esp)
		mov    %ebx,(%esp)
		mov    %cx,0x000008(%esp)
		mov    $0x000100,%edx
		mov    $0x0000c8,%ebx
		mov    $0x000020,%eax
		xor    %cl,%cl
		mov    %dx,_0d6c2c_data
		xor    %edx,%edx
		mov    %bx,_0d6c2e_data
		mov    %dx,_0d6c32_data
		mov    0x00001c(%esp),%edx
		mov    %ax,_0d6c30_data
		test   %edx,%edx
		je     _025713_jump
		cmpl   $0x000000,0x000020(%esp)
		je     _025713_jump
		mov    $0x00003c,%eax
		call   _077840_func
		mov    %eax,%edx
		mov    %eax,_0d6c34_data
		test   %eax,%eax
		je     _025713_jump
		mov    %eax,%esi
		xor    %ebx,%ebx
		mov    $0x000002,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _025667_jump
		mov    %ebx,%eax

	_025667_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    0x000004(%esp),%bx
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _02567b_jump
		mov    %ebx,%eax

	_02567b_jump:
		mov    %al,0x000001(%edx)
		mov    0x000004(%esp),%eax
		imul   %edi,%eax
		mov    %ax,0x000002(%edx)
		mov    0x000004(%esp),%eax
		inc    %edi
		inc    %eax
		imul   %eax,%edi
		mov    0x00001c(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x000010(%edx)
		mov    0x000020(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000014(%edx)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		mov    %di,0x000004(%edx)
		call   _077840_func
		mov    %eax,0x000024(%edx)
		test   %eax,%eax
		je     _025713_jump
		xor    %ebx,%ebx
		mov    0x000004(%edx),%bx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		call   _077840_func
		mov    %eax,0x000020(%edx)
		test   %eax,%eax
		je     _025713_jump
		mov    _0cdf00_data,%eax
		mov    %eax,0x000018(%edx)
		mov    _0d6c2a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000100,%eax
		jg     _025704_jump
		movl   $0x000000,0x00001c(%edx)
		jmp    _025711_jump

	_025704_jump:
		mov    _0cdf00_data,%eax
		add    $0x00c800,%eax
		mov    %eax,0x00001c(%edx)

	_025711_jump:
		mov    $0x000001,%cl

	_025713_jump:
		test   %cl,%cl
		je     _02579d_jump
		mov    _0d6c2a_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0x000100,%ebx
		jg     _025755_jump
		mov    _0d6c30_data,%edi
		sar    $0x000010,%edi
		lea    0x000000(,%edi,4),%eax
		mov    0x000018(%esi),%edx
		add    %edi,%eax
		mov    0x000010(%esi),%esi
		shl    $0x000006,%eax
		add    %eax,%esi
		mov    _0d6c2e_data,%eax
		sar    $0x000010,%eax
		add    %esi,%eax
		jmp    _025775_jump

	_025755_jump:
		mov    $0x0000a0,%ebx
		mov    0x000018(%esi),%edx
		mov    0x000010(%esi),%eax
		call   _075f40_func
		mov    $0x0000a0,%ebx
		mov    0x000010(%esi),%eax
		mov    0x00001c(%esi),%edx
		add    $0x0000a0,%eax

	_025775_jump:
		call   _075f40_func
		mov    0x000006(%esp),%edx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000018(%esp),%bx
		mov    (%esp),%ax
		sar    $0x000010,%edx
		call   _0251e0_func
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c

	_02579d_jump:
		call   _0255a8_case
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_0257ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    _0d6c34_data,%esi
		xor    %eax,%eax
		mov    0x00000d(%esi),%al
		mov    0x000020(%esi),%ecx
		cmp    $0x000001,%eax
		jne    _02595d_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _0257e2_jump
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		mov    %eax,0x00000c(%esp)
		jmp    _0257f4_jump

	_0257e2_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000008(%esi),%dx
		mov    0x000006(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x00000c(%esp)

	_0257f4_jump:
		mov    _0d6c2a_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    (%esi),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0d6c2c_data,%edx
		mov    %al,0x000038(%esp)
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000001(%esi),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %al,0x000034(%esp)
		mov    _0d6c30_data,%eax
		sar    $0x000010,%eax
		xor    %bl,%bl
		sub    $0x000064,%eax
		mov    %bl,0x000024(%esp)
		mov    %eax,0x000004(%esp)
		jmp    _025861_jump

	_02583c_jump:
		mov    0x000004(%esp),%edx
		mov    0x000024(%esp),%bh
		xor    %eax,%eax
		inc    %bh
		mov    0x000034(%esp),%al
		mov    %bh,0x000024(%esp)
		add    %eax,%edx
		mov    0x000001(%esi),%ah
		mov    %edx,0x000004(%esp)
		cmp    %ah,%bh
		ja     _025911_jump

	_025861_jump:
		mov    _0d6c2e_data,%ebp
		xor    %dl,%dl
		sar    $0x000010,%ebp
		mov    %dl,0x00002c(%esp)
		sub    $0x0000a0,%ebp

	_025876_jump:
		mov    0x000002(%ecx),%ebx
		movswl (%ecx),%edx
		sar    $0x000010,%ebx
		shl    $0x000009,%edx
		add    $0x000200,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    (%ecx),%edx
		sar    $0x000010,%edx
		shl    $0x000009,%edx
		mov    %eax,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %ebp,%edx
		mov    0x00000c(%esp),%eax
		sub    %edi,%edx
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000008(%esi),%ax
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		add    $0x0000a0,%edi
		mov    0x000004(%esp),%edx
		add    %edi,%eax
		mov    0x00000c(%esp),%edi
		sub    %ebx,%edx
		imul   %edi,%edx
		mov    %ax,0x000006(%ecx)
		mov    %edx,%eax
		xor    %edi,%edi
		sar    $0x00001f,%edx
		mov    0x000008(%esi),%di
		idiv   %edi
		add    $0x00000a,%ecx
		add    $0x000064,%ebx
		mov    0x00002c(%esp),%dh
		add    %ebx,%eax
		inc    %dh
		mov    %ax,-0x000002(%ecx)
		xor    %eax,%eax
		mov    %dh,0x00002c(%esp)
		mov    0x000038(%esp),%al
		mov    (%esi),%bl
		add    %eax,%ebp
		cmp    %bl,%dh
		ja     _02583c_jump
		jmp    _025876_jump

	_025911_jump:
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02591d_jump
		neg    %eax

	_02591d_jump:
		mov    0x000006(%esi),%bx
		add    %eax,%ebx
		mov    0x000008(%esi),%cx
		mov    %bx,0x000006(%esi)
		cmp    %cx,%bx
		jbe    _025c81_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _025947_jump
		movb   $0x000002,0x00000d(%esi)
		jmp    _025c81_jump

	_025947_jump:
		movw   $0x000000,0x000006(%esi)
		mov    0x000006(%esi),%bx
		mov    %ebx,%eax
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02595d_jump:
		cmp    $0x000002,%eax
		jne    _0259aa_jump
		movw   $0x0000a0,0x000028(%esi)
		movw   $0x000064,0x00002a(%esi)
		movw   $0x000008,0x00002c(%esi)
		movw   $0x00000a,0x00002e(%esi)
		movb   $0x000000,0x000034(%esi)
		movb   $0x000000,0x000035(%esi)
		movb   $0x000000,0x000036(%esi)
		movw   $0x000000,0x000030(%esi)
		movw   $0x000000,0x000032(%esi)
		movb   $0x000000,0x00000d(%esi)
		movw   $0x000000,0x000006(%esi)
		movw   $0x0003e8,0x000008(%esi)
		movb   $0x000000,0x000037(%esi)
		movb   $0x000000,0x000038(%esi)

	_0259aa_jump:
		cmpb   $0x000000,0x000036(%esi)
		je     _0259c3_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0259bc_jump
		neg    %eax

	_0259bc_jump:
		shl    $0x000002,%eax
		add    %ax,0x000032(%esi)

	_0259c3_jump:
		xor    %eax,%eax
		mov    0x00000c(%esi),%al
		mov    $0x000140,%edx
		add    $0x000004,%eax
		sub    %eax,%edx
		mov    0x00002e(%esi),%bx
		mov    %edx,%eax
		xor    %edx,%edx
		inc    %ebx
		mov    0x000028(%esi),%dx
		mov    %bx,0x00002e(%esi)
		cmp    %eax,%edx
		jle    _025a10_jump
		xor    %eax,%eax
		mov    0x000035(%esi),%al
		test   %eax,%eax
		jne    _025a10_jump
		mov    0x00002c(%esi),%ax
		neg    %eax
		movb   $0x000001,0x000035(%esi)
		inc    %eax
		mov    0x000038(%esi),%dl
		mov    %ax,0x00002c(%esi)
		test   %dl,%dl
		je     _025a0a_jump
		movb   $0x000001,0x000037(%esi)

	_025a0a_jump:
		movb   $0x000001,0x000038(%esi)
		jmp    _025a5d_jump

	_025a10_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x00000c(%esi),%al
		mov    0x000028(%esi),%dx
		add    $0x000004,%eax
		cmp    %eax,%edx
		jge    _025a3c_jump
		xor    %eax,%eax
		mov    0x000035(%esi),%al
		test   %eax,%eax
		jne    _025a3c_jump
		mov    0x00002c(%esi),%ax
		neg    %eax
		movb   $0x000001,0x000035(%esi)
		dec    %eax
		mov    %ax,0x00002c(%esi)
		jmp    _025a5d_jump

	_025a3c_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00000c(%esi),%dl
		mov    0x000028(%esi),%ax
		add    $0x000004,%edx
		cmp    %edx,%eax
		jg     _025a59_jump
		mov    $0x000140,%ebx
		sub    %edx,%ebx
		cmp    %ebx,%eax
		jge    _025a5d_jump

	_025a59_jump:
		movb   $0x000000,0x000035(%esi)

	_025a5d_jump:
		xor    %eax,%eax
		mov    0x00000c(%esi),%al
		mov    $0x0000c8,%edx
		add    $0x000003,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    0x00002a(%esi),%ax
		cmp    %edx,%eax
		jle    _025a9f_jump
		xor    %eax,%eax
		mov    0x000034(%esi),%al
		test   %eax,%eax
		jne    _025a9f_jump
		mov    0x000037(%esi),%al
		test   %eax,%eax
		jne    _025a9f_jump
		mov    0x00002e(%esi),%ax
		movb   $0x000001,0x000034(%esi)
		neg    %eax
		movb   $0x000001,0x000036(%esi)
		add    $0x000002,%eax
		mov    %ax,0x00002e(%esi)
		jmp    _025acf_jump

	_025a9f_jump:
		xor    %eax,%eax
		mov    0x00000c(%esi),%al
		mov    $0x0000c8,%ebx
		lea    0x000003(%eax),%edx
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    0x00002a(%esi),%dx
		cmp    %ebx,%edx
		jg     _025abe_jump
		movb   $0x000000,0x000034(%esi)
		jmp    _025acf_jump

	_025abe_jump:
		add    $0x0000cb,%eax
		cmp    %eax,%edx
		jl     _025acf_jump
		mov    0x000008(%esi),%ax
		mov    %ax,0x000006(%esi)

	_025acf_jump:
		mov    0x00002a(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _025af0_jump
		neg    %eax

	_025af0_jump:
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ax
		add    %edx,%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%edx
		mov    %ax,0x000028(%esi)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _025b20_jump
		neg    %eax

	_025b20_jump:
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x00002a(%esi),%ax
		add    %edx,%eax
		mov    %ax,0x00002a(%esi)
		lea    0x000020(%esp),%ebx
		mov    0x00002e(%esi),%eax
		lea    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		call   _055868_func
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000008(%esp)
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000020(%esp),%ebx
		mov    %eax,0x000010(%esp)
		mov    0x000030(%esi),%eax
		lea    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		call   _055868_func
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000014(%esp)
		mov    0x00001e(%esp),%eax
		xor    %dh,%dh
		sar    $0x000010,%eax
		mov    %dh,0x000030(%esp)
		mov    %eax,0x000018(%esp)
		jmp    _025b9e_jump

	_025b89_jump:
		mov    0x000030(%esp),%bh
		inc    %bh
		mov    0x000001(%esi),%ah
		mov    %bh,0x000030(%esp)
		cmp    %ah,%bh
		ja     _025c44_jump

	_025b9e_jump:
		xor    %dl,%dl
		mov    %dl,0x000028(%esp)

	_025ba4_jump:
		mov    0x000014(%esp),%ebx
		movswl (%ecx),%eax
		imul   %eax,%ebx
		mov    (%ecx),%edx
		sar    $0x000010,%edx
		mov    %ebx,(%esp)
		mov    0x000018(%esp),%ebx
		imul   %edx,%ebx
		add    (%esp),%ebx
		mov    0x000018(%esp),%ebp
		imul   %eax,%ebp
		mov    0x000014(%esp),%eax
		imul   %edx,%eax
		mov    0x000002(%ecx),%edi
		mov    %ebp,%edx
		sar    $0x000010,%edi
		sub    %eax,%edx
		neg    %edi
		mov    %edx,%eax
		mov    0x000008(%esp),%edx
		imul   %edi,%edx
		mov    0x000010(%esp),%ebp
		sar    $0x000009,%eax
		imul   %eax,%ebp
		add    %ebp,%edx
		imul   0x000010(%esp),%edi
		imul   0x000008(%esp),%eax
		sub    %eax,%edi
		sar    $0x000009,%edi
		mov    %edx,%eax
		add    $0x000200,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		movzwl 0x000028(%esi),%ebp
		mov    %ebx,%edx
		add    %ebp,%eax
		sar    $0x00001f,%edx
		mov    %ax,0x000006(%ecx)
		mov    %ebx,%eax
		idiv   %edi
		movzwl 0x00002a(%esi),%ebp
		add    $0x00000a,%ecx
		add    %ebp,%eax
		mov    0x000028(%esp),%dh
		mov    %ax,-0x000002(%ecx)
		inc    %dh
		mov    (%esi),%bl
		mov    %dh,0x000028(%esp)
		cmp    %bl,%dh
		ja     _025b89_jump
		jmp    _025ba4_jump

	_025c44_jump:
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _025c50_jump
		neg    %eax

	_025c50_jump:
		mov    0x000030(%esi),%cx
		add    %eax,%eax
		add    %eax,%ecx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		mov    %cx,0x000030(%esi)
		test   %eax,%eax
		jge    _025c68_jump
		neg    %eax

	_025c68_jump:
		mov    0x000006(%esi),%di
		add    %eax,%edi
		mov    0x000008(%esi),%dx
		mov    %di,0x000006(%esi)
		cmp    %dx,%di
		jbe    _025c81_jump
		movw   $0x000000,0x000006(%esi)

	_025c81_jump:
		mov    0x000006(%esi),%bx
		mov    %ebx,%eax
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025c94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    _0d6c34_data,%eax
		xor    %edi,%edi
		mov    %eax,0x00000c(%esp)
		mov    0x000020(%eax),%ecx
		mov    0x000002(%eax),%bx
		mov    0x000024(%eax),%edx
		test   %bx,%bx
		jbe    _025dd6_jump
		lea    0x000008(%edx),%ebx

	_025cbe_jump:
		xor    %eax,%eax
		mov    (%edx),%ax
		imul   $0x00000a,%eax,%eax
		mov    0x000004(%ecx,%eax,1),%esi
		mov    0x000006(%ecx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000020(%esp)
		xor    %eax,%eax
		mov    0x000006(%edx),%ax
		imul   $0x00000a,%eax,%eax
		sar    $0x000010,%esi
		mov    %esi,0x000010(%esp)
		mov    0x000004(%ecx,%eax,1),%esi
		mov    0x000006(%ecx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000018(%esp)
		xor    %eax,%eax
		mov    0x000004(%edx),%ax
		imul   $0x00000a,%eax,%eax
		sar    $0x000010,%esi
		mov    %esi,0x00001c(%esp)
		lea    (%ecx,%eax,1),%esi
		mov    0x000004(%esi),%eax
		sar    $0x000010,%eax
		dec    %eax
		mov    %eax,0x000014(%esp)
		xor    %eax,%eax
		mov    0x000002(%edx),%ax
		imul   $0x00000a,%eax,%eax
		mov    0x000004(%ecx,%eax,1),%ebp
		sar    $0x000010,%ebp
		dec    %ebp
		mov    %ebp,0x000024(%esp)
		mov    0x000010(%esp),%ebp
		mov    0x000006(%ecx,%eax,1),%eax
		sub    0x000014(%esp),%ebp
		sar    $0x000010,%eax
		mov    %ebp,0x000004(%esp)
		mov    0x000018(%esp),%ebp
		sub    %eax,%ebp
		mov    %ebp,(%esp)
		mov    0x000004(%esp),%ebp
		imul   (%esp),%ebp
		mov    0x000006(%esi),%esi
		sar    $0x000010,%esi
		mov    %ebp,0x000004(%esp)
		mov    0x000020(%esp),%ebp
		sub    %esi,%ebp
		mov    %ebp,(%esp)
		mov    0x00001c(%esp),%ebp
		sub    0x000024(%esp),%ebp
		mov    %ebp,0x000008(%esp)
		mov    (%esp),%ebp
		imul   0x000008(%esp),%ebp
		mov    %ebp,0x000008(%esp)
		mov    0x000004(%esp),%ebp
		cmp    0x000008(%esp),%ebp
		jge    _025dbe_jump
		mov    %esi,0x000020(%edx)
		mov    0x000010(%esp),%ebp
		mov    %eax,0x000028(%edx)
		mov    0x000024(%esp),%esi
		mov    %ebp,0x00000c(%edx)
		mov    0x000020(%esp),%ebp
		mov    %esi,0x000024(%edx)
		mov    %ebp,0x000010(%edx)
		mov    0x00001c(%esp),%ebp
		mov    %ebp,0x000014(%edx)
		mov    0x000018(%esp),%ebp
		mov    %ebp,0x000018(%edx)
		mov    0x000014(%esp),%ebp
		mov    0x00000c(%esp),%eax
		mov    %ebp,0x00001c(%edx)
		mov    %ebx,%esi
		mov    0x000014(%eax),%eax
		call   _010045_func

	_025dbe_jump:
		mov    0x00000c(%esp),%eax
		add    $0x000034,%ebx
		inc    %edi
		mov    0x000002(%eax),%si
		add    $0x000034,%edx
		cmp    %si,%di
		jb     _025cbe_jump

	_025dd6_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025de0_func:
		mov    _0d6d26_data,%al
		ret    



_025df0_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0d6d26_data
		je     _025e32_jump
		mov    $0x000016,%edx
		mov    _0c25f0_data,%ax
		mov    $0x000001,%ebx
		mov    %ax,_0d6d28_data
		mov    %dx,_0c25f0_data
		mov    _0c25ee_data,%ax
		mov    %bx,_0c24f2_data
		mov    %ax,_0d6d2a_data
		mov    %bx,_0c25ee_data

	_025e32_jump:
		pop    %edx
		pop    %ebx
		ret    



_025e38_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _095b0d_data,%al
		test   %eax,%eax
		jne    _025ea2_jump
		mov    _0ce50c_data,%ax
		mov    %ax,_0d6d1e_data
		mov    _0ce510_data,%ax
		mov    $0x0000c8,%ecx
		mov    %ax,_0d6d20_data
		mov    _0ce504_data,%ax
		mov    $0x000140,%edx
		mov    %ax,_0d6d22_data
		mov    _0ce508_data,%ax
		xor    %ebx,%ebx
		mov    %ax,_0d6d24_data
		mov    $0x000004,%eax
		call   _0546ac_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		mov    $0x000004,%eax
		xor    %ecx,%ecx
		call   _016349_func

	_025ea2_jump:
		xor    %ah,%ah
		mov    %ah,_0d6d1a_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025eb0_func:
		mov    _0d6d28_data,%ax
		mov    %ax,_0c25f0_data
		mov    _0d6d2a_data,%ax
		mov    %ax,_0c25ee_data
		xor    %ah,%ah
		mov    %ah,_0d6d26_data
		ret    



_025ed4_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _095b0d_data,%al
		test   %eax,%eax
		jne    _025f26_jump
		mov    _0d6d22_data,%ecx
		mov    _0d6d20_data,%ebx
		mov    _0d6d1e_data,%edx
		mov    _0d6d1c_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0546ac_func
		mov    _0ce508_data,%edx
		mov    _0ce504_data,%ecx
		mov    _0ce510_data,%ebx
		mov    _0ce50c_data,%eax
		call   _016349_func

	_025f26_jump:
		movw   $0x000007,_0c24f2_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025f34_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _095efe_data,%dx
		mov    _0d6d02_data,%cx
		mov    _0d6d04_data,%si
		movswl %dx,%eax
		test   %eax,%eax
		jge    _025f59_jump
		add    $0x000048,%edx
		jmp    _025f61_jump

	_025f59_jump:
		cmp    $0x000048,%eax
		jle    _025f61_jump
		sub    $0x000048,%edx

	_025f61_jump:
		mov    $0x000012,%ebx
		movswl %dx,%eax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jl     _025f9c_jump
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0d6d00_data,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _095c7a_data(%eax),%cx
		mov    _095c7c_data(%eax),%ax
		mov    %eax,%esi
		jmp    _026044_jump

	_025f9c_jump:
		mov    $0x000024,%ebx
		sub    %edx,%ebx
		movswl %bx,%ebx
		test   %ebx,%ebx
		jl     _025fd3_jump
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0d6d00_data,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _095c7a_data(%eax),%cx
		mov    _095c7c_data(%eax),%ax
		neg    %ecx
		mov    %eax,%esi
		jmp    _026044_jump

	_025fd3_jump:
		mov    $0x000036,%ebx
		sub    %eax,%ebx
		test   %ebx,%ebx
		jl     _02600f_jump
		mov    %edx,%eax
		sub    $0x000024,%eax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0d6d00_data,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _095c7a_data(%eax),%cx
		mov    _095c7c_data(%eax),%ax
		mov    %eax,%esi
		neg    %ecx
		jmp    _026042_jump

	_02600f_jump:
		mov    $0x000048,%eax
		sub    %edx,%eax
		movswl %ax,%ebx
		test   %ebx,%ebx
		jl     _026044_jump
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0d6d00_data,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _095c7a_data(%eax),%cx
		mov    _095c7c_data(%eax),%ax
		mov    %eax,%esi

	_026042_jump:
		neg    %esi

	_026044_jump:
		mov    %si,_0d6d04_data
		mov    %cx,_0d6d02_data
		mov    %dx,_095efe_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026060_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_095efe_data
		mov    %ah,_0d6d00_data
		mov    %dx,_0d6d04_data
		mov    %dx,_0d6d02_data
		pop    %edx
		ret    



_026090_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000012,%edx
		xor    %ah,%ah
		mov    %dx,_095efe_data
		mov    %ah,_0d6d00_data
		call   _025f34_func
		pop    %edx
		ret    



_0260bc_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		incb   _0d6d00_data
		xor    %eax,%eax
		mov    _0d6d00_data,%al
		cmp    $0x000007,%eax
		jle    _0260e4_jump
		movb   $0x000007,_0d6d00_data

	_0260e4_jump:
		call   _025f34_func
		pop    %edx
		ret    



_0260ec_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000024,%eax
		mov    _095efe_data,%dx
		sub    %edx,%eax
		mov    %ax,_095efe_data
		call   _025f34_func
		pop    %edx
		ret    



_026118_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000048,%eax
		mov    _095efe_data,%dx
		sub    %edx,%eax
		mov    %ax,_095efe_data
		call   _025f34_func
		pop    %edx
		ret    



_026144_func:
		push   %ecx
		mov    %eax,%ecx
		movswl %dx,%eax
		movswl %bx,%edx
		mov    %eax,0x000028(%ecx)
		mov    %edx,0x00002c(%ecx)
		mov    $0x000008,%cl
		shl    %cl,%eax
		mov    $0x000008,%cl
		mov    %eax,_0d6d08_data
		mov    %edx,%eax
		shl    %cl,%eax
		mov    %eax,_0d6d0c_data
		pop    %ecx
		ret    



_026234_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    _0d6d1b_data,%cl
		xor    %eax,%eax
		cmp    $0x000005,%ecx
		jg     _026254_jump
		cmpb   $0x000000,_0d6d1c_data
		je     _026292_jump

	_026254_jump:
		xor    %eax,%eax
		mov    _0d6d1b_data,%al
		cmp    $0x000005,%eax
		jle    _026268_jump
		xor    %ch,%ch
		mov    %ch,_0d6d1b_data

	_026268_jump:
		mov    $0x000101,%eax
		call   _064360_func
		xor    %cl,%cl
		mov    %eax,%ebx
		mov    $0x000101,%eax
		sub    $0x000080,%ebx
		call   _064360_func
		sub    $0x000080,%eax
		mov    %cl,_0d6d1c_data

	_026292_jump:
		mov    _0d6d00_data,%ecx
		movswl %bx,%ebx
		sar    $0x000010,%ecx
		add    %ebx,%ecx
		mov    _0d6d08_data,%ebx
		mov    _0d6d0c_data,%esi
		add    %ecx,%ebx
		mov    _0d6d02_data,%ecx
		cwtl   
		sar    $0x000010,%ecx
		mov    %ebx,_0d6d08_data
		add    %eax,%ecx
		mov    %ebx,%eax
		add    %ecx,%esi
		mov    $0x000008,%cl
		mov    %esi,_0d6d0c_data
		test   %eax,%eax
		je     _0262d4_jump
		sar    %cl,%eax
		jmp    _0262da_jump

	_0262d4_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_0262da_jump:
		cwtl   
		mov    $0x000008,%cl
		mov    %eax,0x000028(%edx)
		mov    _0d6d0c_data,%eax
		test   %eax,%eax
		je     _0262ed_jump
		sar    %cl,%eax
		jmp    _0262f3_jump

	_0262ed_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_0262f3_jump:
		cwtl   
		mov    %eax,0x00002c(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0262fc_jump:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x000013,%eax
		call   _064360_func
		mov    %al,%cl
		xor    %ah,%ah
		jmp    _026311_jump

	_02630f_jump:
		inc    %ah

	_026311_jump:
		xor    %edx,%edx
		mov    %ah,%dl
		cmp    $0x000014,%edx
		jge    _026381_jump
		mov    %ah,%al
		xor    %edx,%edx
		add    %cl,%al
		mov    %al,%dl
		cmp    $0x000014,%edx
		jl     _026329_jump
		sub    $0x000014,%al

	_026329_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0d6c48_data(,%edx,8),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0c1b04_data,%edx
		add    %edx,%ebx
		cmp    _095c64_data,%al
		je     _02630f_jump
		mov    0x00004e(%ebx),%edx
		sar    $0x000010,%edx
		cmp    $0x000002,%edx
		je     _026362_jump
		cmp    $0x000001,%edx
		je     _026362_jump
		cmp    $0x000003,%edx
		jne    _02630f_jump

	_026362_jump:
		mov    $0x000002,%dh
		movb   $0x00000a,0x000076(%ebx)
		mov    %al,_095c64_data
		mov    0x000050(%ebx),%al
		mov    %dh,_0d6ce7_data
		mov    %al,_0d6ce8_data
		movw   $0x000006,0x000050(%ebx)

	_026381_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026388_func:
		xor    %eax,%eax
		mov    _0d6cea_data,%al
		cmp    $0x000005,%eax
		jl     _0263b0_jump
		xor    %eax,%eax
		mov    _0d6ce7_data,%al
		cmp    $0x000001,%eax
		je     _0262fc_jump
		cmp    $0x000002,%eax
		je     _0263b0_jump
		movb   $0x000001,_0d6ce7_data

	_0263b0_jump:
		ret    

_0263b4_switch:
		.long   _026462_case
		.long   _02645d_case
		.long   _026467_case
		.long   _026471_case
		.long   _02646c_case
		.long   _02647b_case
		.long   _02647b_case
		.long   _02647b_case
		.long   _02647b_case
		.long   _02647b_case
		.long   _02647b_case
		.long   _026476_case




_0263e4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		mov    %ecx,%ebp
		mov    %edx,%eax
		mov    0x000020(%esp),%edx
		mov    0x000004(%esi),%ebx
		mov    0x000020(%ebx),%cx
		and    $0x00003f,%ch
		mov    %ecx,0x000008(%esp)
		xor    %ecx,%ecx
		mov    0x000008(%esp),%cx
		mov    %ecx,(%esp)
		mov    _0d6cea_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,0x000004(%esp)
		mov    (%esp),%ecx
		imul   0x000004(%esp),%ecx
		add    $0x000018,%ebx
		cwtl   
		mov    (%ebx),%ebx
		shl    $0x000002,%ecx
		shl    $0x000002,%eax
		add    %ecx,%ebx
		add    %eax,%ebx
		xor    %ecx,%ecx
		mov    0x000003(%ebx),%al
		mov    %al,%cl
		mov    %al,0x00000c(%esp)
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		shl    $0x000002,%eax
		mov    (%esi),%ecx
		add    %ecx,%eax
		cmpb   $0x000000,0x00000c(%esp)
		je     _0264ab_jump
		cmpb   $0x000000,0x000004(%eax)
		jne    _026480_jump
		jmp    _0264ab_jump

	_02645d_case:
		movb   $0x000002,(%edx)
		jmp    _0264a7_jump

	_026462_case:
		movb   $0x000001,(%edx)
		jmp    _0264a7_jump

	_026467_case:
		movb   $0x000003,(%edx)
		jmp    _0264a7_jump

	_02646c_case:
		movb   $0x000004,(%edx)
		jmp    _0264a7_jump

	_026471_case:
		movb   $0x000005,(%edx)
		jmp    _0264a7_jump

	_026476_case:
		movb   $0x000007,(%edx)
		jmp    _0264a7_jump

	_02647b_case:
		movb   $0x000000,(%edx)
		jmp    _0264a7_jump

	_026480_jump:
		xor    %ecx,%ecx
		mov    0x000001(%ebx),%cl
		mov    %cx,(%edi)
		mov    0x000002(%ebx),%bl
		xor    %bh,%bh
		mov    %bx,0x000000(%ebp)
		mov    0x000004(%eax),%al
		sub    $0x000027,%al
		cmp    $0x00000b,%al
		ja     _02647b_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0263b4_switch(,%eax,4)

	_0264a7_jump:
		mov    $0x000001,%al
		jmp    _0264ad_jump

	_0264ab_jump:
		xor    %al,%al

	_0264ad_jump:
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

_0264b8_switch:
		.long   _0264f8_case
		.long   _026513_case
		.long   _02651c_case
		.long   _026525_case
		.long   _02652e_case
		.long   _026544_case
		.long   _026550_case
		.long   _02654a_case




_0264d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000050(%eax),%ax
		cmp    $0x000007,%ax
		ja     _02659f_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0264b8_switch(,%eax,4)

	_0264f8_case:
		mov    0x000081(%edx),%bh
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%edx)
		jmp    _02659f_jump

	_026513_case:
		movb   $0x000001,0x00006b(%edx)
		jmp    _02659f_jump

	_02651c_case:
		movb   $0x000000,0x00006b(%edx)
		jmp    _02659f_jump

	_026525_case:
		movb   $0x000002,0x00006b(%edx)
		jmp    _02659f_jump

	_02652e_case:
		xor    %eax,%eax
		mov    0x000076(%edx),%al
		cmp    $0x000005,%eax
		jg     _02653e_jump
		movb   $0x000007,0x00006b(%edx)
		jmp    _02659f_jump

	_02653e_jump:
		movb   $0x000003,0x00006b(%edx)
		jmp    _02659f_jump

	_026544_case:
		movb   $0x000004,0x00006b(%edx)
		jmp    _02659f_jump

	_02654a_case:
		movb   $0x000005,0x00006b(%edx)
		jmp    _02659f_jump

	_026550_case:
		mov    0x000004(%edx),%eax
		mov    0x000016(%eax),%ax
		and    $0x00ffff,%eax
		xor    %ebx,%ebx
		dec    %eax
		mov    0x00006b(%edx),%bl
		cmp    %eax,%ebx
		jne    _02658c_jump
		mov    0x000076(%edx),%bl
		xor    %eax,%eax
		dec    %bl
		movb   $0x000000,0x00006b(%edx)
		mov    %bl,%al
		mov    %bl,0x000076(%edx)
		test   %eax,%eax
		jne    _02659f_jump
		xor    %eax,%eax
		mov    _0d6ce8_data,%al
		mov    %ax,0x000050(%edx)
		call   _0262fc_jump
		jmp    _02659f_jump

	_02658c_jump:
		xor    %eax,%eax
		mov    _0c249c_data,%al
		cmp    $0x000001,%eax
		jne    _02659f_jump
		mov    %bl,%ah
		inc    %ah
		mov    %ah,0x00006b(%edx)

	_02659f_jump:
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _026607_jump
		mov    0x000054(%edx),%eax
		sar    $0x000010,%eax
		mov    _0d6cee_data,%ecx
		mov    _0d6c44_data(,%eax,8),%ebx
		mov    _0c247a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %ecx,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		mov    0x000054(%edx),%eax
		mov    %ebx,0x000028(%edx)
		sar    $0x000010,%eax
		mov    _0c247c_data,%ebx
		mov    _0d6c46_data(,%eax,8),%ecx
		mov    _0d6cf4_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		add    %ebx,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x000069(%edx),%al
		sub    %eax,%ecx
		mov    %ecx,0x00002c(%edx)

	_026607_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02660c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0c1b04_data,%esi
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _02663f_jump
		jmp    _0266bd_jump

	_02662f_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _0266bd_jump

	_02663f_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x00000b,%edx
		jne    _02662f_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _02662f_jump
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		lea    0x000004(%esp),%edx
		call   _01d3c0_func
		movb   $0x000000,0x00006b(%esi)
		mov    0x000006(%esp),%ebx
		mov    -0x000002(%esp),%edx
		sar    $0x000011,%ebx
		sar    $0x000010,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    0x000081(%esi),%ah
		mov    0x000002(%esp),%ebx
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%esi)
		add    %edx,%ebx
		xor    %edx,%edx
		or     $0x000004,%ah
		mov    0x000069(%esi),%dl
		mov    %ah,0x000081(%esi)
		sub    %edx,%ebx
		mov    %esi,%eax
		mov    %ebx,0x00002c(%esi)
		call   _01f584_func

	_0266bd_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0266c8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %bl,(%esp)
		mov    %cl,0x000004(%esp)
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _026700_jump
		jmp    _026792_jump

	_0266f0_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _026792_jump

	_026700_jump:
		cmp    0x000060(%ecx),%dx
		jne    _0266f0_jump
		mov    0x000024(%ecx),%edi
		test   %edi,%edi
		jne    _0266f0_jump
		mov    0x000028(%esi),%ebp
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%dl
		mov    0x000068(%ecx),%bl
		add    %ebp,%edx
		sub    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x000028(%ecx)
		xor    %edx,%edx
		mov    0x00002c(%esi),%eax
		mov    0x000069(%esi),%dl
		mov    0x000069(%ecx),%bl
		add    %eax,%edx
		mov    %ecx,%eax
		sub    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x00002c(%ecx)
		xor    %edx,%edx
		mov    0x000004(%esp),%bl
		mov    (%esp),%dl
		call   _01d4a8_func
		mov    0x000081(%ecx),%ah
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebx
		mov    0x000068(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		add    %ebx,%edx
		mov    _0c247c_data,%ebx
		movw   $0x000000,0x000040(%ecx)
		sar    $0x000010,%ebx
		or     $0x000004,%ah
		sub    %ebx,%edx
		mov    %ah,0x000081(%ecx)
		cmp    $0x000064,%edx
		setl   %al
		movb   $0x000001,0x00007e(%ecx)
		movw   $0x000000,0x00005e(%ecx)
		xor    %ah,%ah
		mov    %edi,0x000030(%ecx)
		inc    %eax
		mov    %ax,0x000042(%ecx)

	_026792_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_02679c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		movb   $0x000001,_0d6ce7_data
		xor    %eax,%eax
		mov    _0c24d1_data,%al
		cmp    $0x000004,%eax
		je     _0267c0_jump
		mov    $0x000052,%edx
		mov    $0x000006,%bl
		mov    $0x000002,%al
		jmp    _02680a_jump

	_0267c0_jump:
		mov    _0c1ec0_data,%eax
		mov    0x00006e(%eax),%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _0267dc_jump
		cmp    $0x000003,%eax
		je     _0267dc_jump
		cmp    $0x000005,%eax
		jne    _0267e7_jump

	_0267dc_jump:
		mov    $0x00005f,%edx
		mov    $0x000005,%bl
		mov    $0x000007,%al
		jmp    _02680a_jump

	_0267e7_jump:
		cmp    $0x00000c,%eax
		je     _0267f7_jump
		mov    $0x00005f,%edx
		mov    $0x000005,%bl
		mov    $0x00000e,%al
		jmp    _02680a_jump

	_0267f7_jump:
		mov    $0x0000a1,%edx
		mov    $0x000007,%eax
		mov    $0x000005,%bl
		call   _064360_func
		add    $0x000018,%al

	_02680a_jump:
		xor    %ecx,%ecx
		mov    %al,%cl
		and    $0x0000ff,%ebx
		and    $0x00ffff,%edx
		mov    %esi,%eax
		call   _0266c8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_026828_switch:
		.long   _026983_case
		.long   _026a12_case
		.long   _026a36_case
		.long   _026a81_case
		.long   _026ac9_case
		.long   _026a36_case
		.long   _026aef_case




_026844_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		xor    %ah,%ah
		mov    _0c247c_data,%dx
		mov    %ah,0x000018(%esp)
		mov    %ah,0x00001c(%esp)
		mov    0x000028(%ebp),%ax
		sub    %edx,%eax
		xor    %edx,%edx
		mov    0x000068(%ebp),%dl
		add    %edx,%eax
		mov    _0c247e_data,%bx
		add    $0x000008,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x00002c(%ebp),%ax
		mov    0x000069(%ebp),%dl
		sub    %ebx,%eax
		add    %edx,%eax
		xor    %dh,%dh
		mov    %eax,0x000004(%esp)
		mov    %dh,_0d6d10_data
		mov    %dh,0x000020(%esp)
		jmp    _0268a0_jump

	_02689c_jump:
		incb   0x000020(%esp)

	_0268a0_jump:
		xor    %eax,%eax
		mov    0x000020(%esp),%al
		cmp    $0x000014,%eax
		jge    _026c17_jump
		xor    %edx,%edx
		mov    _0d6d10_data,%dl
		cmp    $0x000001,%edx
		jge    _026c17_jump
		mov    _0d6c48_data(,%eax,8),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0c1b04_data,%eax
		add    %eax,%edx
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _02689c_jump
		mov    0x000020(%esp),%bh
		cmp    _095c74_data,%bh
		je     _02689c_jump
		mov    _0c247c_data,%cx
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		sub    %ecx,%ebx
		add    %ebx,%eax
		mov    0x000008(%esp),%edi
		add    $0x000008,%eax
		sub    %eax,%edi
		movswl %di,%ecx
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _026917_jump
		neg    %eax

	_026917_jump:
		movswl %ax,%esi
		mov    %eax,0x00000c(%esp)
		cmp    $0x000015,%esi
		jg     _02689c_jump
		mov    _0c247e_data,%bx
		mov    0x00002c(%edx),%ax
		sub    %ebx,%eax
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebx
		mov    0x000069(%edx),%al
		add    %ebx,%eax
		mov    0x000004(%esp),%ebx
		sub    %eax,%ebx
		mov    %bx,0x000014(%esp)
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		test   %eax,%eax
		jge    _02695b_jump
		neg    %eax

	_02695b_jump:
		mov    %eax,0x000010(%esp)
		cmp    $0x000015,%esi
		jg     _02689c_jump
		imul   %ebx,%ebx
		mov    %ecx,%eax
		imul   %ecx,%eax
		add    %ebx,%eax
		cmp    _095f00_data,%eax
		jle    _026b23_jump
		jmp    _02689c_jump

	_026983_case:
		mov    $0x0000c1,%ebx
		xor    %ah,%ah
		movw   $0x000002,0x000050(%edx)
		mov    %ah,_0d6d1b_data
		mov    %bx,_0d6c38_data
		mov    %al,_0d6cea_data

	_0269a2_jump:
		xor    %eax,%eax
		mov    _0d6d10_data,%al
		xor    %dl,%dl
		mov    %dl,_0d6d16_data(,%eax,8)
		mov    0x000010(%esp),%ecx
		mov    %dl,_0d6d17_data(,%eax,8)
		cmp    0x00000c(%esp),%cx
		jg     _026b71_jump
		mov    _0d6d00_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _0269de_jump
		mov    $0x000001,%eax
		jg     _0269de_jump
		neg    %eax

	_0269de_jump:
		mov    %eax,%edx
		movswl %di,%eax
		cmp    $0x000000,%eax
		je     _0269f1_jump
		mov    $0x000001,%eax
		jg     _0269f1_jump
		neg    %eax

	_0269f1_jump:
		cmp    %eax,%edx
		jne    _026b5d_jump
		xor    %eax,%eax
		mov    _0d6d10_data,%al
		mov    $0x000001,%cl
		mov    %cl,_0d6d17_data(,%eax,8)
		add    %cl,0x00001c(%esp)
		jmp    _026b71_jump

	_026a12_case:
		mov    %al,_0d6cea_data
		movw   $0x000003,0x000050(%edx)
		xor    %ch,%ch
		mov    $0x0000c1,%edx
		mov    %ch,_0d6d1b_data
		mov    %dx,_0d6c38_data
		jmp    _0269a2_jump

	_026a36_case:
		mov    %edx,%eax
		call   _072f20_func
		decb   _0d6ce9_data
		mov    _0d6cea_data,%bh
		mov    0x00004e(%edx),%eax
		inc    %bh
		sar    $0x000010,%eax
		mov    %bh,_0d6cea_data
		cmp    $0x000006,%eax
		jne    _026a63_jump
		mov    %edx,%eax
		call   _02679c_func

	_026a63_jump:
		mov    $0x00000e,%eax
		xor    %cl,%cl
		movw   $0x000000,0x000050(%edx)
		mov    %cl,_0d6d1b_data
		mov    %ax,_0d6c38_data
		jmp    _0269a2_jump

	_026a81_case:
		mov    %ah,_0d6d1b_data
		decb   0x000076(%edx)
		xor    %eax,%eax
		mov    $0x0000d6,%ecx
		mov    0x000076(%edx),%al
		mov    %cx,_0d6c38_data
		test   %eax,%eax
		jne    _0269a2_jump
		mov    %edx,%eax
		mov    $0x00000e,%esi
		call   _072f20_func
		mov    %si,_0d6c38_data
		xor    %ah,%ah
		movw   $0x000000,0x000050(%edx)
		mov    %ah,_0d6d1b_data
		jmp    _0269a2_jump

	_026ac9_case:
		mov    %ebp,%eax
		call   _0260bc_func
		mov    _0d6d1b_data,%ch
		mov    $0x000036,%ebx
		inc    %ch
		mov    %bx,_0d6c38_data
		mov    %ch,_0d6d1b_data
		jmp    _0269a2_jump

	_026aef_case:
		mov    $0x000001,%ecx
		mov    $0x000036,%esi
		mov    _0d6cf6_data,%dx
		mov    %ah,_0d6d1b_data
		mov    %cx,_095c76_data
		sub    $0x000005,%edx
		mov    %si,_0d6c38_data
		mov    %dx,_0d6cf6_data
		jmp    _0269a2_jump

	_026b23_jump:
		mov    0x000020(%esp),%al
		mov    %al,_095c74_data
		mov    0x000050(%edx),%ax
		dec    %eax
		cmp    $0x000006,%ax
		ja     _0269a2_jump
		and    $0x00ffff,%eax
		lea    0x000000(,%eax,4),%ebx
		mov    _0d6cea_data,%al
		inc    %al
		mov    _0d6d1b_data,%ah
		inc    %ah
		jmp    *%cs:_026828_switch(%ebx)

	_026b5d_jump:
		xor    %eax,%eax
		mov    _0d6d10_data,%al
		mov    $0x000001,%bl
		mov    %bl,_0d6d16_data(,%eax,8)
		add    %bl,0x000018(%esp)

	_026b71_jump:
		mov    0x00000c(%esp),%eax
		cmp    0x000010(%esp),%ax
		jg     _026bd7_jump
		mov    _0d6d02_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _026b92_jump
		mov    $0x000001,%eax
		jg     _026b92_jump
		neg    %eax

	_026b92_jump:
		mov    %eax,%edx
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _026ba9_jump
		mov    $0x000001,%eax
		jg     _026ba9_jump
		neg    %eax

	_026ba9_jump:
		cmp    %eax,%edx
		jne    _026bc3_jump
		xor    %eax,%eax
		mov    _0d6d10_data,%al
		mov    $0x000001,%bl
		mov    %bl,_0d6d16_data(,%eax,8)
		add    %bl,0x000018(%esp)
		jmp    _026bd7_jump

	_026bc3_jump:
		xor    %eax,%eax
		mov    _0d6d10_data,%al
		mov    $0x000001,%dl
		mov    %dl,_0d6d17_data(,%eax,8)
		add    %dl,0x00001c(%esp)

	_026bd7_jump:
		xor    %eax,%eax
		mov    _0d6d10_data,%al
		mov    0x000020(%esp),%dl
		mov    %dl,_0d6d18_data(,%eax,8)
		mov    %al,%cl
		mov    %di,_0d6d12_data(,%eax,8)
		inc    %cl
		mov    0x000014(%esp),%edx
		mov    %cl,_0d6d10_data
		mov    _0d6d11_data,%ch
		mov    %dx,_0d6d14_data(,%eax,8)
		cmp    %ch,%cl
		jbe    _026c17_jump
		mov    %cl,_0d6d11_data

	_026c17_jump:
		xor    %eax,%eax
		mov    _0d6d10_data,%al
		test   %eax,%eax
		je     _026c4b_jump
		cmpb   $0x000000,0x000018(%esp)
		je     _026c30_jump
		mov    %ebp,%eax
		call   _0260ec_func

	_026c30_jump:
		cmpb   $0x000000,0x00001c(%esp)
		je     _026c3e_jump
		mov    %ebp,%eax
		call   _026118_func

	_026c3e_jump:
		mov    _0d6c36_data,%eax
		sar    $0x000010,%eax
		call   _06b320_func

	_026c4b_jump:
		mov    _0d6d10_data,%al
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026c5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,0x000008(%esp)
		mov    %esi,%eax
		call   _01dcec_func
		xor    %eax,%eax
		mov    0x000036(%esi),%dx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sub    $0x000008,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		mov    $0x00002e,%edi
		mov    %eax,%ecx
		mov    $_0c1b1c_data,%eax
		mov    0x000038(%esi),%bx
		call   _01dcec_func
		xor    %eax,%eax
		mov    _0c1b52_data,%dx
		mov    _0c1b84_data,%al
		add    %ebx,%ecx
		add    %eax,%edx
		mov    $0x000002,%ebx
		mov    %dx,(%esp)
		xor    %edx,%edx
		sub    $0x000008,%ecx
		mov    _0c1b89_data,%dl
		mov    _0c1b54_data,%ax
		test   %edx,%edx
		jne    _026cdb_jump
		mov    _0c1b88_data,%dl
		cmp    $0x000004,%edx
		je     _026cf5_jump

	_026cdb_jump:
		xor    %edx,%edx
		mov    _0c1b89_data,%dl
		cmp    $0x000001,%edx
		jne    _026d1a_jump
		xor    %edx,%edx
		mov    _0c1b88_data,%dl
		cmp    $0x000001,%edx
		jne    _026d1a_jump

	_026cf5_jump:
		xor    %edx,%edx
		subw   $0x000016,(%esp)
		mov    _095c74_data,%dl
		add    $0x000020,%eax
		cmp    $0x000019,%edx
		je     _026d84_jump
		movb   $0x000019,0x000008(%esp)
		jmp    _026d84_jump

	_026d1a_jump:
		xor    %edx,%edx
		mov    _0c1b89_data,%dl
		test   %edx,%edx
		jne    _026d31_jump
		mov    _0c1b88_data,%dl
		cmp    $0x000014,%edx
		je     _026d65_jump

	_026d31_jump:
		xor    %edx,%edx
		mov    _0c1b89_data,%dl
		cmp    $0x000003,%edx
		jne    _026d4b_jump
		xor    %edx,%edx
		mov    _0c1b88_data,%dl
		cmp    $0x000011,%edx
		je     _026d65_jump

	_026d4b_jump:
		xor    %edx,%edx
		mov    _0c1b89_data,%dl
		cmp    $0x000003,%edx
		jne    _026d84_jump
		xor    %edx,%edx
		mov    _0c1b88_data,%dl
		cmp    $0x000012,%edx
		jne    _026d84_jump

	_026d65_jump:
		subw   $0x000026,(%esp)
		xor    %edx,%edx
		add    $0x00004a,%eax
		mov    _095c74_data,%dl
		add    $0x000020,%edi
		cmp    $0x00001a,%edx
		je     _026d84_jump
		movb   $0x00001a,0x000008(%esp)

	_026d84_jump:
		xor    %edx,%edx
		mov    0x000008(%esp),%dl
		test   %edx,%edx
		je     _026e9c_jump
		movswl %bx,%edx
		push   %edx
		movswl %di,%edx
		push   %edx
		cwtl   
		push   %eax
		mov    0x00000a(%esp),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		mov    $0x000010,%ecx
		push   %eax
		mov    0x000012(%esp),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		call   _02aa7c_func
		test   %ax,%ax
		je     _026e9c_jump
		mov    _0d6d02_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _026e9c_jump
		xor    %eax,%eax
		mov    _0d6ce9_data,%al
		cmp    $0x000005,%eax
		jg     _026df5_jump
		mov    _0d6cea_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _026df5_jump
		movb   $0x000001,_0d6d00_data
		jmp    _026dfd_jump

	_026df5_jump:
		xor    %bl,%bl
		mov    %bl,_0d6d00_data

	_026dfd_jump:
		mov    0x000004(%esp),%eax
		mov    (%esp),%ecx
		add    $0x000010,%eax
		sub    %ecx,%eax
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,8),%edx
		add    $0x00000f,%edi
		neg    %edx
		movswl %di,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x4062c000,%ecx
		xor    %ebx,%ebx
		call   _078062_func
		call   _0780a8_func
		mov    $0x9999999a,%ebx
		mov    $0x3fc99999,%ecx
		call   _07825f_func
		call   _078d1c_func
		mov    %ax,_095efe_data
		call   _025f34_func
		mov    %esi,%eax
		call   _02660c_func
		mov    $0x00002c,%eax
		call   _06b320_func
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		cmp    $0x000019,%eax
		jne    _026e8b_jump
		mov    $0x000033,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func

	_026e8b_jump:
		mov    0x000008(%esp),%al
		xor    %cl,%cl
		mov    %al,_095c74_data
		mov    %cl,_0d6d1b_data

	_026e9c_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026ea8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0d6cf6_data,%dx
		mov    _095c76_data,%bx
		mov    _0d6cfe_data,%cx
		xor    %eax,%eax
		mov    _0d6ce6_data,%al
		cmp    $0x000001,%eax
		jne    _026f21_jump
		dec    %ebx
		movswl %bx,%eax
		test   %eax,%eax
		jne    _026f21_jump
		add    %ecx,%edx
		mov    _0d6cfa_data,%cx
		mov    $0x0001f4,%ebx
		cmp    %cx,%dx
		jl     _026ef6_jump
		mov    %ecx,%edx
		xor    %ecx,%ecx
		mov    %cx,_0d6cfc_data
		jmp    _026f21_jump

	_026ef6_jump:
		mov    _0d6cf8_data,%si
		cmp    %si,%dx
		jg     _026f13_jump
		mov    $0x000001,%ecx
		xor    %eax,%eax
		mov    %esi,%edx
		mov    %ax,_0d6cfc_data
		jmp    _026f21_jump

	_026f13_jump:
		xor    %edi,%edi
		mov    $0x000001,%ecx
		mov    %di,_0d6cfc_data

	_026f21_jump:
		mov    %cx,_0d6cfe_data
		mov    %bx,_095c76_data
		mov    %dx,_0d6cf6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026f3c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		mov    $0xfffffec0,%edx
		mov    $0xffffff38,%ebx
		mov    $0x000140,%ecx
		mov    $0x0000c8,%esi
		xor    %ah,%ah
		mov    %dx,0x00000c(%esp)
		mov    %bx,0x000014(%esp)
		mov    %cx,0x000008(%esp)
		mov    %si,0x000010(%esp)
		xor    %dl,%dl
		mov    %ah,_0d6ce6_data
		mov    $0x000014,%dh
		mov    %ah,_0d6ce7_data
		mov    %dh,_095c64_data
		xor    %ebx,%ebx
		jmp    _026fac_jump

	_026f8b_jump:
		mov    %bx,_0d6c46_data(,%eax,8)
		mov    %bx,_0d6c48_data(,%eax,8)
		mov    %bl,_0d6c4c_data(,%eax,8)
		inc    %dl
		mov    %bx,_0d6c4a_data(,%eax,8)

	_026fac_jump:
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x000014,%eax
		jl     _026f8b_jump
		mov    _0c1b04_data,%edi
		mov    _0c1b08_data,%ax
		movw   $0x000064,0x000056(%ebp)
		xor    %bl,%bl
		xor    %esi,%esi
		mov    %bl,0x000020(%esp)
		mov    %eax,0x000018(%esp)
		test   %ax,%ax
		jg     _026ff1_jump
		jmp    _0270c9_jump

	_026fdd_jump:
		mov    0x000018(%esp),%edx
		inc    %esi
		add    $0x000084,%edi
		cmp    %dx,%si
		jge    _0270c9_jump

	_026ff1_jump:
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		cmp    $0x000014,%edx
		jge    _0270c9_jump
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		cmp    $0x000100,%eax
		jne    _026fdd_jump
		lea    0x00001c(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%ebx
		mov    %ebp,%eax
		call   _0263e4_func
		test   %ax,%ax
		jne    _027038_jump
		mov    $0x000080,%edx
		mov    %eax,0x000004(%esp)
		xor    %cl,%cl
		mov    %edx,(%esp)
		mov    %cl,0x00001c(%esp)

	_027038_jump:
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		mov    (%esp),%eax
		shl    $0x000003,%edx
		add    $0x00002a,%eax
		mov    %ax,_0d6c46_data(%edx)
		mov    0x000004(%esp),%eax
		add    $0x000009,%eax
		mov    %ax,_0d6c48_data(%edx)
		mov    0x00001c(%esp),%al
		mov    %al,_0d6c4c_data(%edx)
		mov    0x00000c(%esp),%ecx
		mov    _0d6c46_data(%edx),%ax
		mov    %si,_0d6c4a_data(%edx)
		cmp    %cx,%ax
		jle    _027088_jump
		mov    %ax,0x00000c(%esp)
		jmp    _027094_jump

	_027088_jump:
		cmp    0x000008(%esp),%ax
		jge    _027094_jump
		mov    %ax,0x000008(%esp)

	_027094_jump:
		xor    %eax,%eax
		mov    0x000020(%esp),%al
		shl    $0x000003,%eax
		mov    0x000014(%esp),%ecx
		mov    _0d6c48_data(%eax),%dx
		cmp    %cx,%dx
		jle    _0270b4_jump
		mov    %dx,0x000014(%esp)
		jmp    _0270c0_jump

	_0270b4_jump:
		cmp    0x000010(%esp),%dx
		jge    _0270c0_jump
		mov    %dx,0x000010(%esp)

	_0270c0_jump:
		incb   0x000020(%esp)
		jmp    _026fdd_jump

	_0270c9_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x00000c,%eax
		jg     _0270e0_jump
		xor    %ecx,%ecx
		mov    %cx,_0d6cf2_data
		jmp    _0270f1_jump

	_0270e0_jump:
		mov    $0x00000c,%eax
		mov    0x000008(%esp),%ebx
		sub    %ebx,%eax
		mov    %ax,_0d6cf2_data

	_0270f1_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000124,%eax
		jle    _02710a_jump
		xor    %edi,%edi
		mov    %di,_0d6cf4_data
		jmp    _02711b_jump

	_02710a_jump:
		mov    $0x000124,%eax
		mov    0x00000c(%esp),%esi
		sub    %esi,%eax
		mov    %ax,_0d6cf4_data

	_02711b_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jg     _027132_jump
		xor    %ebx,%ebx
		mov    %bx,_0d6cf8_data
		jmp    _027143_jump

	_027132_jump:
		mov    $0x000008,%eax
		mov    0x000010(%esp),%edx
		sub    %edx,%eax
		mov    %ax,_0d6cf8_data

	_027143_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000078,%eax
		jle    _02715a_jump
		xor    %esi,%esi
		mov    %si,_0d6cfa_data
		jmp    _02716b_jump

	_02715a_jump:
		mov    $0x000078,%eax
		mov    0x000014(%esp),%ecx
		sub    %ecx,%eax
		mov    %ax,_0d6cfa_data

	_02716b_jump:
		mov    _0d6cea_data,%eax
		sar    $0x000010,%eax
		mov    _095c66_data(,%eax,2),%ax
		mov    %ax,_0d6cf0_data
		xor    %eax,%eax
		xor    %edi,%edi
		mov    _095b0d_data,%al
		mov    %di,_0d6cf6_data
		test   %eax,%eax
		je     _02719d_jump
		subw   $0x000008,_0d6cf0_data

	_02719d_jump:
		xor    %bh,%bh
		mov    %bh,_0d6ce9_data
		xor    %bl,%bl
		xor    %esi,%esi
		xor    %eax,%eax
		mov    %bl,%al
		cmp    $0x000014,%eax
		jl     _0271cc_jump
		jmp    _0272ac_jump

	_0271b7_jump:
		movb   $0x000002,_0d6ce6_data
		jmp    _027286_jump

	_0271c3_jump:
		movb   $0x000014,0x000076(%edx)
		jmp    _027286_jump

	_0271cc_jump:
		mov    _0d6c48_data(,%eax,8),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%ecx
		mov    _0c1b04_data,%edx
		mov    _0c247a_data,%edi
		add    %ecx,%edx
		mov    _0d6c44_data(,%eax,8),%ecx
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		add    %ecx,%edi
		xor    %ecx,%ecx
		mov    0x000068(%edx),%cl
		sub    %ecx,%edi
		mov    _0d6cee_data,%ecx
		sar    $0x000010,%ecx
		add    %ecx,%edi
		mov    %edi,0x000028(%edx)
		mov    _0d6c46_data(,%eax,8),%ecx
		mov    _0c247c_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%edi
		add    %ecx,%edi
		xor    %ecx,%ecx
		mov    0x000069(%edx),%cl
		sub    %ecx,%edi
		mov    _0d6cf4_data,%ecx
		sar    $0x000010,%ecx
		add    %ecx,%edi
		mov    %edi,0x00002c(%edx)
		mov    _0d6c4c_data(,%eax,8),%al
		xor    %ah,%ah
		mov    %ax,0x000050(%edx)
		mov    %bl,%al
		mov    %ax,0x000056(%edx)
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f584_func
		movb   $0x000004,0x00007e(%edx)
		mov    %si,0x000040(%edx)
		mov    0x000050(%edx),%ax
		mov    %si,0x000042(%edx)
		cmp    $0x000004,%ax
		jb     _02729e_jump
		jbe    _0271c3_jump
		cmp    $0x000007,%ax
		je     _0271b7_jump

	_027286_jump:
		mov    %edx,%eax
		call   _0264d8_func
		inc    %bl
		xor    %eax,%eax
		mov    %bl,%al
		cmp    $0x000014,%eax
		jl     _0271cc_jump
		jmp    _0272ac_jump

	_02729e_jump:
		cmp    $0x000001,%ax
		jb     _027286_jump
		incb   _0d6ce9_data
		jmp    _027286_jump

	_0272ac_jump:
		xor    %cl,%cl
		mov    %cl,_0d6cea_data
		mov    %cl,_0d6d1c_data
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0272c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %al,%al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000014,%edx
		jl     _0272d6_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0272d6_jump:
		lea    0x000000(,%edx,8),%ebx
		mov    _0d6c48_data(%ebx),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0c1b04_data,%ecx
		andb   $0x0000fb,0x000081(%ecx,%edx,1)
		mov    _0d6c48_data(%ebx),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		inc    %al
		movl   $0x000000,0x000024(%ecx,%edx,1)
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000014,%edx
		jl     _0272d6_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027320_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		movw   $0x000005,_0c2580_data
		call   _025eb0_func
		call   _025e38_func
		mov    _0c247c_data,%ax
		mov    $0x000038,%edi
		mov    %ax,_0c259c_data
		mov    %ax,_0c259a_data
		mov    _0d6cea_data,%eax
		mov    $0x000020,%edx
		sar    $0x000010,%eax
		mov    %dx,_0d6c3a_data
		mov    _095c66_data(,%eax,2),%ax
		mov    %dx,_0d6c3c_data
		mov    %ax,_0d6cf0_data
		xor    %eax,%eax
		mov    %edi,%edx
		mov    %ax,_0d6cf6_data
		mov    %ax,_0d6c3e_data
		mov    _0c1b84_data,%al
		sub    %eax,%edx
		sub    $0x000008,%edx
		mov    %dx,_0d6c42_data
		mov    $0x000108,%edx
		sub    %eax,%edx
		mov    $0x000018,%ebx
		mov    %edx,%eax
		mov    %bx,_0c247e_data
		sub    $0x000008,%eax
		mov    %bx,_0c25a0_data
		mov    %ax,_0d6c44_data
		xor    %eax,%eax
		mov    %bx,_0c259e_data
		mov    _095b0d_data,%al
		mov    %di,_0d6c40_data
		test   %eax,%eax
		jne    _0273e3_jump
		addw   $0x000008,_0c247c_data
		jmp    _027432_jump

	_0273e3_jump:
		mov    $0xfffffff8,%eax
		mov    $0x000028,%esi
		mov    _0d6cf0_data,%dx
		mov    _0d6c42_data,%di
		mov    %bx,_0d6c3a_data
		mov    %ax,_0d6c40_data
		sub    $0x000008,%edx
		mov    %si,_0d6c3c_data
		sub    $0x000008,%edi
		mov    _0d6c44_data,%ax
		mov    %dx,_0d6cf0_data
		sub    $0x000008,%eax
		mov    %di,_0d6c42_data
		mov    %ax,_0d6c44_data

	_027432_jump:
		mov    %ecx,%eax
		movb   $0x000000,0x00007e(%ecx)
		call   _026060_func
		mov    _0c247c_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _0c1b85_data,%al
		add    $0x0000c0,%edx
		sub    %eax,%edx
		mov    %edx,_0c1b48_data
		mov    _0c4734_data,%edx
		cmp    $0x000002,%edx
		jne    _02749c_jump
		mov    0x000004(%ecx),%eax
		mov    0x000022(%eax),%ax
		dec    %eax
		mov    $0x000001,%ebx
		cwtl   
		mov    $0x000003,%edx
		call   _064360_func
		mov    %ax,_0d6cec_data
		mov    %ax,_0d6cee_data
		mov    %ecx,%eax
		movb   $0x000003,0x000076(%ecx)
		call   _026f3c_func
		mov    $_0c1b1c_data,%eax
		jmp    _0274aa_jump

	_02749c_jump:
		cmp    $0x000032,%edx
		jne    _0274af_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_0274aa_jump:
		call   _01d4a8_func

	_0274af_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0274b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0c1b89_data,%al
		mov    %dx,_0d6cfe_data
		mov    %dx,_0d6cfc_data
		test   %eax,%eax
		jne    _0274e7_jump
		mov    _0c1b88_data,%al
		cmp    $0x000004,%eax
		je     _027507_jump

	_0274e7_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000001,%eax
		jne    _027630_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000001,%eax
		jne    _027630_jump

	_027507_jump:
		mov    %esi,%eax
		call   _026060_func
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		mov    $0x000001,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d840_func
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _02754d_jump
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000002,%eax
		jmp    _02754f_jump

	_02754d_jump:
		xor    %eax,%eax

	_02754f_jump:
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		mov    0x00000c(%esp),%ecx
		add    $0x000005,%eax
		sub    %eax,%ecx
		mov    -0x000002(%esp),%edx
		mov    %cx,0x00000c(%esp)
		sar    $0x000010,%edx
		mov    0x00000a(%esp),%ebx
		mov    %esi,%eax
		sar    $0x000010,%ebx
		call   _026144_func
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		test   %eax,%eax
		jne    _0275a9_jump
		mov    %esi,%eax
		call   _072f20_func
		mov    $0x0000c2,%eax
		call   _06b320_func

	_0275a9_jump:
		movb   $0x000002,0x00007e(%esi)
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		call   _040c80_func
		test   %ax,%ax
		je     _027630_jump
		mov    %esi,%eax
		mov    $0x000002,%ebx
		call   _026090_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		mov    $0x000033,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		xor    %eax,%eax
		mov    _0d6ce6_data,%al
		cmp    $0x000002,%eax
		jne    _027621_jump
		mov    $0x000001,%dh
		mov    $0x000001,%edi
		xor    %esi,%esi
		mov    %dh,_0d6ce6_data
		mov    %si,_0d6cfc_data
		mov    %di,_0d6cfe_data
		jmp    _027629_jump

	_027621_jump:
		xor    %dl,%dl
		mov    %dl,_0d6ce6_data

	_027629_jump:
		movb   $0x000014,_095c74_data

	_027630_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02763c_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0c1b52_data,%bx
		mov    _0c1b84_data,%dl
		add    %ebx,%edx
		sub    %edx,%eax
		mov    _0c1b9d_data,%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		jne    _02766f_jump
		movswl %ax,%edx
		test   %edx,%edx
		jge    _02768a_jump

	_02766f_jump:
		mov    _0c1b9d_data,%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		jne    _02768f_jump
		movswl %ax,%edx
		test   %edx,%edx
		jg     _02768f_jump

	_02768a_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    

	_02768f_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_027694_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    _0d6ce9_data,%al
		test   %eax,%eax
		jne    _027755_jump
		mov    0x000056(%ecx),%si
		movb   $0x000000,0x00007e(%ecx)
		dec    %esi
		mov    %ecx,%eax
		mov    %si,0x000056(%ecx)
		call   _026060_func
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _027984_jump
		call   _0272c4_func
		mov    _0d6cec_data,%di
		mov    0x000004(%ecx),%eax
		inc    %edi
		xor    %edx,%edx
		mov    %di,_0d6cec_data
		mov    0x000022(%eax),%dx
		mov    _0d6cea_data,%eax
		dec    %edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jle    _0276fe_jump
		xor    %eax,%eax
		mov    %ax,_0d6cec_data

	_0276fe_jump:
		mov    _0d6cec_data,%ax
		cmp    _0d6cee_data,%ax
		jne    _027730_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000064,0x000056(%ecx)
		call   _01d4a8_func
		mov    $0x00006b,%eax
		call   _06b320_func
		jmp    _027984_jump

	_027730_jump:
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _026f3c_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		mov    $0x000069,%eax
		call   _06b320_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027755_jump:
		mov    _0c247c_data,%dx
		mov    0x000028(%ecx),%ax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		mov    _0c247e_data,%bx
		add    %eax,%edx
		mov    0x00002c(%ecx),%ax
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		add    $0x000008,%edx
		add    %eax,%ebx
		movswl %dx,%eax
		mov    _0d6c3a_data,%edx
		mov    $0x000140,%esi
		sar    $0x000010,%edx
		sub    %edx,%esi
		mov    %esi,%edx
		lea    0x000008(%eax),%esi
		cmp    %edx,%esi
		jl     _0277d4_jump
		xor    %eax,%eax
		mov    _095c74_data,%al
		cmp    $0x000016,%eax
		je     _027978_jump
		mov    %ecx,%eax
		mov    $0x000016,%dl
		call   _0260ec_func
		mov    %dl,_095c74_data
		xor    %dh,%dh
		mov    $0x00002d,%eax
		mov    %dh,_0d6d1b_data
		call   _06b320_func
		jmp    _027978_jump

	_0277d4_jump:
		mov    _0d6c38_data,%esi
		lea    -0x000008(%eax),%edx
		sar    $0x000010,%esi
		cmp    %esi,%edx
		jg     _027826_jump
		xor    %eax,%eax
		mov    _095c74_data,%al
		cmp    $0x000015,%eax
		je     _027978_jump
		mov    %ecx,%eax
		call   _0260ec_func
		movb   $0x000015,_095c74_data
		xor    %ah,%ah
		mov    %ah,_0d6d1b_data
		mov    $0x00002d,%eax
		call   _06b320_func
		mov    %ecx,%eax
		call   _026234_func
		call   _026388_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027826_jump:
		mov    _0d6c3c_data,%esi
		movswl %bx,%edx
		sar    $0x000010,%esi
		lea    -0x000008(%edx),%edi
		cmp    %esi,%edi
		jg     _027890_jump
		xor    %eax,%eax
		mov    _095c74_data,%al
		cmp    $0x000017,%eax
		je     _027978_jump
		mov    %ecx,%eax
		mov    $0x000017,%dl
		call   _026118_func
		mov    %dl,_095c74_data
		mov    _0d6d1b_data,%dh
		test   %dh,%dh
		je     _02786c_jump
		mov    %dh,%bl
		inc    %bl
		mov    %bl,_0d6d1b_data

	_02786c_jump:
		mov    $0x00002d,%eax
		mov    $0x000001,%bh
		call   _06b320_func
		mov    %bh,_0d6d1c_data
		mov    %ecx,%eax
		call   _026234_func
		call   _026388_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027890_jump:
		mov    _0c1b52_data,%esi
		sar    $0x000010,%esi
		add    $0x000008,%edx
		add    $0x000040,%esi
		cmp    %esi,%edx
		jle    _027966_jump
		mov    _0c1b5a_data,%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		je     _027910_jump
		call   _02763c_func
		test   %al,%al
		je     _027910_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _0278d2_jump
		mov    _0c1b88_data,%al
		cmp    $0x000004,%eax
		je     _0278ea_jump

	_0278d2_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000001,%eax
		jne    _027910_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000001,%eax
		jne    _027910_jump

	_0278ea_jump:
		mov    $0x000011,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		mov    %ecx,%eax
		call   _026234_func
		call   _026388_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027910_jump:
		mov    _0d6c3c_data,%eax
		mov    $0x0000c8,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %bx,%edx
		cmp    %eax,%edx
		jl     _027971_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    %ecx,%eax
		movb   $0x000000,0x00007e(%ecx)
		call   _026060_func
		xor    %eax,%eax
		mov    _0d6ce6_data,%al
		cmp    $0x000001,%eax
		jne    _027978_jump
		movb   $0x000002,_0d6ce6_data
		mov    %ecx,%eax
		call   _026234_func
		call   _026388_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027966_jump:
		mov    %ecx,%eax
		call   _026844_func
		test   %al,%al
		jne    _027978_jump

	_027971_jump:
		mov    %ecx,%eax
		call   _026c5c_func

	_027978_jump:
		mov    %ecx,%eax
		call   _026234_func
		call   _026388_func

	_027984_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02798c_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0d6ce7_data,%dl
		cmp    $0x000002,%edx
		jne    _0279c8_jump
		xor    %ebx,%ebx
		mov    _095c64_data,%bl
		mov    _0d6c48_data(,%ebx,8),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		xor    %ecx,%ecx
		add    %ebx,%edx
		mov    _0c1b04_data,%ebx
		mov    _0d6ce8_data,%cl
		mov    %cx,0x000050(%ebx,%edx,4)

	_0279c8_jump:
		xor    %dl,%dl
		mov    %dl,_0d6ce7_data
		decb   0x000076(%eax)
		xor    %edx,%edx
		mov    0x000076(%eax),%dl
		test   %edx,%edx
		jne    _0279f3_jump
		mov    $0x000004,%ebx
		movw   $0x000064,0x000056(%eax)
		call   _01d4a8_func
		mov    $0x000016,%eax
		jmp    _027a04_jump

	_0279f3_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x00000f,%eax

	_027a04_jump:
		call   _06b320_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027a10_func:
		push   %ebx
		push   %edx
		push   %edi
		mov    %eax,%edx
		movb   $0x000000,0x00007e(%eax)
		call   _026060_func
		decw   0x000056(%edx)
		xor    %ebx,%ebx
		mov    0x000054(%edx),%eax
		mov    %bx,_0d6cfe_data
		sar    $0x000010,%eax
		mov    %bx,_0d6cfc_data
		test   %eax,%eax
		jne    _027a94_jump
		mov    0x000076(%edx),%al
		test   %eax,%eax
		je     _027a48_jump
		call   _04fd90_func

	_027a48_jump:
		mov    $0x000001,%edi
		mov    %di,_0c2580_data
		call   _0272c4_func
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    $0x000002,%ebx
		mov    %ah,0x000081(%edx)
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		mov    %di,_0c24ee_data
		call   _025eb0_func
		call   _025ed4_func

	_027a94_jump:
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    



_027a98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000018,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		test   %eax,%eax
		jle    _027aee_jump
		mov    $0x000001,%ah
		mov    %ah,0x000014(%esp)
		cmp    %ah,%al
		jbe    _027aee_jump
		mov    $0x00000b,%edi

	_027aba_jump:
		xor    %ecx,%ecx
		mov    0x000014(%esp),%cl
		imul   $0x000014,%ecx,%ecx
		push   $0x000001
		mov    $0x0000c8,%eax
		mov    $0x000124,%ebx
		sub    %ecx,%eax
		mov    %edi,%edx
		movswl %ax,%ecx
		mov    %esi,%eax
		call   _018a64_func
		mov    0x000014(%esp),%dh
		inc    %dh
		mov    0x000076(%esi),%bl
		mov    %dh,0x000014(%esp)
		cmp    %bl,%dh
		jb     _027aba_jump

	_027aee_jump:
		xor    %eax,%eax
		mov    _0d6ce9_data,%al
		test   %eax,%eax
		jl     _027b97_jump
		cmp    $0x000014,%eax
		jg     _027b97_jump
		mov    _0c24d8_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%ecx
		push   $0x000001
		shl    $0x000005,%ecx
		mov    $0x00000e,%ebx
		add    %edx,%ecx
		mov    _0c1b04_data,%edi
		shl    $0x000002,%ecx
		mov    $0x000039,%edx
		add    %ecx,%edi
		mov    $0x0000af,%ecx
		mov    %edi,%eax
		call   _018a64_func
		xor    %edx,%edx
		mov    _0d6ce9_data,%dl
		mov    $0x00000a,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		mov    $0x000037,%ebx
		add    $0x00001c,%eax
		xor    %edx,%edx
		mov    $0x0000af,%ecx
		mov    %al,%dl
		mov    %edi,%eax
		call   _018a64_func
		xor    %edx,%edx
		mov    _0d6ce9_data,%dl
		mov    $0x00000a,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		add    $0x00001c,%edx
		mov    $0x0000af,%ecx
		mov    $0x000046,%ebx
		and    $0x0000ff,%edx
		mov    %edi,%eax
		call   _018a64_func

	_027b97_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _027c83_jump
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027bad_jump:
		mov    _0c4734_data,%eax
		and    $0x00003f,%eax
		cmp    $0x000020,%eax
		jge    _027c9a_jump
		mov    _0cda40_data,%edx
		push   %edx
		push   $_0c0048_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _0787fb_func
		add    $0x00000c,%esp
		mov    $0x000064,%ebx
		xor    %ecx,%ecx
		push   $0x000000
		mov    $0x0000a0,%edx
		lea    0x000004(%esp),%eax
		call   _01a168_func
		push   $0x000000
		mov    $0x000002,%ecx
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    _0cda20_data,%eax
		call   _01a168_func
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027c12_jump:
		cmpb   $0x000000,_0d6d1a_data
		je     _027c3b_jump
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		push   %eax
		xor    %ecx,%ecx
		mov    _0cd950_data,%eax
		call   _01a168_func
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027c3b_jump:
		mov    0x000076(%esi),%al
		test   %eax,%eax
		jne    _027c62_jump
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		push   %eax
		xor    %ecx,%ecx
		mov    _0cd950_data,%eax
		call   _01a168_func
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027c62_jump:
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0cd9c4_data,%eax
		xor    %ecx,%ecx
		call   _01a168_func
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027c83_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x000001,%dl
		jb     _027c9a_jump
		jbe    _027bad_jump
		cmp    $0x000004,%dl
		je     _027c12_jump

	_027c9a_jump:
		add    $0x000018,%esp
		pop    %edi
		pop    %esi

	_027c9f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_027ca4_switch:
		.long   _027d17_case
		.long   _027d22_case
		.long   _027d2d_case
		.long   _027d38_case
		.long   _027d43_case




_027cb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%eax
		call   _040a7c_func
		test   %al,%al
		je     _027cf5_jump
		mov    $0x000001,%ah
		mov    $0x000004,%ebx
		movb   $0x000000,0x000076(%ecx)
		xor    %edx,%edx
		mov    %ah,_0d6d1a_data
		mov    %ecx,%eax
		movw   $0x000064,0x000056(%ecx)
		call   _01d4a8_func
		mov    $0x000016,%eax
		call   _06b320_func

	_027cf5_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _027c9f_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000a,%eax
		je     _027c9f_jump
		cmp    $0x000004,%al
		ja     _027c9f_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_027ca4_switch(,%eax,4)

	_027d17_case:
		mov    %ecx,%eax
		call   _027320_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027d22_case:
		mov    %ecx,%eax
		call   _0274b8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027d2d_case:
		mov    %ecx,%eax
		call   _027694_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027d38_case:
		mov    %ecx,%eax
		call   _02798c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027d43_case:
		mov    %ecx,%eax
		call   _027a10_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027d50_func:
		push   %edx
		mov    %eax,%edx
		call   _026ea8_func
		mov    %edx,%eax
		call   _0264d8_func
		pop    %edx
		ret    



_027d64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _027d7e_jump
		mov    _0c1b88_data,%al
		cmp    $0x000004,%eax
		je     _027d9e_jump

	_027d7e_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000001,%eax
		jne    _027f23_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000001,%eax
		jne    _027f23_jump

	_027d9e_jump:
		call   _040b24_func
		test   %ax,%ax
		je     _027e34_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _027ddd_jump
		mov    _0c1b9d_data,%dl
		mov    _0c1b5c_data,%cx
		or     $0x000008,%dl
		neg    %ecx
		mov    %dl,_0c1b9d_data
		mov    %cx,_0c1b5c_data

	_027ddd_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _027e14_jump
		mov    _0c1b88_data,%al
		cmp    $0x000004,%eax
		jne    _027e14_jump
		mov    $0x000001,%ebx
		mov    $_0c1b1c_data,%eax
		mov    %ebx,%edx
		mov    $0x000010,%esi
		call   _01d4a8_func
		mov    %si,_0c1b5c_data
		jmp    _027f99_jump

	_027e14_jump:
		mov    _0c1b5a_data,%ebx
		sar    $0x000010,%ebx
		mov    $0x00002f,%eax
		inc    %ebx
		cmp    %ebx,%eax
		jle    _027e29_jump
		mov    %ebx,%eax

	_027e29_jump:
		mov    %ax,_0c1b5c_data
		jmp    _027f99_jump

	_027e34_jump:
		call   _040ab0_func
		test   %ax,%ax
		je     _027eca_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _027e76_jump
		mov    _0c1b9d_data,%ah
		mov    _0c1b5c_data,%dx
		and    $0x0000f7,%ah
		neg    %edx
		mov    %ah,_0c1b9d_data
		mov    %dx,_0c1b5c_data

	_027e76_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _027eaa_jump
		mov    _0c1b88_data,%al
		cmp    $0x000004,%eax
		jne    _027eaa_jump
		mov    $0x000001,%ebx
		mov    $_0c1b1c_data,%eax
		mov    %ebx,%edx
		call   _01d4a8_func
		movw   $0x00fff0,_0c1b5c_data
		jmp    _027f99_jump

	_027eaa_jump:
		mov    _0c1b5a_data,%ebx
		sar    $0x000010,%ebx
		mov    $0xffffffd1,%eax
		dec    %ebx
		cmp    %ebx,%eax
		jge    _027ebf_jump
		mov    %ebx,%eax

	_027ebf_jump:
		mov    %ax,_0c1b5c_data
		jmp    _027f99_jump

	_027eca_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _027ee3_jump
		lea    -0x000001(%eax),%ebx
		xor    %eax,%eax
		cmp    %ebx,%eax
		jge    _027ee1_jump
		mov    %ebx,%eax

	_027ee1_jump:
		jmp    _027ef0_jump

	_027ee3_jump:
		jge    _027ef6_jump
		lea    0x000001(%eax),%ebx
		xor    %eax,%eax
		cmp    %ebx,%eax
		jle    _027ef0_jump
		mov    %ebx,%eax

	_027ef0_jump:
		mov    %ax,_0c1b5c_data

	_027ef6_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _027f04_jump
		neg    %eax

	_027f04_jump:
		cmp    $0x000010,%eax
		jge    _027f99_jump
		mov    $0x000004,%ebx
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _027f99_jump

	_027f23_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _027f3b_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000012,%eax
		je     _027f50_jump

	_027f3b_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _027f77_jump
		mov    _0c1b88_data,%al
		cmp    $0x000014,%eax
		jne    _027f77_jump

	_027f50_jump:
		mov    $_0c1b1c_data,%eax
		call   _04d2c4_func
		call   _040c80_func
		test   %ax,%ax
		je     _027f99_jump
		mov    $0x000004,%ebx
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _027f99_jump

	_027f77_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _027f99_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000011,%eax
		jne    _027f99_jump
		mov    $_0c1b1c_data,%eax
		call   _04d2c4_func

	_027f99_jump:
		mov    _0d6c40_data,%eax
		mov    _0c1b44_data,%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _027fc7_jump
		mov    _0c1b5a_data,%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jge    _027fc7_jump
		mov    %eax,_0c1b44_data
		xor    %eax,%eax
		mov    %ax,_0c1b5c_data
		jmp    _028012_jump

	_027fc7_jump:
		mov    _0d6c42_data,%eax
		mov    _0c1b44_data,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jg     _027ff6_jump
		mov    _0c1b5a_data,%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jle    _027ff6_jump
		xor    %edi,%edi
		mov    %eax,_0c1b44_data
		mov    %di,_0c1b5c_data
		jmp    _028012_jump

	_027ff6_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		call   _04d240_func
		mov    _0c1b44_data,%ecx
		cwtl   
		add    %eax,%ecx
		mov    %ecx,_0c1b44_data

	_028012_jump:
		push   $_0c257a_data
		mov    $_0c2578_data,%ecx
		mov    $_0c2576_data,%ebx
		mov    $_0c2574_data,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d988_func
		call   _02e3f0_func
		mov    $_0c1b1c_data,%eax
		call   _04dbe4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028050_func:
		movw   $0x000000,0x000040(%eax)
		movw   $0x00fff8,0x000042(%eax)
		ret    



_028060_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _0280b0_jump
		xor    %ebx,%ebx
		mov    0x00006c(%eax),%bl
		cmp    $0x000007,%ebx
		jne    _0280b0_jump
		xor    %ecx,%ecx
		mov    0x00006b(%eax),%cl
		test   %ecx,%ecx
		jne    _0280b0_jump
		lea    0x000000(,%edx,4),%ecx
		mov    0x00000c(%eax),%edx
		mov    (%ecx,%edx,1),%edx
		mov    0x000005(%edx,%ebx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c2498_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _0280b0_jump
		movb   $0x000005,0x00007e(%eax)
		call   _028638_func

	_0280b0_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0280b4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		call   _01e92c_func
		xor    %eax,%eax
		mov    0x000076(%ebx),%al
		test   %eax,%eax
		jne    _02812d_jump
		movb   $0x000000,0x00006f(%ebx)
		mov    0x000028(%ebx),%ax
		mov    %ax,0x00003c(%ebx)
		mov    0x00002c(%ebx),%ax
		mov    $0x00000c,%edx
		mov    %ax,0x00003e(%ebx)
		mov    %ebx,%eax
		movb   $0x000008,0x00006e(%ebx)
		call   _01d498_func
		movb   $0x000007,0x000078(%ebx)
		call   _0282f4_func
		mov    $0x000005,%ah
		mov    _0c32e1_data,%cl
		mov    0x000032(%ebx),%edx
		mov    %ah,_0c25ca_data
		sar    $0x000010,%edx
		inc    %cl
		mov    $0x000011,%eax
		mov    %cl,_0c32e1_data
		call   _06ac04_func
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		mov    %ebx,_0c25cc_data
		call   _06cc54_func
		pop    %ecx
		pop    %ebx
		ret    

	_02812d_jump:
		mov    $0x00000a,%edx
		mov    %ebx,%eax
		call   _01d498_func
		pop    %ecx
		pop    %ebx
		ret    



_02813c_func:
		push   %edx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000020,%edx
		je     _028160_jump
		cmp    $0x000021,%edx
		je     _028160_jump
		cmp    $0x000022,%edx
		je     _028160_jump
		cmp    $0x000023,%edx
		je     _028160_jump
		cmp    $0x000024,%edx
		je     _028160_jump
		cmp    $0x000025,%edx
		jne    _028193_jump

	_028160_jump:
		xor    %edx,%edx
		mov    0x00006b(%eax),%dl
		cmp    $0x000029,%edx
		jne    _02817c_jump
		mov    0x000032(%eax),%edx
		mov    $0x0000c0,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		pop    %edx
		ret    

	_02817c_jump:
		cmp    $0x000040,%edx
		jne    _0281ae_jump
		mov    0x000032(%eax),%edx
		mov    $0x0000c1,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		pop    %edx
		ret    

	_028193_jump:
		cmp    $0x000026,%edx
		jne    _0281ae_jump
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)

	_0281ae_jump:
		pop    %edx
		ret    



_0281b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c2390_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c245a_data,%cx
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%edx
		test   %cx,%cx
		jle    _0282ed_jump
		jmp    _028264_jump

	_0281e6_jump:
		cmp    $0x000040,%eax
		jne    _028233_jump
		mov    0x000032(%edx),%edx
		mov    $0x0000c1,%eax
		sar    $0x000010,%edx
		jmp    _02822e_jump

	_0281f8_jump:
		cmp    $0x000026,%eax
		jne    _028233_jump
		mov    0x000081(%edx),%cl
		movl   $0x000000,0x000024(%edx)
		xor    %ah,%ah
		and    $0x0000fb,%cl
		mov    %ah,_0c25e2_data
		mov    %cl,0x000081(%edx)
		xor    %edx,%edx
		mov    $0x00003d,%eax
		mov    %dx,_0cdaf8_data
		mov    $0xffffffff,%edx

	_02822e_jump:
		call   _06ac04_func

	_028233_jump:
		call   _04c6f4_func

	_028238_jump:
		inc    %ebx
		movswl %bx,%eax
		mov    _0c2390_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%edx
		mov    _0c245a_data,%si
		add    %eax,%edx
		cmp    %si,%bx
		jge    _0282ed_jump

	_028264_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x0000c5,%eax
		jne    _028238_jump
		cmpw   $0x000000,_0cdaf8_data
		jne    _028289_jump
		call   _06ba80_func
		movw   $0x000001,_0cdaf8_data

	_028289_jump:
		mov    _0c2480_data,%ax
		mov    %ax,_0c247c_data
		mov    _0c2482_data,%ax
		mov    %ax,_0c247e_data
		mov    %edx,%eax
		call   _04dbe4_func
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000020,%eax
		je     _0282cf_jump
		cmp    $0x000021,%eax
		je     _0282cf_jump
		cmp    $0x000022,%eax
		je     _0282cf_jump
		cmp    $0x000023,%eax
		je     _0282cf_jump
		cmp    $0x000024,%eax
		je     _0282cf_jump
		cmp    $0x000025,%eax
		jne    _0281f8_jump

	_0282cf_jump:
		xor    %eax,%eax
		mov    0x00006b(%edx),%al
		cmp    $0x000029,%eax
		jne    _0281e6_jump
		mov    0x000032(%edx),%edx
		mov    $0x0000c0,%eax
		sar    $0x000010,%edx
		jmp    _02822e_jump

	_0282ed_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0282f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1b04_data,%ebx
		mov    _0c1b08_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _02831f_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02830f_jump:
		inc    %eax
		add    $0x000084,%ebx
		cmp    %cx,%ax
		jge    _02842c_jump

	_02831f_jump:
		xor    %edx,%edx
		mov    0x000060(%ebx),%dx
		cmp    $0x0000c5,%edx
		jne    _02830f_jump
		mov    0x000024(%ebx),%edx
		test   %edx,%edx
		jne    _02830f_jump
		mov    _0c247a_data,%eax
		sar    $0x000010,%eax
		mov    0x000068(%ebx),%dl
		add    $0x0000a0,%eax
		sub    %edx,%eax
		mov    %eax,0x000028(%ebx)
		mov    0x000028(%ebx),%ax
		mov    _0c247c_data,%edx
		mov    %ax,0x00003c(%ebx)
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000069(%ebx),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%ebx)
		mov    0x00002c(%ebx),%ax
		mov    %ax,0x00003e(%ebx)
		orb    $0x000004,0x000081(%ebx)
		mov    %ebx,%eax
		movl   $0x000001,0x000024(%ebx)
		call   _01f584_func
		mov    0x000081(%ebx),%dl
		xor    %eax,%eax
		and    $0x0000ef,%dl
		mov    _0c25ec_data,%al
		mov    %dl,0x000081(%ebx)
		lea    0x000000(,%eax,4),%edx
		add    %eax,%edx
		mov    _094a29_data(,%edx,4),%al
		add    $0x000020,%al
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebx,%eax
		call   _01d498_func
		xor    %eax,%eax
		mov    _0c25ec_data,%al
		lea    0x000000(,%eax,4),%edx
		add    %eax,%edx
		shl    $0x000002,%edx
		xor    %eax,%eax
		mov    _094a29_data(%edx),%al
		cmp    $0x000006,%eax
		jne    _0283db_jump
		movb   $0x000005,_094a29_data(%edx)

	_0283db_jump:
		xor    %ebx,%ebx
		mov    _0c25ec_data,%bl
		lea    0x000000(,%ebx,4),%edx
		mov    _0c2480_data,%ax
		add    %ebx,%edx
		mov    %ax,_0c247c_data
		mov    $0x000001,%bh
		mov    _094a29_data(,%edx,4),%cl
		mov    _0c2482_data,%ax
		add    %bh,%cl
		mov    %ax,_0c247e_data
		mov    %cl,_094a29_data(,%edx,4)
		xor    %edx,%edx
		mov    %bh,_0c25e2_data
		mov    %dx,_0c24c0_data
		mov    %dx,_0c24c2_data

	_02842c_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028430_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%ebp
		mov    %dl,0x000014(%esp)
		mov    $0x000003,%eax
		call   _01d148_func
		mov    %eax,%esi
		add    $0x000738,%eax
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    0x000060(%ebp),%ax
		xor    %edi,%edi
		cmp    $0x000017,%eax
		jne    _02847e_jump
		xor    %eax,%eax
		mov    _0c1b86_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0c1b20_data,%eax
		mov    0x000008(%eax,%edx,4),%al
		mov    %al,0x000018(%esp)
		jmp    _02848b_jump

	_02847e_jump:
		movb   $0x000001,0x000018(%esp)
		jmp    _02848b_jump

	_028485_jump:
		add    $0x000084,%esi

	_02848b_jump:
		cmp    (%esp),%esi
		jae    _02862e_jump
		mov    0x000024(%esi),%ebx
		test   %ebx,%ebx
		jne    _028485_jump
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000003,%edx
		jne    _028485_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		movw   $0x000014,0x000056(%esi)
		movl   $0x000001,0x000024(%esi)
		mov    0x000081(%esi),%dl
		movb   $0x000000,0x000071(%esi)
		or     $0x000004,%dl
		mov    %dl,0x000081(%esi)
		movswl %di,%edx
		movb   $0x000005,0x000072(%esi)
		mov    _095f12_data(,%edx,2),%bx
		mov    %bx,0x000042(%esi)
		mov    _095f04_data(,%edx,2),%dx
		mov    %esi,%eax
		mov    %dx,0x000040(%esi)
		call   _01f584_func
		mov    0x00003e(%esi),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _028537_jump
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%ebx
		mov    0x000040(%esi),%dl
		mov    %dl,(%ebx)
		mov    %dl,%bl
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		neg    %bl
		mov    %bl,0x000001(%edx)
		mov    0x000081(%esi),%bl
		mov    %esi,%eax
		or     $0x000008,%bl
		mov    $0x000002,%edx
		mov    %bl,0x000081(%esi)
		mov    $0x000001,%ebx
		jmp    _02856b_jump

	_028537_jump:
		mov    0x00000c(%esi),%ebx
		mov    0x000040(%esi),%dl
		mov    0x000008(%ebx),%ebx
		neg    %dl
		mov    %dl,(%ebx)
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%ebx
		mov    0x000040(%esi),%dl
		mov    %dl,0x000001(%ebx)
		mov    0x000081(%esi),%dh
		mov    %esi,%eax
		and    $0x0000f7,%dh
		mov    $0x000001,%ebx
		mov    %dh,0x000081(%esi)
		mov    $0x000002,%edx

	_02856b_jump:
		call   _058bb4_func
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		mov    (%edx),%al
		mov    %al,0x000008(%edx)
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		mov    0x000001(%edx),%al
		mov    %al,0x000009(%edx)
		lea    0x000008(%esp),%edx
		push   %edx
		lea    0x000008(%esp),%edx
		xor    %ebx,%ebx
		push   %edx
		movswl %di,%edx
		mov    0x000020(%esp),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    0x000018(%esp),%ecx
		lea    0x000014(%esp),%ebx
		movswl %dx,%edx
		mov    %ebp,%eax
		call   _01d840_func
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000011,%edx
		sar    $0x000010,%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x000006(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000011,%edx
		sar    $0x000010,%ebx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000069(%esi),%bl
		sub    %ebx,%edx
		mov    %esi,%eax
		mov    %edx,0x00002c(%esi)
		xor    %edx,%edx
		call   _01dcec_func
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		movb   $0x000000,0x00006b(%esi)
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		mov    0x000002(%ebx,%edx,8),%al
		mov    0x000081(%esi),%bh
		and    $0x0000bf,%bh
		inc    %edi
		mov    %bh,0x000081(%esi)
		xor    %ebx,%ebx
		movswl %di,%edx
		mov    0x000014(%esp),%bl
		mov    %al,0x00006a(%esi)
		cmp    %ebx,%edx
		jne    _028485_jump

	_02862e_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_028638_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b04_data,%edx
		mov    _0c1b08_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _028663_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028657_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _0286bd_jump

	_028663_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x00003b,%ebx
		jne    _028657_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _028657_jump
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f584_func
		mov    0x000028(%esi),%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%esi),%ebx
		mov    0x000028(%edx),%ax
		mov    %ebx,0x00002c(%edx)
		mov    _0c247c_data,%bx
		sub    %ebx,%eax
		mov    %ax,0x000036(%edx)
		mov    _0c247e_data,%cx
		mov    0x00002c(%edx),%ax
		movw   $0x00fffc,0x000042(%edx)
		sub    %ecx,%eax
		mov    %ax,0x000038(%edx)

	_0286bd_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0286c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000056(%eax),%dx
		test   %dx,%dx
		je     _0286d9_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x000056(%eax)

	_0286d9_jump:
		cmpb   $0x000000,_0c2564_data
		je     _0286fd_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000002,0x000007(%edx,%eax,8)
		jne    _028728_jump

	_0286fd_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _028742_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _028742_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jle    _028742_jump

	_028728_jump:
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff6,0x000042(%ecx)

	_028742_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		xor    %ebx,%ebx
		mov    %edx,%eax
		mov    0x00006c(%ecx),%bl
		shl    $0x000008,%eax
		add    %ebx,%eax
		cmp    $0x000003,%eax
		jb     _0288f4_jump
		cmp    $0x000005,%eax
		jbe    _0288fd_jump
		cmp    $0x000200,%eax
		jb     _0288e5_jump
		cmp    $0x000201,%eax
		jbe    _02887e_jump
		cmp    $0x000202,%eax
		je     _028878_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02878a_jump:
		mov    0x00000c(%ecx),%eax
		mov    (%eax,%edx,4),%eax
		testb  $0x000010,0x000007(%eax,%ebx,8)
		je     _0287a0_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _0287c3_jump

	_0287a0_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_0287c3_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _0288fd_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0288fd_jump
		mov    0x000081(%ecx),%dh
		lea    0x000081(%ecx),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02882c_jump:
		mov    %ecx,%eax
		call   _04d2c4_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _024568_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _02886d_jump
		mov    0x000081(%ecx),%dh
		lea    0x000081(%ecx),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_02886d_jump:
		mov    %ecx,%eax
		call   _024ba8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028878_jump:
		movw   $0x000000,0x000040(%ecx)

	_02887e_jump:
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		cmp    $0x00000a,%eax
		jne    _0288a2_jump
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff6,0x000042(%ecx)

	_0288a2_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0288fd_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _024288_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092204_data(%eax)
		je     _0288fd_jump
		cmpb   $0x000000,_0c2564_data
		jne    _0288db_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d498_func

	_0288db_jump:
		movw   $0x000000,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0288e5_jump:
		cmp    $0x000100,%eax
		je     _02882c_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0288f4_jump:
		cmp    $0x000001,%eax
		ja     _02878a_jump

	_0288fd_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028904_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000001,0x000007(%ebx,%edx,8)
		je     _02892d_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _058bb4_func

	_02892d_jump:
		pop    %edx
		pop    %ebx
		ret    



_028930_func:
		mov    _0d727f_data,%al
		ret    



_028970_func:
		push   %edx
		mov    %eax,%edx
		mov    $0x00002f,%eax
		call   _05e8d8_func
		pop    %edx
		ret    



_028980_func:
		test   $0x000080,%ah
		je     _028988_jump
		xor    %ah,%ah
		ret    

	_028988_jump:
		mov    $0x000100,%eax
		ret    



_028990_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    %esi,%ecx
		xor    %dl,%dl
		shr    $0x000010,%ecx

	_0289a3_jump:
		movw   $0x001510,_0d6d2c_data
		xor    %ah,%ah
		mov    %cx,_0d6d3e_data
		mov    (%esp),%al
		mov    %si,_0d6d2e_data
		mov    %ax,_0d6d30_data
		mov    $_0d6d2c_data,%eax
		inc    %dl
		call   _028970_func
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x00000a,%eax
		je     _0289e3_jump
		mov    %edi,%gs
		testb  $0x000080,%gs:0x000004(%ebx)
		jne    _0289a3_jump

	_0289e3_jump:
		mov    %edi,%gs
		xor    %eax,%eax
		mov    %gs:0x000003(%ebx),%ax
		call   _028980_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    



_0289f8_func:
		push   %ecx
		push   %esi
		mov    %edx,%esi
		mov    %eax,%ecx
		mov    %edx,%gs
		movb   $0x00000d,%gs:(%ecx)
		movb   $0x000000,%gs:0x000001(%ecx)
		movw   $0x000000,%gs:0x000003(%ecx)
		xor    %al,%al
		mov    %bl,%gs:0x000002(%ecx)
		mov    %esi,%gs
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000008,%edx
		jl     _028a24_jump
		pop    %esi
		pop    %ecx
		ret    

	_028a24_jump:
		inc    %al
		movb   $0x000000,%gs:0x000005(%ecx,%edx,1)
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000008,%edx
		jl     _028a24_jump
		pop    %esi
		pop    %ecx
		ret    



_028a38_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %edx,(%esp)
		mov    %eax,%esi
		mov    %ebx,%edi
		xor    %ebx,%ebx
		mov    %cl,%bl
		call   _0289f8_func
		mov    (%esp),%gs
		movb   $0x000000,%gs:0x00000d(%esi)
		movw   $0x000000,%gs:0x000014(%esi)
		movl   $0x000000,%gs:0x000016(%esi)
		mov    0x000010(%esp),%ebx
		mov    %di,%gs:0x00000e(%esi)
		mov    %bx,%gs:0x000012(%esi)
		shr    $0x000010,%edi
		mov    %di,%gs:0x000010(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_028c54_func:
		push   %ebx
		push   %edx
		mov    $0x001500,%edx
		mov    $_0d6d2c_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0d6d2c_data
		mov    %bx,_0d6d2e_data
		mov    %bx,_0d6d30_data
		call   _028970_func
		mov    _0d6d30_data,%al
		mov    %al,_0d727f_data
		mov    _0d6d2e_data,%al
		pop    %edx
		pop    %ebx
		ret    



_028c90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _028c54_func
		mov    %al,%dh
		mov    %al,_0d6d44_data
		xor    %dl,%dl
		mov    $0x00150b,%esi
		xor    %ecx,%ecx
		jmp    _028cad_jump

	_028cab_jump:
		inc    %dl

	_028cad_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x00001a,%ebx
		jge    _028cfe_jump
		xor    %eax,%eax
		mov    %dh,%al
		mov    %cl,_0d6d45_data(%ebx)
		test   %eax,%eax
		je     _028cab_jump
		xor    %ah,%ah
		mov    %dl,%al
		mov    %si,_0d6d2c_data
		mov    %ax,_0d6d30_data
		mov    $_0d6d2c_data,%eax
		mov    %cx,_0d6d2e_data
		call   _028970_func
		xor    %eax,%eax
		mov    _0d6d2c_data,%ax
		test   %eax,%eax
		je     _028cab_jump
		mov    $0x000001,%ah
		sub    %ah,%dh
		mov    %ah,_0d6d45_data(%ebx)
		jmp    _028cab_jump

	_028cfe_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028d04_jump:
		push   %edx
		xor    %eax,%eax
		mov    _0d7398_data,%ax
		xor    %dl,%dl
		test   %eax,%eax
		je     _028d1a_jump
		call   _05e878_func
		mov    %al,%dl

	_028d1a_jump:
		xor    %eax,%eax
		mov    %dl,%al
		test   %eax,%eax
		je     _028d2b_jump
		movw   $0x000102,_0d6d42_data

	_028d2b_jump:
		pop    %edx
		ret    



_028d30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x000100,%edx
		xor    %ah,%ah
		mov    %dx,_0d6d42_data
		mov    %ah,_0d7286_data
		call   _028f7c_func
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _028efb_jump
		call   _028fbc_func
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _028efb_jump
		call   _028c54_func
		and    $0x0000ff,%eax
		je     _028f34_jump
		mov    %dx,_0d6d42_data
		call   _028c90_func
		mov    $_0d7394_data,%edx
		mov    $0x00008a,%eax
		call   _05e7e0_func
		mov    %ax,_0d7398_data
		mov    %ax,_0d7390_data
		mov    %ax,_0d73a0_data
		mov    %ax,_0d73b0_data
		mov    %ax,_0d73b8_data
		mov    %ax,_0d73c0_data
		mov    %ax,_0d73a8_data
		mov    %ax,_0d73c8_data
		mov    %ax,_0d73d0_data
		mov    %ax,_0d73d8_data
		mov    %ax,_0d73e0_data
		xor    %edx,%edx
		mov    %ax,_0d73e8_data
		mov    %ax,%dx
		movl   $0x000064,_0d73e4_data
		mov    _0d7394_data,%eax
		mov    $0x000030,%esi
		mov    %eax,_0d73ec_data
		add    $0x000030,%eax
		mov    $0x000035,%edi
		mov    %eax,_0d73f4_data
		mov    _0d7394_data,%eax
		xor    %ebx,%ebx
		add    $0x000035,%eax
		mov    %ebx,_0d738c_data
		mov    %eax,_0d73f8_data
		mov    _0d7394_data,%eax
		mov    %ebx,_0d739c_data
		add    $0x00003c,%eax
		mov    $0x00001a,%ebx
		mov    %eax,_0d73fc_data
		mov    _0d7394_data,%eax
		mov    $0x00003c,%ebp
		add    %ebx,%eax
		mov    $0x000043,%ecx
		mov    %eax,_0d73f0_data
		mov    _0d7394_data,%eax
		mov    %esi,_0d73ac_data
		add    %ecx,%eax
		mov    $0x00004e,%esi
		mov    %eax,_0d7400_data
		mov    _0d7394_data,%eax
		mov    %edi,_0d73b4_data
		add    %esi,%eax
		mov    $0x000059,%edi
		mov    %eax,_0d7404_data
		mov    _0d7394_data,%eax
		mov    %ebp,_0d73bc_data
		add    %edi,%eax
		mov    $0x00005b,%ebp
		mov    %eax,_0d7408_data
		mov    _0d7394_data,%eax
		mov    %ecx,_0d73c4_data
		add    %ebp,%eax
		test   %edx,%edx
		sete   %dl
		mov    %eax,_0d740c_data
		mov    _0d7394_data,%eax
		mov    %ebx,_0d73a4_data
		add    $0x000064,%eax
		mov    %esi,_0d73cc_data
		mov    %eax,_0d7410_data
		xor    %eax,%eax
		mov    %edi,_0d73d4_data
		mov    %dl,%al
		mov    %ebp,_0d73dc_data
		test   %eax,%eax
		je     _028ee5_jump
		movw   $0x000101,_0d6d42_data
		jmp    _028f04_jump

	_028ee5_jump:
		call   _028930_func
		and    $0x0000ff,%eax
		call   _029808_func
		and    $0x0000ff,%eax
		jne    _028f04_jump

	_028efb_jump:
		movw   $0x00000c,_0d6d42_data

	_028f04_jump:
		xor    %eax,%eax
		mov    _0d6d42_data,%ax
		cmp    $0x000100,%eax
		jne    _028f5e_jump
		call   _028930_func
		and    $0x0000ff,%eax
		call   _029b3c_func
		and    $0x0000ff,%eax
		jne    _028f3f_jump
		movw   $0x000001,_0d6d42_data
		jmp    _028f5e_jump

	_028f34_jump:
		movw   $0x000001,_0d6d42_data
		jmp    _028f04_jump

	_028f3f_jump:
		call   _028930_func
		and    $0x0000ff,%eax
		call   _029df0_func
		and    $0x0000ff,%eax
		jne    _028f5e_jump
		movw   $0x000008,_0d6d42_data

	_028f5e_jump:
		xor    %eax,%eax
		mov    _0d6d42_data,%ax
		cmp    $0x000100,%eax
		sete   %al
		and    $0x0000ff,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028f7c_func:
		push   %ebx
		push   %edx
		mov    $0x001500,%edx
		mov    $_0d6d2c_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0d6d2c_data
		mov    %bx,_0d6d2e_data
		mov    %bx,_0d6d30_data
		call   _028970_func
		xor    %eax,%eax
		mov    _0d6d2e_data,%ax
		test   %eax,%eax
		setne  %al
		and    $0x0000ff,%eax
		pop    %edx
		pop    %ebx
		ret    



_028fbc_func:
		push   %ebx
		push   %edx
		mov    $0x00150c,%edx
		mov    $_0d6d2c_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0d6d2c_data
		mov    %bx,_0d6d2e_data
		call   _028970_func
		xor    %eax,%eax
		mov    _0d6d2e_data,%ax
		mov    %eax,%edx
		sar    $0x000004,%edx
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    _0d6d2e_data,%ax
		shl    $0x000002,%edx
		xor    %ah,%ah
		and    $0x00ffff,%eax
		add    %edx,%eax
		mov    %ax,_0d7288_data
		mov    _0d7286_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000d2,%eax
		setge  %al
		and    $0x0000ff,%eax
		pop    %edx
		pop    %ebx
		ret    



_029030_func:
		push   %ecx
		push   %esi
		mov    %dl,%cl
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    %eax,%edx
		lea    0x000000(,%eax,8),%esi
		xor    %eax,%edx
		mov    %cl,%dl
		add    %eax,%esi
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		add    %esi,%eax
		mov    %bl,%dl
		add    %edx,%eax
		sub    $0x000096,%eax
		pop    %esi
		pop    %ecx
		ret    



_029078_func:
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		and    $0x0000ff,%ecx
		mov    %dl,%al
		shl    $0x000010,%ecx
		shl    $0x000008,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    %bl,%cl
		add    %ecx,%eax
		pop    %ecx
		ret    



_029098_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %eax,%edx
		mov    $0x001194,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esi,%edx
		mov    %al,(%edi)
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00004b,%esi
		mov    %edx,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ebx,%edx
		mov    %al,0x000000(%ebp)
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %dl,(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0290d8_func:
		push   %esi
		sub    $0x000004,%esp
		mov    %ecx,%esi
		mov    %eax,%ecx
		sar    $0x000010,%ecx
		and    $0x0000ff,%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%cl
		mov    %cl,(%edx)
		mov    %eax,%edx
		sar    $0x000008,%edx
		and    $0x0000ff,%edx
		mov    %dl,(%ebx)
		mov    %al,(%esi)
		add    $0x000004,%esp
		pop    %esi
		ret    



_029108_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00000c,%esp
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		lea    0x000008(%esp),%edx
		call   _029098_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    (%esp),%bl
		mov    0x000004(%esp),%dl
		mov    0x000008(%esp),%al
		call   _029078_func
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02913c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00000c,%esp
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		lea    0x000008(%esp),%edx
		call   _0290d8_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    (%esp),%bl
		mov    0x000004(%esp),%dl
		mov    0x000008(%esp),%al
		call   _029030_func
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029170_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    $0x000085,%ebx
		mov    _0d73a8_data,%dx
		mov    _0d73a4_data,%eax
		call   _0289f8_func
		mov    _0d73a8_data,%cx
		mov    _0d73a4_data,%ebx
		xor    %eax,%eax
		mov    _0d73f0_data,%edx
		mov    (%esp),%al
		call   _028990_func
		mov    %ax,_0d6d42_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0291bc_func:
		push   %edx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		call   _029170_func
		mov    %ax,_0d6d42_data
		mov    %edx,%eax
		call   _029170_func
		mov    %ax,_0d6d42_data
		pop    %edx
		ret    



_0291e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    $0x000088,%ebx
		mov    _0d73a8_data,%dx
		mov    _0d73a4_data,%eax
		call   _0289f8_func
		mov    _0d73a8_data,%cx
		mov    _0d73a4_data,%ebx
		xor    %eax,%eax
		mov    _0d73f0_data,%edx
		mov    (%esp),%al
		call   _028990_func
		mov    %ax,_0d6d42_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02922c_func:
		push   %esi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dl,(%esp)
		mov    %ebx,%esi
		mov    $0x000084,%ebx
		mov    _0d73a8_data,%dx
		mov    _0d73a4_data,%eax
		call   _0289f8_func
		lgs    _0d73a4_data,%ebx
		mov    (%esp),%al
		mov    %al,%gs:0x00000d(%ebx)
		mov    _0d73f0_data,%edx
		mov    %ecx,%gs:0x000012(%ebx)
		xor    %eax,%eax
		mov    %gs,%ecx
		mov    0x000004(%esp),%al
		mov    %esi,%gs:0x00000e(%ebx)
		call   _028990_func
		mov    %ax,_0d6d42_data
		add    $0x000008,%esp
		pop    %esi
		ret    



_029284_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000002
		mov    $0x00000c,%ecx
		mov    _0d7408_data,%ebx
		mov    _0d73a0_data,%dx
		mov    _0d739c_data,%eax
		call   _028a38_func
		mov    _0d73d8_data,%gs
		xor    %eax,%eax
		mov    _0d73d4_data,%ebx
		mov    (%esp),%al
		mov    _0d73a0_data,%cx
		movb   $0x000001,%gs:(%ebx)
		mov    _0d73ec_data,%edx
		movb   $0x000000,%gs:0x000001(%ebx)
		mov    _0d739c_data,%ebx
		call   _028990_func
		mov    %ax,_0d6d42_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0292ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000002
		mov    $0x00000c,%ecx
		mov    _0d7408_data,%ebx
		mov    _0d73a0_data,%dx
		mov    _0d739c_data,%eax
		call   _028a38_func
		mov    _0d73d8_data,%gs
		xor    %eax,%eax
		mov    _0d73d4_data,%ebx
		mov    (%esp),%al
		mov    _0d73a0_data,%cx
		movb   $0x000001,%gs:(%ebx)
		mov    _0d73ec_data,%edx
		movb   $0x000001,%gs:0x000001(%ebx)
		mov    _0d739c_data,%ebx
		call   _028990_func
		mov    %ax,_0d6d42_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0293b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000001
		mov    $0x00000c,%ecx
		mov    _0d73f4_data,%ebx
		mov    _0d73a0_data,%dx
		mov    _0d739c_data,%eax
		call   _028a38_func
		lgs    _0d73ac_data,%eax
		mov    _0d73a0_data,%cx
		mov    _0d739c_data,%ebx
		movb   $0x000005,%gs:(%eax)
		xor    %eax,%eax
		mov    _0d73ec_data,%edx
		mov    (%esp),%al
		call   _028990_func
		mov    %ax,_0d6d42_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02940c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%esi
		mov    %ebx,%ebp
		mov    %ecx,%edi
		push   $0x000007
		mov    $0x000003,%ecx
		mov    _0d73f8_data,%ebx
		mov    _0d73a0_data,%dx
		mov    _0d739c_data,%eax
		call   _028a38_func
		lgs    _0d73b4_data,%eax
		movb   $0x00000a,%gs:(%eax)
		movb   $0x000000,%gs:0x000001(%eax)
		mov    _0d73a0_data,%cx
		movb   $0x000000,%gs:0x000002(%eax)
		mov    _0d739c_data,%ebx
		movl   $0x000000,%gs:0x000003(%eax)
		xor    %eax,%eax
		mov    _0d73ec_data,%edx
		mov    (%esp),%al
		call   _028990_func
		mov    %ax,_0d6d42_data
		lgs    _0d73b4_data,%edx
		mov    %gs:0x000001(%edx),%bl
		mov    %bl,(%esi)
		mov    %gs:0x000002(%edx),%bl
		mov    %bl,0x000000(%ebp)
		mov    %gs:0x000003(%edx),%edx
		mov    %edx,(%edi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_02949c_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dl,(%esp)
		mov    %ebx,%edi
		mov    %ecx,%esi
		push   $0x000007
		mov    $0x000003,%ecx
		mov    _0d73fc_data,%ebx
		mov    _0d73a0_data,%dx
		mov    _0d739c_data,%eax
		call   _028a38_func
		lgs    _0d73bc_data,%eax
		movb   $0x00000b,%gs:(%eax)
		mov    (%esp),%dl
		movl   $0x000000,%gs:0x000002(%eax)
		mov    _0d73a0_data,%cx
		movb   $0x000000,%gs:0x000006(%eax)
		mov    _0d739c_data,%ebx
		mov    %dl,%gs:0x000001(%eax)
		xor    %eax,%eax
		mov    _0d73ec_data,%edx
		mov    0x000004(%esp),%al
		call   _028990_func
		mov    %ax,_0d6d42_data
		lgs    _0d73bc_data,%ebx
		mov    %gs:0x000002(%ebx),%edx
		mov    %edx,(%edi)
		mov    %gs:0x000006(%ebx),%dl
		mov    %dl,(%esi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_0295d4_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%esi
		push   $0x000005
		mov    $0x000003,%ecx
		mov    _0d73f4_data,%ebx
		mov    _0d73a0_data,%dx
		mov    _0d739c_data,%eax
		call   _028a38_func
		lgs    _0d73ac_data,%eax
		mov    _0d73a0_data,%cx
		movb   $0x000006,%gs:(%eax)
		mov    _0d739c_data,%ebx
		movl   $0x000000,%gs:0x000001(%eax)
		xor    %eax,%eax
		mov    _0d73ec_data,%edx
		mov    (%esp),%al
		call   _028990_func
		mov    %ax,_0d6d42_data
		lgs    _0d73ac_data,%edx
		mov    %gs:0x000001(%edx),%edx
		mov    %edx,(%esi)
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0297b8_func:
		push   %edx
		sub    $0x000004,%esp
		mov    %esp,%edx
		and    $0x0000ff,%eax
		call   _0295d4_func
		mov    %ax,_0d6d42_data
		mov    (%esp),%eax
		add    $0x000004,%esp
		pop    %edx
		ret    



_0297d8_func:
		and    $0x0000ff,%eax
		call   _0297b8_func
		test   $0x000001,%al
		sete   %al
		and    $0x0000ff,%eax
		ret    



_0297f0_func:
		and    $0x0000ff,%eax
		call   _0297b8_func
		test   $0x000002,%al
		sete   %al
		and    $0x0000ff,%eax
		ret    



_029808_func:
		and    $0x0000ff,%eax
		call   _0297b8_func
		test   $0x000010,%al
		setne  %al
		and    $0x0000ff,%eax
		ret    



_029838_func:
		and    $0x0000ff,%eax
		testb  $0x000040,_0d721b_data(%eax)
		sete   %al
		and    $0x0000ff,%eax
		ret    



_029850_func:
		and    $0x0000ff,%eax
		call   _0297b8_func
		test   $0x000008,%ah
		jne    _029874_jump
		xor    %eax,%eax
		mov    _0d6d42_data,%ax
		cmp    $0x000100,%eax
		jne    _029874_jump
		mov    $0x000001,%eax
		ret    

	_029874_jump:
		xor    %eax,%eax
		ret    



_029878_func:
		push   %edx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		call   _0297f0_func
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _02989d_jump
		mov    %edx,%eax
		call   _029284_func
		mov    %ax,_0d6d42_data
		pop    %edx
		ret    

	_02989d_jump:
		movw   $0x000100,_0d6d42_data
		pop    %edx
		ret    

	_0298a8_jump:
		push   %edx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		call   _0297f0_func
		and    $0x0000ff,%eax
		jne    _0298db_jump
		mov    %edx,%eax
		call   _0297d8_func
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _0298db_jump
		mov    %edx,%eax
		call   _0292ec_func
		mov    %ax,_0d6d42_data
		pop    %edx
		ret    

	_0298db_jump:
		movw   $0x000100,_0d6d42_data
		pop    %edx
		ret    

	_029992_jump:
		movzbl 0x000014(%esp),%esi
		mov    %esi,%eax
		call   _029850_func
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _029b31_jump
		mov    $0x00051f,%ebx
		mov    $_0d6d60_data,%eax
		xor    %edx,%edx
		mov    %esp,%ecx
		call   _0787d0_func
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02940c_func
		mov    %ax,_0d6d42_data
		mov    0x00000c(%esp),%al
		mov    %al,_0d6d61_data
		mov    0x000008(%esp),%al
		mov    %al,_0d6d62_data
		mov    (%esp),%eax
		mov    %eax,_0d6d63_data
		mov    0x000008(%esp),%al
		inc    %al
		mov    0x00000c(%esp),%ah
		sub    %ah,%al
		mov    0x000008(%esp),%dl
		mov    %al,_0d6d60_data
		mov    %ah,0x000018(%esp)
		cmp    %dl,%ah
		ja     _029a54_jump

	_029a0b_jump:
		movzbl 0x000018(%esp),%esi
		lea    0x000010(%esp),%ecx
		xor    %eax,%eax
		lea    0x000004(%esp),%ebx
		mov    0x000014(%esp),%al
		mov    %esi,%edx
		call   _02949c_func
		mov    %ax,_0d6d42_data
		mov    0x000004(%esp),%eax
		mov    %eax,_0d6d67_data(,%esi,4)
		mov    0x000010(%esp),%al
		mov    0x000018(%esp),%dh
		mov    %al,_0d721b_data(%esi)
		inc    %dh
		mov    _0d6d62_data,%bl
		mov    %dh,0x000018(%esp)
		cmp    %bl,%dh
		jbe    _029a0b_jump

	_029a54_jump:
		mov    _0d6d63_data,%eax
		mov    %eax,_0d6ef7_data
		xor    %eax,%eax
		mov    _0d6d62_data,%al
		mov    _0d6d63_data,%edx
		mov    %edx,_0d6d6b_data(,%eax,4)
		mov    _0d6d61_data,%bl
		cmp    _0d6d62_data,%bl
		ja     _029ad4_jump

	_029a80_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    _0d6d6b_data(,%edx,4),%eax
		call   _02913c_func
		mov    %eax,%esi
		mov    _0d6d67_data(,%edx,4),%eax
		call   _02913c_func
		sub    %eax,%esi
		mov    _0d6d6b_data(,%edx,4),%eax
		mov    %esi,_0d6efb_data(,%edx,4)
		call   _02913c_func
		mov    %eax,%esi
		mov    _0d6d67_data(,%edx,4),%eax
		call   _02913c_func
		sub    %eax,%esi
		mov    %esi,_0d708b_data(,%edx,4)
		inc    %bl
		cmp    _0d6d62_data,%bl
		jbe    _029a80_jump

	_029ad4_jump:
		xor    %eax,%eax
		mov    _0d6d62_data,%al
		xor    %edx,%edx
		mov    %edx,_0d6d6b_data(,%eax,4)
		mov    _0d6d63_data,%eax
		call   _02913c_func
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0d6d61_data,%al
		mov    _0d6d67_data(,%eax,4),%eax
		call   _02913c_func
		sub    %eax,%edx
		mov    %edx,%eax
		call   _029108_func
		mov    %eax,_0d6ef7_data
		xor    %eax,%eax
		mov    $0x000001,%ch
		mov    _0d6d42_data,%ax
		mov    %ch,_0d7286_data
		cmp    $0x000100,%eax
		sete   %al
		add    $0x00001c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_029b31_jump:
		xor    %al,%al

	_029b33_jump:
		add    $0x00001c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029b3c_func:
		and    $0x0000ff,%eax
		mov    _0d6d45_data(%eax),%al
		ret    



_029b48_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %al,(%esp)
		xor    %eax,%eax
		mov    (%esp),%al
		call   _029df0_func
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _029c47_jump
		cmp    _0d6d61_data,%dl
		jb     _029c2a_jump
		cmp    _0d6d62_data,%dl
		ja     _029c2a_jump
		movzbl %dl,%esi
		mov    %esi,%eax
		call   _029838_func
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _029c33_jump
		movzbl %bl,%edi
		xor    %eax,%eax
		shl    $0x000008,%edi
		mov    %cl,%al
		shl    $0x000002,%esi
		add    %eax,%edi
		mov    _0d6d67_data(%esi),%ebp
		shl    $0x000008,%edi
		mov    _0d6d62_data,%bh
		add    %ebp,%edi
		cmp    %bh,%dl
		jae    _029bc5_jump
		mov    _0d6d6b_data(%esi),%eax
		jmp    _029bca_jump

	_029bc5_jump:
		mov    _0d6d63_data,%eax

	_029bca_jump:
		cmp    %eax,%edi
		jge    _029c3e_jump
		movzbl (%esp),%esi
		mov    %esi,%eax
		call   _029170_func
		mov    %ax,_0d6d42_data
		and    $0x0000ff,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		sub    %ebx,%eax
		xor    %ebx,%ebx
		shl    $0x000002,%eax
		mov    %cl,%bl
		add    %eax,%ebx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		mov    %eax,%ecx
		shl    $0x000004,%ecx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    %dl,%al
		mov    _0d708b_data(,%eax,4),%eax
		mov    %edi,%ebx
		sub    %ecx,%eax
		mov    $0x000001,%edx
		mov    %eax,%ecx
		mov    %esi,%eax
		call   _02922c_func
		mov    %ax,_0d6d42_data
		jmp    _029c47_jump

	_029c2a_jump:
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x000064,%eax
		jne    _029c3e_jump

	_029c33_jump:
		movw   $0x000007,_0d6d42_data
		jmp    _029c47_jump

	_029c3e_jump:
		movw   $0x000008,_0d6d42_data

	_029c47_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_029c50_func:
		and    $0x0000ff,%eax
		call   _029170_func
		mov    %ax,_0d6d42_data
		ret    



_029c64_func:
		and    $0x0000ff,%eax
		call   _0291bc_func
		mov    %ax,_0d6d42_data
		ret    



_029c78_func:
		and    $0x0000ff,%eax
		call   _0291e0_func
		mov    %ax,_0d6d42_data
		ret    



_029d10_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%ch
		call   _028930_func
		mov    $0x000084,%ebx
		mov    _0d73a8_data,%dx
		mov    %al,%cl
		mov    _0d73a4_data,%eax
		call   _0289f8_func
		mov    _0d73a8_data,%gs
		xor    %eax,%eax
		mov    _0d73a4_data,%ebx
		mov    %ch,%al
		movb   $0x000001,%gs:0x00000d(%ebx)
		mov    _0d6d67_data(,%eax,4),%edx
		mov    %edx,%gs:0x00000e(%ebx)
		mov    _0d6efb_data(,%eax,4),%eax
		mov    %eax,%gs:0x000012(%ebx)
		xor    %eax,%eax
		mov    _0d73f0_data,%edx
		mov    %cl,%al
		mov    %gs,%ecx
		call   _028990_func
		mov    %ax,_0d6d42_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029d78_func:
		call   _029d80_func
		lea    0x000000(%eax),%eax



_029d80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _028930_func
		mov    $0x000085,%ebx
		mov    _0d73a8_data,%dx
		mov    %al,%cl
		mov    _0d73a4_data,%eax
		call   _0289f8_func
		movzbl %cl,%esi
		mov    _0d73a8_data,%ax
		mov    _0d73a4_data,%ebx
		mov    _0d73f0_data,%edx
		mov    %eax,%ecx
		mov    %esi,%eax
		call   _028990_func
		mov    %ax,_0d6d42_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029dcc_func:
		push   %edx
		mov    %al,%dl
		call   _029d80_func
		xor    %eax,%eax
		mov    %dl,%al
		call   _029d10_func
		pop    %edx
		ret    



_029df0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00001c,%esp
		mov    %al,0x000014(%esp)
		xor    %edx,%edx
		mov    _0d7286_data,%dl
		mov    $0x000001,%al
		test   %edx,%edx
		jne    _029b33_jump
		xor    %eax,%eax
		mov    0x000014(%esp),%al
		mov    $0x0000ff,%dl
		call   _0293b0_func
		mov    %ax,_0d6d42_data

	_029e20_jump:
		xor    %eax,%eax
		mov    %dl,%al
		test   %eax,%eax
		je     _029992_jump
		xor    %eax,%eax
		mov    0x000014(%esp),%al
		call   _029850_func
		and    $0x0000ff,%eax
		jne    _029992_jump
		dec    %dl
		jmp    _029e20_jump



_029e50_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _029eb0_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		jne    _029eb0_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_029e85_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		jmp    _029ebd_jump

	_029e97_jump:
		and    $0x0000ff,%eax
		jne    _029ea7_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _029ebd_jump

	_029ea7_jump:
		orb    $0x000008,0x000081(%ecx)
		jmp    _029ebd_jump

	_029eb0_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000002,%al
		jb     _029e97_jump
		jbe    _029ebd_jump
		cmp    $0x000014,%al
		je     _029e85_jump

	_029ebd_jump:
		xor    %eax,%eax
		mov    0x000028(%ecx),%dx
		mov    0x000068(%ecx),%al
		mov    _0c1b44_data,%bx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    _0c1b84_data,%al
		sub    %eax,%edx
		mov    _0c1b5c_data,%ax
		add    %eax,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %dx,%edx
		cmp    $0xfffffff6,%edx
		jge    _029f53_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _029f2e_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000006,%eax
		je     _029f2e_jump
		mov    0x000081(%ecx),%bl
		mov    $0x000004,%edx
		or     $0x000008,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		mov    $0x000001,%ebx
		call   _058bb4_func
		jmp    _029fc3_jump

	_029f2e_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _029fc3_jump
		movw   $0x000003,0x000040(%ecx)
		jmp    _029fc3_jump

	_029f53_jump:
		cmp    $0x00000a,%ax
		jle    _029fb6_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _029f9b_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000006,%eax
		je     _029f9b_jump
		mov    0x000081(%ecx),%dh
		mov    $0x000001,%ebx
		and    $0x0000f7,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		mov    $0x000003,%edx
		call   _058bb4_func
		jmp    _029fc3_jump

	_029f9b_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _029fc3_jump
		movw   $0x00fffd,0x000040(%ecx)
		jmp    _029fc3_jump

	_029fb6_jump:
		jg     _029fc3_jump
		cmp    $0xfffffff6,%edx
		jl     _029fc3_jump
		movw   $0x000000,0x000040(%ecx)

	_029fc3_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _029fd3_jump
		mov    $0x000010,%eax
		jmp    _029fd8_jump

	_029fd3_jump:
		mov    $0xfffffff0,%eax

	_029fd8_jump:
		xor    %edx,%edx
		mov    0x000068(%ecx),%dl
		xor    %ebx,%ebx
		add    %edx,%eax
		mov    0x000069(%ecx),%bl
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d754_func
		test   %ax,%ax
		je     _029ff9_jump
		movw   $0x000000,0x000040(%ecx)

	_029ff9_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _02a03f_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000003,%eax
		jne    _02a03f_jump
		mov    0x00003c(%ecx),%eax
		mov    0x00002c(%ecx),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _02a072_jump
		mov    $0x000001,%ebx
		mov    0x00003c(%ecx),%eax
		movw   $0x000000,0x000042(%ecx)
		sar    $0x000010,%eax
		mov    $0x000002,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000052(%ecx)
		call   _058bb4_func
		jmp    _02a072_jump

	_02a03f_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _02a072_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000006,%eax
		jne    _02a072_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x00000f,%eax
		jle    _02a072_jump
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _02a072_jump
		mov    %ecx,%eax
		call   _02a510_func
		movw   $0x000002,0x000052(%ecx)

	_02a072_jump:
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _02a093_jump
		incb   0x00007f(%ecx)
		xor    %eax,%eax
		mov    0x00007f(%ecx),%al
		cmp    $0x000050,%eax
		jle    _02a093_jump
		movb   $0x000000,0x00007f(%ecx)
		movw   $0x000000,0x000052(%ecx)

	_02a093_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a098_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		test   %eax,%eax
		jne    _02a0f6_jump
		mov    0x00006c(%edx),%al
		cmp    $0x000002,%eax
		jne    _02a0f6_jump
		movw   $0x00fff8,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%bh
		mov    %bh,0x000081(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_02a0cb_jump:
		mov    0x000056(%edx),%ax
		mov    %ax,0x000040(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x000042(%edx)
		jmp    _02a103_jump

	_02a0dd_jump:
		and    $0x0000ff,%eax
		jne    _02a0ed_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _02a103_jump

	_02a0ed_jump:
		orb    $0x000008,0x000081(%edx)
		jmp    _02a103_jump

	_02a0f6_jump:
		mov    0x000070(%edx),%al
		cmp    $0x000002,%al
		jb     _02a0dd_jump
		jbe    _02a103_jump
		cmp    $0x000014,%al
		je     _02a0cb_jump

	_02a103_jump:
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		test   %eax,%eax
		jne    _02a146_jump
		mov    0x00006c(%edx),%al
		cmp    $0x000008,%eax
		jne    _02a146_jump
		mov    0x000050(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02a136_jump
		mov    0x00006b(%edx),%al
		cmp    $0x000006,%eax
		jl     _02a136_jump
		mov    %edx,%eax
		call   _02a510_func
		movw   $0x000001,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_02a136_jump:
		xor    %eax,%eax
		mov    0x00006b(%edx),%al
		cmp    $0x000001,%eax
		jne    _02a146_jump
		movw   $0x000000,0x000052(%edx)

	_02a146_jump:
		pop    %edx
		pop    %ebx
		ret    



_02a14c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		test   %eax,%eax
		jne    _02a1b6_jump
		mov    0x00006c(%edx),%al
		cmp    $0x000002,%eax
		jne    _02a1b6_jump
		movw   $0x00fff8,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%bh
		mov    %bh,0x000081(%edx)
		jmp    _02a2ba_jump

	_02a184_jump:
		mov    0x000056(%edx),%ax
		mov    %ax,0x000040(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x000042(%edx)
		jmp    _02a1c3_jump

	_02a196_jump:
		and    $0x0000ff,%eax
		jne    _02a1a6_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _02a1ad_jump

	_02a1a6_jump:
		orb    $0x000008,0x000081(%edx)

	_02a1ad_jump:
		mov    %edx,%eax
		call   _04d2c4_func
		jmp    _02a1c3_jump

	_02a1b6_jump:
		mov    0x000070(%edx),%al
		cmp    $0x000002,%al
		jb     _02a196_jump
		jbe    _02a1c3_jump
		cmp    $0x000014,%al
		je     _02a184_jump

	_02a1c3_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		mov    _0c1b44_data,%cx
		add    %ebx,%eax
		xor    %ebx,%ebx
		sub    %ecx,%eax
		mov    _0c1b84_data,%bl
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b48_data,%si
		mov    _0c1b85_data,%al
		mov    0x00002c(%edx),%di
		mov    %eax,%ecx
		xor    %eax,%eax
		add    %esi,%ecx
		mov    0x000069(%edx),%al
		sub    %edi,%ecx
		sub    %eax,%ecx
		mov    %ecx,%eax
		mov    0x000050(%edx),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jne    _02a2a2_jump
		cwtl   
		cmp    $0x000012,%eax
		jl     _02a257_jump
		cmp    $0x000028,%eax
		jge    _02a225_jump
		movw   $0x000001,0x000042(%edx)
		jmp    _02a25d_jump

	_02a225_jump:
		cmp    $0x000041,%eax
		jge    _02a232_jump
		movw   $0x000002,0x000042(%edx)
		jmp    _02a25d_jump

	_02a232_jump:
		cmp    $0x000064,%eax
		jge    _02a23f_jump
		movw   $0x000003,0x000042(%edx)
		jmp    _02a25d_jump

	_02a23f_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _02a248_jump
		neg    %eax

	_02a248_jump:
		cmp    $0x0000a5,%eax
		jge    _02a257_jump
		movw   $0x000004,0x000042(%edx)
		jmp    _02a25d_jump

	_02a257_jump:
		movw   $0x000000,0x000042(%edx)

	_02a25d_jump:
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _02a27b_jump
		movswl %bx,%eax
		cmp    $0x00005a,%eax
		jg     _02a296_jump

	_02a27b_jump:
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _02a2ba_jump
		movswl %bx,%eax
		cmp    $0xffffffa6,%eax
		jge    _02a2ba_jump

	_02a296_jump:
		movw   $0x000001,0x000052(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a2a2_jump:
		cwtl   
		cmp    $0x000078,%eax
		jle    _02a2b4_jump
		movw   $0x00fffe,0x000042(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a2b4_jump:
		movw   $0x00ffff,0x000042(%edx)

	_02a2ba_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a2c0_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _02a332_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x000002,%edx
		jne    _02a332_jump
		mov    0x000050(%eax),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _02a332_jump
		mov    0x00006b(%eax),%dl
		cmp    $0x000010,%edx
		jl     _02a332_jump
		movw   $0x000001,0x000052(%eax)
		xor    %eax,%eax
		mov    $0x000001,%edx
		mov    _0c1b89_data,%al
		mov    %dx,_0c25c4_data
		test   %eax,%eax
		je     _02a30b_jump
		cmp    $0x000001,%eax
		jne    _02a315_jump

	_02a30b_jump:
		movb   $0x000001,_0c1b99_data
		pop    %edx
		pop    %ebx
		ret    

	_02a315_jump:
		cmp    $0x000004,%eax
		je     _02a31f_jump
		cmp    $0x000005,%eax
		jne    _02a36c_jump

	_02a31f_jump:
		mov    $0x000002,%ah
		mov    $0x000001,%dl
		mov    %ah,_0c1b89_data
		mov    %dl,_0c1b88_data
		pop    %edx
		pop    %ebx
		ret    

	_02a332_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _02a34c_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x00000b,%edx
		jne    _02a34c_jump
		movw   $0x000000,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_02a34c_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _02a36c_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x000016,%edx
		jne    _02a36c_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		call   _058bb4_func

	_02a36c_jump:
		pop    %edx
		pop    %ebx
		ret    



_02a370_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _02a39f_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a38f_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _02a4a1_jump

	_02a39f_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x00003e,%edx
		jne    _02a38f_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _02a38f_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		movw   $0x00fffe,0x000042(%ecx)
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _02a40e_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		movsbw 0x000001(%edx,%eax,8),%ax
		jmp    _02a427_jump

	_02a40e_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		movsbw (%edx,%eax,8),%ax

	_02a427_jump:
		mov    %ax,0x000040(%ecx)
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%edx
		mov    0x000028(%ecx),%ax
		sub    $0x000019,%edx
		mov    %ax,0x00003c(%ecx)
		mov    %edx,0x00002c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %ecx,%eax
		movb   $0x00000c,0x000072(%ecx)
		call   _058bb4_func
		mov    %ecx,%eax
		call   _01dcec_func
		mov    0x000081(%ecx),%dh
		and    $0x0000bb,%dh
		movl   $0x000001,0x000024(%ecx)
		mov    %dh,%bl
		or     $0x000004,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _01f584_func

	_02a4a1_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a4a8_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _02a4c4_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x000002,%edx
		jne    _02a4c4_jump
		movw   $0x000000,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_02a4c4_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _02a4ed_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x00000b,%edx
		jne    _02a4ed_jump
		mov    0x000050(%eax),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _02a4ed_jump
		movw   $0x000001,0x000052(%eax)
		call   _02a370_func
		pop    %edx
		pop    %ebx
		ret    

	_02a4ed_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _02a50d_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x000016,%edx
		jne    _02a50d_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		call   _058bb4_func

	_02a50d_jump:
		pop    %edx
		pop    %ebx
		ret    



_02a510_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0c1b04_data,%esi
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _02a543_jump
		jmp    _02a6e5_jump

	_02a533_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _02a6e5_jump

	_02a543_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000077,%edx
		jne    _02a533_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _02a533_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		xor    %edx,%edx
		mov    0x000060(%edi),%dx
		cmp    $0x000074,%edx
		jne    _02a5cb_jump
		mov    _0c1b5a_data,%edx
		sar    $0x000010,%edx
		movw   $0x000001,0x000042(%esi)
		cmp    $0x000002,%edx
		jge    _02a5a7_jump
		movw   $0x000000,0x000040(%esi)
		jmp    _02a61c_jump

	_02a5a7_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		test   %edx,%edx
		jne    _02a5c3_jump
		movw   $0x00ffff,0x000040(%esi)
		jmp    _02a61c_jump

	_02a5c3_jump:
		movw   $0x000001,0x000040(%esi)
		jmp    _02a61c_jump

	_02a5cb_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		movw   $0x000000,0x000042(%esi)
		test   %edx,%edx
		jne    _02a5ff_jump
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		movsbw 0x000001(%ebx,%edx,8),%ax
		jmp    _02a618_jump

	_02a5ff_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		movsbw (%ebx,%edx,8),%ax

	_02a618_jump:
		mov    %ax,0x000040(%esi)

	_02a61c_jump:
		xor    %edx,%edx
		mov    0x000060(%edi),%dx
		cmp    $0x000074,%edx
		jne    _02a645_jump
		mov    %esp,%edx
		lea    0x00000c(%esp),%ecx
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000006,%edx
		call   _01d840_func
		jmp    _02a682_jump

	_02a645_jump:
		mov    %esp,%edx
		lea    0x00000c(%esp),%ecx
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000009,%edx
		call   _01d840_func
		mov    $0x000010,%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000004(%esp),%ecx
		mov    %dx,0x000008(%esp)
		add    $0x000020,%ebx
		add    %edx,%ecx
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000004(%esp)

	_02a682_jump:
		mov    0x000002(%esp),%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000011,%ebx
		add    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000a(%esp),%ebx
		mov    0x000028(%esi),%ax
		xor    %edx,%edx
		movl   $0x000001,0x000024(%esi)
		sar    $0x000010,%ebx
		mov    0x000074(%esi),%dl
		mov    %ax,0x00003c(%esi)
		sub    %edx,%ebx
		mov    %ebx,0x00002c(%esi)
		mov    0x000081(%esi),%dh
		mov    0x00002c(%esi),%ax
		or     $0x000004,%dh
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		mov    %dh,0x000081(%esi)
		call   _01f584_func
		mov    %edi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01dcec_func

	_02a6e5_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a6f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000076(%eax),%al
		cmp    0x000077(%ecx),%al
		je     _02a736_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _02a752_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _02a752_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    0x000081(%ecx),%dh
		movw   $0x000000,0x000040(%ecx)
		or     $0x000010,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _02a752_jump

	_02a736_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d4a0_func
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d498_func
		orb    $0x000010,0x000081(%ecx)

	_02a752_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		movw   $0x000000,0x000042(%ecx)
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _02a777_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _02a783_jump

	_02a777_jump:
		cmp    $0x000001,%eax
		jne    _02a78a_jump
		mov    $0x000003,%edx
		mov    %eax,%ebx

	_02a783_jump:
		mov    %ecx,%eax
		call   _058bb4_func

	_02a78a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a790_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e92c_func
		mov    _0c1ec0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _02a7b1_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02a7ba_jump

	_02a7b1_jump:
		jge    _02a7ba_jump
		orb    $0x000008,0x000081(%ecx)

	_02a7ba_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _02a7e0_jump
		mov    0x00002c(%ecx),%edx
		mov    $0x000001,%ebx
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000004,%edx
		call   _058bb4_func
		pop    %ecx
		pop    %ebx
		ret    

	_02a7e0_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    0x000081(%ecx),%dh
		movb   $0x000000,0x000070(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_02a804_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e92c_func
		mov    _0c1ec0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _02a825_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02a82e_jump

	_02a825_jump:
		jge    _02a82e_jump
		orb    $0x000008,0x000081(%ecx)

	_02a82e_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _02a868_jump
		testb  $0x000008,0x000081(%ecx)
		je     _02a854_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		pop    %ecx
		pop    %ebx
		ret    

	_02a854_jump:
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		pop    %ecx
		pop    %ebx
		ret    

	_02a868_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		andb   $0x0000ef,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_02a880_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _02a892_jump
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		je     _02a8a5_jump

	_02a892_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		cmp    $0x000001,%edx
		jne    _02a8b4_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		jne    _02a8b4_jump

	_02a8a5_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		call   _058bb4_func

	_02a8b4_jump:
		pop    %edx
		pop    %ebx
		ret    



_02a8b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000050(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02a8e2_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		movb   $0x000000,0x00007f(%ecx)
		movw   $0x000001,0x000052(%ecx)

	_02a8e2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a8f0_func:
		mov    0x00005c(%eax),%ax
		and    $0x00ffff,%eax
		sar    $0x00000b,%eax
		ret    



_02a900_func:
		mov    0x00005c(%eax),%ax
		and    $0x000007,%ah
		ret    



_02a908_func:
		push   %ebx
		call   _02a900_func
		movswl %ax,%ebx
		movswl %dx,%eax
		add    %ebx,%eax
		shl    $0x000003,%eax
		add    $_092a74_data,%eax
		pop    %ebx
		ret    



_02a928_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x00000c,%esp
		mov    %edx,%ecx
		mov    0x000060(%eax),%dx
		cmp    $0x000064,%dx
		jb     _02a9eb_jump
		jbe    _02a962_jump
		cmp    $0x0000d9,%dx
		je     _02a962_jump
		jmp    _02a9a1_jump

	_02a949_jump:
		xor    %bl,%bl
		mov    $0x000002,%al
		mov    %bl,(%esp)
		mov    %al,0x000002(%esp)
		mov    $0x000001,%bh
		mov    $0x0000ff,%ah
		mov    %bh,0x000001(%esp)
		mov    %ah,0x000003(%esp)
		jmp    _02a9ab_jump

	_02a962_jump:
		movb   $0x000001,(%esp)
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x00000b,%edx
		jne    _02a9a6_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		cmp    $0x000002,%edx
		jne    _02a981_jump
		movb   $0x000003,0x000001(%esp)
		jmp    _02a99a_jump

	_02a981_jump:
		mov    0x00006b(%eax),%al
		and    $0x0000ff,%eax
		cmp    $0x00000f,%eax
		jle    _02a995_jump
		movb   $0x000002,0x000001(%esp)
		jmp    _02a99a_jump

	_02a995_jump:
		movb   $0x0000ff,0x000001(%esp)

	_02a99a_jump:
		movb   $0x0000ff,0x000002(%esp)
		jmp    _02a9ab_jump

	_02a9a1_jump:
		xor    %dl,%dl
		mov    %dl,(%esp)

	_02a9a6_jump:
		movb   $0x0000ff,0x000001(%esp)

	_02a9ab_jump:
		xor    %eax,%eax

	_02a9ad_jump:
		movswl %ax,%edx
		mov    (%esp,%edx,1),%dl
		and    $0x0000ff,%edx
		movswl %cx,%ebx
		cmp    %edx,%ebx
		sete   %dl
		inc    %eax
		xor    %dh,%dh
		movswl %ax,%ebx
		mov    %edx,%esi
		mov    (%esp,%ebx,1),%bl
		and    $0x0000ff,%ebx
		cmp    $0x0000ff,%ebx
		je     _02a9e2_jump
		movswl %dx,%edx
		cmp    $0x000001,%edx
		jne    _02a9ad_jump

	_02a9e2_jump:
		mov    %esi,%eax
		add    $0x00000c,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02a9eb_jump:
		cmp    $0x000014,%dx
		je     _02a949_jump
		xor    %dl,%dl
		mov    %dl,(%esp)
		movb   $0x0000ff,0x000001(%esp)
		jmp    _02a9ab_jump



_02aa7c_func:
		push   %esi
		push   %edi
		mov    0x000014(%esp),%esi
		mov    0x000018(%esp),%edi
		sub    %esi,%eax
		sub    %edi,%edx
		add    %edi,%ecx
		mov    0x00000c(%esp),%edi
		add    %esi,%ebx
		cmp    %di,%ax
		jg     _02aace_jump
		cmp    0x000010(%esp),%dx
		jg     _02aace_jump
		movswl %ax,%esi
		movswl %bx,%eax
		add    %eax,%esi
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    %esi,%eax
		jg     _02aace_jump
		movswl %dx,%eax
		movswl %cx,%edx
		add    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _02aace_jump
		mov    $0x000001,%eax
		pop    %edi
		pop    %esi
		ret    $0x000010

	_02aace_jump:
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		ret    $0x000010



_02aad8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %ecx,(%esp)
		mov    0x000060(%eax),%dx
		mov    %edx,%eax
		cmp    $0x00004f,%dx
		jb     _02b61f_jump
		jbe    _02abfc_jump
		cmp    $0x000086,%dx
		jb     _02b5a3_jump
		jbe    _02ac47_jump
		cmp    $0x0000a7,%dx
		jb     _02b576_jump
		jbe    _02ac47_jump
		cmp    $0x0000be,%dx
		jb     _02b566_jump
		jbe    _02b335_jump
		cmp    $0x0000c3,%dx
		jb     _02ab4c_jump
		jbe    _02b350_jump
		cmp    $0x0000cc,%dx
		je     _02abe5_jump

	_02ab4c_jump:
		mov    0x000028(%esp),%edx
		mov    (%esp),%ecx
		mov    %edi,%ebx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01d3c0_func

	_02ab5f_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02ab68_jump:
		mov    0x000028(%esp),%ecx
		push   %ecx
		mov    0x000004(%esp),%eax
		mov    $0x000001,%edx
		push   %eax
		mov    %ebx,%ecx
		mov    %ebp,%ebx
		mov    %esi,%eax
		call   _01d840_func
		mov    (%esp),%eax
		mov    0x000028(%esp),%edx
		mov    (%eax),%ax
		cmp    (%edx),%ax
		jle    _02abb7_jump
		addw   $0x000004,0x000000(%ebp)
		mov    (%esp),%eax
		subw   $0x000008,(%eax)
		mov    (%edi),%bx
		add    $0x000008,%ebx
		mov    0x000028(%esp),%eax
		mov    %bx,(%edi)
		subw   $0x00000c,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02abb7_jump:
		mov    (%esp),%eax
		movswl (%eax),%eax
		sar    %eax
		movswl 0x000000(%ebp),%esi
		sub    $0x000003,%eax
		add    %eax,%esi
		mov    (%esp),%eax
		mov    %si,0x000000(%ebp)
		movw   $0x000006,(%eax)
		addw   $0x000010,(%edi)
		subw   $0x000020,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02abe5_jump:
		mov    0x000028(%esp),%edx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01d988_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02abfc_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d3c0_func
		mov    0x000014(%esp),%eax
		add    $0x00000d,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000d,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000004,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000004,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02ac47_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d3c0_func
		mov    0x000014(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,(%edi)
		mov    0x000004(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000014,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000014,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02ac9c_jump:
		mov    0x000028(%esp),%ebx
		mov    %ebp,%edx
		push   %ebx
		mov    %esi,%eax
		mov    %edi,%ebx
		call   _01d3c0_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02acb5_jump:
		mov    0x000028(%esp),%edx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01d3c0_func
		mov    (%esp),%eax
		movswl (%eax),%eax
		sar    %eax
		movswl 0x000000(%ebp),%esi
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    0x000028(%esp),%eax
		mov    %si,0x000000(%ebp)
		movswl (%eax),%eax
		sar    %eax
		movswl (%edi),%esi
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    (%esp),%eax
		mov    %si,(%edi)
		movw   $0x000004,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000004,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02ad06_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d3c0_func
		mov    0x000014(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,(%edi)
		mov    0x000004(%esp),%eax
		mov    (%esp),%edx
		sub    $0x00001e,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000008,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02ad5b_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d3c0_func
		mov    0x000014(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		sub    $0x000004,%eax
		mov    %ax,(%edi)
		mov    0x000004(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000004,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		add    $0x000003,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02adb0_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,0x00000c(%esp)
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		lea    0x000004(%esp),%ecx
		mov    %ah,0x000081(%esi)
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d3c0_func
		mov    0x00000c(%esp),%al
		mov    0x000081(%esi),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%esi)
		mov    %dl,%dh
		or     %al,%dh
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%eax
		mov    %dh,0x000081(%esi)
		cmp    $0x000002,%eax
		je     _02ae4a_jump
		mov    0x000014(%esp),%eax
		add    $0x000003,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000014,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000032,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000028,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02ae4a_jump:
		mov    0x000014(%esp),%eax
		add    $0x000014,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000023,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000001,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000001,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02ae7d_jump:
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d840_func
		mov    0x000014(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000010,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000020,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02aec4_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d3c0_func
		mov    0x000014(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,(%edi)
		mov    0x000004(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000008,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000006,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02af19_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d3c0_func
		mov    0x000014(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,(%edi)
		mov    0x000004(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000010,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000010,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02af6e_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sub    $0x000008,%eax
		mov    %ax,0x000000(%ebp)
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		sub    $0x00003c,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000010,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000032,(%eax)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _02ab5f_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%eax
		jne    _02afe2_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		mov    (%edi),%dx
		add    %eax,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,(%edi)
		mov    0x000028(%esp),%edx
		mov    0x00006b(%esi),%al
		mov    (%edx),%bx
		add    %eax,%eax
		sub    %eax,%ebx
		mov    %bx,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02afe2_jump:
		cmp    $0x000006,%eax
		jne    _02ab5f_jump
		mov    0x000028(%esp),%eax
		mov    (%eax),%cx
		sar    %cx
		mov    %cx,(%eax)
		mov    (%edi),%dx
		add    %ecx,%edx
		xor    %ebx,%ebx
		mov    %dx,(%edi)
		mov    $0x00000f,%eax
		mov    0x00006b(%esi),%bl
		cmp    %ebx,%eax
		jle    _02b010_jump
		mov    %ebx,%eax

	_02b010_jump:
		mov    (%edi),%bx
		add    %eax,%eax
		sub    %eax,%ebx
		mov    %bx,(%edi)
		xor    %ebx,%ebx
		mov    $0x00000f,%eax
		mov    0x00006b(%esi),%bl
		mov    0x000028(%esp),%edx
		cmp    %ebx,%eax
		jle    _02b02e_jump
		mov    %ebx,%eax

	_02b02e_jump:
		mov    (%edx),%cx
		add    %eax,%eax
		add    %eax,%ecx
		mov    %cx,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b041_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)

	_02b050_jump:
		mov    0x000028(%esp),%eax
		movw   $0x000000,(%ecx)
		movw   $0x000000,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b067_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x000032,(%ecx)
		movw   $0x00006e,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b08d_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _02b0f7_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _02b0f7_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000010,%eax
		jl     _02b0f7_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _02b0c5_jump
		mov    $0x000050,%eax
		jmp    _02b0ca_jump

	_02b0c5_jump:
		mov    $0x000010,%eax

	_02b0ca_jump:
		add    0x000028(%esi),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000044,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b0f7_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _02b12f_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _02b12f_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _02b125_jump
		mov    $0x000050,%eax
		jmp    _02b12a_jump

	_02b125_jump:
		mov    $0x000030,%eax

	_02b12a_jump:
		add    0x000028(%esi),%eax
		jmp    _02b138_jump

	_02b12f_jump:
		mov    0x000028(%esi),%ax
		add    $0x000040,%eax

	_02b138_jump:
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000026,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000020,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b162_jump:
		mov    0x000028(%esp),%ecx
		mov    %ebp,%edx
		push   %ecx
		mov    %esi,%eax
		mov    0x000004(%esp),%ecx
		call   _01d3c0_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b17d_jump:
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d840_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _02b1df_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _02b1df_jump
		mov    0x000014(%esp),%eax
		add    $0x000005,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00001c,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000006,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000016,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b1df_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _02b226_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		jne    _02b226_jump
		mov    0x000014(%esp),%eax
		add    $0x000006,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000012,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000d,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00000b,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b226_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _02ab5f_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _02ab5f_jump
		mov    0x000014(%esp),%eax
		add    $0x000007,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000013,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00000b,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b274_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d3c0_func
		mov    0x000014(%esp),%eax
		add    $0x000018,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000e,%eax
		mov    %ax,(%edi)
		mov    0x000004(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000030,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x00001b,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b2c9_jump:
		mov    0x000028(%esi),%ax
		add    $0x00004c,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000055,%eax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x000008,(%ecx)
		movw   $0x000008,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b2f9_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _02b050_jump
		mov    0x000028(%esp),%eax
		movw   $0x000016,(%ecx)
		movw   $0x000016,(%eax)
		addw   $0x000044,0x000000(%ebp)
		addw   $0x000041,(%ebx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b335_jump:
		mov    0x000028(%esp),%ecx
		mov    %ebp,%edx
		push   %ecx
		mov    %esi,%eax
		mov    0x000004(%esp),%ecx
		call   _05c970_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b350_jump:
		mov    0x000028(%esp),%ebx
		mov    %ebp,%edx
		push   %ebx
		mov    %esi,%eax
		mov    %edi,%ebx
		call   _01bdf0_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b369_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _02b37d_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000f,%eax
		je     _02b3a5_jump

	_02b37d_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _02b391_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000c,%eax
		je     _02b3a5_jump

	_02b391_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _02b3d8_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000d,%eax
		jne    _02b3d8_jump

	_02b3a5_jump:
		mov    0x000028(%esi),%ax
		add    $0x000036,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000037,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000e,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000015,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b3d8_jump:
		mov    0x000028(%esi),%ax
		add    $0x00004a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00002d,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000e,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000015,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b40b_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    $0x000001,%eax
		jne    _02b43c_jump
		mov    0x000028(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x00002b,(%ecx)
		movw   $0x00000f,(%eax)

	_02b43c_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    $0x000002,%eax
		jne    _02b470_jump
		mov    0x000028(%esi),%ax
		add    $0x000083,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000058,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000011,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000031,(%eax)

	_02b470_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    $0x000003,%eax
		jne    _02b4a4_jump
		mov    0x000028(%esi),%ax
		add    $0x00003e,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00002b,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000010,(%eax)

	_02b4a4_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    $0x000004,%eax
		jne    _02ab5f_jump
		mov    0x000028(%esi),%ax
		add    $0x000060,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000057,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000011,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b4e5_jump:
		mov    0x000028(%esp),%eax
		push   %eax
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _01d3c0_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    0x000007(%eax),%dl
		add    %dl,%dl
		shr    $0x000007,%dl
		mov    0x000007(%eax),%al
		and    $0x0000ff,%edx
		shr    $0x000007,%al
		add    %edx,%edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		lea    0x000000(,%eax,4),%esi
		sub    %eax,%esi
		mov    $0x000018,%eax
		shl    $0x000002,%esi
		mov    0x000000(%ebp),%dx
		sub    %esi,%eax
		add    %eax,%edx
		mov    %dx,0x000000(%ebp)
		mov    (%edi),%bx
		add    %eax,%ebx
		mov    (%esp),%edx
		mov    %bx,(%edi)
		add    %eax,%eax
		sub    %ax,(%edx)
		mov    0x000028(%esp),%edx
		sub    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b566_jump:
		cmp    $0x0000ac,%dx
		je     _02af6e_jump
		jmp    _02ab4c_jump

	_02b576_jump:
		cmp    $0x000092,%dx
		jb     _02b593_jump
		jbe    _02acb5_jump
		cmp    $0x0000a4,%dx
		je     _02b4e5_jump
		jmp    _02ab4c_jump

	_02b593_jump:
		cmp    $0x000087,%dx
		je     _02ad06_jump
		jmp    _02ab4c_jump

	_02b5a3_jump:
		cmp    $0x000077,%dx
		jb     _02b5eb_jump
		jbe    _02b2c9_jump
		cmp    $0x00007a,%dx
		jb     _02b5dc_jump
		jbe    _02aec4_jump
		cmp    $0x000081,%dx
		jb     _02ab4c_jump
		jbe    _02b40b_jump
		cmp    $0x000084,%dx
		je     _02b369_jump
		jmp    _02ab4c_jump

	_02b5dc_jump:
		cmp    $0x000079,%dx
		je     _02ad06_jump
		jmp    _02ab4c_jump

	_02b5eb_jump:
		cmp    $0x000061,%dx
		jb     _02b610_jump
		jbe    _02adb0_jump
		cmp    $0x000069,%dx
		jb     _02ab4c_jump
		cmp    $0x00006a,%dx
		jbe    _02ae7d_jump
		jmp    _02ab4c_jump

	_02b610_jump:
		cmp    $0x000053,%dx
		je     _02b2f9_jump
		jmp    _02ab4c_jump

	_02b61f_jump:
		cmp    $0x000039,%dx
		jb     _02b68a_jump
		jbe    _02ab68_jump
		cmp    $0x00003e,%dx
		jb     _02b66b_jump
		jbe    _02b17d_jump
		cmp    $0x000046,%dx
		jb     _02b65c_jump
		jbe    _02b274_jump
		cmp    $0x000047,%dx
		jbe    _02ad5b_jump
		cmp    $0x000049,%dx
		je     _02ac9c_jump
		jmp    _02ab4c_jump

	_02b65c_jump:
		cmp    $0x000042,%dx
		je     _02b162_jump
		jmp    _02ab4c_jump

	_02b66b_jump:
		cmp    $0x00003b,%dx
		jb     _02af19_jump
		jbe    _02b041_jump
		cmp    $0x00003c,%dx
		je     _02b08d_jump
		jmp    _02ab4c_jump

	_02b68a_jump:
		cmp    $0x000023,%dx
		jb     _02b6ca_jump
		jbe    _02af6e_jump
		cmp    $0x00002b,%dx
		jb     _02b6bb_jump
		jbe    _02af6e_jump
		cmp    $0x00002c,%dx
		jbe    _02ad5b_jump
		cmp    $0x000038,%dx
		je     _02af6e_jump
		jmp    _02ab4c_jump

	_02b6bb_jump:
		cmp    $0x000028,%dx
		je     _02aec4_jump
		jmp    _02ab4c_jump

	_02b6ca_jump:
		cmp    $0x000005,%dx
		jb     _02b6e5_jump
		jbe    _02b067_jump
		cmp    $0x000008,%dx
		je     _02ac47_jump
		jmp    _02ab4c_jump

	_02b6e5_jump:
		cmp    $0x000002,%dx
		je     _02ac47_jump
		jmp    _02ab4c_jump



_02b6f4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,(%esp)
		mov    %ecx,%ebp
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		xor    %edx,%edx
		mov    0x000060(%eax),%ax
		mov    %edx,0x00001c(%esp)
		mov    %edx,0x000024(%esp)
		mov    %edx,0x000020(%esp)
		mov    %edx,0x000014(%esp)
		lea    0x00000c(%esp),%edx
		mov    %eax,0x000010(%esp)
		push   %edx
		lea    0x00001c(%esp),%edx
		mov    %edi,%eax
		push   %edx
		movswl %si,%edx
		call   _01d840_func
		mov    %eax,%edx
		test   %ax,%ax
		jne    _02b9bc_jump
		mov    %edx,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02b74f_jump:
		mov    $0x000004,%ecx
		mov    $0x000002,%esi
		mov    $0xfffffffc,%edi
		mov    $0xfffffff6,%eax
		mov    %ecx,0x000014(%esp)
		mov    %esi,0x000020(%esp)
		mov    %edi,0x000024(%esp)
		mov    %eax,0x00001c(%esp)
		jmp    _02b9e7_jump

	_02b778_jump:
		mov    $0x000002,%edi
		xor    %esi,%esi
		mov    $0xfffffff6,%ebx
		mov    %esi,0x000014(%esp)
		mov    %edi,0x000020(%esp)
		mov    %esi,0x000024(%esp)
		mov    %ebx,0x00001c(%esp)
		jmp    _02b9e7_jump

	_02b799_jump:
		mov    $0x000002,%eax
		mov    $0xfffffffc,%ebx
		xor    %edi,%edi
		mov    $0xfffffff6,%ecx
		mov    %edi,0x000014(%esp)
		mov    %eax,0x000020(%esp)
		mov    %ebx,0x000024(%esp)
		mov    %ecx,0x00001c(%esp)
		jmp    _02b9e7_jump

	_02b7bf_jump:
		cmp    $0x000004,%si
		jb     _02b7d2_jump
		jbe    _02b778_jump
		cmp    $0x000005,%si
		je     _02b799_jump
		jmp    _02b9e7_jump

	_02b7d2_jump:
		cmp    $0x000003,%si
		je     _02b74f_jump
		jmp    _02b9e7_jump

	_02b7e1_jump:
		xor    %ebx,%ebx
		mov    0x00006d(%edi),%bl
		test   %ebx,%ebx
		jne    _02b7f5_jump
		mov    0x00006c(%edi),%bl
		test   %ebx,%ebx
		je     _02b87a_jump

	_02b7f5_jump:
		xor    %ebx,%ebx
		mov    0x00006d(%edi),%bl
		cmp    $0x000001,%ebx
		jne    _02b89b_jump
		xor    %ebx,%ebx
		mov    0x00006c(%edi),%bl
		test   %ebx,%ebx
		je     _02b87a_jump
		jmp    _02b89b_jump

	_02b811_jump:
		mov    $0x00000a,%esi
		mov    $0x000022,%eax
		mov    $0x000020,%ebx
		xor    %edi,%edi
		mov    %esi,0x000014(%esp)
		mov    %edi,0x000020(%esp)
		mov    %eax,0x000018(%esp)
		mov    %ebx,0x00000c(%esp)
		jmp    _02b9e7_jump

	_02b837_jump:
		mov    $0x000004,%eax
		mov    $0x00001a,%ecx
		xor    %ebx,%ebx
		mov    %eax,0x000014(%esp)
		mov    %ebx,0x000020(%esp)
		mov    %ecx,0x000018(%esp)
		jmp    _02b9e7_jump

	_02b854_jump:
		mov    $0x000004,%ebx
		mov    $0x000030,%esi
		mov    $0x000018,%edi
		xor    %ecx,%ecx
		mov    %ebx,0x000014(%esp)
		mov    %ecx,0x000020(%esp)
		mov    %esi,0x000018(%esp)
		mov    %edi,0x00000c(%esp)
		jmp    _02b9e7_jump

	_02b87a_jump:
		cmp    $0x000001,%si
		jb     _02b88d_jump
		jbe    _02b837_jump
		cmp    $0x000002,%si
		je     _02b854_jump
		jmp    _02b9e7_jump

	_02b88d_jump:
		test   %si,%si
		je     _02b811_jump
		jmp    _02b9e7_jump

	_02b89b_jump:
		xor    %ebx,%ebx
		mov    0x00006d(%edi),%bl
		test   %ebx,%ebx
		jne    _02b8dd_jump
		mov    0x00006c(%edi),%bl
		cmp    $0x000001,%ebx
		jne    _02b8dd_jump
		mov    0x000028(%edi),%ax
		add    $0x000070,%eax
		mov    %eax,0x000004(%esp)
		mov    0x00002c(%edi),%ax
		add    $0x0000b8,%eax
		mov    $0x000020,%edi
		mov    %eax,0x000008(%esp)
		mov    $0x000010,%eax
		mov    %edi,0x000018(%esp)
		mov    %eax,0x00000c(%esp)
		jmp    _02b9e7_jump

	_02b8dd_jump:
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    %ecx,0x000018(%esp)
		mov    %ecx,0x00000c(%esp)
		jmp    _02b9e7_jump

	_02b8ee_jump:
		xor    %ebx,%ebx
		mov    0x00006d(%edi),%bl
		test   %ebx,%ebx
		jne    _02b933_jump
		movzbl 0x00006c(%edi),%edi
		cmp    $0x000009,%edi
		je     _02b90a_jump
		cmp    $0x00000a,%edi
		je     _02b90a_jump
		cmp    $0x00000b,%edi
		jne    _02b933_jump

	_02b90a_jump:
		mov    $0xfffffff8,%eax
		mov    $0x000005,%ebx
		mov    $0x00001a,%ecx
		mov    $0x000008,%esi
		mov    %eax,0x000014(%esp)
		mov    %ebx,0x000020(%esp)
		mov    %ecx,0x000018(%esp)
		mov    %esi,0x00000c(%esp)
		jmp    _02b9e7_jump

	_02b933_jump:
		mov    $0x000001,%ebx
		mov    $0xfffffffb,%ecx
		mov    $0x000010,%esi
		mov    $0x00001e,%edi
		mov    %ebx,0x000014(%esp)
		mov    %ecx,0x000020(%esp)
		mov    %esi,0x000018(%esp)
		mov    %edi,0x00000c(%esp)
		jmp    _02b9e7_jump

	_02b95c_jump:
		mov    $0x000007,%esi
		xor    %ecx,%ecx
		mov    $0x000010,%edi
		mov    %ecx,0x000014(%esp)
		mov    %esi,0x000020(%esp)
		mov    %edi,0x000018(%esp)
		mov    %edi,0x00000c(%esp)
		jmp    _02b9e7_jump

	_02b97d_jump:
		mov    $0x000002,%edi
		mov    $0x00000d,%eax
		xor    %esi,%esi
		mov    $0x000009,%ebx
		mov    %esi,0x000014(%esp)
		mov    %edi,0x000020(%esp)
		mov    %eax,0x000018(%esp)
		mov    %ebx,0x00000c(%esp)
		jmp    _02b9e7_jump

	_02b9a0_jump:
		cmp    $0x000002,%si
		jb     _02b9b0_jump
		jbe    _02b95c_jump
		cmp    $0x000003,%si
		je     _02b97d_jump
		jmp    _02b9e7_jump

	_02b9b0_jump:
		cmp    $0x000001,%si
		je     _02b8ee_jump
		jmp    _02b9e7_jump

	_02b9bc_jump:
		mov    0x000010(%esp),%ebx
		cmp    $0x000051,%bx
		jb     _02b9dd_jump
		jbe    _02b7bf_jump
		cmp    $0x000064,%bx
		jb     _02b9e7_jump
		jbe    _02b9a0_jump
		cmp    $0x0000d9,%bx
		je     _02b9a0_jump
		jmp    _02b9e7_jump

	_02b9dd_jump:
		cmp    $0x000014,%bx
		je     _02b7e1_jump

	_02b9e7_jump:
		mov    0x000004(%esp),%eax
		mov    0x000014(%esp),%ecx
		mov    (%esp),%ebx
		add    %ecx,%eax
		mov    %ax,(%ebx)
		mov    0x000020(%esp),%esi
		mov    0x000008(%esp),%eax
		add    %esi,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000024(%esp),%edi
		mov    0x000018(%esp),%eax
		mov    0x000038(%esp),%ebx
		add    %edi,%eax
		mov    %ax,(%ebx)
		mov    0x00000c(%esp),%eax
		add    0x00001c(%esp),%eax
		mov    0x00003c(%esp),%ebx
		mov    %ax,(%ebx)
		mov    %edx,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_02ba30_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		mov    0x000048(%esp),%esi
		mov    %ax,0x000020(%esp)
		mov    %dx,0x000030(%esp)
		mov    %bx,0x00001c(%esp)
		mov    %cx,0x000034(%esp)
		mov    0x000060(%esi),%ax
		mov    $0xffffffff,%edi
		cmp    $0x000071,%ax
		jb     _02bd67_jump
		jbe    _02ba8c_jump
		cmp    $0x0000c6,%ax
		jb     _02bd71_jump
		jbe    _02bb29_jump
		cmp    $0x0000c8,%ax
		jb     _02bd71_jump
		cmp    $0x0000c9,%ax
		jbe    _02bb29_jump
		jmp    _02bd71_jump

	_02ba8c_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x00006b(%esi),%bl
		mov    %bl,%al
		mov    _094860_data(,%eax,2),%dx
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _02bd71_jump
		movswl %bx,%ebp
		mov    0x00002c(%esi),%cx
		mov    _0948ae_data(,%ebp,2),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%bl
		push   %eax
		add    %ecx,%ebx
		mov    _094886_data(,%ebp,2),%eax
		add    %ebx,%edx
		mov    _0948b0_data(,%ebp,2),%bx
		sar    $0x000010,%eax
		sub    %ebx,%edx
		push   %eax
		movswl %dx,%edx
		mov    0x00003a(%esp),%ecx
		push   %edx
		xor    %edx,%edx
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%dl
		sar    %eax
		add    %ebx,%edx
		sar    $0x000010,%ecx
		sub    %eax,%edx
		mov    0x000026(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		mov    0x00003a(%esp),%edx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02aa7c_func
		test   %ax,%ax
		je     _02bd71_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bb29_jump:
		mov    0x000034(%esp),%eax
		cmp    _0c257a_data,%ax
		jne    _02bc18_jump
		lea    0x000028(%esp),%eax
		push   %eax
		lea    0x000028(%esp),%eax
		push   %eax
		lea    0x000018(%esp),%eax
		push   %eax
		lea    0x000020(%esp),%eax
		lea    0x000014(%esp),%ecx
		push   %eax
		lea    0x000028(%esp),%eax
		lea    0x00001c(%esp),%ebx
		push   %eax
		lea    0x000040(%esp),%edx
		mov    %esi,%eax
		call   _01db50_func
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000036(%esp),%eax
		mov    0x00002a(%esp),%ebp
		sar    $0x000010,%eax
		sar    $0x000010,%ebp
		push   %eax
		mov    0x00002a(%esp),%eax
		mov    0x000042(%esp),%esi
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		mov    %eax,0x000010(%esp)
		mov    0x00003e(%esp),%eax
		mov    %esi,%ecx
		sar    $0x000010,%eax
		mov    0x000010(%esp),%ebx
		mov    %eax,0x000014(%esp)
		mov    %eax,%edx
		mov    %ebp,%eax
		call   _02aa7c_func
		test   %ax,%ax
		je     _02bbce_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bbce_jump:
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00001e(%esp),%eax
		mov    0x00000c(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000010(%esp),%edx
		push   %eax
		mov    %esi,%ecx
		mov    %ebp,%eax
		call   _02aa7c_func
		test   %ax,%ax
		je     _02bd71_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bc18_jump:
		lea    0x000028(%esp),%eax
		push   %eax
		lea    0x000028(%esp),%eax
		push   %eax
		lea    0x000018(%esp),%eax
		push   %eax
		lea    0x000020(%esp),%eax
		lea    0x000014(%esp),%ecx
		push   %eax
		lea    0x000028(%esp),%eax
		lea    0x00001c(%esp),%ebx
		push   %eax
		lea    0x000040(%esp),%edx
		mov    %esi,%eax
		call   _01db50_func
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x000012(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000036(%esp),%edx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02aa7c_func
		test   %ax,%ax
		je     _02bc8f_jump
		mov    $0x000006,%edi

	_02bc8f_jump:
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x000016(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000036(%esp),%edx
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02aa7c_func
		test   %ax,%ax
		je     _02bcda_jump
		mov    $0x000001,%edi

	_02bcda_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _02bd71_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%eax
		jne    _02bd71_jump
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x00001c(%esp),%eax
		lea    0x000030(%esp),%ebx
		push   %eax
		mov    $0x000009,%edx
		mov    %esi,%eax
		call   _01d840_func
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x000012(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000036(%esp),%edx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02aa7c_func
		test   %ax,%ax
		je     _02bd71_jump
		mov    $0x000009,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bd67_jump:
		cmp    $0x00002e,%ax
		je     _02bb29_jump

	_02bd71_jump:
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02bd7c_func:
		push   %esi
		push   %edi
		sub    $0x000034,%esp
		mov    0x000044(%esp),%esi
		mov    %eax,0x000010(%esp)
		mov    %dx,0x000028(%esp)
		mov    %bx,0x00002c(%esp)
		mov    %cx,0x000004(%esp)
		xor    %edx,%edx
		mov    %dx,0x000024(%esp)
		mov    %dx,(%esp)
		mov    %dx,0x000008(%esp)
		mov    %dx,0x000020(%esp)
		mov    $0xffffffff,%eax
		mov    0x00005c(%esi),%dx
		mov    %eax,0x00000c(%esp)
		test   %dx,%dx
		je     _02c00b_jump
		mov    %esi,%eax
		call   _02a8f0_func
		mov    %eax,0x000018(%esp)
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _02be3b_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000032,%eax
		je     _02bded_jump
		cmp    $0x0000e3,%eax
		jne    _02be08_jump

	_02bded_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _02be37_jump

	_02be08_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x0000a5,%eax
		jne    _02be3b_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000040,0x000007(%ebx,%eax,1)
		je     _02be3b_jump

	_02be37_jump:
		decl   0x000018(%esp)

	_02be3b_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%edx
		mov    %ax,0x000030(%esp)
		test   %dx,%dx
		jg     _02be67_jump
		jmp    _02c19b_jump

	_02be50_jump:
		mov    0x000030(%esp),%edi
		inc    %edi
		mov    0x000018(%esp),%edx
		mov    %di,0x000030(%esp)
		cmp    %dx,%di
		jge    _02c19b_jump

	_02be67_jump:
		mov    0x00002e(%esp),%edx
		mov    %esi,%eax
		sar    $0x000010,%edx
		call   _02a908_func
		mov    0x000006(%eax),%ch
		mov    %eax,%edi
		test   $0x000004,%ch
		je     _02be8b_jump
		xor    %eax,%eax
		mov    0x000010(%esp),%ax
		cmp    $0x00005e,%eax
		jne    _02be50_jump

	_02be8b_jump:
		testb  $0x000002,0x000006(%edi)
		je     _02bf50_jump
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		imul   $0x00000c,%eax,%edx
		mov    0x000004(%esi),%eax
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		xor    %ebx,%ebx
		and    $0x00003f,%dh
		mov    %dx,%bx
		xor    %edx,%edx
		mov    0x00006b(%esi),%dl
		imul   %ebx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000007(%edi),%dl
		mov    0x000003(%eax,%edx,4),%al
		and    $0x0000ff,%eax
		je     _02bfac_jump
		lea    0x000024(%esp),%eax
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000028(%esp),%ebx
		mov    %esi,%eax
		call   _01d840_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _02bf1e_jump
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000004(%edi),%al
		sub    %eax,%edx
		mov    (%edi),%bx
		mov    %edx,%eax
		mov    0x000020(%esp),%ecx
		sub    %ebx,%eax
		add    %eax,%ecx
		mov    %cx,0x000020(%esp)
		jmp    _02bf2c_jump

	_02bf1e_jump:
		mov    0x000020(%esp),%edx
		mov    (%edi),%ax
		add    %eax,%edx
		mov    %dx,0x000020(%esp)

	_02bf2c_jump:
		mov    0x000008(%esp),%edx
		mov    0x000002(%edi),%ax
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x000004(%edi),%al
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x000005(%edi),%al
		mov    %ax,0x000024(%esp)
		jmp    _02bfac_jump

	_02bf50_jump:
		mov    0x000028(%esi),%ax
		mov    (%edi),%bx
		add    %ebx,%eax
		mov    %ax,0x000020(%esp)
		mov    0x00002c(%esi),%ax
		mov    0x000002(%edi),%cx
		add    %ecx,%eax
		mov    %ax,0x000008(%esp)
		xor    %eax,%eax
		mov    0x000004(%edi),%al
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x000005(%edi),%al
		mov    %ax,0x000024(%esp)
		testb  $0x000008,0x000081(%esi)
		je     _02bfac_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		mov    0x00001e(%esp),%edx
		add    %ebx,%eax
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		add    %edx,%ebx
		add    %eax,%eax
		sub    %ebx,%eax
		mov    %ax,0x000020(%esp)

	_02bfac_jump:
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000032(%esp),%edx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02aa7c_func
		test   %ax,%ax
		je     _02be50_jump
		xor    %eax,%eax
		mov    0x000007(%edi),%al
		mov    %eax,0x00000c(%esp)
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02c00b_jump:
		xor    %eax,%eax
		mov    0x000079(%esi),%al
		cmp    $0x0000fe,%eax
		jne    _02c0bd_jump
		lea    0x000024(%esp),%eax
		mov    %esp,%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000024(%esp),%edx
		mov    %esi,%eax
		call   _02aad8_func
		testb  $0x000008,0x000081(%esi)
		je     _02c05d_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		mov    -0x000002(%esp),%ebx
		add    %edx,%eax
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		add    %eax,%eax
		sub    %ebx,%eax
		mov    %ax,0x000020(%esp)

	_02c05d_jump:
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000032(%esp),%edx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02aa7c_func
		test   %ax,%ax
		je     _02c0a8_jump
		movswl %ax,%edx
		jmp    _02c0ad_jump

	_02c0a8_jump:
		mov    $0xffffffff,%edx

	_02c0ad_jump:
		mov    %edx,0x00000c(%esp)
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02c0bd_jump:
		cmp    $0x0000ff,%eax
		jne    _02c19b_jump
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x000008(%edx,%eax,4),%ax
		xor    %ebx,%ebx
		and    $0x00003f,%ah
		mov    %bx,0x00001c(%esp)
		mov    %eax,0x000014(%esp)
		test   %ax,%ax
		jg     _02c114_jump
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02c0fd_jump:
		mov    0x00001c(%esp),%ebx
		inc    %ebx
		mov    0x000014(%esp),%ecx
		mov    %bx,0x00001c(%esp)
		cmp    %cx,%bx
		jge    _02c19b_jump

	_02c114_jump:
		mov    0x00001a(%esp),%edi
		sar    $0x000010,%edi
		mov    %esi,%eax
		mov    %edi,%edx
		call   _02a928_func
		test   %ax,%ax
		je     _02c0fd_jump
		lea    0x000024(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000024(%esp),%ebx
		push   %eax
		mov    %edi,%edx
		mov    %esi,%eax
		call   _02b6f4_func
		test   %ax,%ax
		je     _02c0fd_jump
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000032(%esp),%edx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02aa7c_func
		test   %ax,%ax
		je     _02c0fd_jump
		mov    0x00001c(%esp),%eax
		mov    %eax,0x00000c(%esp)

	_02c19b_jump:
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_02c1a8_func:
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    0x000028(%esp),%esi
		mov    %ax,0x000014(%esp)
		mov    %dx,0x000018(%esp)
		mov    %ebx,%edi
		mov    %cx,0x000010(%esp)
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01d840_func
		mov    %eax,%edx
		cwtl   
		test   %eax,%eax
		je     _02c226_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		mov    0x000016(%esp),%ecx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%edx
		push   %eax
		mov    0x000012(%esp),%eax
		movswl %di,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x000022(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02aa7c_func
		mov    %eax,%edx

	_02c226_jump:
		test   %dx,%dx
		je     _02c232_jump
		xor    %eax,%eax
		mov    0x000079(%esi),%al
		jmp    _02c237_jump

	_02c232_jump:
		mov    $0xffffffff,%eax

	_02c237_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02c240_func:
		push   %esi
		push   %edi
		mov    0x000010(%esp),%edi
		mov    %eax,%esi
		mov    %edx,%eax
		xor    %edx,%edx
		mov    0x000079(%edi),%dl
		cmp    $0x0000fd,%dx
		jb     _02c2a1_jump
		jbe    _02c261_jump
		cmp    $0x0000ff,%dx
		jbe    _02c280_jump
		jmp    _02c2a1_jump

	_02c261_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		movswl %cx,%esi
		cwtl   
		sar    $0x000010,%edx
		movswl %bx,%edi
		mov    %edx,%ecx
		mov    %esi,%ebx
		mov    %edi,%edx
		call   _02ba30_func
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02c280_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		sar    $0x000010,%edx
		movswl %cx,%ecx
		push   %edx
		movswl %ax,%edx
		xor    %eax,%eax
		movswl %bx,%ebx
		mov    %si,%ax
		call   _02bd7c_func
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02c2a1_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		movswl %cx,%esi
		cwtl   
		sar    $0x000010,%edx
		movswl %bx,%edi
		mov    %edx,%ecx
		mov    %esi,%ebx
		mov    %edi,%edx
		call   _02c1a8_func
		pop    %edi
		pop    %esi
		ret    $0x000008



_02c2c0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    0x000060(%eax),%ax
		cmp    $0x00009a,%ax
		jb     _02c540_jump
		jbe    _02c3bb_jump
		cmp    $0x0000a0,%ax
		jb     _02c51d_jump
		jbe    _02c4f1_jump
		cmp    $0x0000a9,%ax
		jb     _02c58b_jump
		jbe    _02c301_jump
		cmp    $0x000102,%ax
		jne    _02c58b_jump

	_02c301_jump:
		mov    $0x000001,%ecx
		mov    $0x000002,%esi
		xor    %ebx,%ebx
		mov    $0x0000ff,%edi
		mov    %bx,(%esp)
		mov    %cx,0x000002(%esp)
		mov    %si,0x000004(%esp)
		mov    %di,0x000006(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c334_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%ecx
		mov    $0x000003,%esi
		xor    %eax,%eax
		mov    $0x000004,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    $0x0000ff,%eax
		mov    %di,0x000008(%esp)
		mov    %ax,0x00000a(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c37b_jump:
		mov    $0x000005,%eax
		mov    $0x000006,%ebx
		mov    $0x000007,%ecx
		mov    $0x000008,%esi
		mov    $0x0000ff,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    %di,0x000008(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c3bb_jump:
		mov    $0x000001,%eax
		mov    $0x000002,%ebx
		mov    $0x000003,%ecx
		mov    $0x000004,%esi
		mov    $0x0000ff,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    %di,0x000008(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c3fb_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%ecx
		mov    $0x000003,%esi
		mov    $0x0000ff,%edi
		mov    %bx,(%esp)
		mov    %cx,0x000002(%esp)
		mov    %si,0x000004(%esp)
		mov    %di,0x000006(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c431_jump:
		mov    $0x000001,%ebx
		xor    %eax,%eax
		mov    $0x0000ff,%ecx
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c45a_jump:
		testb  $0x000008,_0c1b9d_data
		je     _02c4a0_jump
		mov    $0x000004,%edi
		mov    $0x000005,%eax
		mov    $0x000006,%ebx
		mov    $0x000007,%ecx
		mov    $0x000008,%esi
		mov    %di,(%esp)
		mov    %ax,0x000002(%esp)
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000006(%esp)
		mov    $0x000009,%edi
		mov    %si,0x000008(%esp)
		mov    %di,0x00000a(%esp)
		jmp    _02c4db_jump

	_02c4a0_jump:
		mov    $0x000009,%esi
		mov    $0x000008,%edi
		mov    $0x000007,%eax
		mov    $0x000006,%ebx
		mov    $0x000005,%ecx
		mov    %si,(%esp)
		mov    %di,0x000002(%esp)
		mov    %ax,0x000004(%esp)
		mov    %bx,0x000006(%esp)
		mov    $0x000004,%esi
		mov    %cx,0x000008(%esp)
		mov    %si,0x00000a(%esp)

	_02c4db_jump:
		movw   $0x0000ff,0x00000c(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c4f1_jump:
		mov    $0x000004,%eax
		mov    $0x000005,%ebx
		mov    $0x0000ff,%ecx
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c51d_jump:
		cmp    $0x00009b,%ax
		jbe    _02c3fb_jump
		cmp    $0x00009f,%ax
		je     _02c45a_jump
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c540_jump:
		cmp    $0x000051,%ax
		jb     _02c571_jump
		jbe    _02c301_jump
		cmp    $0x00007d,%ax
		jb     _02c58b_jump
		jbe    _02c334_jump
		cmp    $0x00008a,%ax
		je     _02c37b_jump
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c571_jump:
		cmp    $0x000010,%ax
		jb     _02c58b_jump
		cmp    $0x000011,%ax
		jbe    _02c431_jump
		cmp    $0x000018,%ax
		je     _02c431_jump

	_02c58b_jump:
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02c59c_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %bx,0x000008(%esp)
		xor    %ebx,%ebx
		mov    _0c1b44_data,%cx
		mov    _0c1b84_data,%bl
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    %cx,0x000004(%esp)
		mov    _0c1b85_data,%bl
		mov    _0c1b48_data,%cx
		add    %ebx,%ecx
		mov    %cx,(%esp)
		mov    %edx,%ebx
		mov    $0x000008,%edx
		add    %eax,%ebx
		mov    _0c32e5_data,%cl
		dec    %ebx
		test   $0x000002,%cl
		je     _02c5ec_jump
		mov    $0x000004,%edx

	_02c5ec_jump:
		movswl %bx,%esi
		movswl %ax,%edi
		movswl %dx,%edx
		mov    %edi,%ebx
		lea    (%esi,%edx,1),%ecx
		sub    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02c614_jump
		cmp    %ecx,%eax
		jg     _02c614_jump
		mov    $0x000001,%eax
		jmp    _02c616_jump

	_02c614_jump:
		xor    %eax,%eax

	_02c616_jump:
		test   %eax,%eax
		jne    _02c621_jump
		mov    $0x002710,%eax
		jmp    _02c672_jump

	_02c621_jump:
		mov    %esi,%ecx
		mov    %edi,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02c636_jump
		cmp    %ecx,%eax
		jg     _02c636_jump
		mov    $0x000001,%eax
		jmp    _02c638_jump

	_02c636_jump:
		xor    %eax,%eax

	_02c638_jump:
		test   %eax,%eax
		je     _02c659_jump
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		test   %eax,%eax
		jge    _02c652_jump
		neg    %eax

	_02c652_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_02c659_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		test   %eax,%eax
		jge    _02c66f_jump
		neg    %eax

	_02c66f_jump:
		neg    %eax
		dec    %eax

	_02c672_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_02c67c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    $0x000008,%edx
		mov    _0c32e5_data,%ah
		mov    %dx,0x000014(%esp)
		test   $0x000002,%ah
		je     _02c6a3_jump
		movw   $0x000004,0x000014(%esp)

	_02c6a3_jump:
		lea    0x000008(%esp),%eax
		mov    %esp,%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d840_func
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _02c6cb_jump
		neg    %eax

	_02c6cb_jump:
		mov    _09473e_data(,%eax,2),%eax
		sar    $0x000010,%eax
		call   _0557d0_func
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    0x00000e(%esp),%edi
		sar    $0x000009,%edx
		mov    _0c1b48_data,%cx
		movswl %dx,%ebx
		sar    $0x000010,%edi
		sub    %ebx,%eax
		mov    %dx,0x000004(%esp)
		sar    %eax
		mov    %edx,%ebx
		xor    %edx,%edx
		add    %eax,%edi
		mov    _0c1b84_data,%dl
		mov    %di,0x000010(%esp)
		add    %edi,%ebx
		xor    %eax,%eax
		mov    (%esp),%edi
		mov    0x000074(%esi),%al
		dec    %ebx
		add    %eax,%edi
		mov    _0c1b44_data,%ax
		movswl %bx,%ebp
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000012(%esp),%ebx
		mov    _0c1b85_data,%al
		sar    $0x000010,%ebx
		add    %eax,%ecx
		mov    0x00000e(%esp),%eax
		movswl %dx,%edx
		sar    $0x000010,%eax
		mov    %ecx,0x00000c(%esp)
		sub    %ebx,%eax
		lea    (%ebx,%ebp,1),%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    %edi,(%esp)
		cmp    %ebx,%eax
		jl     _02c766_jump
		cmp    %ecx,%eax
		jg     _02c766_jump
		mov    $0x000001,%eax
		jmp    _02c768_jump

	_02c766_jump:
		xor    %eax,%eax

	_02c768_jump:
		test   %eax,%eax
		je     _02c821_jump
		mov    (%esp),%eax
		sub    0x00000c(%esp),%eax
		movswl %ax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02c782_jump
		neg    %eax

	_02c782_jump:
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _02c821_jump
		mov    %ebx,%eax
		mov    0x00000e(%esp),%ebx
		sar    %eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %edx,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000008(%esp)
		movsbw 0x000076(%esi),%ax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _02c7bb_jump
		sar    %cl,%ax
		jmp    _02c7c4_jump

	_02c7bb_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02c7c4_jump:
		mov    0x00000e(%esp),%ebx
		mov    %ax,0x000008(%esp)
		mov    %ebp,%ecx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02c7e3_jump
		cmp    %ecx,%eax
		jg     _02c7e3_jump
		mov    $0x000001,%eax
		jmp    _02c7e5_jump

	_02c7e3_jump:
		xor    %eax,%eax

	_02c7e5_jump:
		test   %eax,%eax
		je     _02c800_jump
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02c7fa_jump
		neg    %eax

	_02c7fa_jump:
		mov    %ax,0x000054(%esi)
		jmp    _02c827_jump

	_02c800_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02c811_jump
		neg    %eax

	_02c811_jump:
		neg    %eax
		mov    %ax,0x000054(%esi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02c821_jump:
		movw   $0x002710,0x000054(%esi)

	_02c827_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02c834_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%esi
		mov    $0x000008,%edx
		mov    _0c32e5_data,%ah
		mov    %dx,0x000008(%esp)
		test   $0x000002,%ah
		je     _02c85a_jump
		movw   $0x000004,0x000008(%esp)

	_02c85a_jump:
		mov    $0x002710,%ebx
		xor    %eax,%eax
		mov    _0c1b44_data,%dx
		mov    _0c1b84_data,%al
		mov    0x000034(%esi),%cx
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x00001c(%esp)
		mov    _0c1b85_data,%al
		mov    _0c1b48_data,%dx
		xor    %edi,%edi
		add    %eax,%edx
		mov    _0c1b66_data,%ax
		mov    %edx,0x000010(%esp)
		cmp    %cx,%ax
		jne    _02c989_jump
		lea    0x000018(%esp),%eax
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000018(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d840_func
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00008a,%eax
		je     _02c8e4_jump
		cmp    $0x00009a,%eax
		je     _02c8e4_jump
		cmp    $0x00009b,%eax
		jne    _02c8fa_jump

	_02c8e4_jump:
		mov    0x000014(%esp),%ebx
		mov    (%esp),%ecx
		sub    $0x00000a,%ebx
		add    $0x000005,%ecx
		mov    %bx,0x000014(%esp)
		mov    %cx,(%esp)

	_02c8fa_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00009f,%eax
		jne    _02c96d_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _02c96d_jump
		mov    0x00006b(%esi),%al
		cmp    $0x000009,%eax
		jle    _02c96d_jump
		cmp    $0x000028,%eax
		jge    _02c96d_jump
		xor    %ebx,%ebx
		mov    _0c1b44_data,%edx
		mov    _0c1b84_data,%bl
		mov    0x000012(%esp),%eax
		add    %edx,%ebx
		mov    -0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		sub    %eax,%ebx
		movswl %bx,%eax
		test   %eax,%eax
		jle    _02c950_jump
		decl   _0c1b44_data
		jmp    _02c958_jump

	_02c950_jump:
		jge    _02c958_jump
		incl   _0c1b44_data

	_02c958_jump:
		xor    %eax,%eax
		mov    _0c1b44_data,%dx
		mov    _0c1b84_data,%al
		add    %eax,%edx
		mov    %dx,0x00001c(%esp)

	_02c96d_jump:
		mov    0x000002(%esp),%ebx
		mov    0x000012(%esp),%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02c59c_func
		mov    %eax,%ebx

	_02c989_jump:
		movswl %bx,%eax
		cmp    $0x002710,%eax
		jne    _02ca95_jump

	_02c997_jump:
		movswl %di,%edx
		mov    %esi,%eax
		call   _02c2c0_func
		inc    %edi
		mov    %ax,0x00000c(%esp)
		movswl %bx,%eax
		test   %eax,%eax
		jge    _02c9b0_jump
		neg    %eax

	_02c9b0_jump:
		cmp    $0x000007,%eax
		jle    _02ca95_jump
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		cmp    $0x0000ff,%edx
		je     _02ca95_jump
		lea    0x000018(%esp),%eax
		push   %eax
		lea    0x000018(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%ebx
		mov    %esi,%eax
		call   _01d840_func
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00008a,%eax
		je     _02ca10_jump
		cmp    $0x00009a,%eax
		je     _02ca10_jump
		cmp    $0x00009b,%eax
		jne    _02ca26_jump

	_02ca10_jump:
		mov    0x000014(%esp),%ebx
		mov    (%esp),%ecx
		sub    $0x00000a,%ebx
		add    $0x000005,%ecx
		mov    %bx,0x000014(%esp)
		mov    %cx,(%esp)

	_02ca26_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000012(%esp),%ecx
		mov    0x000006(%esp),%edx
		mov    0x00001a(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		add    %eax,%ecx
		sar    $0x000010,%ebx
		add    %edx,%ecx
		cmp    %ecx,%ebx
		jg     _02ca76_jump
		sub    %edx,%eax
		cmp    %eax,%ebx
		jl     _02ca76_jump
		mov    0x000010(%esp),%ebx
		sub    0x000004(%esp),%ebx
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00009f,%eax
		jne    _02ca7b_jump
		movswl %bx,%eax
		cmp    $0x000008,%eax
		jl     _02ca7b_jump
		cmp    $0x00000b,%eax
		jge    _02ca7b_jump
		xor    %ebx,%ebx
		jmp    _02ca7b_jump

	_02ca76_jump:
		mov    $0x002710,%ebx

	_02ca7b_jump:
		movswl %bx,%eax
		cmp    $0x002710,%eax
		je     _02c997_jump
		mov    0x00000c(%esp),%al
		mov    %al,0x000075(%esi)
		jmp    _02c997_jump

	_02ca95_jump:
		mov    %bx,0x000054(%esi)
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02caa4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,0x000010(%esp)
		andb   $0x0000f7,0x000081(%esi)
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d840_func
		mov    0x000010(%esp),%al
		mov    0x000081(%esi),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,%dh
		or     %al,%dh
		mov    $0x000037,%ebx
		mov    %dh,0x000081(%esi)
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000074(%esi),%al
		mov    %ebx,(%esp)
		add    %eax,%edx
		add    $0x000004,%ecx
		mov    %dx,0x000008(%esp)
		mov    %cx,0x000004(%esp)
		mov    0x000006(%esp),%ebx
		mov    0x000002(%esp),%eax
		mov    $0x000037,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _02c59c_func
		mov    %eax,%ebx
		cwtl   
		cmp    $0x002710,%eax
		je     _02cb4b_jump
		movb   $0x000002,0x000075(%esi)

	_02cb4b_jump:
		mov    %bx,0x000054(%esi)
		add    $0x000014,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02cb58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		je     _02cb71_jump
		cmp    $0x000006,%eax
		jne    _02cbe4_jump

	_02cb71_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x00000c,%eax
		jge    _02cbe4_jump
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d840_func
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    (%esp),%eax
		mov    $0x00002d,%ebx
		sub    $0x00002d,%eax
		mov    %dx,0x000008(%esp)
		movswl %ax,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		mov    %ebx,(%esp)
		add    %edx,%eax
		mov    0x000006(%esp),%ebx
		mov    %ax,0x00000c(%esp)
		sar    $0x000010,%ebx
		mov    0x00000a(%esp),%eax
		mov    $0x00002d,%edx
		sar    $0x000010,%eax
		call   _02c59c_func
		jmp    _02cbe9_jump

	_02cbe4_jump:
		mov    $0x002710,%eax

	_02cbe9_jump:
		mov    _0c1b66_data,%dx
		cmp    0x000034(%esi),%dx
		jne    _02cc3d_jump
		xor    %edx,%edx
		mov    0x00006c(%esi),%dl
		cmp    $0x000006,%edx
		jne    _02cc3d_jump
		xor    %edx,%edx
		mov    0x00006b(%esi),%dl
		cmp    $0x00000b,%edx
		jne    _02cc3d_jump
		mov    $0xffffffff,%edi
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		xor    %ebx,%ebx
		mov    %di,_0c1b66_data
		call   _01d4a8_func
		mov    _0c1b5e_data,%dx
		sub    $0x00000a,%edx
		mov    $0x002710,%eax
		mov    %dx,_0c1b5e_data

	_02cc3d_jump:
		mov    %ax,0x000054(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02cc4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000008,_092245_data(,%eax,4)
		je     _02cc71_jump
		mov    %esi,%eax
		call   _02c834_func
		jmp    _02cd3b_jump

	_02cc71_jump:
		cmp    $0x00006d,%eax
		je     _02cc7b_jump
		cmp    $0x000061,%eax
		jne    _02cc8a_jump

	_02cc7b_jump:
		mov    %esi,%eax
		call   _02caa4_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02cc8a_jump:
		cmp    $0x000083,%eax
		jne    _02cca0_jump
		mov    %esi,%eax
		call   _02cb58_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02cca0_jump:
		cmp    $0x0000fe,%eax
		jne    _02ccb6_jump
		mov    %esi,%eax
		call   _02c67c_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ccb6_jump:
		lea    0x000008(%esp),%eax
		mov    %esp,%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d840_func
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000008,%eax
		je     _02cd05_jump
		cmp    $0x000086,%eax
		je     _02cd05_jump
		cmp    $0x0000a7,%eax
		je     _02cd05_jump
		cmp    $0x0000b1,%eax
		je     _02cd05_jump
		cmp    $0x000006,%eax
		jne    _02cd1d_jump

	_02cd05_jump:
		mov    0x00000c(%esp),%ebx
		mov    0x000004(%esp),%ecx
		sub    $0x000002,%ebx
		add    $0x000004,%ecx
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000004(%esp)

	_02cd1d_jump:
		mov    -0x000002(%esp),%ebx
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02c59c_func
		mov    %ax,0x000054(%esi)

	_02cd3b_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02cd44_func:
		push   %edx
		call   _05f47c_func
		movb   $0x000001,_0c1ed5_data
		xor    %eax,%eax
		mov    _0c1ed1_data,%al
		test   %eax,%eax
		jne    _02cd6e_jump
		xor    %edx,%edx
		mov    _0c1ec0_data,%eax
		mov    %dx,_0c1ecc_data
		mov    %dx,0x000040(%eax)

	_02cd6e_jump:
		pop    %edx
		ret    



_02cd70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		xor    %ah,%ah
		mov    %ah,0x000010(%esp)
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    _0c1ec0_data,%eax
		call   _01d840_func
		mov    _0c1ec0_data,%edx
		mov    0x00003e(%edx),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jl     _02cdd5_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%bl
		mov    0x000074(%edx),%al
		add    %ebx,%eax
		mov    0x00002c(%edx),%esi
		sar    %eax
		add    %esi,%eax
		sar    $0x000004,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000028(%edx),%edi
		mov    0x000068(%edx),%al
		add    %edi,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		jmp    _02ce00_jump

	_02cdd5_jump:
		jge    _02ce09_jump
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000069(%edx),%al
		mov    0x000074(%edx),%bl
		add    %ebx,%eax
		sar    %eax
		add    0x00002c(%edx),%eax
		xor    %ebx,%ebx
		mov    0x000028(%edx),%ecx
		mov    0x000068(%edx),%bl
		add    %ecx,%ebx
		sar    $0x000004,%eax
		sar    $0x000004,%ebx
		cwtl   
		movswl %bx,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax

	_02ce00_jump:
		call   _01e288_func
		mov    %al,0x000010(%esp)

	_02ce09_jump:
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		testb  $0x000002,_092204_data(%eax)
		je     _02ce2c_jump
		call   _02cd44_func
		mov    $0x000001,%eax
		call   _05f05c_func
		jmp    _02cfab_jump

	_02ce2c_jump:
		mov    _0c2390_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0c1b04_data,%esi
		shl    $0x000002,%edx
		add    %edx,%esi
		mov    _0c245a_data,%dx
		xor    %edi,%edi
		test   %dx,%dx
		jg     _02ce8a_jump
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ce5e_jump:
		inc    %edi
		movswl %di,%edx
		mov    _0c2390_data(,%edx,2),%esi
		sar    $0x000010,%esi
		imul   $0x000084,%esi,%esi
		mov    _0c1b04_data,%edx
		mov    _0c245a_data,%bx
		add    %edx,%esi
		cmp    %bx,%di
		jge    _02cfab_jump

	_02ce8a_jump:
		cmpw   $0x000000,_0c24ee_data
		jne    _02cfab_jump
		cmpw   $0x000000,_0c24ec_data
		jne    _02cfab_jump
		cmpb   $0x000000,_0c2570_data
		jne    _02cfab_jump
		cmpb   $0x000000,_0c2571_data
		jne    _02cfab_jump
		xor    %edx,%edx
		mov    0x00007e(%esi),%dl
		test   %edx,%edx
		je     _02ce5e_jump
		xor    %edx,%edx
		mov    0x000076(%esi),%dl
		test   %edx,%edx
		je     _02ce5e_jump
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		testb  $0x000008,0x000007(%ebx,%edx,8)
		je     _02ce5e_jump
		mov    -0x000002(%esp),%edx
		mov    0x000002(%esp),%ecx
		mov    0x00000a(%esp),%ebx
		mov    $0x00005e,%eax
		push   %esi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		push   %edx
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _02c240_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _02ce5e_jump
		xor    %ecx,%ecx
		mov    0x000060(%esi),%cx
		movswl %dx,%edx
		lea    0x000000(,%ecx,4),%ebx
		mov    %esi,%eax
		add    %ecx,%ebx
		movzbw 0x000076(%esi),%di
		call   *_0932c4_data(,%ebx,4)
		call   _02cd44_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %edx,%eax
		movb   $0x000000,0x000071(%esi)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		shr    $0x000004,%al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x00000b,%edx
		je     _02cf7f_jump
		cmp    $0x00000a,%edx
		je     _02cf7f_jump
		movb   $0x000000,0x000072(%esi)

	_02cf7f_jump:
		xor    %eax,%eax
		movswl %di,%edx
		mov    0x000076(%esi),%al
		cmp    %edx,%eax
		jne    _02cfab_jump
		xor    %edx,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000001,_092247_data(,%eax,4)
		je     _02cfab_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000d6,%eax
		sar    $0x000010,%edx
		call   _06ac04_func

	_02cfab_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		nop

	_02cfb4_jump:
		ret    



_02d068_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    _0c1b48_data,%ebx
		mov    _0c1b85_data,%dl
		add    %edx,%ebx
		mov    _0c24b4_data,%edx
		sar    $0x000010,%edx
		shl    $0x000004,%edx
		xor    %eax,%eax
		cmp    %edx,%ebx
		jge    _02d212_jump
		mov    _0c1b64_data,%ebx
		mov    _0c1b6e_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%ebx
		jne    _02d0c9_jump
		lea    0x000000(,%edx,4),%eax
		mov    _0c24bc_data,%ebx
		sub    %edx,%eax
		mov    0x000002(%ebx,%eax,2),%al
		and    $0x0000ff,%eax
		cmp    $0x000008,%eax
		sete   %al
		xor    %ah,%ah

	_02d0c9_jump:
		test   %ax,%ax
		jne    _02d212_jump
		mov    _0c24b2_data,%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0c24bc_data,%ebx
		sub    %edx,%eax
		mov    0x000002(%ebx,%eax,2),%al
		and    $0x0000ff,%eax
		cmp    $0x000008,%eax
		sete   %bl
		xor    %bh,%bh
		mov    %ebx,%eax
		test   %bx,%bx
		jne    _02d212_jump
		xor    %ebx,%ebx
		lea    0x000001(%edx),%esi
		mov    _0c1b89_data,%bl
		lea    -0x000001(%edx),%ecx
		cmp    $0x000002,%ebx
		jne    _02d127_jump
		mov    _0c1b5a_data,%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		je     _02d164_jump

	_02d127_jump:
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    _0c24bc_data,%ecx
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		cmp    $0x000008,%eax
		je     _02d15b_jump
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		cmp    $0x000008,%eax
		jne    _02d162_jump

	_02d15b_jump:
		mov    $0x000001,%eax
		jmp    _02d164_jump

	_02d162_jump:
		xor    %eax,%eax

	_02d164_jump:
		test   %ax,%ax
		jne    _02d212_jump
		testb  $0x000002,_0c32e5_data
		jne    _02d212_jump
		xor    %ebx,%ebx
		mov    _0c1b89_data,%bl
		mov    _0c1b28_data,%ecx
		shl    $0x000002,%ebx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    _0c1b88_data,%bl
		testb  $0x000040,0x000007(%ecx,%ebx,8)
		jne    _02d212_jump
		mov    _0c24b2_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		mov    %edx,%eax
		sub    %ebx,%edx
		test   %edx,%edx
		jge    _02d1c4_jump

	_02d1b5_jump:
		mov    _0c24b2_data,%ebx
		sar    $0x000010,%ebx
		add    %ebx,%edx
		test   %edx,%edx
		jl     _02d1b5_jump

	_02d1c4_jump:
		test   %eax,%eax
		jge    _02d1d5_jump
		mov    _0c24b2_data,%ebx
		sar    $0x000010,%ebx
		add    %ebx,%eax
		jmp    _02d1c4_jump

	_02d1d5_jump:
		mov    %edx,%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		mov    _0c24bc_data,%ebx
		mov    0x000002(%ebx,%edx,2),%dl
		and    $0x0000ff,%edx
		cmp    $0x000008,%edx
		je     _02d206_jump
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    0x000002(%ebx,%eax,2),%al
		and    $0x0000ff,%eax
		cmp    $0x000008,%eax
		jne    _02d210_jump

	_02d206_jump:
		mov    $0x000001,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d210_jump:
		xor    %eax,%eax

	_02d212_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d218_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		xor    %eax,%eax
		mov    _0c1b48_data,%edx
		mov    _0c1b85_data,%al
		add    %eax,%edx
		mov    _0c24b4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %eax,%edx
		jge    _02d374_jump
		mov    _0c1b6e_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c24bc_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		cmp    $0x000018,%eax
		jne    _02d2ab_jump
		mov    $0x000020,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		mov    $0x000001,%cl
		call   _01d4a8_func
		xor    %edi,%edi
		mov    _0c1b48_data,%edx
		mov    %cl,_0c24d2_data
		mov    %di,_0c1b5e_data
		add    $0x000005,%edx
		mov    %di,_0c1b5c_data
		mov    %edx,_0c1b48_data
		call   _06a570_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d2ab_jump:
		xor    %edx,%edx
		mov    _0c1b81_data,%dl
		cmp    $0x000018,%edx
		jne    _02d2ee_jump
		mov    $0x000020,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		xor    %ecx,%ecx
		mov    $0x000001,%bh
		mov    %cx,_0c1b5e_data
		mov    %cx,_0c1b5c_data
		mov    %bh,_0c24d2_data
		call   _06a570_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d2ee_jump:
		cmp    $0x000019,%eax
		jne    _02d31e_jump
		mov    $0x00001f,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		mov    _0c247e_data,%ax
		mov    %ax,_0c25a0_data
		mov    %ax,_0c259e_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d31e_jump:
		testb  $0x000080,_0c32e5_data
		je     _02d374_jump
		testb  $0x000002,_092204_data(%eax)
		je     _02d374_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _02d348_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000026,%eax
		je     _02d374_jump

	_02d348_jump:
		mov    $0x000026,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		mov    $0x000001,%bl
		xor    %edx,%edx
		mov    %bl,_0c24d2_data
		mov    %dx,_0c1b5e_data
		mov    %dx,_0c1b5c_data

	_02d374_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d37c_func:
		push   %ebx
		push   %edx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0c1b5e_data
		mov    %dx,_0c1b5c_data
		mov    %ah,_0c1b99_data
		pop    %edx
		pop    %ebx
		ret    



_02d3ac_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		test   %al,%al
		je     _02d407_jump
		call   _068d58_func
		xor    %ebx,%ebx
		mov    _0c1b44_data,%dx
		mov    _0c1b84_data,%bl
		add    %edx,%ebx

	_02d3cc_jump:
		xor    %eax,%eax
		mov    _0c1b48_data,%edx
		mov    _0c1b85_data,%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e288_func
		and    $0x0000ff,%eax
		cmp    $0x00000a,%eax
		jne    _02d3ff_jump
		decl   _0c1b48_data
		jmp    _02d3cc_jump

	_02d3ff_jump:
		xor    %ah,%ah
		mov    %ah,_0c1b7e_data

	_02d407_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000006,%eax
		jne    _02d441_jump
		mov    $0x000008,%ebx
		mov    %eax,%edx
		mov    $_0c1b1c_data,%eax
		xor    %edi,%edi
		call   _01d4a8_func
		mov    %di,_0c1b5e_data
		xor    %bl,%bl
		mov    %di,_0c1b5c_data
		mov    %bl,_0c1ed4_data
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02d441_jump:
		testb  $0x000004,_0c1b9d_data
		je     _02d70b_jump
		cmp    $0x000003,%eax
		jne    _02d475_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000016,%eax
		je     _02d70b_jump
		cmp    $0x000020,%eax
		je     _02d70b_jump
		cmp    $0x000026,%eax
		je     _02d70b_jump

	_02d475_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _02d491_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00001f,%eax
		je     _02d70b_jump

	_02d491_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000040,0x000007(%ebx,%eax,1)
		je     _02d4e5_jump
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		call   _024288_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092204_data(%eax)
		je     _02d4e5_jump
		mov    $0x00003d,%ebx
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		jmp    _02d4f4_jump

	_02d4e5_jump:
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax

	_02d4f4_jump:
		call   _01d4a8_func
		xor    %ebx,%ebx
		mov    %bx,_0c25d2_data
		test   %ecx,%ecx
		jne    _02d552_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _02d51b_jump
		mov    _0c1b88_data,%al
		cmp    $0x00003d,%eax
		je     _02d552_jump

	_02d51b_jump:
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _02d53b_jump
		movw   $0x00fffe,_0c1b5c_data
		jmp    _02d544_jump

	_02d53b_jump:
		movw   $0x000002,_0c1b5c_data

	_02d544_jump:
		movw   $0x00fffd,_0c1b5e_data
		jmp    _02d6a9_jump

	_02d552_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _02d56b_jump
		mov    _0c1b88_data,%al
		cmp    $0x00003d,%eax
		je     _02d6a9_jump

	_02d56b_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x0000b4,%eax
		jne    _02d582_jump
		call   _06efdc_func
		jmp    _02d656_jump

	_02d582_jump:
		cmp    $0x000096,%eax
		jne    _02d593_jump
		call   _070ef0_func
		jmp    _02d656_jump

	_02d593_jump:
		cmp    $0x0000c6,%eax
		je     _02d651_jump
		cmp    $0x0000c8,%eax
		jne    _02d5af_jump
		mov    $0xffffffff,%eax
		jmp    _02d656_jump

	_02d5af_jump:
		cmp    $0x000064,%eax
		jne    _02d5d8_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _02d656_jump
		mov    $0xffffffff,%eax
		jmp    _02d656_jump

	_02d5d8_jump:
		cmp    $0x000078,%eax
		jne    _02d5e9_jump
		mov    %ecx,%eax
		call   _02005c_func
		jmp    _02d656_jump

	_02d5e9_jump:
		cmp    $0x0000bb,%eax
		jne    _02d5f9_jump
		mov    %ecx,%eax
		call   _05e5d8_func
		jmp    _02d656_jump

	_02d5f9_jump:
		cmp    $0x0000d1,%eax
		je     _02d651_jump
		cmp    $0x0000d2,%eax
		jne    _02d60e_jump
		mov    $0xffffffff,%eax
		jmp    _02d656_jump

	_02d60e_jump:
		mov    0x00003e(%ecx),%edx
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _02d62e_jump
		mov    $0x000001,%eax
		jg     _02d62e_jump
		neg    %eax

	_02d62e_jump:
		movswl %ax,%edx
		test   %edx,%edx
		jne    _02d656_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _02d651_jump
		mov    $0xffffffff,%eax
		jmp    _02d656_jump

	_02d651_jump:
		mov    $0x000001,%eax

	_02d656_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		testb  $0x000004,_092245_data(,%edx,4)
		je     _02d66d_jump
		mov    $0x000005,%edx
		jmp    _02d681_jump

	_02d66d_jump:
		cmp    $0x0000b4,%edx
		jne    _02d67c_jump
		mov    $0x000004,%edx
		jmp    _02d681_jump

	_02d67c_jump:
		mov    $0x000002,%edx

	_02d681_jump:
		cwtl   
		cmp    $0x000001,%eax
		jne    _02d690_jump
		mov    %dx,_0c1b5c_data
		jmp    _02d69f_jump

	_02d690_jump:
		cmp    $0xffffffff,%eax
		jne    _02d69f_jump
		mov    %edx,%eax
		neg    %eax
		mov    %ax,_0c1b5c_data

	_02d69f_jump:
		inc    %edx
		neg    %edx
		mov    %dx,_0c1b5e_data

	_02d6a9_jump:
		mov    $0x000001,%cl
		mov    $0xffffffff,%edx
		xor    %eax,%eax
		xor    %esi,%esi
		mov    %cl,_0c1aee_data
		mov    %ax,_0c24c4_data
		mov    %dx,_0c24d4_data
		mov    %dx,_0c1b66_data
		mov    %si,_0c1b64_data
		mov    _0c32e4_data,%dl
		xor    %ch,%ch
		xor    %al,%al
		mov    %ch,_0c1b8d_data
		mov    %ch,_0c1b8e_data
		xor    %ah,%ah
		mov    %ch,_0c1ed4_data
		mov    %ax,_0c2584_data
		test   $0x000008,%dl
		je     _02d704_jump
		mov    %cl,_0c24d3_data

	_02d704_jump:
		xor    %eax,%eax
		call   _065064_func

	_02d70b_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02d710_func:
		push   %ecx
		push   %esi
		mov    0x000081(%eax),%cl
		shl    $0x000004,%cl
		shr    $0x000007,%cl
		and    $0x0000ff,%ecx
		jne    _02d735_jump
		xor    %ecx,%ecx
		mov    (%edx),%si
		mov    0x00007a(%eax),%cl
		sub    %ecx,%esi
		mov    %si,(%edx)
		jmp    _02d742_jump

	_02d735_jump:
		movswl (%ebx),%esi
		movswl (%edx),%ecx
		sar    %esi
		add    %esi,%ecx
		mov    %cx,(%edx)

	_02d742_jump:
		movswl (%ebx),%edx
		mov    0x00007a(%eax),%al
		sar    %edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		mov    %ax,(%ebx)
		pop    %esi
		pop    %ecx
		ret    

_02d758_switch:
		.long   _02da23_case
		.long   _02d905_case
		.long   _02d9da_case
		.long   _02d894_case
		.long   _02d894_case
		.long   _02d963_case




_02d770_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		lea    0x000008(%esp),%eax
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d3c0_func
		mov    0x000060(%esi),%ax
		mov    %eax,%edx
		cmp    $0x00007b,%ax
		jb     _02de9b_jump
		jbe    _02da6c_jump
		cmp    $0x0000b5,%ax
		jb     _02de15_jump
		jbe    _02daf3_jump
		cmp    $0x0000d4,%ax
		jb     _02ddd1_jump
		jbe    _02dd7f_jump
		cmp    $0x0000e2,%ax
		jb     _02ddb5_jump
		jbe    _02dcca_jump
		cmp    $0x0000ef,%ax
		je     _02d844_jump
		jmp    _02dda3_jump

	_02d7e1_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    %edx
		sar    $0x000011,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		mov    0x000004(%esp),%edi
		sar    $0x000010,%eax
		sub    $0x000010,%edi
		add    %edx,%eax
		mov    %di,0x000004(%esp)
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %ax,(%esp)
		addw   $0x000040,0x000008(%esp)
		jmp    _02d894_case

	_02d823_jump:
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%edx
		mov    %eax,%ebx
		add    %eax,%edx
		add    $0x0000c8,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,0x000008(%esp)
		jmp    _02d894_case

	_02d844_jump:
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d710_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _02d894_case
		mov    0x00006c(%esi),%al
		cmp    $0x000004,%eax
		jne    _02d894_case
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		mov    0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%ebx
		mov    %bx,0x000008(%esp)

	_02d894_case:
		mov    _0c2578_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0c2576_data,%eax
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%ecx
		push   %eax
		mov    _0c2574_data,%eax
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%edx
		push   %eax
		mov    _0c2572_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02aa7c_func
		test   %ax,%ax
		je     _02dfd2_jump
		xor    %eax,%eax
		mov    0x00007b(%esi),%al
		cmp    $0x000002,%eax
		jge    _02dfb5_jump
		test   %eax,%eax
		jne    _02dfa3_jump
		movb   $0x000001,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d905_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _02d894_case
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _02d894_case
		xor    %eax,%eax
		mov    0x000008(%esp),%ecx
		mov    0x00007a(%esi),%al
		add    %eax,%ecx
		mov    %cx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x00007a(%esi),%al
		sub    %eax,%edi
		mov    %di,0x000004(%esp)
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x00007a(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		jmp    _02d894_case

	_02d963_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _02d894_case
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		jne    _02d894_case
		mov    -0x000002(%esp),%edx
		sar    $0x000011,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		dec    %edx
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		mov    %ax,0x00000c(%esp)
		sar    $0x000011,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000014,%edi
		add    %edx,%eax
		mov    %di,(%esp)
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x00007a(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		testb  $0x000008,0x000081(%esi)
		jne    _02d894_case
		sub    %di,0x00000c(%esp)
		jmp    _02d894_case

	_02d9da_case:
		mov    0x000008(%esp),%ecx
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x00007a(%esi),%al
		mov    -0x000002(%esp),%edx
		add    %ecx,%eax
		sar    $0x000011,%edx
		sub    %eax,%edi
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    (%esp),%eax
		mov    %eax,%edx
		add    %eax,%edx
		mov    %di,0x000004(%esp)
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    %ecx,%ebx
		mov    0x00007a(%esi),%al
		add    %eax,%ebx
		mov    %bx,0x000008(%esp)
		jmp    _02d894_case

	_02da23_case:
		xor    %eax,%eax
		mov    0x000008(%esp),%ebx
		mov    0x00007a(%esi),%al
		mov    0x000004(%esp),%ecx
		add    %ebx,%eax
		sub    %eax,%ecx
		mov    %cx,0x000004(%esp)
		xor    %eax,%eax
		mov    %ebx,%edi
		mov    0x00007a(%esi),%al
		add    %eax,%edi
		mov    %di,0x000008(%esp)

	_02da47_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    (%esp),%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x00000c(%esp),%ebx
		mov    0x00007a(%esi),%al
		sub    %eax,%ebx
		mov    %bx,0x00000c(%esp)
		jmp    _02d894_case

	_02da6c_jump:
		mov    0x000075(%esi),%al
		sub    $0x000002,%al
		cmp    $0x000005,%al
		ja     _02d894_case
		and    $0x0000ff,%eax
		jmp    *%cs:_02d758_switch(,%eax,4)

	_02da86_jump:
		testb  $0x000008,0x000081(%esi)
		je     _02da98_jump
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		jmp    _02daa1_jump

	_02da98_jump:
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		neg    %edx

	_02daa1_jump:
		mov    0x00000a(%esp),%eax
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%ecx
		sar    $0x000010,%eax
		sub    $0x000032,%ebx
		add    $0x000032,%ecx
		mov    %bx,0x000004(%esp)
		add    %edx,%eax
		mov    %cx,0x000008(%esp)
		mov    %ax,0x00000c(%esp)
		jmp    _02d894_case

	_02dacc_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		test   %eax,%eax
		je     _02d894_case
		mov    _0c24b6_data,%ax
		xor    %edx,%edx
		shl    $0x000004,%eax
		mov    %dx,0x000004(%esp)
		mov    %ax,0x000008(%esp)
		jmp    _02d894_case

	_02daf3_jump:
		mov    0x000028(%esi),%dx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000068(%esi),%al
		mov    %bx,0x000004(%esp)
		add    %eax,%edx
		mov    _0c24b6_data,%ax
		mov    %dx,0x00000c(%esp)
		mov    $0x000010,%edx
		shl    $0x000004,%eax
		mov    %dx,(%esp)
		mov    %ax,0x000008(%esp)
		jmp    _02d894_case

	_02db26_jump:
		xor    %edx,%edx
		mov    0x000006(%esp),%eax
		mov    0x00007a(%esi),%dl
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		mov    %ax,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		mov    %esp,%ebx
		sub    %edx,%eax
		lea    0x00000c(%esp),%edx
		mov    %ax,0x000004(%esp)
		mov    %esi,%eax
		call   _02d710_func
		jmp    _02d894_case

	_02db64_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		xor    %edx,%edx
		mov    %ax,0x000008(%esp)
		mov    %al,%dl
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)

	_02db82_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    (%esp),%ecx
		add    %eax,%eax
		add    %eax,%ecx
		mov    %cx,(%esp)
		xor    %eax,%eax
		mov    0x00000c(%esp),%edi
		mov    0x00007a(%esi),%al
		sub    %eax,%edi
		mov    %di,0x00000c(%esp)
		jmp    _02d894_case

	_02dba7_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _02dbce_jump
		mov    0x00007a(%esi),%al
		mov    -0x000002(%esp),%edx
		sar    %eax
		sar    $0x000011,%edx
		sub    %eax,%edx
		mov    0x00000a(%esp),%eax
		jmp    _02dbd9_jump

	_02dbce_jump:
		mov    -0x000002(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000011,%edx

	_02dbd9_jump:
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		sar    %eax
		mov    0x000006(%esp),%edx
		mov    %ax,(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000011,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		jmp    _02d894_case

	_02dc14_jump:
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d710_func
		mov    0x000008(%esp),%eax
		add    %eax,%eax
		mov    %ax,0x000008(%esp)
		jmp    _02d894_case

	_02dc31_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _02dc56_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%ecx
		mov    0x00007a(%esi),%al
		sub    %eax,%ecx
		mov    %cx,0x00000c(%esp)
		jmp    _02dc71_jump

	_02dc56_jump:
		mov    -0x000002(%esp),%edx
		sar    $0x000011,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000096,%edx
		add    %edx,%eax
		mov    %ax,0x00000c(%esp)

	_02dc71_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		add    $0x000096,%eax
		mov    0x000006(%esp),%edx
		mov    %ax,(%esp)
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00007a(%esi),%al
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %ax,0x000008(%esp)
		jmp    _02d894_case

	_02dcae_jump:
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		mov    $0x000096,%ecx
		call   _02d710_func
		mov    %cx,0x000008(%esp)
		jmp    _02d894_case

	_02dcca_jump:
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		mov    $0x000096,%ecx
		call   _02d710_func
		mov    0x00000c(%esp),%edi
		mov    0x000004(%esp),%eax
		mov    %cx,0x000008(%esp)
		add    $0x000046,%edi
		add    $0x000032,%eax
		mov    %di,0x00000c(%esp)
		mov    %ax,0x000004(%esp)
		jmp    _02d894_case

	_02dd00_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _02dd1b_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000018,%eax
		je     _02dd2f_jump
		cmp    $0x00001e,%eax
		je     _02dd2f_jump
		cmp    $0x00000b,%eax
		je     _02dd2f_jump

	_02dd1b_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _02dd54_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _02dd54_jump

	_02dd2f_jump:
		mov    $0x00000a,%eax
		mov    0x00000c(%esp),%edx
		mov    (%esp),%ebx
		mov    %ax,0x000008(%esp)
		sub    $0x000028,%edx
		add    $0x000050,%ebx
		mov    %dx,0x00000c(%esp)
		mov    %bx,(%esp)
		jmp    _02d894_case

	_02dd54_jump:
		mov    $0x0000c8,%ebx
		mov    0x00000c(%esp),%ecx
		mov    (%esp),%edi
		mov    %bx,0x000008(%esp)
		sub    $0x000082,%ecx
		add    $0x000104,%edi
		mov    %cx,0x00000c(%esp)
		mov    %di,(%esp)
		jmp    _02d894_case

	_02dd7f_jump:
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d710_func
		movw   $0x0000fa,0x000008(%esp)
		jmp    _02d894_case

	_02dd98_jump:
		addw   $0x000014,0x000008(%esp)
		jmp    _02d894_case

	_02dda3_jump:
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d710_func
		jmp    _02d894_case

	_02ddb5_jump:
		cmp    $0x0000e1,%ax
		je     _02dcae_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d710_func
		jmp    _02d894_case

	_02ddd1_jump:
		cmp    $0x0000c3,%ax
		jb     _02ddf9_jump
		jbe    _02dd00_jump
		cmp    $0x0000c7,%ax
		je     _02daf3_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d710_func
		jmp    _02d894_case

	_02ddf9_jump:
		cmp    $0x0000b8,%ax
		je     _02dcca_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d710_func
		jmp    _02d894_case

	_02de15_jump:
		cmp    $0x000099,%ax
		jb     _02de6f_jump
		jbe    _02d7e1_jump
		cmp    $0x0000ac,%ax
		jb     _02de49_jump
		jbe    _02dc14_jump
		cmp    $0x0000ae,%ax
		je     _02dcae_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d710_func
		jmp    _02d894_case

	_02de49_jump:
		cmp    $0x0000a8,%ax
		jb     _02dda3_jump
		cmp    $0x0000a9,%ax
		jbe    _02da47_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d710_func
		jmp    _02d894_case

	_02de6f_jump:
		cmp    $0x000084,%ax
		jb     _02dda3_jump
		jbe    _02da86_jump
		cmp    $0x000093,%ax
		je     _02dacc_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d710_func
		jmp    _02d894_case

	_02de9b_jump:
		cmp    $0x000038,%ax
		jb     _02df27_jump
		jbe    _02dc14_jump
		cmp    $0x000051,%ax
		jb     _02defb_jump
		jbe    _02da47_jump
		cmp    $0x000064,%ax
		jb     _02dedf_jump
		jbe    _02dc31_jump
		cmp    $0x000074,%ax
		je     _02dba7_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d710_func
		jmp    _02d894_case

	_02dedf_jump:
		cmp    $0x000059,%ax
		je     _02dd98_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d710_func
		jmp    _02d894_case

	_02defb_jump:
		cmp    $0x00003d,%ax
		jb     _02dda3_jump
		jbe    _02db26_jump
		cmp    $0x00004d,%ax
		je     _02d844_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d710_func
		jmp    _02d894_case

	_02df27_jump:
		cmp    $0x00000e,%ax
		jb     _02df77_jump
		jbe    _02db64_jump
		cmp    $0x000015,%ax
		jb     _02df5b_jump
		jbe    _02d894_case
		cmp    $0x000035,%ax
		je     _02d823_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d710_func
		jmp    _02d894_case

	_02df5b_jump:
		cmp    $0x000014,%ax
		je     _02da47_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d710_func
		jmp    _02d894_case

	_02df77_jump:
		cmp    $0x000005,%ax
		jb     _02dda3_jump
		jbe    _02da47_jump
		cmp    $0x00000c,%ax
		je     _02db82_jump
		mov    %esp,%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d710_func
		jmp    _02d894_case

	_02dfa3_jump:
		cmp    $0x000001,%eax
		jne    _02dfe8_jump
		movb   $0x000002,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02dfb5_jump:
		mov    %al,%bl
		inc    %bl
		xor    %eax,%eax
		mov    %bl,%al
		mov    %bl,0x00007b(%esi)
		cmp    $0x000014,%eax
		jne    _02dfe8_jump
		movb   $0x000002,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02dfd2_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		movb   $0x000000,0x00007b(%esi)
		cmp    $0x000015,%eax
		jne    _02dfe8_jump
		andb   $0x0000fe,0x000081(%esi)

	_02dfe8_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi

	_02dfed_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02dff4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000032(%eax),%edx
		mov    $0x0000cc,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		mov    0x000060(%ecx),%ax
		mov    %eax,%edx
		cmp    $0x000039,%ax
		jb     _02e1c5_jump
		jbe    _02e054_jump
		cmp    $0x000069,%ax
		jb     _02e15a_jump
		cmp    $0x00006b,%ax
		jbe    _02e049_jump
		cmp    $0x000091,%ax
		jb     _02e124_jump
		jbe    _02e049_jump
		cmp    $0x0000bc,%ax
		jb     _02e10f_jump
		jbe    _02e049_jump
		cmp    $0x0000f3,%ax
		jne    _02e05e_jump

	_02e049_jump:
		andb   $0x0000f7,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e054_jump:
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		cmp    $0x000004,%edx
		jne    _02e049_jump

	_02e05e_jump:
		mov    %ecx,%eax
		call   _01dc54_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e069_jump:
		movb   $0x000001,0x00007f(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e071_jump:
		mov    %ecx,%eax
		call   _01dc54_func
		testb  $0x000008,0x000081(%ecx)
		je     _02e096_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e096_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e0ab_jump:
		mov    0x000075(%ecx),%al
		cmp    $0x000006,%al
		jb     _02e0c2_jump
		jbe    _02dfed_jump
		cmp    $0x000007,%al
		je     _02dfed_jump
		jmp    _02e0ce_jump

	_02e0c2_jump:
		cmp    $0x000002,%al
		jb     _02e0ce_jump
		cmp    $0x000003,%al
		jbe    _02dfed_jump

	_02e0ce_jump:
		mov    %ecx,%eax
		call   _01dc54_func
		testb  $0x000008,0x000081(%ecx)
		je     _02e096_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e0f3_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    $0x000007,%edx
		call   _01dc54_func
		mov    %ecx,%eax
		call   _058bb4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e10f_jump:
		cmp    $0x0000a5,%ax
		je     _02e071_jump
		mov    %ecx,%eax
		call   _01dc54_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e124_jump:
		cmp    $0x00007b,%ax
		jb     _02e145_jump
		jbe    _02e0ab_jump
		cmp    $0x00008e,%ax
		je     _02e049_jump
		mov    %ecx,%eax
		call   _01dc54_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e145_jump:
		cmp    $0x00006d,%ax
		je     _02e049_jump
		mov    %ecx,%eax
		call   _01dc54_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e15a_jump:
		cmp    $0x00003f,%ax
		jb     _02e1a6_jump
		jbe    _02e049_jump
		cmp    $0x000052,%ax
		jb     _02e187_jump
		jbe    _02e049_jump
		cmp    $0x000065,%ax
		je     _02e049_jump
		mov    %ecx,%eax
		call   _01dc54_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e187_jump:
		cmp    $0x000044,%ax
		jb     _02e05e_jump
		cmp    $0x000045,%ax
		jbe    _02e049_jump
		mov    %ecx,%eax
		call   _01dc54_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e1a6_jump:
		cmp    $0x00003a,%ax
		jbe    _02e049_jump
		cmp    $0x00003c,%ax
		je     _02e0f3_jump
		mov    %ecx,%eax
		call   _01dc54_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e1c5_jump:
		cmp    $0x00001b,%ax
		jb     _02e238_jump
		jbe    _02e049_jump
		cmp    $0x000029,%ax
		jb     _02e213_jump
		jbe    _02e049_jump
		cmp    $0x00002d,%ax
		jb     _02e1fe_jump
		jbe    _02e049_jump
		cmp    $0x00002f,%ax
		je     _02e049_jump
		mov    %ecx,%eax
		call   _01dc54_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e1fe_jump:
		cmp    $0x00002a,%ax
		je     _02e049_jump
		mov    %ecx,%eax
		call   _01dc54_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e213_jump:
		cmp    $0x00001d,%ax
		jb     _02e049_jump
		jbe    _02e049_jump
		cmp    $0x00001e,%ax
		je     _02e069_jump
		mov    %ecx,%eax
		call   _01dc54_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e238_jump:
		cmp    $0x000009,%ax
		jb     _02e284_jump
		jbe    _02e071_jump
		cmp    $0x000016,%ax
		jb     _02e265_jump
		jbe    _02e049_jump
		cmp    $0x000019,%ax
		jb     _02e05e_jump
		andb   $0x0000f7,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e265_jump:
		cmp    $0x000010,%ax
		jb     _02e05e_jump
		cmp    $0x000011,%ax
		jbe    _02e049_jump
		mov    %ecx,%eax
		call   _01dc54_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e284_jump:
		test   %ax,%ax
		jbe    _02e071_jump
		cmp    $0x000001,%ax
		je     _02e049_jump
		mov    %ecx,%eax
		call   _01dc54_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e2a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    0x000052(%eax),%dx
		mov    0x000034(%eax),%bx
		mov    %edx,%ecx
		cmp    %bx,%dx
		je     _02e332_jump

	_02e2bb_jump:
		movswl %cx,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000002,_092245_data(,%eax,4)
		je     _02e2eb_jump
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		call   _06cc8c_func
		test   %al,%al
		jne    _02e314_jump

	_02e2eb_jump:
		mov    %ebx,%eax
		call   _05622c_func
		mov    0x000081(%ebx),%dh
		or     $0x000004,%dh
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		mov    $0x000001,%edx
		call   _04d3a8_func
		mov    %ebx,%eax
		call   _02dff4_func

	_02e314_jump:
		mov    0x000032(%ebx),%eax
		mov    _0c1b00_data,%edx
		sar    $0x000010,%eax
		mov    %ecx,%esi
		mov    (%edx,%eax,2),%cx
		mov    %ebx,%eax
		call   _05106c_func
		cmp    %cx,%si
		jne    _02e2bb_jump

	_02e332_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e338_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c2390_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    _0c245a_data,%dx
		xor    %esi,%esi
		test   %dx,%dx
		jle    _02e332_jump
		jmp    _02e38e_jump

	_02e366_jump:
		inc    %esi
		movswl %si,%eax
		mov    _0c2390_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%edx
		mov    _0c245a_data,%bx
		add    %edx,%eax
		cmp    %bx,%si
		jge    _02e332_jump

	_02e38e_jump:
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		testb  $0x000004,_092244_data(,%edx,4)
		jne    _02e366_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000020,0x000007(%ebx,%edx,8)
		je     _02e366_jump
		mov    _0c2576_data,%ecx
		mov    _0c2574_data,%ebx
		mov    _0c2572_data,%edx
		push   %eax
		mov    _0c2578_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02c240_func
		jmp    _02e366_jump



_02e3f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c2390_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c1b04_data,%esi
		add    %edx,%eax
		xor    %edi,%edi
		shl    $0x000002,%eax
		mov    _0c245a_data,%dx
		add    %eax,%esi
		test   %dx,%dx
		jg     _02e44f_jump
		jmp    _02e5f6_jump

	_02e423_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0c2390_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%esi
		mov    _0c245a_data,%bx
		add    %eax,%esi
		cmp    %bx,%di
		jge    _02e5f6_jump

	_02e44f_jump:
		cmpw   $0x000000,_0c24ee_data
		jne    _02e5f6_jump
		cmpw   $0x000000,_0c24ec_data
		jne    _02e5f6_jump
		cmpb   $0x000000,_0c2570_data
		jne    _02e5f6_jump
		cmpb   $0x000000,_0c2571_data
		jne    _02e5f6_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000020,0x000007(%ebx,%eax,1)
		je     _02e423_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		lea    0x000000(,%eax,4),%edx
		testb  $0x000010,_092246_data(%edx)
		jne    _02e61e_jump
		cmpb   $0x000000,_0c1b99_data
		jne    _02e423_jump
		mov    _0c1b70_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _02e423_jump
		xor    %ebx,%ebx
		mov    _0c1b89_data,%bl
		mov    _0c1b28_data,%ecx
		shl    $0x000002,%ebx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    _0c1b88_data,%bl
		testb  $0x000008,0x000007(%ecx,%ebx,8)
		je     _02e423_jump
		testb  $0x000004,_092244_data(%edx)
		jne    _02e423_jump
		cmp    $0x0000aa,%eax
		jne    _02e535_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000003,%eax
		jg     _02e52e_jump
		test   %eax,%eax
		jne    _02e535_jump

	_02e52e_jump:
		mov    $0xffffffff,%eax
		jmp    _02e581_jump

	_02e535_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000093,%eax
		jne    _02e552_jump
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		test   %eax,%eax
		je     _02e552_jump
		mov    $0xffffffff,%eax
		jmp    _02e581_jump

	_02e552_jump:
		mov    _0c2578_data,%eax
		mov    _0c2576_data,%ecx
		mov    _0c2574_data,%ebx
		mov    _0c2572_data,%edx
		push   %esi
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02c240_func

	_02e581_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		je     _02e423_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		imul   $0x000014,%eax,%edx
		mov    %esi,%eax
		call   *_0932c8_data(%edx)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000008,_092244_data(,%eax,4)
		je     _02e423_jump
		mov    _0c1b70_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02e423_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _02e5dd_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000020,%eax
		je     _02e423_jump

	_02e5dd_jump:
		testb  $0x000080,_0c32e5_data
		jne    _02e423_jump
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02d3ac_func

	_02e5f6_jump:
		cmpb   $0x000000,_0c1b99_data
		je     _02e604_jump
		call   _02d37c_func

	_02e604_jump:
		mov    _0c1b70_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jle    _02e618_jump
		decw   _0c1b72_data

	_02e618_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e61e_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _02e63a_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000020,%eax
		je     _02e423_jump

	_02e63a_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000051,%eax
		je     _02e64c_jump
		cmp    $0x0000a9,%eax
		jne    _02e650_jump

	_02e64c_jump:
		xor    %eax,%eax
		jmp    _02e67f_jump

	_02e650_jump:
		mov    _0c2578_data,%eax
		mov    _0c2576_data,%ecx
		mov    _0c2574_data,%ebx
		mov    _0c2572_data,%edx
		push   %esi
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02c240_func

	_02e67f_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		je     _02e423_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		imul   $0x000014,%eax,%edx
		mov    %esi,%eax
		call   *_0932c8_data(%edx)
		jmp    _02e423_jump



_02e6a0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000010,_092246_data(,%eax,4)
		je     _02e736_jump
		xor    %ebx,%ebx
		mov    0x00006d(%edx),%bl
		mov    0x00000c(%edx),%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    (%eax),%eax
		mov    0x00006c(%edx),%bl
		testb  $0x000020,0x000007(%eax,%ebx,8)
		je     _02e736_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _02e6eb_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000020,%eax
		je     _02e736_jump

	_02e6eb_jump:
		mov    _0c1b72_data,%bx
		movswl %bx,%eax
		cmp    $0x00003c,%eax
		jge    _02e728_jump
		cmp    $0xffffffff,%eax
		jne    _02e728_jump
		mov    $0x000001,%eax
		call   _02d3ac_func
		mov    _0c257e_data,%edx
		sar    $0x000010,%edx
		cmp    $0x000003,%edx
		je     _02e736_jump
		cmp    $0x000004,%edx
		je     _02e736_jump
		movw   $0x00003c,_0c1b72_data
		pop    %edx
		pop    %ebx
		ret    

	_02e728_jump:
		xor    %eax,%eax
		call   _02d3ac_func
		mov    %bx,_0c1b72_data

	_02e736_jump:
		pop    %edx
		pop    %ebx
		ret    



_02e73c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		xor    %ah,%ah
		lea    0x000010(%esp),%ecx
		mov    %ah,0x000024(%esp)
		lea    0x000014(%esp),%eax
		lea    0x000020(%esp),%ebx
		push   %eax
		lea    0x000020(%esp),%edx
		mov    %edi,%eax
		call   _01d3c0_func
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		cmp    $0x000008,%eax
		je     _02e77f_jump
		cmp    $0x000086,%eax
		je     _02e77f_jump
		cmp    $0x0000a7,%eax
		jne    _02e7b1_jump

	_02e77f_jump:
		mov    0x00001c(%esp),%edx
		mov    0x000020(%esp),%ebx
		mov    0x000010(%esp),%ecx
		mov    0x000014(%esp),%esi
		add    $0x00000a,%edx
		add    $0x000014,%ebx
		sub    $0x000014,%ecx
		sub    $0x000019,%esi
		mov    %dx,0x00001c(%esp)
		mov    %bx,0x000020(%esp)
		mov    %cx,0x000010(%esp)
		mov    %si,0x000014(%esp)
		jmp    _02e7df_jump

	_02e7b1_jump:
		mov    0x00001c(%esp),%edx
		mov    0x000020(%esp),%ebx
		mov    0x000010(%esp),%ecx
		mov    0x000014(%esp),%eax
		add    %esi,%edx
		add    %esi,%ebx
		mov    %dx,0x00001c(%esp)
		add    %esi,%esi
		mov    %bx,0x000020(%esp)
		sub    %esi,%ecx
		sub    %esi,%eax
		mov    %cx,0x000010(%esp)
		mov    %ax,0x000014(%esp)

	_02e7df_jump:
		mov    _0c2390_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    %ax,0x000018(%esp)
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%esi
		shl    $0x000002,%eax
		mov    _0c245a_data,%dx
		add    %eax,%esi
		test   %dx,%dx
		jg     _02e84b_jump
		jmp    _02eb2e_jump

	_02e812_jump:
		mov    0x000018(%esp),%ebx
		inc    %ebx
		mov    %bx,0x000018(%esp)
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    _0c2390_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%esi
		mov    _0c245a_data,%cx
		add    %eax,%esi
		cmp    %cx,%bx
		jge    _02eb2e_jump

	_02e84b_jump:
		cmp    %esi,%edi
		jne    _02eb0c_jump
		jmp    _02e812_jump

	_02e855_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		je     _02eb23_jump
		test   %eax,%eax
		jne    _02e873_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		je     _02eb23_jump

	_02e873_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		jne    _02eb23_jump
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d840_func
		test   %ax,%ax
		je     _02eb23_jump
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%ecx
		push   %eax
		mov    0x000026(%esp),%eax
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%edx
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02aa7c_func
		test   %ax,%ax
		je     _02eb23_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movb   $0x000004,0x000075(%esi)
		movw   $0x000000,0x00004c(%esi)
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x00000b,0x000074(%esi)
		or     $0x000020,%bh
		mov    %bh,0x000081(%esi)
		mov    _0c1b66_data,%ax
		cmp    0x000034(%edi),%ax
		jne    _02e949_jump
		call   _06654c_func

	_02e949_jump:
		xor    %eax,%eax
		mov    0x000070(%esi),%al
		cmp    $0x000002,%eax
		jne    _02e983_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _02e972_jump
		mov    $0x000003,%edx
		mov    %eax,%ebx
		jmp    _02e97c_jump

	_02e972_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_02e97c_jump:
		mov    %esi,%eax
		call   _058bb4_func

	_02e983_jump:
		mov    $0x000009,%edx
		mov    %edi,%eax
		mov    $0x000001,%cl
		call   _01d498_func
		mov    %cl,0x000024(%esp)
		movl   $0x000000,0x000024(%edi)
		cmpb   $0x000000,0x000024(%esp)
		je     _02e812_jump
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02e9b0_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d840_func
		test   %ax,%ax
		je     _02eb23_jump
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		cmp    $0x000068,%eax
		jne    _02eb23_jump
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%ecx
		push   %eax
		mov    0x000026(%esp),%eax
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%edx
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02aa7c_func
		test   %ax,%ax
		je     _02eb23_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _02ea46_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000006,%eax
		je     _02eb23_jump

	_02ea46_jump:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _02eaa1_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		mov    0x000028(%edi),%ebx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000068(%edi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _02ea82_jump
		mov    $0x000001,%eax
		jg     _02ea82_jump
		neg    %eax

	_02ea82_jump:
		test   %eax,%eax
		jl     _02eaa1_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %edi,%eax
		movb   $0x000001,0x00007d(%esi)
		call   _058bb4_func
		movw   $0x000008,0x000040(%esi)

	_02eaa1_jump:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _02eb23_jump
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%ecx
		lea    (%eax,%ecx,1),%edx
		mov    0x000028(%edi),%ebp
		xor    %eax,%eax
		sub    %ebp,%edx
		mov    0x000068(%edi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _02ead9_jump
		mov    $0x000001,%eax
		jg     _02ead9_jump
		neg    %eax

	_02ead9_jump:
		test   %eax,%eax
		jge    _02eb23_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %edi,%eax
		movb   $0x000001,0x00007d(%esi)
		call   _058bb4_func
		movw   $0x00fff8,0x000040(%esi)
		cmpb   $0x000000,0x000024(%esp)
		je     _02e812_jump
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02eb0c_jump:
		mov    0x000060(%esi),%ax
		test   %ax,%ax
		jbe    _02e855_jump
		cmp    $0x0000d6,%ax
		je     _02e9b0_jump

	_02eb23_jump:
		cmpb   $0x000000,0x000024(%esp)
		je     _02e812_jump

	_02eb2e_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02eb40_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		movswl %bx,%ebx
		mov    0x00002c(%eax),%esi
		add    %ebx,%esi
		mov    _0c24b2_data,%ebx
		sar    $0x000004,%esi
		sar    $0x000010,%ebx
		imul   %ebx,%esi
		mov    0x000028(%eax),%edi
		movswl %cx,%ebx
		add    %edi,%ebx
		sar    $0x000004,%ebx
		mov    0x000058(%eax),%cx
		add    %esi,%ebx
		xor    %edx,%edx
		cmp    %cx,%bx
		je     _02eb7d_jump
		mov    $0x000001,%edx
		mov    %bx,0x000058(%eax)

	_02eb7d_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_02eb84_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    0x000040(%eax),%di
		mov    $0x0000ff,%ah
		xor    %edx,%edx
		mov    %ah,0x000004(%esp)
		mov    0x000060(%ecx),%ax
		mov    %dx,(%esp)
		cmp    $0x00007b,%ax
		jb     _02ebb4_jump
		jbe    _02ec3e_jump
		cmp    $0x0000ac,%ax
		je     _02ebf9_jump

	_02ebb4_jump:
		xor    %edx,%edx
		mov    0x000004(%esp),%dl
		cmp    $0x0000ff,%edx
		je     _02ebf0_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		call   _058bb4_func
		movb   $0x000000,0x000071(%ecx)
		mov    %di,0x000040(%ecx)
		mov    (%esp),%al
		mov    0x00002c(%ecx),%edx
		mov    %si,0x000042(%ecx)
		sub    $0x00000c,%edx
		mov    %al,0x000072(%ecx)
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01e494_func

	_02ebf0_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ebf9_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _02ebb4_jump
		mov    $0x00000f,%bh
		mov    $0x000002,%edx
		mov    %ecx,%eax
		mov    %bh,0x000004(%esp)
		mov    $0x000003,%ebx
		call   _01d4a8_func
		mov    $0x000005,%ebx
		mov    $0xfffffffd,%esi
		mov    %bx,(%esp)
		jmp    _02ebb4_jump

	_02ec3e_jump:
		testb  $0x000002,0x00007d(%ecx)
		je     _02ebb4_jump
		mov    $0x000001,%ah
		mov    $0x000005,%ebx
		mov    $0x000002,%edx
		mov    %ah,0x000004(%esp)
		mov    %ecx,%eax
		mov    $0xfffffffd,%esi
		call   _01d4a8_func
		jmp    _02ebb4_jump



_02ec6c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		call   _01d4b4_func
		mov    %eax,%edi
		mov    %ecx,%eax
		call   _01d5dc_func
		movswl %di,%edi
		movswl %ax,%esi
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01d754_func
		test   %ax,%ax
		je     _02ecb8_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _02eb40_func
		test   %ax,%ax
		je     _02ecb8_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _058bb4_func

	_02ecb8_jump:
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		movzbl 0x000070(%ecx),%esi
		mov    %ah,0x000081(%ecx)
		cmp    $0x000014,%esi
		jne    _02ece0_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_02ece0_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ece8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    _0c32e4_data,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _02edd4_jump
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _02edd4_jump
		xor    %eax,%eax
		mov    _0c1b48_data,%edx
		mov    _0c1b85_data,%al
		mov    0x00002c(%ecx),%ebx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000069(%ecx),%al
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _02ed36_jump
		neg    %eax

	_02ed36_jump:
		cmp    $0x0000fa,%eax
		jge    _02edd4_jump
		call   _067aa4_func
		mov    0x000034(%ecx),%ax
		mov    %ax,_0c25da_data
		mov    %ecx,%eax
		call   _072d5c_func
		cwtl   
		mov    %ax,0x00004e(%ecx)
		cmp    $0x000100,%eax
		jg     _02ed77_jump
		jne    _02ed7f_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _02ed7f_jump

	_02ed77_jump:
		movw   $0x00ffff,0x000052(%ecx)
		jmp    _02ed85_jump

	_02ed7f_jump:
		movw   $0x000001,0x000052(%ecx)

	_02ed85_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _02eda3_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _02eda3_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _058bb4_func

	_02eda3_jump:
		xor    %ah,%ah
		mov    _0c1ec0_data,%ecx
		mov    %ah,_0c1ed2_data
		mov    %ah,_0c1ed1_data
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		xor    %eax,%eax
		mov    %dh,0x000081(%ecx)
		call   _05f05c_func

	_02edd4_jump:
		pop    %ecx
		pop    %ebx
		ret    



_02edd8_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		cmp    $0x000001,%edx
		jne    _02edfc_jump
		movw   $0x000000,0x000042(%eax)
		xor    %ebx,%ebx
		xor    %edx,%edx
		movw   $0x000000,0x000040(%eax)
		call   _01d4a8_func
		pop    %edx
		pop    %ebx
		ret    

	_02edfc_jump:
		xor    %ebx,%ebx
		mov    0x000060(%eax),%bx
		cmp    $0x00000a,%ebx
		jne    _02ee18_jump
		test   %edx,%edx
		jne    _02ee18_jump
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		jne    _02ee18_jump
		movw   $0x000000,0x000042(%eax)

	_02ee18_jump:
		pop    %edx
		pop    %ebx
		ret    



_02ee1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x000060(%eax),%dx
		mov    0x00006c(%eax),%bl
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _02eeab_jump
		movswl %bx,%eax
		cmp    $0x000002,%eax
		je     _02eeab_jump
		cmp    $0x00000b,%eax
		je     _02eeab_jump
		cmp    $0x000016,%eax
		je     _02eeab_jump
		cmp    $0x000003,%eax
		je     _02eeab_jump
		cmp    $0x000009,%eax
		je     _02eeab_jump
		cmp    $0x000004,%eax
		je     _02eeab_jump
		cmp    $0x000005,%eax
		je     _02eeab_jump
		cmp    $0x000006,%eax
		je     _02eeab_jump
		cmp    $0x00000f,%eax
		je     _02eeab_jump
		cmp    $0x000010,%eax
		je     _02eeab_jump
		cmp    $0x000011,%eax
		je     _02eeab_jump
		movswl %dx,%eax
		cmp    $0x00000c,%eax
		je     _02ee99_jump
		cmp    $0x00000e,%eax
		je     _02ee99_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func

	_02ee99_jump:
		mov    %ecx,%eax
		call   _04d2c4_func
		mov    %ecx,%eax
		call   _024ba8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02eeab_jump:
		movswl %bx,%eax
		cmp    $0x000003,%eax
		je     _02eeb8_jump
		cmp    $0x000006,%eax
		jne    _02eed1_jump

	_02eeb8_jump:
		mov    0x000081(%ecx),%ah
		movw   $0x00fff8,0x000042(%ecx)
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02eed1_jump:
		cmp    $0x00000b,%eax
		je     _02ef05_jump
		cmp    $0x000002,%eax
		je     _02ef05_jump
		cmp    $0x000016,%eax
		je     _02ef05_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02eee4_jump:
		mov    %ecx,%eax
		call   _072754_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02eeef_jump:
		mov    %ecx,%eax
		call   _02a2c0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02eefa_jump:
		mov    %ecx,%eax
		call   _02a4a8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ef05_jump:
		cmp    $0x00000e,%dx
		jb     _02ef1f_jump
		jbe    _02eee4_jump
		cmp    $0x00003c,%dx
		jb     _02ef25_jump
		jbe    _02eeef_jump
		cmp    $0x00003d,%dx
		je     _02eefa_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ef1f_jump:
		cmp    $0x00000c,%dx
		je     _02eee4_jump

	_02ef25_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ef2c_func:
		push   %edx
		mov    0x000060(%eax),%dx
		cmp    $0x00000a,%dx
		jb     _02efdd_jump
		jbe    _02ef45_jump
		cmp    $0x000018,%dx
		je     _02ef8c_jump
		pop    %edx
		ret    

	_02ef45_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _02efe3_jump
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		jne    _02efe3_jump
		mov    0x000070(%eax),%dl
		cmp    $0x000003,%edx
		jne    _02ef84_jump
		movw   $0x00fffe,0x000042(%eax)
		pop    %edx
		ret    

	_02ef6d_jump:
		xor    %edx,%edx
		mov    0x000070(%eax),%dl
		cmp    $0x000003,%edx
		jne    _02ef7f_jump
		movw   $0x00fffe,0x000042(%eax)
		pop    %edx
		ret    

	_02ef7f_jump:
		cmp    $0x000004,%edx
		jne    _02efe3_jump

	_02ef84_jump:
		movw   $0x000002,0x000042(%eax)
		pop    %edx
		ret    

	_02ef8c_jump:
		xor    %edx,%edx
		mov    0x000070(%eax),%dl
		cmp    $0x000002,%edx
		je     _02efe3_jump
		decw   0x000048(%eax)
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _02efc3_jump
		xor    %edx,%edx
		mov    0x000070(%eax),%dl
		cmp    $0x000003,%edx
		jne    _02efb6_jump
		movw   $0x00ffff,0x000042(%eax)
		pop    %edx
		ret    

	_02efb6_jump:
		cmp    $0x000004,%edx
		jne    _02efe3_jump
		movw   $0x000001,0x000042(%eax)
		pop    %edx
		ret    

	_02efc3_jump:
		movw   $0x000000,0x000042(%eax)
		movw   $0x000000,0x000048(%eax)
		mov    0x00002c(%eax),%dx
		movb   $0x000002,0x000070(%eax)
		mov    %dx,0x00003e(%eax)
		pop    %edx
		ret    

	_02efdd_jump:
		cmp    $0x000001,%dx
		je     _02ef6d_jump

	_02efe3_jump:
		pop    %edx
		ret    



_02efe8_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		test   %edx,%edx
		jne    _02f00c_jump
		mov    0x00006d(%eax),%dl
		cmp    $0x000001,%edx
		jne    _02f00c_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x00000b,%edx
		jne    _02f00c_jump
		andb   $0x0000ef,0x000081(%eax)

	_02f00c_jump:
		pop    %edx
		ret    



_02f010_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		call   _02efe8_func
		mov    0x000070(%edx),%al
		cmp    $0x000003,%al
		jb     _02f0a8_jump
		cmp    $0x000004,%al
		jbe    _02f08b_jump
		cmp    $0x000014,%al
		jb     _02ee18_jump
		jbe    _02f095_jump
		pop    %edx
		pop    %ebx
		ret    

	_02f03a_jump:
		and    $0x0000ff,%eax
		jne    _02f04a_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _02f051_jump

	_02f04a_jump:
		orb    $0x000008,0x000081(%edx)

	_02f051_jump:
		movswl %bx,%eax
		cmp    $0x000001,%eax
		jne    _02f06a_jump
		mov    %edx,%eax
		call   _04d2c4_func
		mov    %edx,%eax
		call   _024ba8_func
		pop    %edx
		pop    %ebx
		ret    

	_02f06a_jump:
		cmp    $0x000002,%eax
		jne    _02f079_jump
		mov    %edx,%eax
		call   _04d2c4_func
		pop    %edx
		pop    %ebx
		ret    

	_02f079_jump:
		test   %eax,%eax
		jne    _02ee18_jump
		mov    %edx,%eax
		call   _02ee1c_func
		pop    %edx
		pop    %ebx
		ret    

	_02f08b_jump:
		mov    %edx,%eax
		call   _02ef2c_func
		pop    %edx
		pop    %ebx
		ret    

	_02f095_jump:
		mov    0x000056(%edx),%ax
		mov    %ax,0x000040(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x000042(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_02f0a8_jump:
		cmp    $0x000001,%al
		jbe    _02f03a_jump
		mov    %edx,%eax
		call   _02edd8_func
		pop    %edx
		pop    %ebx
		ret    

_02f0b8_switch:
		.long   _02f0ef_case
		.long   _02f1ee_case
		.long   _02f1c5_case
		.long   _02f10b_case
		.long   _02f10b_case
		.long   _02f20f_case




_02f0d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000008,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000091,%eax
		je     _02f238_jump
		jmp    _02f10f_jump

	_02f0ef_case:
		decw   0x000056(%esi)
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02f10b_case
		movb   $0x000003,0x00006c(%esi)
		movw   $0x00001e,0x000056(%esi)

	_02f10b_case:
		movb   $0x000000,0x000073(%esi)

	_02f10f_jump:
		mov    _0c1b44_data,%ax
		sub    0x000028(%esi),%ax
		mov    0x00002c(%esi),%bx
		mov    %eax,%edx
		mov    _0c1b48_data,%ax
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		add    $0x000020,%edx
		mov    0x000060(%esi),%ax
		add    $0x000019,%ebx
		cmp    $0x000091,%eax
		jne    _02f142_jump
		add    $0x000014,%edx
		add    $0x00000a,%ebx

	_02f142_jump:
		movswl %dx,%eax
		test   %eax,%eax
		setg   %al
		mov    %al,(%esp)
		movswl %bx,%eax
		test   %eax,%eax
		setg   %al
		mov    %al,0x000004(%esp)
		cmpb   $0x000000,(%esp)
		jne    _02f161_jump
		neg    %edx

	_02f161_jump:
		cmpb   $0x000000,0x000004(%esp)
		jne    _02f16a_jump
		neg    %ebx

	_02f16a_jump:
		movswl %dx,%eax
		cmp    $0x0000c8,%eax
		jle    _02f1a6_jump
		mov    $0x000001,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _02f182_jump
		sar    %cl,%ax
		jmp    _02f18b_jump

	_02f182_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02f18b_jump:
		mov    $0x000001,%cl
		mov    %eax,%edx
		mov    %ebx,%eax
		test   %ax,%ax
		js     _02f19b_jump
		sar    %cl,%ax
		jmp    _02f1a4_jump

	_02f19b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02f1a4_jump:
		mov    %eax,%ebx

	_02f1a6_jump:
		movswl %bx,%ebx
		test   %ebx,%ebx
		jne    _02f26b_jump
		cmpb   $0x000000,(%esp)
		je     _02f250_jump
		mov    $0x00001b,%ecx
		jmp    _02f30e_jump

	_02f1c5_case:
		decw   0x000056(%esi)
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02f10b_case
		movb   $0x000000,0x00006c(%esi)
		mov    0x000050(%esi),%ax
		movw   $0x000064,0x000050(%esi)
		mov    %ax,0x000056(%esi)
		jmp    _02f10b_case

	_02f1ee_case:
		decw   0x000056(%esi)
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02f10b_case
		movb   $0x000002,0x00006c(%esi)
		movw   $0x000005,0x000056(%esi)
		jmp    _02f10b_case

	_02f20f_case:
		decw   0x000056(%esi)
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02f10b_case
		movb   $0x000000,0x00006c(%esi)
		mov    0x000050(%esi),%ax
		movw   $0x000064,0x000050(%esi)
		mov    %ax,0x000056(%esi)
		jmp    _02f10b_case

	_02f238_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%al
		ja     _02f10b_case
		and    $0x0000ff,%eax
		jmp    *%cs:_02f0b8_switch(,%eax,4)

	_02f250_jump:
		movswl %dx,%eax
		test   %eax,%eax
		je     _02f261_jump
		mov    $0x000009,%ecx
		jmp    _02f30e_jump

	_02f261_jump:
		mov    $0xffffffff,%ecx
		jmp    _02f30e_jump

	_02f26b_jump:
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		cmpb   $0x000000,(%esp)
		je     _02f2cd_jump
		cmpb   $0x000000,0x000004(%esp)
		je     _02f2b5_jump
		movswl %cx,%eax
		cmp    $0x0000ff,%eax
		jle    _02f2a8_jump
		mov    $0x00001b,%ecx
		jmp    _02f30e_jump

	_02f2a8_jump:
		xor    %ecx,%ecx
		mov    _094760_data(%eax),%cl
		add    $0x00001b,%ecx
		jmp    _02f30e_jump

	_02f2b5_jump:
		movswl %cx,%eax
		cmp    $0x0000ff,%eax
		jle    _02f2c3_jump
		xor    %ecx,%ecx
		jmp    _02f30e_jump

	_02f2c3_jump:
		xor    %ecx,%ecx
		mov    _094760_data(%eax),%cl
		jmp    _02f30e_jump

	_02f2cd_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _02f2f2_jump
		movswl %cx,%eax
		cmp    $0x0000ff,%eax
		jle    _02f2e5_jump
		mov    $0x000012,%ecx
		jmp    _02f30e_jump

	_02f2e5_jump:
		xor    %ecx,%ecx
		mov    _094760_data(%eax),%cl
		add    $0x000012,%ecx
		jmp    _02f30e_jump

	_02f2f2_jump:
		movswl %cx,%eax
		cmp    $0x0000ff,%eax
		jle    _02f303_jump
		mov    $0x000009,%ecx
		jmp    _02f30e_jump

	_02f303_jump:
		xor    %ecx,%ecx
		mov    _094760_data(%eax),%cl
		add    $0x000009,%ecx

	_02f30e_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _02f371_jump
		decw   0x000056(%esi)
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _02f371_jump
		movb   $0x000001,0x00006c(%esi)
		mov    0x000036(%esi),%ax
		movw   $0x00003c,0x000056(%esi)
		cwtl   
		mov    0x000038(%esi),%dx
		cmp    $0xffffffcc,%eax
		jle    _02f36b_jump
		movswl %dx,%edx
		cmp    $0xffffffdc,%edx
		jle    _02f36b_jump
		cmp    $0x000131,%eax
		jge    _02f36b_jump
		cmp    $0x0000c3,%edx
		jge    _02f36b_jump
		movswl %cx,%ebx
		mov    0x00002a(%esi),%edx
		mov    0x000026(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _073214_func
		jmp    _02f371_jump

	_02f36b_jump:
		movw   $0x000028,0x000050(%esi)

	_02f371_jump:
		movswl %cx,%eax
		cmp    $0xffffffff,%eax
		je     _02f37e_jump
		dec    %cl
		mov    %cl,0x00006b(%esi)

	_02f37e_jump:
		add    $0x000008,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f388_func:
		push   %ebx
		mov    %eax,%ebx
		mov    0x000076(%eax),%ah
		dec    %ah
		mov    %ah,0x000076(%ebx)
		xor    %eax,%eax
		mov    0x000076(%ebx),%al
		test   %eax,%eax
		je     _02f3b0_jump
		mov    $0x000005,%edx
		mov    %ebx,%eax
		call   _01d498_func
		movw   $0x000032,0x000056(%ebx)
		pop    %ebx
		ret    

	_02f3b0_jump:
		mov    $0x000006,%edx
		mov    %ebx,%eax
		call   _01d498_func
		pop    %ebx
		ret    

_02f3c0_switch:
		.long   _02f543_case
		.long   _02f5a3_case
		.long   _02f3f1_case
		.long   _02f495_case


	_02f3f1_case:
		xor    %ecx,%ecx
		mov    0x000028(%eax),%edi
		mov    0x000068(%eax),%cl
		lea    (%ecx,%edi,1),%ebp
		mov    0x00002c(%eax),%ecx
		mov    _0c24b2_data,%edi
		sar    $0x000004,%ecx
		sar    $0x000010,%edi
		imul   %ecx,%edi
		sub    $0x000008,%ebp
		sar    $0x000004,%ebp
		add    %ebp,%edi
		lea    0x000000(,%edi,4),%ecx
		sub    %edi,%ecx
		mov    _0c24bc_data,%edi
		mov    0x000002(%edi,%ecx,2),%cl
		and    $0x0000ff,%ecx
		testb  $0x000001,_092204_data(%ecx)
		je     _02f43d_jump
		mov    $0x000001,%esi

	_02f43d_jump:
		mov    0x000028(%eax),%ebp
		xor    %ecx,%ecx
		mov    0x00002c(%eax),%edi
		mov    0x000068(%eax),%cl
		mov    _0c24b2_data,%eax
		sar    $0x000004,%edi
		sar    $0x000010,%eax
		imul   %edi,%eax
		add    %ebp,%ecx
		add    $0x000007,%ecx
		sar    $0x000004,%ecx
		add    %eax,%ecx
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    _0c24bc_data,%ecx
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _02f48a_jump
		mov    $0x000001,%esi

	_02f48a_jump:
		mov    %esi,%eax
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02f495_case:
		xor    %ecx,%ecx
		mov    0x000028(%eax),%edx
		mov    0x000068(%eax),%cl
		lea    (%ecx,%edx,1),%ebp
		mov    0x00002c(%eax),%ecx
		mov    _0c24b2_data,%edi
		add    $0x00009a,%ecx
		sar    $0x000010,%edi
		sar    $0x000004,%ecx
		imul   %edi,%ecx
		sub    $0x000008,%ebp
		sar    $0x000004,%ebp
		lea    (%ecx,%ebp,1),%edi
		lea    0x000000(,%edi,4),%ecx
		sub    %edi,%ecx
		mov    _0c24bc_data,%edi
		mov    0x000002(%edi,%ecx,2),%cl
		and    $0x0000ff,%ecx
		testb  $0x000001,_092204_data(%ecx)
		je     _02f4e8_jump
		mov    $0x000001,%esi

	_02f4e8_jump:
		xor    %ecx,%ecx
		mov    0x000028(%eax),%ebx
		mov    0x000068(%eax),%cl
		lea    (%ecx,%ebx,1),%edi
		mov    0x00002c(%eax),%eax
		mov    _0c24b2_data,%ecx
		sar    $0x000004,%eax
		sar    $0x000010,%ecx
		imul   %ecx,%eax
		add    $0x000007,%edi
		sar    $0x000004,%edi
		lea    (%edi,%eax,1),%ecx
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    _0c24bc_data,%ecx
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _02f48a_jump
		mov    $0x000001,%esi
		mov    %esi,%eax
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02f543_case:
		mov    $0x000006,%ebx
		xor    %edx,%edx
		jmp    _02f550_jump

	_02f54c_jump:
		add    $0x000010,%ebx
		inc    %edx

	_02f550_jump:
		movswl %dx,%ecx
		cmp    $0x00000a,%ecx
		jge    _02f48a_jump
		xor    %ecx,%ecx
		mov    0x000028(%eax),%ebp
		mov    0x000068(%eax),%cl
		mov    0x00002c(%eax),%edi
		add    %ecx,%ebp
		movswl %bx,%ecx
		add    %ecx,%edi
		mov    _0c24b2_data,%ecx
		sar    $0x000004,%edi
		sar    $0x000010,%ecx
		imul   %edi,%ecx
		sub    $0x000010,%ebp
		sar    $0x000004,%ebp
		add    %ebp,%ecx
		imul   $0x000006,%ecx,%ecx
		mov    _0c24bc_data,%edi
		movzbl 0x000002(%ecx,%edi,1),%edi
		testb  $0x000001,_092204_data(%edi)
		je     _02f54c_jump
		mov    $0x000001,%esi
		jmp    _02f54c_jump

	_02f5a3_case:
		mov    $0x000006,%ebx
		xor    %edx,%edx
		jmp    _02f5b0_jump

	_02f5ac_jump:
		add    $0x000010,%ebx
		inc    %edx

	_02f5b0_jump:
		movswl %dx,%ecx
		cmp    $0x00000a,%ecx
		jge    _02f48a_jump
		xor    %ecx,%ecx
		mov    0x000028(%eax),%edi
		mov    0x000068(%eax),%cl
		add    %edi,%ecx
		add    $0x000010,%ecx
		sar    $0x000004,%ecx
		mov    0x00002c(%eax),%ebp
		mov    %ecx,(%esp)
		movswl %bx,%ecx
		mov    _0c24b2_data,%edi
		add    %ebp,%ecx
		sar    $0x000010,%edi
		sar    $0x000004,%ecx
		imul   %edi,%ecx
		add    (%esp),%ecx
		imul   $0x000006,%ecx,%ecx
		mov    _0c24bc_data,%edi
		movzbl 0x000002(%ecx,%edi,1),%edi
		testb  $0x000001,_092204_data(%edi)
		je     _02f5ac_jump
		mov    $0x000001,%esi
		jmp    _02f5ac_jump



_02f608_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _02f010_func
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000004,%eax
		jne    _02f683_jump
		xor    %ebx,%ebx
		mov    0x00006b(%edx),%bl
		cmp    $0x00000e,%ebx
		jne    _02f683_jump
		xor    %ebx,%ebx
		mov    0x00006d(%edx),%bl
		lea    0x000000(,%ebx,4),%ecx
		mov    0x00000c(%edx),%ebx
		mov    (%ecx,%ebx,1),%ebx
		mov    0x000005(%ebx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _02f683_jump
		mov    0x000034(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff60,%eax
		jle    _02f683_jump
		cmp    $0x0000fa,%eax
		jge    _02f683_jump
		mov    0x000036(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0x000064,%eax
		jge    _02f683_jump
		mov    0x00002c(%edx),%ebx
		add    $0x000056,%ebx
		mov    %edx,%eax
		mov    %ebx,0x00002c(%edx)
		call   _04d170_func
		subl   $0x000056,0x00002c(%edx)

	_02f683_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx

	_02f686_jump:
		ret    



_02f688_func:
		testb  $0x000001,_0c32e6_data
		jne    _02f686_jump
		mov    _0c1af6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02f686_jump
		mov    _0c1af8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02f686_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		je     _052c60_jump
		cmp    $0x000001,%eax
		jne    _02f686_jump
		jmp    _052c60_jump

_02f6c4_switch:
		.long   _02f86e_case
		.long   _02f935_case
		.long   _02f70a_case
		.long   _02f7b9_case




_02f6d4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    0x000028(%eax),%si
		xor    %ecx,%ecx
		movzbw 0x000074(%eax),%di
		mov    0x000068(%eax),%cl
		xor    %ebx,%ebx
		add    %ecx,%esi
		mov    0x00002c(%eax),%cx
		sub    $0x000019,%esi
		add    %ecx,%edi
		cmp    $0x000003,%dx
		ja     _02f9f5_jump
		xor    %eax,%eax
		mov    %dx,%ax
		jmp    *%cs:_02f6c4_switch(,%eax,4)

	_02f70a_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x000003,%edx
		jge    _02f9f5_jump
		mov    _0c24b2_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24bc_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_092204_data(%edx)
		je     _02f761_jump
		mov    $0x000001,%ebx

	_02f761_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24bc_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_092204_data(%edx)
		je     _02f789_jump
		mov    $0x000001,%ebx

	_02f789_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		je     _02f9f5_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02f7b9_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x00000c,%edx
		jle    _02f9f5_jump
		add    $0x000030,%ecx
		mov    _0c24b2_data,%edx
		sar    $0x000004,%ecx
		sar    $0x000010,%edx
		imul   %ecx,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0c24bc_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		je     _02f813_jump
		mov    $0x000001,%ebx

	_02f813_jump:
		inc    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ecx
		mov    _0c24bc_data,%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		je     _02f83c_jump
		mov    $0x000001,%ebx

	_02f83c_jump:
		inc    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		je     _02f9f5_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02f86e_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000003,%edx
		jge    _02f9f5_jump
		movswl %di,%eax
		mov    _0c24b2_data,%edx
		add    %esi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %eax,%edx
		sar    $0x000004,%ecx
		add    %ecx,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		mov    _0c24bc_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		je     _02f8c8_jump
		mov    $0x000001,%ebx

	_02f8c8_jump:
		mov    _0c24b2_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0c24bc_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		je     _02f8f8_jump
		mov    $0x000001,%ebx

	_02f8f8_jump:
		mov    _0c24b2_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c24bc_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		je     _02f9f5_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02f935_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x00000c,%edx
		jle    _02f9f5_jump
		movswl %di,%eax
		mov    _0c24b2_data,%edx
		add    %esi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		add    $0x000003,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24bc_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_092204_data(%edx)
		je     _02f992_jump
		mov    $0x000001,%ebx

	_02f992_jump:
		mov    _0c24b2_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24bc_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_092204_data(%edx)
		je     _02f9c4_jump
		mov    $0x000001,%ebx

	_02f9c4_jump:
		mov    _0c24b2_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		je     _02f9f5_jump
		mov    $0x000001,%ebx

	_02f9f5_jump:
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02f9fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _02fbd5_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x00000c,%edx
		jne    _02fbd5_jump
		call   _01d4b4_func
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _01d5dc_func
		movswl %dx,%edi
		movswl %ax,%esi
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01d754_func
		test   %ax,%ax
		je     _02fa61_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _02eb40_func
		test   %ax,%ax
		je     _02fa61_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _058bb4_func

	_02fa61_jump:
		mov    0x000081(%ecx),%ah
		xor    %edx,%edx
		and    $0x0000f7,%ah
		mov    0x000070(%ecx),%dl
		mov    %ah,0x000081(%ecx)
		cmp    $0x000014,%edx
		jne    _02fa82_jump
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_02fa82_jump:
		mov    _0c1b66_data,%dx
		mov    0x000034(%ecx),%bx
		xor    %eax,%eax
		cmp    %bx,%dx
		jne    _02fb0e_jump
		movzbw 0x000068(%ecx),%si
		xor    %ebx,%edx
		mov    0x000028(%ecx),%di
		mov    _0c1b84_data,%dl
		mov    _0c1b44_data,%bx
		add    %edi,%esi
		add    %ebx,%edx
		sub    %esi,%edx
		movswl %dx,%esi
		test   %esi,%esi
		jle    _02fae3_jump
		cmp    $0x00000a,%esi
		jle    _02fac7_jump
		mov    $0x000001,%eax

	_02fac7_jump:
		movswl %dx,%esi
		cmp    $0x00000f,%esi
		jle    _02fad0_jump
		inc    %eax

	_02fad0_jump:
		movswl %dx,%esi
		cmp    $0x000012,%esi
		jle    _02fad9_jump
		inc    %eax

	_02fad9_jump:
		movswl %dx,%edx
		cmp    $0x00002a,%edx
		jle    _02fb0e_jump
		jmp    _02fb0c_jump

	_02fae3_jump:
		neg    %edx
		movswl %dx,%esi
		cmp    $0x00000a,%esi
		jle    _02faf2_jump
		mov    $0xffffffff,%eax

	_02faf2_jump:
		movswl %dx,%esi
		cmp    $0x00000f,%esi
		jle    _02fafb_jump
		dec    %eax

	_02fafb_jump:
		movswl %dx,%esi
		cmp    $0x000012,%esi
		jle    _02fb04_jump
		dec    %eax

	_02fb04_jump:
		movswl %dx,%edx
		cmp    $0x000029,%edx
		jle    _02fb0e_jump

	_02fb0c_jump:
		xor    %eax,%eax

	_02fb0e_jump:
		mov    %ax,0x000040(%ecx)
		mov    0x000040(%ecx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jge    _02fba2_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _02f6d4_func
		test   %ax,%ax
		je     _02fb9e_jump
		incw   0x000050(%ecx)
		mov    0x00004e(%ecx),%edx
		sar    $0x000010,%edx
		movw   $0x000000,0x000042(%ecx)
		cmp    $0x0000f0,%edx
		jle    _02fba2_jump
		mov    0x00002c(%ecx),%edx
		sub    $0x000050,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _072b98_func
		mov    0x000032(%ecx),%edx
		mov    $0x000073,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		mov    0x00003a(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00003c(%ecx),%edx
		mov    $0x000004,%ebx
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _072f20_func
		jmp    _02fba2_jump

	_02fb9e_jump:
		mov    %ax,0x000050(%ecx)

	_02fba2_jump:
		mov    0x00003e(%ecx),%esi
		sar    $0x000010,%esi
		test   %esi,%esi
		jle    _02fbbf_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _02f6d4_func
		test   %ax,%ax
		je     _02fbd5_jump
		jmp    _02fbcf_jump

	_02fbbf_jump:
		jge    _02fbd5_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _02f6d4_func
		test   %ax,%ax
		je     _02fbd5_jump

	_02fbcf_jump:
		movw   $0x000000,0x000040(%ecx)

	_02fbd5_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02fbdc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    0x000056(%eax),%ax
		add    %ax,0x00003c(%edx)

	_02fbeb_jump:
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02fbf7_jump
		neg    %eax

	_02fbf7_jump:
		cmp    $0x000080,%eax
		jl     _02fc36_jump
		mov    0x000054(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _02fc1f_jump
		mov    0x000028(%edx),%ecx
		mov    0x00003c(%edx),%di
		inc    %ecx
		sub    $0x000080,%edi
		mov    %ecx,0x000028(%edx)
		mov    %di,0x00003c(%edx)
		jmp    _02fbeb_jump

	_02fc1f_jump:
		mov    0x000028(%edx),%ebx
		mov    0x00003c(%edx),%si
		dec    %ebx
		add    $0x000080,%esi
		mov    %ebx,0x000028(%edx)
		mov    %si,0x00003c(%edx)
		jmp    _02fbeb_jump

	_02fc36_jump:
		mov    0x00004a(%edx),%ax
		add    %ax,0x00003e(%edx)

	_02fc3e_jump:
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02fc4a_jump
		neg    %eax

	_02fc4a_jump:
		cmp    $0x000080,%eax
		jl     _02fc88_jump
		mov    0x000048(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _02fc72_jump
		mov    0x00002c(%edx),%edi
		mov    0x00003e(%edx),%bx
		inc    %edi
		sub    $0x000080,%ebx
		mov    %edi,0x00002c(%edx)
		mov    %bx,0x00003e(%edx)
		jmp    _02fc3e_jump

	_02fc72_jump:
		mov    0x00002c(%edx),%esi
		mov    0x00003e(%edx),%ax
		dec    %esi
		add    $0x000080,%eax
		mov    %esi,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		jmp    _02fc3e_jump

	_02fc88_jump:
		mov    %edx,%eax
		call   _01dcec_func
		mov    0x000076(%edx),%al
		dec    %al
		mov    %al,0x00006b(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02fca0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		cmp    $0x000001,%al
		jbe    _02fd35_jump
		cmp    $0x000002,%al
		je     _02fd4d_jump

	_02fcba_jump:
		mov    0x00003e(%ecx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		je     _02fd7d_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000008,%eax
		xor    %edx,%edx
		movswl %ax,%esi
		mov    0x000068(%ecx),%dl
		mov    %esi,%ebx
		mov    %ecx,%eax
		movzbw 0x000068(%ecx),%di
		call   _02eb40_func
		test   %ax,%ax
		je     _02fd7d_jump
		movswl %di,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01d754_func
		test   %ax,%ax
		je     _02fd7d_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		test   %edx,%edx
		jne    _02fd60_jump
		mov    0x000081(%ecx),%bl
		mov    $0x000002,%edx
		or     $0x000008,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		mov    $0x000001,%ebx
		jmp    _02fd78_jump

	_02fd35_jump:
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		jne    _02fd46_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02fd4d_jump

	_02fd46_jump:
		orb    $0x000008,0x000081(%ecx)

	_02fd4d_jump:
		mov    %ecx,%eax
		call   _04d2c4_func
		mov    %ecx,%eax
		call   _024ba8_func
		jmp    _02fcba_jump

	_02fd60_jump:
		mov    0x000081(%ecx),%dh
		mov    $0x000001,%ebx
		and    $0x0000f7,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		mov    %ebx,%edx

	_02fd78_jump:
		call   _058bb4_func

	_02fd7d_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02fd84_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c24f2_data,%edx
		sar    $0x000010,%edx
		mov    _0c247a_data,%ebx
		add    $0x0000be,%edx
		mov    _0c1b08_data,%cx
		mov    %edx,0x00002c(%eax)
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000068(%eax),%dl
		movw   $0x000082,0x000050(%eax)
		sub    %edx,%ebx
		mov    _0c1b04_data,%edx
		mov    %ebx,0x000028(%eax)
		xor    %eax,%eax
		test   %cx,%cx
		jg     _02fdd7_jump
		jmp    _02fe3c_jump

	_02fdcb_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _02fe3c_jump

	_02fdd7_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x00009d,%ebx
		jne    _02fdcb_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _02fdcb_jump
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000040(%edx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%edx)
		mov    0x000028(%esi),%ebx
		add    $0x000065,%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%esi),%ebx
		mov    %edx,%eax
		mov    %ebx,0x00002c(%edx)
		call   _01dcec_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%bl
		movb   $0x000001,0x00006c(%edx)
		or     $0x000004,%bl
		mov    %bl,0x000081(%edx)

	_02fe3c_jump:
		movw   $0x000000,0x0000c6(%edx)
		mov    0x000105(%edx),%bh
		movw   $0x000000,0x0000c4(%edx)
		and    $0x0000f7,%bh
		mov    %bh,0x000105(%edx)
		mov    0x000028(%esi),%ebx
		add    $0x0000ca,%ebx
		mov    %ebx,0x0000ac(%edx)
		add    $0x000084,%edx
		mov    0x00002c(%esi),%ebx
		mov    %edx,%eax
		mov    %ebx,0x00002c(%edx)
		call   _01dcec_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%cl
		movb   $0x000002,0x00006c(%edx)
		or     $0x000004,%cl
		mov    %cl,0x000081(%edx)
		movw   $0x000000,0x0000c6(%edx)
		mov    0x000105(%edx),%ch
		movw   $0x000000,0x0000c4(%edx)
		and    $0x0000f7,%ch
		mov    %ch,0x000105(%edx)
		mov    0x000028(%esi),%ebx
		add    $0x00012f,%ebx
		mov    %ebx,0x0000ac(%edx)
		add    $0x000084,%edx
		mov    0x00002c(%esi),%ebx
		mov    %edx,%eax
		mov    %ebx,0x00002c(%edx)
		call   _01dcec_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%al
		movb   $0x000003,0x00006c(%edx)
		or     $0x000004,%al
		mov    %al,0x000081(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ff08_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edx
		testb  $0x000004,_0c1b9d_data
		je     _0301f2_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _02ff3d_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000017,%eax
		je     _0301f2_jump

	_02ff3d_jump:
		mov    _0c24f2_data,%ax
		cmp    $0x000003,%ax
		jb     _0301e6_jump
		jbe    _02ffff_jump
		cmp    $0x000005,%ax
		jbe    _0300ff_jump
		jmp    _0301fe_jump

	_02ff62_jump:
		sub    %al,%al
		mov    %al,0x000076(%edx)
		mov    %edx,%eax
		call   _02fd84_func
		jmp    _0301fe_jump

	_02ff73_jump:
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0x000028,%eax
		jg     _02ffa0_jump
		mov    _0c2560_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%ebx
		mov    0x000054(%ebx,%eax,4),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _02ffdd_jump

	_02ffa0_jump:
		cmpb   $0x000000,_0c249a_data
		je     _02ffc0_jump
		testb  $0x000004,_0c1b9d_data
		je     _02ffc0_jump
		cmpl   $0x000078,0x00002c(%edx)
		jle    _02ffc0_jump
		movw   $0x00ffff,0x000042(%edx)
		jmp    _02ffc6_jump

	_02ffc0_jump:
		movw   $0x000000,0x000042(%edx)

	_02ffc6_jump:
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0301fe_jump
		decw   0x000050(%edx)
		jmp    _0301fe_jump

	_02ffdd_jump:
		movw   $0x000000,0x000042(%edx)
		jmp    _0301fe_jump

	_02ffe8_jump:
		mov    0x000076(%edx),%al
		test   %al,%al
		jbe    _02ff73_jump
		cmp    $0x000001,%al
		je     _02ff62_jump
		decb   0x000076(%edx)
		jmp    _0301fe_jump

	_02ffff_jump:
		mov    _0c24de_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _0300a4_jump
		mov    _0c1af8_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		je     _030067_jump
		mov    _0c247e_data,%ax
		add    $0x000078,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00002c(%edx),%ebx
		mov    0x00003c(%edx),%eax
		sub    $0x000064,%ebx
		sar    $0x000010,%eax
		cmp    %eax,%ebx
		jle    _030040_jump
		subl   $0x000003,0x00002c(%edx)

	_030040_jump:
		decl   0x00002c(%edx)
		mov    0x00003c(%edx),%eax
		mov    0x00002c(%edx),%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _03005c_jump
		cmpb   $0x000000,_0c249a_data
		je     _03005c_jump
		decl   0x00002c(%edx)

	_03005c_jump:
		movw   $0x000001,0x000056(%edx)
		jmp    _0300f2_jump

	_030067_jump:
		mov    0x000054(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _03008f_jump
		xor    %eax,%eax
		mov    _0c1b48_data,%si
		mov    _0c1b85_data,%al
		add    %esi,%eax
		movw   $0x000000,0x000056(%edx)
		sub    $0x00001e,%eax
		mov    %ax,0x00003e(%edx)

	_03008f_jump:
		mov    0x00003c(%edx),%eax
		mov    0x00002c(%edx),%esi
		sar    $0x000010,%eax
		cmp    %esi,%eax
		jge    _0300f2_jump
		lea    -0x000001(%esi),%edi
		mov    %edi,0x00002c(%edx)
		jmp    _0300f2_jump

	_0300a4_jump:
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%ebx
		mov    0x000076(%ebx,%eax,4),%al
		and    $0x0000ff,%eax
		test   %eax,%eax
		jle    _0300f2_jump
		mov    _0c24f2_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edx),%ebx
		add    $0x000078,%eax
		cmp    %ebx,%eax
		jle    _0300f2_jump
		mov    0x00003a(%edx),%bx
		add    $0x00000e,%ebx
		mov    %bx,0x00003a(%edx)
		mov    0x000038(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0x000010,%eax
		jle    _0300f2_jump
		mov    %ebx,%ecx
		sub    $0x000010,%ecx
		mov    %cx,0x00003a(%edx)
		incl   0x00002c(%edx)

	_0300f2_jump:
		mov    0x00002c(%edx),%ax
		sub    $0x000078,%eax
		mov    %ax,_0c25a0_data

	_0300ff_jump:
		mov    0x000034(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff5a,%eax
		jge    _03017b_jump
		mov    0x000028(%edx),%ebp
		mov    0x00006c(%edx),%cl
		xor    %eax,%eax
		add    $0x0001f9,%ebp
		inc    %cl
		mov    %ebp,0x000028(%edx)
		mov    %cl,%al
		mov    %cl,0x00006c(%edx)
		cmp    $0x000003,%eax
		jle    _03012d_jump
		movb   $0x000000,0x00006c(%edx)

	_03012d_jump:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jne    _0301fe_jump
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _0301fe_jump
		subw   $0x000005,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0c24f2_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edx),%ebx
		add    $0x000078,%eax
		cmp    %ebx,%eax
		jle    _0301fe_jump
		mov    %eax,0x00002c(%edx)
		jmp    _0301fe_jump

	_03017b_jump:
		cmp    $0x00016e,%eax
		jle    _0301fe_jump
		mov    0x000028(%edx),%esi
		mov    0x00006c(%edx),%bh
		xor    %eax,%eax
		sub    $0x0001f9,%esi
		dec    %bh
		mov    %esi,0x000028(%edx)
		mov    %bh,%al
		mov    %bh,0x00006c(%edx)
		cmp    $0x000003,%eax
		jle    _0301a7_jump
		movb   $0x000003,0x00006c(%edx)

	_0301a7_jump:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jne    _0301fe_jump
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _0301fe_jump
		addw   $0x000005,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0c24f2_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edx),%edi
		add    $0x000078,%eax
		cmp    %edi,%eax
		jle    _0301fe_jump
		mov    %eax,0x00002c(%edx)
		jmp    _0301fe_jump

	_0301e6_jump:
		cmp    $0x000001,%ax
		je     _02ffe8_jump
		jmp    _0301fe_jump

	_0301f2_jump:
		movw   $0x000000,0x000042(%edx)
		movw   $0x000000,0x000040(%edx)

	_0301fe_jump:
		mov    _0c247c_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edx),%esi
		add    $0x000078,%eax
		cmp    %esi,%eax
		jle    _030213_jump
		mov    %eax,0x00002c(%edx)

	_030213_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03021c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		mov    _0c1b00_data,%ebx
		mov    0x000032(%eax),%edx
		movzbl 0x00006d(%eax),%ebp
		sar    $0x000010,%edx
		shl    $0x000002,%ebp
		mov    (%ebx,%edx,2),%dx
		mov    0x00000c(%eax),%ebx
		add    %ebx,%ebp
		xor    %ebx,%ebx
		mov    0x000000(%ebp),%ebp
		mov    0x00006c(%eax),%bl
		movzbl 0x000002(%ebp,%ebx,8),%ebp
		lea    0x000000(,%ebp,4),%ebx
		sub    %ebp,%ebx
		mov    0x000004(%eax),%ebp
		mov    0x00000a(%ebp,%ebx,4),%bl
		mov    %bl,0x000008(%esp)
		xor    %ebx,%ebx
		mov    0x000034(%eax),%si
		mov    %bx,0x000004(%esp)
		cmp    %si,%dx
		je     _030334_jump
		xor    %esi,%esi
		xor    %edi,%edi

	_03027c_jump:
		movswl %dx,%ebp
		imul   $0x000084,%ebp,%edx
		mov    0x000004(%esp),%eax
		mov    _0c1b04_data,%ebx
		inc    %eax
		add    %edx,%ebx
		mov    %ax,0x000004(%esp)
		mov    0x000081(%ebx),%ah
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ebx)
		mov    0x00006b(%ecx),%dl
		mov    %edx,(%esp)
		mov    0x000002(%esp),%edx
		mov    (%esp),%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %dl,0x00006b(%ebx)
		xor    %edx,%edx
		add    $0x000020,%edi
		mov    0x000076(%ecx),%dl
		mov    %edi,%eax
		sub    $0x000002,%edx
		imul   %edx,%eax
		mov    0x00003c(%ecx),%dx
		add    %eax,%edx
		mov    %dx,0x00003c(%ebx)
		mov    0x00003e(%ecx),%dx
		mov    %dx,0x00003e(%ebx)
		add    $0x000100,%esi
		mov    0x000050(%ecx),%dx
		sub    %esi,%edx
		mov    %dx,0x000050(%ebx)
		mov    0x00003a(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%ebx)
		mov    0x00003c(%ebx),%edx
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ebx)
		call   _01dcec_func
		mov    _0c1b00_data,%ebx
		mov    (%ebx,%ebp,2),%dx
		cmp    0x000034(%ecx),%dx
		jne    _03027c_jump

	_030334_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030340_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x0000b2,%eax
		je     _03035a_jump
		cmp    $0x0000f1,%eax
		jne    _030399_jump

	_03035a_jump:
		cmpw   $0x000000,0x000052(%esi)
		jne    _030399_jump
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		dec    %eax
		cwtl   
		call   _064360_func
		mov    %al,0x00006b(%esi)
		mov    %esi,%eax
		movw   $0x001000,0x000050(%esi)
		call   _03021c_func
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030399_jump:
		mov    $0x000028,%ebx
		lea    0x000050(%esi),%ecx
		mov    $0x000018,%edx
		mov    %esi,%eax
		call   _01d1b4_func
		movw   $0x000000,0x000040(%esi)
		mov    %ax,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0303bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _030474_jump
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		cmp    $0x000036,%edx
		jne    _030474_jump
		mov    0x00000c(%ecx),%ebx
		mov    (%ebx,%eax,4),%eax
		testb  $0x000010,0x000007(%eax,%edx,8)
		je     _0303f3_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _030416_jump

	_0303f3_jump:
		xor    %eax,%eax
		mov    0x00006a(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    0x000004(%ecx),%eax
		mov    0x00000a(%eax,%edx,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_030416_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _030458_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _030458_jump
		mov    %eax,0x000024(%ecx)
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _030468_jump

	_030458_jump:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jne    _030468_jump
		mov    %ecx,%eax
		call   _072f20_func

	_030468_jump:
		mov    %ecx,%eax
		call   _04dbe4_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030474_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _03048c_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000017,%eax
		je     _0304b9_jump

	_03048c_jump:
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _030557_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _0304b9_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00001f,%eax
		je     _030557_jump

	_0304b9_jump:
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000069(%ecx),%dl
		call   _0186d4_func
		cwtl   
		mov    0x00002c(%ecx),%esi
		sub    %edx,%eax
		sub    %esi,%eax
		cmp    $0x000020,%eax
		jg     _0304fc_jump
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000069(%ecx),%dl
		call   _0186d4_func
		cwtl   
		mov    $0x000036,%ebx
		sub    %edx,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01d4a8_func
		movb   $0x00006b,0x00006a(%ecx)
		movb   $0x000000,0x00006b(%ecx)
		jmp    _030512_jump

	_0304fc_jump:
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)

	_030512_jump:
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _072f20_func
		mov    _0c1ad0_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		mov    0x000081(%eax,%edx,4),%bl
		movl   $0x000000,0x000024(%eax,%edx,4)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%eax,%edx,4)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030557_jump:
		mov    _0c1ad0_data,%ah
		test   %ah,%ah
		je     _0306eb_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0c1ace_data,%dl
		mov    _0c1acf_data,%al
		dec    %edx
		cmp    %edx,%eax
		jne    _0305c6_jump
		mov    _0c1ad0_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		mov    0x000081(%ecx),%bh
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		and    $0x0000fb,%bh
		add    %eax,%edx
		mov    %bh,0x000081(%ecx)
		andb   $0x0000fb,0x000081(%edx)
		mov    %ecx,%eax
		call   _072f20_func
		cmpl   $0x000000,0x000024(%edx)
		je     _03070b_jump
		mov    %edx,%eax
		call   _072f20_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0305c6_jump:
		lea    0x000000(,%eax,8),%edx
		add    %eax,%edx
		add    %edx,%edx
		add    $_0c13b4_data,%edx
		movswl (%edx),%eax
		mov    %eax,0x000028(%ecx)
		mov    (%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%edx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x000009(%edx),%al
		mov    %al,0x00006c(%ecx)
		mov    0x00000a(%edx),%al
		mov    %al,0x00006a(%ecx)
		mov    0x00000b(%edx),%al
		mov    %al,0x00006b(%ecx)
		mov    0x00000c(%edx),%al
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%ah
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		xor    %eax,%eax
		mov    0x000011(%edx),%al
		movw   $0x000000,0x000040(%ecx)
		mov    %ax,0x00005a(%ecx)
		xor    %eax,%eax
		mov    0x00007e(%ecx),%al
		movw   $0x000000,0x000042(%ecx)
		test   %eax,%eax
		jne    _03063d_jump
		mov    %ecx,%eax
		call   _072f20_func

	_03063d_jump:
		mov    _0c1ad0_data,%eax
		sar    $0x000010,%eax
		movb   $0x000004,0x00007e(%ecx)
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%ecx
		mov    0x000010(%edx),%bl
		add    %eax,%ecx
		test   %bl,%bl
		je     _0306c0_jump
		mov    0x000081(%ecx),%al
		movb   $0x000004,0x00007e(%ecx)
		or     $0x000004,%al
		mov    %al,0x000081(%ecx)
		mov    0x000002(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x000004(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x00000d(%edx),%al
		mov    %al,0x00006a(%ecx)
		mov    0x00000e(%edx),%al
		mov    %al,0x00006b(%ecx)
		mov    0x00000f(%edx),%al
		and    $0x000001,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%ecx)
		shl    $0x000003,%al
		movw   $0x000000,0x000040(%ecx)
		mov    %ah,%dl
		movw   $0x000000,0x000042(%ecx)
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		jmp    _0306c7_jump

	_0306c0_jump:
		andb   $0x0000fb,0x000081(%ecx)

	_0306c7_jump:
		mov    _0c1acf_data,%dh
		xor    %eax,%eax
		inc    %dh
		mov    %dh,%al
		mov    %dh,_0c1acf_data
		cmp    $0x000064,%eax
		jle    _03070b_jump
		xor    %bl,%bl
		mov    %bl,_0c1acf_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0306eb_jump:
		mov    %ah,0x00007e(%ecx)
		mov    _0c1ad0_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		mov    _0c1b04_data,%eax
		add    %ecx,%edx
		andb   $0x0000fb,0x000081(%eax,%edx,4)

	_03070b_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030710_jump:
		xor    %eax,%eax
		mov    _0c1ad0_data,%al
		cmp    $0x000001,%eax
		jne    _030724_jump
		xor    %ah,%ah
		mov    %ah,_0c1b92_data

	_030724_jump:
		ret    



_030728_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%ah
		or     $0x000008,%ah
		mov    %ah,0x000081(%esi)
		xor    %eax,%eax
		mov    _0c5184_data,%al
		cmp    $0x000001,%eax
		jne    _03095e_jump
		mov    0x000081(%esi),%dh
		mov    _0c1b5a_data,%eax
		and    $0x0000df,%dh
		sar    $0x000010,%eax
		mov    %dh,0x000081(%esi)
		test   %eax,%eax
		jle    _030781_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _0307a7_jump

	_030781_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _03080b_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _03080b_jump

	_0307a7_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0307b5_jump
		neg    %eax

	_0307b5_jump:
		cmp    $0x000002,%eax
		jge    _0307d4_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0307cd_jump
		mov    $0x000002,%eax
		jmp    _030807_jump

	_0307cd_jump:
		mov    $0xfffffffe,%eax
		jmp    _030807_jump

	_0307d4_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0307e2_jump
		neg    %eax

	_0307e2_jump:
		cmp    $0x000007,%eax
		jl     _030801_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0307fa_jump
		mov    $0x000007,%eax
		jmp    _030807_jump

	_0307fa_jump:
		mov    $0xfffffff9,%eax
		jmp    _030807_jump

	_030801_jump:
		mov    _0c1b5c_data,%ax

	_030807_jump:
		mov    %ax,0x000050(%esi)

	_03080b_jump:
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _03088e_jump
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _030827_jump
		neg    %eax

	_030827_jump:
		test   %eax,%eax
		jg     _030840_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _030839_jump
		neg    %eax

	_030839_jump:
		cmp    $0x000002,%eax
		jle    _030886_jump
		jmp    _030882_jump

	_030840_jump:
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _030866_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _03085e_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _030886_jump

	_03085e_jump:
		jge    _030882_jump
		movb   $0x000002,0x00006b(%esi)
		jmp    _030886_jump

	_030866_jump:
		jge    _030886_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _03087a_jump
		movb   $0x000002,0x00006b(%esi)
		jmp    _030886_jump

	_03087a_jump:
		jge    _030882_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _030886_jump

	_030882_jump:
		movb   $0x000001,0x00006b(%esi)

	_030886_jump:
		movw   $0x000008,0x000056(%esi)
		jmp    _030892_jump

	_03088e_jump:
		decw   0x000056(%esi)

	_030892_jump:
		lea    0x000008(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d840_func
		mov    (%esp),%edi
		mov    0x00002c(%esi),%cx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%al
		add    %ecx,%ebx
		add    %edi,%eax
		sub    %ebx,%eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    _0c1b44_data,%ebx
		mov    _0c1b84_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    _0c1b48_data,%edx
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    %ebx,0x000028(%esi)
		xor    %ebx,%ebx
		mov    _0c1b85_data,%al
		mov    0x000069(%esi),%bl
		add    %edx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    %ebx,0x00002c(%esi)
		cmp    $0x000003,%eax
		jne    _03091b_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000017,%eax
		je     _030940_jump

	_03091b_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _030933_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000016,%eax
		je     _030940_jump

	_030933_jump:
		call   _068a50_func
		test   %al,%al
		jne    _030a00_jump

	_030940_jump:
		mov    $_0c32e4_data,%edi
		xor    %bl,%bl
		mov    $_0c32e8_data,%esi
		mov    %bl,_0c5184_data
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03095e_jump:
		movw   $0x000000,0x000056(%esi)
		mov    0x000081(%esi),%dl
		movb   $0x000001,0x00006b(%esi)
		xor    %eax,%eax
		or     $0x000020,%dl
		mov    _0c1b89_data,%al
		mov    %dl,0x000081(%esi)
		cmp    $0x000003,%eax
		jne    _0309a0_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000016,%eax
		jne    _0309a0_jump
		mov    0x000050(%esi),%ax
		mov    %ax,0x000040(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0309a0_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _0309b8_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000001,%eax
		je     _0309e8_jump

	_0309b8_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _0309d0_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000002,%eax
		je     _0309e8_jump

	_0309d0_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _0309fa_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000006,%eax
		jne    _0309fa_jump

	_0309e8_jump:
		xor    %edx,%edx
		mov    %dx,_0c1b5c_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0309fa_jump:
		movw   $0x000000,0x000050(%esi)

	_030a00_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_030a0c_switch:
		.long   _030a91_case
		.long   _030a97_case
		.long   _030a9d_case
		.long   _030a9d_case
		.long   _030aa3_case




_030a20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    _0c24de_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _030c02_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _030a70_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000028(%esi),%ebx
		cmp    0x000028(%eax),%ebx
		jge    _030a67_jump
		mov    0x00002c(%eax),%eax
		add    $0x000070,%eax
		jmp    _030a6d_jump

	_030a67_jump:
		mov    0x00002c(%eax),%eax
		add    $0x000078,%eax

	_030a6d_jump:
		mov    %eax,0x00002c(%esi)

	_030a70_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _030be7_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000f,%eax
		je     _030aad_jump
		jmp    _030be7_jump

	_030a91_case:
		mov    $0x000030,%dh
		mov    $0x000018,%dl
		jmp    _030ae7_jump

	_030a97_case:
		mov    $0x000030,%dh
		mov    $0x000020,%dl
		jmp    _030ae7_jump

	_030a9d_case:
		mov    $0x000038,%dh
		mov    $0x000028,%dl
		jmp    _030ae7_jump

	_030aa3_case:
		mov    $0x000038,%dh
		mov    $0x000040,%dl
		jmp    _030ae7_jump

	_030aa9_jump:
		xor    %eax,%eax
		jmp    _030ae7_jump

	_030aad_jump:
		mov    _0c1b48_data,%di
		mov    0x000028(%esi),%ax
		mov    0x00002c(%esi),%cx
		mov    0x00006c(%esi),%bl
		mov    %eax,0x000004(%esp)
		mov    _0c1b44_data,%ax
		sub    $0x000010,%bl
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		cmp    $0x000004,%bl
		ja     _030aa9_jump
		and    $0x0000ff,%ebx
		jmp    *%cs:_030a0c_switch(,%ebx,4)

	_030ae7_jump:
		test   %ax,%ax
		je     _030b2b_jump
		xor    %eax,%eax
		mov    %dl,%al
		push   %eax
		xor    %eax,%eax
		mov    %dh,%al
		add    %eax,%ecx
		push   $0x000004
		movswl %cx,%eax
		push   %eax
		mov    0x000010(%esp),%eax
		add    $0x00007e,%eax
		cwtl   
		push   %eax
		mov    %edi,%eax
		add    $0x00001a,%eax
		movswl %ax,%edx
		mov    0x000010(%esp),%eax
		mov    $0x00002e,%ebx
		add    $0x000039,%eax
		mov    $0x000004,%ecx
		cwtl   
		call   _02aa7c_func

	_030b2b_jump:
		test   %ax,%ax
		je     _030bc3_jump
		decb   0x000076(%esi)
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    $0x000001,%eax
		jge    _030b67_jump
		mov    0x000077(%esi),%al
		mov    %al,0x000076(%esi)
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000013,%eax
		jge    _030b60_jump
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _01d498_func
		jmp    _030b67_jump

	_030b60_jump:
		mov    %esi,%eax
		call   _0738c0_func

	_030b67_jump:
		mov    _0c24de_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		mov    0x000054(%edx,%eax,4),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _030b9d_jump
		mov    0x000004(%esp),%eax
		add    $0x00001e,%edi
		add    $0x000080,%eax
		movswl %di,%edx
		cwtl   
		call   _07397c_func

	_030b9d_jump:
		mov    _0c24de_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    _0c1b04_data,%edx
		add    %ebx,%eax
		movw   $0x000000,0x000050(%edx,%eax,4)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030bc3_jump:
		mov    _0c24de_data,%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		shl    $0x000005,%eax
		mov    _0c1b04_data,%edx
		add    %esi,%eax
		incw   0x000050(%edx,%eax,4)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030be7_jump:
		mov    _0c24de_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		incw   0x000050(%edx,%eax,4)

	_030c02_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030c0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _030c4e_jump
		mov    _0c1b44_data,%eax
		mov    0x000028(%ecx),%edx
		add    $0x00002f,%eax
		cmp    %edx,%eax
		jle    _030c4e_jump
		mov    _0c1b44_data,%ebx
		lea    0x0000ba(%edx),%eax
		cmp    %ebx,%eax
		jle    _030c4e_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		movb   $0x00000a,0x000076(%ecx)
		call   _01d4a8_func

	_030c4e_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		cmp    $0x000001,%eax
		jle    _030c8d_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000010,%eax
		jge    _030c74_jump
		xor    %eax,%eax
		mov    _0c24a0_data,%al
		test   %eax,%eax
		jne    _030c93_jump
		incw   0x000042(%ecx)
		jmp    _030c93_jump

	_030c74_jump:
		xor    %eax,%eax
		mov    _0c24a0_data,%al
		test   %eax,%eax
		jne    _030c93_jump
		mov    _0c249b_data,%al
		test   %eax,%eax
		jne    _030c93_jump
		incl   0x00002c(%ecx)
		jmp    _030c93_jump

	_030c8d_jump:
		movw   $0x000000,0x000042(%ecx)

	_030c93_jump:
		mov    0x00004e(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		setle  %al
		movw   $0x000000,0x000050(%ecx)
		xor    %ah,%ah
		mov    %ax,0x000056(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030cb0_func:
		push   %ebx
		push   %edx
		mov    _0c1b48_data,%edx
		xor    %ebx,%ebx
		sub    $0x000062,%edx
		mov    0x00006a(%eax),%bl
		mov    %edx,0x00002c(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x00000a(%ebx,%edx,4),%dx
		and    $0x00ffff,%edx
		xor    %ebx,%ebx
		dec    %edx
		mov    0x00006b(%eax),%bl
		cmp    %edx,%ebx
		jne    _030d4a_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		mov    0x000005(%ebx,%edx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c2498_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _030d4a_jump
		mov    _0c24de_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0c1b04_data,%ebx
		mov    0x000054(%ebx,%edx,4),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _030d4a_jump
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)

	_030d4a_jump:
		pop    %edx
		pop    %ebx
		ret    



_030d50_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    0x00004e(%eax),%edx
		sar    $0x000010,%edx
		cmp    $0x0000ff,%edx
		je     _030e20_jump
		cmp    $0xffffffff,%edx
		jne    _030e06_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000010,0x000007(%ebx,%edx,8)
		je     _030d92_jump
		xor    %edx,%edx
		mov    0x00006b(%eax),%dl
		test   %edx,%edx
		jmp    _030db6_jump

	_030d92_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x00000a(%ebx,%edx,4),%dx
		and    $0x00ffff,%edx
		xor    %ebx,%ebx
		dec    %edx
		mov    0x00006b(%eax),%bl
		cmp    %edx,%ebx

	_030db6_jump:
		sete   %dl
		and    $0x0000ff,%edx
		je     _030e20_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    0x00006c(%eax),%bl
		mov    0x000005(%edx,%ebx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c2498_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _030e20_jump
		mov    0x000081(%eax),%ch
		mov    %edx,0x000024(%eax)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030e06_jump:
		test   %edx,%edx
		jne    _030e1c_jump
		movb   $0x000000,0x00006b(%eax)
		movw   $0x00ffff,0x000050(%eax)
		movb   $0x000002,0x00007e(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030e1c_jump:
		decw   0x000050(%eax)

	_030e20_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_030e24_switch:
		.long   _030eed_case
		.long   _030ef9_case
		.long   _030f06_case
		.long   _030f18_case
		.long   _030ef3_case




_030e38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		cmp    $0x000014,%al
		jb     _030ff8_jump
		jbe    _030e6a_jump
		cmp    $0x00001e,%al
		je     _030e7f_jump
		jmp    _031000_jump

	_030e57_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		jmp    _031000_jump

	_030e6a_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		jmp    _031000_jump

	_030e7f_jump:
		cmpl   $0x000000,0x000020(%ecx)
		je     _031000_jump
		mov    0x00004e(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    $0x000001,%dl
		cmp    $0xffffffff,%ebx
		je     _030eac_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%ebx
		cmpl   $0x000000,0x000024(%ebx,%eax,4)
		je     _030eac_jump
		xor    %dl,%dl

	_030eac_jump:
		test   %dl,%dl
		je     _030ec7_jump
		mov    0x00007f(%ecx),%ah
		test   %ah,%ah
		je     _030ec7_jump
		cmpb   $0x000000,_0c249a_data
		je     _030ec7_jump
		mov    %ah,%dh
		dec    %dh
		mov    %dh,0x00007f(%ecx)

	_030ec7_jump:
		xor    %bl,%bl
		mov    %bl,(%esp)
		cmpb   $0x000000,0x00007f(%ecx)
		jne    _030fe6_jump
		mov    0x000052(%ecx),%ax
		cmp    $0x000004,%ax
		ja     _030f23_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_030e24_switch(,%eax,4)

	_030eed_case:
		movw   $0x000002,0x000052(%ecx)

	_030ef3_case:
		mov    0x000060(%ecx),%si
		jmp    _030f23_jump

	_030ef9_case:
		mov    $0x00004d,%esi
		movw   $0x000003,0x000052(%ecx)
		jmp    _030f23_jump

	_030f06_case:
		mov    $0x000048,%esi
		mov    $0x000001,%al
		movw   $0x000001,0x000052(%ecx)
		mov    %al,(%esp)
		jmp    _030f23_jump

	_030f18_case:
		mov    $0x0000bb,%esi
		movw   $0x000004,0x000052(%ecx)

	_030f23_jump:
		cmpb   $0x000000,(%esp)
		jne    _030f2d_jump
		movb   $0x000032,0x00007f(%ecx)

	_030f2d_jump:
		cmp    0x000060(%ecx),%si
		je     _030fe6_jump
		mov    %ecx,%eax
		call   _058b14_func
		movw   $0x000000,0x000048(%ecx)
		mov    0x000034(%ecx),%ax

	_030f48_jump:
		mov    _0c1b00_data,%edx
		cwtl   
		mov    (%edx,%eax,2),%ax
		movswl %ax,%edx
		imul   $0x000084,%edx,%edx
		mov    _0c1b04_data,%ebx
		add    %ebx,%edx
		mov    0x000060(%edx),%bx
		cmp    %bx,%si
		je     _030f73_jump
		cmp    0x000060(%ecx),%bx
		jne    _030f48_jump

	_030f73_jump:
		mov    0x000060(%edx),%ax
		cmp    0x000060(%ecx),%ax
		jne    _030fa4_jump
		jmp    _030fe6_jump

	_030f82_jump:
		mov    %edx,%eax
		call   _03cf48_func
		jmp    _030fba_jump

	_030f8b_jump:
		mov    %edx,%eax
		call   _054e70_func
		jmp    _030fba_jump

	_030f94_jump:
		mov    %edx,%eax
		call   _05c170_func
		mov    %edx,%eax
		call   _05e558_func
		jmp    _030fba_jump

	_030fa4_jump:
		cmp    $0x00004d,%ax
		jb     _030fb4_jump
		jbe    _030f82_jump
		cmp    $0x0000bb,%ax
		je     _030f94_jump
		jmp    _030fba_jump

	_030fb4_jump:
		cmp    $0x000048,%ax
		je     _030f8b_jump

	_030fba_jump:
		mov    %edx,%eax
		call   _05106c_func
		mov    %edx,%eax
		call   _04f7c0_func
		mov    %edx,%eax
		call   _01dcec_func
		mov    0x000081(%edx),%bl
		or     $0x000004,%bl
		mov    0x000034(%edx),%ax
		mov    %bl,0x000081(%edx)
		mov    %ax,0x000050(%ecx)

	_030fe6_jump:
		cmpb   $0x000000,(%esp)
		jne    _030ec7_jump
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030ff8_jump:
		cmp    $0x000002,%al
		je     _030e57_jump

	_031000_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031008_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000040(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jle    _031023_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		jmp    _031034_jump

	_031023_jump:
		cmp    $0x000001,%eax
		jle    _031039_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax

	_031034_jump:
		call   _01d4a8_func

	_031039_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _031045_jump
		neg    %eax

	_031045_jump:
		cmp    $0x000001,%eax
		jle    _031081_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _03105d_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _031081_jump

	_03105d_jump:
		mov    0x000081(%ecx),%ah
		test   $0x000008,%ah
		je     _03106e_jump
		decw   0x000040(%ecx)
		jmp    _031081_jump

	_03106e_jump:
		mov    %ah,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _031081_jump
		incw   0x000040(%ecx)

	_031081_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _031125_jump
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		cmp    $0x000003,%edx
		jne    _031125_jump
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%ecx),%eax
		mov    (%ebx,%eax,1),%eax
		testb  $0x000010,0x000007(%eax,%edx,8)
		je     _0310ba_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _0310dd_jump

	_0310ba_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_0310dd_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _031125_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _031125_jump
		mov    0x000081(%ecx),%bh
		mov    %eax,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%ecx)

	_031125_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03112c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%cl
		xor    %eax,%eax
		shl    $0x000004,%cl
		mov    0x00006d(%esi),%al
		shr    $0x000007,%cl
		test   %eax,%eax
		jne    _03116c_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000d,%eax
		jne    _03116c_jump
		mov    _0c1b66_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _03116c_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func

	_03116c_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _031278_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000f,%eax
		jne    _031278_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000086,%eax
		jne    _0311b3_jump
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0311b3_jump
		mov    $0x00000d,%edx
		mov    %esi,%eax
		call   _01d498_func
		movw   $0x000000,0x000040(%esi)
		jmp    _0311fa_jump

	_0311b3_jump:
		mov    _0c1b66_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0311fa_jump
		mov    _0c1b9d_data,%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _04d2c4_func
		mov    %cl,%al
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		or     %al,%bl
		mov    %bl,0x000081(%esi)

	_0311fa_jump:
		cmpw   $0x000000,0x000040(%esi)
		je     _031278_jump
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _01d3c0_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _03123b_jump
		xor    %ecx,%ecx
		jmp    _031242_jump

	_03123b_jump:
		mov    0x000006(%esp),%ecx
		sar    $0x000010,%ecx

	_031242_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    %eax,%ecx
		sar    $0x000004,%ecx
		movswl %cx,%eax
		call   _01e288_func
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		je     _031278_jump
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000040(%esi)

	_031278_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031280_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _0312bf_jump
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		cmp    $0x00000a,%eax
		jne    _0312bf_jump
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %eax,%edx
		and    $0x00fff0,%edx
		sub    %eax,%edx
		lea    0x000007(%edx),%eax
		mov    %eax,0x00002c(%ecx)

	_0312bf_jump:
		mov    %ecx,%eax
		mov    $0x00000a,%edx
		call   _03112c_func
		mov    %ecx,%eax
		call   _02e73c_func
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000009,%eax
		jne    _0312e3_jump
		mov    %ecx,%eax
		call   _057bb4_func

	_0312e3_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0312e8_switch:
		.long   _031382_case
		.long   _031397_case
		.long   _031382_case
		.long   _031397_case
		.long   _031382_case
		.long   _031397_case
		.long   _031397_case
		.long   _03138c_case
		.long   _031397_case
		.long   _03138c_case
		.long   _031397_case
		.long   _03138c_case




_031318_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    0x000060(%eax),%ax
		cmp    $0x000086,%ax
		jb     _03135c_jump
		jbe    _031338_jump
		cmp    $0x0000a7,%ax
		jb     _03136a_jump
		jbe    _031338_jump
		cmp    $0x0000b1,%ax
		je     _03134a_jump
		jmp    _03136a_jump

	_031338_jump:
		mov    0x000032(%ebx),%edx
		mov    $0x00002c,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		jmp    _03136a_jump

	_03134a_jump:
		mov    0x000032(%ebx),%edx
		mov    $0x00008b,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		jmp    _03136a_jump

	_03135c_jump:
		cmp    $0x000006,%ax
		jb     _03136a_jump
		jbe    _03134a_jump
		cmp    $0x000008,%ax
		je     _031338_jump

	_03136a_jump:
		mov    _0c1ed0_data,%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _031397_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0312e8_switch(,%eax,4)

	_031382_case:
		xor    %ecx,%ecx
		mov    _0c1ed3_data,%cl
		jmp    _031397_case

	_03138c_case:
		xor    %ecx,%ecx
		mov    _0c1ed3_data,%cl
		sub    $0x000002,%ecx

	_031397_case:
		mov    %ecx,%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		mov    _0c1ec0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		add    $0x00000a,%ecx
		test   %eax,%eax
		jge    _0313b2_jump
		neg    %ecx

	_0313b2_jump:
		movswl %cx,%edx
		mov    %ebx,%eax
		call   _01e7c8_func
		pop    %ecx
		pop    %ebx
		ret    



_0313c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000040(%eax),%bx
		call   _04d2c4_func
		mov    0x00003e(%edx),%eax
		movswl %bx,%ecx
		sar    $0x000010,%eax
		imul   %ecx,%eax
		test   %eax,%eax
		jge    _031403_jump
		mov    0x000081(%edx),%ch
		lea    0x000081(%edx),%eax
		test   $0x000008,%ch
		sete   %cl
		and    $0x000001,%cl
		mov    (%eax),%ch
		and    $0x0000f7,%ch
		shl    $0x000003,%cl
		or     %cl,%ch
		mov    %ch,(%eax)
		mov    %bx,0x000040(%edx)

	_031403_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031408_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00007f(%ecx),%al
		cmp    $0x0000ff,%eax
		je     _0314f4_jump
		test   %eax,%eax
		je     _03148a_jump
		jmp    _0314f1_jump

	_031427_jump:
		movl   $0x000001,_0c1b40_data
		mov    _0c1b40_data,%ah
		and    $0x000001,%ah
		mov    %al,_0c1b9d_data
		shl    $0x000002,%ah
		or     %ah,%al
		mov    %al,_0c1b9d_data
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _03149d_jump

	_031452_jump:
		movl   $0x000001,_0c1b40_data
		mov    _0c1b40_data,%ah
		and    $0x000001,%ah
		mov    %al,_0c1b9d_data
		shl    $0x000002,%ah
		mov    $0x000029,%ebx
		or     %ah,%al
		mov    $0x000003,%edx
		mov    %al,_0c1b9d_data
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		jmp    _03149d_jump

	_03148a_jump:
		mov    0x00006d(%ecx),%ah
		mov    _0c1b9d_data,%al
		and    $0x0000fb,%al
		test   %ah,%ah
		jbe    _031427_jump
		cmp    $0x000005,%ah
		je     _031452_jump

	_03149d_jump:
		mov    0x000081(%ecx),%dl
		mov    0x000032(%ecx),%eax
		and    $0x0000fb,%dl
		sar    $0x000010,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f5b4_func
		mov    $0x000040,%dh
		mov    0x000028(%ecx),%esi
		xor    %eax,%eax
		mov    %dh,_0c24d2_data
		mov    0x000068(%ecx),%al
		xor    %edx,%edx
		add    %esi,%eax
		mov    _0c1b84_data,%dl
		sub    %edx,%eax
		mov    %eax,_0c1b44_data
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b85_data,%al
		sub    %eax,%edx
		mov    %edx,_0c1b48_data

	_0314f1_jump:
		decb   0x00007f(%ecx)

	_0314f4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031f80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000040(%eax),%cx
		xor    %eax,%eax
		mov    _0c1b44_data,%bx
		mov    _0c1b84_data,%al
		mov    0x000028(%esi),%di
		add    %ebx,%eax
		sub    %edi,%eax
		movzbw 0x000068(%esi),%di
		sub    %edi,%eax
		mov    0x000034(%esi),%bx
		mov    %eax,%edi
		cmp    _0c1b66_data,%bx
		jne    _0320d7_jump
		movb   $0x000005,0x000072(%esi)
		mov    _0c1b48_data,%ebx
		movswl %di,%eax
		add    $0x000008,%ebx
		test   %eax,%eax
		jle    _03205b_jump
		cmp    $0x000062,%eax
		jle    _031fe3_jump
		mov    %ebx,_0c1b48_data
		jmp    _032015_jump

	_031fe3_jump:
		cmp    $0x000046,%eax
		jle    _031fef_jump
		mov    $0x000004,%edx
		jmp    _032015_jump

	_031fef_jump:
		cmp    $0x00003c,%eax
		jle    _031ffb_jump
		mov    $0x000003,%edx
		jmp    _032015_jump

	_031ffb_jump:
		cmp    $0x000028,%eax
		jle    _032007_jump
		mov    $0x000002,%edx
		jmp    _032015_jump

	_032007_jump:
		cmp    $0x000014,%eax
		jle    _032013_jump
		mov    $0x000001,%edx
		jmp    _032015_jump

	_032013_jump:
		xor    %edx,%edx

	_032015_jump:
		cmp    %dx,%cx
		jge    _032034_jump
		mov    0x000071(%esi),%al
		xor    %ebx,%ebx
		mov    %al,%bl
		dec    %al
		mov    %al,0x000071(%esi)
		test   %ebx,%ebx
		jg     _032034_jump
		inc    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _0320f8_jump

	_032034_jump:
		cmp    %dx,%cx
		jle    _0320f8_jump
		mov    0x000071(%esi),%al
		xor    %edx,%edx
		mov    %al,%dl
		dec    %al
		mov    %al,0x000071(%esi)
		test   %edx,%edx
		jg     _0320f8_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _0320f8_jump

	_03205b_jump:
		neg    %edi
		movswl %di,%eax
		cmp    $0x000069,%eax
		jle    _03206d_jump
		mov    %ebx,_0c1b48_data
		jmp    _03209f_jump

	_03206d_jump:
		cmp    $0x000046,%eax
		jle    _032079_jump
		mov    $0xfffffffc,%edx
		jmp    _03209f_jump

	_032079_jump:
		cmp    $0x00003c,%eax
		jle    _032085_jump
		mov    $0xfffffffd,%edx
		jmp    _03209f_jump

	_032085_jump:
		cmp    $0x000028,%eax
		jle    _032091_jump
		mov    $0xfffffffe,%edx
		jmp    _03209f_jump

	_032091_jump:
		cmp    $0x000014,%eax
		jle    _03209d_jump
		mov    $0xffffffff,%edx
		jmp    _03209f_jump

	_03209d_jump:
		xor    %edx,%edx

	_03209f_jump:
		cmp    %dx,%cx
		jle    _0320bb_jump
		mov    0x000071(%esi),%al
		xor    %ebx,%ebx
		mov    %al,%bl
		dec    %al
		mov    %al,0x000071(%esi)
		test   %ebx,%ebx
		jg     _0320bb_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _0320f8_jump

	_0320bb_jump:
		cmp    %dx,%cx
		jle    _0320f8_jump
		mov    0x000071(%esi),%al
		xor    %edx,%edx
		mov    %al,%dl
		dec    %al
		mov    %al,0x000071(%esi)
		test   %edx,%edx
		jg     _0320f8_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _0320f8_jump

	_0320d7_jump:
		mov    0x000072(%esi),%al
		xor    %edx,%edx
		mov    %al,%dl
		dec    %al
		mov    %al,0x000072(%esi)
		test   %edx,%edx
		jne    _0320f8_jump
		movswl %cx,%eax
		movb   $0x000005,0x000072(%esi)
		test   %eax,%eax
		je     _0320f8_jump
		jle    _0320f7_jump
		dec    %ecx
		jmp    _0320f8_jump

	_0320f7_jump:
		inc    %ecx

	_0320f8_jump:
		mov    %ecx,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000068(%esi),%al
		add    %ecx,%edx
		mov    0x000069(%esi),%bl
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01d754_func
		test   %ax,%ax
		je     _032119_jump
		xor    %ecx,%ecx

	_032119_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    %cx,0x000040(%esi)
		test   %eax,%eax
		jne    _032181_jump
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _032181_jump
		mov    0x000050(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _032315_jump
		mov    _0c1b66_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _032315_jump
		xor    %eax,%eax
		mov    0x00007f(%esi),%al
		cmp    $0x000064,%eax
		jle    _032175_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		movw   $0x000001,0x000052(%esi)
		mov    %esi,%eax
		movb   $0x000000,0x00007f(%esi)
		call   _058bb4_func
		jmp    _032315_jump

	_032175_jump:
		mov    %al,%dh
		inc    %dh
		mov    %dh,0x00007f(%esi)
		jmp    _032315_jump

	_032181_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _032264_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		jne    _032264_jump
		movw   $0x000000,0x000052(%esi)
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _032315_jump
		mov    _0c1b70_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _032315_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000014,%eax
		jl     _032315_jump
		cmp    $0x000016,%eax
		jg     _032315_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d840_func
		movswl %di,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _0321ff_jump
		neg    %eax

	_0321ff_jump:
		cmp    $0x000064,%eax
		jge    _032315_jump
		mov    -0x000002(%esp),%ebx
		xor    %eax,%eax
		mov    _0c1b48_data,%edi
		mov    _0c1b85_data,%al
		sar    $0x000010,%ebx
		add    %edi,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		sub    %eax,%ebx
		lea    -0x00001c(%ebx),%eax
		test   %eax,%eax
		jge    _032232_jump
		neg    %eax

	_032232_jump:
		cmp    $0x000014,%eax
		jge    _032315_jump
		test   %edx,%edx
		jge    _032248_jump
		orb    $0x000008,_0c1b9d_data
		jmp    _03224f_jump

	_032248_jump:
		andb   $0x0000f7,_0c1b9d_data

	_03224f_jump:
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02d3ac_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032264_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _032315_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _032315_jump
		cmpl   $0x000000,_0c1b40_data
		jne    _032315_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		test   %eax,%eax
		jne    _032315_jump
		mov    _0c1b66_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _032315_jump
		mov    $0x000001,%ebx
		mov    $0xffffffff,%ecx
		lea    0x00000c(%esp),%eax
		mov    $0x000001,%edx
		mov    %ebx,_0c1b40_data
		mov    %cx,_0c1b72_data
		push   %eax
		lea    0x00000c(%esp),%eax
		mov    _0c1b44_data,%ecx
		lea    0x000008(%esp),%ebx
		sub    $0x000004,%ecx
		push   %eax
		mov    %ecx,_0c1b44_data
		mov    %esi,%eax
		lea    0x000008(%esp),%ecx
		call   _01d840_func
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b85_data,%al
		mov    $0x000008,%ebx
		sub    %eax,%edx
		mov    $_0c1b1c_data,%eax
		mov    %edx,_0c1b48_data
		xor    %edx,%edx
		call   _01d4a8_func

	_032315_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032320_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x000050(%esi),%ecx
		mov    0x000069(%esi),%al
		sar    $0x000010,%ecx
		mov    %ax,0x000010(%esp)
		test   %ecx,%ecx
		jne    _03235a_jump
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		jmp    _032412_jump

	_03235a_jump:
		cmp    $0x000001,%ecx
		jne    _032412_jump
		mov    _0c1b66_data,%ax
		mov    0x000034(%esi),%dx
		cmp    %dx,%ax
		jne    _0323aa_jump
		xor    %edx,%eax
		mov    _0c1b44_data,%bx
		mov    _0c1b84_data,%al
		mov    0x000028(%esi),%cx
		add    %ebx,%eax
		mov    0x00000c(%esp),%edi
		sub    %ecx,%eax
		sub    %edi,%eax
		mov    _0c1b48_data,%ebx
		movswl %ax,%ecx
		add    $0x000008,%ebx
		cmp    $0x000060,%ecx
		jg     _0323a4_jump
		cmp    $0xffffff95,%ecx
		jge    _0323aa_jump

	_0323a4_jump:
		mov    %ebx,_0c1b48_data

	_0323aa_jump:
		mov    0x00000e(%esp),%edi
		mov    0x00000a(%esp),%ecx
		mov    %esi,%eax
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		mov    %edi,%ebx
		mov    %ecx,%edx
		call   _01d754_func
		test   %ax,%ax
		je     _0323e9_jump
		mov    %edi,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _02eb40_func
		test   %ax,%ax
		je     _0323e9_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _058bb4_func

	_0323e9_jump:
		mov    0x000081(%esi),%ah
		xor    %edx,%edx
		and    $0x0000f7,%ah
		mov    0x000070(%esi),%dl
		mov    %ah,0x000081(%esi)
		cmp    $0x000014,%edx
		jne    _032412_jump
		mov    0x000056(%esi),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000042(%esi)

	_032412_jump:
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		cmp    $0x000001,%edx
		jl     _0327f8_jump
		mov    0x000032(%esi),%ebx
		mov    _0c1b00_data,%edx
		sar    $0x000010,%ebx
		mov    (%edx,%ebx,2),%ax
		movswl %ax,%edi
		mov    %edi,%ecx
		shl    $0x000005,%ecx
		add    %edi,%ecx
		mov    _0c1b04_data,%edx
		shl    $0x000002,%ecx
		add    %edx,%ecx
		cmpl   $0x000000,0x000024(%ecx)
		jne    _032453_jump
		movl   $0x000001,0x000024(%ecx)

	_032453_jump:
		mov    0x00003e(%esi),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _0327f8_jump
		mov    0x000040(%esi),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _0327f8_jump
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		cmp    $0x000001,%edx
		jne    _03248e_jump
		mov    %edx,%ebx
		mov    %ecx,%eax
		mov    $0x000063,%edx
		movw   $0x000002,0x000052(%esi)
		call   _058bb4_func

	_03248e_jump:
		mov    0x000050(%esi),%edi
		sar    $0x000010,%edi
		cmp    $0x000002,%edi
		jne    _0325ba_jump
		movw   $0x000003,0x000052(%ecx)
		mov    0x000028(%ecx),%di
		sub    0x000028(%esi),%di
		mov    0x00002c(%esi),%dx
		mov    %edi,%eax
		mov    0x00002c(%ecx),%di
		sub    %edx,%edi
		mov    %edi,%edx
		movswl %ax,%edi
		cmp    $0x000006,%edi
		jle    _0324cc_jump
		movw   $0x00fffc,0x000040(%ecx)
		jmp    _0327f8_jump

	_0324cc_jump:
		cmp    $0xfffffffa,%edi
		jge    _0324e1_jump
		movw   $0x000004,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0324e1_jump:
		test   %edi,%edi
		jle    _0324f5_jump
		movw   $0x00ffff,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0324f5_jump:
		jge    _032507_jump
		movw   $0x000001,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032507_jump:
		movswl %dx,%edi
		movw   $0x000000,0x000040(%ecx)
		cmp    $0xfffffff8,%edi
		jge    _032525_jump
		movw   $0x000004,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032525_jump:
		cmp    $0x000008,%edi
		jle    _03253a_jump
		movw   $0x00fffc,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03253a_jump:
		test   %edi,%edi
		jle    _03254e_jump
		movw   $0x00ffff,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03254e_jump:
		jl     _0327f2_jump
		movw   $0x000000,0x000042(%ecx)
		xor    %edx,%edx
		movw   $0x000004,0x000052(%esi)
		mov    0x000060(%ecx),%dx
		movw   $0x000004,0x000052(%ecx)
		cmp    $0x0000a8,%edx
		jne    _032585_jump
		mov    $0x000009,%edi
		mov    $0x000005,%eax
		mov    %di,0x000020(%esp)
		jmp    _032594_jump

	_032585_jump:
		mov    $0x000005,%ebx
		mov    $0x000009,%eax
		mov    %bx,0x000020(%esp)

	_032594_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %al,%bl
		mov    %ecx,%eax
		call   _01d4a8_func
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000020(%esp),%bl
		call   _01d4a8_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0325ba_jump:
		cmp    $0x000004,%edi
		jne    _0326c7_jump
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x0000a8,%edx
		jne    _0325da_jump
		movw   $0x000007,0x000020(%esp)
		jmp    _0325e1_jump

	_0325da_jump:
		movw   $0x00000b,0x000020(%esp)

	_0325e1_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		test   %edx,%edx
		jne    _0327f8_jump
		mov    0x00001e(%esp),%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x00006c(%esi),%bl
		cmp    %edx,%ebx
		jne    _0327f8_jump
		xor    %edx,%edx
		mov    0x00006b(%esi),%dl
		test   %edx,%edx
		jne    _0327f8_jump
		movw   $0x000005,0x000052(%esi)
		cmpl   $0x000000,_0c1b40_data
		jne    _0327f8_jump
		mov    _0c1b66_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _0327f8_jump
		mov    _0c1b70_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _0327f8_jump
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x0000a9,%edx
		jne    _0327f8_jump
		mov    $0x000001,%ecx
		lea    0x000028(%esp),%edx
		lea    0x00001c(%esp),%ebx
		mov    _0c1b44_data,%edi
		mov    %esi,%eax
		mov    %ecx,_0c1b40_data
		push   %edx
		sub    $0x000004,%edi
		lea    0x000028(%esp),%edx
		lea    0x00000c(%esp),%ecx
		push   %edx
		mov    $0x000001,%edx
		mov    %edi,_0c1b44_data
		call   _01d840_func
		mov    0x000006(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000074(%esi),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0c1b85_data,%dl
		sub    %edx,%ebx
		mov    $_0c1b1c_data,%eax
		mov    %ebx,_0c1b48_data
		xor    %edx,%edx
		mov    $0x000008,%ebx
		call   _01d4a8_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0326c7_jump:
		cmp    $0x000005,%edi
		jne    _0327f8_jump
		mov    0x00000e(%esp),%edi
		mov    0x00000a(%esp),%ebp
		xor    %eax,%eax
		sar    $0x000010,%edi
		mov    0x000068(%ecx),%al
		sar    $0x000010,%ebp
		mov    %ax,0x000018(%esp)
		xor    %eax,%eax
		mov    %edi,%ebx
		mov    0x000069(%ecx),%al
		mov    %ebp,%edx
		mov    %ax,0x000014(%esp)
		mov    %esi,%eax
		call   _01d754_func
		mov    0x000012(%esp),%edx
		sar    $0x000010,%edx
		mov    %eax,0x00001c(%esp)
		mov    %edx,(%esp)
		mov    0x000016(%esp),%edx
		mov    %ecx,%eax
		sar    $0x000010,%edx
		mov    (%esp),%ebx
		mov    %edx,0x000004(%esp)
		call   _01d754_func
		mov    %ax,0x000008(%esp)
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _02eb40_func
		mov    (%esp),%ebx
		mov    0x000004(%esp),%edx
		mov    %eax,0x000024(%esp)
		mov    %ecx,%eax
		call   _02eb40_func
		mov    %eax,0x000028(%esp)
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %esi,%eax
		call   _01d754_func
		test   %ax,%ax
		je     _0327ba_jump
		mov    (%esp),%ebx
		mov    0x000004(%esp),%edx
		mov    %ecx,%eax
		call   _01d754_func
		test   %ax,%ax
		je     _0327ba_jump
		mov    %edi,%ebx
		mov    %ebp,%edx
		movw   $0x000001,0x000052(%esi)
		mov    %esi,%eax
		movw   $0x000001,0x000052(%ecx)
		call   _02eb40_func
		mov    (%esp),%ebx
		mov    0x000004(%esp),%edx
		mov    %ecx,%eax
		call   _02eb40_func
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _058bb4_func
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0327ba_jump:
		mov    0x000012(%esp),%ebx
		mov    0x000016(%esp),%edx
		mov    %ecx,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01d754_func
		test   %ax,%ax
		jne    _0327f8_jump
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x0000a8,%edx
		jne    _0327f2_jump
		movw   $0x00ffff,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0327f2_jump:
		movw   $0x000001,0x000042(%ecx)

	_0327f8_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032804_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		xor    %ebx,%ebx
		cmp    $0x0000a9,%eax
		jne    _0328e4_jump
		mov    0x000032(%esi),%eax
		mov    _0c1b00_data,%edx
		sar    $0x000010,%eax
		mov    $0x00000a,%edi
		mov    (%edx,%eax,2),%ax
		mov    0x000034(%esi),%dx
		mov    %di,(%esp)
		cmp    %dx,%ax
		je     _032922_jump
		cwtl   
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edi
		add    %eax,%edi
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		cmp    $0x0000a8,%eax
		jne    _032922_jump
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		cmp    $0x000080,%eax
		jle    _032880_jump
		movw   $0x000001,0x000042(%edi)
		jmp    _03288b_jump

	_032880_jump:
		cmp    $0xffffff80,%eax
		jge    _03288b_jump
		movw   $0x00ffff,0x000042(%edi)

	_03288b_jump:
		mov    _0c2576_data,%ecx
		mov    _0c2574_data,%ebx
		push   %edi
		mov    0x000040(%edi),%eax
		mov    0x00002c(%edi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		add    %eax,%eax
		sar    $0x000010,%ebx
		add    %eax,%edx
		mov    _0c2578_data,%eax
		mov    %edx,0x00002c(%edi)
		sar    $0x000010,%eax
		mov    _0c2572_data,%edx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02bd7c_func
		mov    %eax,%ebx
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edi),%ecx
		add    %eax,%eax
		sub    %eax,%ecx
		mov    %ecx,0x00002c(%edi)
		mov    0x000042(%edi),%cx
		add    %ecx,%ecx
		jmp    _032922_jump

	_0328e4_jump:
		mov    _0c2578_data,%eax
		mov    _0c2576_data,%ecx
		mov    _0c2574_data,%ebx
		mov    _0c2572_data,%edx
		push   %esi
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02bd7c_func
		mov    $0x000001,%edx
		mov    %eax,%ebx
		mov    0x000042(%esi),%cx
		mov    %dx,(%esp)

	_032922_jump:
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		je     _032b12_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		dec    %ebx
		cmp    $0x000002,%eax
		jne    _03299b_jump
		movzbl _0c1b88_data,%edi
		cmp    %eax,%edi
		je     _03299b_jump
		cmp    $0x000001,%edi
		je     _03299b_jump
		cmp    $0x000008,%edi
		je     _03295f_jump
		mov    $0x000001,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func

	_03295f_jump:
		movswl %cx,%eax
		cmp    $0x000080,%eax
		jle    _032970_jump
		mov    $0x000001,%ecx
		jmp    _03297a_jump

	_032970_jump:
		cmp    $0xffffff80,%eax
		jge    _03297a_jump
		mov    $0xffffffff,%ecx

	_03297a_jump:
		mov    _0c1b48_data,%edi
		movswl %cx,%eax
		add    %eax,%edi
		xor    %ecx,%ecx
		mov    %edi,_0c1b48_data
		mov    %cx,_0c1b6e_data
		mov    %cx,_0c1b5e_data

	_03299b_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _0329b7_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000008,%eax
		je     _032b12_jump

	_0329b7_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _0329d0_jump
		mov    _0c1b88_data,%al
		cmp    $0x00003d,%eax
		je     _032b12_jump

	_0329d0_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000014,%eax
		jl     _032b12_jump
		cmp    $0x000016,%eax
		jg     _032b12_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _032b12_jump
		mov    -0x000002(%esp),%edx
		mov    0x00006c(%esi),%al
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jne    _032b12_jump
		xor    %edx,%eax
		mov    0x000075(%esi),%al
		cmp    $0x000001,%eax
		je     _032a1c_jump
		movswl %bx,%eax
		cmp    $0x000001,%eax
		jne    _032ae6_jump

	_032a1c_jump:
		testb  $0x000004,_0c1b9d_data
		je     _032ae6_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _032a45_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000008,%eax
		je     _032ae6_jump

	_032a45_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _032a5e_jump
		mov    _0c1b88_data,%al
		cmp    $0x00003d,%eax
		je     _032ae6_jump

	_032a5e_jump:
		xor    %eax,%eax
		mov    _0c1b44_data,%dx
		mov    _0c1b84_data,%al
		mov    0x000028(%esi),%bx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		movswl %dx,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _032a86_jump
		neg    %eax

	_032a86_jump:
		cmp    $0x000019,%eax
		jge    _032ad0_jump
		mov    $0xffffffff,%edx
		mov    $_0c1b1c_data,%eax
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %ebx,%ebx
		mov    %cx,_0c1b5c_data
		mov    %cx,_0c1b5e_data
		mov    %cx,_0c2584_data
		mov    %dx,_0c1b72_data
		xor    %edx,%edx
		mov    %ebp,_0c1b40_data
		call   _01d4a8_func
		mov    0x000034(%esi),%ax
		mov    %ax,_0c1b66_data
		jmp    _032b12_jump

	_032ad0_jump:
		test   %edi,%edi
		jge    _032add_jump
		orb    $0x000008,_0c1b9d_data
		jmp    _032b06_jump

	_032add_jump:
		andb   $0x0000f7,_0c1b9d_data
		jmp    _032b06_jump

	_032ae6_jump:
		xor    %eax,%eax
		mov    0x000075(%esi),%al
		test   %eax,%eax
		je     _032af6_jump
		movswl %bx,%eax
		test   %eax,%eax
		jne    _032aff_jump

	_032af6_jump:
		orb    $0x000008,_0c1b9d_data
		jmp    _032b06_jump

	_032aff_jump:
		andb   $0x0000f7,_0c1b9d_data

	_032b06_jump:
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02d3ac_func

	_032b12_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032b20_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%bl
		call   _0186d4_func
		sub    %ebx,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0c24f6_data,%ax
		add    $0x000090,%eax
		mov    %ax,0x00003c(%edx)
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%edx)
		pop    %edx
		pop    %ebx
		ret    



_032b58_func:
		incb   _0d7c5f_data
		xor    %eax,%eax
		mov    _0d7c5f_data,%al
		cmp    $0x000003,%eax
		jne    _032b72_jump
		movb   $0x000003,_0d7c60_data
		ret    

	_032b72_jump:
		mov    _095fa4_data(%eax),%al
		mov    %al,_0d7c60_data
		ret    



_032c8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    _0c1ad4_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _032dea_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _032dea_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    _0c24e0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032d41_jump
		mov    $0x000040,%ebx
		mov    $0x000005,%edx
		mov    _0c1ec0_data,%eax
		call   _01d4a8_func
		xor    %eax,%eax
		mov    0x000028(%esi),%edi
		mov    0x000068(%esi),%al
		add    %eax,%edi
		mov    _0c1ec0_data,%eax
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%edi
		xor    %edx,%edx
		mov    %edi,0x000028(%eax)
		mov    0x000069(%esi),%dl
		mov    0x00002c(%esi),%edi
		add    %edx,%edi
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%edi
		sub    $0x000005,%edi
		mov    0x000024(%eax),%edx
		mov    %edi,0x00002c(%eax)
		test   %edx,%edx
		jne    _032d26_jump
		call   _01f584_func

	_032d26_jump:
		mov    _0c1ec0_data,%eax
		mov    0x000081(%eax),%dl
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%dl
		mov    %dl,0x000081(%eax)

	_032d41_jump:
		mov    0x00006c(%ecx),%al
		cmp    $0x00001c,%al
		jb     _033157_jump
		jbe    _032f8d_jump
		cmp    $0x00001d,%al
		jbe    _032e88_jump
		cmp    $0x000028,%al
		jne    _032dea_jump
		xor    %edx,%edx
		mov    0x00000c(%ecx),%esi
		mov    0x00006d(%ecx),%dl
		and    $0x0000ff,%eax
		mov    (%esi,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _032d82_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _032da5_jump

	_032d82_jump:
		xor    %eax,%eax
		mov    0x00006a(%ecx),%al
		lea    0x000000(,%eax,4),%esi
		sub    %eax,%esi
		mov    0x000004(%ecx),%eax
		mov    0x00000a(%eax,%esi,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_032da5_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _032dea_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _032dea_jump
		mov    %ecx,%eax
		call   _03414c_func

	_032dea_jump:
		pop    %ebp
		pop    %edi

	_032dec_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032df1_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_032e14_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _032dea_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _032dea_jump
		decw   0x000050(%esi)
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _032e6d_jump
		mov    $0x000028,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032e6d_jump:
		mov    $0x00001c,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000056(%esi)
		call   _01d4a8_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032e88_jump:
		mov    0x00002c(%esi),%ebx
		mov    _0d7c62_data,%eax
		add    $0x000006,%ebx
		sar    $0x000010,%eax
		mov    %ebx,0x00002c(%esi)
		cmp    %ebx,%eax
		jge    _032ea0_jump
		mov    %eax,0x00002c(%esi)

	_032ea0_jump:
		mov    _0c24e0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032ec9_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edi
		mov    0x000069(%esi),%al
		add    %eax,%edi
		mov    _0c1ec0_data,%eax
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%edi
		sub    $0x000005,%edi
		mov    %edi,0x00002c(%eax)

	_032ec9_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%edi
		mov    (%edx),%eax
		testb  $0x000010,0x000007(%edi,%eax,1)
		je     _032ef4_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _032f17_jump

	_032ef4_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_032f17_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _032f68_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _032f68_jump
		mov    $0x00001a,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000056(%esi)
		call   _01d4a8_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032f68_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _032dea_jump
		mov    $0x00001b,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032f8d_jump:
		xor    %eax,%eax
		mov    _0c1b44_data,%dx
		mov    _0c1b84_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0d7c62_data,%bx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b48_data,%bx
		mov    _0c1b85_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0d7c64_data,%di
		mov    0x000069(%esi),%al
		add    %edi,%eax
		sub    %eax,%ebx
		movswl %dx,%eax
		mov    %eax,%edi
		imul   %eax,%edi
		movswl %bx,%edx
		imul   %edx,%edx
		test   %eax,%eax
		jge    _032fe1_jump
		neg    %eax

	_032fe1_jump:
		add    %edi,%edx
		cmp    $0x000028,%eax
		jl     _032ff0_jump
		cmp    $0x000bb8,%edx
		jae    _032ff7_jump

	_032ff0_jump:
		mov    $0x000001,%ah
		jmp    _032ff9_jump

	_032ff7_jump:
		xor    %ah,%ah

	_032ff9_jump:
		mov    0x00006c(%ecx),%al
		cmp    $0x00001a,%al
		jb     _032dea_jump
		jbe    _033015_jump
		cmp    $0x00001c,%al
		je     _0330d8_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033015_jump:
		test   %ah,%ah
		jne    _033068_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _033030_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		test   %eax,%eax
		je     _033068_jump

	_033030_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edi
		shl    $0x000002,%eax
		add    %eax,%edi
		xor    %eax,%eax
		mov    (%edi),%edi
		mov    _0c1b88_data,%al
		testb  $0x000040,0x000007(%edi,%eax,8)
		je     _03307d_jump
		movswl %bx,%eax
		test   %eax,%eax
		jge    _03305b_jump
		neg    %eax

	_03305b_jump:
		cmp    $0x00001e,%eax
		jge    _03307d_jump
		cmp    $0x000bb8,%edx
		jae    _03307d_jump

	_033068_jump:
		mov    $0x00001b,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03307d_jump:
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x00001d,%eax
		jge    _032dea_jump
		mov    _095f66_data(,%eax,2),%eax
		mov    _0d7c62_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    _0c24e0_data,%eax
		sar    $0x000010,%eax
		mov    %edx,0x00002c(%esi)
		cmp    $0xffffffff,%eax
		je     _0330cd_jump
		mov    _0c1ec0_data,%eax
		mov    0x00002c(%esi),%ebx
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    0x000069(%esi),%dl
		mov    0x000069(%eax),%cl
		add    %ebx,%edx
		sub    %ecx,%edx
		sub    $0x000005,%edx
		mov    %edx,0x00002c(%eax)

	_0330cd_jump:
		incw   0x000056(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0330d8_jump:
		test   %ah,%ah
		jne    _0330fd_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		je     _0330fd_jump
		mov    $0x00001d,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0330fd_jump:
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x00001d,%eax
		jge    _032dea_jump
		mov    _095f66_data(,%eax,2),%edx
		mov    _0d7c64_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    _0c24e0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03314c_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %eax,%edx
		mov    _0c1ec0_data,%eax
		xor    %ecx,%ecx
		mov    0x000069(%eax),%cl
		sub    %ecx,%edx
		sub    $0x000005,%edx
		mov    %edx,0x00002c(%eax)

	_03314c_jump:
		incw   0x000056(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033157_jump:
		cmp    $0x00001a,%al
		jb     _032dea_jump
		jbe    _032f8d_jump
		mov    0x00002c(%esi),%ebp
		mov    _0d7c64_data,%eax
		sub    $0x000008,%ebp
		sar    $0x000010,%eax
		mov    %ebp,0x00002c(%esi)
		cmp    %ebp,%eax
		jle    _03317d_jump
		mov    %eax,0x00002c(%esi)

	_03317d_jump:
		mov    _0c24e0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0331a6_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edi
		mov    0x000069(%esi),%al
		add    %eax,%edi
		mov    _0c1ec0_data,%eax
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%edi
		sub    $0x000005,%edi
		mov    %edi,0x00002c(%eax)

	_0331a6_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _032df1_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _032e14_jump

_0331d4_switch:
		.long   _033204_case
		.long   _0332a5_case
		.long   _033366_case
		.long   _03340a_case




_0331e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0d7c60_data,%al
		cmp    $0x000003,%al
		ja     _032dec_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0331d4_switch(,%eax,4)

	_033204_case:
		mov    _0c1ae4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032dec_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _03325f_jump
		mov    $_095fa8_data,%eax
		movw   $0x000002,0x000050(%edx)
		call   _03440c_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_092244_data(,%eax,4)
		movb   $0x000001,_0c25b1_data
		call   _03da50_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03325f_jump:
		cmp    $0x000001,%eax
		jne    _032dec_jump
		mov    0x000024(%edx),%esi
		test   %esi,%esi
		jne    _032dec_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_092244_data(,%eax,4)
		mov    0x000081(%edx),%cl
		xor    %bh,%bh
		mov    %esi,0x000024(%edx)
		and    $0x0000fb,%cl
		mov    %bh,_0c25b1_data
		mov    %cl,0x000081(%edx)
		call   _032b58_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0332a5_case:
		mov    _0c1ae6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032dec_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%ebx
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%edx
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _03331d_jump
		mov    _0c1ae8_data,%eax
		sar    $0x000010,%eax
		movw   $0x000002,0x000050(%edx)
		cmp    $0xffffffff,%eax
		je     _0332f4_jump
		mov    %eax,%ecx
		shl    $0x000005,%eax
		add    %ecx,%eax
		movw   $0x000002,0x000050(%ebx,%eax,4)

	_0332f4_jump:
		mov    $_095fad_data,%eax
		call   _03440c_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_092244_data(,%eax,4)
		movb   $0x000001,_0c25b1_data
		call   _03db04_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03331d_jump:
		cmp    $0x000001,%eax
		jne    _032dec_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _032dec_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_092244_data(,%eax,4)
		mov    0x000081(%edx),%cl
		movl   $0x000000,0x000024(%edx)
		xor    %bh,%bh
		and    $0x0000fb,%cl
		mov    %bh,_0c25b1_data
		mov    %cl,0x000081(%edx)
		call   _032b58_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033366_case:
		mov    _0c1aea_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032dec_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _0333c1_jump
		mov    $_095fb2_data,%eax
		movw   $0x000002,0x000050(%edx)
		call   _03440c_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_092244_data(,%eax,4)
		movb   $0x000001,_0c25b1_data
		call   _03dcc8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0333c1_jump:
		cmp    $0x000001,%eax
		jne    _032dec_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _032dec_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_092244_data(,%eax,4)
		mov    0x000081(%edx),%cl
		movl   $0x000000,0x000024(%edx)
		xor    %bh,%bh
		and    $0x0000fb,%cl
		mov    %bh,_0c25b1_data
		mov    %cl,0x000081(%edx)
		call   _032b58_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03340a_case:
		mov    $_095fb7_data,%eax
		call   _03440c_func
		mov    %edx,%eax
		call   _0342a0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_033420_switch:
		.long   _033455_case
		.long   _033455_case
		.long   _03345e_case
		.long   _033467_case
		.long   _03348f_case
		.long   _033470_case




_033438_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _03348f_case
		mov    0x00006c(%esi),%al
		cmp    $0x000027,%eax
		je     _033479_jump
		jmp    _03348f_case

	_033455_case:
		mov    %esi,%eax
		call   _03409c_func
		jmp    _03348f_case

	_03345e_case:
		mov    %esi,%eax
		call   _03414c_func
		jmp    _03348f_case

	_033467_case:
		mov    %esi,%eax
		call   _0341d0_func
		jmp    _03348f_case

	_033470_case:
		mov    %esi,%eax
		call   _0342a0_func
		jmp    _03348f_case

	_033479_jump:
		mov    _0c1ada_data,%al
		cmp    $0x000005,%al
		ja     _03348f_case
		and    $0x0000ff,%eax
		jmp    *%cs:_033420_switch(,%eax,4)

	_03348f_case:
		xor    %ecx,%ecx
		mov    0x00006d(%esi),%cl
		test   %ecx,%ecx
		jne    _0335e6_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000006,%eax
		jne    _0335e6_jump
		xor    %edx,%edx
		mov    0x00006b(%esi),%dl
		cmp    $0x000004,%edx
		jne    _0334bf_jump
		movw   $0x00fffc,0x000042(%esi)
		jmp    _03396d_jump

	_0334bf_jump:
		xor    %ebx,%ebx
		shl    $0x000003,%eax
		mov    _0c1ada_data,%bl
		shl    $0x000002,%ecx
		cmp    $0x000004,%ebx
		jne    _03355a_jump
		mov    0x00000c(%esi),%ebx
		mov    (%ecx,%ebx,1),%ebx
		testb  $0x000010,0x000007(%ebx,%eax,1)
		je     _0334e7_jump
		test   %edx,%edx
		jmp    _033505_jump

	_0334e7_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%esi),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%esi),%ebx
		mov    0x00000a(%ebx,%eax,4),%ax
		and    $0x00ffff,%eax
		dec    %eax
		cmp    %eax,%edx

	_033505_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _03396d_jump
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _03396d_jump
		mov    %esi,%eax
		call   _0342a0_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03355a_jump:
		mov    0x00000c(%esi),%ebx
		mov    (%ecx,%ebx,1),%ebx
		testb  $0x000010,0x000007(%ebx,%eax,1)
		je     _03356b_jump
		test   %edx,%edx
		jmp    _033589_jump

	_03356b_jump:
		xor    %ecx,%ecx
		mov    0x00006a(%esi),%cl
		lea    0x000000(,%ecx,4),%eax
		mov    0x000004(%esi),%ebx
		sub    %ecx,%eax
		mov    0x00000a(%ebx,%eax,4),%ax
		and    $0x00ffff,%eax
		dec    %eax
		cmp    %eax,%edx

	_033589_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _03396d_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _03396d_jump
		mov    0x000081(%esi),%ch
		mov    %eax,0x000024(%esi)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0335e6_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _03362b_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000008,%eax
		je     _03361d_jump
		cmp    $0x00000a,%eax
		je     _03361d_jump
		cmp    $0x00000c,%eax
		je     _03361d_jump
		cmp    $0x00000e,%eax
		je     _03361d_jump
		cmp    $0x000016,%eax
		je     _03361d_jump
		cmp    $0x000017,%eax
		je     _03361d_jump
		cmp    $0x000018,%eax
		jne    _03362b_jump

	_03361d_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000016,%eax
		je     _0337dd_jump

	_03362b_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _033920_jump
		xor    %ecx,%ecx
		mov    0x00006c(%esi),%cl
		cmp    $0x00000f,%ecx
		jne    _033920_jump
		xor    %edx,%edx
		mov    0x00006b(%esi),%dl
		test   %edx,%edx
		jne    _03389e_jump
		mov    0x00000c(%esi),%edx
		mov    (%edx,%eax,4),%eax
		mov    0x000005(%eax,%ecx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0c2498_data(%eax)
		jne    _03396d_jump
		mov    %esi,%eax
		call   _072ff8_func
		mov    0x000081(%esi),%dh
		movl   $0x000001,0x000024(%esi)
		or     $0x00000c,%dh
		mov    %dh,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033697_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		xor    %ebx,%ebx
		call   _033d68_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0336b2_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    %ecx,%ebx
		call   _033d68_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0336cd_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    $0x000002,%ebx
		call   _033d68_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0336eb_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    $0x000003,%ebx
		call   _033d68_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033709_jump:
		mov    $0x000002,%al
		mov    $0x000003,%ecx
		movswl %dx,%edi
		movswl %bx,%esi
		mov    $0x000012,%ebx
		mov    %al,_0d7c5e_data
		mov    $_095fa8_data,%eax
		mov    %edi,%edx
		call   _03440c_func
		mov    %esi,%eax
		call   _033d68_func
		mov    $0x000005,%ecx
		mov    $0x000012,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _033d68_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03374f_jump:
		mov    $0x000002,%ch
		mov    $_095fad_data,%eax
		movswl %dx,%edi
		movswl %bx,%esi
		mov    $0x000013,%ebx
		mov    %ch,_0d7c5e_data
		call   _03440c_func
		mov    %edi,%edx
		mov    $0x000001,%ecx
		mov    %esi,%eax
		call   _033d68_func
		mov    $0x000004,%ecx
		mov    $0x000013,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _033d68_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033796_jump:
		mov    $0x000002,%cl
		mov    $_095fb2_data,%eax
		movswl %dx,%esi
		movswl %bx,%edi
		mov    $0x000014,%ebx
		mov    %cl,_0d7c5e_data
		call   _03440c_func
		mov    %esi,%edx
		mov    $0x000001,%ecx
		mov    %edi,%eax
		call   _033d68_func
		mov    $0x000002,%ecx
		mov    $0x000014,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _033d68_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0337dd_jump:
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d840_func
		mov    0x000006(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		sub    $0x000060,%eax
		mov    -0x000002(%esp),%edx
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000011,%eax
		add    %edx,%eax
		sub    $0x000080,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    $0xfffffffb,%edi
		mov    %ax,_0d7c6a_data
		mov    0x00006c(%esi),%al
		mov    %di,_0d7c68_data
		cmp    $0x00000e,%al
		jb     _033872_jump
		jbe    _0336eb_jump
		cmp    $0x000017,%al
		jb     _033861_jump
		jbe    _03374f_jump
		cmp    $0x000018,%al
		je     _033796_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033861_jump:
		cmp    $0x000016,%al
		je     _033709_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033872_jump:
		cmp    $0x00000a,%al
		jb     _03388d_jump
		jbe    _0336b2_jump
		cmp    $0x00000c,%al
		je     _0336cd_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03388d_jump:
		cmp    $0x000008,%al
		je     _033697_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03389e_jump:
		cmp    $0x000016,%edx
		jne    _03396d_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d840_func
		mov    0x000006(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		xor    %ecx,%ecx
		add    %edx,%eax
		mov    %cx,_0d7c6a_data
		sub    $0x000060,%eax
		mov    -0x000002(%esp),%edx
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000011,%eax
		mov    $0x000001,%ecx
		add    %edx,%eax
		mov    $0xfffffffe,%edx
		sub    $0x000080,%eax
		mov    %dx,_0d7c68_data
		movswl %ax,%edx
		movswl %bx,%eax
		mov    $0x000004,%ebx
		call   _033d68_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033920_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _033941_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000015,%eax
		jne    _033941_jump
		mov    %esi,%eax
		call   _0331e4_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033941_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _03396d_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00001a,%eax
		je     _033966_jump
		cmp    $0x00001b,%eax
		je     _033966_jump
		cmp    $0x00001c,%eax
		je     _033966_jump
		cmp    $0x00001d,%eax
		je     _033966_jump
		cmp    $0x000028,%eax
		jne    _03396d_jump

	_033966_jump:
		mov    %esi,%eax
		call   _032c8c_func

	_03396d_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033978_func:
		push   %ebx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _0339b8_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x000010,%edx
		je     _03398f_jump
		cmp    $0x000011,%edx
		jne    _0339b8_jump

	_03398f_jump:
		xor    %edx,%edx
		mov    0x00007e(%eax),%dl
		test   %edx,%edx
		je     _0339b8_jump
		mov    0x000076(%eax),%dl
		test   %dl,%dl
		je     _0339a6_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,0x000076(%eax)

	_0339a6_jump:
		cmpb   $0x000000,0x000076(%eax)
		jne    _0339b8_jump
		mov    $0x000006,%ebx
		xor    %edx,%edx
		call   _01d4a8_func

	_0339b8_jump:
		pop    %ebx
		ret    



_0339bc_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		test   %eax,%eax
		jne    _033a1f_jump
		mov    0x00006c(%ebx),%al
		cmp    $0x000007,%eax
		jne    _0339dd_jump
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d498_func

	_0339dd_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x000009,%eax
		jne    _0339f3_jump
		mov    $0x00000a,%edx
		mov    %ebx,%eax
		call   _01d498_func

	_0339f3_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x00000b,%eax
		jne    _033a09_jump
		mov    $0x00000c,%edx
		mov    %ebx,%eax
		call   _01d498_func

	_033a09_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x00000d,%eax
		jne    _033a1f_jump
		mov    $0x00000e,%edx
		mov    %ebx,%eax
		call   _01d498_func

	_033a1f_jump:
		pop    %edx
		pop    %ebx
		ret    



_033a24_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		cmpb   $0x000000,0x000076(%eax)
		je     _033cbd_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%eax
		jne    _033a59_jump
		xor    %eax,%eax
		mov    _0c2570_data,%al
		cmp    $0x000001,%eax
		jne    _033beb_jump
		movb   $0x000000,0x000076(%esi)
		jmp    _033beb_jump

	_033a59_jump:
		cmp    $0x000004,%eax
		jne    _033b58_jump
		mov    _0c1ad2_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %ecx,%eax
		mov    _0c1b04_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _033b01_jump
		movw   $0x000000,0x000056(%esi)
		mov    0x000081(%ecx),%bh
		mov    %ecx,%eax
		and    $0x0000f7,%bh
		xor    %edx,%edx
		mov    %bh,0x000081(%ecx)
		xor    %ebx,%ebx
		movb   $0x0000fe,0x000076(%ecx)
		call   _01d4a8_func
		mov    _0c1b44_data,%ax
		movl   $0x000000,0x000028(%ecx)
		mov    %ax,0x00003c(%ecx)
		mov    _0c1b48_data,%ax
		mov    %ax,0x00003e(%ecx)
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x00002c(%ecx)
		or     $0x000004,%al
		mov    %al,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f584_func
		xor    %ah,%ah
		movb   $0x000000,0x00007e(%ecx)
		mov    %ah,_0c1ad0_data
		mov    %ah,_0c1ace_data
		mov    %ah,_0c1acf_data

	_033b01_jump:
		movzbw 0x000068(%ecx),%di
		add    0x00003c(%ecx),%di
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    0x00003e(%ecx),%bx
		mov    0x000069(%ecx),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1ad0_data,%al
		cmp    $0x000001,%eax
		jne    _033beb_jump
		xor    %eax,%eax
		mov    _0c1acf_data,%al
		cmp    $0x000019,%eax
		jne    _033beb_jump
		movb   $0x000000,0x000076(%esi)
		jmp    _033beb_jump

	_033b58_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%di
		mov    0x000068(%esi),%al
		add    %eax,%edi
		xor    %eax,%eax
		mov    _0c1b44_data,%dx
		mov    _0c1b84_data,%al
		add    %edx,%eax
		sub    %edi,%eax
		mov    %eax,%edi
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		movw   $0x000000,0x000056(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _033bc0_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b48_data,%cx
		mov    _0c1b85_data,%al
		add    %ecx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		jmp    _033beb_jump

	_033bc0_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0c1b85_data,%dl
		mov    _0c1b90_data,%al
		sub    %eax,%edx
		mov    _0c1b48_data,%ebx
		sar    %edx
		add    %ebx,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		sub    %eax,%edx
		mov    %edx,%ebx

	_033beb_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _033bf4_jump
		neg    %eax

	_033bf4_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _033bff_jump
		neg    %eax

	_033bff_jump:
		add    %edx,%eax
		movswl %ax,%ebp
		test   %ebp,%ebp
		jle    _033c28_jump
		mov    $0x000004,%cl
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000004,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_033c28_jump:
		xor    %eax,%eax
		mov    _0c249a_data,%al
		test   %eax,%eax
		jne    _033cbd_jump
		mov    _0d7c66_data,%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _033c54_jump
		mov    $0x000001,%eax
		jg     _033c54_jump
		neg    %eax

	_033c54_jump:
		mov    _0d7c68_data,%di
		add    %eax,%edi
		mov    _0d7c68_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    %di,_0d7c68_data
		cmp    $0x000000,%eax
		je     _033c81_jump
		mov    $0x000001,%eax
		jg     _033c81_jump
		neg    %eax

	_033c81_jump:
		add    %ax,_0d7c6a_data
		xor    %ebx,%ebx
		mov    _0d7c6a_data,%di
		mov    0x00002c(%esi),%dx
		mov    0x000054(%esi),%ecx
		add    %edi,%edx
		mov    _0d7c68_data,%ax
		movswl %dx,%ebp
		mov    0x000028(%esi),%dx
		mov    0x00006c(%esi),%bl
		add    %eax,%edx
		sar    $0x000010,%ecx
		movswl %dx,%eax
		mov    %ebp,%edx
		call   _033d68_func
		movb   $0x000000,0x000076(%esi)

	_033cbd_jump:
		pop    %ebp
		pop    %edi
		pop    %esi

	_033cc0_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_033cc4_switch:
		.long   _033d06_case
		.long   _033d24_case
		.long   _033d3e_case
		.long   _033d51_case




_033cd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x000076(%eax)
		je     _033cc0_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _033cee_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x000004,%edx
		je     _033cc0_jump

	_033cee_jump:
		movb   $0x000000,0x000076(%eax)
		mov    0x00006c(%eax),%al
		cmp    $0x000003,%al
		ja     _033cc0_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_033cc4_switch(,%eax,4)

	_033d06_case:
		mov    _0c32e5_data,%bh
		and    $0x0000e7,%bh
		mov    %bh,%cl
		mov    %bh,_0c32e5_data
		or     $0x000008,%cl
		mov    %cl,_0c32e5_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033d24_case:
		mov    $_0c1b1c_data,%eax
		call   _072f20_func
		andb   $0x00009f,_0c32e5_data
		call   _052988_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033d3e_case:
		mov    $_0c1b1c_data,%eax
		call   _072f20_func
		call   _052a3c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_033d51_case:
		mov    $_0c1b1c_data,%eax
		call   _072f20_func
		andb   $0x0000fe,_0c32e4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033d68_func:
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %ax,(%esp)
		mov    %dx,0x000004(%esp)
		mov    %bx,0x000010(%esp)
		mov    %ecx,0x000008(%esp)
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%dx
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %edi,%edi

	_033d92_jump:
		xor    %esi,%esi
		mov    0x000060(%ecx),%si
		cmp    $0x0000d7,%esi
		jne    _033daa_jump
		cmp    0x000024(%ecx),%edi
		jne    _033daa_jump
		mov    $0x000001,%ebx

	_033daa_jump:
		movswl %bx,%esi
		add    $0x000084,%ecx
		inc    %eax
		test   %esi,%esi
		jne    _033dbd_jump
		cmp    %dx,%ax
		jl     _033d92_jump

	_033dbd_jump:
		sub    $0x000084,%ecx
		test   %bx,%bx
		je     _033e06_jump
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f584_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    0x000002(%esp),%eax
		movb   $0x000001,0x000076(%ecx)
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%esp),%eax
		mov    0x000010(%esp),%bl
		jmp    _033e9a_jump

	_033e06_jump:
		mov    _0c1b04_data,%eax
		mov    %bx,0x00000c(%esp)
		xor    %ecx,%ecx

	_033e12_jump:
		xor    %esi,%esi
		mov    0x000060(%eax),%si
		cmp    $0x0000d7,%esi
		jne    _033e35_jump
		movswl %cx,%esi
		movzbl 0x00006b(%eax),%edi
		cmp    %esi,%edi
		jle    _033e35_jump
		xor    %ecx,%ecx
		mov    %bx,0x00000c(%esp)
		mov    0x00006b(%eax),%cl

	_033e35_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %dx,%bx
		jl     _033e12_jump
		mov    0x00000a(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0c1b04_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f584_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    0x000002(%esp),%eax
		movb   $0x000001,0x000076(%ecx)
		sar    $0x000010,%eax
		mov    0x000010(%esp),%bl
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%esp),%eax
		xor    %edx,%edx

	_033e9a_jump:
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d4a8_func
		movb   $0x000000,0x00006b(%ecx)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		ret    



_033eb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    _0c32e5_data,%ah
		test   $0x000018,%ah
		jne    _033ed2_jump
		test   $0x000060,%ah
		jne    _033ed2_jump
		test   $0x000002,%ah
		je     _033f24_jump

	_033ed2_jump:
		mov    $_0c1b1c_data,%eax
		call   _072f20_func
		mov    _0c32e5_data,%cl
		test   $0x000018,%cl
		je     _033ef2_jump
		mov    %cl,%ch
		or     $0x000018,%ch
		mov    %ch,_0c32e5_data

	_033ef2_jump:
		testb  $0x000060,_0c32e5_data
		je     _033f00_jump
		call   _052988_func

	_033f00_jump:
		testb  $0x000002,_0c32e5_data
		je     _033f0e_jump
		call   _052a3c_func

	_033f0e_jump:
		mov    0x000081(%edx),%bl
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%edx)

	_033f24_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033f28_func:
		push   %edx
		mov    _0c1ad4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _033f6f_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    _0d7c60_data,%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%eax)
		mov    0x000028(%eax),%dx
		mov    %dx,0x00003c(%eax)
		mov    _0d7c62_data,%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%eax)
		mov    0x00002c(%eax),%dx
		mov    %dx,0x00003e(%eax)

	_033f6f_jump:
		pop    %edx
		ret    



_033f74_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%dl
		mov    _0c1ad4_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _034022_jump
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0c1b04_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		mov    _0d7c60_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0d7c64_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		test   %dl,%dl
		je     _034022_jump
		mov    $0x000040,%ebx
		mov    $0x000005,%edx
		mov    _0c1ec0_data,%eax
		call   _01d4a8_func
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%bl
		mov    _0c1ec0_data,%eax
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,0x000028(%eax)
		mov    0x000069(%ecx),%dl
		mov    0x00002c(%ecx),%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%ebx
		lea    -0x000005(%ebx),%edx
		mov    0x000024(%eax),%ebx
		mov    %edx,0x00002c(%eax)
		test   %ebx,%ebx
		jne    _034007_jump
		call   _01f584_func

	_034007_jump:
		mov    _0c1ec0_data,%eax
		mov    0x000081(%eax),%dl
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%dl
		mov    %dl,0x000081(%eax)

	_034022_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034028_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x00002c(%eax),%ax
		mov    %ax,_0d7c64_data
		mov    _0c247e_data,%ax
		sub    $0x0000b8,%eax
		mov    %ax,_0d7c66_data
		mov    _0c1ad4_data,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    %bx,_0d7c62_data
		cmp    $0xffffffff,%eax
		je     _034095_jump
		mov    %eax,%ebx
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%al
		mov    0x00002c(%edx),%cx
		mov    %eax,%edx
		add    %ecx,%edx
		xor    %eax,%eax
		sub    $0x0000b8,%edx
		mov    0x000069(%ebx),%al
		sub    %eax,%edx
		add    $0x000024,%edx
		mov    %dx,_0d7c66_data

	_034095_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03409c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movb   $0x000001,_0c1ada_data
		mov    _0c247e_data,%ax
		mov    %ax,_0c25a0_data
		mov    %ax,_0c259e_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000060(%ecx),%ax
		mov    %dx,_0c259c_data
		mov    %dx,_0c259a_data
		mov    _092244_data(,%eax,4),%dl
		and    $0x00007f,%dl
		xor    %ebx,%ebx
		mov    %dl,_092244_data(,%eax,4)
		mov    %ecx,%eax
		mov    %bx,0x000050(%ecx)
		mov    _0c32e4_data,%bl
		xor    %dh,%dh
		and    $0x0000fe,%bl
		mov    %dh,_0c25b1_data
		mov    %bl,_0c32e4_data
		call   _032b20_func
		mov    %ecx,%eax
		call   _034028_func
		mov    _0c1ad4_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _034135_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		movw   $0x000003,0x000050(%edx,%eax,4)
		movw   $0x00001d,0x000056(%edx,%eax,4)

	_034135_jump:
		call   _033f28_func
		mov    $0x00001a,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03414c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		movb   $0x000002,_0c1ada_data
		mov    _0c247e_data,%ax
		mov    %ax,_0c25a0_data
		mov    %ax,_0c259e_data
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000060(%edx),%ax
		mov    %bx,_0c259c_data
		mov    %bx,_0c259a_data
		andb   $0x00007f,_092244_data(,%eax,4)
		xor    %bh,%bh
		mov    %edx,%eax
		mov    %bh,_0c25b1_data
		call   _032b20_func
		mov    %edx,%eax
		call   _034028_func
		mov    $0x000001,%eax
		call   _033f74_func
		movl   $0x000001,0x000024(%edx)
		mov    0x000081(%edx),%cl
		movw   $0x000000,0x000050(%edx)
		or     $0x000004,%cl
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _03ee04_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0341d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movb   $0x000003,_0c1ada_data
		mov    _0c247e_data,%ax
		mov    %ax,_0c25a0_data
		mov    %ax,_0c259e_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000060(%ecx),%ax
		mov    %dx,_0c259c_data
		mov    %dx,_0c259a_data
		andb   $0x00007f,_092244_data(,%eax,4)
		xor    %dh,%dh
		mov    %ecx,%eax
		mov    %dh,_0c25b1_data
		call   _032b20_func
		mov    %ecx,%eax
		call   _034028_func
		xor    %eax,%eax
		call   _033f74_func
		movl   $0x000000,0x000028(%ecx)
		xor    %ebx,%ebx
		movl   $0x000001,0x000024(%ecx)
		mov    %bx,0x000040(%ecx)
		mov    %bx,0x000042(%ecx)
		mov    _0c247c_data,%edx
		mov    0x000028(%ecx),%ax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%ecx)
		xor    %eax,%eax
		mov    0x000081(%ecx),%bl
		mov    0x000069(%ecx),%al
		or     $0x000004,%bl
		sub    %eax,%edx
		mov    %bl,0x000081(%ecx)
		sub    $0x000014,%edx
		mov    %edx,0x00002c(%ecx)
		mov    $0x000015,%ebx
		mov    0x00002c(%ecx),%ax
		xor    %edx,%edx
		mov    %ax,0x00003e(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d4a8_func
		xor    %bh,%bh
		mov    _095fa4_data,%al
		mov    %bh,_0d7c5f_data
		mov    %al,_0d7c60_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0342a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		movb   $0x000005,_0c1ada_data
		mov    _0c247e_data,%ax
		mov    %ax,_0c25a0_data
		mov    %ax,_0c259e_data
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000060(%edx),%ax
		mov    %bx,_0c259c_data
		mov    %bx,_0c259a_data
		andb   $0x00007f,_092244_data(,%eax,4)
		xor    %bh,%bh
		mov    %edx,%eax
		mov    %bh,_0c25b1_data
		call   _032b20_func
		mov    %edx,%eax
		call   _034028_func
		xor    %eax,%eax
		call   _033f74_func
		testb  $0x000002,_0c32e5_data
		je     _034313_jump
		mov    $_0c1b1c_data,%eax
		call   _072f20_func
		call   _052a3c_func

	_034313_jump:
		movl   $0x000000,0x000028(%edx)
		mov    $0xffffffc4,%esi
		movw   $0x000000,0x000050(%edx)
		mov    _0c247c_data,%ebx
		mov    0x000028(%edx),%ax
		mov    0x000081(%edx),%ch
		mov    %ax,0x00003c(%edx)
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000069(%edx),%al
		movl   $0x000000,0x000024(%edx)
		sub    %eax,%ebx
		xor    %edi,%edi
		sub    $0x000014,%ebx
		and    $0x0000fb,%ch
		mov    %ebx,0x00002c(%edx)
		mov    %si,_0c1adc_data
		mov    0x00002c(%edx),%ax
		mov    %di,_0c1ade_data
		mov    %ax,0x00003e(%edx)
		mov    $0x000001,%al
		mov    %di,_0c1ae0_data
		mov    %al,_0c2570_data
		mov    _0c32ec_data,%ah
		mov    %di,_0c1ae2_data
		or     $0x000080,%ah
		mov    %ch,0x000081(%edx)
		mov    %ah,_0c32ec_data
		mov    %al,_0c1ae4_data
		pop    %edi

	_03439b_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0343a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000050(%eax),%al
		xor    %ebx,%ebx
		mov    %al,%bl
		cmp    $0x000005,%ebx
		jge    _034403_jump
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		xor    %ebx,%ebx
		mov    _0d7c33_data(%eax),%bl
		test   %ebx,%ebx
		je     _034403_jump
		movb   $0x000004,0x00007e(%edx)
		decw   _0d7c34_data(%eax)
		mov    _0d7c32_data(%eax),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jne    _034407_jump
		mov    _0d7c33_data(%eax),%bl
		mov    $0x000064,%ecx
		dec    %bl
		mov    %cx,_0d7c34_data(%eax)
		mov    %bl,_0d7c33_data(%eax)
		mov    %bl,%al
		and    $0x0000ff,%eax
		jne    _034407_jump

	_034403_jump:
		movb   $0x000000,0x00007e(%edx)

	_034407_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03440c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		xor    %bl,%bl
		jmp    _034418_jump

	_034416_jump:
		inc    %bl

	_034418_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		cmp    $0x000005,%edx
		jge    _03439b_jump
		imul   $0x00000a,%edx,%eax
		xor    %ecx,%ecx
		mov    _0d7c33_data(%eax),%cl
		test   %ecx,%ecx
		jne    _034416_jump
		mov    (%edx,%esi,1),%dl
		mov    %dl,_0d7c33_data(%eax)
		movw   $0x000064,_0d7c34_data(%eax)
		mov    _0d7c30_data(%eax),%al
		and    $0x0000ff,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%edx
		movb   $0x000000,0x00006b(%edx,%eax,1)
		jmp    _034416_jump

	_034470_jump:
		call   _04c6f4_func
		call   _01a9c0_func
		call   _040e8c_func
		mov    $_0c1b1c_data,%eax
		call   _018890_func
		mov    $_0c1b1c_data,%eax
		call   _04dbe4_func
		call   _0369e4_func
		call   _040c80_func
		test   %ax,%ax
		jne    _0344c0_jump
		call   _040ce8_func
		test   %ax,%ax
		jne    _0344c0_jump
		call   _040d50_func
		test   %ax,%ax
		jne    _0344c0_jump
		call   _040db8_func
		test   %ax,%ax
		je     _0344c7_jump

	_0344c0_jump:
		movb   $0x000001,_0cd0d5_data

	_0344c7_jump:
		call   *_0cd0e4_data
		xor    %eax,%eax
		mov    _0cd0d5_data,%al
		ret    



_0344d8_func:
		push   %edx
		call   _01a9c0_func
		call   _036618_func
		call   _01b4dc_func
		call   _062bb8_func
		call   _040e8c_func
		mov    _0c4584_data,%eax
		sar    $0x000010,%eax
		xor    %dl,%dl
		cmp    $0xffffffff,%eax
		je     _03450a_jump
		cmpb   $0x000000,_0c458a_data
		je     _03450c_jump

	_03450a_jump:
		mov    $0x000001,%dl

	_03450c_jump:
		xor    %eax,%eax
		mov    %dl,%al
		pop    %edx
		ret    



_034598_func:
		push   %edx
		push   %esi
		push   %edi
		call   _040e8c_func
		call   _062224_func
		call   _040e8c_func
		call   _0347f4_func
		mov    _0cd080_data,%edi
		sar    $0x000010,%edi
		cmp    $0x000003,%edi
		jne    _0345c6_jump
		movw   $0x000001,_0cd0b8_data

	_0345c6_jump:
		cmpw   $0x000000,_0cd0bc_data
		jne    _0345d9_jump
		cmpb   $0x000000,_0cd745_data
		je     _0345e0_jump

	_0345d9_jump:
		mov    $0x000001,%edx
		jmp    _0345e2_jump

	_0345e0_jump:
		xor    %edx,%edx

	_0345e2_jump:
		cmpb   $0x000000,_0cd745_data
		je     _034643_jump
		mov    _0cd080_data,%edi
		sar    $0x000010,%edi
		cmp    $0x000001,%edi
		jne    _03460f_jump
		mov    _0cd08c_data,%edi
		sar    $0x000010,%edi
		shl    $0x000002,%edi
		sub    $0x000004,%edi
		mov    $_0cd06c_data,%esi
		jmp    _034623_jump

	_03460f_jump:
		mov    _0cd08c_data,%edi
		sar    $0x000010,%edi
		shl    $0x000002,%edi
		sub    $0x000004,%edi
		mov    $_0c01a8_data,%esi

	_034623_jump:
		add    $_0cd060_data,%edi
		push   %edi

	_03462a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034642_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03462a_jump

	_034642_jump:
		pop    %edi

	_034643_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_03464c_func:
		push   %edx
		call   _040e8c_func
		call   _01ccfc_func
		call   _061e28_func
		call   _0347f4_func
		call   _040e8c_func
		call   _062104_func
		call   _062598_func
		mov    _0cd080_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _034687_jump
		cmpw   $0x000000,_0cd08e_data
		jne    _0346a8_jump

	_034687_jump:
		mov    _0cd080_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _0346d6_jump
		cmpw   $0x000000,_0cd092_data
		jne    _0346d6_jump
		cmpw   $0x000000,_0cd08e_data
		je     _0346d6_jump

	_0346a8_jump:
		cmpw   $0x000000,_0cd0bc_data
		jne    _0346c1_jump
		call   _0621b4_func
		mov    $_034598_func,%eax
		call   _03c090_func

	_0346c1_jump:
		cmpb   $0x000000,_0cd745_data
		jne    _0346d6_jump
		xor    %eax,%eax
		mov    _0cd08e_data,%al
		call   _06cdd8_func

	_0346d6_jump:
		call   _040c80_func
		test   %ax,%ax
		jne    _0346fe_jump
		call   _040ce8_func
		test   %ax,%ax
		jne    _0346fe_jump
		call   _040d50_func
		test   %ax,%ax
		jne    _0346fe_jump
		call   _040db8_func
		test   %ax,%ax
		je     _034705_jump

	_0346fe_jump:
		call   _040e8c_func
		jmp    _0346d6_jump

	_034705_jump:
		cmpw   $0x000000,_0cd0aa_data
		je     _034714_jump
		call   _061dd4_func

	_034714_jump:
		xor    %eax,%eax
		mov    _0cdaf4_data,%edx
		mov    %ax,_0cd082_data
		xor    %eax,%eax
		inc    %edx
		mov    _0cdaf2_data,%ax
		mov    %edx,_0cdaf4_data
		cmp    %edx,%eax
		jg     _03474d_jump
		cmpw   $0x000000,_0cd0b8_data
		jne    _03474d_jump
		cmpb   $0x000000,_0c2565_data
		jne    _03474d_jump
		call   _035a7c_func

	_03474d_jump:
		cmpb   $0x000000,_0c2565_data
		jne    _034772_jump
		cmpw   $0x000000,_0cd0b8_data
		jne    _034772_jump
		cmpb   $0x000000,_0cdae8_data
		jne    _034772_jump
		cmpb   $0x000000,_0cd745_data
		je     _034779_jump

	_034772_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_034779_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_0347f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    _0cd094_data,%ax
		mov    _0cd096_data,%bx
		mov    $0x00001e,%edx
		cmp    %bx,%ax
		jge    _034828_jump
		xor    %eax,%eax
		mov    _0c24d3_data,%al
		test   %eax,%eax
		jne    _034828_jump
		incw   _0cd094_data
		jmp    _03484b_jump

	_034828_jump:
		xor    %eax,%eax
		mov    _0c24d3_data,%al
		test   %eax,%eax
		jne    _034842_jump
		mov    _0cd0ac_data,%ax
		inc    %eax
		mov    %ax,_0cd094_data
		jmp    _03484b_jump

	_034842_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cd094_data

	_03484b_jump:
		mov    _0cd0b6_data,%di
		cmp    %di,%dx
		jle    _034863_jump
		mov    %edi,%edx
		inc    %edx
		mov    %dx,_0cd0b6_data
		jmp    _03486b_jump

	_034863_jump:
		xor    %eax,%eax
		mov    %ax,_0cd0b6_data

	_03486b_jump:
		call   _03c324_func
		push   $0x000000
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cd06e_data,%ebx
		mov    _0cd8d0_data,%eax
		sar    $0x000010,%ebx
		call   _01a168_func
		xor    %eax,%eax
		mov    _0cd74c_data,%al
		test   %eax,%eax
		je     _0348fd_jump
		push   $0x000005
		mov    _0cd074_data,%ax
		mov    $0x000002,%ecx
		sub    $0x000005,%eax
		mov    $0x00001e,%edx
		movswl %ax,%ebx
		mov    _0cd8d4_data,%eax
		call   _01a168_func
		push   $0x000005
		mov    _0cd074_data,%ax
		mov    $0x000002,%ecx
		sub    $0x000005,%eax
		mov    $0x00007d,%edx
		movswl %ax,%ebx
		mov    _0cd8d8_data,%eax
		call   _01a168_func
		push   $0x000005
		mov    _0cd074_data,%ax
		mov    $0x000002,%ecx
		sub    $0x000005,%eax
		mov    $0x0000df,%edx
		movswl %ax,%ebx
		mov    _0cd8dc_data,%eax
		jmp    _034955_jump

	_0348fd_jump:
		push   $0x000005
		mov    $0x000001,%ecx
		mov    $0x00001e,%edx
		mov    _0cd072_data,%ebx
		mov    _0cd8d4_data,%eax
		sar    $0x000010,%ebx
		call   _01a168_func
		push   $0x000005
		mov    $0x000001,%ecx
		mov    $0x00007d,%edx
		mov    _0cd072_data,%ebx
		mov    _0cd8d8_data,%eax
		sar    $0x000010,%ebx
		call   _01a168_func
		push   $0x000005
		mov    $0x000001,%ecx
		mov    $0x0000df,%edx
		mov    _0cd072_data,%ebx
		mov    _0cd8dc_data,%eax
		sar    $0x000010,%ebx

	_034955_jump:
		call   _01a168_func
		xor    %ebx,%ebx
		mov    $0x000001,%ebp
		mov    %bx,0x000008(%esp)
		jmp    _034c71_jump

	_03496b_jump:
		cmp    $0x000020,%cl
		jne    _03498b_jump
		push   $0x000002
		movswl %dx,%eax
		mov    %ebp,%ecx
		movswl %bx,%edx
		mov    %eax,%ebx
		mov    $_0c01ad_data,%eax
		call   _01a168_func
		jmp    _034af3_jump

	_03498b_jump:
		movswl %dx,%edx
		movswl %bx,%esi
		xor    %ecx,%ecx
		lea    -0x000001(%eax),%ebx
		mov    _0cd05a_data,%cl
		mov    %esp,%eax
		push   %ecx
		mov    %ebp,%ecx
		add    %ebx,%eax
		mov    %edx,%ebx
		mov    %esi,%edx
		call   _01a168_func
		jmp    _034af3_jump

	_0349b1_jump:
		mov    %esp,%edi
		mov    %edx,%esi
		push   %edi

	_0349b6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0349ce_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0349b6_jump

	_0349ce_jump:
		pop    %edi
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		xor    %dl,%dl
		mov    %dl,(%esp,%eax,1)
		mov    _0ccfd8_data,%eax
		mov    $0x001000,%esi
		sar    $0x000010,%eax
		mov    %si,_0ccfd6_data
		cmp    $0x000200,%eax
		jl     _0349ff_jump
		xor    %edi,%edi
		mov    %di,_0ccfda_data

	_0349ff_jump:
		mov    _0ccfda_data,%ax
		inc    %ah
		cwtl   
		call   _0557d0_func
		cwtl   
		sar    $0x000007,%eax
		add    $0x000006,%eax
		mov    %eax,%edx
		mov    _0ccfd8_data,%eax
		sar    $0x000010,%eax
		call   _0557d0_func
		shl    $0x000003,%eax
		mov    %ax,_0ccfd8_data
		mov    _0ccfda_data,%ax
		add    %edx,%eax
		mov    _0cd07c_data,%cx
		mov    %ax,_0ccfda_data
		mov    0x000004(%esp),%eax
		imul   %ecx,%eax
		mov    _0cd07e_data,%dx
		mov    0x000008(%esp),%esi
		add    $0x000017,%edx
		imul   %esi,%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%ebx
		mov    _0cd072_data,%cx
		mov    _0cd0a6_data,%di
		add    %ecx,%edx
		mov    -0x000001(%esp,%ebx,1),%cl
		add    %edi,%eax
		cmp    $0x00007e,%cl
		jne    _034ab2_jump
		mov    _0ccfd6_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		mov    _0ccfd4_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		mov    _0ccfd2_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		sub    $0x00000a,%eax
		mov    %ebp,%ecx
		push   $0x000002
		movswl %dx,%ebx
		movswl %ax,%edx
		mov    $_0c01ae_data,%eax
		call   _01a3cc_func
		jmp    _034af3_jump

	_034ab2_jump:
		mov    _0ccfd6_data,%ecx
		sar    $0x000010,%ecx
		inc    %edx
		push   %ecx
		mov    _0ccfd4_data,%ecx
		inc    %eax
		sar    $0x000010,%ecx
		movswl %dx,%esi
		push   %ecx
		mov    _0ccfd2_data,%ecx
		movswl %ax,%edx
		sar    $0x000010,%ecx
		lea    -0x000001(%ebx),%eax
		push   %ecx
		xor    %ecx,%ecx
		lea    0x00000c(%esp),%ebx
		mov    _0cd05a_data,%cl
		add    %ebx,%eax
		push   %ecx
		mov    %esi,%ebx
		mov    %ebp,%ecx
		call   _01a3cc_func

	_034af3_jump:
		mov    0x000004(%esp),%esi
		mov    0x00000c(%esp),%edi
		inc    %esi
		inc    %edi
		mov    %esi,0x000004(%esp)
		mov    %di,0x00000c(%esp)

	_034b06_jump:
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%edx
		add    $_0cd060_data,%edx
		mov    %edx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		ja     _034c0b_jump
		mov    0x00000c(%esp),%edi
		cmp    _0cd084_data,%di
		jne    _034b5d_jump
		mov    _0cd084_data,%eax
		inc    %ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jne    _034b5d_jump
		cmpw   $0x000000,_0cd0b4_data
		jne    _0349b1_jump

	_034b5d_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    $_0cd060_data,%esi
		shl    $0x000002,%eax
		mov    %esp,%edi
		add    %eax,%esi
		mov    0x000004(%esp),%ebx
		push   %edi

	_034b75_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034b8d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _034b75_jump

	_034b8d_jump:
		pop    %edi
		imul   _0cd07c_data,%bx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		xor    %dl,%dl
		mov    %dl,(%esp,%eax,1)
		mov    _0cd07e_data,%dx
		mov    0x000008(%esp),%esi
		add    $0x000017,%edx
		imul   %esi,%edx
		mov    _0cd072_data,%cx
		mov    _0cd0a6_data,%di
		add    %ecx,%edx
		mov    -0x000001(%esp,%eax,1),%cl
		add    %edi,%ebx
		cmp    $0x00007e,%cl
		jne    _03496b_jump
		mov    _0ccfd6_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0ccfd4_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0ccfd2_data,%eax
		sar    $0x000010,%eax
		push   %eax
		sub    $0x00000a,%ebx
		mov    %ebp,%ecx
		push   $0x000002
		movswl %dx,%eax
		movswl %bx,%edx
		mov    %eax,%ebx
		mov    $_0c01aa_data,%eax
		call   _01a3cc_func
		jmp    _034af3_jump

	_034c0b_jump:
		mov    _0cd07c_data,%ax
		add    $0x00000b,%eax
		imul   $0x000003,%eax,%eax
		add    _0cd0a6_data,%ax
		sub    $0x00001e,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01adb4_func
		jmp    _034c6c_jump

	_034c2d_jump:
		movb   $0x000001,_0ccfe4_data
		mov    _0cd07e_data,%ax
		mov    0x000008(%esp),%edi
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000002
		mov    _0cd072_data,%dx
		mov    $0x000001,%ecx
		add    %edx,%eax
		mov    _0cd0a4_data,%edx
		movswl %ax,%ebx
		mov    _0cd9bc_data,%eax
		sar    $0x000010,%edx
		call   _01a168_func

	_034c6c_jump:
		incw   0x000008(%esp)

	_034c71_jump:
		xor    %edx,%edx
		mov    0x000006(%esp),%eax
		mov    _0cd0d2_data,%dl
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _034caf_jump
		shl    $0x000002,%eax
		mov    $_0c01a9_data,%edx
		add    $_0cd060_data,%eax
		call   _077fc0_func
		test   %eax,%eax
		je     _034c2d_jump
		mov    $0x000001,%ebx
		xor    %ecx,%ecx
		mov    %bx,0x00000c(%esp)
		mov    %ecx,0x000004(%esp)
		jmp    _034b06_jump

	_034caf_jump:
		call   _01b0fc_func
		mov    _0cd080_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _034ccb_jump
		cmpw   $0x000000,_0cd08e_data
		jne    _034ce2_jump

	_034ccb_jump:
		mov    _0cd080_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _034d15_jump
		cmpw   $0x000000,_0cd08e_data
		je     _034d15_jump

	_034ce2_jump:
		push   $0x000000
		mov    $0x000002,%ecx
		mov    $0x000099,%ebx
		mov    $0x0000a0,%edx
		mov    _0cd9dc_data,%eax
		call   _01a168_func
		push   $0x000000
		mov    $0x000002,%ecx
		mov    $0x0000a8,%ebx
		mov    $0x0000a0,%edx
		mov    _0cd9ec_data,%eax
		jmp    _034d2b_jump

	_034d15_jump:
		push   $0x000000
		mov    $0x000002,%ecx
		mov    $0x0000a8,%ebx
		mov    $0x0000a0,%edx
		mov    _0cd9f4_data,%eax

	_034d2b_jump:
		call   _01a168_func
		push   $0x000000
		mov    $0x000002,%ecx
		mov    $0x0000b7,%ebx
		mov    $0x0000a0,%edx
		mov    _0cd9e4_data,%eax
		call   _01a168_func

	_034d4b_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034fc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		call   _060b20_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _016349_func
		xor    %eax,%eax
		mov    _0ce4ac_data,%al
		cmp    $0x000001,%eax
		je     _0350c5_jump
		cmpb   $0x000000,_0c33ce_data
		je     _035026_jump
		mov    _0c349e_data,%ebx
		mov    _0c349c_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0c34a5_data,%al
		mov    _0c34a2_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0c33ce_data,%eax
		call   _01a168_func

	_035026_jump:
		cmpb   $0x000000,_0c32f6_data
		je     _03505b_jump
		mov    _0c33c6_data,%ebx
		mov    _0c33c4_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0c33cd_data,%al
		mov    _0c33ca_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0c32f6_data,%eax
		call   _01a168_func

	_03505b_jump:
		cmpb   $0x000000,_0c357e_data
		je     _035090_jump
		mov    _0c364e_data,%ebx
		mov    _0c364c_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0c3655_data,%al
		mov    _0c3652_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0c357e_data,%eax
		call   _01a168_func

	_035090_jump:
		cmpb   $0x000000,_0c34a6_data
		je     _0350c5_jump
		mov    _0c3576_data,%ebx
		mov    _0c3574_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0c357d_data,%al
		mov    _0c357a_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0c34a6_data,%eax
		call   _01a168_func

	_0350c5_jump:
		cmpb   $0x000000,_0ce4ac_data
		je     _034d4b_jump
		mov    _0cdf94_data,%edx
		xor    %ebp,%ebp
		test   %edx,%edx
		jle    _0351a5_jump
		mov    %ebp,(%esp)

	_0350e5_jump:
		mov    _0ce4b0_data(%ebp),%cl
		cmp    $0x00002f,%cl
		je     _0350f5_jump
		cmp    $0x000020,%cl
		jne    _0350f9_jump

	_0350f5_jump:
		xor    %al,%al
		jmp    _035102_jump

	_0350f9_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _01eda4_func

	_035102_jump:
		test   %al,%al
		je     _03518d_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    _0ce4a4_data,%al
		call   _01ec84_func
		add    $0x000029,%ebx
		mov    %eax,%edx
		imul   $0x00000c,%ebx,%eax
		mov    _0c2468_data,%ebx
		add    %ebx,%eax
		mov    (%esp),%ebx
		xor    %ecx,%ecx
		mov    _0ce064_data(%ebx),%ebx
		mov    0x000006(%eax),%cl
		sar    $0x000004,%ebx
		sub    %ecx,%ebx
		movswl %bx,%ebx
		mov    %ebx,0x000004(%esp)
		mov    (%esp),%ebx
		mov    _0cdf9c_data(%ebx),%ebx
		sar    $0x000004,%ebx
		movswl %bx,%ebx
		mov    %ebx,0x00000c(%esp)
		xor    %bh,%bh
		mov    %cl,%bl
		mov    _0ccfd0_data,%edi
		shl    $0x000008,%ebx
		xor    %ecx,%ecx
		add    %ebx,%edx
		mov    _0c246c_data,%esi
		mov    %dx,%cx
		mov    (%eax),%edx
		mov    0x000004(%esp),%ebx
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x00000c(%esp),%eax
		mov    _0ce49c_data,%dl
		call   *_0cdf28_data

	_03518d_jump:
		mov    (%esp),%ebx
		mov    _0cdf94_data,%ecx
		add    $0x000004,%ebx
		inc    %ebp
		mov    %ebx,(%esp)
		cmp    %ecx,%ebp
		jl     _0350e5_jump

	_0351a5_jump:
		mov    _0cdf98_data,%esi
		xor    %ebp,%ebp
		test   %esi,%esi
		jle    _034d4b_jump
		mov    %ebp,0x000008(%esp)

	_0351b9_jump:
		mov    _0ce4d0_data(%ebp),%al
		cmp    $0x00002f,%al
		je     _0351c7_jump
		cmp    $0x000020,%al
		jne    _0351cb_jump

	_0351c7_jump:
		xor    %bl,%bl
		jmp    _0351da_jump

	_0351cb_jump:
		xor    %eax,%eax
		mov    _0ce4d0_data(%ebp),%al
		call   _01eda4_func
		mov    %al,%bl

	_0351da_jump:
		test   %bl,%bl
		je     _03526b_jump
		xor    %eax,%eax
		and    $0x0000ff,%ebx
		mov    _0ce4a8_data,%al
		mov    %ebx,%edx
		call   _01ec84_func
		mov    %eax,%edx
		imul   $0x00000c,%ebx,%eax
		mov    0x000008(%esp),%ecx
		mov    _0c245c_data,%ebx
		mov    _0ce1f4_data(%ecx),%ecx
		add    %ebx,%eax
		xor    %ebx,%ebx
		sar    $0x000004,%ecx
		mov    0x000006(%eax),%bl
		sub    %ebx,%ecx
		movswl %cx,%ebx
		mov    %ebx,0x00000c(%esp)
		mov    0x000008(%esp),%ebx
		mov    _0ce12c_data(%ebx),%ebx
		sar    $0x000004,%ebx
		movswl %bx,%ecx
		xor    %bh,%bh
		mov    0x000006(%eax),%bl
		shl    $0x000008,%ebx
		xor    %edi,%edi
		add    %ebx,%edx
		mov    _0c2460_data,%esi
		mov    %dx,%di
		mov    _0ccfd0_data,%edx
		mov    0x00000c(%esp),%ebx
		mov    %edx,0x00000c(%esp)
		mov    (%eax),%edx
		mov    %ecx,%eax
		add    %edx,%esi
		mov    %edi,%ecx
		xor    %edx,%edx
		mov    0x00000c(%esp),%edi
		mov    _0ce4a0_data,%dl
		call   *_0cdf28_data

	_03526b_jump:
		mov    0x000008(%esp),%ebx
		mov    _0cdf98_data,%ecx
		add    $0x000004,%ebx
		inc    %ebp
		mov    %ebx,0x000008(%esp)
		cmp    %ecx,%ebp
		jge    _034d4b_jump
		jmp    _0351b9_jump



_03528c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpb   $0x000000,_0c6b46_data
		je     _0352a4_jump
		movzwl _0c6b42_data,%ebp
		add    %eax,%ebp

	_0352a4_jump:
		xor    %dh,%dh
		mov    _0cdefc_data,%edi
		mov    %dh,_0ccfe4_data
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    _0cdf00_data,%eax
		mov    %eax,_0ccfd0_data
		call   _06194c_func
		call   _061950_func
		call   _04293c_func
		mov    $_0c1b1c_data,%eax
		call   _018890_func
		call   _05ff34_func
		mov    _0cdefc_data,%edx
		push   %edx
		mov    _0cdf78_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0cdf00_data,%ebx
		mov    _0cdf84_data,%esi
		push   %ebx
		mov    _0cdf78_data,%ebx
		mov    _0cdf88_data,%edx
		mov    %eax,%ecx
		mov    %esi,%eax
		call   _041998_func
		mov    _0cdefc_data,%eax
		mov    %eax,_0ccfd0_data
		call   _034fc0_func
		call   _040e8c_func
		call   _01ccfc_func
		call   _036b0c_func
		cmpb   $0x000000,_0cd0d5_data
		je     _03535c_jump
		mov    $0x00004d,%eax
		call   _06b320_func

	_03535c_jump:
		mov    _0c24ec_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _03537a_jump
		mov    _0cd0d5_data,%al
		test   %eax,%eax
		jne    _03537a_jump
		call   _025de0_func
		test   %al,%al
		je     _035381_jump

	_03537a_jump:
		mov    $0x000001,%edx
		jmp    _035383_jump

	_035381_jump:
		xor    %edx,%edx

	_035383_jump:
		cmpb   $0x000000,_0c6b46_data
		je     _0353a1_jump
		mov    %ebp,%ebx
		call   _0170ab_func
		test   %ecx,%ecx
		jne    _0353a1_jump
		call   _06194c_func
		call   _061950_func

	_0353a1_jump:
		mov    %edx,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0353ac_func:
		push   %ebx
		push   %edx
		call   _03c03c_func
		xor    %eax,%eax
		mov    _0c24ec_data,%al
		xor    %edx,%edx
		call   _0511c0_func
		call   _040e8c_func
		mov    $_0c856c_data,%eax
		mov    %edx,_0c4734_data
		call   _03c210_func
		call   _03bfc4_func
		call   _06159c_func
		mov    _0c32da_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _035441_jump
		mov    _0c32dc_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _035441_jump
		mov    _0c259a_data,%eax
		mov    _0c2598_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0c259e_data,%edx
		mov    %ax,_0c247c_data
		mov    _0c259c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,_0c247e_data
		call   _041bb8_func

	_035441_jump:
		cmpb   $0x000000,_0cdae8_data
		jne    _035459_jump
		call   _0361c8_func
		mov    $_03528c_func,%eax
		call   _03c090_func

	_035459_jump:
		mov    _0cd0d5_data,%dl
		test   %dl,%dl
		je     _0354af_jump
		mov    $0x000001,%dh
		mov    $0x000004,%bl
		mov    _0c25ee_data,%al
		mov    %dh,_0c2565_data
		mov    %bl,_0cd746_data
		mov    %al,_0c25ec_data
		mov    _0c24f2_data,%ax
		xor    %edx,%edx
		mov    %ax,_0c25ee_data
		mov    _0c24f0_data,%ax
		mov    %dx,_0cd08e_data
		mov    %ax,_0c25f0_data
		mov    $0x00004d,%eax
		mov    %dx,_0c24f2_data
		jmp    _035524_jump

	_0354af_jump:
		xor    %dh,%dh

	_0354b1_jump:
		call   _040c80_func
		test   %ax,%ax
		jne    _0354d9_jump
		call   _040ce8_func
		test   %ax,%ax
		jne    _0354d9_jump
		call   _040d50_func
		test   %ax,%ax
		jne    _0354d9_jump
		call   _040db8_func
		test   %ax,%ax
		je     _0354e8_jump

	_0354d9_jump:
		cmp    _0cdae8_data,%dl
		jne    _0354e8_jump
		call   _040e8c_func
		jmp    _0354b1_jump

	_0354e8_jump:
		call   _061aac_func
		call   _025de0_func
		test   %al,%al
		jne    _035516_jump
		cmpb   $0x000000,_0c25f2_data
		je     _035516_jump
		cmpb   $0x000000,_0cdae8_data
		jne    _035516_jump
		mov    _0c25ee_data,%eax
		sar    $0x000010,%eax
		mov    %ax,_0c25f0_data

	_035516_jump:
		cmpb   $0x000000,_0cdae8_data
		jne    _035529_jump
		mov    $0x000045,%eax

	_035524_jump:
		call   _06b320_func

	_035529_jump:
		call   _061a40_func
		call   _01cd14_func
		pop    %edx
		pop    %ebx
		ret    



_035538_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		mov    _0c32f0_data,%bl
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		mov    _0c32f6_data(%eax),%cl
		mov    %eax,%edx
		test   %cl,%cl
		je     _035589_jump

	_035560_jump:
		xor    %eax,%eax
		mov    _0c32f0_data,%al
		inc    %eax
		cmp    %eax,%ebx
		ja     _035589_jump
		mov    $_0c32f6_data,%eax
		add    %edx,%eax
		inc    %ebx
		call   _01a89c_func
		mov    _0c33ce_data(%edx),%ch
		add    $0x0000d8,%edx
		test   %ch,%ch
		jne    _035560_jump

	_035589_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035590_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _040e8c_func
		call   _03c324_func
		call   _035538_func
		incw   _0c4588_data
		mov    _0c4586_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00003c,%eax
		jne    _0355cf_jump
		mov    _0c4586_data,%cx
		xor    %ebx,%ebx
		dec    %ecx
		mov    %bx,_0c4588_data
		mov    %cx,_0c4586_data

	_0355cf_jump:
		call   _036fac_func
		test   %al,%al
		jne    _0355e1_jump
		call   _036ff8_func
		test   %al,%al
		je     _0355ee_jump

	_0355e1_jump:
		mov    _0c4584_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jle    _0355fa_jump

	_0355ee_jump:
		mov    _0c4584_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _035601_jump

	_0355fa_jump:
		mov    $0x000001,%eax
		jmp    _035603_jump

	_035601_jump:
		xor    %eax,%eax

	_035603_jump:
		mov    %eax,%ebx
		test   %ax,%ax
		je     _035653_jump
		xor    %edx,%edx
		mov    _0c32f0_data,%dl
		add    $0x000002,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000000,_0c32f6_data(,%eax,8)
		jne    _035636_jump
		movb   $0x00000a,_0c32f0_data
		jmp    _035653_jump

	_035636_jump:
		mov    $0x000005,%esi
		mov    _0c32f0_data,%dh
		xor    %ebx,%ebx
		add    $0x000002,%dh
		mov    %si,_0c4586_data
		mov    %dh,_0c32f0_data

	_035653_jump:
		test   %bx,%bx
		je     _03566e_jump
		xor    %eax,%eax
		mov    _0c32f0_data,%al
		cmp    $0x00000a,%eax
		jne    _03566e_jump
		mov    $0x000001,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03566e_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035678_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		call   _06bad0_func
		call   _03c014_func
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		mov    %esp,%eax
		call   _01630c_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _016349_func
		xor    %ah,%ah
		mov    %ah,_0cd0e0_data
		mov    $_0c9534_data,%eax
		call   _03c210_func
		call   _03c2b4_func
		xor    %eax,%eax
		mov    _095b0c_data,%al
		xor    %esi,%esi
		cmp    $0x000001,%eax
		jne    _0356e5_jump
		xor    %eax,%eax
		mov    _0c7968_data,%al
		mov    $0x000001,%esi
		call   _03cddc_func

	_0356e5_jump:
		call   _03bfc4_func
		call   _0632f8_func
		cmpb   $0x000000,_0ce841_data
		je     _0356ff_jump
		xor    %eax,%eax
		call   _06bb34_jump

	_0356ff_jump:
		mov    $_035590_func,%eax
		call   _03c090_func
		cmpb   $0x000000,_0ce841_data
		je     _035717_jump
		call   _077ee8_func

	_035717_jump:
		call   _03c014_func
		xor    %bl,%bl
		call   _03c03c_func
		mov    %bl,_0cd0df_data
		mov    %bl,_0cd0d5_data
		test   %esi,%esi
		je     _03573f_jump
		xor    %eax,%eax
		mov    _0c7968_data,%al
		call   _03cca8_func

	_03573f_jump:
		call   _03c284_jump
		call   _03c304_func
		mov    0x00000c(%esp),%edx
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    (%esp),%eax
		call   _016349_func
		call   _03bfc4_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03576c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		movzbl _0cd747_data,%edi
		lea    0x000000(,%edi,4),%esi
		sub    %edi,%esi
		shl    $0x000002,%esi
		jmp    _0357b8_jump

	_035786_jump:
		mov    _0cd0f4_data(%esi),%ebx
		mov    _0cd0f2_data(%esi),%edx
		add    $0x00000c,%esi
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		mov    _0cd0ee_data(%esi),%al
		mov    _0cd0ec_data(%esi),%cl
		push   %eax
		mov    _0cd0e4_data(%esi),%eax
		inc    %edi
		call   _01a168_func

	_0357b8_jump:
		xor    %eax,%eax
		mov    _0cd748_data,%al
		cmp    %eax,%edi
		jbe    _035786_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0357cc_func:
		push   %edx
		call   _040e8c_func
		call   _01ccd0_func
		call   _063728_func
		call   _03c324_func
		call   _03576c_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    _0cd0d5_data,%dl
		mov    %ah,_0cd0d5_data
		call   _036fac_func
		test   %al,%al
		jne    _035808_jump
		call   _0370d0_func
		test   %al,%al
		je     _035816_jump

	_035808_jump:
		movb   $0x000001,_0cd0d5_data
		movb   $0x000007,_0cd0e0_data

	_035816_jump:
		cmpb   $0x000000,_0cd0d5_data
		jne    _035824_jump
		test   %dx,%dx
		je     _03582b_jump

	_035824_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_03582b_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_035860_func:
		push   %edx
		call   _01cd14_func
		call   _063674_func

	_03586b_jump:
		xor    %eax,%eax
		mov    _0cd0e0_data,%al
		cmp    $0x000007,%eax
		jg     _0358c2_jump
		imul   $0x000300,%eax,%eax
		add    $_0c9534_data,%eax
		call   _03c210_func
		call   _03c2b4_func
		call   _03bfc4_func
		mov    $_0357cc_func,%eax
		call   _03c090_func
		call   _03c014_func
		mov    _0cd0e0_data,%dl
		xor    %ah,%ah
		inc    %dl
		mov    %ah,_0cd0d5_data
		mov    %dl,_0cd0e0_data
		call   _03c284_jump
		call   _03c304_func
		jmp    _03586b_jump

	_0358c2_jump:
		call   _01cd14_func
		call   _03bfc4_func
		pop    %edx
		ret    



_03596c_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		mov    $0x000004,%ebx
		mov    %ah,_0cd0e0_data
		mov    $_0c9534_data,%eax
		xor    %edx,%edx
		call   _03c210_func
		call   _03c2b4_func
		call   _03bfc4_func
		mov    %dx,_0c4588_data
		xor    %dl,%dl
		mov    %bx,_0c4586_data
		mov    %dl,_0c32f0_data
		call   _01ed50_func
		mov    $_035590_func,%eax
		call   _03c090_func
		mov    $_0c6b14_data,%eax
		call   _036740_func
		call   _03c014_func
		call   _03c284_jump
		call   _03c304_func
		pop    %edx
		pop    %ebx
		ret    



_0359fc_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0cd0de_data,%ah
		mov    %edx,_0c1ebc_data
		mov    %edx,_0c1eb8_data
		test   %ah,%ah
		je     _035a6e_jump
		mov    _0c25ee_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0x000001,%ebx
		jle    _035a42_jump
		mov    _0cd74c_data,%bl
		add    $0x000017,%bl
		mov    $_0c01b7_data,%edx
		mov    $_0ce848_data,%eax
		and    $0x0000ff,%ebx
		call   _03a838_func

	_035a42_jump:
		mov    $0x000004,%edx
		mov    $0x000006,%ebx
		mov    $_0c6b14_data,%eax
		mov    %dx,_0c24f0_data
		mov    %bx,_0c24f2_data
		call   _036740_func
		call   _03596c_func
		call   _035860_func

	_035a6e_jump:
		xor    %dl,%dl
		mov    %dl,_0cd0d5_data
		pop    %edx
		pop    %ebx
		ret    



_035a7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _03c014_func
		xor    %eax,%eax
		mov    _095b0d_data,%al
		cmp    $0x000001,%eax
		jne    _035ad5_jump
		mov    _0cdaee_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		mov    _095aee_data(%eax),%edx
		sar    $0x000010,%edx
		cmp    $0x000005,%edx
		jne    _035ad5_jump
		mov    _095afa_data(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jne    _035ad5_jump
		incw   _0cdaf0_data
		mov    _0cdaee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _035ad5_jump
		xor    %ebx,%ebx
		mov    %bx,_0cdaf0_data

	_035ad5_jump:
		mov    $0x000001,%ah
		mov    $_0cdaec_data,%edi
		mov    $_0c32e4_data,%esi
		xor    %edx,%edx
		mov    %ah,_0cdae8_data
		mov    %edx,_0cdaf4_data
		mov    _0c32e4_data,%dl
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		or     $0x00000f,%dl
		mov    _0cdaee_data,%eax
		mov    %dl,_0c32e4_data
		mov    %dl,%dh
		sar    $0x000010,%eax
		and    $0x0000cf,%dh
		add    %eax,%eax
		mov    %dh,_0c32e4_data
		mov    _095aee_data(%eax),%edx
		sar    $0x000010,%edx
		cmp    $0x000001,%edx
		jne    _035b3b_jump
		mov    _095afa_data(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jne    _035b3b_jump
		orb    $0x000040,_0c32e4_data
		jmp    _035b42_jump

	_035b3b_jump:
		andb   $0x0000bf,_0c32e4_data

	_035b42_jump:
		orb    $0x000080,_0c32e4_data
		mov    _0c32e5_data,%ch
		or     $0x000001,%ch
		mov    %ch,%al
		mov    %ch,_0c32e5_data
		and    $0x0000fd,%al
		mov    %al,_0c32e5_data
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _035b84_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _035b84_jump
		orb    $0x000004,_0c32e5_data
		jmp    _035b8b_jump

	_035b84_jump:
		andb   $0x0000fb,_0c32e5_data

	_035b8b_jump:
		mov    $0x000008,%ecx
		mov    $_0cd02c_data,%edi
		mov    $_0cd00c_data,%esi
		mov    _0c32e5_data,%dh
		rep movsl %ds:(%esi),%es:(%edi)
		and    $0x000087,%dh
		mov    $0x000001,%ecx
		mov    $0x000002,%edi
		mov    %dh,_0c32e5_data
		xor    %esi,%esi
		mov    %cx,_0cd01c_data
		mov    %si,_0cd01e_data
		mov    %di,_0cd022_data
		mov    %di,_0cd020_data
		call   _0408c0_func
		mov    $0x000003,%edi
		mov    $0x000001,%al
		mov    _0c32ed_data,%bl
		mov    _0cdaee_data,%edx
		mov    %cx,_0c24ee_data
		mov    %cx,_0c24ec_data
		mov    %si,_0c24f2_data
		mov    %si,_0c24f0_data
		or     $0x00000a,%bl
		sar    $0x000010,%edx
		mov    %di,_0c24c8_data
		mov    %al,_0c1ed0_data
		mov    %al,_0c6941_data
		xor    %ch,%ch
		mov    %bl,_0c32ed_data
		mov    _095ae2_data(,%edx,2),%eax
		mov    _095af0_data(,%edx,2),%bx
		sar    $0x000010,%eax
		mov    %bx,_0c25ee_data
		mov    %eax,_0c6938_data
		mov    _095afc_data(,%edx,2),%bx
		mov    %edx,%eax
		mov    %bx,_0c25f0_data
		shl    $0x000005,%eax
		mov    $0x000002,%bh
		sub    %edx,%eax
		mov    %bh,_0c1b92_data
		mov    %bh,_0c24d1_data
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %edx,%eax
		mov    $_095508_data,%edx
		mov    %ebx,_0c692c_data
		add    %eax,%eax
		mov    $0x000a20,%ebx
		add    %eax,%edx
		mov    $_0c4740_data,%eax
		mov    %edx,_0c693c_data
		xor    %edx,%edx
		mov    %ch,_0c24ce_data
		call   _0787d0_func
		mov    _0c25ec_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %dl,%dl
		mov    %dl,_094a29_data(,%eax,4)
		call   _04c6e0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035cc4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _03c014_func
		mov    _0c6934_data,%eax
		cmp    _0c6930_data,%eax
		jne    _035ce6_jump
		xor    %ebx,%ebx
		mov    %bx,_0cdaf2_data
		jmp    _035cef_jump

	_035ce6_jump:
		xor    %edx,%edx
		mov    %dx,_0cdaf2_data

	_035cef_jump:
		mov    $_0c32e4_data,%edi
		mov    $_0cdaec_data,%esi
		xor    %ah,%ah
		xor    %ebx,%ebx
		xor    %dl,%dl
		xor    %ecx,%ecx
		mov    %ah,_0cdae8_data
		mov    %ebx,_0cdaf4_data
		mov    $0x000001,%eax
		xor    %ebx,%ecx
		call   _0511c0_func
		mov    %dl,_0c6941_data
		mov    %ebx,_0c692c_data
		mov    %ebx,_0c6938_data
		mov    %ebx,_0c693c_data
		mov    %cx,_0c24ee_data
		xor    %eax,%eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    $0x000008,%ecx
		mov    %ax,_0c24f0_data
		xor    %esi,%esi
		xor    %dh,%dh
		xor    %edi,%edi
		mov    %dx,_0c25ee_data
		xor    %ebx,%esi
		xor    %ebx,%edi
		mov    _0c32ed_data,%dh
		mov    %si,_0c24ec_data
		mov    %di,_0c24f2_data
		xor    %ebx,%ebx
		mov    $_0cd00c_data,%edi
		mov    $_0cd02c_data,%esi
		and    $0x0000f5,%dh
		mov    %bx,_0c25f0_data
		mov    %dh,_0c32ed_data
		rep movsl %ds:(%esi),%es:(%edi)
		call   _0408c0_func
		incw   _0cdaf0_data
		mov    _0cdaee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _035dab_jump
		mov    %bx,_0cdaf0_data

	_035dab_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035db4_func:
		call   _040e8c_func
		call   _036fac_func
		test   %al,%al
		jne    _035dcb_jump
		call   _036ff8_func
		test   %al,%al
		je     _035dd2_jump

	_035dcb_jump:
		movb   $0x000001,_0cd0d5_data

	_035dd2_jump:
		call   _04c6f4_func
		call   _03c324_func
		mov    $_0c1e34_data,%eax
		call   _018890_func
		call   _06399c_func
		cmpb   $0x000000,_0cd0d5_data
		je     _035e06_jump
		mov    _0c1af2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _035e06_jump
		mov    $0x000001,%eax
		ret    

	_035e06_jump:
		xor    %eax,%eax
		ret    



_035e0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $_0c6af0_data,%eax
		mov    $_016bec_func,%edx
		mov    $_016cd7_func,%ebx
		call   _036fa0_func
		mov    $_0c6af0_data,%eax
		mov    $_016b73_jump,%ecx
		call   _036608_func
		mov    $_0c886c_data,%eax
		mov    $_016c57_jump,%esi
		call   _03c210_func
		call   _01ccfc_func
		call   _03bfc4_func
		call   _063930_func
		mov    $_035db4_func,%eax
		mov    %edx,_0cdf18_data
		mov    %ebx,_0cdf20_data
		call   _03c090_func
		mov    %ecx,_0cdf18_data
		mov    %esi,_0cdf20_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035e78_func:
		call   _03c014_func
		jmp    _03c284_jump



_035e84_func:
		push   %edx
		mov    $0x041a00,%edx
		mov    $_0c6af0_data,%eax
		call   _077450_func
		call   _035e0c_func
		mov    $_0c6af0_data,%eax
		call   _077768_func
		xor    %ah,%ah
		mov    %ah,_0cd0d5_data
		call   _044d80_func
		call   _035e78_func
		pop    %edx
		ret    



_035eb8_func:
		push   %edx
		xor    %eax,%eax
		mov    _0c2565_data,%al
		cmp    $0x000001,%eax
		je     _035ef4_jump
		call   _01cd14_func
		call   _063d64_func
		cmpb   $0x000000,_0cd0d5_data
		jne    _035ef4_jump
		call   _03bfc4_func
		mov    $_034470_jump,%eax
		call   _03c090_func
		xor    %dl,%dl
		call   _0642ec_func
		mov    %dl,_0cd0d5_data

	_035ef4_jump:
		pop    %edx
		ret    



_035fdc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    $0x000fa0,%eax
		call   _07755c_func
		xor    %edi,%edi
		mov    %eax,(%esp)
		test   %eax,%eax
		je     _036106_jump
		mov    (%esp),%esi
		xor    %ebx,%ebx
		jmp    _03601f_jump

	_036003_jump:
		inc    %eax

	_036004_jump:
		movswl %ax,%edx
		cmp    $0x00012c,%edx
		jl     _036003_jump
		movswl %bx,%edx
		shl    $0x000002,%edx
		add    %esi,%edx
		call   _01704b_func
		inc    %ebx
		mov    %eax,(%edx)

	_03601f_jump:
		movswl %bx,%eax
		cmp    $0x0003e8,%eax
		jge    _03602d_jump
		xor    %eax,%eax
		jmp    _036004_jump

	_03602d_jump:
		mov    $0x000f9c,%eax
		call   _07755c_func
		mov    %eax,%ebp
		test   %eax,%eax
		je     _0360fe_jump
		movb   $0x000001,0x000008(%esp)
		xor    %eax,%eax
		jmp    _03604b_jump

	_03604a_jump:
		inc    %eax

	_03604b_jump:
		movswl %ax,%ebx
		cmp    $0x0003e7,%ebx
		jge    _036074_jump
		mov    (%esp),%ecx
		mov    0x000004(%ecx,%ebx,4),%edx
		mov    (%ecx,%ebx,4),%esi
		mov    %edx,%ecx
		sub    %esi,%ecx
		add    %ecx,%edi
		mov    %ecx,0x000000(%ebp,%ebx,4)
		test   %ecx,%ecx
		jg     _03604a_jump
		xor    %dl,%dl
		mov    %dl,0x000008(%esp)

	_036074_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _0360e6_jump
		mov    $0x0003e7,%ebx
		mov    %edi,%edx
		mov    %edi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edi
		shl    $0x000002,%eax
		sub    %edi,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000003,%ebx
		lea    0x000000(,%edi,2),%edx
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %esi,%esi
		mov    %eax,%edx
		jmp    _0360b7_jump

	_0360b6_jump:
		inc    %esi

	_0360b7_jump:
		movswl %si,%eax
		cmp    $0x0003e7,%eax
		jge    _0360e6_jump
		mov    0x000004(%esp),%ecx
		mov    %edx,%ebx
		mov    0x000000(%ebp,%eax,4),%eax
		cmp    %ebx,%eax
		jl     _0360da_jump
		cmp    %ecx,%eax
		jg     _0360da_jump
		mov    $0x000001,%eax
		jmp    _0360dc_jump

	_0360da_jump:
		xor    %eax,%eax

	_0360dc_jump:
		test   %eax,%eax
		jne    _0360b6_jump
		incb   0x000008(%esp)
		jmp    _0360b6_jump

	_0360e6_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		cmp    $0x00000a,%eax
		setl   %al
		mov    %al,_0c6b46_data
		mov    %ebp,%eax
		call   _077708_func

	_0360fe_jump:
		mov    (%esp),%eax
		call   _077708_func

	_036106_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036110_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0c6b46_data
		je     _0361c3_jump
		call   _016fe8_func
		call   _01704b_func
		lea    0x000bb8(%eax),%ebx
		call   _0170ab_func
		call   _016fd8_func
		call   _01704b_func
		xor    %edx,%edx
		mov    %eax,%esi
		jmp    _036161_jump

	_036146_jump:
		call   _016fe8_func
		call   _01704b_func
		lea    0x000bb8(%eax),%ebx
		call   _0170ab_func
		call   _016fd8_func
		inc    %edx

	_036161_jump:
		xor    %ebx,%ebx
		movswl %dx,%eax
		mov    _0c7968_data,%bl
		cmp    %ebx,%eax
		jl     _036146_jump
		call   _01704b_func
		movswl %dx,%ebx
		sub    %esi,%eax
		xor    %edx,%edx
		div    %ebx
		xor    %ebx,%ebx
		mov    %ax,%bx
		mov    %ax,_0c6b40_data
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		xor    %edx,%edx
		add    %ebx,%eax
		mov    $0x00001e,%ebx
		div    %ebx
		mov    _0c6b4e_data,%dx
		mov    %ax,_0c6b42_data
		imul   _0c6b40_data,%dx
		mov    _0c6b42_data,%ax
		add    %edx,%eax
		mov    %ax,_0c6b44_data

	_0361c3_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0361c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		xor    %ah,%ah
		mov    %ah,(%esp)
		cli    
		call   _035fdc_func
		cmpb   $0x000000,_0c6b46_data
		je     _03623d_jump

	_0361e3_jump:
		cmpb   $0x000000,(%esp)
		jne    _03623d_jump
		call   _036110_func
		call   _016fe8_func
		call   _016fd8_func
		call   _01704b_func
		xor    %ebx,%ebx
		mov    %eax,%esi
		mov    _0c6b42_data,%bx
		xor    %edx,%edx
		call   _0170ab_func
		call   _016fd8_func
		call   _01704b_func
		mov    _0c6b40_data,%dx
		imul   $0x000065,%edx,%edx
		mov    $0x000064,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		sub    %esi,%ebx
		cmp    %eax,%ebx
		jae    _0361e3_jump
		movb   $0x000001,(%esp)
		jmp    _0361e3_jump

	_03623d_jump:
		sti    
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036248_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c6b2c_data,%eax
		call   _0773dc_func
		call   _03cdcc_func
		xor    %ah,%ah
		mov    %ah,_0c9475_data
		mov    %ah,_0c6940_data
		mov    %ah,_0c6941_data
		mov    %ah,_0c25e2_data
		call   _041490_func
		mov    $0x000003,%eax
		call   _040e84_func
		mov    $0x00fa40,%eax
		call   _077840_func
		mov    %eax,_0cdefc_data
		mov    $0x01f400,%eax
		call   _077840_func
		mov    _0cdefc_data,%edx
		mov    %eax,_0cdf00_data
		test   %edx,%edx
		je     _0362af_jump
		test   %eax,%eax
		jne    _0362b9_jump

	_0362af_jump:
		mov    $_0c01c4_data,%eax
		call   _01f628_func

	_0362b9_jump:
		call   _041a40_func
		mov    $0x00003c,%bh
		mov    $0x00003c,%eax
		mov    $0x000001,%cl
		xor    %edx,%edx
		mov    %bh,_0c7968_data
		call   _03cddc_func
		mov    %cl,_0c6b47_data
		call   _016ff8_func
		call   _035fdc_func
		mov    %dx,_0c1182_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0362f0_func:
		push   %edx
		cmpb   $0x000000,_0c2565_data
		jne    _03634c_jump
		movb   $0x0000ff,(%eax)
		call   _040e8c_func
		cmpl   $0x000000,_0c692c_data
		jne    _036327_jump
		cmpb   $0x000000,_0c6941_data
		jne    _03631d_jump
		cmpb   $0x000000,_0c6940_data
		je     _036327_jump

	_03631d_jump:
		mov    $_0c692c_data,%eax
		call   _0411e0_func

	_036327_jump:
		xor    %edx,%edx
		mov    _0c247a_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7c6c_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03ba38_func

	_03634c_jump:
		pop    %edx
		ret    



_036350_func:
		push   %ebx
		push   %edx
		mov    $0x000014,%edx
		xor    %ebx,%ebx
		mov    %dx,_0c6b50_data
		mov    %bx,_0c6b4e_data
		call   _0361c8_func
		pop    %edx
		pop    %ebx
		ret    



_036370_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    %edx,%ebp
		mov    $_0c01e2_data,%esi
		mov    %edx,%edi
		push   %edi

	_036384_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03639c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _036384_jump

	_03639c_jump:
		pop    %edi
		mov    %esp,%edx
		movswl %bx,%eax
		mov    $0x00000a,%ebx
		mov    %esp,%esi
		call   _0795e3_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0363b7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0363cf_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0363b7_jump

	_0363cf_jump:
		pop    %edi
		mov    $_0c01e6_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0363de_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0363f6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0363de_jump

	_0363f6_jump:
		pop    %edi
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_036400_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    %edx,%ebp
		mov    $_0c01eb_data,%esi
		mov    %edx,%edi
		push   %edi

	_036414_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03642c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _036414_jump

	_03642c_jump:
		pop    %edi
		mov    %esp,%edx
		movswl %bx,%eax
		mov    $0x00000a,%ebx
		mov    %esp,%esi
		call   _0795e3_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_036447_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03645f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _036447_jump

	_03645f_jump:
		pop    %edi
		mov    $_0c01ef_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03646e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _036486_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03646e_jump

	_036486_jump:
		pop    %edi
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_0364e0_switch:
		.long   _03650d_case
		.long   _036514_case
		.long   _03651b_case
		.long   _036522_case
		.long   _036529_case




_0364f4_func:
		dec    %edx
		cmp    $0x000004,%dx
		ja     _036607_jump
		and    $0x00ffff,%edx
		jmp    *%cs:_0364e0_switch(,%edx,4)

	_03650d_case:
		mov    $0x000002,%edx
		jmp    _03652c_jump

	_036514_case:
		mov    $0x000004,%edx
		jmp    _03652c_jump

	_03651b_case:
		mov    $0x000003,%edx
		jmp    _03652c_jump

	_036522_case:
		mov    $0x000001,%edx
		jmp    _03652c_jump

	_036529_case:
		xor    %edx,%edx
		nop

	_03652c_jump:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000308,%esp
		mov    %eax,%ebx
		mov    _0c94d0_data,%esi
		mov    $0x000300,%ecx
		mov    %esi,0x000304(%esp)
		mov    _0c94cc_data,%esi
		mov    %esp,%edi
		mov    %esi,0x000300(%esp)
		mov    $_0c856c_data,%esi
		mov    _0c94c0_data,%ebp
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %ebx,%eax
		call   _045fd0_func
		mov    _0c94c0_data,%edx
		mov    $0x000300,%ecx
		mov    %edx,_0c94d4_data
		mov    _0c94d0_data,%edx
		mov    $_0c856c_data,%esi
		mov    %edx,_0c94d8_data
		mov    _0c94cc_data,%edx
		mov    $_0c886c_data,%edi
		mov    %edx,_0c94dc_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    0x000304(%esp),%edx
		mov    $0x000300,%ecx
		mov    %esp,%esi
		mov    $_0c856c_data,%edi
		mov    %edx,_0c94d0_data
		mov    0x000300(%esp),%edx
		mov    %ebp,_0c94c0_data
		mov    %edx,_0c94cc_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		add    $0x000308,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_036607_jump:
		ret    



_036608_func:
		push   %edx
		mov    $0x00000a,%edx
		call   _03652c_jump
		pop    %edx



_036614_func:
		ret    



_036618_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   $0x000089
		mov    _0ccfd0_data,%edi
		mov    _0c94d4_data,%esi
		push   $0x000140
		xor    %edx,%edx
		xor    %ecx,%ecx
		push   $0x000140
		xor    %ebx,%ebx
		xor    %eax,%eax
		call   _014eff_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036740_func:
		ret    



_036744_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0c694c_data
		je     _036756_jump
		call   _01cd14_func

	_036756_jump:
		cmpb   $0x000000,_0cdf10_data
		jne    _036766_jump
		movb   $0x000001,_095b0d_data

	_036766_jump:
		mov    _0c25ee_data,%ax
		cmp    _0c24f2_data,%ax
		je     _036792_jump
		xor    %eax,%eax
		mov    $0x000001,%edx
		mov    %ax,_0c24f0_data
		mov    %dx,_0c24ee_data
		mov    %dx,_0c24ec_data
		jmp    _0367c4_jump

	_036792_jump:
		call   _025de0_func
		test   %al,%al
		je     _0367b2_jump
		xor    %ecx,%ecx
		mov    $0x000001,%esi
		mov    %cx,_0c24f0_data
		mov    %si,_0c24ee_data
		jmp    _0367bb_jump

	_0367b2_jump:
		xor    %ebx,%ebx
		mov    %bx,_0c24ee_data

	_0367bb_jump:
		movw   $0x000001,_0c24ec_data

	_0367c4_jump:
		xor    %eax,%eax
		mov    _0cd0de_data,%al
		cmp    $0x000001,%eax
		jne    _0367e7_jump
		mov    _0c25ec_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _0367e7_jump
		call   _0359fc_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0367e7_jump:
		cmpb   $0x000000,_0c2565_data
		jne    _03684d_jump
		cmpw   $0x000000,_0c24ee_data
		je     _03684d_jump
		call   _036cb8_func
		mov    $_0c6b08_data,%eax
		call   _07781c_func
		mov    $_0c6b20_data,%eax
		call   _077804_func
		mov    _0c25ec_data,%eax
		mov    $_0c948c_data,%edx
		sar    $0x000010,%eax
		mov    $_0c948c_data,%ebx
		call   _036400_func
		mov    $_0c6b20_data,%edx
		mov    $_0c6b08_data,%eax
		call   _0438e0_func
		mov    $_0c6b20_data,%eax
		call   _0777ec_func
		call   _051f80_func
		call   _036d9c_func

	_03684d_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036854_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0c694c_data
		je     _036864_jump
		call   _01cd14_func

	_036864_jump:
		mov    $0x000001,%ebx
		mov    _0c25ee_data,%ax
		xor    %edx,%edx
		mov    %ax,_0c24f2_data
		mov    %dx,_0c24ee_data
		mov    %bx,_0c24ec_data
		mov    _0c25f0_data,%ax
		mov    _0c2565_data,%dl
		mov    %ax,_0c24f0_data
		test   %dl,%dl
		jne    _0368f0_jump
		cmpb   $0x000000,_0c694c_data
		je     _0368ac_jump
		xor    %edx,%edx
		mov    %edx,_0c6950_data

	_0368ac_jump:
		mov    _0c24ee_data,%eax
		mov    $_0c9478_data,%edx
		sar    $0x000010,%eax
		call   _036370_func
		mov    $_0c6b14_data,%eax
		call   _077830_func
		mov    $_0c6b20_data,%eax
		mov    $_0c9478_data,%ebx
		call   _077810_func
		mov    $_0c6b14_data,%eax
		mov    $_0c6b20_data,%edx
		mov    $_0c6b14_data,%eax
		call   _0440b4_func
		call   _04719c_func

	_0368f0_jump:
		pop    %edx
		pop    %ebx
		ret    



_0369e4_func:
		push   %edx
		xor    %eax,%eax
		mov    _0c6965_data,%al
		cmp    $0x000001,%eax
		jne    _036ac2_jump
		call   _040a7c_func
		test   %al,%al
		je     _036a07_jump
		movb   $0x000001,_0cd0d5_data
		pop    %edx
		ret    

	_036a07_jump:
		mov    $0x000020,%eax
		call   _040a7c_func
		test   %al,%al
		jne    _036b02_jump
		mov    $0x000002,%eax
		call   _040a7c_func
		test   %al,%al
		je     _036a2e_jump
		xor    %eax,%eax
		jmp    _036afc_jump

	_036a2e_jump:
		mov    $0x000003,%eax
		call   _040a7c_func
		test   %al,%al
		je     _036a4a_jump
		movw   $0x000001,_0cdaf0_data
		jmp    _036b02_jump

	_036a4a_jump:
		mov    $0x000004,%eax
		call   _040a7c_func
		test   %al,%al
		je     _036a68_jump
		movw   $0x000002,_0cdaf0_data
		call   _035a7c_func
		pop    %edx
		ret    

	_036a68_jump:
		mov    $0x000005,%eax
		call   _040a7c_func
		test   %al,%al
		je     _036a86_jump
		movw   $0x000003,_0cdaf0_data
		call   _035a7c_func
		pop    %edx
		ret    

	_036a86_jump:
		mov    $0x000006,%eax
		call   _040a7c_func
		test   %al,%al
		je     _036aa4_jump
		movw   $0x000004,_0cdaf0_data
		call   _035a7c_func
		pop    %edx
		ret    

	_036aa4_jump:
		mov    $0x000007,%eax
		call   _040a7c_func
		test   %al,%al
		je     _036b07_jump
		movw   $0x000005,_0cdaf0_data
		call   _035a7c_func
		pop    %edx
		ret    

	_036ac2_jump:
		call   _07841e_func
		test   %eax,%eax
		je     _036b07_jump
		call   _078435_func
		mov    %al,%dl
		cmp    $0x00001b,%al
		jne    _036add_jump
		movb   $0x000001,_0cd0d5_data

	_036add_jump:
		cmp    $0x000064,%dl
		jne    _036ae7_jump
		call   _035a7c_func

	_036ae7_jump:
		cmp    $0x000031,%dl
		jb     _036b07_jump
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x000036,%eax
		jg     _036b07_jump
		xor    %eax,%eax
		mov    %dl,%al
		sub    $0x000031,%eax

	_036afc_jump:
		mov    %ax,_0cdaf0_data

	_036b02_jump:
		call   _035a7c_func

	_036b07_jump:
		pop    %edx
		ret    



_036b0c_func:
		xor    %eax,%eax
		mov    _0c6965_data,%al
		cmp    $0x000001,%eax
		je     _040a7c_func
		call   _07841e_func
		test   %eax,%eax
		je     _036b38_jump
		call   _078435_func
		cmp    $0x00001b,%al
		jne    _036b38_jump
		movb   $0x000001,_0cd0d5_data
		lea    0x000000(%eax),%eax

	_036b38_jump:
		ret    



_036b4c_func:
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0c6965_data,%al
		cmp    $0x000001,%eax
		je     _036b79_jump
		call   _07841e_func
		test   %eax,%eax
		je     _036b76_jump
		cmpb   $0x000000,_0cdae8_data
		jne    _036b76_jump
		call   _078435_func
		mov    %al,(%edx)
		pop    %edx
		ret    

	_036b76_jump:
		movb   $0x0000ff,(%edx)

	_036b79_jump:
		pop    %edx
		ret    

	_036bc0_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lea    0x000000(%eax),%eax

	_036bc8_jump:
		ret    



_036bcc_func:
		cmpb   $0x000000,_0c2565_data
		je     _036bc8_jump
		mov    $_0c6b08_data,%eax
		call   _07781c_func
		mov    $_0c6b20_data,%eax
		jmp    _077804_func



_036bec_func:
		push   %edx
		call   _03cdcc_func
		cmpb   $0x000000,_0c6940_data
		je     _036c12_jump
		call   _041474_func
		mov    $0x000001,%dl
		mov    $_0c692c_data,%eax
		mov    %dl,_0c6942_data
		call   _0411e0_func

	_036c12_jump:
		push   $_0c0210_data
		call   _0783fc_func
		mov    _0c2565_data,%dh
		add    $0x000004,%esp
		test   %dh,%dh
		je     _036c65_jump
		mov    $_0c6b14_data,%eax
		call   _077768_func
		mov    $_0c6b08_data,%eax
		call   _077768_func
		mov    $_0c6b20_data,%eax
		call   _077768_func
		mov    $_0c6afc_data,%eax
		call   _077768_func
		mov    $_0cdf04_data,%eax
		call   _077858_func
		mov    $_0cdf00_data,%eax
		call   _077858_func

	_036c65_jump:
		call   _0773b4_func
		xor    %eax,%eax
		call   _07882c_func
		pop    %edx
		mov    %eax,%eax
		ret    



_036c78_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _03c324_func
		call   _025de0_func
		mov    $0x0000a0,%ecx
		mov    $0x0000be,%edx
		test   %al,%al
		je     _036c9d_jump
		mov    $0x0000f0,%ecx
		mov    $0x0000a0,%edx

	_036c9d_jump:
		push   $0x000000
		mov    _0cd9a4_data,%eax
		movswl %dx,%ebx
		movswl %cx,%edx
		mov    $0x000002,%ecx
		call   _01a168_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036cb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0c6b14_data,%eax
		mov    $0x000300,%ecx
		mov    _0c25ec_data,%edx
		mov    $_0c796c_data,%esi
		sar    $0x000010,%edx
		mov    $_0c9174_data,%edi
		call   _0364f4_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c886c_data,%esi
		mov    $_0c796c_data,%edi
		mov    $_0c886c_data,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000002,%eax
		call   _03ba38_func
		call   _016fd8_func
		call   _016fe8_func
		call   _03a930_func
		call   _036c78_func
		mov    $0x000064,%edx
		mov    _0cdefc_data,%ebx
		mov    $0x000009,%eax
		mov    %ebx,%ecx
		call   _03777c_func
		and    $0x0000ff,%eax
		je     _036d5e_jump
		call   _0377cc_func
		call   _037808_func
		call   _036c78_func

	_036d5e_jump:
		call   _016fe8_func
		call   _016fd8_func
		call   _03a930_func
		mov    $_0c796c_data,%ebx

	_036d72_jump:
		mov    _0c1af2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _036bc0_jump
		call   _016fe8_func
		call   _016fd8_func
		mov    $_0c886c_data,%eax
		mov    %ebx,%edx
		call   _03bab8_func
		jmp    _036d72_jump



_036d9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000064,%edx
		mov    $0x000009,%eax
		mov    _0cdefc_data,%ecx
		mov    _0ccfcc_data,%ebx
		call   _037794_func
		xor    %ebx,%ebx
		mov    %al,%bl
		test   %ebx,%ebx
		je     _036dce_jump
		call   _0377cc_func
		call   _037808_func

	_036dce_jump:
		mov    $_0c886c_data,%edx
		mov    $0x000002,%eax
		mov    $0x000300,%ecx
		mov    $_0c9174_data,%esi
		mov    $_0c796c_data,%edi
		call   _03bbc0_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_036e04_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _0787b8_func
		cli    
		mov    _0d7c74_data,%edx
		inc    %edx
		mov    $0x00000a,%ebx
		mov    %edx,_0d7c74_data
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     _036f1c_jump
		mov    _0d7c7c_data,%eax
		mov    _0d7c78_data,%ebx
		add    %eax,%ebx
		mov    %ebx,_0d7c78_data
		cmp    $0x000080,%ebx
		jl     _036e5f_jump
		mov    $0x000080,%ebp
		neg    %eax
		mov    %ebp,_0d7c78_data
		jmp    _036e71_jump

	_036e5f_jump:
		cmp    $0x000020,%ebx
		jg     _036e76_jump
		mov    $0x000020,%edi
		neg    %eax
		mov    %edi,_0d7c78_data

	_036e71_jump:
		mov    %eax,_0d7c7c_data

	_036e76_jump:
		mov    $0x000003,%edx
		mov    $0x00003f,%ecx

	_036e80_jump:
		xor    %eax,%eax
		mov    _0d7c78_data,%ebx
		mov    _0c886c_data(%edx),%al
		imul   %eax,%ebx
		sar    $0x000006,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jle    _036e9c_jump
		mov    %ebx,%eax

	_036e9c_jump:
		mov    %al,_0c796c_data(%edx)
		xor    %eax,%eax
		mov    _0c886d_data(%edx),%al
		mov    _0d7c78_data,%esi
		mov    %eax,%ebx
		imul   %esi,%ebx
		mov    %ecx,%eax
		sar    $0x000006,%ebx
		cmp    %ebx,%eax
		jle    _036ec0_jump
		mov    %ebx,%eax

	_036ec0_jump:
		xor    %ebx,%ebx
		mov    _0d7c78_data,%edi
		mov    _0c886e_data(%edx),%bl
		imul   %edi,%ebx
		mov    %al,_0c796d_data(%edx)
		mov    %ecx,%eax
		sar    $0x000006,%ebx
		add    $0x000003,%edx
		cmp    %ebx,%eax
		jle    _036ee5_jump
		mov    %ebx,%eax

	_036ee5_jump:
		mov    %al,_0c796b_data(%edx)
		cmp    $0x00001b,%edx
		jne    _036e80_jump
		call   _016fd8_func
		mov    $_0c796c_data,%esi
		mov    $0x000008,%ecx
		mov    $0x000001,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_036f1c_jump:
		mov    _0d7c84_data,%dx
		mov    _0d7c80_data,%eax
		call   _079604_func
		sti    
		cld    
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   



_036fa0_func:
		call   _044924_func
		mov    $0x000001,%eax
		ret    



_036fac_func:
		push   %edx
		mov    _0c1af4_data,%dx
		xor    %al,%al
		test   %dx,%dx
		jne    _036ff6_jump
		mov    _0c6964_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _036ff0_jump
		xor    %eax,%eax
		mov    _0c6965_data,%al
		cmp    $0x000001,%eax
		jne    _036ff4_jump
		mov    $0x00001c,%eax
		call   _040a7c_func
		test   %al,%al
		jne    _036ff0_jump
		mov    $0x000039,%eax
		call   _040a7c_func
		test   %al,%al
		je     _036ff4_jump

	_036ff0_jump:
		mov    $0x000001,%al
		pop    %edx
		ret    

	_036ff4_jump:
		xor    %al,%al

	_036ff6_jump:
		pop    %edx
		ret    



_036ff8_func:
		push   %edx
		xor    %eax,%eax
		mov    _0c6965_data,%al
		xor    %dl,%dl
		cmp    $0x000001,%eax
		jne    _037017_jump
		mov    $0x00001c,%eax
		call   _040a7c_func
		test   %al,%al
		je     _037023_jump
		jmp    _037021_jump

	_037017_jump:
		call   _040ce8_func
		test   %ax,%ax
		je     _037023_jump

	_037021_jump:
		mov    $0x000001,%dl

	_037023_jump:
		mov    %dl,%al
		pop    %edx
		ret    



_0370d0_func:
		push   %edx
		xor    %eax,%eax
		mov    _0c6965_data,%al
		xor    %dl,%dl
		cmp    $0x000001,%eax
		jne    _0370ea_jump
		call   _040a7c_func
		test   %al,%al
		je     _0370fe_jump
		jmp    _0370fc_jump

	_0370ea_jump:
		call   _07841e_func
		test   %eax,%eax
		je     _0370fe_jump
		call   _078435_func
		cmp    $0x00001b,%al
		jne    _0370fe_jump

	_0370fc_jump:
		mov    $0x000001,%dl

	_0370fe_jump:
		mov    %dl,%al
		pop    %edx
		ret    



_037110_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _040e8c_func
		mov    _0cdefc_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		xor    %edi,%edi
		call   _038430_func
		mov    %ax,%di
		test   %edi,%edi
		je     _037160_jump
		call   _040c80_func
		test   %ax,%ax
		jne    _037160_jump
		call   _040ce8_func
		test   %ax,%ax
		jne    _037160_jump
		call   _040d50_func
		test   %ax,%ax
		jne    _037160_jump
		call   _040db8_func
		test   %ax,%ax
		je     _037167_jump

	_037160_jump:
		mov    $0x000001,%edx
		jmp    _037169_jump

	_037167_jump:
		xor    %edx,%edx

	_037169_jump:
		call   _0387a4_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_037174_case:
		mov    $_0c886c_data,%eax
		call   _03c210_func
		mov    _095fd1_data,%eax
		sar    $0x000018,%eax
		cmp    $0x000001,%eax
		jne    _037190_jump
		call   _03bfc4_func

	_037190_jump:
		mov    $_037110_func,%eax
		call   _03c090_func
		mov    _095fd1_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03c284_jump
		call   _03c014_func
		jmp    _03c284_jump



_0371b8_func:
		push   %edx
		call   _040e8c_func
		call   _076c38_func
		and    $0x00ffff,%eax
		je     _0371f2_jump
		call   _040c80_func
		test   %ax,%ax
		jne    _0371f2_jump
		call   _040ce8_func
		test   %ax,%ax
		jne    _0371f2_jump
		call   _040d50_func
		test   %ax,%ax
		jne    _0371f2_jump
		call   _040db8_func
		test   %ax,%ax
		je     _0371f9_jump

	_0371f2_jump:
		mov    $0x000001,%edx
		jmp    _0371fb_jump

	_0371f9_jump:
		xor    %edx,%edx

	_0371fb_jump:
		call   _076dcc_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_037204_case:
		mov    $_0c886c_data,%eax
		call   _03c210_func
		mov    _095fd1_data,%eax
		sar    $0x000018,%eax
		cmp    $0x000001,%eax
		jne    _037225_jump
		call   _03c03c_func
		call   _03bfc4_func

	_037225_jump:
		mov    $_0371b8_func,%eax
		call   _03c090_func
		mov    _095fd1_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03c284_jump
		call   _03c014_func
		jmp    _03c284_jump



_03724c_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _040e8c_func
		mov    _0cdefc_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		xor    %edi,%edi
		call   _0257ac_func
		mov    %ax,%di
		test   %edi,%edi
		je     _03729c_jump
		call   _040c80_func
		test   %ax,%ax
		jne    _03729c_jump
		call   _040ce8_func
		test   %ax,%ax
		jne    _03729c_jump
		call   _040d50_func
		test   %ax,%ax
		jne    _03729c_jump
		call   _040db8_func
		test   %ax,%ax
		je     _0372a3_jump

	_03729c_jump:
		mov    $0x000001,%edx
		jmp    _0372a5_jump

	_0372a3_jump:
		xor    %edx,%edx

	_0372a5_jump:
		call   _025c94_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_0372b0_case:
		mov    $_0c886c_data,%eax
		call   _03c210_func
		mov    _095fd1_data,%eax
		sar    $0x000018,%eax
		cmp    $0x000001,%eax
		jne    _0372d1_jump
		call   _03c03c_func
		call   _03bfc4_func

	_0372d1_jump:
		mov    $_03724c_func,%eax
		call   _03c090_func
		mov    _095fd1_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03c284_jump
		call   _03c014_func
		jmp    _03c284_jump



_0372f8_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _040e8c_func
		mov    _0cdefc_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		xor    %edi,%edi
		call   _04347c_func
		mov    %ax,%di
		test   %edi,%edi
		je     _037348_jump
		call   _040c80_func
		test   %ax,%ax
		jne    _037348_jump
		call   _040ce8_func
		test   %ax,%ax
		jne    _037348_jump
		call   _040d50_func
		test   %ax,%ax
		jne    _037348_jump
		call   _040db8_func
		test   %ax,%ax
		je     _03734f_jump

	_037348_jump:
		mov    $0x000001,%edx
		jmp    _037351_jump

	_03734f_jump:
		xor    %edx,%edx

	_037351_jump:
		call   _043354_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_03735c_case:
		mov    $_0c886c_data,%eax
		call   _03c210_func
		mov    _095fd1_data,%eax
		sar    $0x000018,%eax
		cmp    $0x000001,%eax
		jne    _03737d_jump
		call   _03c03c_func
		call   _03bfc4_func

	_03737d_jump:
		mov    $_0372f8_func,%eax
		call   _03c090_func
		mov    _095fd1_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03c284_jump
		call   _03c014_func
		jmp    _03c284_jump



_0373a4_func:
		push   %edx
		call   _040e8c_func
		call   _06bf98_func
		and    $0x00ffff,%eax
		je     _0373de_jump
		call   _040c80_func
		test   %ax,%ax
		jne    _0373de_jump
		call   _040ce8_func
		test   %ax,%ax
		jne    _0373de_jump
		call   _040d50_func
		test   %ax,%ax
		jne    _0373de_jump
		call   _040db8_func
		test   %ax,%ax
		je     _0373e5_jump

	_0373de_jump:
		mov    $0x000001,%edx
		jmp    _0373e7_jump

	_0373e5_jump:
		xor    %edx,%edx

	_0373e7_jump:
		call   _06c1bc_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_0373f0_case:
		mov    $_0c886c_data,%eax
		call   _03c210_func
		mov    _095fd1_data,%eax
		sar    $0x000018,%eax
		cmp    $0x000001,%eax
		jne    _037411_jump
		call   _03c03c_func
		call   _03bfc4_func

	_037411_jump:
		mov    $_0373a4_func,%eax
		call   _03c090_func
		mov    _095fd1_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03c284_jump
		call   _03c014_func
		jmp    _03c284_jump



_037438_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _040e8c_func
		mov    _0cdefc_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		xor    %edi,%edi
		call   _058160_func
		mov    %ax,%di
		test   %edi,%edi
		je     _037488_jump
		call   _040c80_func
		test   %ax,%ax
		jne    _037488_jump
		call   _040ce8_func
		test   %ax,%ax
		jne    _037488_jump
		call   _040d50_func
		test   %ax,%ax
		jne    _037488_jump
		call   _040db8_func
		test   %ax,%ax
		je     _03748f_jump

	_037488_jump:
		mov    $0x000001,%edx
		jmp    _037491_jump

	_03748f_jump:
		xor    %edx,%edx

	_037491_jump:
		call   _058428_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_03749c_case:
		mov    $_0c886c_data,%eax
		call   _03c210_func
		mov    _095fd1_data,%eax
		sar    $0x000018,%eax
		cmp    $0x000001,%eax
		jne    _0374bd_jump
		call   _03c03c_func
		call   _03bfc4_func

	_0374bd_jump:
		mov    $_037438_func,%eax
		call   _03c090_func
		mov    _095fd1_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03c284_jump
		call   _03c014_func
		jmp    _03c284_jump



_0374e4_func:
		push   %edx
		call   _040e8c_func
		call   _0741b0_func
		and    $0x00ffff,%eax
		je     _03751e_jump
		call   _040c80_func
		test   %ax,%ax
		jne    _03751e_jump
		call   _040ce8_func
		test   %ax,%ax
		jne    _03751e_jump
		call   _040d50_func
		test   %ax,%ax
		jne    _03751e_jump
		call   _040db8_func
		test   %ax,%ax
		je     _037525_jump

	_03751e_jump:
		mov    $0x000001,%edx
		jmp    _037527_jump

	_037525_jump:
		xor    %edx,%edx

	_037527_jump:
		call   _074298_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_037530_case:
		mov    $_0c886c_data,%eax
		call   _03c210_func
		mov    _095fd1_data,%eax
		sar    $0x000018,%eax
		cmp    $0x000001,%eax
		jne    _037551_jump
		call   _03c03c_func
		call   _03bfc4_func

	_037551_jump:
		mov    $_0374e4_func,%eax
		call   _03c090_func
		mov    _095fd1_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03c284_jump
		call   _03c014_func
		jmp    _03c284_jump



_037578_func:
		mov    _095fd1_data,%eax
		sar    $0x000018,%eax
		cmp    $0x000001,%eax
		jne    _037592_jump
		mov    $0x000006,%eax
		call   _064360_func
		add    $0x000002,%al
		ret    

	_037592_jump:
		mov    $0x000007,%eax
		call   _064360_func
		inc    %al
		ret    



_0375a0_func:
		mov    $0x00000a,%eax
		call   _064360_func
		inc    %al
		ret    



_0375b0_func:
		mov    $0x00000e,%eax
		call   _064360_func
		inc    %al
		ret    



_0375c0_func:
		mov    $0x000006,%eax
		call   _064360_func
		inc    %al
		ret    

_0375d0_switch:
		.long   _037682_case
		.long   _0376db_case
		.long   _03769d_case
		.long   _037772_case
		.long   _0376bb_case
		.long   _03771c_case
		.long   _03774c_case
		.long   _03770a_case


	_0375f0_jump:
		push   %esi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dl,(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		mov    $0x000001,%edx
		cmp    $0x000009,%eax
		jne    _037637_jump
		call   _037578_func
		mov    %al,0x000004(%esp)
		and    $0x0000ff,%eax
		cmp    $0x000002,%eax
		je     _037623_jump
		cmp    $0x000004,%eax
		jne    _03762a_jump

	_037623_jump:
		call   _0375a0_func
		jmp    _037634_jump

	_03762a_jump:
		cmp    $0x000006,%eax
		jne    _037637_jump
		call   _0375b0_func

	_037634_jump:
		mov    %al,(%esp)

	_037637_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		cmp    $0x000004,%eax
		jne    _03764b_jump
		movb   $0x000002,0x000004(%esp)

	_03764b_jump:
		movsbw _095fd4_data,%ax
		imul   %eax,%edx
		mov    (%esp),%al
		mov    %al,_0d7c8c_data
		mov    0x000004(%esp),%al
		mov    %al,_0d7c8d_data
		dec    %al
		cmp    $0x000007,%al
		ja     _037772_case
		mov    %edx,%esi
		and    $0x0000ff,%eax
		add    %edx,%esi
		jmp    *%cs:_0375d0_switch(,%eax,4)

	_037682_case:
		push   %ecx
		push   %ebx
		movswl %dx,%ebx
		mov    $0x000008,%edx
		mov    $0x000078,%ecx
		mov    %edx,%eax
		call   _038324_func
		add    $0x000008,%esp
		pop    %esi
		ret    

	_03769d_case:
		push   %ecx
		mov    $0x000014,%eax
		mov    $0x000190,%ecx
		push   %ebx
		movswl %dx,%ebx
		mov    $0x00000a,%edx
		call   _076b30_func
		add    $0x000008,%esp
		pop    %esi
		ret    

	_0376bb_case:
		push   %ecx
		push   %ebx
		mov    $0x000008,%edx
		mov    $0x000014,%eax
		push   $0x000032
		movswl %si,%ecx
		mov    $0x00003d,%ebx
		call   _0255e4_func
		add    $0x000008,%esp
		pop    %esi
		ret    

	_0376db_case:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x00000c,%eax
		je     _0376ea_jump
		cmp    $0x000064,%eax
		jne    _0376f4_jump

	_0376ea_jump:
		call   _0375a0_func
		mov    %al,_0d7c8c_data

	_0376f4_jump:
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0d7c8c_data,%al
		movswl %dx,%edx
		call   _0432b4_func
		add    $0x000008,%esp
		pop    %esi
		ret    

	_03770a_case:
		mov    $0x000016,%eax
		movswl %si,%edx
		call   _06be74_func
		add    $0x000008,%esp
		pop    %esi
		ret    

	_03771c_case:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x000010,%eax
		je     _03772b_jump
		cmp    $0x000064,%eax
		jne    _037735_jump

	_03772b_jump:
		call   _0375b0_func
		mov    %al,_0d7c8c_data

	_037735_jump:
		xor    %eax,%eax
		shl    $0x000002,%edx
		mov    _0d7c8c_data,%al
		movswl %dx,%edx
		call   _0580a8_func
		add    $0x000008,%esp
		pop    %esi
		ret    

	_03774c_case:
		mov    $0x0000a0,%eax
		push   %ecx
		shl    $0x000002,%edx
		push   %ebx
		movswl %dx,%ecx
		push   $0x0003e8
		mov    $0x000030,%ebx
		mov    $0x000064,%edx
		call   _0740a8_func
		add    $0x000008,%esp
		pop    %esi
		ret    

	_037772_case:
		xor    %al,%al
		add    $0x000008,%esp
		pop    %esi
		ret    



_03777c_func:
		movb   $0x000001,_095fd4_data
		and    $0x0000ff,%edx
		and    $0x0000ff,%eax
		jmp    _0375f0_jump



_037794_func:
		movb   $0x0000ff,_095fd4_data
		and    $0x0000ff,%edx
		and    $0x0000ff,%eax
		jmp    _0375f0_jump

_0377ac_switch:
		.long   _037174_case
		.long   _03735c_case
		.long   _037204_case
		.long   _0377e4_case
		.long   _0372b0_case
		.long   _03749c_case
		.long   _037530_case
		.long   _0373f0_case




_0377cc_func:
		mov    _0d7c8d_data,%al
		dec    %al
		cmp    $0x000007,%al
		ja     _0377e4_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0377ac_switch(,%eax,4)

	_0377e4_case:
		ret    

_0377e8_switch:
		.long   _0382f8_case
		.long   _043288_case
		.long   _076b04_case
		.long   _037820_case
		.long   _0255a8_case
		.long   _05806c_case
		.long   _07407c_case
		.long   _06be48_case




_037808_func:
		mov    _0d7c8d_data,%al
		dec    %al
		cmp    $0x000007,%al
		ja     _037820_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0377e8_switch(,%eax,4)

	_037820_case:
		ret    



_037824_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		xor    %ecx,%ecx
		mov    _095b0d_data,%cl
		cmp    $0x000001,%ecx
		jne    _03787c_jump
		xor    %bl,%bl
		jmp    _037871_jump

	_037842_jump:
		imul   $0x003e80,%ecx,%ecx
		mov    %bl,%ah
		mov    (%esp),%edi
		mov    $0x0003ce,%edx
		mov    $0x000004,%al
		out    %ax,(%dx)
		mov    %ebp,%esi
		add    %ecx,%edi
		mov    $0x003e80,%ecx
		inc    %bl
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_037871_jump:
		xor    %ecx,%ecx
		mov    %bl,%cl
		cmp    $0x000004,%ecx
		jl     _037842_jump
		jmp    _037895_jump

	_03787c_jump:
		mov    $0x00fa00,%ecx
		mov    %eax,%esi
		mov    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_037895_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0378a0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    %edx,%ebp
		xor    %ecx,%ecx
		mov    _095b0d_data,%cl
		cmp    $0x000001,%ecx
		jne    _0378fc_jump
		mov    $0x000001,%bl
		mov    %ebp,%edi
		xor    %bh,%bh
		jmp    _0378f1_jump

	_0378c2_jump:
		imul   $0x003e80,%ecx,%ecx
		mov    %bl,%ah
		mov    (%esp),%esi
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		add    %bl,%bl
		add    %ecx,%esi
		mov    $0x003e80,%ecx
		inc    %bh
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_0378f1_jump:
		xor    %ecx,%ecx
		mov    %bh,%cl
		cmp    $0x000004,%ecx
		jl     _0378c2_jump
		jmp    _037915_jump

	_0378fc_jump:
		mov    $0x00fa00,%ecx
		mov    %eax,%esi
		mov    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_037915_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_037920_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		mov    %esp,%eax
		call   _01630c_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _016349_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0cd9d0_data,%eax
		call   _01a168_func
		mov    0x00000c(%esp),%edx
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    (%esp),%eax
		call   _016349_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037984_jump:
		mov    $0x000001,%eax
		ret    



_03798c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0d7c8e_data,%bx
		mov    _0cdf00_data,%edx
		mov    _0ccfcc_data,%eax
		call   _037824_func
		mov    _0ccfd0_data,%edx
		mov    _0cdf00_data,%eax
		call   _0378a0_func
		call   _037920_func
		mov    $_037984_jump,%eax
		call   _03c090_func
		mov    _0c6964_data,%ah
		mov    $0x00000f,%ebx
		test   %ah,%ah
		je     _037aa1_jump
		mov    $0x00002a,%edi
		mov    $0x000036,%esi
		xor    %ecx,%ecx

	_0379e6_jump:
		mov    $0x00000f,%ebx
		mov    %cl,%dl

	_0379ed_jump:
		movswl %bx,%eax
		mov    %bx,_0d7c8e_data
		test   %eax,%eax
		je     _037a30_jump
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x000007,%eax
		jg     _037a30_jump
		call   _016fe8_func
		call   _016fd8_func
		mov    %esi,%eax
		call   _040a7c_func
		test   %al,%al
		je     _037a26_jump
		mov    %edi,%eax
		call   _040a7c_func
		test   %al,%al
		je     _037a26_jump
		inc    %dl

	_037a26_jump:
		mov    _0d7c8e_data,%bx
		dec    %ebx
		jmp    _0379ed_jump

	_037a30_jump:
		xor    %eax,%eax
		mov    %dl,%al
		mov    _0d7c8e_data,%bx
		cmp    $0x00000c,%eax
		jl     _037a42_jump
		mov    %cl,%dl

	_037a42_jump:
		mov    %bx,_0d7c8e_data
		test   %dl,%dl
		je     _037a8e_jump
		mov    _0d7c90_data,%dh
		xor    %eax,%eax
		xor    $0x000001,%dh
		mov    _095b0d_data,%al
		mov    %dh,_0d7c90_data
		test   %eax,%eax
		jne    _037a84_jump
		mov    _0ccfd0_data,%edx
		mov    _0cdf00_data,%eax
		call   _0378a0_func
		cmp    _0d7c90_data,%cl
		jne    _037a84_jump
		call   _037920_func

	_037a84_jump:
		mov    $_037984_jump,%eax
		call   _03c090_func

	_037a8e_jump:
		mov    _0d7c8e_data,%bx
		cmp    _0c6964_data,%cl
		jne    _0379e6_jump

	_037aa1_jump:
		mov    _0ccfd0_data,%edx
		mov    _0cdf00_data,%eax
		mov    %bx,_0d7c8e_data
		call   _0378a0_func
		mov    $_037984_jump,%eax
		call   _03c090_func
		mov    _0d7c8e_data,%bx
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_037ad0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %edx,%edx
		mov    _0c7968_data,%dl
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		mov    _0d7c90_data,%edx
		mov    _0d7c92_data,%di
		sar    $0x000010,%edx
		inc    %edi
		cmp    %eax,%edx
		jge    _037ba1_jump
		mov    $0x0000a0,%ebx
		mov    _0cdefc_data,%edx
		mov    _0cdf00_data,%eax
		mov    %di,_0d7c92_data
		call   _075f8c_func
		mov    $0x0000a0,%ebx
		mov    _0cdefc_data,%edx
		mov    _0cdf00_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		call   _075f8c_func
		mov    $0x000036,%eax
		call   _040a7c_func
		test   %al,%al
		je     _037b82_jump
		mov    $0x00002a,%eax
		call   _040a7c_func
		test   %al,%al
		je     _037b82_jump
		mov    _0d7c88_data,%ebx
		inc    %ebx
		mov    %ebx,_0d7c88_data
		cmp    $0x000005,%ebx
		jl     _037b8a_jump
		mov    _0d7c90_data,%bl
		xor    %esi,%esi
		xor    $0x000001,%bl
		mov    %esi,_0d7c88_data
		mov    %bl,_0d7c90_data
		jmp    _037b8a_jump

	_037b82_jump:
		xor    %edx,%edx
		mov    %edx,_0d7c88_data

	_037b8a_jump:
		cmpb   $0x000000,_0d7c90_data
		jne    _037df5_jump
		call   _037920_func
		jmp    _037df5_jump

	_037ba1_jump:
		jne    _037bc3_jump
		mov    %di,_0d7c92_data
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0d7c94_data
		xor    %edx,%edx
		mov    %ah,_0d7c90_data
		mov    %edx,_0d7c88_data

	_037bc3_jump:
		cmpb   $0x000000,_0d7c90_data
		jne    _037cd0_jump
		cmpl   $0x000014,_0d7c88_data
		jl     _037bfc_jump
		mov    $0x000036,%eax
		call   _040a7c_func
		test   %al,%al
		je     _037bfc_jump
		mov    $0x00002a,%eax
		call   _040a7c_func
		test   %al,%al
		je     _037bfc_jump
		movb   $0x000001,_0d7c90_data

	_037bfc_jump:
		mov    _0d7c92_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _037cc4_jump
		mov    _0cdefc_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _058160_func
		and    $0x00ffff,%eax
		mov    %eax,_0d7c88_data
		call   _058428_func
		call   _037920_func
		cmpl   $0x000000,_0d7c88_data
		jne    _037df5_jump
		negw   _0d7c8e_data
		call   _0375c0_func
		mov    _0d7c8c_data,%edx
		mov    %al,_0d7c8c_data
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		call   _057d0c_func
		mov    _0d7c8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _037df5_jump
		mov    $0x0000a0,%ebx
		mov    _0cdefc_data,%edx
		mov    _0cdf00_data,%eax
		call   _075f8c_func
		mov    $0x0000a0,%ebx
		mov    _0cdefc_data,%edx
		mov    _0cdf00_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		call   _075f8c_func
		call   _037920_func
		xor    %eax,%eax
		mov    _0c7968_data,%al
		mov    %ax,_0d7c94_data
		jmp    _037df5_jump

	_037cc4_jump:
		decw   _0d7c94_data
		jmp    _037df5_jump

	_037cd0_jump:
		cmpl   $0x000000,_0d7c88_data
		jne    _037ce5_jump
		mov    _0d7c8c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _037d24_jump

	_037ce5_jump:
		mov    _0cdefc_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _058160_func
		and    $0x00ffff,%eax
		mov    %eax,_0d7c88_data
		call   _058428_func
		cmpl   $0x000000,_0d7c88_data
		jne    _037df5_jump
		negw   _0d7c8e_data
		jmp    _037dd8_jump

	_037d24_jump:
		mov    $0x0000a0,%ebx
		mov    _0cdefc_data,%edx
		mov    _0cdf00_data,%eax
		call   _075f8c_func
		mov    $0x0000a0,%ebx
		mov    _0cdefc_data,%edx
		mov    _0cdf00_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		mov    $0x00fa00,%ecx
		call   _075f8c_func
		call   _016fe8_func
		call   _016fd8_func
		mov    _095b08_data,%edi
		mov    _0cdefc_data,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _037d7e_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_037d7e_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %dl,%dl

	_037d87_jump:
		mov    $0x000036,%eax
		call   _040a7c_func
		test   %al,%al
		je     _037da3_jump
		mov    $0x00002a,%eax
		call   _040a7c_func
		test   %al,%al
		jne    _037dab_jump

	_037da3_jump:
		cmp    _0c6964_data,%dl
		jne    _037d87_jump

	_037dab_jump:
		mov    _0c6964_data,%al
		xor    %ch,%ch
		xor    %edi,%edi
		mov    %ch,_0d7c90_data
		mov    %di,_0d7c94_data
		test   %al,%al
		je     _037df5_jump
		xor    %edi,%edi
		mov    $0xfffffffc,%eax
		mov    %edi,_0d7c88_data
		mov    %ax,_0d7c8e_data

	_037dd8_jump:
		call   _0375c0_func
		mov    _0d7c8c_data,%edx
		mov    %al,_0d7c8c_data
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		call   _057d0c_func

	_037df5_jump:
		cmpb   $0x000000,_0c6964_data
		jne    _037e5f_jump
		mov    $0x0000a0,%ebx
		mov    _0cdefc_data,%edx
		mov    _0cdf00_data,%eax
		call   _075f8c_func
		mov    $0x0000a0,%ebx
		mov    _0cdefc_data,%edx
		mov    _0cdf00_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		mov    $0x00fa00,%ecx
		call   _075f8c_func
		call   _016fe8_func
		call   _016fd8_func
		mov    _095b08_data,%edi
		mov    _0cdefc_data,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _037e58_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_037e58_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_037e5f_jump:
		cmpb   $0x000000,_0c6964_data
		sete   %al
		xor    %ah,%ah
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_037e74_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ah,%ah
		mov    _0ce841_data,%dl
		mov    %ah,_0d7c90_data
		test   %dl,%dl
		je     _037e8f_jump
		call   _06bafc_func

	_037e8f_jump:
		cmpb   $0x000000,_0c694c_data
		je     _037eb1_jump
		mov    $_0d7c98_data,%esi
		call   _012748_func
		call   _028930_func
		and    $0x0000ff,%eax
		call   _029c50_func

	_037eb1_jump:
		xor    %eax,%eax
		mov    _095b0d_data,%al
		test   %eax,%eax
		jne    _037f0e_jump
		call   _0375c0_func
		mov    $0xfffffffc,%edx
		mov    _0cdefc_data,%ebx
		mov    %al,_0d7c8c_data
		mov    %dx,_0d7c8e_data
		mov    $0xfffffffc,%edx
		and    $0x0000ff,%eax
		mov    %ebx,%ecx
		call   _0580a8_func
		test   %al,%al
		je     _037f0e_jump
		xor    %ebx,%ebx
		mov    $_037ad0_func,%eax
		mov    %bx,_0d7c92_data
		mov    %bx,_0d7c94_data
		call   _03c090_func
		call   _05806c_case
		jmp    _037f13_jump

	_037f0e_jump:
		call   _03798c_func

	_037f13_jump:
		cmpb   $0x000000,_0c694c_data
		je     _037f51_jump
		mov    $_0d7c9c_data,%esi
		call   _012748_func
		mov    _0d7c9c_data,%ebx
		mov    _0d7c98_data,%edx
		mov    _0c6954_data,%ecx
		sub    %edx,%ebx
		add    %ebx,%ecx
		mov    %ecx,_0c6954_data
		call   _028930_func
		and    $0x0000ff,%eax
		call   _029c78_func

	_037f51_jump:
		cmpb   $0x000000,_0ce841_data
		je     _037f5f_jump
		call   _06bb10_func

	_037f5f_jump:
		xor    %cl,%cl
		xor    %esi,%esi
		mov    %cl,_0c6964_data
		mov    %esi,_0ce8dc_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_037f80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    _0d7ca0_data,%ecx
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		add    %eax,%eax
		mov    0x00001c(%ecx),%ebp
		call   _077840_func
		mov    %eax,(%esp)
		test   %eax,%eax
		je     _0380a1_jump
		mov    0x000002(%ecx),%dx
		xor    %eax,%eax
		test   %dx,%dx
		jbe    _037fd6_jump

	_037fb5_jump:
		xor    %edx,%edx
		mov    %ax,%dx
		imul   $0x00006c,%edx,%ebx
		mov    (%esp),%edi
		add    %edx,%edx
		add    %edx,%edi
		mov    0x000034(%ebx,%ebp,1),%dx
		mov    %dx,(%edi)
		inc    %eax
		mov    0x000002(%ecx),%bx
		cmp    %bx,%ax
		jb     _037fb5_jump

	_037fd6_jump:
		xor    %edi,%edi
		mov    0x000002(%ecx),%ax
		mov    %edi,0x000008(%esp)
		test   %ax,%ax
		jbe    _03809a_jump
		jmp    _038085_jump

	_037fee_jump:
		inc    %eax
		cmp    0x000002(%ecx),%ax

	_037ff3_jump:
		jae    _03800f_jump
		xor    %edx,%edx
		mov    %ax,%dx
		mov    (%esp),%edi
		add    %edx,%edx
		add    %edi,%edx
		mov    (%edx),%di
		cmp    %di,%bx
		jge    _037fee_jump
		mov    %edi,%ebx
		mov    %eax,%esi
		jmp    _037fee_jump

	_03800f_jump:
		mov    0x000008(%esp),%ebx
		cmp    %bx,%si
		je     _038073_jump
		xor    %edx,%edx
		mov    %bx,%dx
		imul   $0x00006c,%edx,%ebx
		mov    0x000068(%ebx,%ebp,1),%ax
		mov    %eax,0x00000c(%esp)
		xor    %eax,%eax
		mov    %si,%ax
		mov    %eax,0x000004(%esp)
		imul   $0x00006c,%eax,%eax
		mov    0x000068(%eax,%ebp,1),%di
		mov    %di,0x000068(%ebx,%ebp,1)
		mov    0x00000c(%esp),%ebx
		mov    %bx,0x000068(%eax,%ebp,1)
		lea    0x000000(,%edx,2),%eax
		add    (%esp),%eax
		mov    (%eax),%dx
		mov    %edx,0x00000c(%esp)
		mov    0x000004(%esp),%edx
		mov    (%esp),%ebx
		add    %edx,%edx
		mov    (%edx,%ebx,1),%bx
		mov    %bx,(%eax)
		add    (%esp),%edx
		mov    0x00000c(%esp),%eax
		mov    %ax,(%edx)

	_038073_jump:
		mov    0x000008(%esp),%edx
		inc    %edx
		mov    0x000002(%ecx),%bx
		mov    %edx,0x000008(%esp)
		cmp    %bx,%dx
		jae    _03809a_jump

	_038085_jump:
		mov    0x000008(%esp),%eax
		mov    0x000002(%ecx),%di
		mov    $0xffff8000,%ebx
		cmp    %di,%ax
		jmp    _037ff3_jump

	_03809a_jump:
		mov    %esp,%eax
		call   _077858_func

	_0380a1_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0380ac_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x000140,%eax
		mov    _0d7ca0_data,%edi
		mov    %eax,%edx
		movzbl (%edi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %al,0x00000c(%esp)
		mov    $0x0000c8,%eax
		mov    %eax,%edx
		movzbl 0x000001(%edi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00001c(%edi),%ecx
		mov    %al,0x000008(%esp)
		call   _010010_func
		movw   $0x000000,0x000004(%edi)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _038104_jump
		mov    %ebx,%eax

	_038104_jump:
		movswl %si,%ebx
		mov    %ax,0x000006(%edi)
		test   %ebx,%ebx
		jl     _03811c_jump
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _03811a_jump
		mov    %ebx,%eax

	_03811a_jump:
		jmp    _03812b_jump

	_03811c_jump:
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _038129_jump
		mov    %ebx,%eax

	_038129_jump:
		neg    %eax

	_03812b_jump:
		mov    0x000002(%edi),%dx
		xor    %esi,%esi
		mov    %ax,0x000008(%edi)
		test   %dx,%dx
		jbe    _0382e8_jump
		jmp    _038258_jump

	_038143_jump:
		mov    0x000018(%edi),%eax
		mov    %eax,0x00003c(%ecx)
		subw   $0x0000a0,0x000004(%esp)

	_038150_jump:
		mov    0x000004(%esp),%al
		mov    %al,0x000062(%ecx)
		mov    %al,0x000060(%ecx)
		add    0x00000c(%esp),%al
		dec    %al
		mov    %al,0x000066(%ecx)
		mov    $0x00000a,%ebx
		mov    %al,0x000064(%ecx)
		mov    0x000008(%esp),%al
		mov    %dl,0x000067(%ecx)
		add    %dl,%al
		mov    %dl,0x000061(%ecx)
		dec    %al
		xor    %edx,%edx
		mov    %al,0x000065(%ecx)
		mov    %si,%dx
		mov    %al,0x000063(%ecx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000005,%edx
		jge    _0381a7_jump
		call   _079682_func
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %dx,0x000030(%ecx)
		jmp    _0381bf_jump

	_0381a7_jump:
		call   _079682_func
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000002,%edx
		mov    %dx,0x000030(%ecx)

	_0381bf_jump:
		call   _079682_func
		mov    %eax,%edx
		mov    $0x000008,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000006,%edx
		mov    %dx,0x000032(%ecx)
		call   _079682_func
		mov    %eax,%edx
		mov    $0x000005,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000002,%edx
		mov    %dx,0x000034(%ecx)
		call   _079682_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x000002,%edx
		mov    %dl,0x000039(%ecx)
		call   _079682_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x000002,%edx
		mov    %dl,0x00003a(%ecx)
		call   _079682_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000039(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		mov    %al,0x000036(%ecx)
		mov    0x00003a(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		add    $0x000002,%edx
		mov    %dl,0x00003b(%ecx)
		mov    %al,0x000037(%ecx)
		mov    0x00003b(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		mov    %si,0x000068(%ecx)
		mov    %al,0x000038(%ecx)
		inc    %esi
		mov    0x000002(%edi),%bx
		add    $0x00006c,%ecx
		cmp    %bx,%si
		jae    _0382e8_jump

	_038258_jump:
		xor    %ebx,%ebx
		mov    %si,%bx
		movzbl (%edi),%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   %eax,%edx
		mov    %edx,(%esp)
		mov    (%esp),%edx
		movzwl %dx,%ebp
		mov    %ebp,0x00000c(%ecx)
		add    %ebp,%eax
		mov    %ebp,(%ecx)
		dec    %eax
		mov    %eax,0x000024(%ecx)
		mov    %dx,0x000004(%esp)
		mov    %eax,0x000018(%ecx)
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    (%edi),%al
		sar    $0x00001f,%edx
		mov    %eax,(%esp)
		mov    %ebx,%eax
		idivl  (%esp)
		xor    %ebx,%ebx
		mov    0x000008(%esp),%bl
		imul   %ebx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		movl   $0x000100,0x00002c(%ecx)
		mov    %dx,%ax
		mov    %eax,0x000028(%ecx)
		add    %eax,%ebx
		mov    %eax,0x000004(%ecx)
		dec    %ebx
		mov    %ebx,0x00001c(%ecx)
		mov    0x00002c(%ecx),%eax
		mov    %ebx,0x000010(%ecx)
		mov    %eax,0x000020(%ecx)
		mov    %eax,0x000014(%ecx)
		mov    %eax,0x000008(%ecx)
		cmp    $0x0000a0,%ebp
		jge    _038143_jump
		mov    0x000014(%edi),%eax
		mov    %eax,0x00003c(%ecx)
		jmp    _038150_jump

	_0382e8_jump:
		call   _037f80_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx

	_0382f5_jump:
		ret    

	_0382f8_case:
		mov    _0d7ca0_data,%eax
		test   %eax,%eax
		je     _0382f5_jump
		cmpl   $0x000000,0x00001c(%eax)
		je     _03830f_jump
		add    $0x00001c,%eax
		call   _077858_func

	_03830f_jump:
		cmpl   $0x000000,_0d7ca0_data
		je     _0382f5_jump
		mov    $_0d7ca0_data,%eax
		jmp    _077858_func



_038324_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,(%esp)
		mov    %edx,%edi
		mov    %bx,0x000004(%esp)
		mov    %ecx,0x000008(%esp)
		mov    0x000018(%esp),%edx
		xor    %cl,%cl
		test   %edx,%edx
		je     _0383e3_jump
		cmpl   $0x000000,0x00001c(%esp)
		je     _0383e3_jump
		mov    $0x000020,%eax
		call   _077840_func
		mov    %eax,%edx
		mov    %eax,_0d7ca0_data
		test   %eax,%eax
		je     _0383e3_jump
		xor    %ebx,%ebx
		mov    %eax,%esi
		mov    (%esp),%bx
		mov    $0x000002,%eax
		cmp    %ebx,%eax
		jge    _03837c_jump
		mov    %ebx,%eax

	_03837c_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    $0x000001,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _03838e_jump
		mov    %ebx,%eax

	_03838e_jump:
		xor    %bh,%bh
		mov    %al,0x000001(%edx)
		mov    %al,%bl
		xor    %ah,%ah
		mov    (%edx),%al
		imul   %ebx,%eax
		mov    %ax,0x000002(%edx)
		mov    0x000018(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%edx)
		mov    0x00001c(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		call   _077840_func
		mov    %eax,0x00001c(%edx)
		test   %eax,%eax
		je     _0383e3_jump
		mov    _0cdf00_data,%eax
		mov    %eax,0x000014(%edx)
		add    $0x00c800,%eax
		mov    $0x000001,%cl
		mov    %eax,0x000018(%edx)

	_0383e3_jump:
		test   %cl,%cl
		je     _038421_jump
		mov    $0x0000a0,%ebx
		mov    0x000014(%esi),%edx
		mov    0x00000c(%esi),%eax
		call   _075f40_func
		mov    $0x0000a0,%ebx
		mov    0x00000c(%esi),%eax
		mov    0x000018(%esi),%edx
		add    $0x0000a0,%eax
		call   _075f40_func
		xor    %edx,%edx
		mov    0x000002(%esp),%eax
		mov    0x000008(%esp),%dx
		sar    $0x000010,%eax
		call   _0380ac_func
		jmp    _038426_jump

	_038421_jump:
		call   _0382f8_case

	_038426_jump:
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_038430_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		xor    %edx,%edx
		mov    _0d7ca0_data,%esi
		mov    %edx,0x000024(%esp)
		mov    0x000002(%esi),%bx
		mov    0x00001c(%esi),%ecx
		test   %bx,%bx
		jbe    _038723_jump
		jmp    _0384ab_jump

	_038457_jump:
		mov    0x000006(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _038463_jump
		neg    %eax

	_038463_jump:
		mulb   0x000039(%ecx)
		add    %al,0x000036(%ecx)
		mov    0x000006(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _038475_jump
		neg    %eax

	_038475_jump:
		mulb   0x00003a(%ecx)
		add    %al,0x000037(%ecx)
		mov    0x000006(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _038487_jump
		neg    %eax

	_038487_jump:
		mulb   0x00003b(%ecx)
		mov    0x000038(%ecx),%dh
		add    $0x00006c,%ecx
		add    %al,%dh
		mov    0x000024(%esp),%edi
		mov    %dh,-0x000034(%ecx)
		inc    %edi
		mov    0x000002(%esi),%dx
		mov    %edi,0x000024(%esp)
		cmp    %dx,%di
		jae    _038723_jump

	_0384ab_jump:
		mov    (%ecx),%edx
		mov    0x000018(%ecx),%ebx
		add    %ebx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%ecx),%edi
		mov    0x000004(%ecx),%edx
		add    %edi,%edx
		mov    %eax,0x000018(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000020(%ecx),%ebp
		mov    0x000008(%ecx),%edx
		add    %ebp,%edx
		mov    %eax,0x000010(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %bl,%bl
		mov    %bl,0x00002c(%esp)
		mov    %bl,0x000028(%esp)
		mov    %eax,0x000014(%esp)
		jmp    _03870d_jump

	_0384f8_jump:
		xor    %eax,%eax
		mov    0x00002c(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    0x000032(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    0x000008(%ecx,%eax,1),%edi
		add    %ebx,%edi
		inc    %dl
		mov    %edi,0x000008(%ecx,%eax,1)

	_038513_jump:
		mov    0x000006(%esi),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    %dl,%bl
		test   %eax,%eax
		jge    _038523_jump
		neg    %eax

	_038523_jump:
		cmp    %eax,%ebx
		jge    _03855a_jump
		xor    %eax,%eax
		mov    0x00002c(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    0x00002e(%ecx),%ebx
		sar    $0x000010,%ebx
		add    %ebx,(%ecx,%eax,1)
		mov    0x000030(%ecx),%ebx
		mov    0x000004(%ecx,%eax,1),%edi
		sar    $0x000010,%ebx
		add    %ebx,%edi
		mov    0x000008(%ecx,%eax,1),%ebp
		mov    %edi,0x000004(%ecx,%eax,1)
		cmp    $0x000032,%ebp
		jge    _0384f8_jump
		movw   $0x000000,0x000034(%ecx)
		jmp    _0384f8_jump

	_03855a_jump:
		xor    %eax,%eax
		mov    0x00002c(%esp),%al
		imul   $0x00000c,%eax,%eax
		lea    (%eax,%ecx,1),%edi
		mov    0x000018(%esp),%edx
		mov    (%edi),%eax
		mov    0x000004(%edi),%ebp
		sub    %edx,%eax
		mov    0x000008(%edi),%edi
		mov    %eax,0x00000c(%esp)
		mov    0x000014(%esp),%eax
		mov    0x000010(%esp),%ebx
		sub    %eax,%edi
		xor    %eax,%eax
		sub    %ebx,%ebp
		mov    0x000036(%ecx),%al
		lea    0x00001c(%esp),%ebx
		add    %eax,%eax
		lea    0x000020(%esp),%edx
		cwtl   
		call   _055868_func
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00000c(%esp),%edx
		imul   %eax,%edx
		mov    %edx,0x000008(%esp)
		mov    %ebp,%edx
		imul   %ebx,%edx
		imul   %eax,%ebp
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		sub    0x000004(%esp),%edx
		mov    %edx,(%esp)
		imul   0x00000c(%esp),%ebx
		mov    (%esp),%eax
		sar    $0x000008,%eax
		mov    %eax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x000037(%ecx),%al
		add    %eax,%eax
		cwtl   
		lea    0x000020(%esp),%edx
		add    %ebx,%ebp
		lea    0x00001c(%esp),%ebx
		call   _055868_func
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %edi,%edx
		imul   %ebx,%edx
		imul   %eax,%edi
		mov    %edx,0x000008(%esp)
		mov    0x00000c(%esp),%edx
		imul   %eax,%edx
		imul   0x00000c(%esp),%ebx
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		add    0x000004(%esp),%edx
		mov    %edx,%eax
		sar    $0x000008,%eax
		mov    %edx,(%esp)
		mov    %eax,0x00000c(%esp)
		xor    %eax,%eax
		sub    %ebx,%edi
		mov    0x000038(%ecx),%al
		lea    0x00001c(%esp),%ebx
		add    %eax,%eax
		lea    0x000020(%esp),%edx
		cwtl   
		call   _055868_func
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sar    $0x000008,%edi
		mov    %edi,%edx
		imul   %ebx,%edx
		imul   %eax,%edi
		sar    $0x000008,%ebp
		imul   %ebp,%ebx
		mov    %edx,0x000004(%esp)
		mov    %ebp,%edx
		imul   %eax,%edx
		mov    %edx,0x000008(%esp)
		mov    0x000004(%esp),%edx
		sub    %ebx,%edi
		add    0x000008(%esp),%edx
		sar    $0x000008,%edi
		mov    %edx,%ebp
		mov    0x000014(%esp),%edx
		sar    $0x000008,%ebp
		add    %edx,%edi
		je     _0386e6_jump
		mov    0x00000c(%esp),%edx
		shl    $0x000008,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %ebp,%edx
		shl    $0x000008,%edx
		mov    %eax,0x00000c(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebp

	_0386e6_jump:
		mov    0x00000c(%esp),%edx
		mov    0x000018(%esp),%ebx
		xor    %eax,%eax
		mov    0x000010(%esp),%edi
		mov    0x000028(%esp),%al
		add    %ebx,%edx
		add    %edi,%ebp
		mov    %edx,0x000040(%ecx,%eax,4)
		mov    %ebp,0x000044(%ecx,%eax,4)
		incb   0x00002c(%esp)
		addb   $0x000002,0x000028(%esp)

	_03870d_jump:
		xor    %eax,%eax
		mov    0x00002c(%esp),%al
		cmp    $0x000004,%eax
		jge    _038457_jump
		xor    %dl,%dl
		jmp    _038513_jump

	_038723_jump:
		xor    %edx,%edx
		mov    0x000004(%esi),%dx
		cmp    $0x000014,%edx
		jle    _03876e_jump
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _03876e_jump
		mov    0x00001c(%esi),%ecx
		mov    0x000002(%esi),%bx
		xor    %edx,%edx
		test   %bx,%bx
		jbe    _03876e_jump

	_03874c_jump:
		xor    %eax,%eax
		mov    %dx,%ax
		imul   $0x00006c,%eax,%eax
		lea    (%ecx,%eax,1),%ebx
		mov    0x000006(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _038763_jump
		neg    %eax

	_038763_jump:
		add    %ax,0x000032(%ebx)
		inc    %edx
		cmp    0x000002(%esi),%dx
		jb     _03874c_jump

	_03876e_jump:
		mov    0x000006(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _03877a_jump
		neg    %eax

	_03877a_jump:
		mov    0x000004(%esi),%dx
		add    %eax,%edx
		mov    0x000006(%esi),%bx
		mov    %dx,0x000004(%esi)
		cmp    %bx,%dx
		jbe    _038793_jump
		movw   $0x000000,0x000004(%esi)

	_038793_jump:
		mov    0x000004(%esi),%ax
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0387a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0d7ca0_data,%ecx
		mov    0x00001c(%ecx),%edi
		xor    %ebx,%ebx
		mov    %edi,%edx
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		cmp    %eax,%ebx
		jl     _0387c6_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0387c6_jump:
		xor    %eax,%eax
		mov    0x000068(%edx),%ax
		imul   $0x00006c,%eax,%eax
		add    %edi,%eax
		lea    0x00003c(%eax),%esi
		add    $0x00006c,%edx
		mov    0x000010(%ecx),%eax
		inc    %ebx
		call   _010045_func
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		cmp    %eax,%ebx
		jl     _0387c6_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0387f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		jmp    _038802_jump

	_0387f9_jump:
		xor    %ah,%ah
		mov    %ah,_0c33cb_data(%edx)

	_038801_jump:
		inc    %esi

	_038802_jump:
		movswl %si,%edx
		cmp    $0x000009,%edx
		jg     _038878_jump
		imul   $0x0000d8,%edx,%edx
		mov    $_0c32f6_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _0387f9_jump
		mov    $0x000002,%cl
		mov    $0x0000bc,%edi
		mov    %cl,_0c33ca_data(%edx)
		xor    %al,%al
		mov    %di,_0c33c8_data(%edx)
		mov    %al,_0c33cb_data(%edx)
		mov    %al,_0c33cc_data(%edx)
		movw   $0x000096,_0c33c6_data(%edx)
		mov    $0x000005,%ch
		mov    %ebx,%eax
		mov    %ch,_0c33cd_data(%edx)
		call   _01eeb0_func
		mov    _0c33be_data(%edx),%bx
		mov    %bx,_0c33c6_data(%edx)
		movb   $0x000020,_0c32f6_data(%edx)
		jmp    _038801_jump

	_038878_jump:
		mov    $0x0000ff,%bh
		mov    %bh,_0c32ee_data
		mov    %bh,_0c32ef_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03888c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1b04_data,%edx
		mov    _0c1b08_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _0388b3_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0388a7_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _03890e_jump

	_0388b3_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x0000ee,%ebx
		jne    _0388a7_jump
		mov    0x000081(%edx),%bl
		test   $0x000004,%bl
		jne    _0388a7_jump
		mov    %bl,%bh
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%edx)
		call   _01f584_func
		movw   $0x000008,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		movb   $0x000000,0x00006b(%edx)
		mov    0x000081(%edx),%cl
		mov    0x000034(%edx),%ax
		or     $0x000008,%cl
		mov    %ax,_0c32f2_data
		mov    %cl,0x000081(%edx)

	_03890e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038914_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0000ff,%ah
		mov    _0cdae8_data,%dl
		mov    %ah,_0c32ee_data
		test   %dl,%dl
		jne    _038935_jump
		mov    %dl,_0c6941_data

	_038935_jump:
		xor    %bl,%bl
		mov    %bl,_0c32f4_data
		call   _01ed50_func
		mov    _0c24f2_data,%si
		cmp    $0x000002,%si
		jb     _0391c6_jump
		jbe    _038ff1_jump
		cmp    $0x000003,%si
		je     _0391b3_jump
		jmp    _0391d0_jump

	_038968_jump:
		mov    $0x000001,%ah
		mov    $_0c32f6_data,%edi
		mov    _0cd800_data,%esi
		mov    %ah,_0c32f4_data
		push   %edi

	_03897c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038994_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03897c_jump

	_038994_jump:
		pop    %edi
		mov    $_0c33ce_data,%edi
		mov    _0cd804_data,%esi
		push   %edi

	_0389a1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0389b9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0389a1_jump

	_0389b9_jump:
		pop    %edi
		mov    $_0c34a6_data,%edi
		mov    _0cd808_data,%esi
		push   %edi

	_0389c6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0389de_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0389c6_jump

	_0389de_jump:
		pop    %edi
		mov    $_0c357e_data,%edi
		mov    _0cd80c_data,%esi
		push   %edi

	_0389eb_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038a03_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0389eb_jump

	_038a03_jump:
		pop    %edi
		mov    $_0c3656_data,%edi
		mov    _0cd810_data,%esi
		push   %edi

	_038a10_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038a28_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038a10_jump

	_038a28_jump:
		pop    %edi
		mov    $_0c372e_data,%edi
		mov    _0cd814_data,%esi
		push   %edi

	_038a35_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038a4d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038a35_jump

	_038a4d_jump:
		pop    %edi
		mov    $_0c3806_data,%edi
		mov    _0cd818_data,%esi
		push   %edi

	_038a5a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038a72_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038a5a_jump

	_038a72_jump:
		pop    %edi
		mov    $_0c38de_data,%edi
		mov    _0cd81c_data,%esi
		push   %edi

	_038a7f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038a97_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038a7f_jump

	_038a97_jump:
		pop    %edi
		mov    $_0c39b6_data,%edi
		mov    _0cd820_data,%esi
		push   %edi

	_038aa4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038abc_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038aa4_jump

	_038abc_jump:
		pop    %edi
		mov    $_0c3a8e_data,%edi
		mov    _0cd824_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_038ace_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038ae6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038ace_jump

	_038ae6_jump:
		pop    %edi
		mov    _0cd01c_data,%edx
		mov    $_0c38de_data,%eax
		sar    $0x000010,%edx
		call   _01f130_func
		jmp    _0391d0_jump

	_038aff_jump:
		mov    $0x000001,%al
		mov    $_0c32f6_data,%edi
		mov    _0cd828_data,%esi
		mov    %al,_0c32f4_data
		push   %edi

	_038b12_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038b2a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038b12_jump

	_038b2a_jump:
		pop    %edi
		mov    $_0c33ce_data,%edi
		mov    _0cd82c_data,%esi
		push   %edi

	_038b37_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038b4f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038b37_jump

	_038b4f_jump:
		pop    %edi
		mov    $_0c34a6_data,%edi
		mov    _0cd830_data,%esi
		push   %edi

	_038b5c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038b74_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038b5c_jump

	_038b74_jump:
		pop    %edi
		mov    $_0c357e_data,%edi
		mov    _0cd834_data,%esi
		push   %edi

	_038b81_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038b99_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038b81_jump

	_038b99_jump:
		pop    %edi
		mov    $_0c3656_data,%edi
		mov    _0cd838_data,%esi
		push   %edi

	_038ba6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038bbe_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038ba6_jump

	_038bbe_jump:
		pop    %edi
		mov    $_0c372e_data,%edi
		mov    _0cd83c_data,%esi
		push   %edi

	_038bcb_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038be3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038bcb_jump

	_038be3_jump:
		pop    %edi
		mov    $_0c3806_data,%edi
		mov    _0cd840_data,%esi
		push   %edi

	_038bf0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038c08_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038bf0_jump

	_038c08_jump:
		pop    %edi
		mov    $_0c38de_data,%edi
		mov    _0cd844_data,%esi
		push   %edi

	_038c15_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038c2d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038c15_jump

	_038c2d_jump:
		pop    %edi
		mov    $_0c39b6_data,%edi
		mov    _0cd848_data,%esi
		push   %edi

	_038c3a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038c52_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038c3a_jump

	_038c52_jump:
		pop    %edi
		mov    $_0c3a8e_data,%edi
		mov    _0cd84c_data,%esi
		push   %edi

	_038c5f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038c77_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038c5f_jump

	_038c77_jump:
		pop    %edi
		jmp    _0391d0_jump

	_038c7d_jump:
		mov    $0x000001,%ch
		mov    $_0c32f6_data,%edi
		mov    _0cd850_data,%esi
		mov    %ch,_0c32f4_data
		push   %edi

	_038c91_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038ca9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038c91_jump

	_038ca9_jump:
		pop    %edi
		mov    $_0c33ce_data,%edi
		mov    _0cd854_data,%esi
		push   %edi

	_038cb6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038cce_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038cb6_jump

	_038cce_jump:
		pop    %edi
		mov    $_0c34a6_data,%edi
		mov    _0cd858_data,%esi
		push   %edi

	_038cdb_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038cf3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038cdb_jump

	_038cf3_jump:
		pop    %edi
		mov    $_0c357e_data,%edi
		mov    _0cd85c_data,%esi
		push   %edi

	_038d00_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038d18_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038d00_jump

	_038d18_jump:
		pop    %edi
		mov    $_0c3656_data,%edi
		mov    _0cd860_data,%esi
		push   %edi

	_038d25_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038d3d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038d25_jump

	_038d3d_jump:
		pop    %edi
		mov    $_0c372e_data,%edi
		mov    _0cd864_data,%esi
		push   %edi

	_038d4a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038d62_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038d4a_jump

	_038d62_jump:
		pop    %edi
		mov    $_0c3806_data,%edi
		mov    _0cd868_data,%esi
		push   %edi

	_038d6f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038d87_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038d6f_jump

	_038d87_jump:
		pop    %edi
		mov    $_0c38de_data,%edi
		mov    _0cd86c_data,%esi
		push   %edi

	_038d94_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038dac_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038d94_jump

	_038dac_jump:
		pop    %edi
		mov    $_0c39b6_data,%edi
		mov    _0cd870_data,%esi
		push   %edi

	_038db9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038dd1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038db9_jump

	_038dd1_jump:
		pop    %edi
		mov    $_0c3a8e_data,%edi
		mov    _0cd874_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_038de3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038dfb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038de3_jump

	_038dfb_jump:
		pop    %edi
		mov    _0cd01c_data,%edx
		mov    $_0c39b6_data,%eax
		sar    $0x000010,%edx
		call   _01f130_func
		jmp    _0391d0_jump

	_038e14_jump:
		mov    _0c24f0_data,%si
		cmp    $0x000008,%si
		jb     _038e36_jump
		jbe    _038aff_jump
		cmp    $0x000011,%si
		je     _038c7d_jump
		jmp    _0391d0_jump

	_038e36_jump:
		cmp    $0x000003,%si
		je     _038968_jump
		jmp    _0391d0_jump

	_038e45_jump:
		mov    $0x000001,%cl
		mov    $_0c32f6_data,%edi
		mov    _0cd878_data,%esi
		mov    %cl,_0c32f4_data
		push   %edi

	_038e59_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038e71_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038e59_jump

	_038e71_jump:
		pop    %edi
		mov    $_0c33ce_data,%edi
		mov    _0cd87c_data,%esi
		push   %edi

	_038e7e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038e96_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038e7e_jump

	_038e96_jump:
		pop    %edi
		mov    $_0c34a6_data,%edi
		mov    _0cd880_data,%esi
		push   %edi

	_038ea3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038ebb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038ea3_jump

	_038ebb_jump:
		pop    %edi
		mov    $_0c357e_data,%edi
		mov    _0cd884_data,%esi
		push   %edi

	_038ec8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038ee0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038ec8_jump

	_038ee0_jump:
		pop    %edi
		mov    $_0c3656_data,%edi
		mov    _0cd888_data,%esi
		push   %edi

	_038eed_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038f05_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038eed_jump

	_038f05_jump:
		pop    %edi
		mov    $_0c372e_data,%edi
		mov    _0cd88c_data,%esi
		push   %edi

	_038f12_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038f2a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038f12_jump

	_038f2a_jump:
		pop    %edi
		mov    $_0c3806_data,%edi
		mov    _0cd890_data,%esi
		push   %edi

	_038f37_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038f4f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038f37_jump

	_038f4f_jump:
		pop    %edi
		mov    $_0c38de_data,%edi
		mov    _0cd894_data,%esi
		push   %edi

	_038f5c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038f74_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038f5c_jump

	_038f74_jump:
		pop    %edi
		mov    $_0c39b6_data,%edi
		mov    _0cd898_data,%esi
		push   %edi

	_038f81_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038f99_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038f81_jump

	_038f99_jump:
		pop    %edi
		mov    $_0c3a8e_data,%edi
		mov    _0cd89c_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_038fab_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038fc3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038fab_jump

	_038fc3_jump:
		pop    %edi
		mov    _0cd01a_data,%edx
		mov    $_0c39b6_data,%eax
		sar    $0x000010,%edx
		call   _01f130_func
		mov    $0x0000ff,%ebx
		mov    _0cd01a_data,%edx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01f130_func
		jmp    _0391d0_jump

	_038ff1_jump:
		mov    _0c24f0_data,%dx
		cmp    $0x00000b,%dx
		je     _038e45_jump
		jmp    _0391d0_jump

	_039007_jump:
		mov    $0x000001,%bh
		mov    $_0c32f6_data,%edi
		mov    _0cd8a0_data,%esi
		mov    %bh,_0c32f4_data
		push   %edi

	_03901b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039033_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03901b_jump

	_039033_jump:
		pop    %edi
		mov    $_0c33ce_data,%edi
		mov    _0cd8a4_data,%esi
		push   %edi

	_039040_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039058_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039040_jump

	_039058_jump:
		pop    %edi
		mov    $_0c34a6_data,%edi
		mov    _0cd8a8_data,%esi
		push   %edi

	_039065_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03907d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039065_jump

	_03907d_jump:
		pop    %edi
		mov    $_0c357e_data,%edi
		mov    _0cd8ac_data,%esi
		push   %edi

	_03908a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0390a2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03908a_jump

	_0390a2_jump:
		pop    %edi
		mov    $_0c3656_data,%edi
		mov    _0cd8b0_data,%esi
		push   %edi

	_0390af_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0390c7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0390af_jump

	_0390c7_jump:
		pop    %edi
		mov    $_0c372e_data,%edi
		mov    _0cd8b4_data,%esi
		push   %edi

	_0390d4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0390ec_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0390d4_jump

	_0390ec_jump:
		pop    %edi
		mov    $_0c3806_data,%edi
		mov    _0cd8b8_data,%esi
		push   %edi

	_0390f9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039111_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0390f9_jump

	_039111_jump:
		pop    %edi
		mov    $_0c38de_data,%edi
		mov    _0cd8bc_data,%esi
		push   %edi

	_03911e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039136_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03911e_jump

	_039136_jump:
		pop    %edi
		mov    $_0c39b6_data,%edi
		mov    _0cd8c0_data,%esi
		push   %edi

	_039143_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03915b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _039143_jump

	_03915b_jump:
		pop    %edi
		mov    $_0c3a8e_data,%edi
		mov    _0cd8c4_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_03916d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _039185_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03916d_jump

	_039185_jump:
		pop    %edi
		mov    _0cd020_data,%edx
		mov    $_0c38de_data,%eax
		sar    $0x000010,%edx
		call   _01f130_func
		mov    $0x0000ff,%ebx
		mov    _0cd020_data,%edx
		mov    $_0c39b6_data,%eax
		sar    $0x000010,%edx
		call   _01f130_func
		jmp    _0391d0_jump

	_0391b3_jump:
		mov    _0c24f0_data,%dx
		cmp    $0x00000b,%dx
		je     _039007_jump
		jmp    _0391d0_jump

	_0391c6_jump:
		cmp    $0x000001,%si
		je     _038e14_jump

	_0391d0_jump:
		cmpb   $0x000000,_0c32f4_data
		je     _0391e3_jump
		call   _0387f0_func
		call   _03888c_func

	_0391e3_jump:
		pop    %edi
		pop    %esi

	_0391e5_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0391ec_func:
		push   %ebx
		xor    %ebx,%ebx
		movswl %dx,%edx
		mov    0x00007f(%eax),%bl
		cmp    %edx,%ebx
		jge    _039202_jump
		mov    %bl,%dl
		inc    %dl
		mov    %dl,0x00007f(%eax)
		pop    %ebx
		ret    

	_039202_jump:
		movb   $0x000000,0x00007f(%eax)
		incb   _0c32ee_data
		pop    %ebx
		ret    

_039210_switch:
		.long   _03923d_case
		.long   _039248_case
		.long   _0392a7_case
		.long   _0392d6_case
		.long   _0392ff_case




_039224_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x00007d(%eax),%al
		cmp    $0x000004,%al
		ja     _03923d_case
		and    $0x0000ff,%eax
		jmp    *%cs:_039210_switch(,%eax,4)

	_03923d_case:
		movb   $0x0000ff,_0c32ee_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_039248_case:
		mov    $0x000064,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _0391ec_func
		mov    _0c32ee_data,%bl
		cmp    $0x000005,%ebx
		je     _039285_jump
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		cmpb   $0x000000,_0c32f6_data(,%eax,8)
		jne    _0391e5_jump
		test   %ebx,%ebx
		jl     _0391e5_jump

	_039285_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _058bb4_func
		movb   $0x000000,0x00007d(%ecx)
		mov    $0x0000ff,%dh
		movb   $0x000000,0x00007f(%ecx)
		mov    %dh,_0c32ee_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0392a7_case:
		mov    $0x00006e,%edx
		mov    %ecx,%eax
		call   _0391ec_func
		xor    %eax,%eax
		mov    _0c32ee_data,%al
		cmp    $0x000007,%eax
		jne    _0391e5_jump
		movb   $0x000003,0x00007d(%ecx)
		mov    $0x0000ff,%al
		movb   $0x000000,0x00007f(%ecx)
		mov    %al,_0c32ee_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0392d6_case:
		mov    0x00007f(%ecx),%bl
		xor    %eax,%eax
		inc    %bl
		mov    %bl,%al
		mov    %bl,0x00007f(%ecx)
		cmp    $0x000032,%eax
		jle    _0391e5_jump
		movb   $0x000004,0x00007d(%ecx)
		mov    $0x000007,%bh
		movb   $0x000000,0x00007f(%ecx)
		mov    %bh,_0c32ee_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0392ff_case:
		cmpb   $0x000000,_0c249a_data
		sete   %al
		xor    %ah,%ah
		dec    %eax
		mov    %ax,0x000042(%ecx)
		xor    %eax,%eax
		mov    _0c32ee_data,%al
		cmp    $0x000009,%eax
		jge    _0391e5_jump
		lea    0x000001(%eax),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000000,_0c32f6_data(,%eax,8)
		je     _0391e5_jump
		mov    $0x000078,%edx
		mov    %ecx,%eax
		call   _0391ec_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039350_func:
		push   %edx
		mov    _0c24f0_data,%dx
		mov    _0c24f2_data,%ax
		cmp    $0x000002,%ax
		jb     _0393ca_jump
		jbe    _0393a1_jump
		cmp    $0x000003,%ax
		je     _0393b2_jump
		jmp    _0393d0_jump

	_039372_jump:
		movswl %dx,%eax
		cmp    $0x000003,%eax
		jne    _039381_jump
		orb    $0x000001,_0c32e4_data

	_039381_jump:
		movswl %dx,%eax
		cmp    $0x000008,%eax
		jne    _039390_jump
		orb    $0x000002,_0c32e4_data

	_039390_jump:
		movswl %dx,%eax
		cmp    $0x000011,%eax
		jne    _0393d0_jump
		orb    $0x000080,_0c32e4_data
		jmp    _0393d0_jump

	_0393a1_jump:
		movswl %dx,%eax
		cmp    $0x00000b,%eax
		jne    _0393d0_jump
		orb    $0x000004,_0c32e4_data
		jmp    _0393d0_jump

	_0393b2_jump:
		movswl %dx,%eax
		cmp    $0x00000b,%eax
		jne    _0393d0_jump
		orb    $0x000001,_0c32e5_data
		mov    %dx,_0c24f0_data
		pop    %edx
		ret    

	_0393ca_jump:
		cmp    $0x000001,%ax
		je     _039372_jump

	_0393d0_jump:
		mov    %dx,_0c24f0_data
		pop    %edx
		ret    

_0393dc_switch:
		.long   _03943c_case
		.long   _0394f5_case
		.long   _039519_case
		.long   _039519_case
		.long   _03957a_case
		.long   _039681_case
		.long   _039615_case




_0393f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    _0c32f0_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0c1b04_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		mov    _0c32ee_data,%al
		mov    %al,(%esp)
		mov    0x00006c(%esi),%al
		cmp    $0x000006,%al
		ja     _039681_case
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_0393dc_switch(,%edx,4)

	_03943c_case:
		mov    0x00007b(%esi),%dl
		test   %dl,%dl
		je     _0394e6_jump
		xor    %eax,%eax
		mov    _0c1b44_data,%edx
		mov    _0c1b84_data,%al
		mov    0x000028(%esi),%ebx
		add    %edx,%eax
		sub    %ebx,%eax
		add    $0x000002,%eax
		test   %eax,%eax
		jge    _039464_jump
		neg    %eax

	_039464_jump:
		cmp    $0x000003,%eax
		jge    _0394ec_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000001,%eax
		je     _0394a6_jump
		test   %eax,%eax
		je     _0394a6_jump
		cmp    $0x000003,%eax
		jne    _03948e_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000014,%eax
		je     _0394a6_jump

	_03948e_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _0394ec_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000015,%eax
		jne    _0394ec_jump

	_0394a6_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01d498_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _058bb4_func
		mov    $0x000022,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		movw   $0x008300,_0c257c_data
		orb    $0x000008,_0c1b9d_data
		jmp    _0394ec_jump

	_0394e6_jump:
		mov    %dl,_0c256e_data

	_0394ec_jump:
		movb   $0x000000,0x00007d(%esi)
		jmp    _039681_case

	_0394f5_case:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x0000ff,%eax
		jne    _039681_case
		xor    %ah,%ah
		movb   $0x000001,0x00007d(%esi)
		mov    %ah,_0c32ee_data
		mov    %ah,0x00007f(%esi)
		jmp    _039681_case

	_039519_case:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000001,%eax
		je     _03953a_jump
		test   %eax,%eax
		je     _03953a_jump
		cmp    $0x000003,%eax
		jne    _03954e_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000022,%eax
		jne    _03954e_jump

	_03953a_jump:
		mov    $0x000023,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func

	_03954e_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _039681_case
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000024,%eax
		jne    _039681_case
		movb   $0x0000ff,_0c1b87_data
		jmp    _039681_case

	_03957a_case:
		xor    %edx,%edx
		mov    0x00000c(%esi),%ebx
		mov    0x00006d(%esi),%dl
		and    $0x0000ff,%eax
		mov    (%ebx,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _03959a_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		test   %eax,%eax
		jmp    _0395bd_jump

	_03959a_jump:
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx

	_0395bd_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _0394ec_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0394ec_jump
		call   _039350_func
		movb   $0x000002,0x00007d(%esi)
		mov    $0x000005,%bh
		movb   $0x000000,0x00007f(%esi)
		mov    %bh,_0c32ee_data
		jmp    _039681_case

	_039615_case:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _03963c_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000024,%eax
		jne    _03963c_jump
		mov    $0x000025,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func

	_03963c_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _039681_case
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000014,%eax
		jne    _039681_case
		mov    _0c1b44_data,%ax
		mov    %ax,_0c257c_data
		xor    %eax,%eax
		mov    0x00007d(%esi),%al
		cmp    $0x000004,%eax
		jne    _039681_case
		mov    $_0c1b1c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x008300,_0c257c_data

	_039681_case:
		mov    %esi,%eax
		mov    (%esp),%bh
		call   _039224_func
		cmp    _0c32ee_data,%bh
		je     _03974b_jump
		movb   $0x000001,_0c32f0_data
		xor    %eax,%eax
		mov    _0c32ee_data,%al
		mov    %bh,_0c32ef_data
		cmp    $0x0000ff,%eax
		je     _03974b_jump
		mov    0x000081(%ecx),%ah
		or     $0x000004,%ah
		mov    0x000024(%ecx),%esi
		mov    %ah,0x000081(%ecx)
		test   %esi,%esi
		jne    _0396d3_jump
		mov    %ecx,%eax
		call   _01f584_func

	_0396d3_jump:
		mov    0x000081(%ecx),%dl
		or     $0x000008,%dl
		xor    %eax,%eax
		mov    %dl,0x000081(%ecx)
		mov    _0c247a_data,%edx
		mov    0x000068(%ecx),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    _0c247c_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000069(%ecx),%al
		add    $0x0000be,%edx
		movw   $0x000000,0x00005e(%ecx)
		sub    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		mov    %edx,0x00002c(%ecx)
		neg    %eax
		mov    %ax,0x000036(%ecx)
		xor    %eax,%eax
		mov    $0x0000be,%edx
		mov    0x000069(%ecx),%al
		movb   $0x000000,0x00006b(%ecx)
		sub    %eax,%edx
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    (%esp),%al
		mov    %dx,0x000038(%ecx)
		mov    %al,_0c32ef_data

	_03974b_jump:
		cmpb   $0x000000,_0c32f0_data
		je     _03978d_jump
		xor    %eax,%eax
		mov    _0c32ef_data,%al
		lea    0x000000(,%eax,8),%esi
		sub    %eax,%esi
		shl    $0x000002,%esi
		sub    %eax,%esi
		shl    $0x000003,%esi
		mov    _0c33c6_data(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x0000dc,%eax
		jge    _039785_jump
		incw   _0c33c8_data(%esi)
		jmp    _03978d_jump

	_039785_jump:
		xor    %bl,%bl
		mov    %bl,_0c32f0_data

	_03978d_jump:
		testb  $0x000004,0x000081(%ecx)
		je     _0397ca_jump
		addw   $0x000004,0x000036(%ecx)
		mov    0x000028(%ecx),%edi
		mov    0x000034(%ecx),%eax
		add    $0x000004,%edi
		sar    $0x000010,%eax
		mov    %edi,0x000028(%ecx)
		cmp    $0x000136,%eax
		jle    _0397ca_jump
		movl   $0x000000,0x000024(%ecx)
		mov    0x000081(%ecx),%al
		movb   $0x000000,0x00006b(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%ecx)

	_0397ca_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0397d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		test   %eax,%eax
		jne    _03986b_jump
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _039813_jump
		xor    %edx,%edx
		mov    $0x000001,%cl
		mov    %dx,_0c1b5c_data
		mov    %dx,_0c1b6e_data
		mov    %cl,_0c256e_data
		mov    %dx,_0c2584_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_039813_jump:
		cmp    $0x000001,%eax
		je     _03982d_jump
		test   %eax,%eax
		je     _03982d_jump
		cmp    $0x000003,%eax
		jne    _039873_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000014,%eax
		jne    _039873_jump

	_03982d_jump:
		mov    0x000028(%edx),%ax
		xor    %edx,%edx
		sub    $0x000002,%eax
		mov    _0c1b84_data,%dl
		sub    %edx,%eax
		mov    _0c1b44_data,%dl
		mov    %ax,_0c257c_data
		test   $0x000001,%dl
		je     _039858_jump
		orb    $0x000001,_0c257c_data
		jmp    _03985f_jump

	_039858_jump:
		andb   $0x0000fe,_0c257c_data

	_03985f_jump:
		xor    %bh,%bh
		mov    %bh,_0c256e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03986b_jump:
		xor    %ah,%ah
		mov    %ah,_0c256e_data

	_039873_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039880_func:
		push   %ecx
		push   %edi
		mov    _0cdefc_data,%edi
		mov    %edi,_0d7fb0_data
		cld    
		xor    %eax,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		xor    %eax,%eax
		pop    %edi
		pop    %ecx
		ret    



_0398a0_func:
		push   %edx
		xor    %edx,%edx
		mov    %edx,_0d7fb0_data
		pop    %edx
		ret    



_0398f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		mov    $0x000011,%ebx
		xor    %edx,%edx
		call   _0787d0_func
		mov    $0x00003c,%ah
		mov    $0x000300,%ebx
		movl   $0x000140,0x000004(%ecx)
		mov    _0d7fb0_data,%edi
		movl   $0x0000c8,0x000008(%ecx)
		mov    %ah,_095fd9_data
		mov    %edi,(%ecx)
		mov    _0c7968_data,%cl
		mov    %ah,_0c7968_data
		mov    $0x00003c,%eax
		mov    %cl,_095fd8_data
		call   _03b678_jump
		mov    _095b08_data,%edi
		xor    %edx,%edx
		cld    
		xor    %eax,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    $_0d7ca8_data,%eax
		call   _0787d0_func
		xor    %eax,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03996c_func:
		mov    _095fd8_data,%al
		mov    %al,_0c7968_data
		xor    %eax,%eax
		mov    _0c7968_data,%al
		jmp    _03b678_jump



_039984_func:
		mov    0x000004(%eax),%eax
		ret    



_039988_func:
		mov    0x000008(%eax),%eax
		ret    



_03998c_func:
		imul   0x000004(%eax),%ebx
		mov    (%eax),%eax
		add    %ebx,%edx
		mov    %cl,(%edx,%eax,1)
		ret    



_039998_func:
		push   %esi
		push   %edi
		mov    %ecx,%esi
		mov    0x00000c(%esp),%ecx
		imul   0x000004(%eax),%ebx
		mov    (%eax),%eax
		add    %ebx,%eax
		lea    (%eax,%edx,1),%edi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0399b5_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0399b5_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _0399be_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_0399be_jump:
		pop    %edi
		pop    %esi
		ret    $0x000004



_0399c4_func:
		push   %edi
		imul   0x000004(%eax),%ebx
		mov    (%eax),%eax
		add    %eax,%ebx
		lea    (%ebx,%edx,1),%edi
		xor    %eax,%eax
		mov    0x000008(%esp),%ebx
		mov    %cl,%al
		cld    
		mov    %ebx,%ecx
		and    $0x000003,%ecx
		je     _0399e2_jump
		rep stos %al,%es:(%edi)

	_0399e2_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _0399f7_jump
		mov    %eax,%ebx
		mov    %al,%ah
		mov    %bl,%bh
		shl    $0x000010,%eax
		mov    %bx,%ax
		rep stos %eax,%es:(%edi)

	_0399f7_jump:
		pop    %edi
		ret    $0x000004



_0399fc_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%edi
		mov    %ebx,%esi
		mov    0x000010(%esp),%ebx
		mov    %ecx,%edx
		imul   0x000004(%eax),%esi
		mov    (%eax),%eax
		add    %ebx,%ebx
		add    %eax,%esi
		xor    %eax,%eax
		mov    %ebx,%ebp
		mov    %dh,%al
		add    %edi,%esi
		mov    %eax,%edi
		xor    %eax,%eax
		shl    $0x000008,%edi
		mov    %dl,%al
		sar    %ebx
		add    %edi,%eax
		mov    %esi,%edi
		and    $0x000001,%ebp
		cld    
		mov    %eax,%ecx
		shl    $0x000010,%eax
		mov    %cx,%ax
		mov    %ebx,%ecx
		and    $0x000001,%ecx
		je     _039a40_jump
		rep stos %ax,%es:(%edi)

	_039a40_jump:
		mov    %ebx,%ecx
		shr    %ecx
		je     _039a48_jump
		rep stos %eax,%es:(%edi)

	_039a48_jump:
		test   %ebp,%ebp
		je     _039a4e_jump
		mov    %dl,(%esi)

	_039a4e_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_039a54_func:
		push   %esi
		push   %edi
		mov    %edx,%esi
		lea    (%edx,%ecx,1),%edi
		cmp    %edi,%edx
		jge    _039aa4_jump
		lea    0x000000(,%edx,4),%eax
		lea    0x000000(,%edi,4),%ecx
		sub    %edx,%eax
		sub    %edi,%ecx

	_039a71_jump:
		xor    %edx,%edx
		mov    (%ebx),%dl
		sar    $0x000002,%edx
		mov    %dl,_0d7ca8_data(%eax)
		xor    %edx,%edx
		mov    0x000001(%ebx),%dl
		sar    $0x000002,%edx
		mov    %dl,_0d7ca9_data(%eax)
		xor    %edx,%edx
		mov    0x000002(%ebx),%dl
		add    $0x000003,%eax
		sar    $0x000002,%edx
		add    $0x000003,%ebx
		mov    %dl,_0d7ca7_data(%eax)
		cmp    %ecx,%eax
		jl     _039a71_jump

	_039aa4_jump:
		cmp    _0d7fac_data,%esi
		jge    _039ab2_jump
		mov    %esi,_0d7fac_data

	_039ab2_jump:
		cmp    _095fdc_data,%edi
		jle    _039ac0_jump
		mov    %edi,_095fdc_data

	_039ac0_jump:
		pop    %edi
		pop    %esi
		ret    



_039ac4_func:
		push   %esi
		push   %edi
		mov    %edx,%esi
		lea    (%edx,%ecx,1),%edi
		cmp    %edi,%edx
		jge    _039b05_jump
		lea    0x000000(,%edx,4),%eax
		lea    0x000000(,%edi,4),%ecx
		sub    %edx,%eax
		sub    %edi,%ecx

	_039ae1_jump:
		mov    (%ebx),%dl
		mov    %dl,_0d7ca8_data(%eax)
		mov    0x000001(%ebx),%dl
		mov    %dl,_0d7ca9_data(%eax)
		add    $0x000003,%eax
		mov    0x000002(%ebx),%dl
		add    $0x000003,%ebx
		mov    %dl,_0d7ca7_data(%eax)
		cmp    %ecx,%eax
		jl     _039ae1_jump

	_039b05_jump:
		cmp    _0d7fac_data,%esi
		jge    _039b13_jump
		mov    %esi,_0d7fac_data

	_039b13_jump:
		cmp    _095fdc_data,%edi
		jle    _039b21_jump
		mov    %edi,_095fdc_data

	_039b21_jump:
		pop    %edi
		pop    %esi
		ret    



_039b24_func:
		push   %edx
		mov    $0x000043,%edx
		movl   $0x001200,(%eax)
		mov    $0x000034,%al
		out    %al,(%dx)
		mov    $0x000040,%edx
		xor    %al,%al
		out    %al,(%dx)
		out    %al,(%dx)
		xor    %eax,%eax
		pop    %edx
		ret    



_039b40_func:
		push   %edx
		mov    $0x000036,%al
		mov    $0x000043,%edx
		out    %al,(%dx)
		mov    $0x000040,%edx
		xor    %al,%al
		out    %al,(%dx)
		out    %al,(%dx)
		pop    %edx
		ret    



_039b54_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00001c,%esp
		mov    %esp,%ebx
		xor    %ah,%ah
		mov    %esp,%edx
		mov    %ah,0x000001(%esp)
		mov    $0x00001a,%eax
		call   _0796b6_func
		mov    $0x000043,%edx
		xor    %al,%al
		out    %al,(%dx)
		mov    $0x000040,%edx
		xor    %ecx,%ecx
		sub    %eax,%eax
		in     (%dx),%al
		sub    %eax,%eax
		in     (%dx),%al
		mov    0x00000c(%esp),%cl
		xor    %edx,%edx
		mov    %al,%bl
		mov    0x00000d(%esp),%dl
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    0x000008(%esp),%al
		add    %ecx,%edx
		shl    $0x000018,%eax
		shl    $0x000008,%edx
		neg    %bl
		add    %edx,%eax
		xor    %edx,%edx
		mov    %bl,%dl
		add    %edx,%eax
		add    $0x00001c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039bb4_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		imul   (%edx),%eax
		mov    $0x0003e8,%ecx
		xor    %edx,%edx
		div    %ecx
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _039b54_func
		add    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_039bd4_func:
		push   %ebx
		mov    %eax,%ebx
		push   $0x000200
		push   %edx
		call   _0796d1_func
		add    $0x000008,%esp
		mov    %eax,(%ebx)
		test   %eax,%eax
		jge    _039bf2_jump
		mov    $0xfffffffb,%eax
		pop    %ebx
		ret    

	_039bf2_jump:
		xor    %eax,%eax
		pop    %ebx
		ret    



_039bf8_func:
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%eax
		mov    %ebx,%edx
		mov    %ebx,(%esp)
		mov    %esp,%ebx
		mov    %ds,%ecx
		push   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _079920_func
		test   %eax,%eax
		je     _039c1d_jump
		mov    $0xfffffffa,%eax

	_039c1d_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		ret    



_039c24_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    %ebx,%esi
		mov    (%edx),%edi
		test   %ebx,%ebx
		je     _039c58_jump

	_039c32_jump:
		cmp    $0x00fff0,%esi
		jbe    _039c41_jump
		mov    $0x00fff0,%ecx
		jmp    _039c43_jump

	_039c41_jump:
		mov    %esi,%ecx

	_039c43_jump:
		mov    %ecx,%ebx
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _039bf8_func
		test   %eax,%eax
		jl     _039c5a_jump
		add    %ecx,%edi
		sub    %ecx,%esi
		jne    _039c32_jump

	_039c58_jump:
		xor    %eax,%eax

	_039c5a_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_039c60_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000018,%ebx
		xor    %edx,%edx
		call   _0787d0_func
		lea    0x000011(%ecx),%eax
		call   _039b24_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _039ca5_jump
		call   _039880_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _039c9d_jump
		mov    %ecx,%eax
		call   _0398f8_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _039c9d_jump
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_039c9d_jump:
		lea    0x000011(%ecx),%eax
		call   _039b40_func

	_039ca5_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039cac_func:
		push   %edx
		mov    %eax,%edx
		call   _03996c_func
		lea    0x000011(%edx),%eax
		call   _039b40_func
		call   _0398a0_func
		cmpb   $0x000000,_0c694c_data
		je     _039cd9_jump
		call   _028930_func
		and    $0x0000ff,%eax
		call   _029c64_func

	_039cd9_jump:
		pop    %edx
		ret    



_039cdc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %ebx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    $0x000100,%ebx
		xor    %ebp,%ebp
		mov    (%eax),%si
		mov    %ebp,_095fdc_data
		mov    %ebx,_0d7fac_data
		mov    %si,0x000008(%esp)
		lea    0x000002(%eax),%esi

	_039d07_jump:
		decw   0x000008(%esp)
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _039d42_jump
		inc    %esi
		xor    %eax,%eax
		movzbl (%esi),%edi
		mov    -0x000001(%esi),%al
		inc    %esi
		add    %eax,%ebp
		test   %edi,%edi
		jne    _039d2c_jump
		mov    $0x000100,%edi

	_039d2c_jump:
		mov    (%esp),%eax
		mov    %edi,%ecx
		mov    %esi,%ebx
		mov    %ebp,%edx
		call   *0x000004(%esp)
		lea    (%edi,%edi,2),%eax
		add    %eax,%esi
		add    %edi,%ebp
		jmp    _039d07_jump

	_039d42_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_039d4c_func:
		push   %ecx
		mov    $_039a54_func,%ecx
		call   _039cdc_func
		pop    %ecx
		ret    



_039d5c_func:
		push   %ecx
		mov    $_039ac4_func,%ecx
		call   _039cdc_func
		pop    %ecx
		ret    



_039d6c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %edx,0x000008(%esp)
		mov    %ebx,0x000010(%esp)
		mov    %edx,%esi
		xor    %edx,%esi
		xor    %ecx,%ecx
		mov    0x00000a(%edx),%si
		mov    0x000008(%edx),%cx
		mov    %esi,(%esp)
		mov    %eax,%esi
		mov    0x00008c(%edx),%eax
		add    %ecx,%eax
		mov    0x000090(%edx),%ebp
		mov    %eax,0x00000c(%esp)

	_039da0_jump:
		mov    (%esp),%edx
		dec    %edx
		mov    %edx,(%esp)
		test   %edx,%edx
		jl     _039e20_jump
		mov    0x000008(%esp),%edi
		xor    %ah,%ah
		inc    %esi
		mov    %ah,0x000014(%esp)
		mov    0x00008c(%edi),%edi

	_039dc0_jump:
		mov    0x000011(%esp),%eax
		sar    $0x000018,%eax
		mov    0x00000c(%esp),%ecx
		add    %eax,%edi
		cmp    %ecx,%edi
		jge    _039e1d_jump
		mov    (%esi),%al
		mov    %al,0x000014(%esp)
		mov    0x000011(%esp),%eax
		sar    $0x000018,%eax
		inc    %esi
		test   %eax,%eax
		jl     _039df8_jump
		push   %eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		xor    %ecx,%ecx
		mov    0x000014(%esp),%eax
		mov    (%esi),%cl
		inc    %esi
		call   _0399c4_func
		jmp    _039dc0_jump

	_039df8_jump:
		negb   0x000014(%esp)
		mov    %esi,%ecx
		mov    0x000011(%esp),%eax
		mov    %ebp,%ebx
		sar    $0x000018,%eax
		mov    %edi,%edx
		push   %eax
		mov    %eax,0x000008(%esp)
		mov    0x000014(%esp),%eax
		call   _039998_func
		add    0x000004(%esp),%esi
		jmp    _039dc0_jump

	_039e1d_jump:
		inc    %ebp
		jmp    _039da0_jump

	_039e20_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_039e28_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %ebx,0x000004(%esp)
		mov    0x00008c(%edx),%ecx
		lea    0x000004(%eax),%esi
		mov    %ecx,(%esp)
		mov    0x000090(%edx),%ecx
		movswl (%eax),%edx
		add    $0x000002,%eax
		add    %edx,%ecx
		mov    (%eax),%ax
		mov    %ecx,0x000008(%esp)
		mov    %ax,0x00000c(%esp)

	_039e59_jump:
		decw   0x00000c(%esp)
		mov    0x00000a(%esp),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jl     _039ee7_jump
		mov    (%esp),%edi
		mov    (%esi),%al
		inc    %esi
		mov    %al,0x000010(%esp)

	_039e77_jump:
		xor    %ecx,%ecx
		mov    0x000010(%esp),%cl
		test   %ecx,%ecx
		jle    _039ede_jump
		mov    0x000001(%esi),%al
		inc    %esi
		xor    %ecx,%ecx
		movsbl %al,%ebp
		mov    -0x000001(%esi),%cl
		inc    %esi
		add    %ecx,%edi
		test   %ebp,%ebp
		jge    _039ebc_jump
		mov    0x000008(%esp),%ebx
		neg    %al
		mov    %edi,%edx
		movsbl %al,%ebp
		xor    %ecx,%ecx
		push   %ebp
		mov    (%esi),%cl
		mov    0x000008(%esp),%eax
		call   _0399c4_func
		mov    0x000010(%esp),%dl
		inc    %esi
		dec    %dl
		add    %ebp,%edi
		mov    %dl,0x000010(%esp)
		jmp    _039e77_jump

	_039ebc_jump:
		mov    0x000008(%esp),%ebx
		mov    0x000004(%esp),%eax
		push   %ebp
		mov    %esi,%ecx
		mov    %edi,%edx
		call   _039998_func
		mov    0x000010(%esp),%ah
		add    %ebp,%esi
		dec    %ah
		add    %ebp,%edi
		mov    %ah,0x000010(%esp)
		jmp    _039e77_jump

	_039ede_jump:
		incl   0x000008(%esp)
		jmp    _039e59_jump

	_039ee7_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_039ef0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %ebx,0x000008(%esp)
		mov    0x00008c(%edx),%ecx
		mov    %ecx,(%esp)
		mov    0x000090(%edx),%ecx
		mov    0x000008(%edx),%dx
		mov    (%esp),%ebx
		and    $0x00ffff,%edx
		add    %ebx,%edx
		dec    %edx
		mov    %ecx,0x00000c(%esp)
		mov    %edx,0x000004(%esp)
		mov    (%eax),%dx
		lea    0x000002(%eax),%esi
		mov    %dx,0x000014(%esp)
		jmp    _039f33_jump

	_039f2f_jump:
		sub    %eax,0x00000c(%esp)

	_039f33_jump:
		mov    (%esi),%ax
		mov    %ax,0x000010(%esp)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		add    $0x000002,%esi
		test   %eax,%eax
		jge    _039f99_jump
		testb  $0x000040,0x000011(%esp)
		jne    _039f2f_jump
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%eax
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    0x00000c(%esp),%cl
		mov    0x000010(%esp),%dl
		call   _03998c_func
		mov    (%esi),%ax
		mov    %ax,0x000010(%esp)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		add    $0x000002,%esi
		test   %eax,%eax
		jne    _039f99_jump
		decw   0x000014(%esp)
		mov    0x00000c(%esp),%ecx
		mov    0x000012(%esp),%eax
		inc    %ecx
		sar    $0x000010,%eax
		mov    %ecx,0x00000c(%esp)
		jmp    _03a040_jump

	_039f99_jump:
		mov    (%esp),%ebp

	_039f9c_jump:
		inc    %esi
		xor    %eax,%eax
		movsbl (%esi),%edi
		mov    -0x000001(%esi),%al
		inc    %esi
		add    %edi,%edi
		add    %eax,%ebp
		test   %edi,%edi
		jl     _039ff9_jump
		push   %edi
		mov    %esi,%ecx
		mov    %ebp,%edx
		add    %edi,%ebp
		add    %edi,%esi
		mov    0x000014(%esp),%edi
		mov    0x000010(%esp),%ebx
		dec    %edi
		mov    0x00000c(%esp),%eax
		mov    %di,0x000014(%esp)
		call   _039998_func
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _039f9c_jump
		incl   0x00000c(%esp)
		decw   0x000014(%esp)
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _039f33_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_039ff9_jump:
		neg    %edi
		mov    %edi,%eax
		mov    0x00000c(%esp),%ebx
		sar    %eax
		mov    %ebp,%edx
		push   %eax
		mov    (%esi),%cx
		mov    0x00000c(%esp),%eax
		call   _0399fc_func
		decw   0x000010(%esp)
		mov    0x00000e(%esp),%eax
		add    $0x000002,%esi
		sar    $0x000010,%eax
		add    %edi,%ebp
		test   %eax,%eax
		jne    _039f9c_jump
		decw   0x000014(%esp)
		mov    0x00000c(%esp),%ebp
		mov    0x000012(%esp),%eax
		inc    %ebp
		sar    $0x000010,%eax
		mov    %ebp,0x00000c(%esp)

	_03a040_jump:
		test   %eax,%eax
		jg     _039f33_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03a050_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		movzwl 0x00000a(%edx),%ebp
		mov    0x00008c(%edx),%eax
		xor    %esi,%esi
		mov    %eax,0x000004(%esp)
		mov    0x000090(%edx),%eax
		mov    0x000008(%edx),%si
		mov    %eax,(%esp)
		xor    %edx,%edx
		test   %ebp,%ebp
		jle    _03a0a7_jump

	_03a07a_jump:
		mov    (%esp),%edi
		imul   0x000004(%ebx),%edi
		mov    (%ebx),%eax
		add    %eax,%edi
		mov    0x000004(%esp),%eax
		mov    %esi,%ecx
		add    %eax,%edi
		inc    %edx
		cld    
		push   %ebx
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _03a09b_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_03a09b_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		rep stos %eax,%es:(%edi)
		pop    %ebx
		cmp    %ebp,%edx
		jl     _03a07a_jump

	_03a0a7_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03a0b0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %ebx,%ebp
		xor    %esi,%esi
		mov    0x000008(%edx),%si
		xor    %eax,%eax
		mov    %esi,0x000008(%esp)
		mov    0x00008c(%edx),%esi
		mov    0x00000a(%edx),%ax
		mov    %esi,0x000004(%esp)
		mov    0x000090(%edx),%edx
		test   %eax,%eax
		jle    _03a108_jump
		mov    %edx,%esi
		add    %eax,%edx
		mov    %edx,(%esp)

	_03a0e6_jump:
		mov    0x000008(%esp),%edx
		mov    %edi,%ecx
		mov    %esi,%ebx
		mov    %ebp,%eax
		push   %edx
		mov    0x000008(%esp),%edx
		inc    %esi
		call   _039998_func
		mov    0x000008(%esp),%ebx
		mov    (%esp),%ecx
		add    %ebx,%edi
		cmp    %ecx,%esi
		jl     _03a0e6_jump

	_03a108_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03a110_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000080(%eax),%eax
		mov    $0x000095,%ebx
		call   _079951_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _0787d0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a134_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    $0x000095,%ebx
		xor    %edx,%edx
		call   _0787d0_func
		lea    0x000080(%ecx),%eax
		mov    %esi,%edx
		call   _039bd4_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03a265_jump
		mov    $0x000080,%ebx
		mov    %ecx,%edx
		mov    0x000080(%ecx),%eax
		call   _039bf8_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03a25e_jump
		movl   $0x000000,0x000084(%ecx)
		xor    %eax,%eax
		mov    0x000008(%ecx),%ax
		mov    %esi,0x000088(%ecx)
		cmp    $0x000140,%eax
		jg     _03a259_jump
		xor    %eax,%eax
		mov    0x00000a(%ecx),%ax
		cmp    $0x0000c8,%eax
		jg     _03a259_jump
		xor    %eax,%eax
		mov    0x000004(%ecx),%ax
		cmp    $0x00af12,%eax
		jne    _03a1e8_jump
		mov    (%ecx),%ebx
		cmp    $0x00000c,%ebx
		jne    _03a1d2_jump
		movl   $0x00001e,0x000010(%ecx)
		mov    $0x000001,%dl
		mov    %ebx,0x000050(%ecx)
		mov    %dl,_0d7ca5_data

	_03a1d2_jump:
		mov    0x000050(%ecx),%edx
		mov    0x000080(%ecx),%eax
		xor    %ebx,%ebx
		call   _079956_func
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03a1e8_jump:
		cmp    $0x00af11,%eax
		jne    _03a247_jump
		mov    (%ecx),%edx
		cmp    $0x00000c,%edx
		jne    _03a219_jump
		mov    0x000080(%ecx),%eax
		mov    %edx,0x000050(%ecx)
		xor    %ebx,%ebx
		mov    0x000050(%ecx),%edx
		movl   $0x000005,0x000010(%ecx)
		call   _079956_func
		movb   $0x000001,_0d7ca5_data
		jmp    _03a220_jump

	_03a219_jump:
		movl   $0x000080,0x000050(%ecx)

	_03a220_jump:
		mov    0x000010(%ecx),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000046,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,0x000010(%ecx)
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03a247_jump:
		mov    $0xfffffff5,%edx
		mov    %ecx,%eax
		call   _03a110_func
		mov    %edx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03a259_jump:
		mov    $0xfffffffd,%edx

	_03a25e_jump:
		mov    %ecx,%eax
		call   _03a110_func

	_03a265_jump:
		mov    %edx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_03a26c_switch:
		.long   _03a2b9_case
		.long   _03a314_case
		.long   _03a314_case
		.long   _03a2cc_case
		.long   _03a314_case
		.long   _03a314_case
		.long   _03a314_case
		.long   _03a2d7_case
		.long   _03a2ea_case
		.long   _03a2f5_case
		.long   _03a314_case
		.long   _03a300_case
		.long   _03a30b_case




_03a2a0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %edx,(%esp)
		mov    %ebx,%esi
		xor    %ah,%ah
		xor    %ebp,%ebp
		mov    %ah,_0d7fa8_data
		jmp    _03a315_jump

	_03a2b9_case:
		mov    $0x000001,%dh
		mov    %ecx,%ebx
		mov    %dh,_0d7fa8_data
		mov    %edi,%edx
		call   _039d4c_func
		jmp    _03a314_case

	_03a2cc_case:
		mov    %ecx,%ebx
		mov    %edi,%edx
		call   _039ef0_func
		jmp    _03a314_case

	_03a2d7_case:
		mov    $0x000001,%dl
		mov    %ecx,%ebx
		mov    %dl,_0d7fa8_data
		mov    %edi,%edx
		call   _039d5c_func
		jmp    _03a314_case

	_03a2ea_case:
		mov    %ecx,%ebx
		mov    %edi,%edx
		call   _039e28_func
		jmp    _03a314_case

	_03a2f5_case:
		mov    %ecx,%ebx
		mov    %edi,%edx
		call   _03a050_func
		jmp    _03a314_case

	_03a300_case:
		mov    %ecx,%ebx
		mov    %edi,%edx
		call   _039d6c_func
		jmp    _03a314_case

	_03a30b_case:
		mov    %ecx,%ebx
		mov    %edi,%edx
		call   _03a0b0_func

	_03a314_case:
		inc    %ebp

	_03a315_jump:
		mov    (%esp),%eax
		mov    0x000004(%eax),%eax
		sar    $0x000010,%eax
		cmp    %eax,%ebp
		jge    _03a346_jump
		mov    %esi,%eax
		mov    0x000004(%eax),%dx
		mov    (%esi),%ebx
		sub    $0x000004,%edx
		add    %ebx,%esi
		cmp    $0x00000c,%dx
		ja     _03a314_case
		and    $0x00ffff,%edx
		add    $0x000006,%eax
		jmp    *%cs:_03a26c_switch(,%edx,4)

	_03a346_jump:
		cmpl   $0x000001,0x000084(%edi)
		je     _03a360_jump

	_03a34f_jump:
		mov    0x000014(%esp),%eax
		call   _039b54_func
		cmp    _0d7fb4_data,%eax
		jbe    _03a34f_jump

	_03a360_jump:
		mov    $0x0003da,%dx

	_03a364_jump:
		in     (%dx),%al
		test   $0x000008,%al
		jne    _03a364_jump

	_03a369_jump:
		in     (%dx),%al
		test   $0x000008,%al
		je     _03a369_jump
		mov    0x000014(%esp),%edx
		mov    $0x00003c,%eax
		call   _039bb4_func
		mov    %eax,_0d7fb4_data
		xor    %eax,%eax
		mov    0x000094(%edi),%al
		test   %eax,%eax
		jle    _03a3b5_jump
		cmpb   $0x000000,_0c694c_data
		je     _03a3b5_jump
		cmpb   $0x000000,_0d7ca4_data
		je     _03a3b5_jump
		xor    %al,%al
		mov    %al,_0d7ca4_data
		call   _028930_func
		and    $0x0000ff,%eax
		call   _029c78_func

	_03a3b5_jump:
		xor    %eax,%eax
		mov    _0d7fa8_data,%al
		cmp    $0x000001,%eax
		jne    _03a3e2_jump
		mov    $_0d7ca8_data,%esi
		pusha  
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		popa   

	_03a3e2_jump:
		mov    0x000090(%edi),%eax
		mov    0x000004(%ecx),%ebp
		imul   %ebp,%eax
		mov    0x00008c(%edi),%esi
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x00000a(%edi),%ax
		imul   %ebp,%eax
		mov    _095b08_data,%edi
		mov    (%ecx),%edx
		add    %esi,%edi
		add    %edx,%esi
		mov    %eax,%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _03a417_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_03a417_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _03a420_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_03a420_jump:
		xor    %eax,%eax
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_03a42c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    %ebx,%edi
		mov    0x000084(%eax),%edx
		inc    %edx
		mov    $0x000010,%ebx
		mov    %edx,0x000084(%eax)
		mov    %esp,%edx
		mov    0x000080(%eax),%eax
		call   _039bf8_func
		test   %eax,%eax
		jl     _03a4ba_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%ax
		cmp    $0x00f1fa,%eax
		jne    _03a4b5_jump
		mov    (%esp),%eax
		sub    $0x000010,%eax
		test   %eax,%eax
		jle    _03a4a7_jump
		mov    _0cdf00_data,%edx
		mov    %edx,0x000010(%esp)
		mov    %eax,%ebx
		mov    0x000080(%esi),%ebp
		lea    0x000010(%esp),%edx
		mov    %ebp,%eax
		call   _039c24_func
		test   %eax,%eax
		jl     _03a4ba_jump
		mov    0x000010(%esp),%ebx
		push   %edi
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _03a2a0_func
		jmp    _03a4ba_jump

	_03a4a7_jump:
		mov    %esp,%edx
		push   %edi
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _03a2a0_func
		jmp    _03a4ba_jump

	_03a4b5_jump:
		mov    $0xfffffffc,%eax

	_03a4ba_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03a4c4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		xor    %edx,%edx
		mov    0x000008(%eax),%dx
		mov    %ecx,%eax
		call   _039984_func
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %edx,%edx
		mov    %eax,0x00008c(%ebx)
		mov    %ecx,%eax
		mov    0x00000a(%ebx),%dx
		call   _039988_func
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,0x000090(%ebx)
		pop    %ecx
		pop    %ebx
		ret    



_03a50c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		xor    %ah,%ah
		mov    %ah,_0d7ca4_data
		xor    %eax,%eax
		mov    0x000094(%esi),%al
		test   %eax,%eax
		jle    _03a576_jump
		cmpb   $0x000000,_0c694c_data
		je     _03a576_jump
		call   _028930_func
		and    $0x0000ff,%eax
		xor    %edx,%edx
		call   _029c64_func
		mov    0x000094(%esi),%dl
		call   _028930_func
		and    $0x0000ff,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		call   _029b48_func
		call   _028930_func
		and    $0x0000ff,%eax
		mov    $0x000001,%dh
		call   _029c50_func
		mov    %dh,_0d7ca4_data

	_03a576_jump:
		lea    0x000011(%edi),%ebp
		xor    %ecx,%ecx
		jmp    _03a57e_jump

	_03a57d_jump:
		inc    %ecx

	_03a57e_jump:
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		cmp    %eax,%ecx
		jge    _03a5cb_jump
		call   _040e8c_func
		call   _040c80_func
		test   %ax,%ax
		jne    _03a5b5_jump
		call   _040ce8_func
		test   %ax,%ax
		jne    _03a5b5_jump
		call   _040d50_func
		test   %ax,%ax
		jne    _03a5b5_jump
		call   _040db8_func
		test   %ax,%ax
		je     _03a5b9_jump

	_03a5b5_jump:
		xor    %eax,%eax
		jmp    _03a5ce_jump

	_03a5b9_jump:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _03a42c_func
		mov    %eax,(%esp)
		test   %eax,%eax
		jge    _03a57d_jump

	_03a5cb_jump:
		mov    (%esp),%eax

	_03a5ce_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03a71e_jump:
		ret    



_03a720_func:
		cmpb   $0x000000,_0ce841_data
		je     _03a71e_jump
		jmp    _07796c_jump



_03a730_func:
		cmpb   $0x000000,_0ce841_data
		je     _03a71e_jump
		jmp    _0779b0_jump



_03a838_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000114,%esp
		lea    0x000098(%esp),%edi
		mov    %eax,%esi
		push   %edi

	_03a84b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03a863_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03a84b_jump

	_03a863_jump:
		pop    %edi
		lea    0x000098(%esp),%edi
		mov    %edx,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03a876_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03a88e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03a876_jump

	_03a88e_jump:
		pop    %edi
		cmpb   $0x000000,_0c694c_data
		je     _03a8b8_jump
		call   _028930_func
		and    $0x0000ff,%eax
		call   _029c64_func
		call   _028930_func
		mov    _0ce6e0_data,%dl
		add    $0x000041,%al
		cmp    %dl,%al
		jne    _03a8ba_jump

	_03a8b8_jump:
		xor    %bl,%bl

	_03a8ba_jump:
		call   _03a720_func
		lea    0x0000fc(%esp),%eax
		call   _039c60_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03a911_jump
		lea    0x000098(%esp),%edx
		mov    %esp,%eax
		call   _03a134_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03a911_jump
		lea    0x0000fc(%esp),%edx
		mov    %esp,%eax
		mov    %bl,0x000094(%esp)
		call   _03a4c4_func
		lea    0x0000fc(%esp),%edx
		mov    %esp,%eax
		call   _03a50c_func
		mov    %eax,%edx
		mov    %esp,%eax
		call   _03a110_func

	_03a911_jump:
		lea    0x0000fc(%esp),%eax
		call   _039cac_func
		call   _03a730_func
		mov    %edx,%eax
		add    $0x000114,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03a930_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _095b0c_data,%al
		cmp    $0x000001,%eax
		jne    _03a984_jump
		mov    _0ccfcc_data,%edx
		cmp    $0x0a0200,%edx
		jne    _03a962_jump
		mov    $0x0a6200,%esi
		mov    %edx,_0ccfd0_data
		mov    %esi,_0ccfcc_data
		jmp    _03a978_jump

	_03a962_jump:
		mov    $0x0a0200,%ebx
		mov    $0x0a6200,%ecx
		mov    %ebx,_0ccfcc_data
		mov    %ecx,_0ccfd0_data

	_03a978_jump:
		mov    _0ccfcc_data,%eax
		call   _014838_func
		jmp    _03a9d7_jump

	_03a984_jump:
		mov    _0cdefc_data,%eax
		mov    %eax,_0ccfd0_data
		mov    _095b08_data,%eax
		mov    %eax,_0ccfcc_data
		xor    %eax,%eax
		mov    _0ce7ee_data,%al
		cmp    $0x000001,%eax
		jne    _03a9c6_jump
		mov    $0x0000c8,%eax
		mov    $0x000140,%ecx
		mov    _0ccfcc_data,%edi
		mov    _0cdefc_data,%esi
		call   *_0cdf14_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03a9c6_jump:
		mov    _0ccfcc_data,%edi
		mov    _0cdefc_data,%esi
		call   _014d9d_func

	_03a9d7_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a9e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0c6b47_data
		je     _03a9f2_jump
		call   _016fe8_func

	_03a9f2_jump:
		mov    _0ccfcc_data,%edx
		cmp    $0x0a0200,%edx
		jne    _03aa13_jump
		mov    $0x0a6200,%esi
		mov    %edx,_0ccfd0_data
		mov    %esi,_0ccfcc_data
		jmp    _03aa29_jump

	_03aa13_jump:
		mov    $0x0a0200,%ebx
		mov    $0x0a6200,%ecx
		mov    %ebx,_0ccfcc_data
		mov    %ecx,_0ccfd0_data

	_03aa29_jump:
		mov    _0ccfcc_data,%eax
		call   _014838_func
		cmpb   $0x000000,_0c6b47_data
		je     _03aa41_jump
		call   _016fd8_func

	_03aa41_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03acc8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0c6b64_data,%ebx
		movswl %dx,%edx
		mov    %ebx,(%esp)
		mov    %ebx,_0c6b54_data
		mov    _0c24b2_data,%ebx
		sar    $0x000004,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		cwtl   
		sar    $0x000004,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c24bc_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    %edx,0x000004(%esp)
		mov    %edx,0x00000c(%esp)
		jmp    _03ad3f_jump

	_03ad1a_jump:
		mov    0x000004(%esp),%ecx
		mov    0x00000c(%esp),%esi
		add    $0x000040,%ecx
		add    $0x004600,%esi
		mov    %ecx,0x000004(%esp)
		mov    %esi,0x00000c(%esp)
		cmp    $0x000100,%ecx
		je     _03add0_jump

	_03ad3f_jump:
		mov    0x000008(%esp),%ebx
		mov    (%esp),%edx
		xor    %ecx,%ecx
		mov    0x00000c(%esp),%ebp
		mov    %cx,0x000010(%esp)
		add    %ebp,%edx
		mov    0x000004(%esp),%ebp
		jmp    _03ad7b_jump

	_03ad59_jump:
		mov    _0c24b2_data,%eax
		sar    $0x000010,%eax
		sub    $0x000014,%eax
		imul   $0x000006,%eax,%eax
		mov    0x000010(%esp),%esi
		add    $0x000010,%esi
		add    $0x0004b0,%edx
		mov    %si,0x000010(%esp)
		add    %eax,%ebx

	_03ad7b_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x0000e0,%eax
		jge    _03ad1a_jump
		xor    %ecx,%ecx
		jmp    _03ad9d_jump

	_03ad8d_jump:
		mov    %edx,%edi
		call   _0149fb_func

	_03ad94_jump:
		add    $0x000006,%ebx
		add    $0x000004,%edx
		add    $0x000010,%ecx

	_03ad9d_jump:
		movswl %cx,%eax
		cmp    $0x000140,%eax
		jge    _03ad59_jump
		mov    (%ebx),%ax
		cwtl   
		test   %eax,%eax
		jl     _03ad8d_jump
		cmp    $0x0004b0,%eax
		jge    _03ad8d_jump
		movzbl 0x000004(%ebx),%esi
		test   %esi,%esi
		jne    _03ad8d_jump
		mov    _0cbd0c_data(,%eax,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _014a43_func
		jmp    _03ad94_jump

	_03add0_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03addc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,0x000008(%esp)
		movswl %bx,%eax
		mov    _0c24b2_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		imul   %ebx,%eax
		movswl %dx,%edx
		sar    $0x000004,%edx
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c24bc_data,%eax
		add    %edx,%eax
		mov    _0c6b64_data,%edx
		mov    %eax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		mov    $0x000050,%esi
		sub    %edx,%eax
		xor    %edx,%edx
		div    %esi
		mov    %edx,(%esp)
		movswl %cx,%edx
		mov    $0x00000d,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %ebx,%edx
		imul   %eax,%edx
		lea    0x000000(,%edx,4),%eax
		xor    %ecx,%ecx
		sub    %edx,%eax
		mov    0x00000c(%esp),%ebx
		add    %eax,%eax
		mov    %ecx,0x000010(%esp)
		add    %eax,%ebx
		mov    %ecx,0x000004(%esp)
		mov    %ebx,0x00000c(%esp)
		jmp    _03ae89_jump

	_03ae64_jump:
		mov    0x000010(%esp),%edi
		mov    0x000004(%esp),%ebp
		add    $0x000040,%edi
		add    $0x004600,%ebp
		mov    %edi,0x000010(%esp)
		mov    %ebp,0x000004(%esp)
		cmp    $0x000100,%edi
		je     _03aef7_jump

	_03ae89_jump:
		mov    0x00000c(%esp),%ecx
		mov    0x000008(%esp),%edx
		mov    0x000004(%esp),%ebx
		xor    %esi,%esi
		mov    0x000010(%esp),%ebp
		mov    %si,0x000014(%esp)
		add    %ebx,%edx
		mov    (%esp),%ebx
		jmp    _03aead_jump

	_03aea7_jump:
		addw   $0x000010,0x000014(%esp)

	_03aead_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000140,%eax
		jge    _03ae64_jump
		mov    (%ecx),%ax
		cwtl   
		test   %eax,%eax
		jl     _03aee2_jump
		cmp    $0x0004b0,%eax
		jge    _03aee2_jump
		movzbl 0x000004(%ecx),%esi
		test   %esi,%esi
		jne    _03aee2_jump
		mov    _0cbd0c_data(,%eax,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _014a43_func

	_03aee2_jump:
		add    $0x000006,%ecx
		add    $0x000004,%ebx
		add    $0x000004,%edx
		cmp    $0x000050,%ebx
		jl     _03aea7_jump
		sub    $0x000050,%edx
		xor    %ebx,%ebx
		jmp    _03aea7_jump

	_03aef7_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03af00_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,(%esp)
		movswl %bx,%eax
		mov    %eax,%ebx
		mov    _0c24b2_data,%eax
		sar    $0x000004,%ebx
		sar    $0x000010,%eax
		imul   %eax,%ebx
		movswl %dx,%eax
		sar    $0x000004,%eax
		lea    (%eax,%ebx,1),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    %edx,0x000004(%esp)
		movswl %cx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    0x000004(%esp),%edx
		add    %eax,%eax
		mov    _0c6b64_data,%ebx
		add    %eax,%edx
		mov    (%esp),%eax
		mov    %edx,0x000004(%esp)
		sub    %ebx,%eax
		xor    %edx,%edx
		mov    $0x000050,%ebx
		div    %ebx
		xor    %esi,%esi
		mov    %esi,0x00000c(%esp)
		mov    %esi,0x000008(%esp)
		mov    %eax,%ecx
		jmp    _03afa5_jump

	_03af81_jump:
		mov    0x00000c(%esp),%ebp
		mov    0x000008(%esp),%eax
		add    $0x000040,%ebp
		add    $0x004600,%eax
		mov    %ebp,0x00000c(%esp)
		mov    %eax,0x000008(%esp)
		cmp    $0x000100,%ebp
		je     _03b022_jump

	_03afa5_jump:
		mov    (%esp),%edx
		mov    0x000008(%esp),%esi
		mov    0x000004(%esp),%ebx
		add    %esi,%edx
		xor    %esi,%esi
		mov    0x00000c(%esp),%ebp
		mov    %si,0x000010(%esp)
		jmp    _03afc5_jump

	_03afbf_jump:
		addw   $0x000010,0x000010(%esp)

	_03afc5_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x0000e0,%eax
		jge    _03af81_jump
		mov    (%ebx),%ax
		cwtl   
		test   %eax,%eax
		jl     _03affa_jump
		cmp    $0x0004b0,%eax
		jge    _03affa_jump
		movzbl 0x000004(%ebx),%esi
		test   %esi,%esi
		jne    _03affa_jump
		mov    _0cbd0c_data(,%eax,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _014a43_func

	_03affa_jump:
		mov    _0c24b2_data,%eax
		sar    $0x000010,%eax
		imul   $0x000006,%eax,%eax
		add    $0x000500,%edx
		add    $0x000010,%ecx
		add    %eax,%ebx
		cmp    $0x0000e0,%ecx
		jl     _03afbf_jump
		sub    $0x004600,%edx
		xor    %ecx,%ecx
		jmp    _03afbf_jump

	_03b022_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03b02c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %ax,0x000010(%esp)
		mov    %dx,0x000014(%esp)
		mov    %ecx,%eax
		mov    0x000010(%esp),%ecx
		mov    %edx,%edi
		and    $0x0000f0,%bl
		and    $0x0000f0,%al
		and    $0x0000f0,%cl
		and    $0x00fff0,%edi
		mov    %ebx,0x00000c(%esp)
		mov    %eax,0x000008(%esp)
		cmp    %bx,%cx
		jne    _03b068_jump
		cmp    %ax,%di
		je     _03b2e3_jump

	_03b068_jump:
		mov    _0c6b54_data,%ebx
		sub    _0c6b64_data,%ebx
		mov    $0x000050,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		mov    $0x000050,%ebp
		mov    %edx,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %ebp
		mov    0x000008(%esp),%edx
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		sub    %edx,%edi
		sub    %eax,%ecx
		mov    %di,0x00001c(%esp)
		mov    %cx,0x000018(%esp)
		mov    0x00001a(%esp),%eax
		mov    0x000016(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		add    %eax,%esi
		cmp    %ebp,%esi
		jl     _03b0c9_jump
		sub    %ebp,%esi

	_03b0c9_jump:
		test   %esi,%esi
		jge    _03b0d0_jump
		add    $0x000050,%esi

	_03b0d0_jump:
		cmp    $0x0000e0,%ebx
		jl     _03b0de_jump
		sub    $0x0000e0,%ebx

	_03b0de_jump:
		test   %ebx,%ebx
		jge    _03b0e8_jump
		add    $0x0000e0,%ebx

	_03b0e8_jump:
		mov    %ebx,%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    _0c6b64_data,%edx
		shl    $0x000004,%ebx
		add    %ebx,%edx
		add    %esi,%edx
		mov    _0c6b54_data,%eax
		mov    %edx,_0c6b54_data
		mov    %edx,%ebp
		mov    0x000016(%esp),%edx
		sar    $0x000010,%edx
		mov    %eax,%edi
		test   %edx,%edx
		jle    _03b18d_jump
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _03b18d_jump
		mov    _0c6b64_data,%edx
		add    $0x000500,%eax
		add    $0x004600,%edx
		cmp    %edx,%eax
		jbe    _03b141_jump
		mov    $0xffffba00,%eax
		jmp    _03b143_jump

	_03b141_jump:
		xor    %eax,%eax

	_03b143_jump:
		mov    0x000012(%esp),%ebp
		mov    0x00000e(%esp),%edx
		mov    $0x000130,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ebp
		mov    %edx,(%esp)
		lea    0x000500(%edi),%edx
		mov    %ebp,%ebx
		add    %edx,%eax
		mov    (%esp),%edx
		call   _03af00_func
		mov    $0x0000b0,%ecx
		mov    (%esp),%edx
		mov    %ebp,%ebx
		test   %esi,%esi
		jne    _03b17e_jump
		sub    $0x00004c,%edi
		jmp    _03b181_jump

	_03b17e_jump:
		add    $0x000004,%edi

	_03b181_jump:
		mov    %edi,%eax
		call   _03addc_func
		jmp    _03b2e3_jump

	_03b18d_jump:
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _03b1f6_jump
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _03b1f6_jump
		mov    _0c6b64_data,%ebx
		lea    -0x000500(%edi),%eax
		cmp    %ebx,%eax
		jae    _03b1ba_jump
		mov    $0x004600,%eax
		jmp    _03b1bc_jump

	_03b1ba_jump:
		xor    %eax,%eax

	_03b1bc_jump:
		mov    0x000012(%esp),%esi
		mov    0x00000e(%esp),%edx
		mov    $0x000130,%ecx
		sub    $0x000500,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		add    %edi,%eax
		mov    %esi,%ebx
		mov    %edx,(%esp)
		call   _03af00_func
		mov    (%esp),%edx
		mov    %esi,%ebx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		call   _03addc_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03b1f6_jump:
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _03b255_jump
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _03b255_jump
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,(%esp)
		mov    0x00000e(%esp),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    (%esp),%ebx
		mov    %eax,0x000004(%esp)
		mov    %eax,%edx
		mov    %ebp,%eax
		call   _03af00_func
		mov    $0x0000b0,%ecx
		mov    (%esp),%ebx
		mov    0x000004(%esp),%edx
		cmp    $0x00004c,%esi
		jne    _03b244_jump
		add    %esi,%edi
		jmp    _03b247_jump

	_03b244_jump:
		sub    $0x000004,%edi

	_03b247_jump:
		mov    %edi,%eax
		call   _03addc_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03b255_jump:
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _03b27a_jump
		mov    0x000012(%esp),%ebx
		mov    0x00000e(%esp),%edx
		mov    $0x0000b0,%ecx
		mov    %edi,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03addc_func

	_03b27a_jump:
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _03b29f_jump
		mov    0x000012(%esp),%ebx
		mov    0x00000e(%esp),%edx
		mov    $0x000130,%ecx
		mov    %edi,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03af00_func

	_03b29f_jump:
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _03b2c1_jump
		mov    0x000012(%esp),%ebx
		mov    0x00000e(%esp),%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03addc_func

	_03b2c1_jump:
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _03b2e3_jump
		mov    0x000012(%esp),%ebx
		mov    0x00000e(%esp),%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03af00_func

	_03b2e3_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03b2ec_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		xor    %edx,%edx
		mov    %edx,(%esp)
		mov    _0c94b8_data,%edx
		shr    $0x000002,%edx
		mov    _0c94b8_data,%ebx
		mov    %edx,_0d7fc4_data
		mov    _0c94ac_data,%edx
		add    %ebx,%edx
		mov    _0ce830_data,%ebp
		mov    %edx,_0d7fc8_data
		lea    -0x000001(%ebx),%edx
		mov    _0ce834_data,%ah
		mov    %edx,_0d7fcc_data
		test   %ah,%ah
		je     _03b347_jump
		mov    $_0c6b68_data,%esi
		mov    _0ccfd0_data,%ecx
		call   _0139b6_func
		jmp    _03b39f_jump

	_03b347_jump:
		xor    %edx,%edx
		mov    %dx,0x000004(%esp)
		jmp    _03b355_jump

	_03b350_jump:
		incw   0x000004(%esp)

	_03b355_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    $0x000004,%edx
		jge    _03b39f_jump
		mov    _0c94b8_data,%ebx
		mov    0x000002(%esp),%edx
		shr    $0x000002,%ebx
		sar    $0x000010,%edx
		imul   %edx,%ebx
		mov    $_0d7fc4_data,%ecx
		mov    (%esp),%edi
		mov    $_0c6b68_data,%esi
		mov    %ebp,%eax
		mov    _0c94b4_data,%edx
		add    %ebp,%ebp
		call   _013429_func
		cmp    $0x000010,%ebp
		jne    _03b350_jump
		mov    $0x000001,%ebp
		mov    %ebp,(%esp)
		jmp    _03b350_jump

	_03b39f_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03b3a8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		mov    _0ce820_data,%ebx
		mov    %ebx,0x00001c(%esp)
		mov    _0ce824_data,%ebx
		mov    %ebx,0x000014(%esp)
		mov    _0ce828_data,%ebx
		mov    %ebx,(%esp)
		mov    _0c94b4_data,%ebx
		shl    $0x000004,%ebx
		movswl %dx,%edx
		mov    %ebx,0x000004(%esp)
		mov    _0c24b2_data,%ebx
		sar    $0x000004,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		cwtl   
		sar    $0x000004,%eax
		mov    _0ce830_data,%ebp
		add    %eax,%edx
		xor    %ecx,%ecx
		lea    0x000000(,%edx,4),%eax
		mov    %ebp,0x000010(%esp)
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		add    %eax,%eax
		mov    %ecx,0x000020(%esp)
		add    %edx,%eax
		mov    $0x004600,%edx
		mov    %eax,0x000008(%esp)
		mov    0x00001c(%esp),%eax
		mov    %edx,_0d7fc4_data
		mov    %edx,_0d7fcc_data
		mov    %eax,0x00000c(%esp)
		xor    %edx,%edx
		mov    _0c6b64_data,%eax
		mov    %dx,0x000030(%esp)
		mov    %eax,_0d7fc8_data
		jmp    _03b47e_jump

	_03b445_jump:
		mov    $_0d7fc4_data,%ecx
		mov    $0x000050,%edx
		mov    0x000020(%esp),%edi
		mov    $_0c7268_data,%esi
		mov    %ebp,%eax
		call   _013ae4_func

	_03b45f_jump:
		add    %ebp,%ebp
		cmp    $0x000010,%ebp
		jne    _03b479_jump
		mov    $0x000001,%ebp
		mov    0x00001c(%esp),%edi
		add    %ebp,%edi
		mov    %ebp,0x000020(%esp)
		mov    %edi,0x00001c(%esp)

	_03b479_jump:
		incw   0x000030(%esp)

	_03b47e_jump:
		mov    0x00002e(%esp),%edx
		sar    $0x000010,%edx
		cmp    $0x000004,%edx
		jge    _03b4c8_jump
		imul   $0x004600,%edx,%ebx
		mov    _0d7fc8_data,%ecx
		add    $0x004600,%ecx
		mov    _0ce834_data,%ah
		mov    %ecx,_0d7fc8_data
		test   %ah,%ah
		je     _03b445_jump
		mov    $_0d7fc4_data,%ecx
		mov    $0x000050,%edx
		mov    0x000020(%esp),%edi
		mov    $_0c72e8_data,%esi
		mov    %ebp,%eax
		call   _014073_func
		jmp    _03b45f_jump

	_03b4c8_jump:
		mov    0x000010(%esp),%eax
		mov    %eax,0x00002c(%esp)
		mov    0x00000c(%esp),%eax
		mov    %eax,0x000028(%esp)
		mov    0x000008(%esp),%eax
		mov    %eax,0x000018(%esp)
		mov    0x000014(%esp),%eax
		mov    %eax,%edx
		mov    $0x000004,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000014(%esp),%eax
		mov    %edx,%ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0c94b8_data,%ebp
		shr    $0x000002,%ebp
		imul   %ebp,%ebx
		mov    _0c94b4_data,%edi
		mov    (%esp),%edx
		imul   %edi,%edx
		mov    _0c94ac_data,%esi
		add    %ebx,%eax
		add    %esi,%eax
		add    %edx,%eax
		mov    _0c24b2_data,%ebx
		mov    %eax,0x000024(%esp)
		mov    0x000004(%esp),%eax
		sar    $0x000010,%ebx
		mov    %eax,_0d7fc4_data
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		add    %eax,%eax
		mov    %eax,_0d7fc8_data
		mov    $0x0004b0,%eax
		mov    %edi,_0d7fd0_data
		mov    %eax,_0d7fcc_data
		lea    0x000000(,%edi,4),%eax
		sub    %edi,%eax
		mov    %eax,_0d7fd4_data
		mov    _0c24b4_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%ebx
		lea    -0x000001(%ebx),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		add    %eax,%eax
		neg    %ebp
		add    %eax,%edx
		xor    %ebx,%ebx
		mov    %edx,_0d7fd8_data
		mov    _0c94b8_data,%edx
		mov    %ebx,0x000034(%esp)
		lea    (%esi,%edx,1),%eax
		mov    %edx,_0d7fe0_data
		mov    %eax,_0d7fdc_data
		jmp    _03b5f7_jump

	_03b5b0_jump:
		mov    $_0d7fc4_data,%ebx
		mov    0x000028(%esp),%edi
		xor    %eax,%eax
		mov    0x000018(%esp),%edx
		mov    0x000034(%esp),%ax
		mov    $_0caa4c_data,%ecx
		shl    $0x000008,%eax
		call   _014602_func

	_03b5d1_jump:
		mov    0x00002c(%esp),%ecx
		add    %ecx,%ecx
		mov    %ecx,0x00002c(%esp)
		cmp    $0x000010,%ecx
		jne    _03b5f3_jump
		mov    $0x000001,%edi
		mov    0x000028(%esp),%eax
		add    %edi,%eax
		mov    %edi,0x00002c(%esp)
		mov    %eax,0x000028(%esp)

	_03b5f3_jump:
		incl   0x000034(%esp)

	_03b5f7_jump:
		xor    %eax,%eax
		mov    0x000034(%esp),%ax
		cmp    $0x000004,%eax
		jge    _03b66c_jump
		mov    0x00002c(%esp),%eax
		mov    0x000024(%esp),%esi
		call   _01283c_func
		mov    _0c94b8_data,%eax
		mov    _0c94ac_data,%ebx
		shr    $0x000002,%eax
		mov    _0c94b8_data,%edx
		add    %eax,%ebp
		add    %edx,%ebx
		lea    (%esi,%ebp,1),%eax
		cmp    %ebx,%eax
		jbe    _03b636_jump
		inc    %esi
		sub    %edx,%ebp
		mov    %esi,0x000024(%esp)

	_03b636_jump:
		mov    _0ce834_data,%dl
		add    %ebp,%esi
		test   %dl,%dl
		je     _03b5b0_jump
		mov    $_0d7fc4_data,%ebx
		mov    0x000028(%esp),%edi
		xor    %eax,%eax
		mov    0x000018(%esp),%edx
		mov    0x000034(%esp),%ax
		mov    $_0caa4c_data,%ecx
		shl    $0x000008,%eax
		call   _014665_func
		jmp    _03b5d1_jump

	_03b66c_jump:
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03b678_jump:
		push   %ebx
		push   %edx
		mov    %al,%bl
		call   _03b814_func
		xor    %eax,%eax
		mov    %bl,%al
		cmp    $0x000064,%eax
		jne    _03b6a0_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		or     $0x000008,%al
		mov    $0x0003c2,%edx
		and    $0x0000fb,%al
		jmp    _03b724_jump

	_03b6a0_jump:
		cmp    $0x000050,%eax
		jne    _03b6b8_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		or     $0x000004,%al
		mov    $0x0003c2,%edx
		and    $0x0000f7,%al
		jmp    _03b724_jump

	_03b6b8_jump:
		cmp    $0x00003c,%eax
		jne    _03b725_jump
		mov    $0x000063,%al
		mov    $0x0003c2,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x00007f,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x00000c,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x0000de,%al
		or     $0x000020,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000ff,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000c4,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx

	_03b724_jump:
		out    %al,(%dx)

	_03b725_jump:
		xor    %eax,%eax
		mov    %bl,%al
		cmp    $0x000032,%eax
		jne    _03b78e_jump
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x00007f,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x000074,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x0000de,%al
		or     $0x000020,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000ff,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000fc,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)

	_03b78e_jump:
		mov    %bl,_0c7968_data
		pop    %edx
		pop    %ebx
		ret    



_03b798_func:
		push   %edx
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0d7fe4_data
		mov    $0x000010,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0d7fe5_data
		mov    $0x000011,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0d7fe6_data
		mov    $0x000006,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0d7fe8_data
		mov    $0x000007,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0d7fe7_data
		mov    $0x000016,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    %al,_0d7fe9_data
		pop    %edx
		ret    



_03b814_func:
		push   %edx
		mov    $0x0003c2,%edx
		mov    _0d7fe4_data,%al
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0d7fe5_data,%al
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0d7fe6_data,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0d7fe8_data,%al
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0d7fe7_data,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0d7fe9_data,%al
		out    %al,(%dx)
		pop    %edx
		ret    



_03b884_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ebx
		mov    _0c6b54_data,%ecx
		mov    %ecx,0x000004(%esp)
		mov    _0c24b2_data,%ecx
		movswl %dx,%edx
		sar    $0x000010,%ecx
		sar    $0x000004,%edx
		lea    -0x000014(%ecx),%esi
		imul   %ecx,%edx
		movswl %bx,%ebx
		mov    _0ce820_data,%eax
		sar    $0x000004,%ebx
		mov    _0c24bc_data,%ebp
		add    %ebx,%edx
		mov    %eax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%ebx
		mov    _0ce82c_data,%eax
		sub    %edx,%ebx
		mov    %esi,0x000008(%esp)
		add    %ebx,%ebx
		mov    _095b3e_data,%dl
		add    %ebx,%ebp
		test   %dl,%dl
		je     _03b98d_jump
		cmpb   $0x000000,_0ce843_data
		je     _03b98d_jump
		mov    _0c94b4_data,%ecx
		lea    0x000000(,%esi,4),%edi
		mov    _0ce834_data,%bl
		sub    %esi,%edi
		shl    $0x000004,%ecx
		add    %edi,%edi
		test   %bl,%bl
		je     _03b97b_jump
		mov    0x00000c(%esp),%edx
		mov    _0ccfd0_data,%ebx
		sub    %edx,%ebx
		add    $0x000004,%ebx
		mov    $0x000050,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    (%esp),%eax
		lea    0x000000(,%eax,4),%ebx
		add    %eax,%ebx
		mov    _0ccfd0_data,%esi
		shl    $0x000004,%ebx
		mov    %ebp,%eax
		add    %ebx,%esi
		add    $0x0ab000,%ebx
		add    %edx,%esi
		add    %edx,%ebx
		mov    $_0c6b68_data,%edx
		call   _012bea_func
		jmp    _03b98d_jump

	_03b97b_jump:
		mov    0x00000c(%esp),%esi
		mov    $_0c6b68_data,%edx
		mov    %eax,%ebx
		mov    %ebp,%eax
		call   _012b4a_func

	_03b98d_jump:
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%ebx
		mov    0x00000c(%esp),%esi
		mov    $_0c7268_data,%edx
		lea    0x000000(,%eax,4),%edi
		mov    _0c6b64_data,%ecx
		sub    %eax,%edi
		mov    %ebp,%eax
		add    %edi,%edi
		call   _0129c7_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03b9c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    $_0c8b6c_data,%ebx
		xor    %eax,%eax
		movswl %ax,%ecx
		cmp    $0x000300,%ecx
		jl     _03b9db_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03b9db_jump:
		inc    %eax
		movb   $0x000000,(%edx)
		inc    %edx
		movw   $0x000000,(%ebx)
		add    $0x000002,%ebx
		movswl %ax,%ecx
		cmp    $0x000300,%ecx
		jl     _03b9db_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03b9f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $_0c8b6c_data,%ebx
		mov    %eax,%esi
		xor    %edx,%edx
		movswl %dx,%eax
		cmp    $0x000300,%eax
		jl     _03ba14_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ba14_jump:
		mov    $0x000006,%cl
		inc    %esi
		xor    %eax,%eax
		add    $0x000002,%ebx
		mov    -0x000001(%esi),%al
		inc    %edx
		cwtl   
		shl    %cl,%eax
		mov    %ax,-0x000002(%ebx)
		movswl %dx,%eax
		cmp    $0x000300,%eax
		jl     _03ba14_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ba38_func:
		push   %ecx
		push   %esi
		mov    $0x000006,%ecx
		mov    $0x000001,%edx
		mov    $_0c796c_data,%esi
		sub    %eax,%ecx
		mov    %ax,_0c9170_data
		shl    %cl,%edx
		mov    $_0c796c_data,%eax
		mov    %dx,_0c1af4_data
		mov    $0x000001,%dl
		mov    $0x0000ff,%ecx
		mov    %dl,_0c1af6_data
		call   _03b9c0_func
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		pop    %esi
		pop    %ecx
		ret    



_03ba90_func:
		push   %ecx
		mov    $0x000006,%ecx
		mov    $0x000001,%edx
		sub    %eax,%ecx
		shl    %cl,%edx
		mov    %dx,_0c1af4_data
		mov    $0x000002,%dl
		mov    %ax,_0c9170_data
		mov    %dl,_0c1af6_data
		pop    %ecx
		ret    



_03bab8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    _0c1af4_data,%bx
		test   %bx,%bx
		je     _03bbb5_jump
		mov    $_0c8b6c_data,%eax
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    %ecx,%edx
		xor    %ecx,%ecx
		dec    %edi
		mov    _0c1af6_data,%cl
		mov    %di,_0c1af4_data
		cmp    $0x000001,%ecx
		jne    _03bb25_jump
		xor    %ebx,%ebx
		jmp    _03bb18_jump

	_03baf5_jump:
		xor    %ecx,%ecx
		mov    (%edx),%cl
		mov    %ecx,(%esp)
		mov    (%esp),%edi
		mov    _0c9170_data,%cl
		shl    %cl,%edi
		add    $0x000002,%eax
		mov    %edi,%ecx
		mov    -0x000002(%eax),%di
		inc    %edx
		add    %ecx,%edi
		inc    %ebx
		mov    %di,-0x000002(%eax)

	_03bb18_jump:
		movswl %bx,%ecx
		cmp    $0x000300,%ecx
		jl     _03baf5_jump
		jmp    _03bb5e_jump

	_03bb25_jump:
		cmp    $0x000002,%ecx
		jne    _03bb5e_jump
		xor    %ebx,%ebx
		jmp    _03bb33_jump

	_03bb2e_jump:
		add    $0x000002,%eax
		inc    %edx
		inc    %ebx

	_03bb33_jump:
		movswl %bx,%ecx
		cmp    $0x000300,%ecx
		jge    _03bb5e_jump
		movswl (%eax),%ecx
		test   %ecx,%ecx
		jle    _03bb2e_jump
		xor    %ecx,%ecx
		mov    (%edx),%cl
		mov    %ecx,(%esp)
		mov    (%esp),%edi
		mov    _0c9170_data,%cl
		shl    %cl,%edi
		mov    %edi,%ecx
		sub    %cx,(%eax)
		jmp    _03bb2e_jump

	_03bb5e_jump:
		mov    $_0c8b6c_data,%eax
		xor    %ecx,%ecx
		jmp    _03bb75_jump

	_03bb67_jump:
		inc    %esi
		movswl (%eax),%edx
		add    $0x000002,%eax
		sar    $0x000006,%edx
		inc    %ecx
		mov    %dl,-0x000001(%esi)

	_03bb75_jump:
		movswl %cx,%edx
		cmp    $0x000300,%edx
		jl     _03bb67_jump
		mov    $_0c796c_data,%esi
		mov    $0x0000ff,%ecx
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		cmpw   $0x000000,_0c1af4_data
		jne    _03bbb5_jump
		orb    $0x000040,_0c1af6_data

	_03bbb5_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03bbc0_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		cwtl   
		call   _03ba90_func
		mov    _0c1af4_data,%si
		xor    %ebx,%ebx
		test   %si,%si
		jle    _03bbf5_jump

	_03bbd9_jump:
		call   _016fe8_func
		call   _016fd8_func
		mov    $_0c796c_data,%edx
		mov    %ecx,%eax
		inc    %ebx
		call   _03bab8_func
		cmp    %si,%bx
		jl     _03bbd9_jump

	_03bbf5_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03bbfc_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmp    _0c247a_data,%al
		je     _03bc72_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %al,_0c247a_data
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7c6c_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0c796c_data,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %edi,%eax
		call   _03b9f8_func
		xor    %eax,%eax
		mov    _0c1af6_data,%al
		cmp    $0x000041,%eax
		jne    _03bc72_jump
		mov    $0x0000ff,%ecx
		mov    %edi,%esi
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_03bc72_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_03bc78_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %ax,0x000008(%esp)
		mov    %bx,0x000004(%esp)
		mov    0x000006(%esp),%ecx
		sar    $0x000010,%ecx
		movswl %dx,%edx
		lea    0x000000(,%ecx,4),%esi
		lea    0x000000(,%edx,4),%eax
		sub    %ecx,%esi
		sub    %edx,%eax
		shl    $0x000008,%esi
		mov    _0c7c6c_data(%esi,%eax,1),%bl
		mov    %bl,(%esp)
		mov    _0c7c6d_data(%esi,%eax,1),%bl
		mov    _0c7c6e_data(%esi,%eax,1),%al
		mov    %al,0x000002(%esp)
		mov    %edx,%esi
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %bl,0x000001(%esp)
		mov    %eax,%ecx
		lea    0x000003(%eax),%edi
		jmp    _03bd17_jump

	_03bcd9_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000300,%edx,%edx
		mov    _0c7c6c_data(%edx,%edi,1),%bl
		mov    %bl,_0c7c6c_data(%ecx,%edx,1)
		mov    _0c7c6d_data(%edx,%edi,1),%bl
		add    $0x000003,%edi
		mov    %bl,_0c7c6d_data(%ecx,%edx,1)
		add    $0x000003,%ecx
		mov    _0c7c6b_data(%edx,%edi,1),%al
		inc    %esi
		mov    %al,_0c7c6b_data(%ecx,%edx,1)

	_03bd17_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    %eax,%esi
		jl     _03bcd9_jump
		mov    0x000006(%esp),%ecx
		sar    $0x000010,%ecx
		lea    0x000000(,%ecx,4),%edx
		sub    %ecx,%edx
		mov    %edx,%ecx
		mov    %eax,%edx
		shl    $0x000002,%eax
		shl    $0x000008,%ecx
		sub    %edx,%eax
		mov    (%esp),%dl
		mov    $_0c7c6c_data,%esi
		mov    %dl,_0c7c6c_data(%ecx,%eax,1)
		mov    0x000001(%esp),%dl
		mov    $_0c796c_data,%edi
		mov    %dl,_0c7c6d_data(%ecx,%eax,1)
		mov    0x000002(%esp),%dl
		add    %ecx,%esi
		mov    %dl,_0c7c6e_data(%ecx,%eax,1)
		mov    $0x000300,%ecx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %edi,%eax
		call   _03b9f8_func
		mov    _0c1af2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _03bd9b_jump
		movw   $0x000001,_0c1af4_data

	_03bd9b_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_03bda4_switch:
		.long   _03be1b_case
		.long   _03be7a_case
		.long   _03be82_case
		.long   _03be8a_case
		.long   _03be92_case
		.long   _03be9a_case
		.long   _03bea5_case
		.long   _03beb0_case
		.long   _03bebb_case
		.long   _03bec6_case
		.long   _03bed1_case
		.long   _03bedc_case




_03bdd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		cmpb   $0x000000,_0c2479_data
		je     _03bf90_jump
		mov    _0c2390_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		add    %edi,%eax
		mov    _0c1b04_data,%edi
		shl    $0x000002,%eax
		add    %edi,%eax
		mov    _0c245a_data,%di
		xor    %esi,%esi
		test   %di,%di
		jle    _03bf90_jump
		jmp    _03be66_jump

	_03be1b_case:
		mov    $0x000001,%dh
		xor    %bl,%bl
		xor    %dl,%dl

	_03be21_jump:
		test   %dl,%dl
		jbe    _03befe_jump
		cmp    $0x000001,%dl
		je     _03bf4f_jump

	_03be32_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		call   _03bbfc_func

	_03be3d_jump:
		inc    %esi
		movswl %si,%eax
		mov    _0c2390_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%edi
		add    %edi,%eax
		cmp    _0c245a_data,%si
		jge    _03bf90_jump

	_03be66_jump:
		xor    %edi,%edi
		mov    0x000060(%eax),%di
		cmp    $0x00009e,%edi
		je     _03bee7_jump
		jmp    _03be3d_jump

	_03be7a_case:
		mov    $0x000002,%dh
		xor    %bl,%bl
		xor    %dl,%dl
		jmp    _03be21_jump

	_03be82_case:
		mov    $0x000002,%dh
		mov    $0x000001,%bl
		xor    %dl,%dl
		jmp    _03be21_jump

	_03be8a_case:
		xor    %dh,%dh
		mov    $0x000001,%bl
		xor    %dl,%dl
		jmp    _03be21_jump

	_03be92_case:
		xor    %dh,%dh
		mov    $0x000002,%bl
		xor    %dl,%dl
		jmp    _03be21_jump

	_03be9a_case:
		mov    $0x000001,%dh
		mov    $0x000002,%bl
		xor    %dl,%dl
		jmp    _03be21_jump

	_03bea5_case:
		mov    $0x000001,%bh
		xor    %cl,%cl
		mov    %bh,%dl
		jmp    _03be21_jump

	_03beb0_case:
		mov    $0x000002,%bh
		mov    $0x000001,%dl
		xor    %cl,%cl
		jmp    _03be21_jump

	_03bebb_case:
		mov    $0x000001,%cl
		mov    $0x000002,%bh
		mov    %cl,%dl
		jmp    _03be21_jump

	_03bec6_case:
		mov    $0x000001,%cl
		xor    %bh,%bh
		mov    %cl,%dl
		jmp    _03be21_jump

	_03bed1_case:
		mov    $0x000002,%cl
		mov    $0x000001,%dl
		xor    %bh,%bh
		jmp    _03be21_jump

	_03bedc_case:
		mov    $0x000001,%bh
		mov    $0x000002,%cl
		mov    %bh,%dl
		jmp    _03be21_jump

	_03bee7_jump:
		mov    0x00006c(%eax),%ch
		cmp    $0x00000b,%ch
		ja     _03be21_jump
		movzbl %ch,%edi
		jmp    *%cs:_03bda4_switch(,%edi,4)

	_03befe_jump:
		movzbw _0c1b84_data,%di
		mov    %edi,0x000008(%esp)
		mov    _0c1b44_data,%di
		add    0x000008(%esp),%edi
		mov    %edi,0x000004(%esp)
		movzbw 0x000068(%eax),%di
		mov    0x000028(%eax),%ax
		add    %edi,%eax
		mov    0x000004(%esp),%edi
		cmp    %di,%ax
		jge    _03bf36_jump
		mov    %dh,0x00000c(%esp)
		jmp    _03be32_jump

	_03bf36_jump:
		jle    _03bf41_jump
		mov    %bl,0x00000c(%esp)
		jmp    _03be32_jump

	_03bf41_jump:
		mov    _0c247a_data,%al
		mov    %al,0x00000c(%esp)
		jmp    _03be32_jump

	_03bf4f_jump:
		movzbw _0c1b85_data,%di
		mov    %edi,0x000008(%esp)
		mov    _0c1b48_data,%di
		add    0x000008(%esp),%edi
		mov    %edi,(%esp)
		movzbw 0x000069(%eax),%di
		mov    0x00002c(%eax),%ax
		add    %edi,%eax
		mov    (%esp),%edi
		cmp    %di,%ax
		jge    _03bf85_jump
		mov    %bh,0x00000c(%esp)
		jmp    _03be32_jump

	_03bf85_jump:
		jle    _03bf41_jump
		mov    %cl,0x00000c(%esp)
		jmp    _03be32_jump

	_03bf90_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03bf9c_func:
		push   %edx
		xor    %edx,%edx
		mov    _0c247a_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000008,%eax
		mov    $_0c796c_data,%edx
		add    $_0c7c6c_data,%eax
		call   _03bab8_func
		pop    %edx
		ret    



_03bfc4_func:
		push   %edx
		xor    %edx,%edx
		mov    _0c247a_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7c6c_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03ba38_func
		pop    %edx
		ret    



_03bfec_func:
		push   %edx
		xor    %edx,%edx
		mov    _0c247a_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7c6c_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03ba90_func
		pop    %edx
		ret    



_03c014_func:
		push   %edx
		xor    %edx,%edx
		mov    _0c247a_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7c6c_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03bbc0_func
		pop    %edx
		ret    



_03c03c_func:
		push   %ecx
		push   %esi
		push   %edi
		call   _016fe8_func
		movzbl _095b0c_data,%esi
		cmp    $0x000001,%esi
		jne    _03c079_jump
		call   _03a930_func
		mov    $0x003e80,%ecx
		mov    _0ccfd0_data,%edi
		call   _012783_func
		mov    $0x003e80,%ecx
		mov    _0ccfcc_data,%edi
		call   _012783_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_03c079_jump:
		mov    _095b08_data,%esi
		mov    _0cdefc_data,%edi
		call   _014f51_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03c090_func:
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		xor    %edx,%edx

	_03c099_jump:
		call   _0170c6_func
		xor    %eax,%eax
		mov    _095b0c_data,%al
		cmp    $0x000001,%eax
		jne    _03c0d0_jump
		call   _016fe8_func
		call   _03a930_func
		call   _016fd8_func
		cmpb   $0x000000,_0c6b46_data
		je     _03c0c9_jump
		call   _01704b_func
		mov    %eax,%edx

	_03c0c9_jump:
		call   _03bf9c_func
		jmp    _03c0f4_jump

	_03c0d0_jump:
		call   _016fe8_func
		call   _016fd8_func
		cmpb   $0x000000,_0c6b46_data
		je     _03c0ea_jump
		call   _01704b_func
		mov    %eax,%edx

	_03c0ea_jump:
		call   _03bf9c_func
		call   _03a930_func

	_03c0f4_jump:
		mov    %edx,%eax
		call   *(%esp)
		cwtl   
		test   %eax,%eax
		je     _03c099_jump
		add    $0x000004,%esp
		pop    %edx
		ret    



_03c210_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    $0x000300,%ecx
		mov    $_0c7c6c_data,%esi
		mov    _0c247a_data,%al
		mov    $_0c9174_data,%edi
		mov    %al,_0c9172_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c7c6c_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c796c_data,%edi
		xor    %ah,%ah
		mov    %edx,%esi
		mov    %ah,_0c247a_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

	_03c284_jump:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000300,%ecx
		mov    $_0c9174_data,%esi
		mov    _0c9172_data,%al
		mov    $_0c7c6c_data,%edi
		mov    %al,_0c247a_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03c2b4_func:
		push   %edx
		mov    _0c94d4_data,%eax
		mov    %eax,_0caa34_data
		mov    _0c94d8_data,%eax
		mov    %eax,_0caa38_data
		mov    _0c94dc_data,%eax
		mov    %eax,_0caa3c_data
		xor    %eax,%eax
		mov    _0cd0e0_data,%al
		mov    _0c94e0_data(,%eax,4),%edx
		mov    %edx,_0c94d4_data
		mov    _0c94fc_data(,%eax,4),%edx
		mov    _0c9518_data(,%eax,4),%eax
		mov    %edx,_0c94d8_data
		mov    %eax,_0c94dc_data
		pop    %edx
		ret    



_03c304_func:
		mov    _0caa34_data,%eax
		mov    %eax,_0c94d4_data
		mov    _0caa38_data,%eax
		mov    %eax,_0c94d8_data
		mov    _0caa3c_data,%eax
		mov    %eax,_0c94dc_data
		ret    



_03c324_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x00fa00,%ecx
		mov    _0c94d4_data,%esi
		mov    _0cdefc_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		nop
		ret    



_03c350_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		xor    %ah,%ah
		mov    %ah,_0c247a_data
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _03c378_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		je     _03c3b4_jump

	_03c378_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _03c392_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		je     _03c3b4_jump

	_03c392_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _03c70b_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jne    _03c70b_jump

	_03c3b4_jump:
		xor    %ecx,%ecx
		mov    $0x00003f,%esi
		mov    $0x000003,%edi
		mov    $0x000004,%ebp
		jmp    _03c4ac_jump

	_03c3ca_jump:
		xor    %edx,%edx
		mov    _0c7c6e_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c3e6_jump
		mov    %ebx,%eax

	_03c3e6_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x001e02(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6c_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c415_jump
		mov    %ebx,%eax

	_03c415_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x002a00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6d_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c444_jump
		mov    %ebx,%eax

	_03c444_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x002a01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6e_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03c475_jump
		mov    %ebx,%eax

	_03c475_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x0029ff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7c69_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7c6a_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7c6b_data(%ecx)
		cmp    $0x000300,%ecx
		je     _03c6b1_jump

	_03c4ac_jump:
		mov    _0c916c_data,%eax
		mov    _0c7c6c_data(%ecx),%dl
		mov    %dl,0x002d00(%ecx,%eax,1)
		mov    _0c7c6d_data(%ecx),%dl
		mov    %dl,0x002d01(%ecx,%eax,1)
		mov    _0c7c6e_data(%ecx),%dl
		mov    %dl,0x002d02(%ecx,%eax,1)
		xor    %edx,%edx
		mov    _0c7c6c_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c4fa_jump
		mov    %ebx,%eax

	_03c4fa_jump:
		mov    _0c916c_data,%edx
		mov    %al,(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6d_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c525_jump
		mov    %ebx,%eax

	_03c525_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x000001(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6e_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c550_jump
		mov    %ebx,%eax

	_03c550_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x000002(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6c_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c576_jump
		mov    %ebx,%eax

	_03c576_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x000f00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6d_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c59f_jump
		mov    %ebx,%eax

	_03c59f_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x000f01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6e_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c5c8_jump
		mov    %ebx,%eax

	_03c5c8_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x000f02(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6c_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000006,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c5f6_jump
		mov    %ebx,%eax

	_03c5f6_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x001500(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6d_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000006,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c624_jump
		mov    %ebx,%eax

	_03c624_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x001501(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6e_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c64d_jump
		mov    %ebx,%eax

	_03c64d_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x001502(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6c_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c676_jump
		mov    %ebx,%eax

	_03c676_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x001e00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6d_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c69f_jump
		mov    %ebx,%eax

	_03c69f_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x001e01(%ecx,%edx,1)
		jmp    _03c3ca_jump

	_03c6b1_jump:
		mov    $0x000005,%edx
		xor    %eax,%eax
		call   _03c94c_func
		mov    $0x000007,%edx
		mov    $0x000005,%eax
		call   _03c94c_func
		mov    $0x00000a,%edx
		mov    $0x000007,%eax
		call   _03c94c_func
		mov    $0x00000e,%edx
		mov    $0x00000a,%eax
		call   _03c94c_func
		xor    %edx,%edx
		mov    $0x0000c8,%eax
		mov    %dx,_0ce8e0_data
		call   _064360_func
		inc    %eax
		mov    %ax,_0ce8e2_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c70b_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _03c944_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _03c944_jump
		xor    %ecx,%ecx
		mov    $0x000064,%edi
		mov    $0x00003f,%esi

	_03c739_jump:
		mov    _0c916c_data,%eax
		mov    _0c7c6c_data(%ecx),%dl
		mov    %dl,0x002d00(%ecx,%eax,1)
		mov    _0c7c6d_data(%ecx),%dl
		mov    %dl,0x002d01(%ecx,%eax,1)
		mov    _0c7c6e_data(%ecx),%dl
		xor    %ebx,%ebx
		mov    %dl,0x002d02(%ecx,%eax,1)
		mov    %esi,%eax
		mov    _0c7c6c_data(%ecx),%bl
		cmp    %ebx,%eax
		jle    _03c775_jump
		mov    %ebx,%eax

	_03c775_jump:
		mov    _0c916c_data,%edx
		mov    %al,(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6d_data(%ecx),%dl
		imul   $0x00004d,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c79a_jump
		mov    %ebx,%eax

	_03c79a_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x000001(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6e_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c7c0_jump
		mov    %ebx,%eax

	_03c7c0_jump:
		mov    _0c916c_data,%edx
		xor    %ebx,%ebx
		mov    %al,0x000002(%ecx,%edx,1)
		mov    %esi,%eax
		mov    _0c7c6c_data(%ecx),%bl
		cmp    %ebx,%eax
		jle    _03c7da_jump
		mov    %ebx,%eax

	_03c7da_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x002a00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6d_data(%ecx),%dl
		imul   $0x00004d,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c803_jump
		mov    %ebx,%eax

	_03c803_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x002a01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6e_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03c82f_jump
		mov    %ebx,%eax

	_03c82f_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x0029ff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7c69_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7c6a_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7c6b_data(%ecx)
		cmp    $0x0002fd,%ecx
		jne    _03c739_jump
		mov    $0x00000e,%edx
		xor    %eax,%eax
		mov    $0x000180,%ecx
		call   _03c94c_func
		mov    $0x000064,%edi
		mov    $0x00003f,%esi

	_03c881_jump:
		xor    %edx,%edx
		mov    _0c7c6c_data(%ecx),%dl
		imul   $0x000054,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c89d_jump
		mov    %ebx,%eax

	_03c89d_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x001b00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6d_data(%ecx),%dl
		imul   $0x00003e,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c8c6_jump
		mov    %ebx,%eax

	_03c8c6_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x001b01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7c6e_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03c8f2_jump
		mov    %ebx,%eax

	_03c8f2_jump:
		mov    _0c916c_data,%edx
		mov    %al,0x001aff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7c69_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7c6a_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7c6b_data(%ecx)
		cmp    $0x00020d,%ecx
		jne    _03c881_jump
		mov    $0x000009,%edx
		xor    %eax,%eax
		call   _03c94c_func
		mov    $0x00000e,%edx
		mov    $0x000009,%eax
		call   _03c94c_func

	_03c944_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03c94c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %ax,0x000020(%esp)
		mov    %dx,0x000018(%esp)
		inc    %eax
		mov    %ax,0x000014(%esp)
		cmp    %dx,%ax
		jge    _03caee_jump
		xor    %esi,%esi
		mov    %si,0x00001c(%esp)
		jmp    _03cabf_jump

	_03c979_jump:
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000300,%eax,%edi
		mov    _0c916c_data,%edx
		lea    (%ecx,%ecx,2),%ecx
		lea    (%edx,%edi,1),%ebx
		mov    (%ecx,%ebx,1),%bl
		mov    0x000012(%esp),%ebp
		mov    0x000016(%esp),%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		mov    %ebp,(%esp)
		mov    %esi,%ebp
		sub    (%esp),%ebp
		and    $0x0000ff,%ebx
		mov    %ebp,0x000004(%esp)
		imul   %ebx,%ebp
		mov    %ebp,0x000008(%esp)
		imul   $0x000300,%esi,%ebp
		add    %ebp,%edx
		mov    (%ecx,%edx,1),%dl
		mov    (%esp),%ebx
		and    $0x0000ff,%edx
		sub    %eax,%ebx
		imul   %ebx,%edx
		mov    %ebx,0x000010(%esp)
		add    0x000008(%esp),%edx
		sub    %eax,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		mov    (%esp),%edx
		cmp    %ebx,%eax
		jle    _03c9f8_jump
		mov    %ebx,%eax

	_03c9f8_jump:
		mov    %eax,0x000008(%esp)
		imul   $0x000300,%edx,%eax
		mov    _0c916c_data,%edx
		mov    %eax,0x00000c(%esp)
		add    %edx,%eax
		mov    0x000008(%esp),%bl
		mov    %bl,(%ecx,%eax,1)
		lea    (%edx,%edi,1),%eax
		mov    0x000001(%ecx,%eax,1),%al
		mov    0x000004(%esp),%ebx
		and    $0x0000ff,%eax
		imul   %eax,%ebx
		add    %ebp,%edx
		mov    0x000001(%ecx,%edx,1),%al
		mov    0x000010(%esp),%edx
		and    $0x0000ff,%eax
		imul   %eax,%edx
		add    %ebx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		cmp    %ebx,%eax
		jle    _03ca52_jump
		mov    %ebx,%eax

	_03ca52_jump:
		mov    _0c916c_data,%edx
		mov    %eax,0x000008(%esp)
		mov    0x00000c(%esp),%eax
		add    %edx,%eax
		mov    0x000008(%esp),%bl
		mov    %bl,0x000001(%ecx,%eax,1)
		lea    (%edx,%edi,1),%eax
		mov    0x000002(%ecx,%eax,1),%al
		mov    0x000004(%esp),%ebx
		and    $0x0000ff,%eax
		imul   %eax,%ebx
		lea    (%edx,%ebp,1),%eax
		xor    %edx,%edx
		mov    0x000010(%esp),%edi
		mov    0x000002(%ecx,%eax,1),%dl
		imul   %edi,%edx
		add    %ebx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		xor    %ebx,%ebx
		mov    0x00000c(%esp),%ebp
		mov    %al,%bl
		mov    $0x00003f,%eax
		mov    0x00001c(%esp),%edi
		cmp    %ebx,%eax
		jle    _03caad_jump
		mov    %ebx,%eax

	_03caad_jump:
		mov    _0c916c_data,%edx
		inc    %edi
		add    %ebp,%edx
		mov    %di,0x00001c(%esp)
		mov    %al,0x000002(%ecx,%edx,1)

	_03cabf_jump:
		mov    0x00001a(%esp),%ecx
		sar    $0x000010,%ecx
		cmp    $0x000100,%ecx
		jl     _03c979_jump
		mov    0x000014(%esp),%ebx
		inc    %ebx
		mov    0x000018(%esp),%ecx
		mov    %bx,0x000014(%esp)
		cmp    %cx,%bx
		jge    _03caee_jump
		xor    %esi,%esi
		mov    %si,0x00001c(%esp)
		jmp    _03cabf_jump

	_03caee_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03caf8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ce8e0_data,%bx
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _03cb7e_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _03cb7e_jump
		cmpb   $0x000000,_0c249a_data
		je     _03cb61_jump
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c916c_data,%esi
		shl    $0x000008,%eax
		add    %eax,%esi
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		mov    _0ce8e0_data,%bx
		inc    %ebx
		jmp    _03cb6b_jump

	_03cb61_jump:
		test   %bx,%bx
		jne    _03cb6b_jump
		mov    $0x000001,%ebx

	_03cb6b_jump:
		movswl %bx,%eax
		cmp    $0x00000f,%eax
		jne    _03cc9a_jump
		xor    %ebx,%ebx
		jmp    _03cc9a_jump

	_03cb7e_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _03cb98_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		je     _03cbd4_jump

	_03cb98_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _03cbb2_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		je     _03cbd4_jump

	_03cbb2_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _03cc9a_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jne    _03cc9a_jump

	_03cbd4_jump:
		testb  $0x000040,_0c1af6_data
		je     _03cc9a_jump
		mov    _0c4734_data,%eax
		mov    _0ce8e0_data,%esi
		mov    %eax,%edx
		sar    $0x000010,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		test   %edx,%edx
		je     _03cc03_jump
		test   %bx,%bx
		je     _03cc9a_jump

	_03cc03_jump:
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c916c_data,%esi
		shl    $0x000008,%eax
		add    %eax,%esi
		mov    %bx,_0ce8e0_data
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		mov    _0ce8e0_data,%bx
		movswl %bx,%eax
		test   %eax,%eax
		jne    _03cc53_jump
		mov    $0x0000c3,%eax
		call   _06b320_func

	_03cc53_jump:
		mov    _0c249a_data,%dl
		mov    _0ce8e0_data,%bx
		test   %dl,%dl
		jne    _03cc67_jump
		inc    %ebx
		jmp    _03cc71_jump

	_03cc67_jump:
		test   %bx,%bx
		jne    _03cc71_jump
		mov    $0x000001,%ebx

	_03cc71_jump:
		movswl %bx,%eax
		cmp    $0x00000f,%eax
		jne    _03cc9a_jump
		xor    %ebx,%ebx
		mov    $0x000190,%eax
		mov    %bx,_0ce8e0_data
		call   _064360_func
		inc    %eax
		mov    _0ce8e0_data,%bx
		mov    %ax,_0ce8e2_data

	_03cc9a_jump:
		mov    %bx,_0ce8e0_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03cca8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %al,%cl
		xor    %eax,%eax
		mov    _095b0c_data,%al
		cmp    $0x0000ff,%eax
		jne    _03ccc8_jump
		call   _0148da_func
		call   _03b798_func

	_03ccc8_jump:
		xor    %eax,%eax
		mov    _095b0c_data,%al
		cmp    $0x000001,%eax
		je     _03cdc3_jump
		call   _014996_func
		mov    $0x010000,%ebx
		mov    $_0166a8_func,%esi
		mov    $_01682e_func,%edi
		mov    _095b08_data,%eax
		xor    %edx,%edx
		mov    $_0169c5_func,%ebp
		call   _0787d0_func
		xor    %eax,%eax
		mov    $_016541_func,%edx
		mov    %cl,%al
		mov    $_016535_func,%ebx
		call   _03b678_jump
		mov    $0x000001,%ah
		mov    $_0166b4_func,%ecx
		mov    %edx,_0cdf18_data
		mov    %ebx,_0cdf1c_data
		mov    %esi,_0cdf24_data
		mov    %edi,_0cdf28_data
		mov    %ebp,_0cdf2c_data
		mov    $_012cb4_func,%edx
		mov    $_012d15_func,%ebx
		mov    $_012d85_func,%esi
		mov    $_012e02_func,%edi
		mov    $_012eb7_func,%ebp
		mov    %ah,_095b0c_data
		mov    %ecx,_0cdf20_data
		mov    $_012ce4_func,%eax
		mov    $_012d45_func,%ecx
		mov    %edx,_0cdf34_data
		mov    %ebx,_0cdf38_data
		mov    %esi,_0cdf40_data
		mov    %edi,_0cdf44_data
		mov    %ebp,_0cdf48_data
		mov    $_013064_func,%edx
		mov    $_012f33_func,%ebx
		mov    $_012dd2_func,%esi
		mov    %eax,_0cdf30_data
		mov    %ecx,_0cdf3c_data
		mov    $_012f8a_func,%eax
		mov    $_012e7e_func,%ecx
		mov    %edx,_0cdf50_data
		mov    %ebx,_0cdf54_data
		mov    %esi,_0cdf5c_data
		mov    %eax,_0cdf4c_data
		mov    %ecx,_0cdf58_data

	_03cdc3_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03cdcc_func:
		call   _014acd_func
		movb   $0x0000ff,_095b0c_data
		ret    



_03cddc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %al,%cl
		xor    %eax,%eax
		mov    _095b0c_data,%al
		cmp    $0x0000ff,%eax
		jne    _03cdfc_jump
		call   _0148da_func
		call   _03b798_func

	_03cdfc_jump:
		xor    %eax,%eax
		mov    _095b0c_data,%al
		test   %eax,%eax
		je     _03cf11_jump
		call   _01493d_func
		mov    $0x00fa00,%ebx
		mov    _0cdefc_data,%eax
		xor    %edx,%edx
		mov    $_016c4b_func,%esi
		call   _0787d0_func
		mov    $0x00fa00,%ebx
		mov    _095b08_data,%eax
		xor    %edx,%edx
		mov    $_016d39_func,%edi
		call   _0787d0_func
		mov    _095b08_data,%eax
		mov    $_016dd8_jump,%ebp
		call   _014838_func
		xor    %eax,%eax
		mov    $_016b73_jump,%edx
		mov    %cl,%al
		mov    $_016b67_func,%ebx
		call   _03b678_jump
		mov    $_016c57_jump,%ecx
		mov    %edx,_0cdf18_data
		mov    %ebx,_0cdf1c_data
		mov    %esi,_0cdf24_data
		mov    %edi,_0cdf28_data
		mov    %ebp,_0cdf2c_data
		xor    %ah,%ah
		mov    $_0157fe_func,%edx
		mov    $_01582e_func,%ebx
		mov    $_01589a_func,%esi
		mov    $_015913_func,%edi
		mov    $_01599d_func,%ebp
		mov    %ah,_095b0c_data
		mov    %ecx,_0cdf20_data
		mov    $_0157c7_func,%eax
		mov    $_01585e_func,%ecx
		mov    %edx,_0cdf34_data
		mov    %ebx,_0cdf38_data
		mov    %esi,_0cdf40_data
		mov    %edi,_0cdf44_data
		mov    %ebp,_0cdf48_data
		mov    $_015ab2_func,%edx
		mov    $_0159ee_func,%ebx
		mov    $_0158e3_func,%esi
		mov    %eax,_0cdf30_data
		mov    %ecx,_0cdf3c_data
		mov    $_015a3b_func,%eax
		mov    $_015964_func,%ecx
		mov    %edx,_0cdf50_data
		mov    %ebx,_0cdf54_data
		mov    %esi,_0cdf5c_data
		mov    %eax,_0cdf4c_data
		mov    %ecx,_0cdf58_data

	_03cf11_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03cf20_func:
		test   %dl,%dl
		je     _03cf2b_jump
		mov    $0x00004d,%edx
		jmp    _03cf30_jump

	_03cf2b_jump:
		mov    $0x0000ef,%edx

	_03cf30_jump:
		mov    %dx,0x000060(%eax)
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		mov    _0930b4_data(,%edx,2),%dx
		mov    %dx,0x00005c(%eax)
		ret    



_03cf48_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c519e_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _03cf86_jump
		mov    %edx,%eax
		push   $0xffffffc1
		shl    $0x000005,%eax
		mov    $0xffffffcd,%ecx
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01ce68_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03cf86_jump:
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%ax
		mov    %ax,0x000040(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03cf9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		cmpb   $0x000000,0x00007f(%eax)
		je     _03cfaa_jump
		decb   0x00007f(%ebx)

	_03cfaa_jump:
		mov    0x000081(%ebx),%dh
		xor    %eax,%eax
		shl    $0x000004,%dh
		mov    0x000060(%ebx),%ax
		shr    $0x000007,%dh
		cmp    $0x0000ef,%eax
		jne    _03cfcf_jump
		mov    %ebx,%eax
		call   _01dc54_func
		jmp    _03cfd6_jump

	_03cfcf_jump:
		mov    %ebx,%eax
		call   _03cf48_func

	_03cfd6_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    %dh,%dl
		mov    %eax,%ecx
		xor    %eax,%eax
		shl    $0x000008,%ecx
		mov    0x00006c(%ebx),%al
		and    $0x000001,%dl
		add    %ecx,%eax
		shl    $0x000003,%dl
		cmp    $0x000009,%eax
		jb     _03d278_jump
		jbe    _03d16c_jump
		cmp    $0x000010,%eax
		jb     _03d266_jump
		jbe    _03d07e_jump
		cmp    $0x000013,%eax
		jb     _03d25e_jump
		jbe    _03d09c_jump
		cmp    $0x000014,%eax
		jbe    _03d060_jump
		cmp    $0x000200,%eax
		je     _03d21c_jump
		jmp    _03d2d6_jump

	_03d031_jump:
		movw   $0x00fff8,0x000042(%ebx)
		movw   $0x000000,0x000040(%ebx)
		jmp    _03d2d6_jump

	_03d042_jump:
		cmpb   $0x000000,_0c1ed2_data
		je     _03d2d6_jump
		mov    $0x00000f,%edx
		mov    %ebx,%eax
		call   _01d498_func
		jmp    _03d2d6_jump

	_03d060_jump:
		cmpb   $0x000000,_0c1ed2_data
		je     _03d2d6_jump
		mov    $0x000012,%edx
		mov    %ebx,%eax
		call   _01d498_func
		jmp    _03d2d6_jump

	_03d07e_jump:
		cmpb   $0x000000,_0c1ed2_data
		jne    _03d2d6_jump
		mov    $0x000011,%edx
		mov    %ebx,%eax
		call   _01d498_func
		jmp    _03d2d6_jump

	_03d09c_jump:
		cmpb   $0x000000,_0c1ed2_data
		jne    _03d2d6_jump
		mov    $0x000014,%edx
		mov    %ebx,%eax
		call   _01d498_func
		jmp    _03d2d6_jump

	_03d0ba_jump:
		mov    0x000081(%ebx),%al
		and    $0x0000f7,%al
		mov    %al,%ah
		or     %dl,%ah
		mov    %ah,0x000081(%ebx)
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _03d0f0_jump
		xor    %eax,%eax
		mov    0x00006b(%ebx),%al
		test   %eax,%eax
		jmp    _03d11a_jump

	_03d0f0_jump:
		xor    %edx,%edx
		mov    0x00006a(%ebx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ebx),%eax
		mov    0x00000a(%edx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebx),%dl
		cmp    %eax,%edx

	_03d11a_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _03d2d6_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _03d2d6_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _03cf20_func
		movw   $0x000000,0x000040(%ebx)
		jmp    _03d2d6_jump

	_03d16c_jump:
		mov    0x000081(%ebx),%cl
		xor    %eax,%eax
		and    $0x0000f7,%cl
		mov    0x00006d(%ebx),%al
		mov    %cl,0x000081(%ebx)
		mov    %cl,%ch
		shl    $0x000002,%eax
		or     %dl,%ch
		mov    0x00000c(%ebx),%edx
		add    %eax,%edx
		mov    %ch,0x000081(%ebx)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _03d1a9_jump
		xor    %eax,%eax
		mov    0x00006b(%ebx),%al
		test   %eax,%eax
		jmp    _03d1cc_jump

	_03d1a9_jump:
		xor    %edx,%edx
		mov    0x00006a(%ebx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ebx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebx),%dl
		cmp    %eax,%edx

	_03d1cc_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _03d2d6_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _03d2d6_jump
		mov    %ebx,%eax
		call   _04d2c4_func
		movw   $0x00fffd,0x000042(%ebx)
		jmp    _03d2d6_jump

	_03d21c_jump:
		mov    0x000081(%ebx),%dh
		and    $0x0000f7,%dh
		mov    %dh,%cl
		or     %dl,%cl
		mov    %ebx,%eax
		mov    %cl,0x000081(%ebx)
		call   _04d2c4_func
		jmp    _03d2d6_jump

	_03d23b_jump:
		mov    0x000081(%ebx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dh
		or     %dl,%dh
		mov    %dh,0x000081(%ebx)
		jmp    _03d2d6_jump

	_03d253_jump:
		movw   $0x000064,0x000056(%ebx)
		jmp    _03d2d6_jump

	_03d25e_jump:
		cmp    $0x000011,%eax
		jmp    _03d2d0_jump

	_03d266_jump:
		cmp    $0x00000b,%eax
		jb     _03d23b_jump
		jbe    _03d060_jump
		cmp    $0x00000d,%eax
		je     _03d2c1_jump
		jmp    _03d2d6_jump

	_03d278_jump:
		cmp    $0x000003,%eax
		jb     _03d2a0_jump
		jbe    _03d031_jump
		cmp    $0x000006,%eax
		jb     _03d299_jump
		jbe    _03d0ba_jump
		cmp    $0x000008,%eax
		je     _03d060_jump
		jmp    _03d2d6_jump

	_03d299_jump:
		cmp    $0x000005,%eax
		je     _03d2c1_jump
		jmp    _03d2d6_jump

	_03d2a0_jump:
		cmp    $0x000001,%eax
		jb     _03d2ce_jump
		jbe    _03d253_jump
		mov    %dh,%al
		mov    0x000081(%ebx),%ch
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		mov    %ch,%ah
		or     %al,%ah
		mov    %ah,0x000081(%ebx)

	_03d2c1_jump:
		mov    %ebx,%eax
		movb   $0x000032,0x00007f(%ebx)
		call   _03d63c_func
		jmp    _03d2d6_jump

	_03d2ce_jump:
		test   %eax,%eax

	_03d2d0_jump:
		je     _03d042_jump

	_03d2d6_jump:
		mov    0x000056(%ebx),%dx
		test   %dx,%dx
		je     _03d2e6_jump
		mov    %edx,%ecx
		dec    %ecx
		mov    %cx,0x000056(%ebx)

	_03d2e6_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d2ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    (%ecx),%ecx
		mov    0x00006c(%eax),%dl
		testb  $0x000004,0x000007(%ecx,%edx,8)
		je     _03d366_jump
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		cmp    $0x00004d,%edx
		jne    _03d319_jump
		xor    %ebx,%ebx
		jmp    _03d31e_jump

	_03d319_jump:
		mov    $0x000005,%ebx

	_03d31e_jump:
		xor    %ecx,%ecx
		mov    0x00006a(%eax),%cl
		lea    0x000000(,%ecx,4),%edx
		sub    %ecx,%edx
		shl    $0x000002,%edx
		mov    0x000004(%eax),%ecx
		add    %ecx,%edx
		mov    0x000008(%edx),%cx
		and    $0x00003f,%ch
		and    $0x00ffff,%ecx
		mov    0x00006b(%eax),%al
		and    $0x0000ff,%eax
		imul   %eax,%ecx
		shl    $0x000002,%ecx
		mov    (%edx),%eax
		movswl %bx,%edx
		add    %ecx,%eax
		mov    0x000003(%eax,%edx,4),%al
		and    $0x0000ff,%eax
		jne    _03d366_jump
		mov    $0xffffffff,%ebx

	_03d366_jump:
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d36c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%edi
		mov    %edx,0x000004(%esp)
		mov    %bl,0x00001c(%esp)
		mov    %cl,0x000018(%esp)
		call   _03d2ec_func
		mov    %eax,%ecx
		cwtl   
		cmp    $0xffffffff,%eax
		je     _03d632_jump
		mov    _0c1b04_data,%esi
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _03d3ba_jump
		jmp    _03d632_jump

	_03d3aa_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _03d632_jump

	_03d3ba_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x00004e,%edx
		jne    _03d3aa_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _03d3aa_jump
		cmpb   $0x000000,0x00001c(%esp)
		je     _03d3f2_jump
		mov    0x000081(%esi),%dl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%dl
		and    $0x000008,%al
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,0x000081(%esi)
		jmp    _03d414_jump

	_03d3f2_jump:
		mov    0x000081(%edi),%bl
		lea    0x000081(%esi),%edx
		test   $0x000008,%bl
		sete   %al
		mov    (%edx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%ah
		or     %al,%ah
		mov    %ah,(%edx)

	_03d414_jump:
		mov    0x000004(%esp),%eax
		mov    %ax,0x000042(%esi)
		lea    0x000008(%esp),%eax
		mov    %esp,%ebx
		push   %eax
		lea    0x000014(%esp),%eax
		movswl %cx,%edx
		push   %eax
		lea    0x000014(%esp),%ecx
		mov    %edi,%eax
		call   _01d840_func
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000011,%eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000a(%esp),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00006c(%edi),%al
		cmp    $0x000005,%al
		jb     _03d58a_jump
		jbe    _03d4d4_jump
		cmp    $0x00000d,%al
		jb     _03d592_jump
		jbe    _03d518_jump
		cmp    $0x000012,%al
		jmp    _03d58c_jump

	_03d48c_jump:
		mov    $0x000030,%ecx
		mov    0x00002c(%esi),%ebp
		mov    0x00000c(%esi),%edx
		xor    %eax,%eax
		mov    %cx,0x000014(%esp)
		mov    0x00006d(%esi),%al
		dec    %ebp
		shl    $0x000002,%eax
		mov    $0x000003,%cl
		add    %eax,%edx
		mov    %ebp,0x00002c(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    %cl,0x000020(%esp)
		mov    0x000005(%edx,%eax,8),%ch
		and    $0x00000f,%ch
		mov    %ch,%bl
		or     $0x0000a0,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		movb   $0x000000,0x000071(%esi)
		movb   $0x00000a,0x000072(%esi)
		jmp    _03d592_jump

	_03d4d4_jump:
		mov    $0x000003,%ch
		xor    %eax,%eax
		mov    %ch,0x000020(%esp)
		mov    0x00006d(%esi),%al
		lea    0x000018(%edx),%ecx
		shl    $0x000002,%eax
		mov    0x00000c(%esi),%edx
		mov    $0x000020,%ebx
		add    %eax,%edx
		mov    %ecx,0x00002c(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    %bx,0x000014(%esp)
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %bl,%bh
		or     $0x000020,%bh
		mov    %bh,0x000005(%edx,%eax,8)
		movb   $0x000000,0x000071(%esi)
		movb   $0x000000,0x000072(%esi)
		jmp    _03d592_jump

	_03d518_jump:
		mov    $0x000020,%eax
		mov    $0x000008,%edx
		call   _064360_func
		sub    %eax,%edx
		mov    %dx,0x000014(%esp)
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _03d543_jump
		mov    $0x000001,%eax
		jg     _03d543_jump
		neg    %eax

	_03d543_jump:
		shl    $0x000003,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000014(%esp)
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %bl,%bl
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    %bl,0x000020(%esp)
		mov    0x000005(%edx,%eax,8),%bh
		and    $0x00000f,%bh
		mov    %bh,%cl
		or     $0x000020,%cl
		mov    %cl,0x000005(%edx,%eax,8)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ebx
		movb   $0x000000,0x000072(%esi)
		sub    $0x000014,%ebx
		mov    %ebx,0x00002c(%esi)
		jmp    _03d592_jump

	_03d58a_jump:
		cmp    $0x000002,%al

	_03d58c_jump:
		je     _03d48c_jump

	_03d592_jump:
		cmpb   $0x000000,0x00001c(%esp)
		jne    _03d5a0_jump
		movw   $0x000010,0x000014(%esp)

	_03d5a0_jump:
		testb  $0x000008,0x000081(%edi)
		je     _03d5af_jump
		mov    0x000014(%esp),%eax
		jmp    _03d5b5_jump

	_03d5af_jump:
		mov    0x000014(%esp),%eax
		neg    %eax

	_03d5b5_jump:
		mov    %ax,0x000040(%esi)
		mov    $0x000004,%cl
		mov    0x000040(%esi),%ax
		xor    %edx,%edx
		test   %ax,%ax
		js     _03d5cb_jump
		sar    %cl,%ax
		jmp    _03d5d4_jump

	_03d5cb_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03d5d4_jump:
		mov    0x000020(%esp),%dl
		cwtl   
		imul   %edx,%eax
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		mov    0x000081(%esi),%al
		mov    %edx,0x000028(%esi)
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _058bb4_func
		mov    %esi,%eax
		call   _01dcec_func
		mov    0x000081(%esi),%ch
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ch
		mov    %esi,%eax
		mov    %ch,0x000081(%esi)
		call   _01f584_func
		mov    0x000018(%esp),%al
		mov    %al,0x00007f(%esi)
		andb   $0x0000bf,0x000081(%esi)

	_03d632_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03d63c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _03d847_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _03d661_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000015,%eax
		jge    _03d68f_jump

	_03d661_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%eax
		jne    _03d675_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000012,%eax
		jge    _03d68f_jump

	_03d675_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000d,%eax
		jne    _03d689_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000002,%eax
		jge    _03d68f_jump

	_03d689_jump:
		movw   $0x000000,0x000052(%esi)

	_03d68f_jump:
		mov    0x000050(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _03d84d_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _03d6af_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000015,%eax
		je     _03d6df_jump

	_03d6af_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%eax
		jne    _03d6c3_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000012,%eax
		je     _03d6df_jump

	_03d6c3_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000d,%eax
		jne    _03d84d_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000002,%eax
		jne    _03d84d_jump

	_03d6df_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c2498_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _03d84d_jump
		cmp    $0x000005,%eax
		jne    _03d732_jump
		mov    $0x000028,%ecx
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _03d36c_func
		jmp    _03d83c_jump

	_03d732_jump:
		cmp    $0x000002,%eax
		jne    _03d758_jump
		mov    $0x000028,%ecx
		mov    $0x000001,%ebx
		mov    $0xffffffff,%edx
		mov    %esi,%eax
		call   _03d36c_func
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d758_jump:
		mov    $0x000064,%ecx
		mov    $0x000001,%ebx
		mov    $0xfffffffd,%edx
		mov    %esi,%eax
		call   _03d36c_func
		mov    0x000081(%esi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,%bh
		mov    $0x000064,%ecx
		or     %dl,%bh
		mov    $0xfffffffd,%edx
		mov    %bh,(%eax)
		mov    $0x000001,%ebx
		mov    %esi,%eax
		call   _03d36c_func
		mov    0x000081(%esi),%cl
		lea    0x000081(%esi),%eax
		test   $0x000008,%cl
		sete   %dl
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    $0x000001,%ebx
		mov    %ch,%dh
		or     %dl,%dh
		mov    $0x000064,%ecx
		mov    %dh,(%eax)
		mov    $0xfffffffd,%edx
		mov    %esi,%eax
		call   _03d36c_func
		mov    0x000081(%esi),%bl
		lea    0x000081(%esi),%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		mov    $0x000001,%ebx
		or     %dl,%cl
		mov    $0xfffffffd,%edx
		mov    %cl,(%eax)
		mov    $0x000064,%ecx
		mov    %esi,%eax
		call   _03d36c_func
		mov    0x000081(%esi),%ch
		lea    0x000081(%esi),%eax
		test   $0x000008,%ch
		sete   %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)

	_03d83c_jump:
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d847_jump:
		movw   $0x000000,0x000052(%esi)

	_03d84d_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d854_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%al
		testb  $0x000001,0x000007(%ebx,%eax,8)
		je     _03d979_jump
		cmpw   $0x000000,0x000056(%esi)
		jne    _03d979_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00004d,%eax
		je     _03d89a_jump
		movswl %dx,%eax
		cmp    $0x000003,%eax
		jne    _03d979_jump

	_03d89a_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x0000ef,%eax
		jne    _03d8d5_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _03d8d5_jump
		mov    $0x000014,%ecx
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _03d36c_func

	_03d8d5_jump:
		movb   $0x000001,_0c1ed3_data
		mov    %esi,%eax
		call   _01e92c_func
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		test   %eax,%eax
		jne    _03d8f6_jump
		mov    $0x000003,%ebx
		jmp    _03d970_jump

	_03d8f6_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x00004d,%edx
		jne    _03d96b_jump
		xor    %edx,%edx
		mov    0x000077(%esi),%dl
		sub    %eax,%edx
		cmp    $0x000003,%edx
		jl     _03d95b_jump
		mov    $0x000006,%edx
		mov    %esi,%eax
		call   _01d498_func
		mov    _0c519e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03d979_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0c1b04_data,%eax
		shl    $0x000002,%esi
		add    %esi,%eax
		call   _058b14_func
		mov    _0c519e_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0c1b04_data,%eax
		movw   $0x000000,0x000048(%eax,%esi,4)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03d95b_jump:
		mov    $0x00000c,%edx
		mov    %esi,%eax
		call   _01d498_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03d96b_jump:
		mov    $0x000001,%ebx

	_03d970_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func

	_03d979_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03d980_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		cmpb   $0x000000,0x00007f(%eax)
		jne    _03da19_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		test   %eax,%eax
		jne    _03da19_jump
		mov    0x00006c(%ebx),%al
		cmp    $0x00000b,%eax
		jne    _03d9ab_jump
		mov    $0x000002,%edx
		jmp    _03da12_jump

	_03d9ab_jump:
		test   %eax,%eax
		jne    _03da08_jump
		xor    %eax,%eax
		mov    0x000028(%ebx),%dx
		mov    0x000068(%ebx),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b44_data,%cx
		mov    _0c1b84_data,%al
		add    %ecx,%eax
		sub    %eax,%edx
		mov    %dx,0x00003a(%ebx)
		xor    %edx,%edx
		mov    0x000038(%ebx),%eax
		mov    0x00007a(%ebx),%dl
		sar    $0x000010,%eax
		add    $0x000010,%edx
		test   %eax,%eax
		jge    _03d9e4_jump
		neg    %eax

	_03d9e4_jump:
		cmp    %edx,%eax
		jle    _03d9f8_jump
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d498_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d9f8_jump:
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _01d498_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03da08_jump:
		cmp    $0x000004,%eax
		jne    _03da19_jump
		mov    $0x000005,%edx

	_03da12_jump:
		mov    %ebx,%eax
		call   _01d498_func

	_03da19_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03da20_func:
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,0x00007f(%eax)
		je     _03da37_jump
		cmpb   $0x000000,_0c249a_data
		je     _03da48_jump
		decb   0x00007f(%edx)
		pop    %edx
		ret    

	_03da37_jump:
		mov    $0x000093,%eax
		call   _06b320_func
		mov    %edx,%eax
		call   _072c60_func

	_03da48_jump:
		pop    %edx
		ret    



_03da50_func:
		push   %ebx
		push   %edx
		mov    _0c1ae4_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		orb    $0x000004,0x000081(%edx)
		mov    _0c247c_data,%eax
		movl   $0x000001,0x000024(%edx)
		sar    $0x000010,%eax
		movl   $0x0000a0,0x000028(%edx)
		sub    $0x000032,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%bl
		call   _0186d4_func
		sub    %ebx,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0c24f4_data,%eax
		sar    $0x000010,%eax
		add    $0x000130,%eax
		mov    _0c247c_data,%bx
		mov    %eax,0x000028(%edx)
		xor    %eax,%eax
		add    $0x000140,%ebx
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		sub    $0x00003c,%ebx
		mov    %bx,0x00003c(%edx)
		mov    0x000081(%edx),%bl
		and    $0x0000f7,%bl
		mov    _0c1ec0_data,%eax
		mov    %bl,0x000081(%edx)
		mov    _0c32e4_data,%bh
		movb   $0x000032,0x00007f(%edx)
		or     $0x000001,%bh
		movb   $0x000008,0x00006e(%eax)
		mov    %bh,_0c32e4_data
		pop    %edx
		pop    %ebx
		ret    



_03db04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    _0c1b44_data,%eax
		mov    _0c1b84_data,%dl
		add    $0x000008,%eax
		add    %edx,%eax
		mov    _0c247a_data,%edx
		sar    $0x000010,%edx
		sub    %edx,%eax
		xor    %ebx,%ebx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b85_data,%bl
		mov    _0c1b90_data,%al
		sub    %eax,%ebx
		mov    %ebx,%eax
		mov    _0d7fea_data,%ebx
		sar    $0x000010,%ebx
		sub    %eax,%ebx
		sar    %edx
		lea    0x00005a(%ebx),%eax
		sub    %edx,%eax
		mov    %ax,_0d7fee_data
		mov    _0c1ae6_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x000081(%edx),%ah
		movl   $0x0000a0,0x000028(%edx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    _0c247c_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x00002c(%edx),%ax
		mov    $0x000110,%ecx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		xor    %ebx,%ebx
		call   _0186d4_func
		mov    0x000068(%edx),%bl
		sub    %ebx,%ecx
		mov    %ecx,0x000028(%edx)
		mov    0x000028(%edx),%bx
		mov    %bx,0x00003c(%edx)
		mov    _0c247c_data,%ebx
		sar    $0x000010,%ebx
		movw   $0x000000,0x000040(%edx)
		sub    $0x0000c8,%ebx
		mov    %ebx,0x00002c(%edx)
		mov    0x00002c(%edx),%cx
		mov    %cx,0x00003e(%edx)
		xor    %cl,%cl
		movw   $0x000000,0x000042(%edx)
		mov    %cl,_0d7ff2_data
		mov    0x000081(%edx),%ch
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%ch
		mov    %ch,0x000081(%edx)
		xor    %edx,%edx
		mov    _0c1b44_data,%ecx
		mov    _0c1b84_data,%dl
		add    $0x000008,%ecx
		lea    (%edx,%ecx,1),%esi
		mov    _0c247a_data,%ecx
		mov    %ax,_0d7fec_data
		sar    $0x000010,%ecx
		xor    %edx,%edx
		sub    %ecx,%esi
		xor    %ecx,%ecx
		mov    _0c1b85_data,%dl
		mov    _0c1b90_data,%cl
		cwtl   
		sub    %ecx,%edx
		sub    %edx,%eax
		sar    %esi
		sub    $0x000046,%eax
		add    %esi,%eax
		mov    %ax,_0d7ff0_data
		mov    _0c1ae8_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%al
		movl   $0x000001,0x000024(%edx)
		or     $0x00000c,%al
		mov    %al,0x000081(%edx)
		xor    %eax,%eax
		mov    $0x000020,%ecx
		mov    0x000068(%edx),%al
		mov    %ebx,0x00002c(%edx)
		sub    %eax,%ecx
		mov    %ecx,0x000028(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		xor    %ah,%ah
		mov    _0c32e4_data,%dl
		mov    %ah,_0d7ff3_data
		or     $0x000001,%dl
		mov    _0c1ec0_data,%eax
		mov    %dl,_0c32e4_data
		movb   $0x000008,0x00006e(%eax)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03dcc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1aea_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		testb  $0x000002,_0c32e5_data
		jne    _03dcfc_jump
		mov    $_0c1b1c_data,%eax
		call   _072f20_func
		call   _052a3c_func

	_03dcfc_jump:
		orb    $0x000001,_0c32e5_data
		mov    0x000081(%edx),%bh
		mov    _0c247a_data,%eax
		or     $0x000004,%bh
		sar    $0x000010,%eax
		mov    %bh,0x000081(%edx)
		xor    %ebx,%ebx
		add    $0x0000a0,%eax
		mov    0x000068(%edx),%bl
		sub    %ebx,%eax
		mov    %eax,0x000028(%edx)
		mov    0x000028(%edx),%ax
		mov    _0c247c_data,%ebx
		mov    %ax,0x00003c(%edx)
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000069(%edx),%al
		sub    %eax,%ebx
		mov    %ebx,0x00002c(%edx)
		mov    _0c32e4_data,%cl
		mov    0x00002c(%edx),%ax
		or     $0x000001,%cl
		mov    %ax,0x00003e(%edx)
		mov    _0c1ec0_data,%eax
		movl   $0x000001,0x000024(%edx)
		mov    %cl,_0c32e4_data
		movb   $0x000008,0x00006e(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03dd70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		movb   $0x000001,_0c25b1_data
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		jb     _03dd99_jump
		jbe    _03ddb2_jump
		cmp    $0x000014,%al
		jb     _03dd94_jump
		jbe    _03ddf0_jump
		cmp    $0x00001e,%al
		je     _03deb1_jump

	_03dd94_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03dd99_jump:
		movw   $0x000000,0x000040(%esi)
		xor    %bh,%bh
		movw   $0x00fff8,0x000042(%esi)
		mov    %bh,_0c25b1_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ddb2_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _03ddc3_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		je     _03ddca_jump

	_03ddc3_jump:
		mov    %esi,%eax
		call   _01dc54_func

	_03ddca_jump:
		mov    $0xffff8300,%edx
		movw   $0x000000,0x000042(%esi)
		mov    %dx,_0c25aa_data
		mov    0x000042(%esi),%ax
		mov    %dx,_0c25ac_data
		mov    %ax,0x000040(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ddf0_jump:
		mov    %esi,%eax
		call   _01dc54_func
		xor    %eax,%eax
		mov    _0c1b44_data,%dx
		mov    _0c1b84_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %dx,_0c25aa_data
		xor    %edx,%edx
		mov    $_0c1b1c_data,%eax
		mov    0x000069(%esi),%dl
		call   _0186d4_func
		sub    %edx,%eax
		add    $0x000010,%eax
		mov    %ax,_0c25ac_data
		mov    0x000056(%esi),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000042(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbl (%edx,%eax,8),%ebx
		mov    _0c25a8_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x000012,%edx
		mov    $0x000037,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x0000ff,%dl
		mov    $0x000001,%bl
		mov    %eax,_0c25bc_data
		test   %eax,%eax
		jge    _03de8d_jump
		neg    %eax

	_03de8d_jump:
		mov    %eax,_0c25bc_data
		mov    %dl,_0c25ae_data
		xor    %dh,%dh
		mov    %bl,_0c25af_data
		mov    %dh,0x000071(%esi)
		mov    %dh,_0c25b0_data
		mov    %dh,0x000072(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03deb1_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0c25b0_data,%cl
		mov    _0c25ae_data,%bl
		mov    _0c25af_data,%dl
		call   _018420_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ded8_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		shl    $0x000002,%ebx
		mov    0x00000c(%eax),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%esi
		mov    (%ebx),%eax
		testb  $0x000001,0x000007(%esi,%eax,1)
		je     _03df4d_jump
		movswl %dx,%eax
		cmp    $0x000003,%eax
		je     _03df0c_jump
		cmp    $0x000006,%eax
		jne    _03df4d_jump

	_03df0c_jump:
		mov    $0x000001,%bh
		mov    %ecx,%eax
		mov    %bh,_0c1ed3_data
		call   _01e92c_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _03df36_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03df36_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		movw   $0x000001,0x000050(%ecx)

	_03df4d_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03df54_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b04_data,%edx
		mov    _0c1b08_data,%cx
		movw   $0x00ffff,0x000052(%eax)
		xor    %ebx,%ebx
		test   %cx,%cx
		jg     _03df85_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03df79_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %cx,%bx
		jge    _03dfd6_jump

	_03df85_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x0000e0,%eax
		jne    _03df79_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03df79_jump
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000040(%edx)
		call   _01dcec_func
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f584_func
		movw   $0x00ffff,0x000046(%edx)
		movw   $0x000000,0x000048(%edx)
		mov    %bx,0x000052(%esi)

	_03dfd6_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03dfdc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    $0x000001,%ah
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006d(%ecx),%bl
		mov    %ah,_0c25b1_data
		mov    %ebx,%eax
		mov    0x00006c(%ecx),%dl
		shl    $0x000008,%eax
		add    %edx,%eax
		cmp    $0x000006,%eax
		jb     _03e246_jump
		jbe    _03e208_jump
		cmp    $0x00000b,%eax
		jb     _03e236_jump
		jbe    _03e1ea_jump
		cmp    $0x00000d,%eax
		jb     _03e1e1_jump
		jbe    _03e1e1_jump
		cmp    $0x000100,%eax
		je     _03e034_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e034_jump:
		mov    0x00003a(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _03e065_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $_0c1b1c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x008300,_0c257c_data
		jmp    _03e090_jump

	_03e065_jump:
		mov    _0c259a_data,%ax
		mov    %ax,_0c257c_data
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _03e090_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000014,%eax
		jne    _03e090_jump
		orb    $0x000008,_0c1b9d_data

	_03e090_jump:
		mov    %ecx,%eax
		call   _04d2c4_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e09c_jump:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e0ad_jump:
		cmpb   $0x000000,_0c1ed2_data
		jne    _03e0c2_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _03e0d3_jump

	_03e0c2_jump:
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d498_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e0d3_jump:
		mov    0x00007f(%ecx),%al
		test   %al,%al
		je     _03e0e6_jump
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x00007f(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e0e6_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d498_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e0f7_jump:
		mov    0x00000c(%ecx),%eax
		mov    (%eax,%ebx,4),%eax
		testb  $0x000010,0x000007(%eax,%edx,8)
		je     _03e10d_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _03e137_jump

	_03e10d_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ecx),%eax
		mov    0x00000a(%edx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_03e137_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _03dfd6_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _03dfd6_jump
		mov    %ecx,%eax
		call   _03df54_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e185_jump:
		movb   $0x000032,0x00007f(%ecx)

	_03e189_jump:
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x00003e(%eax),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _03dfd6_jump
		mov    0x000028(%eax),%edx
		cmp    0x000028(%ecx),%edx
		jl     _03dfd6_jump
		movw   $0x00ffff,0x000052(%ecx)
		mov    0x000081(%eax),%bh
		and    $0x0000fb,%bh
		mov    $0x000003,%edx
		mov    %bh,0x000081(%eax)
		mov    %ecx,%eax
		call   _01d498_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e1e1_jump:
		movb   $0x000032,0x00007f(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e1ea_jump:
		cmpb   $0x000000,_0c1ed2_data
		jne    _03dfd6_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d498_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e208_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		je     _03dfd6_jump
		cmpb   $0x000000,_0c1ed2_data
		jne    _03dfd6_jump
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _01d498_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e236_jump:
		cmp    $0x000008,%eax
		jb     _03e1e1_jump
		jbe    _03e09c_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e246_jump:
		cmp    $0x000002,%eax
		jb     _03e261_jump
		jbe    _03e189_jump
		cmp    $0x000004,%eax
		jb     _03e1e1_jump
		jbe    _03e185_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e261_jump:
		test   %eax,%eax
		jbe    _03e0ad_jump
		cmpb   $0x000000,_0c1ed2_data
		je     _03e0f7_jump
		xor    %eax,%eax
		mov    _0c1b48_data,%bx
		mov    _0c1b85_data,%al
		mov    0x00002c(%ecx),%si
		mov    %eax,%edx
		xor    %eax,%eax
		add    %ebx,%edx
		mov    0x000069(%ecx),%al
		sub    %esi,%edx
		sub    %eax,%edx
		movswl %dx,%eax
		test   %eax,%eax
		jge    _03e29e_jump
		neg    %eax

	_03e29e_jump:
		cmp    $0x000030,%eax
		jl     _03e2b1_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000009,%eax
		jle    _03e0c2_jump

	_03e2b1_jump:
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d498_func
		mov    0x00000c(%ecx),%eax
		mov    (%eax),%eax
		mov    0x000052(%eax),%al
		mov    %al,0x00006a(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e2d0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		movswl %dx,%eax
		cmp    $0x000006,%eax
		jne    _03e397_jump
		cmpb   $0x000000,_0c1ed1_data
		jne    _03e397_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ebx),%dl
		testb  $0x000001,0x000007(%eax,%edx,8)
		je     _03e397_jump
		mov    $0x000001,%ch
		mov    %ebx,%eax
		mov    %ch,_0c1ed3_data
		call   _01e92c_func
		cmpb   $0x000000,0x000076(%ebx)
		je     _03e349_jump
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x000002,%eax
		jne    _03e33a_jump
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d498_func
		pop    %ecx
		pop    %ebx
		ret    

	_03e33a_jump:
		mov    $0x00000d,%edx
		mov    %ebx,%eax
		call   _01d498_func
		pop    %ecx
		pop    %ebx
		ret    

	_03e349_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x000002,%eax
		jne    _03e385_jump
		mov    0x000050(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c1b04_data,%ecx
		add    %edx,%eax
		andb   $0x0000fb,0x000081(%ecx,%eax,4)
		mov    0x000050(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %ecx,%eax
		call   _072f20_func

	_03e385_jump:
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d498_func
		movw   $0x000001,0x000050(%ebx)

	_03e397_jump:
		pop    %ecx
		pop    %ebx
		ret    



_03e39c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _03e3bc_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		je     _03e764_jump

	_03e3bc_jump:
		xor    %eax,%eax
		mov    _0c1b44_data,%ebx
		mov    0x000060(%esi),%ax
		add    $0x000008,%ebx
		cmp    $0x0000e7,%eax
		jne    _03e559_jump
		mov    _0d7ff2_data,%dh
		test   %dh,%dh
		jne    _03e423_jump
		xor    %eax,%eax
		mov    _0c1b84_data,%al
		lea    (%ebx,%eax,1),%ecx
		mov    _0c247a_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0c1b90_data,%bl
		mov    _0c1b85_data,%al
		sub    %ebx,%eax
		mov    _0d7fea_data,%ebx
		sar    $0x000010,%ebx
		sub    %eax,%ebx
		sar    %ecx
		add    $0x00005a,%ebx
		sub    %ecx,%ebx
		mov    %bx,_0d7fee_data
		jmp    _03e54a_jump

	_03e423_jump:
		xor    %eax,%eax
		mov    %dh,%al
		cmp    $0x000064,%eax
		jne    _03e544_jump
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000069(%esi),%al
		mov    0x000074(%esi),%bl
		add    %ebx,%eax
		mov    0x00002c(%esi),%ebp
		sar    %eax
		add    %ebp,%eax
		mov    %eax,%edi
		lea    0x000010(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		mov    $0x000008,%edx
		push   %eax
		lea    0x00000c(%esp),%ebx
		mov    _0d7ff8_data,%eax
		call   _01d840_func
		mov    -0x000002(%esp),%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jge    _03e499_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%edx
		mov    0x000074(%esi),%bl
		add    %edx,%ebx
		sub    $0x00000a,%ebx
		cmp    %ebx,%eax
		jle    _03e499_jump
		addw   $0x000032,_0d7fee_data
		jmp    _03e544_jump

	_03e499_jump:
		cmp    (%esp),%di
		jge    _03e4c4_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		mov    -0x000002(%esp),%ebx
		add    $0x00000a,%eax
		sar    $0x000010,%ebx
		cmp    %eax,%ebx
		jge    _03e4c4_jump
		subw   $0x000032,_0d7fee_data
		jmp    _03e544_jump

	_03e4c4_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000074(%esi),%al
		add    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sub    $0x00000a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03e500_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%bl
		add    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		add    %eax,%ebx
		lea    0x00000a(%ecx),%eax
		cmp    %eax,%ebx
		jge    _03e500_jump
		subw   $0x000050,_0d7fee_data
		jmp    _03e544_jump

	_03e500_jump:
		xor    %eax,%eax
		mov    _0c1b44_data,%ebx
		mov    _0c1b84_data,%al
		add    $0x000008,%ebx
		add    %eax,%ebx
		mov    _0c247a_data,%eax
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b85_data,%cl
		mov    _0c1b90_data,%al
		sub    %eax,%ecx
		mov    _0d7fea_data,%eax
		sar    $0x000010,%eax
		sub    %ecx,%eax
		sar    %ebx
		add    $0x00005a,%eax
		sub    %ebx,%eax
		mov    %ax,_0d7fee_data

	_03e544_jump:
		decb   _0d7ff2_data

	_03e54a_jump:
		mov    0x00002c(%esi),%dx
		mov    _0d7fee_data,%ax
		jmp    _03e6e4_jump

	_03e559_jump:
		cmp    $0x0000e8,%eax
		jne    _03e6ee_jump
		cmpb   $0x000000,_0d7ff3_data
		jne    _03e5ae_jump
		xor    %eax,%eax
		mov    _0c1b84_data,%al
		lea    (%ebx,%eax,1),%ecx
		mov    _0c247a_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0c1b85_data,%bl
		mov    _0c1b90_data,%al
		sub    %eax,%ebx
		mov    _0d7fea_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		sub    $0x000046,%eax
		add    %ecx,%eax
		mov    %ax,_0d7ff0_data
		jmp    _03e6da_jump

	_03e5ae_jump:
		xor    %eax,%eax
		mov    _0d7ff3_data,%al
		cmp    $0x000064,%eax
		jne    _03e6d4_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%al
		add    %ebx,%eax
		mov    0x00002c(%esi),%edx
		sar    %eax
		add    %edx,%eax
		mov    %eax,%edi
		lea    0x000010(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000008,%edx
		mov    _0d7ff4_data,%eax
		call   _01d840_func
		mov    -0x000002(%esp),%ebx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jge    _03e627_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000074(%esi),%bl
		add    %ecx,%ebx
		sub    $0x00000a,%ebx
		cmp    %ebx,%eax
		jle    _03e627_jump
		addw   $0x000032,_0d7ff0_data
		jmp    _03e6d4_jump

	_03e627_jump:
		cmp    (%esp),%di
		jge    _03e652_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edi
		mov    0x000069(%esi),%al
		mov    -0x000002(%esp),%ebx
		add    %edi,%eax
		sar    $0x000010,%ebx
		add    $0x00000a,%eax
		cmp    %eax,%ebx
		jge    _03e652_jump
		subw   $0x000032,_0d7ff0_data
		jmp    _03e6d4_jump

	_03e652_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000074(%esi),%al
		add    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sub    $0x00000a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03e68e_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%bl
		add    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		add    $0x00000a,%ecx
		add    %ebx,%eax
		cmp    %ecx,%eax
		jge    _03e68e_jump
		subw   $0x000050,_0d7ff0_data
		jmp    _03e6d4_jump

	_03e68e_jump:
		xor    %eax,%eax
		mov    _0c1b44_data,%ebx
		mov    _0c1b84_data,%al
		add    $0x000008,%ebx
		lea    (%eax,%ebx,1),%ecx
		mov    _0c247a_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		sub    %ebx,%ecx
		xor    %ebx,%ebx
		mov    _0c1b90_data,%al
		mov    _0c1b85_data,%bl
		sub    %eax,%ebx
		mov    _0d7fea_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		sub    $0x000046,%eax
		add    %ecx,%eax
		mov    %ax,_0d7ff0_data

	_03e6d4_jump:
		decb   _0d7ff3_data

	_03e6da_jump:
		mov    0x00002c(%esi),%dx
		mov    _0d7ff0_data,%ax

	_03e6e4_jump:
		add    $0x000096,%edx
		sub    %edx,%eax
		mov    %eax,%edx

	_03e6ee_jump:
		mov    _0c247c_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%ecx
		add    $0x000032,%eax
		cmp    %ecx,%eax
		jge    _03e707_jump
		movswl %dx,%eax
		test   %eax,%eax
		jg     _03e722_jump

	_03e707_jump:
		mov    _0c247c_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%edi
		sub    $0x000096,%eax
		cmp    %edi,%eax
		jle    _03e728_jump
		movswl %dx,%eax
		test   %eax,%eax
		jge    _03e728_jump

	_03e722_jump:
		xor    %edx,%edx
		mov    %dx,0x000042(%esi)

	_03e728_jump:
		test   %dx,%dx
		je     _03e764_jump
		mov    0x000040(%esi),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		sub    %ebx,%eax
		cmp    $0x000000,%eax
		je     _03e746_jump
		mov    $0x000001,%eax
		jg     _03e746_jump
		neg    %eax

	_03e746_jump:
		add    %eax,%ebx
		mov    $0x000030,%eax
		cmp    %ebx,%eax
		jle    _03e753_jump
		mov    %ebx,%eax

	_03e753_jump:
		mov    %eax,%ebx
		mov    $0xffffffd0,%eax
		cmp    %ebx,%eax
		jge    _03e760_jump
		mov    %ebx,%eax

	_03e760_jump:
		mov    %ax,0x000042(%esi)

	_03e764_jump:
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000005,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d840_func
		addw   $0x00000f,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x00006c(%esi),%al
		add    $0x000096,%edx
		test   %eax,%eax
		jne    _03e7c7_jump
		mov    0x00000a(%esp),%eax
		movswl %dx,%ebx
		sar    $0x000010,%eax
		lea    -0x00000f(%ebx),%ecx
		cmp    %ecx,%eax
		jle    _03e7c7_jump
		add    $0x00000f,%ebx
		cmp    %ebx,%eax
		jge    _03e7c7_jump
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _01d498_func
		jmp    _03e881_jump

	_03e7c7_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000006,%eax
		je     _03e7d6_jump
		cmp    $0x000004,%eax
		jne    _03e804_jump

	_03e7d6_jump:
		mov    0x00000a(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		lea    -0x000014(%eax),%ecx
		cmp    %ecx,%ebx
		jl     _03e7ee_jump
		add    $0x000014,%eax
		cmp    %eax,%ebx
		jle    _03e804_jump

	_03e7ee_jump:
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d498_func
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e804_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%eax
		je     _03e813_jump
		cmp    $0x000006,%eax
		jne    _03e841_jump

	_03e813_jump:
		mov    0x00000a(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		lea    -0x000007(%eax),%ecx
		cmp    %ecx,%ebx
		jle    _03e841_jump
		add    $0x000007,%eax
		cmp    %eax,%ebx
		jge    _03e841_jump
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d498_func
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e841_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _03e881_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000003,%eax
		jne    _03e881_jump
		mov    %esi,%eax
		call   _03e9b0_func
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x0000e7,%eax
		jne    _03e87a_jump
		movb   $0x000064,_0d7ff3_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e87a_jump:
		movb   $0x000064,_0d7ff2_data

	_03e881_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e88c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		je     _03e9aa_jump
		cmp    $0x000001,%eax
		je     _03e9aa_jump
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c1b04_data,%ebx
		add    %edx,%eax
		mov    0x00006c(%ebx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _03e9aa_jump
		mov    0x000076(%ecx),%ah
		mov    0x000050(%ecx),%edx
		dec    %ah
		sar    $0x000010,%edx
		mov    %ah,0x000076(%ecx)
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x000076(%ecx),%al
		mov    %al,0x000076(%ebx)
		test   %al,%al
		je     _03e901_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %ecx
		pop    %ebx
		ret    

	_03e901_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    0x000081(%ecx),%dh
		movw   $0x000001,0x000050(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0x000002,%ebx
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		movw   $0x00ff80,0x000042(%ecx)
		add    %edx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000040(%ecx)
		call   _01d4a8_func
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		movw   $0x00ff80,0x000042(%edx,%eax,4)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movw   $0x000000,0x000040(%edx,%eax,4)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		andb   $0x0000ef,0x000081(%edx,%eax,4)
		mov    0x000050(%ecx),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		movw   $0x000001,0x000050(%edx,%eax,4)

	_03e9aa_jump:
		pop    %ecx
		pop    %ebx
		ret    



_03e9b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b04_data,%edx
		mov    _0c1b08_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _03e9df_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e9cf_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _03ea84_jump

	_03e9df_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x0000e9,%ebx
		jne    _03e9cf_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03e9cf_jump
		movb   $0x000004,0x00007e(%edx)
		mov    0x000028(%esi),%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%esi),%ebx
		mov    %ebx,0x00002c(%edx)
		mov    0x00002c(%edx),%ax
		xor    %ebx,%ebx
		mov    %ax,0x00003e(%edx)
		mov    0x000060(%esi),%bx
		cmp    $0x0000e7,%ebx
		jne    _03ea3e_jump
		mov    0x000081(%edx),%bl
		movw   $0x00fffb,0x000040(%edx)
		and    $0x0000f7,%bl
		mov    %edx,_0d7ff4_data
		mov    %bl,0x000081(%edx)
		jmp    _03ea59_jump

	_03ea3e_jump:
		mov    0x000081(%edx),%ah
		movw   $0x000005,0x000040(%edx)
		or     $0x000008,%ah
		mov    %edx,_0d7ff8_data
		mov    %ah,0x000081(%edx)

	_03ea59_jump:
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%edx)
		call   _01f584_func
		mov    0x000052(%esi),%ax
		mov    %ax,0x000052(%edx)

	_03ea84_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ea8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%edi
		mov    0x000050(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		mov    0x000060(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		cmp    $0x0000e7,%eax
		je     _03eac6_jump
		cmp    $0x0000e8,%eax
		jne    _03ebe1_jump

	_03eac6_jump:
		mov    0x000050(%edi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%ebp
		shl    $0x000002,%eax
		add    %eax,%ebp
		mov    %ebp,%edx
		mov    %edi,%eax
		call   _03ecb4_func
		test   %ax,%ax
		je     _03ebe1_jump
		mov    _0c1b04_data,%esi
		mov    _0c1b08_data,%dx
		xor    %ebx,%ebx
		test   %dx,%dx
		jg     _03eb19_jump
		jmp    _03ebc2_jump

	_03eb09_jump:
		inc    %ebx
		add    $0x000084,%esi
		cmp    %dx,%bx
		jge    _03ebc2_jump

	_03eb19_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00000b,%eax
		jne    _03eb09_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _03eb09_jump
		lea    0x00001c(%esp),%eax
		lea    0x000018(%esp),%ecx
		lea    0x000014(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%edx
		mov    %edi,%eax
		call   _01d3c0_func
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _01d3c0_func
		movb   $0x000000,0x00006b(%esi)
		xor    %eax,%eax
		mov    0x00000e(%esp),%edx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _03eb83_jump
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)

	_03eb83_jump:
		mov    0x00001a(%esp),%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%dl
		mov    0x000074(%esi),%al
		sar    $0x000011,%ebx
		add    %eax,%edx
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		sar    %edx
		add    %ebx,%eax
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    %esi,%eax
		call   _01dcec_func
		orb    $0x000004,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f584_func

	_03ebc2_jump:
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _03e88c_func
		mov    0x000081(%edi),%dl
		movl   $0x000000,0x000024(%edi)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%edi)

	_03ebe1_jump:
		cmpw   $0x000000,0x000042(%edi)
		jne    _03ec8b_jump
		mov    _0c2390_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c1b04_data,%ebx
		add    %edx,%eax
		mov    _0c245a_data,%cx
		shl    $0x000002,%eax
		xor    %esi,%esi
		add    %eax,%ebx
		test   %cx,%cx
		jg     _03ec3e_jump
		jmp    _03ec8b_jump

	_03ec1a_jump:
		inc    %esi
		movswl %si,%eax
		mov    _0c2390_data(,%eax,2),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0c1b04_data,%eax
		add    %eax,%ebx
		cmp    _0c245a_data,%si
		jge    _03ec8b_jump

	_03ec3e_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		cmp    $0x0000e9,%eax
		jne    _03ec1a_jump
		mov    0x000034(%ebx),%ax
		cmp    0x000034(%edi),%ax
		je     _03ec1a_jump
		mov    %ebx,%edx
		mov    %edi,%eax
		call   _03ecb4_func
		test   %ax,%ax
		je     _03ec1a_jump
		movw   $0x000000,0x000040(%ebx)
		movw   $0x000000,0x000040(%edi)
		movw   $0x000003,0x000042(%ebx)
		movw   $0x000003,0x000042(%edi)
		mov    0x000034(%ebx),%ax
		mov    %ax,0x000052(%edi)
		mov    0x000034(%edi),%ax
		mov    %ax,0x000052(%ebx)

	_03ec8b_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ec98_func:
		push   %edx
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    



_03ecb4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,%edi
		xor    %edx,%edx
		call   _02a908_func
		mov    %eax,%ebp
		mov    %eax,(%esp)
		xor    %edx,%edx
		mov    %edi,%eax
		lea    0x000020(%esp),%ecx
		call   _02a908_func
		mov    %eax,%esi
		lea    0x00000c(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000007(%ebp),%dl
		mov    0x00000c(%esp),%eax
		call   _01d840_func
		lea    0x00000c(%esp),%eax
		push   %eax
		lea    0x000020(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		mov    %esi,%eax
		xor    %edx,%edx
		lea    0x00001c(%esp),%ebx
		mov    0x000007(%eax),%dl
		mov    %edi,%eax
		call   _01d840_func
		mov    0x000004(%esp),%eax
		mov    0x000081(%eax),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _03ed41_jump
		mov    0x000010(%esp),%ecx
		mov    0x000000(%ebp),%ax
		add    %eax,%ecx
		mov    %cx,0x000010(%esp)
		jmp    _03ed5d_jump

	_03ed41_jump:
		xor    %eax,%eax
		mov    0x000000(%ebp),%dx
		mov    0x000004(%ebp),%al
		mov    0x000018(%esp),%ebx
		add    %edx,%eax
		mov    0x000010(%esp),%edx
		add    %ebx,%edx
		sub    %eax,%edx
		mov    %dx,0x000010(%esp)

	_03ed5d_jump:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _03ed80_jump
		mov    0x000014(%esp),%edx
		mov    (%esi),%ax
		add    %eax,%edx
		mov    %dx,0x000014(%esp)
		jmp    _03ed9b_jump

	_03ed80_jump:
		xor    %eax,%eax
		mov    (%esi),%dx
		mov    0x000004(%esi),%al
		mov    0x00001c(%esp),%edi
		add    %eax,%edx
		mov    0x000014(%esp),%eax
		add    %edi,%eax
		sub    %edx,%eax
		mov    %ax,0x000014(%esp)

	_03ed9b_jump:
		mov    (%esp),%eax
		mov    0x000020(%esp),%ebx
		mov    0x000002(%eax),%ax
		add    %eax,%ebx
		mov    %bx,0x000020(%esp)
		mov    0x000008(%esp),%ecx
		mov    0x000002(%esi),%ax
		add    %eax,%ecx
		mov    %cx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		push   %eax
		xor    %eax,%eax
		mov    0x000004(%esi),%al
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		mov    0x00002a(%esp),%edx
		push   %eax
		mov    0x000010(%esp),%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    0x000005(%eax),%cl
		mov    0x000004(%eax),%bl
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02aa7c_func
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03ee04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b04_data,%eax
		mov    _0c1b08_data,%cx
		xor    %edx,%edx
		test   %cx,%cx
		jg     _03ee31_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ee22_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %cx,%dx
		jge    _03eeb1_jump

	_03ee31_jump:
		xor    %ebx,%ebx
		mov    0x000060(%eax),%bx
		cmp    $0x000020,%ebx
		jne    _03ee22_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _03ee22_jump
		mov    0x000028(%esi),%ebx
		mov    %ebx,0x000028(%eax)
		mov    0x000028(%eax),%dx
		mov    %dx,0x00003c(%eax)
		mov    0x00002c(%esi),%ebx
		movw   $0x000000,0x000040(%eax)
		mov    %ebx,0x00002c(%eax)
		mov    0x00002c(%eax),%dx
		mov    %dx,0x00003e(%eax)
		mov    0x000081(%eax),%dl
		movw   $0x000000,0x000042(%eax)
		or     $0x000004,%dl
		mov    $0x000026,%ebx
		mov    %dl,0x000081(%eax)
		xor    %edx,%edx
		movl   $0x000001,0x000024(%eax)
		call   _01d4a8_func
		mov    0x000081(%esi),%dh
		and    $0x0000fb,%dh
		mov    %esi,_0d8090_data
		mov    %dh,0x000081(%esi)
		xor    %edx,%edx
		movl   $0x000000,0x000024(%esi)
		mov    %dx,_0d8006_data

	_03eeb1_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03eeb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpb   $0x000000,_0c1ae4_data
		je     _03efd0_jump
		movb   $0x000001,_0ccfe4_data
		testb  $0x000080,_0c32ec_data
		je     _03ef96_jump
		xor    %edx,%edx
		mov    _0cd0d2_data,%dl
		test   %edx,%edx
		jne    _03efd0_jump
		cmpw   $0x000000,_0c1ae0_data
		jne    _03ef41_jump
		mov    _0c1ada_data,%edx
		sar    $0x000010,%edx
		cmp    $0x000042,%edx
		jle    _03ef22_jump
		mov    $0x000001,%edi
		mov    _0c1adc_data,%ax
		mov    %di,_0c1ae0_data
		mov    %ax,_0c1ade_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ef22_jump:
		cmp    $0x000028,%edx
		jle    _03ef34_jump
		addw   $0x000004,_0c1adc_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ef34_jump:
		addw   $0x000002,_0c1adc_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ef41_jump:
		mov    _0c1ae0_data,%edx
		sar    $0x000010,%edx
		mov    $0x000007,%cl
		mov    _0948d8_data(,%edx,2),%ax
		test   %ax,%ax
		js     _03ef5e_jump
		sar    %cl,%ax
		jmp    _03ef67_jump

	_03ef5e_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03ef67_jump:
		movswl %ax,%edx
		cmp    $0x0000ff,%edx
		je     _03efd0_jump
		mov    _0c1adc_data,%dx
		mov    _0c1ae2_data,%bx
		add    %eax,%edx
		inc    %ebx
		mov    %dx,_0c1adc_data
		mov    %bx,_0c1ae2_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ef96_jump:
		push   $0x000000
		mov    $_0d801c_data,%eax
		mov    _0d8084_data,%ecx
		mov    _0d8080_data,%ebx
		mov    _0d807e_data,%edx
		push   $0x000002
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01a5f4_func
		cmpb   $0x000000,_0c25e2_data
		jne    _03efd0_jump
		addw   $0x000003,_0d8086_data

	_03efd0_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_03efd8_switch:
		.long   _03f0ba_case
		.long   _03f109_case
		.long   _03f20b_case
		.long   _03f282_case
		.long   _03f2e4_case
		.long   _03f35a_case
		.long   _03f423_case
		.long   _03f532_case
		.long   _03f5b2_case
		.long   _03f609_case
		.long   _03f6ba_case
		.long   _03f727_case




_03f008_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _03f09d_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000026,%eax
		jne    _03f09d_jump
		xor    %ah,%ah
		xor    %dl,%dl
		xor    %bl,%bl
		xor    %ecx,%ecx
		mov    %ah,_0d8015_data
		mov    %ah,_0d8014_data
		mov    %ah,_0c1ae4_data
		mov    %cx,_0c259a_data
		xor    %dh,%dh
		xor    %bh,%bh
		mov    _0d8090_data,%eax
		mov    %dx,_0d8006_data
		mov    %bx,_0c259c_data
		mov    _0c32e4_data,%dh
		mov    _0c32e5_data,%bh
		mov    0x000081(%eax),%cl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fe,%dh
		and    $0x00007f,%bh
		and    $0x0000fb,%cl
		mov    %dh,_0c32e4_data
		mov    %bh,_0c32e5_data
		mov    %dl,_0d8094_data
		mov    %cl,0x000081(%eax)

	_03f09d_jump:
		mov    _0d8006_data,%ax
		cmp    $0x00000b,%ax
		ja     _03f879_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_03efd8_switch(,%eax,4)

	_03f0ba_case:
		mov    _0d8015_data,%bh
		test   %bh,%bh
		jne    _03f0dd_jump
		mov    $0x000001,%cl
		mov    $0x00001e,%edx
		mov    %esi,%eax
		mov    %cl,_0d8015_data
		call   _01d498_func
		jmp    _03f879_jump

	_03f0dd_jump:
		xor    %eax,%eax
		mov    %bh,%al
		cmp    $0x000002,%eax
		jne    _03f879_jump
		movw   $0x000001,_0d8006_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f109_case:
		mov    _0d8014_data,%dh
		test   %dh,%dh
		jne    _03f13d_jump
		mov    $0x000001,%bl
		mov    $0x00001f,%edx
		mov    %esi,%eax
		mov    %bl,_0d8014_data
		call   _01d498_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f13d_jump:
		xor    %eax,%eax
		mov    %dh,%al
		cmp    $0x000002,%eax
		jne    _03f879_jump
		mov    _0d8008_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    _0c1b04_data,%edx
		add    %ebx,%eax
		mov    0x000070(%edx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x00001e,%eax
		jne    _03f879_jump
		mov    _0d8006_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		mov    0x000070(%edx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x00001e,%eax
		jne    _03f879_jump
		mov    _0d8006_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    $0x000001,%ecx
		add    %eax,%ebx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%ebx
		mov    $0x000002,%edx
		add    %ebx,%eax
		mov    %ecx,%ebx
		call   _058bb4_func
		mov    %ecx,%ebx
		mov    _0d8008_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0c1b04_data,%ecx
		shl    $0x000002,%eax
		mov    $0x000002,%edx
		add    %ecx,%eax
		call   _058bb4_func
		movw   $0x000002,_0d8006_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f20b_case:
		mov    _0d8008_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		mov    0x000070(%edx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x00001e,%eax
		jne    _03f879_jump
		mov    _0d8006_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		mov    0x000070(%edx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x00001e,%eax
		jne    _03f879_jump
		movw   $0x000003,_0d8006_data
		xor    %dl,%dl
		mov    %dl,_0d8015_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f282_case:
		cmpb   $0x000000,_0d8015_data
		jne    _03f2b5_jump
		mov    $0x000001,%ah
		mov    $0x00001e,%edx
		mov    %ah,_0d8015_data
		mov    %esi,%eax
		call   _01d498_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f2b5_jump:
		xor    %eax,%eax
		mov    _0d8015_data,%al
		cmp    $0x000002,%eax
		jne    _03f879_jump
		movw   $0x000004,_0d8006_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f2e4_case:
		mov    _0d8006_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000003,%edx
		call   _058bb4_func
		mov    _0d8008_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000003,%edx
		mov    $0x000005,%edi
		call   _058bb4_func
		mov    %di,_0d8006_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f35a_case:
		mov    _0d8008_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c1b04_data,%ebx
		add    %edx,%eax
		mov    0x000070(%ebx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x00001e,%eax
		jne    _03f405_jump
		mov    _0d8006_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    0x000070(%ebx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x00001e,%eax
		jne    _03f405_jump
		mov    _0d8015_data,%bh
		test   %bh,%bh
		jne    _03f3d1_jump
		mov    $0x000001,%cl
		mov    %eax,%edx
		mov    %esi,%eax
		mov    %cl,_0d8015_data
		call   _01d498_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f3d1_jump:
		xor    %eax,%eax
		mov    %bh,%al
		cmp    $0x000002,%eax
		jne    _03f879_jump
		movw   $0x000006,_0d8006_data
		xor    %ch,%ch
		mov    %ch,_0d8015_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f405_jump:
		xor    %bl,%bl
		mov    %bl,_0d8015_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f423_case:
		cmpb   $0x000000,_0d8015_data
		jne    _03f4ae_jump
		mov    _0d8006_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000002,%edx
		call   _058bb4_func
		mov    _0d8008_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000002,%edx
		call   _058bb4_func
		mov    $0x000001,%dl
		mov    %esi,%eax
		mov    %dl,_0d8015_data
		mov    $0x00001e,%edx
		call   _01d498_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f4ae_jump:
		xor    %eax,%eax
		mov    _0d8015_data,%al
		cmp    $0x000002,%eax
		jne    _03f879_jump
		mov    _0d8008_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		mov    0x000070(%edx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x00001e,%eax
		jne    _03f879_jump
		mov    _0d8006_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    0x000070(%edx,%eax,4),%al
		and    $0x0000ff,%eax
		cmp    $0x00001e,%eax
		jne    _03f879_jump
		mov    $0x000007,%ebx
		xor    %dh,%dh
		mov    %bx,_0d8006_data
		mov    %dh,_0d8015_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f532_case:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000021,%eax
		je     _03f56d_jump
		mov    $0x000021,%edx
		mov    %esi,%eax
		xor    %cl,%cl
		call   _01d498_func
		mov    %cl,_0d8018_data
		movb   $0x000001,_0c1ae4_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f56d_jump:
		xor    %eax,%eax
		mov    _0d8018_data,%al
		cmp    $0x000002,%eax
		jne    _03f879_jump
		mov    $0x000020,%edx
		mov    %esi,%eax
		call   _01d498_func
		mov    $0x000008,%edx
		xor    %al,%al
		mov    %dx,_0d8006_data
		mov    %al,_0c1ae4_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f5b2_case:
		mov    _0d8008_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000004,%edx
		mov    $0x000009,%edi
		call   _058bb4_func
		mov    $0xffffffff,%eax
		mov    %di,_0d8006_data
		mov    %ax,_0d8088_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f609_case:
		testb  $0x000001,_0c32e4_data
		je     _03f631_jump
		movw   $0x00000a,_0d8006_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f631_jump:
		mov    _0d8086_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _03f879_jump
		mov    _0d8008_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		mov    0x00003e(%edx,%eax,4),%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _03f879_jump
		call   _0402bc_func
		mov    _0c1ec0_data,%eax
		mov    0x000028(%eax),%dx
		add    $0x000040,%edx
		mov    %dx,_0d8088_data
		mov    0x00002c(%eax),%dx
		add    $0x000032,%edx
		mov    0x000028(%eax),%ax
		mov    %dx,_0d808a_data
		add    $0x000030,%eax
		mov    %dx,_0d808e_data
		mov    %ax,_0d808c_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f6ba_case:
		mov    _0d8008_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		mov    $0x000004,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    _0d8006_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		mov    $0x000004,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x00000b,_0d8006_data
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f727_case:
		xor    %eax,%eax
		mov    _0d8094_data,%al
		cmp    $0x000001,%eax
		jne    _03f7a1_jump
		mov    _0c1b6e_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		je     _03f7a1_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _03f775_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000017,%eax
		je     _03f7a1_jump

	_03f775_jump:
		mov    $0x000002,%dh
		mov    $0x000017,%ebx
		mov    $_0c1b1c_data,%eax
		mov    %dh,_0d8094_data
		mov    $0x000003,%edx
		xor    %edi,%edi
		call   _01d4a8_func
		mov    %di,_0c1b5c_data
		mov    %di,_0c1b5e_data

	_03f7a1_jump:
		mov    _0d8008_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		add    %edi,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x000024(%eax),%edx
		test   %edx,%edx
		jne    _03f842_jump
		jne    _03f842_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _03f7de_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000022,%eax
		je     _03f842_jump

	_03f7de_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _03f7f2_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		je     _03f842_jump

	_03f7f2_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _03f80a_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000017,%eax
		je     _03f842_jump

	_03f80a_jump:
		xor    %eax,%eax
		mov    _0d8094_data,%al
		cmp    $0x000002,%eax
		jne    _03f842_jump
		mov    %esi,%eax
		xor    %bl,%bl
		xor    %edx,%edx
		mov    %bl,_0d8094_data
		mov    $0x000022,%ebx
		call   _01d4a8_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f842_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000004,%eax
		jne    _03f879_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _03f879_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000022,%eax
		jne    _03f879_jump
		mov    $0x00000c,%edx
		mov    _0d8090_data,%eax
		movw   $0x00fffc,0x000042(%esi)
		mov    %dx,_0d8006_data
		call   _0341d0_func

	_03f879_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		je     _03fb58_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f88f_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000016,%eax
		jne    _03fb7e_jump
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d840_func
		mov    -0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		mov    0x000002(%esp),%ebx
		mov    $0xfffffff1,%esi
		mov    $0x000001,%ecx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		sar    $0x000011,%ebx
		add    %edx,%eax
		mov    %si,_0d8002_data
		sub    $0x000060,%eax
		mov    %si,_0d7ffe_data
		mov    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		movswl %dx,%edi
		add    %ebx,%eax
		xor    %ebx,%ebx
		sub    $0x000080,%eax
		mov    %bx,_0d8000_data
		mov    %bx,_0d7ffc_data
		movswl %ax,%esi
		mov    $0x000025,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _03ff60_func
		mov    $0x000025,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		xor    %ecx,%ecx
		call   _03ff60_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f93a_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000016,%eax
		jne    _03fb7e_jump
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d840_func
		mov    -0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		mov    $0x00004c,%ebx
		mov    $0xffffffb4,%ecx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		mov    %bx,_0d7ffe_data
		mov    %cx,_0d8002_data
		mov    $0x000023,%ebx
		add    %edx,%eax
		xor    %cl,%cl
		mov    0x000006(%esp),%edx
		sub    $0x000060,%eax
		mov    %cl,_0d8016_data
		mov    %ax,_0d8010_data
		mov    %ax,_0d800c_data
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000011,%eax
		mov    $0x000001,%ch
		add    %edx,%eax
		mov    %ch,_0d8017_data
		sub    $0x000080,%eax
		mov    $0x000001,%ecx
		mov    %ax,_0d8012_data
		mov    %ax,_0d800e_data
		mov    $0xfffffff0,%eax
		mov    _0d800c_data,%edx
		mov    %ax,_0d8000_data
		mov    %ax,_0d7ffc_data
		mov    _0d800a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03ff60_func
		mov    $0x000023,%ebx
		mov    _0d8010_data,%edx
		mov    _0d800e_data,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03ff60_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fa25_jump:
		xor    %eax,%eax
		mov    _0d8018_data,%al
		test   %eax,%eax
		jne    _03fa92_jump
		mov    $_0d801c_data,%edi
		mov    _0cd8cc_data,%esi
		mov    $0x000001,%bh
		push   %edi

	_03fa3e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03fa56_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03fa3e_jump

	_03fa56_jump:
		pop    %edi
		xor    %edx,%edx
		mov    $0x0000a0,%esi
		mov    $0xfffffff6,%edi
		mov    $0x000028,%eax
		mov    %dx,_0d8086_data
		mov    %bh,_0d8018_data
		mov    %si,_0d8080_data
		mov    %di,_0d8082_data
		mov    %ax,_0d8084_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fa92_jump:
		mov    _0d8080_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffec,%eax
		jge    _03faea_jump
		mov    $0xfffffff6,%ebx
		mov    $0x000028,%ecx
		xor    %eax,%eax
		xor    %dh,%dh
		mov    %ax,_0d8086_data
		mov    %dh,_0c1ae4_data
		mov    %bx,_0d8082_data
		mov    %cx,_0d8084_data
		mov    _0d8018_data,%bl
		mov    $0x0000a0,%edx
		inc    %bl
		mov    %dx,_0d8080_data
		mov    %bl,_0d8018_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03faea_jump:
		mov    $0x000004,%cl
		mov    _0d8084_data,%ax
		test   %ax,%ax
		js     _03fafc_jump
		sar    %cl,%ax
		jmp    _03fb05_jump

	_03fafc_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03fb05_jump:
		mov    _0d8082_data,%si
		mov    _0d8084_data,%di
		add    %eax,%esi
		mov    _0d8084_data,%ax
		mov    %si,_0d8082_data
		dec    %eax
		test   %di,%di
		je     _03fb40_jump
		cmpb   $0x000000,_0c249c_data
		jne    _03fb7e_jump
		mov    %ax,_0d8084_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fb40_jump:
		cmpb   $0x000000,_0c249e_data
		jne    _03fb7e_jump
		mov    %ax,_0d8084_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fb58_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x00001f,%al
		jb     _03fb76_jump
		jbe    _03f88f_jump
		cmp    $0x000021,%al
		je     _03fa25_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fb76_jump:
		cmp    $0x00001e,%al
		je     _03f93a_jump

	_03fb7e_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03fb88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		cmpb   $0x000000,0x000076(%eax)
		je     _03ff57_jump
		xor    %edx,%edx
		mov    0x00006c(%esi),%dl
		cmp    $0x000023,%edx
		je     _03fbad_jump
		cmp    $0x000024,%edx
		jne    _03fd7e_jump

	_03fbad_jump:
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%edx
		neg    %eax
		cmp    %edx,%eax
		jle    _03fbcb_jump
		mov    $0x000002,%al
		movb   $0x000000,0x000076(%esi)
		mov    %al,_0d8015_data
		jmp    _03ff57_jump

	_03fbcb_jump:
		cmpw   $0x000000,0x000056(%esi)
		je     _03fcaa_jump
		cmpb   $0x000000,_0d8016_data
		je     _03fbfe_jump
		addw   $0x000003,_0d7ffe_data
		mov    _0d7ffc_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00004c,%eax
		jle    _03fc1a_jump
		xor    %ch,%ch
		mov    %ch,_0d8016_data
		jmp    _03fc1a_jump

	_03fbfe_jump:
		subw   $0x000003,_0d7ffe_data
		mov    _0d7ffc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffb4,%eax
		jge    _03fc1a_jump
		movb   $0x000001,_0d8016_data

	_03fc1a_jump:
		mov    $0x000004,%cl
		mov    _0d7ffc_data,%ax
		test   %ax,%ax
		js     _03fc2c_jump
		sar    %cl,%ax
		jmp    _03fc35_jump

	_03fc2c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03fc35_jump:
		mov    _0d800c_data,%bx
		mov    $0x000004,%cl
		add    %eax,%ebx
		mov    _0d7ffe_data,%ax
		mov    %bx,_0d800c_data
		test   %ax,%ax
		js     _03fc57_jump
		sar    %cl,%ax
		jmp    _03fc60_jump

	_03fc57_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03fc60_jump:
		mov    _0d800e_data,%cx
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		mov    %cx,_0d800e_data
		cmp    $0x000001,%eax
		jne    _03ff57_jump
		mov    _0d800c_data,%edx
		mov    _0d800a_data,%eax
		mov    0x000054(%esi),%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x00006c(%esi),%bl
		call   _03ff60_func
		movb   $0x000000,0x000076(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fcaa_jump:
		cmpb   $0x000000,_0d8017_data
		je     _03fcd2_jump
		addw   $0x000003,_0d8002_data
		mov    _0d8000_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00004c,%eax
		jle    _03fcee_jump
		xor    %bl,%bl
		mov    %bl,_0d8017_data
		jmp    _03fcee_jump

	_03fcd2_jump:
		subw   $0x000003,_0d8002_data
		mov    _0d8000_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffb4,%eax
		jge    _03fcee_jump
		movb   $0x000001,_0d8017_data

	_03fcee_jump:
		mov    $0x000004,%cl
		mov    _0d8000_data,%ax
		test   %ax,%ax
		js     _03fd00_jump
		sar    %cl,%ax
		jmp    _03fd09_jump

	_03fd00_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03fd09_jump:
		mov    _0d8010_data,%cx
		add    %eax,%ecx
		mov    _0d8002_data,%ax
		mov    %cx,_0d8010_data
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _03fd2b_jump
		sar    %cl,%ax
		jmp    _03fd34_jump

	_03fd2b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03fd34_jump:
		mov    _0d8012_data,%di
		add    %eax,%edi
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		mov    %di,_0d8012_data
		cmp    $0x000001,%eax
		jne    _03ff57_jump
		mov    _0d8010_data,%edx
		mov    _0d800e_data,%eax
		mov    0x000054(%esi),%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x00006c(%esi),%bl
		call   _03ff60_func
		movb   $0x000000,0x000076(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fd7e_jump:
		cmp    $0x000025,%edx
		jne    _03ff57_jump
		cmpw   $0x000000,0x000056(%esi)
		je     _03fda0_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%cx
		mov    0x000068(%esi),%al
		mov    $0x0000f0,%ebx
		add    %ecx,%eax
		jmp    _03fdb0_jump

	_03fda0_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		mov    $0x000005,%ebx

	_03fdb0_jump:
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%di
		mov    0x000069(%esi),%al
		add    %eax,%edi
		mov    %esi,%eax
		call   _0186d4_func
		sub    %edi,%eax
		mov    %eax,%edi
		movswl %bx,%eax
		test   %eax,%eax
		jge    _03fdd1_jump
		neg    %eax

	_03fdd1_jump:
		mov    %eax,%edx
		movswl %di,%eax
		test   %eax,%eax
		jge    _03fddc_jump
		neg    %eax

	_03fddc_jump:
		add    %edx,%eax
		movswl %ax,%ebp
		cmp    $0x00000a,%ebp
		jge    _03fdfc_jump
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		movb   $0x000000,0x000076(%esi)
		call   _040134_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fdfc_jump:
		test   %ebp,%ebp
		jle    _03fe20_jump
		mov    $0x000004,%cl
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edi

	_03fe20_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000001,%eax
		jne    _03ff57_jump
		cmpw   $0x000000,0x000056(%esi)
		je     _03fec8_jump
		mov    _0d7ffa_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _03fe56_jump
		mov    $0x000001,%eax
		jg     _03fe56_jump
		neg    %eax

	_03fe56_jump:
		add    %ax,_0d7ffc_data
		mov    _0d7ffc_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _03fe79_jump
		mov    $0x000001,%eax
		jg     _03fe79_jump
		neg    %eax

	_03fe79_jump:
		mov    _0d7ffe_data,%bx
		add    %eax,%ebx
		mov    0x000054(%esi),%ecx
		mov    %bx,_0d7ffe_data
		mov    0x00002c(%esi),%dx
		mov    _0d7ffe_data,%di
		sar    $0x000010,%ecx
		add    %edi,%edx
		mov    _0d7ffc_data,%di
		movswl %dx,%eax
		mov    0x000028(%esi),%dx
		xor    %ebx,%ebx
		add    %edi,%edx
		mov    0x00006c(%esi),%bl
		movswl %dx,%ebp
		mov    %eax,%edx
		mov    %ebp,%eax
		call   _03ff60_func
		movb   $0x000000,0x000076(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fec8_jump:
		mov    _0d7ffe_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _03fee5_jump
		mov    $0x000001,%eax
		jg     _03fee5_jump
		neg    %eax

	_03fee5_jump:
		mov    _0d8000_data,%dx
		add    %eax,%edx
		mov    _0d8000_data,%eax
		mov    %dx,_0d8000_data
		movswl %di,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _03ff12_jump
		mov    $0x000001,%eax
		jg     _03ff12_jump
		neg    %eax

	_03ff12_jump:
		mov    _0d8002_data,%bx
		add    %eax,%ebx
		mov    0x000054(%esi),%ecx
		mov    %bx,_0d8002_data
		mov    0x00002c(%esi),%dx
		mov    _0d8002_data,%di
		sar    $0x000010,%ecx
		add    %edi,%edx
		mov    _0d8000_data,%ax
		movswl %dx,%ebp
		mov    0x000028(%esi),%dx
		xor    %ebx,%ebx
		add    %eax,%edx
		mov    0x00006c(%esi),%bl
		movswl %dx,%eax
		mov    %ebp,%edx
		call   _03ff60_func
		movb   $0x000000,0x000076(%esi)

	_03ff57_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ff60_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %ax,0x000008(%esp)
		mov    %edx,%edi
		mov    %bx,0x000004(%esp)
		mov    %ecx,0x00000c(%esp)
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%bx
		xor    %edx,%edx
		xor    %eax,%eax

	_03ff87_jump:
		xor    %esi,%esi
		mov    0x000060(%ecx),%si
		cmp    $0x000021,%esi
		jne    _03ff9d_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _03ff9d_jump
		mov    $0x000001,%edx

	_03ff9d_jump:
		movswl %dx,%esi
		add    $0x000084,%ecx
		inc    %eax
		test   %esi,%esi
		jne    _03ffb0_jump
		cmp    %bx,%ax
		jl     _03ff87_jump

	_03ffb0_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		je     _040036_jump
		mov    %ecx,(%esp)
		xor    %edx,%edx

	_03ffc4_jump:
		xor    %esi,%esi
		mov    0x000060(%ecx),%si
		cmp    $0x000021,%esi
		jne    _03ffda_jump
		cmpl   $0x000001,0x000024(%ecx)
		jne    _03ffda_jump
		mov    $0x000001,%edx

	_03ffda_jump:
		movswl %dx,%esi
		add    $0x000084,%ecx
		inc    %eax
		test   %esi,%esi
		jne    _03ffed_jump
		cmp    %bx,%ax
		jl     _03ffc4_jump

	_03ffed_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		je     _04002e_jump
		xor    %edx,%edx

	_03fffa_jump:
		xor    %esi,%esi
		mov    0x000060(%ecx),%si
		cmp    $0x000021,%esi
		jne    _040010_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _040010_jump
		mov    $0x000001,%edx

	_040010_jump:
		movswl %dx,%esi
		add    $0x000084,%ecx
		inc    %eax
		test   %esi,%esi
		jne    _040023_jump
		cmp    %bx,%ax
		jl     _03fffa_jump

	_040023_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		jne    _040036_jump

	_04002e_jump:
		mov    $0x000001,%edx
		mov    (%esp),%ecx

	_040036_jump:
		test   %dx,%dx
		je     _040090_jump
		mov    0x000081(%ecx),%ah
		or     $0x000004,%ah
		mov    0x000024(%ecx),%ebp
		mov    %ah,0x000081(%ecx)
		test   %ebp,%ebp
		jne    _040058_jump
		mov    %ecx,%eax
		call   _01f584_func

	_040058_jump:
		movl   $0x000001,0x000024(%ecx)
		mov    0x000006(%esp),%eax
		movb   $0x000001,0x000076(%ecx)
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		movswl %di,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    0x00000c(%esp),%eax
		mov    0x000004(%esp),%bl
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d4a8_func

	_040090_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_040098_func:
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _0400c2_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x000005,%edx
		jne    _0400c2_jump
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    

	_0400c2_jump:
		call   _02f010_func
		pop    %edx
		ret    



_0400cc_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0c1b72_data,%bx
		movswl %bx,%eax
		cmp    $0x00000a,%eax
		jge    _04010e_jump
		cmp    $0xffffffff,%eax
		jne    _0400fd_jump
		mov    $0x000001,%eax
		call   _02d3ac_func
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _04012e_jump
		jmp    _040125_jump

	_0400fd_jump:
		xor    %eax,%eax
		call   _02d3ac_func
		mov    %bx,_0c1b72_data
		pop    %edx
		pop    %ebx
		ret    

	_04010e_jump:
		mov    $0x000001,%eax
		call   _02d3ac_func
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _04012e_jump

	_040125_jump:
		movw   $0x00000a,_0c1b72_data

	_04012e_jump:
		pop    %edx
		pop    %ebx
		ret    



_040134_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    _0c1b04_data,%edx
		mov    _0c1b08_data,%si
		xor    %eax,%eax
		test   %si,%si
		jg     _040163_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040153_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %si,%ax
		jge    _0402b5_jump

	_040163_jump:
		movswl %bx,%ecx
		test   %ecx,%ecx
		jne    _04020e_jump
		mov    0x000060(%edx),%cx
		cmp    $0x0000d1,%ecx
		jne    _04020e_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _04020e_jump
		movb   $0x000004,0x00007e(%edx)
		xor    %eax,%eax
		mov    $0x000005,%ebx
		mov    0x000068(%edx),%al
		movl   $0x000064,0x00002c(%edx)
		sub    %eax,%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		xor    %ebx,%ebx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%bl
		call   _0186d4_func
		movswl %ax,%ecx
		movw   $0x000000,0x000040(%edx)
		sub    %ebx,%ecx
		mov    %ecx,0x00002c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000042(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f584_func
		mov    0x000034(%edx),%ax
		mov    $0x000002,%dl
		mov    %ax,_0d800a_data
		mov    %dl,_0d8014_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04020e_jump:
		movswl %bx,%ecx
		cmp    $0x000001,%ecx
		jne    _040153_jump
		xor    %ecx,%ecx
		mov    0x000060(%edx),%cx
		cmp    $0x0000d2,%ecx
		jne    _040153_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _040153_jump
		movb   $0x000004,0x00007e(%edx)
		xor    %ecx,%ecx
		mov    $0x0000f0,%eax
		mov    0x000068(%edx),%cl
		movl   $0x000064,0x00002c(%edx)
		sub    %ecx,%eax
		mov    %eax,0x000028(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		xor    %ecx,%ecx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%cl
		call   _0186d4_func
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		cwtl   
		mov    0x000081(%edx),%bl
		movl   $0x000001,0x000024(%edx)
		sub    %ecx,%eax
		or     $0x000004,%bl
		mov    %eax,0x00002c(%edx)
		mov    %bl,0x000081(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    $0x000002,%bh
		call   _01f584_func
		mov    0x000034(%edx),%ax
		mov    %bh,_0d8014_data
		mov    %ax,_0d8008_data

	_0402b5_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0402bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xffffffff,%esi
		mov    _0c1b04_data,%edx
		mov    _0c1b08_data,%di
		xor    %eax,%eax
		xor    %ebx,%ebx
		test   %di,%di
		jg     _0402f1_jump
		jmp    _040412_jump

	_0402e1_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %di,%bx
		jge    _040412_jump

	_0402f1_jump:
		movswl %ax,%ecx
		test   %ecx,%ecx
		jne    _040374_jump
		mov    0x000060(%edx),%cx
		cmp    $0x00006c,%ecx
		jne    _040374_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _040374_jump
		movb   $0x000004,0x00007e(%edx)
		movl   $0x000140,0x000028(%edx)
		mov    _0c247c_data,%ecx
		movw   $0x000000,0x000040(%edx)
		sar    $0x000010,%ecx
		mov    0x000028(%edx),%ax
		add    $0x000064,%ecx
		mov    %ax,0x00003c(%edx)
		mov    %ecx,0x00002c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000042(%edx)
		or     $0x000004,%ah
		mov    %ebx,%esi
		mov    %ah,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f584_func
		movb   $0x000000,0x000076(%edx)
		mov    $0x000001,%eax
		movw   $0x000000,0x000050(%edx)
		jmp    _0402e1_jump

	_040374_jump:
		movswl %ax,%ecx
		cmp    $0x000001,%ecx
		jne    _0402e1_jump
		xor    %ecx,%ecx
		mov    0x000060(%edx),%cx
		cmp    $0x00006c,%ecx
		jne    _0402e1_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _0402e1_jump
		movb   $0x000004,0x00007e(%edx)
		movl   $0xffffffec,0x000028(%edx)
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		mov    _0c247c_data,%ecx
		movl   $0x000001,0x000024(%edx)
		sar    $0x000010,%ecx
		mov    0x000028(%edx),%ax
		add    $0x000064,%ecx
		mov    %ax,0x00003c(%edx)
		mov    %ecx,0x00002c(%edx)
		mov    0x000081(%edx),%cl
		mov    0x00002c(%edx),%ax
		or     $0x000004,%cl
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _01f584_func
		movb   $0x000001,0x000076(%edx)
		movw   $0x000000,0x000050(%edx)
		movswl %si,%ecx
		mov    %si,0x000052(%edx)
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %edx,%ecx
		mov    _0c1b04_data,%edx
		shl    $0x000002,%ecx
		mov    %bx,0x000052(%ecx,%edx,1)

	_040412_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040418_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    0x000076(%eax),%ah
		test   %ah,%ah
		jne    _040450_jump
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%dx
		mov    _0d8088_data,%di
		add    %edx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		mov    _0d808a_data,%bx
		jmp    _040476_jump

	_040450_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%cx
		mov    0x000068(%esi),%al
		mov    _0d808c_data,%di
		add    %ecx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		mov    _0d808e_data,%bx
		add    %edx,%eax

	_040476_jump:
		sub    %eax,%ebx
		cmpw   $0x000000,0x000050(%esi)
		je     _040606_jump
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		cmpw   $0x000000,0x000050(%eax)
		je     _040606_jump
		cmpl   $0x000000,0x000024(%esi)
		je     _040517_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _040517_jump
		xor    %edx,%edx
		mov    0x000028(%esi),%ebp
		mov    0x000068(%esi),%dl
		add    %ebp,%edx
		mov    0x000028(%eax),%ebp
		mov    0x000068(%eax),%al
		add    %ebp,%edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		sar    %eax
		mov    _0c1ec0_data,%edx
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebp
		mov    0x000068(%edx),%al
		sub    %eax,%ebp
		mov    %ebp,0x000028(%edx)
		mov    0x000050(%esi),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,%eax
		shl    $0x000005,%eax
		add    %ebp,%eax
		shl    $0x000002,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%cl
		add    %ebp,%ecx
		mov    0x00002c(%eax),%ebp
		mov    0x000069(%eax),%al
		add    %ebp,%ecx
		and    $0x0000ff,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		sar    %ecx
		jmp    _0405a8_jump

	_040517_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _04054c_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    _0c1ec0_data,%eax
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		sub    %ecx,%edx
		mov    %edx,0x000028(%eax)
		xor    %edx,%edx
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%dl
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000069(%eax),%cl
		sub    %ecx,%edx
		mov    %edx,0x00002c(%eax)
		jmp    _0405b0_jump

	_04054c_jump:
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _0405b0_jump
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    0x000028(%eax),%eax
		add    %edx,%eax
		mov    _0c1ec0_data,%edx
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebp
		mov    0x000068(%edx),%al
		sub    %eax,%ebp
		mov    %ebp,0x000028(%edx)
		mov    0x000050(%esi),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,%eax
		shl    $0x000005,%eax
		add    %ebp,%eax
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		mov    0x00002c(%ecx),%ecx
		add    %eax,%ecx
		xor    %eax,%eax

	_0405a8_jump:
		mov    0x000069(%edx),%al
		sub    %eax,%ecx
		mov    %ecx,0x00002c(%edx)

	_0405b0_jump:
		xor    %eax,%eax
		mov    _0c1b44_data,%edx
		mov    _0c1b84_data,%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sar    %edx
		lea    (%eax,%edx,1),%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%ecx
		mov    %cx,_0d8088_data
		xor    %ecx,%ecx
		mov    _0c1b85_data,%cl
		mov    _0c1b48_data,%ebp
		sar    %ecx
		add    %ecx,%ebp
		mov    %ebp,(%esp)
		sub    %edx,%eax
		mov    (%esp),%ecx
		mov    %ax,_0d808c_data
		mov    %cx,_0d808a_data
		mov    %cx,_0d808e_data
		jmp    _040646_jump

	_040606_jump:
		testb  $0x000001,_0c32e4_data
		jne    _040646_jump
		mov    _0c1ec0_data,%eax
		mov    0x000028(%eax),%dx
		add    $0x000040,%edx
		mov    %dx,_0d8088_data
		mov    0x00002c(%eax),%dx
		add    $0x000032,%edx
		mov    0x000028(%eax),%ax
		mov    %dx,_0d808a_data
		add    $0x000030,%eax
		mov    %dx,_0d808e_data
		mov    %ax,_0d808c_data

	_040646_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _04064f_jump
		neg    %eax

	_04064f_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		mov    %edx,%ecx
		test   %eax,%eax
		jge    _04065c_jump
		neg    %eax

	_04065c_jump:
		add    %eax,%ecx
		movswl %cx,%eax
		cmp    $0x000002,%eax
		jge    _040699_jump
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _040699_jump
		movw   $0x000001,0x000050(%esi)
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _040699_jump
		movw   $0x000001,0x000050(%eax)

	_040699_jump:
		movswl %cx,%ebp
		test   %ebp,%ebp
		jle    _0406c0_jump
		mov    $0x000005,%cl
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000005,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_0406c0_jump:
		mov    0x000040(%esi),%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _0406d9_jump
		mov    $0x000001,%eax
		jg     _0406d9_jump
		neg    %eax

	_0406d9_jump:
		lea    (%edx,%eax,1),%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jle    _0406e7_jump
		mov    %ebx,%eax

	_0406e7_jump:
		mov    %eax,%ebx
		mov    $0xffffffd8,%eax
		cmp    %ebx,%eax
		jge    _0406f4_jump
		mov    %ebx,%eax

	_0406f4_jump:
		mov    0x00003e(%esi),%edx
		mov    %ax,0x000042(%esi)
		sar    $0x000010,%edx
		movswl %di,%eax
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _040711_jump
		mov    $0x000001,%eax
		jg     _040711_jump
		neg    %eax

	_040711_jump:
		lea    (%edx,%eax,1),%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jle    _04071f_jump
		mov    %ebx,%eax

	_04071f_jump:
		mov    %eax,%ebx
		mov    $0xffffffd8,%eax
		cmp    %ebx,%eax
		jge    _04072c_jump
		mov    %ebx,%eax

	_04072c_jump:
		mov    %ax,0x000040(%esi)
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _040756_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _040756_jump
		orb    $0x000008,0x000081(%esi)
		jmp    _04077d_jump

	_040756_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04077d_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _04077d_jump
		andb   $0x0000f7,0x000081(%esi)

	_04077d_jump:
		mov    _0c247c_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%edx
		sub    $0x0000c8,%eax
		cmp    %edx,%eax
		jle    _0407a7_jump
		mov    0x000081(%esi),%bh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%esi)

	_0407a7_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0407b4_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		cmpw   $0x000000,0x000050(%eax)
		je     _04086e_jump
		mov    0x000050(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%ebx
		cmpw   $0x000000,0x000050(%ebx,%eax,4)
		je     _04086e_jump
		movw   $0x000000,0x000050(%edx)
		mov    _0c32e4_data,%ah
		mov    0x000050(%edx),%edx
		or     $0x000001,%ah
		sar    $0x000010,%edx
		mov    %ah,_0c32e4_data
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    $0x00000a,%esi
		movw   $0x000000,0x000050(%ebx,%eax,4)
		mov    _0c247e_data,%ax
		mov    $0x00012c,%edi
		sub    $0x0000c8,%eax
		mov    %si,_0d8088_data
		mov    %ax,_0d808a_data
		mov    %ax,_0d808e_data
		mov    _0c1ec0_data,%eax
		mov    %di,_0d808c_data
		call   _072f20_func
		mov    _0c1ec0_data,%eax
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		mov    $0x000001,%dh
		movb   $0x000008,0x00006e(%eax)
		mov    %dh,_0d8094_data

	_04086e_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

_040880_switch:
		.long   _0408e3_case
		.long   _040915_case
		.long   _04092d_case
		.long   _040945_case

_040890_switch:
		.long   _040951_case
		.long   _040983_case
		.long   _04099b_case
		.long   _0409b3_case

_0408a0_switch:
		.long   _0409bf_case
		.long   _0409e6_case
		.long   _0409f2_case
		.long   _0409fe_case

_0408b0_switch:
		.long   _040a0a_case
		.long   _040a27_case
		.long   _040a44_case
		.long   _040a60_case




_0408c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cd01c_data,%ax
		cmp    $0x000003,%ax
		ja     _0408f8_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_040880_switch(,%eax,4)

	_0408e3_case:
		mov    $_040c80_func,%ebp
		mov    $_040a88_jump,%eax
		mov    %ebp,_0cd00c_data
		mov    %eax,_095fe0_data

	_0408f8_jump:
		mov    _0cd01e_data,%ax
		cmp    $0x000003,%ax
		ja     _040966_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_040890_switch(,%eax,4)

	_040915_case:
		mov    $_040ce8_func,%esi
		mov    $_040a88_jump,%edi
		mov    %esi,_0cd00c_data
		mov    %edi,_095fe4_data
		jmp    _0408f8_jump

	_04092d_case:
		mov    $_040d50_func,%ebx
		mov    $_040a88_jump,%ecx
		mov    %ebx,_0cd00c_data
		mov    %ecx,_095fe8_data
		jmp    _0408f8_jump

	_040945_case:
		movl   $_040db8_func,_0cd00c_data
		jmp    _0408f8_jump

	_040951_case:
		mov    $_040c80_func,%ebp
		mov    $_040a74_jump,%eax
		mov    %ebp,_0cd010_data
		mov    %eax,_095fe0_data

	_040966_jump:
		mov    _0cd020_data,%ax
		cmp    $0x000003,%ax
		ja     _0409c9_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0408a0_switch(,%eax,4)

	_040983_case:
		mov    $_040ce8_func,%esi
		mov    $_040a74_jump,%edi
		mov    %esi,_0cd010_data
		mov    %edi,_095fe4_data
		jmp    _040966_jump

	_04099b_case:
		mov    $_040d50_func,%ebx
		mov    $_040a74_jump,%ecx
		mov    %ebx,_0cd010_data
		mov    %ecx,_095fe8_data
		jmp    _040966_jump

	_0409b3_case:
		movl   $_040db8_func,_0cd010_data
		jmp    _040966_jump

	_0409bf_case:
		movl   $_040c80_func,_0cd014_data

	_0409c9_jump:
		mov    _0cd022_data,%ax
		cmp    $0x000003,%ax
		ja     _040a6a_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0408b0_switch(,%eax,4)

	_0409e6_case:
		movl   $_040ce8_func,_0cd014_data
		jmp    _0409c9_jump

	_0409f2_case:
		movl   $_040d50_func,_0cd014_data
		jmp    _0409c9_jump

	_0409fe_case:
		movl   $_040db8_func,_0cd014_data
		jmp    _0409c9_jump

	_040a0a_case:
		mov    $_040c80_func,%ecx
		mov    $_040a9c_jump,%esi
		mov    %ecx,_0cd018_data
		mov    %esi,_095fe0_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040a27_case:
		mov    $_040ce8_func,%edx
		mov    $_040a9c_jump,%ebx
		mov    %edx,_0cd018_data
		mov    %ebx,_095fe4_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040a44_case:
		mov    $_040d50_func,%ebp
		mov    $_040a9c_jump,%eax
		mov    %ebp,_0cd018_data
		mov    %eax,_095fe8_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040a60_case:
		movl   $_040db8_func,_0cd018_data

	_040a6a_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040a74_jump:
		xor    %eax,%eax
		mov    _095b12_data,%al
		nop



_040a7c_func:
		and    $0x0000ff,%eax
		mov    _0d80a0_data(%eax),%al
		ret    

	_040a88_jump:
		xor    %eax,%eax
		mov    _095b13_data,%al
		and    $0x0000ff,%eax
		mov    _0d80a0_data(%eax),%al
		ret    

	_040a9c_jump:
		xor    %eax,%eax
		mov    _095b14_data,%al
		and    $0x0000ff,%eax
		mov    _0d80a0_data(%eax),%al
		ret    



_040ab0_func:
		push   %edx
		xor    %eax,%eax
		mov    _0ce7f0_data,%al
		xor    %edx,%edx
		cmp    $0x000002,%eax
		jne    _040ad3_jump
		mov    _0ce814_data,%ax
		cmp    _0d8128_data,%ax
		setle  %al
		xor    %dh,%dh
		mov    %al,%dl

	_040ad3_jump:
		xor    %eax,%eax
		mov    _0c6965_data,%al
		cmp    $0x000001,%eax
		jne    _040b0d_jump
		xor    %eax,%eax
		mov    _095b10_data,%al
		call   _040a7c_func
		test   %al,%al
		je     _040b06_jump
		xor    %eax,%eax
		mov    _095b0e_data,%al
		call   _040a7c_func
		test   %al,%al
		jne    _040b06_jump
		mov    $0x000001,%eax
		jmp    _040b08_jump

	_040b06_jump:
		xor    %eax,%eax

	_040b08_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_040b0d_jump:
		cmpb   $0x000000,_0c6941_data
		je     _040b1d_jump
		mov    _0d8136_data,%dx

	_040b1d_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_040b24_func:
		push   %edx
		xor    %eax,%eax
		mov    _0ce7f0_data,%al
		xor    %edx,%edx
		cmp    $0x000002,%eax
		jne    _040b47_jump
		mov    _0ce814_data,%ax
		cmp    _0d812a_data,%ax
		setge  %al
		xor    %dh,%dh
		mov    %al,%dl

	_040b47_jump:
		xor    %eax,%eax
		mov    _0c6965_data,%al
		cmp    $0x000001,%eax
		jne    _040b81_jump
		xor    %eax,%eax
		mov    _095b0e_data,%al
		call   _040a7c_func
		test   %al,%al
		je     _040b7a_jump
		xor    %eax,%eax
		mov    _095b10_data,%al
		call   _040a7c_func
		test   %al,%al
		jne    _040b7a_jump
		mov    $0x000001,%eax
		jmp    _040b7c_jump

	_040b7a_jump:
		xor    %eax,%eax

	_040b7c_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_040b81_jump:
		cmpb   $0x000000,_0c6941_data
		je     _040b91_jump
		mov    _0d8138_data,%dx

	_040b91_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_040b98_func:
		push   %edx
		xor    %eax,%eax
		mov    _0ce7f0_data,%al
		xor    %edx,%edx
		cmp    $0x000002,%eax
		jne    _040bbb_jump
		mov    _0ce816_data,%ax
		cmp    _0d812e_data,%ax
		setge  %al
		xor    %dh,%dh
		mov    %al,%dl

	_040bbb_jump:
		xor    %eax,%eax
		mov    _0c6965_data,%al
		cmp    $0x000001,%eax
		jne    _040bf5_jump
		xor    %eax,%eax
		mov    _095b11_data,%al
		call   _040a7c_func
		test   %al,%al
		je     _040bee_jump
		xor    %eax,%eax
		mov    _095b0f_data,%al
		call   _040a7c_func
		test   %al,%al
		jne    _040bee_jump
		mov    $0x000001,%eax
		jmp    _040bf0_jump

	_040bee_jump:
		xor    %eax,%eax

	_040bf0_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_040bf5_jump:
		cmpb   $0x000000,_0c6941_data
		je     _040c05_jump
		mov    _0d813a_data,%dx

	_040c05_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_040c0c_func:
		push   %edx
		xor    %eax,%eax
		mov    _0ce7f0_data,%al
		xor    %edx,%edx
		cmp    $0x000002,%eax
		jne    _040c2f_jump
		mov    _0ce816_data,%ax
		cmp    _0d812c_data,%ax
		setle  %al
		xor    %dh,%dh
		mov    %al,%dl

	_040c2f_jump:
		xor    %eax,%eax
		mov    _0c6965_data,%al
		cmp    $0x000001,%eax
		jne    _040c69_jump
		xor    %eax,%eax
		mov    _095b0f_data,%al
		call   _040a7c_func
		test   %al,%al
		je     _040c62_jump
		xor    %eax,%eax
		mov    _095b11_data,%al
		call   _040a7c_func
		test   %al,%al
		jne    _040c62_jump
		mov    $0x000001,%eax
		jmp    _040c64_jump

	_040c62_jump:
		xor    %eax,%eax

	_040c64_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_040c69_jump:
		cmpb   $0x000000,_0c6941_data
		je     _040c79_jump
		mov    _0d813c_data,%dx

	_040c79_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_040c80_func:
		push   %edx
		mov    _0c1af4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _040ce5_jump
		xor    %eax,%eax
		mov    _0ce7f0_data,%al
		test   %eax,%eax
		jne    _040cb9_jump
		mov    _0c6965_data,%al
		cmp    $0x000001,%eax
		jne    _040cb5_jump
		call   *_095fe0_data
		test   %al,%al
		je     _040cb5_jump
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_040cb5_jump:
		xor    %eax,%eax
		pop    %edx
		ret    

	_040cb9_jump:
		mov    _0c6964_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _040cdc_jump
		xor    %eax,%eax
		mov    _0c6965_data,%al
		cmp    $0x000001,%eax
		jne    _040ce3_jump
		call   *_095fe0_data
		test   %al,%al
		je     _040ce3_jump

	_040cdc_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_040ce3_jump:
		xor    %eax,%eax

	_040ce5_jump:
		pop    %edx
		ret    



_040ce8_func:
		push   %edx
		mov    _0c1af4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _040d4d_jump
		xor    %eax,%eax
		mov    _0ce7f0_data,%al
		test   %eax,%eax
		jne    _040d21_jump
		mov    _0c6965_data,%al
		cmp    $0x000001,%eax
		jne    _040d1d_jump
		call   *_095fe4_data
		test   %al,%al
		je     _040d1d_jump
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_040d1d_jump:
		xor    %eax,%eax
		pop    %edx
		ret    

	_040d21_jump:
		mov    _0c6966_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _040d44_jump
		xor    %eax,%eax
		mov    _0c6965_data,%al
		cmp    $0x000001,%eax
		jne    _040d4b_jump
		call   *_095fe4_data
		test   %al,%al
		je     _040d4b_jump

	_040d44_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_040d4b_jump:
		xor    %eax,%eax

	_040d4d_jump:
		pop    %edx
		ret    



_040d50_func:
		push   %edx
		mov    _0c1af4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _040db5_jump
		xor    %eax,%eax
		mov    _0ce7f0_data,%al
		test   %eax,%eax
		jne    _040d89_jump
		mov    _0c6965_data,%al
		cmp    $0x000001,%eax
		jne    _040d85_jump
		call   *_095fe8_data
		test   %al,%al
		je     _040d85_jump
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_040d85_jump:
		xor    %eax,%eax
		pop    %edx
		ret    

	_040d89_jump:
		mov    _0c6968_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _040dac_jump
		xor    %eax,%eax
		mov    _0c6965_data,%al
		cmp    $0x000001,%eax
		jne    _040db3_jump
		call   *_095fe8_data
		test   %al,%al
		je     _040db3_jump

	_040dac_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_040db3_jump:
		xor    %eax,%eax

	_040db5_jump:
		pop    %edx
		ret    



_040db8_func:
		push   %edx
		mov    _0c1af4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _040e1d_jump
		xor    %eax,%eax
		mov    _0ce7f0_data,%al
		test   %eax,%eax
		jne    _040df1_jump
		mov    _0c6965_data,%al
		cmp    $0x000001,%eax
		jne    _040ded_jump
		call   *_095fec_data
		test   %al,%al
		je     _040ded_jump
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_040ded_jump:
		xor    %eax,%eax
		pop    %edx
		ret    

	_040df1_jump:
		mov    _0c696a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _040e14_jump
		xor    %eax,%eax
		mov    _0c6965_data,%al
		cmp    $0x000001,%eax
		jne    _040e1b_jump
		call   *_095fec_data
		test   %al,%al
		je     _040e1b_jump

	_040e14_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_040e1b_jump:
		xor    %eax,%eax

	_040e1d_jump:
		pop    %edx
		ret    



_040e20_func:
		push   %edx
		mov    _0c1af4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _040e5b_jump
		mov    _0d813e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _040e52_jump
		xor    %eax,%eax
		mov    _0c6965_data,%al
		cmp    $0x000001,%eax
		jne    _040e59_jump
		call   *_095fe8_data
		test   %al,%al
		je     _040e59_jump

	_040e52_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_040e59_jump:
		xor    %eax,%eax

	_040e5b_jump:
		pop    %edx
		ret    



_040e60_func:
		push   %edx
		mov    _0c1af4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _040e7f_jump
		mov    _0d8142_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		sete   %al
		xor    %ah,%ah

	_040e7f_jump:
		pop    %edx
		ret    



_040e84_func:
		mov    %ax,_0d8134_data
		ret    



_040e8c_func:
		call   *_0d8124_data
		ret    



_041010_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		push   $0x000180
		push   $0x000200
		push   %eax
		call   _0796d1_func
		movswl %ax,%ecx
		add    $0x00000c,%esp
		cmp    $0xffffffff,%ecx
		jne    _041045_jump
		push   %ebx
		push   $_0c0230_data
		call   _0783fc_func
		add    $0x000008,%esp
		call   _078435_func
		pop    %ecx
		pop    %ebx
		ret    

	_041045_jump:
		mov    %ecx,%eax
		call   _079997_func
		movswl %ax,%ebx
		mov    %ebx,%eax
		call   _07755c_func
		mov    %eax,0x000010(%edx)
		mov    %ebx,0x00000c(%edx)
		mov    %ecx,%eax
		mov    0x000010(%edx),%edx
		call   _0799d4_func
		mov    %ecx,%eax
		call   _079951_func
		pop    %ecx
		pop    %ebx
		ret    



_041070_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000064,%esp
		mov    %eax,%ebp
		call   _03cdcc_func
		push   $_0c0249_data
		call   _0783fc_func
		add    $0x000004,%esp
		mov    $_0c0244_data,%esi
		push   %esi
		push   $_0c0279_data
		xor    %edx,%edx
		call   _0783fc_func
		add    $0x000008,%esp

	_0410a2_jump:
		movswl %dx,%ebx
		call   _079ae7_func
		mov    %al,(%esp,%ebx,1)
		and    $0x0000ff,%eax
		inc    %edx
		cmp    $0x00000d,%eax
		je     _0410bd_jump
		cmp    $0x00001b,%eax
		jne    _0410a2_jump

	_0410bd_jump:
		dec    %edx
		movswl %dx,%eax
		xor    %dl,%dl
		mov    %dl,(%esp,%eax,1)
		xor    %eax,%eax
		mov    (%esp),%al
		test   %eax,%eax
		jne    _0410eb_jump
		mov    %esp,%edi
		push   %edi

	_0410d2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0410ea_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0410d2_jump

	_0410ea_jump:
		pop    %edi

	_0410eb_jump:
		mov    $_0c0298_data,%esi
		mov    %esp,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0410fb_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _041113_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0410fb_jump

	_041113_jump:
		pop    %edi
		mov    %ebp,%edx
		mov    %esp,%eax
		call   _041010_func
		xor    %eax,%eax
		mov    $_0c796c_data,%esi
		mov    _0c7968_data,%al
		mov    $0x0000ff,%ecx
		call   _03cca8_func
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		add    $0x000064,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041158_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,_0c696c_data
		mov    %dx,_0c696a_data
		mov    %dx,_0c6966_data
		test   $0x000001,%al
		je     _041180_jump
		movw   $0x000001,_0c6966_data

	_041180_jump:
		test   $0x000002,%al
		je     _04118d_jump
		movw   $0x000001,_0c696a_data

	_04118d_jump:
		test   $0x000004,%al
		je     _041196_jump
		mov    $0x000001,%ebx

	_041196_jump:
		test   $0x000008,%al
		je     _04119f_jump
		mov    $0x000001,%ebx

	_04119f_jump:
		test   $0x000010,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0d8136_data
		test   $0x000020,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0d8138_data
		test   $0x000040,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0d813c_data
		test   $0x000080,%al
		setne  %dl
		mov    %dx,_0d813a_data
		mov    %bx,_0c6968_data
		pop    %edx
		pop    %ebx
		ret    



_0411e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0c6966_data,%ax
		mov    %ax,_0d813e_data
		mov    _0c6968_data,%ax
		mov    %ax,_0d8140_data
		mov    _0c696a_data,%ax
		mov    %ax,_0d8142_data
		mov    _0c696c_data,%ax
		mov    %ax,_0d8144_data
		mov    0x000015(%edx),%ah
		mov    (%edx),%ebx
		test   %ah,%ah
		je     _0412e4_jump
		test   %ebx,%ebx
		jne    _041277_jump
		mov    _0c255e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _041244_jump
		cmpb   $0x000000,_0cdae8_data
		jne    _041244_jump
		mov    %edx,%eax
		call   _041070_func

	_041244_jump:
		mov    %ebx,%ecx
		mov    0x000010(%edx),%eax
		movl   $0x000000,0x000008(%edx)
		inc    %ebx
		mov    (%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _041158_func
		mov    0x000010(%edx),%eax
		mov    (%ebx,%eax,1),%al
		movb   $0x000000,0x000016(%edx)
		and    $0x0000ff,%eax
		mov    %ebx,(%edx)
		mov    %eax,0x000004(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_041277_jump:
		mov    0x000008(%edx),%ecx
		inc    %ecx
		mov    0x000004(%edx),%esi
		mov    %ecx,0x000008(%edx)
		cmp    %esi,%ecx
		jne    _0412d3_jump
		xor    %eax,%eax
		mov    0x000016(%edx),%al
		cmp    $0x000001,%eax
		je     _041297_jump
		lea    0x000001(%ebx),%eax
		cmp    0x00000c(%edx),%eax
		jb     _0412b9_jump

	_041297_jump:
		xor    %eax,%eax
		mov    _0cdae8_data,%al
		movb   $0x000000,0x000015(%edx)
		cmp    $0x000001,%eax
		jne    _0412d3_jump
		movb   $0x000002,_0cdae8_data
		movw   $0x000001,_0c24ee_data
		jmp    _0412d3_jump

	_0412b9_jump:
		add    $0x000002,%ebx
		mov    0x000010(%edx),%eax
		movl   $0x000000,0x000008(%edx)
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    %ebx,(%edx)
		mov    %eax,0x000004(%edx)

	_0412d3_jump:
		mov    0x000010(%edx),%eax
		mov    -0x000001(%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _041158_func

	_0412e4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0412ec_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _0787b8_func
		mov    $0x000060,%edx
		cli    
		sub    %eax,%eax
		in     (%dx),%al
		xor    %edx,%edx
		mov    _0cdae8_data,%dl
		xor    %bh,%bh
		cmp    $0x000001,%edx
		jne    _04131e_jump
		movb   $0x000003,_0cdae8_data

	_04131e_jump:
		mov    _0d8120_data,%bl
		cmp    $0x000001,%bl
		jb     _0413e3_jump
		jbe    _041358_jump
		cmp    $0x000002,%bl
		je     _041374_jump
		jmp    _0413d9_jump

	_041339_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x0000e1,%edx
		jne    _041351_jump
		movb   $0x000001,_0d8120_data
		jmp    _04139f_jump

	_041351_jump:
		mov    $0x000001,%bh
		jmp    _04139f_jump

	_041358_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x00001d,%edx
		jne    _04136a_jump
		movb   $0x000002,_0d8120_data
		jmp    _04139f_jump

	_04136a_jump:
		xor    %cl,%cl
		mov    %cl,_0d8120_data
		jmp    _04139f_jump

	_041374_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000045,%edx
		jne    _041397_jump
		cmpb   $0x000000,_0c117e_data
		je     _041397_jump
		mov    _0c6964_data,%dh
		test   %dh,%dh
		sete   %ah
		mov    %ah,_0c6964_data

	_041397_jump:
		xor    %bl,%bl
		mov    %bl,_0d8120_data

	_04139f_jump:
		test   %bh,%bh
		je     _0413b7_jump
		mov    %al,%ah
		and    $0x000080,%ah
		xor    $0x000080,%ah
		xor    %edx,%edx
		and    $0x00007f,%al
		mov    %al,%dl
		mov    %ah,_0d80a0_data(%edx)

	_0413b7_jump:
		mov    $0x000061,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    %eax,%ebx
		or     $0x000080,%al
		out    %al,(%dx)
		mov    %bl,%al
		out    %al,(%dx)
		mov    $0x000020,%al
		mov    $0x000020,%edx
		out    %al,(%dx)
		sti    
		cld    
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   

	_0413d9_jump:
		xor    %ah,%ah
		mov    %ah,_0d8120_data
		jmp    _04139f_jump

	_0413e3_jump:
		test   %bl,%bl
		je     _041339_jump
		xor    %ah,%ah
		mov    %ah,_0d8120_data
		jmp    _04139f_jump



_041408_func:
		push   %edx
		xor    %al,%al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000080,%edx
		jl     _041419_jump
		pop    %edx
		ret    

	_041419_jump:
		xor    %ah,%ah
		mov    %ah,_0d80a0_data(%edx)
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000080,%edx
		jl     _041419_jump
		pop    %edx
		ret    



_041434_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _041408_func
		mov    $0x000009,%eax
		call   _07961d_func
		mov    %eax,_0d8098_data
		xor    %eax,%eax
		mov    _0c6965_data,%al
		mov    %dx,_0d809c_data
		cmp    $0x000001,%eax
		jne    _04146f_jump
		mov    $_0412ec_func,%ebx
		mov    $0x000009,%eax
		mov    %cs,%ecx
		call   _079651_func

	_04146f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041474_func:
		push   %ebx
		push   %ecx
		mov    $0x000009,%eax
		mov    _0d809c_data,%cx
		mov    _0d8098_data,%ebx
		call   _079651_func
		pop    %ecx
		pop    %ebx
		ret    



_041490_func:
		push   %edx
		mov    $0x000001,%ah
		xor    %dl,%dl
		mov    %ah,_0ce7f0_data
		mov    %dl,_0ce7ee_data
		mov    %dl,_0ce7ec_data
		mov    $_015d13_func,%edx
		mov    %ah,%al
		mov    %edx,_0d8124_data
		pop    %edx
		ret    



_0414c0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,%esi
		mov    %edx,0x000004(%esp)
		mov    %ecx,(%esp)
		mov    0x00003c(%esp),%ecx
		mov    %ebx,%eax
		mov    _0cdf90_data,%edx
		lea    0x000000(,%edx,4),%ebp
		add    %edx,%ebp
		mov    _0cdf8c_data,%edx
		shl    $0x000006,%ebp
		add    %ebp,%edx
		mov    %edx,0x000018(%esp)
		mov    %esi,%edx
		sub    $0x000070,%edx
		mov    %esi,%ebp
		mov    %edx,0x000008(%esp)
		mov    0x000004(%esp),%edx
		sub    %ebx,%ebp
		sub    $0x000040,%edx
		sub    %ecx,%ebp
		mov    %edx,0x000010(%esp)
		cmp    %ecx,%ebx
		jle    _041685_jump
		lea    (%ebx,%ecx,1),%eax
		add    %eax,%eax
		mov    %eax,0x000020(%esp)
		test   %ebp,%ebp
		jge    _04152b_jump
		lea    (%eax,%ebp,1),%esi
		mov    %esi,0x000020(%esp)
		xor    %ebp,%ebp

	_04152b_jump:
		mov    0x000020(%esp),%eax
		add    %ebp,%eax
		cmp    $0x000140,%eax
		jl     _041544_jump
		mov    $0x000140,%eax
		sub    %ebp,%eax
		dec    %eax
		mov    %eax,0x000020(%esp)

	_041544_jump:
		cmpl   $0x000000,0x000020(%esp)
		jle    _04198f_jump
		mov    0x000004(%esp),%ecx
		sub    (%esp),%ecx
		test   %ecx,%ecx
		jl     _0415ef_jump
		cmp    $0x0000c8,%ecx
		jge    _0415ef_jump
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000018(%esp),%edx
		mov    %edi,%esi
		mov    0x000040(%esp),%ebx
		sub    %edx,%esi
		mov    0x000044(%esp),%eax
		add    %ebx,%esi
		mov    _0cdf61_data,%bh
		add    %eax,%edi
		test   %bh,%bh
		je     _0415da_jump
		sub    0x000010(%esp),%ecx
		lea    0x000000(,%ecx,8),%eax
		sub    %ecx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000008(%esp),%ebx
		mov    %ebp,%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cdf64_data,%ebx
		shl    $0x000002,%eax
		mov    0x000020(%esp),%ecx
		add    %eax,%ebx

	_0415c9_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _0415c9_jump
		jmp    _0415ef_jump

	_0415da_jump:
		mov    0x000020(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0415e8_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0415e8_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_0415ef_jump:
		mov    0x000004(%esp),%ecx
		add    (%esp),%ecx
		test   %ecx,%ecx
		jl     _04198f_jump
		cmp    $0x0000c8,%ecx
		jge    _04198f_jump
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000040(%esp),%edx
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000044(%esp),%ebx
		sub    %eax,%esi
		add    %ebx,%edi
		mov    _0cdf61_data,%al
		add    %edx,%esi
		test   %al,%al
		je     _04167c_jump
		mov    0x000010(%esp),%eax
		mov    %ecx,%edx
		sub    %eax,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    0x000008(%esp),%ebp
		add    %ebp,%eax
		mov    _0cdf64_data,%ebx
		shl    $0x000002,%eax
		mov    0x000020(%esp),%ecx
		add    %eax,%ebx

	_041668_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _041668_jump
		jmp    _04198f_jump

	_04167c_jump:
		mov    0x000020(%esp),%ecx
		jmp    _04197e_jump

	_041685_jump:
		lea    (%ebx,%ebx,1),%edx
		mov    %edx,0x000028(%esp)
		test   %ebp,%ebp
		jge    _041698_jump
		add    %ebp,%edx
		mov    %edx,0x000028(%esp)
		xor    %ebp,%ebp

	_041698_jump:
		mov    0x000028(%esp),%edx
		add    %ebp,%edx
		cmp    $0x000140,%edx
		jl     _0416b2_jump
		mov    $0x000140,%edx
		sub    %ebp,%edx
		dec    %edx
		mov    %edx,0x000028(%esp)

	_0416b2_jump:
		lea    (%eax,%eax,1),%edx
		sub    %eax,%esi
		add    %ecx,%esi
		mov    %edx,0x000024(%esp)
		mov    %esi,0x00001c(%esp)
		test   %esi,%esi
		jge    _0416d2_jump
		lea    (%edx,%esi,1),%ecx
		xor    %esi,%esi
		mov    %ecx,0x000024(%esp)
		mov    %esi,0x00001c(%esp)

	_0416d2_jump:
		mov    0x00001c(%esp),%eax
		add    0x000024(%esp),%eax
		cmp    $0x000140,%eax
		jl     _0416ef_jump
		mov    $0x000140,%eax
		sub    0x00001c(%esp),%eax
		dec    %eax
		mov    %eax,0x000024(%esp)

	_0416ef_jump:
		mov    0x000004(%esp),%eax
		mov    (%esp),%ebx
		sub    %ebx,%eax
		mov    %eax,0x00000c(%esp)
		test   %eax,%eax
		jl     _04183b_jump
		cmp    $0x0000c8,%eax
		jge    _04183b_jump
		cmpl   $0x000000,0x000028(%esp)
		jle    _0417a1_jump
		mov    %eax,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000044(%esp),%ebx
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000040(%esp),%edx
		sub    %eax,%esi
		add    %ebx,%edi
		mov    _0cdf61_data,%ah
		add    %edx,%esi
		test   %ah,%ah
		je     _04178c_jump
		mov    0x00000c(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000008(%esp),%ebx
		mov    %ebp,%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cdf64_data,%ebx
		shl    $0x000002,%eax
		mov    0x000028(%esp),%ecx
		add    %eax,%ebx

	_04177b_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _04177b_jump
		jmp    _0417a1_jump

	_04178c_jump:
		mov    0x000028(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _04179a_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_04179a_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_0417a1_jump:
		mov    0x000024(%esp),%ecx
		test   %ecx,%ecx
		jle    _04183b_jump
		mov    0x00000c(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    0x00001c(%esp),%edi
		shl    $0x000006,%eax
		add    %eax,%edi
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000040(%esp),%edx
		sub    %eax,%esi
		mov    0x000044(%esp),%ebx
		add    %edx,%esi
		mov    _0cdf61_data,%dl
		add    %ebx,%edi
		test   %dl,%dl
		je     _04182a_jump
		mov    0x00000c(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000008(%esp),%ebx
		mov    0x00001c(%esp),%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cdf64_data,%ebx
		shl    $0x000002,%eax
		mov    0x000024(%esp),%ecx
		add    %eax,%ebx

	_041819_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _041819_jump
		jmp    _04183b_jump

	_04182a_jump:
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _041834_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_041834_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_04183b_jump:
		mov    0x000004(%esp),%eax
		mov    (%esp),%ecx
		add    %ecx,%eax
		mov    %eax,0x000014(%esp)
		test   %eax,%eax
		jl     _04198f_jump
		cmp    $0x0000c8,%eax
		jge    _04198f_jump
		cmpl   $0x000000,0x000028(%esp)
		jle    _0418ef_jump
		mov    0x000014(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		mov    0x000040(%esp),%ebx
		lea    (%eax,%ebp,1),%edi
		mov    0x000018(%esp),%edx
		mov    %edi,%esi
		mov    0x000044(%esp),%ecx
		sub    %edx,%esi
		add    %ecx,%edi
		mov    _0cdf61_data,%dh
		add    %ebx,%esi
		test   %dh,%dh
		je     _0418da_jump
		mov    0x000014(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    0x000008(%esp),%ebp
		add    %ebp,%eax
		mov    _0cdf64_data,%ebx
		shl    $0x000002,%eax
		mov    0x000028(%esp),%ecx
		add    %eax,%ebx

	_0418c9_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _0418c9_jump
		jmp    _0418ef_jump

	_0418da_jump:
		mov    0x000028(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0418e8_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0418e8_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_0418ef_jump:
		cmpl   $0x000000,0x000024(%esp)
		jle    _04198f_jump
		mov    0x000014(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		mov    0x00001c(%esp),%edi
		add    %edx,%eax
		mov    0x000018(%esp),%ecx
		shl    $0x000006,%eax
		mov    0x000040(%esp),%ebp
		add    %eax,%edi
		mov    _0cdf61_data,%bl
		mov    %edi,%esi
		mov    0x000044(%esp),%eax
		sub    %ecx,%esi
		add    %eax,%edi
		add    %ebp,%esi
		test   %bl,%bl
		je     _04197a_jump
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000008(%esp),%ecx
		mov    0x00001c(%esp),%edx
		sub    %ecx,%edx
		add    %edx,%eax
		mov    _0cdf64_data,%ebx
		shl    $0x000002,%eax
		mov    0x000024(%esp),%ecx
		add    %eax,%ebx

	_041962_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _041962_jump
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c

	_04197a_jump:
		mov    0x000024(%esp),%ecx

	_04197e_jump:
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _041988_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_041988_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_04198f_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_041998_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,0x000008(%esp)
		mov    %edx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %ebx,%esi
		xor    %edi,%edi
		xor    %ebp,%ebp
		test   %ebx,%ebx
		jl     _041a28_jump
		mov    $0x000001,%edx
		add    %ebx,%ebx
		sub    %edx,%ebx
		mov    %edx,0x00000c(%esp)
		mov    %ebx,0x000010(%esp)

	_0419c4_jump:
		mov    0x000028(%esp),%ebx
		push   %ebx
		mov    0x000028(%esp),%ecx
		mov    0x000008(%esp),%eax
		push   %ecx
		mov    0x000008(%esp),%edx
		mov    %edi,%ebx
		push   %eax
		mov    %esi,%ecx
		mov    0x000014(%esp),%eax
		call   _0414c0_func
		mov    0x000028(%esp),%edx
		push   %edx
		mov    0x000028(%esp),%ebx
		mov    0x000008(%esp),%ecx
		push   %ebx
		mov    0x000010(%esp),%eax
		mov    0x000008(%esp),%edx
		push   %ecx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _0414c0_func
		mov    0x00000c(%esp),%eax
		add    %eax,%ebp
		lea    0x000002(%eax),%edx
		inc    %edi
		mov    %edx,0x00000c(%esp)
		cmp    %esi,%ebp
		jl     _041a24_jump
		mov    0x000010(%esp),%ebx
		sub    %ebx,%ebp
		lea    -0x000002(%ebx),%ecx
		dec    %esi
		mov    %ecx,0x000010(%esp)

	_041a24_jump:
		cmp    %esi,%edi
		jle    _0419c4_jump

	_041a28_jump:
		cmpb   $0x000000,_0cdf6e_data
		je     _041a36_jump
		call   _042378_func

	_041a36_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_041a40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cdf60_data
		je     _041baa_jump
		mov    $0x000004,%edx
		mov    $0x0000a1,%eax
		call   _077848_func
		mov    $0x000004,%edx
		mov    %eax,_0d8150_data
		mov    $0x000041,%eax
		call   _077848_func
		mov    $0x000004,%edx
		mov    %eax,_0d8154_data
		mov    $0x001400,%eax
		call   _077848_func
		mov    $0x000004,%edx
		mov    %eax,_0d8158_data
		mov    $0x007161,%eax
		call   _077848_func
		mov    _0d8150_data,%edx
		mov    %eax,_0cdf64_data
		test   %edx,%edx
		je     _041ac2_jump
		cmpl   $0x000000,_0d8154_data
		je     _041ac2_jump
		cmpl   $0x000000,_0d8158_data
		je     _041ac2_jump
		test   %eax,%eax
		jne    _041b25_jump

	_041ac2_jump:
		cmpl   $0x000000,_0d8150_data
		je     _041ad5_jump
		mov    $_0d8150_data,%eax
		call   _077858_func

	_041ad5_jump:
		cmpl   $0x000000,_0d8154_data
		je     _041ae8_jump
		mov    $_0d8154_data,%eax
		call   _077858_func

	_041ae8_jump:
		cmpl   $0x000000,_0d8158_data
		je     _041afb_jump
		mov    $_0d8158_data,%eax
		call   _077858_func

	_041afb_jump:
		cmpl   $0x000000,_0cdf64_data
		je     _041b0e_jump
		mov    $_0cdf64_data,%eax
		call   _077858_func

	_041b0e_jump:
		xor    %dl,%dl
		mov    $_0c02a0_data,%eax
		mov    %dl,_0cdf60_data
		call   _01f628_func
		jmp    _041baa_jump

	_041b25_jump:
		xor    %esi,%esi
		xor    %edi,%edi
		jmp    _041b34_jump

	_041b2b_jump:
		inc    %esi
		add    $0x000004,%edi
		cmp    $0x000040,%esi
		jg     _041b62_jump

	_041b34_jump:
		mov    %esi,%eax
		imul   %esi,%eax
		mov    _0d8154_data,%edx
		mov    %eax,(%edx,%edi,1)
		xor    %eax,%eax
		xor    %edx,%edx

	_041b46_jump:
		mov    %eax,%ebx
		imul   %eax,%ebx
		mov    _0d8150_data,%ecx
		add    $0x000004,%edx
		inc    %eax
		mov    %ebx,-0x000004(%ecx,%edx,1)
		cmp    $0x0000a0,%eax
		jg     _041b2b_jump
		jmp    _041b46_jump

	_041b62_jump:
		xor    %esi,%esi
		xor    %edi,%edi

	_041b66_jump:
		mov    %esi,%eax
		mov    $0x3f500000,%ecx
		call   _078062_func
		xor    %ebx,%ebx
		call   _078d08_func
		call   _07825f_func
		call   _079b16_func
		mov    $0x40f00000,%ecx
		xor    %ebx,%ebx
		add    $0x000004,%edi
		call   _07825f_func
		call   _078d1c_func
		mov    _0d8158_data,%edx
		inc    %esi
		mov    %eax,-0x000004(%edx,%edi,1)
		cmp    $0x001400,%esi
		jl     _041b66_jump

	_041baa_jump:
		call   _041bb8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041bb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cdf60_data,%ah
		test   %ah,%ah
		je     _041bd8_jump
		movb   $0x000001,_0cdf61_data
		movb   $0x000003,_0cdf6c_data
		jmp    _041be6_jump

	_041bd8_jump:
		mov    $0x000003,%dh
		mov    %ah,_0cdf61_data
		mov    %dh,_0cdf6c_data

	_041be6_jump:
		mov    $0x000019,%edx
		mov    $0x000057,%ebx
		mov    $0x000032,%ecx
		mov    $0x0000a0,%esi
		mov    $0x000064,%edi
		mov    $0x000a00,%ebp
		mov    $0x000640,%eax
		mov    %edx,_0cdf78_data
		mov    %ebx,_0cdf7c_data
		mov    %ecx,_0cdf80_data
		mov    %esi,_0cdf84_data
		mov    %edi,_0cdf88_data
		mov    %ebp,_0d8180_data
		xor    %cl,%cl
		mov    %eax,_0d8184_data
		mov    %cl,_0cdf6d_data
		mov    %cl,_0ce4ac_data
		call   _042208_func
		cmpb   $0x000000,_0cdf60_data
		je     _041c75_jump
		mov    _0cdf78_data,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0cdf68_data
		call   _042378_func

	_041c75_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041c7c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0cdf78_data,%ebx
		add    %eax,%ebx
		mov    $0x000040,%eax
		cmp    %ebx,%eax
		jle    _041c93_jump
		mov    %ebx,%eax

	_041c93_jump:
		mov    %eax,%ebx
		mov    $0x000019,%eax
		cmp    %ebx,%eax
		jge    _041ca0_jump
		mov    %ebx,%eax

	_041ca0_jump:
		mov    %eax,_0cdf78_data
		call   _042208_func
		cmpb   $0x000000,_0cdf61_data
		je     _041cc8_jump
		test   %edx,%edx
		jle    _041cbe_jump
		mov    $0xffffffbf,%eax
		jmp    _041cc3_jump

	_041cbe_jump:
		mov    $0x000041,%eax

	_041cc3_jump:
		call   _0422ac_func

	_041cc8_jump:
		pop    %edx
		pop    %ebx
		ret    



_041ccc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0d8170_data,%bx
		mov    _0cdf84_data,%dx
		mov    _0d8174_data,%si
		sub    %edx,%ebx
		mov    _0cdf88_data,%cx
		movswl %bx,%eax
		sub    %ecx,%esi
		test   %eax,%eax
		jge    _041cfa_jump
		neg    %eax

	_041cfa_jump:
		mov    %eax,%edx
		movswl %si,%eax
		test   %eax,%eax
		jge    _041d05_jump
		neg    %eax

	_041d05_jump:
		add    %edx,%eax
		movswl %ax,%edi
		test   %edi,%edi
		jle    _041d2e_jump
		mov    $0x000006,%cl
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %edi
		mov    $0x000006,%cl
		mov    %eax,%ebx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%esi

	_041d2e_jump:
		mov    _0d8178_data,%edx
		movswl %bx,%eax
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _041d47_jump
		mov    $0x000001,%eax
		jg     _041d47_jump
		neg    %eax

	_041d47_jump:
		add    _0d8178_data,%eax
		mov    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _041d58_jump
		mov    %ebx,%eax

	_041d58_jump:
		mov    $0xfffffff0,%ebx
		cmp    %ebx,%eax
		jge    _041d63_jump
		mov    %ebx,%eax

	_041d63_jump:
		mov    _0d817c_data,%ecx
		mov    %eax,_0d8178_data
		movswl %si,%eax
		sub    %ecx,%eax
		cmp    $0x000000,%eax
		je     _041d81_jump
		mov    $0x000001,%eax
		jg     _041d81_jump
		neg    %eax

	_041d81_jump:
		mov    _0d817c_data,%esi
		mov    $0x000010,%ebx
		add    %esi,%eax
		cmp    %ebx,%eax
		jle    _041d94_jump
		mov    %ebx,%eax

	_041d94_jump:
		mov    $0xfffffff0,%ebx
		cmp    %ebx,%eax
		jge    _041d9f_jump
		mov    %ebx,%eax

	_041d9f_jump:
		mov    %eax,_0d817c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041dac_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041dbe_jump
		mov    %ebx,%eax

	_041dbe_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _041dcb_jump
		mov    %ebx,%eax

	_041dcb_jump:
		mov    _0cdf6d_data,%bl
		mov    %eax,%edx
		test   $0x000001,%bl
		je     _041e26_jump
		mov    _0d8188_data,%ecx
		mov    _0d8180_data,%ebx
		and    $0x0000f0,%cl
		and    $0x00000f,%ebx
		or     %ebx,%ecx
		mov    %ecx,_0d8188_data
		lea    (%ecx,%eax,1),%ebx
		mov    _0c259a_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _041e06_jump
		mov    %ebx,%eax

	_041e06_jump:
		mov    _0c2598_data,%ecx
		sar    $0x000010,%ecx
		shl    $0x000004,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _041e1c_jump
		mov    %ebx,%eax

	_041e1c_jump:
		mov    %eax,_0d8188_data
		sar    $0x000004,%eax
		jmp    _041e55_jump

	_041e26_jump:
		mov    _0c247a_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0c259a_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041e42_jump
		mov    %ebx,%eax

	_041e42_jump:
		mov    _0c2598_data,%ecx
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _041e55_jump
		mov    %ebx,%eax

	_041e55_jump:
		mov    %ax,_0c247c_data
		mov    _0d8180_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%eax
		sar    $0x000004,%eax
		mov    %ebx,_0d8180_data
		mov    %eax,_0cdf84_data
		call   _042208_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041e7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041e8e_jump
		mov    %ebx,%eax

	_041e8e_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _041e9b_jump
		mov    %ebx,%eax

	_041e9b_jump:
		mov    _0cdf6d_data,%bl
		mov    %eax,%edx
		test   $0x000001,%bl
		je     _041ef6_jump
		mov    _0d818c_data,%ecx
		mov    _0d8184_data,%ebx
		and    $0x0000f0,%cl
		and    $0x00000f,%ebx
		or     %ebx,%ecx
		mov    %ecx,_0d818c_data
		lea    (%ecx,%eax,1),%ebx
		mov    _0c259e_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _041ed6_jump
		mov    %ebx,%eax

	_041ed6_jump:
		mov    _0c259c_data,%ecx
		sar    $0x000010,%ecx
		shl    $0x000004,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _041eec_jump
		mov    %ebx,%eax

	_041eec_jump:
		mov    %eax,_0d818c_data
		sar    $0x000004,%eax
		jmp    _041f25_jump

	_041ef6_jump:
		mov    _0c247c_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0c259e_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041f12_jump
		mov    %ebx,%eax

	_041f12_jump:
		mov    _0c259c_data,%ecx
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _041f25_jump
		mov    %ebx,%eax

	_041f25_jump:
		mov    %ax,_0c247e_data
		mov    _0d8184_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%eax
		sar    $0x000004,%eax
		mov    %ebx,_0d8184_data
		mov    %eax,_0cdf88_data
		call   _042208_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041f4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041f5f_jump
		mov    %ebx,%eax

	_041f5f_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _041f6c_jump
		mov    %ebx,%eax

	_041f6c_jump:
		mov    _0c259a_data,%dx
		mov    %eax,%ecx
		mov    _0c247c_data,%ax
		xor    %esi,%esi
		cmp    %dx,%ax
		je     _041f8b_jump
		cmp    _0c259c_data,%ax
		jne    _041fb9_jump

	_041f8b_jump:
		mov    _0c247c_data,%ax
		cmp    _0c259a_data,%ax
		jne    _041f9e_jump
		test   %ecx,%ecx
		jg     _041fb9_jump

	_041f9e_jump:
		mov    _0c247c_data,%ax
		cmp    _0c259c_data,%ax
		jne    _04208f_jump
		test   %ecx,%ecx
		jge    _04208f_jump

	_041fb9_jump:
		mov    _0cdf78_data,%eax
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0cdf84_data,%edx
		cmp    %edx,%eax
		jge    _04208f_jump
		mov    $0x000140,%ebx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _04208f_jump
		testb  $0x000001,_0cdf6d_data
		je     _04203b_jump
		mov    _0d8188_data,%eax
		mov    _0d8180_data,%ebx
		and    $0x0000f0,%al
		and    $0x00000f,%ebx
		or     %ebx,%eax
		mov    %eax,_0d8188_data
		lea    (%eax,%ecx,1),%ebx
		mov    _0c259a_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _04201b_jump
		mov    %ebx,%eax

	_04201b_jump:
		mov    _0c2598_data,%esi
		sar    $0x000010,%esi
		shl    $0x000004,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _042031_jump
		mov    %ebx,%eax

	_042031_jump:
		mov    %eax,_0d8188_data
		sar    $0x000004,%eax
		jmp    _04206c_jump

	_04203b_jump:
		mov    %ecx,%eax
		mov    _0c247a_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0c259a_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _042059_jump
		mov    %ebx,%eax

	_042059_jump:
		mov    _0c2598_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _04206c_jump
		mov    %ebx,%eax

	_04206c_jump:
		mov    %ax,_0c247c_data
		mov    _0d8180_data,%esi
		add    %ecx,%esi
		mov    %esi,%eax
		mov    %esi,_0d8180_data
		sar    $0x000004,%eax
		mov    $0x000001,%esi
		mov    %eax,_0cdf84_data

	_04208f_jump:
		call   _042208_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04209c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0420af_jump
		mov    %ebx,%eax

	_0420af_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _0420bc_jump
		mov    %ebx,%eax

	_0420bc_jump:
		mov    _0c259e_data,%dx
		mov    %eax,%ecx
		mov    _0c247e_data,%ax
		xor    %esi,%esi
		cmp    %dx,%ax
		je     _0420db_jump
		cmp    _0c25a0_data,%ax
		jne    _042109_jump

	_0420db_jump:
		mov    _0c247e_data,%ax
		cmp    _0c259e_data,%ax
		jne    _0420ee_jump
		test   %ecx,%ecx
		jg     _042109_jump

	_0420ee_jump:
		mov    _0c247e_data,%ax
		cmp    _0c25a0_data,%ax
		jne    _0421df_jump
		test   %ecx,%ecx
		jge    _0421df_jump

	_042109_jump:
		mov    _0cdf78_data,%eax
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0cdf88_data,%edx
		cmp    %edx,%eax
		jge    _0421df_jump
		mov    $0x0000c8,%ebx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _0421df_jump
		testb  $0x000001,_0cdf6d_data
		je     _04218b_jump
		mov    _0d818c_data,%eax
		mov    _0d8184_data,%ebx
		and    $0x0000f0,%al
		and    $0x00000f,%ebx
		or     %ebx,%eax
		mov    %eax,_0d818c_data
		lea    (%eax,%ecx,1),%ebx
		mov    _0c259e_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _04216b_jump
		mov    %ebx,%eax

	_04216b_jump:
		mov    _0c259c_data,%esi
		sar    $0x000010,%esi
		shl    $0x000004,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _042181_jump
		mov    %ebx,%eax

	_042181_jump:
		mov    %eax,_0d818c_data
		sar    $0x000004,%eax
		jmp    _0421bc_jump

	_04218b_jump:
		mov    %ecx,%eax
		mov    _0c247c_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0c259e_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0421a9_jump
		mov    %ebx,%eax

	_0421a9_jump:
		mov    _0c259c_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _0421bc_jump
		mov    %ebx,%eax

	_0421bc_jump:
		mov    %ax,_0c247e_data
		mov    _0d8184_data,%esi
		add    %ecx,%esi
		mov    %esi,%eax
		mov    %esi,_0d8184_data
		sar    $0x000004,%eax
		mov    $0x000001,%esi
		mov    %eax,_0cdf88_data

	_0421df_jump:
		call   _042208_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_042208_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cdf78_data,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edx
		mov    %eax,%ebx
		sar    $0x00001f,%edx
		mov    %eax,_0cdf7c_data
		sub    %edx,%eax
		sar    %eax
		mov    _0cdf78_data,%esi
		add    %esi,%esi
		mov    %eax,%ecx
		mov    _0cdf84_data,%eax
		mov    %esi,%edx
		sub    %ecx,%eax
		sar    $0x00001f,%edx
		mov    %eax,_0cdf8c_data
		mov    %esi,%eax
		sub    %edx,%eax
		sar    %eax
		mov    _0cdf88_data,%edx
		sub    %eax,%edx
		mov    %edx,_0cdf90_data
		lea    0x000002(%ecx),%edx
		mov    %dx,_0c259a_data
		lea    0x000002(%eax),%edx
		mov    %dx,_0c259e_data
		xor    %edx,%edx
		mov    _0cdf0c_data,%dx
		sub    %ecx,%edx
		sub    $0x000004,%edx
		mov    %dx,_0c259c_data
		xor    %edx,%edx
		mov    _0cdf0e_data,%dx
		sub    %eax,%edx
		sub    $0x000004,%edx
		mov    %esi,_0cdf80_data
		mov    %dx,_0c25a0_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0422ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cdf78_data,%edx
		mov    _0cdf70_data,%ebx
		neg    %edx
		imul   %ebx,%edx
		mov    _0cdf74_data,%ecx
		mov    _0cdf68_data,%esi
		add    %ecx,%edx
		cmp    %esi,%edx
		jne    _0422e4_jump
		testb  $0x000002,_0cdf6d_data
		je     _04233f_jump
		cmp    _0d816c_data,%esi
		je     _04233f_jump

	_0422e4_jump:
		cmpb   $0x000000,_0cdf60_data
		je     _04233f_jump
		mov    _0cdf78_data,%edx
		mov    _0cdf68_data,%ebx
		neg    %edx
		add    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		cmp    %ebx,%eax
		jle    _042318_jump
		mov    %ebx,%eax

	_042318_jump:
		mov    %eax,%ebx
		xor    %eax,%eax
		cmp    %ebx,%eax
		jge    _042322_jump
		mov    %ebx,%eax

	_042322_jump:
		mov    %eax,_0cdf68_data
		mov    $0x000001,%ah
		mov    %ah,_0cdf61_data
		mov    %ah,_0cdf6e_data
		call   _042208_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04233f_jump:
		cmpl   $0x000000,_0cdf68_data
		je     _042365_jump
		cmpb   $0x000000,_0cdf60_data
		je     _042365_jump
		mov    $0x000001,%ch
		xor    %al,%al
		mov    %ch,_0cdf61_data
		mov    %al,_0cdf6e_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_042365_jump:
		xor    %bh,%bh
		mov    %bh,_0cdf61_data
		mov    %bh,_0cdf6e_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_042378_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    _0cdf78_data,%ebx
		imul   %ebx,%ebx
		mov    $0x200000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000040,%edx
		sub    _0cdf78_data,%edx
		mov    %eax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		sar    $0x000002,%eax
		mov    _0cdf64_data,%edi
		shl    $0x000002,%eax
		lea    0x00e100(%edi,%eax,1),%edx
		mov    %edx,0x000014(%esp)
		lea    0x00037c(%edi),%edx
		sub    %eax,%edx
		add    $0x00df00,%edx
		mov    _0cdf60_data,%ah
		mov    %edx,0x000018(%esp)
		test   %ah,%ah
		je     _0425c2_jump
		xor    %dl,%dl
		mov    $0x007161,%ecx
		mov    %dl,_0cdf6e_data
		mov    $0x000000,%eax
		rep stos %eax,%es:(%edi)
		xor    %ecx,%ecx
		mov    %ecx,0x000020(%esp)
		mov    %ecx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)

	_042407_jump:
		mov    0x000008(%esp),%eax
		mov    0x000014(%esp),%esi
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00001c(%esp)
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    0x00001c(%esp),%edi
		mov    0x00001c(%esp),%ebp
		mov    %eax,0x000010(%esp)
		neg    %edx
		add    0x000018(%esp),%ebp
		add    %esi,%edi
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    %ebp,0x000028(%esp)
		mov    %edi,0x000030(%esp)
		add    %edx,%eax
		mov    0x000014(%esp),%ebp
		mov    %eax,%ecx
		add    %ebp,%edx
		mov    %eax,0x00002c(%esp)
		mov    %edx,(%esp)
		jmp    _0424b7_jump

	_042455_jump:
		mov    0x000004(%esp),%edi
		mov    0x000020(%esp),%ebp
		mov    0x000008(%esp),%eax
		mov    _0cdf78_data,%edx
		add    $0x000004,%edi
		inc    %ebp
		add    $0x0000e0,%eax
		mov    %edi,0x000004(%esp)
		mov    %ebp,0x000020(%esp)
		mov    %eax,0x000008(%esp)
		cmp    %edx,%ebp
		ja     _0425c2_jump
		jmp    _042407_jump

	_042486_jump:
		mov    0x000028(%esp),%ebp
		mov    (%esp),%eax
		mov    0x00002c(%esp),%edx
		mov    0x000030(%esp),%edi
		sub    $0x000004,%ecx
		add    $0x000004,%esi
		inc    %ebx
		add    $0x000004,%ebp
		sub    $0x000004,%eax
		add    $0x000004,%edx
		sub    $0x000004,%edi
		mov    %ebp,0x000028(%esp)
		mov    %eax,(%esp)
		mov    %edx,0x00002c(%esp)
		mov    %edi,0x000030(%esp)

	_0424b7_jump:
		mov    _0cdf7c_data,%eax
		sub    _0cdf78_data,%eax
		cmp    %eax,%ebx
		jae    _042455_jump
		lea    0x000000(,%ebx,4),%eax
		mov    %eax,0x000024(%esp)
		mov    0x000024(%esp),%edx
		mov    _0d8150_data,%eax
		mov    0x000010(%esp),%edi
		add    %eax,%edx
		mov    _0d8154_data,%eax
		add    %eax,%edi
		mov    (%edx),%eax
		mov    (%edi),%ebp
		mov    0x00000c(%esp),%edx
		add    %ebp,%eax
		imul   %edx,%eax
		cmp    $0x500000,%eax
		jae    _042486_jump
		shr    $0x00000a,%eax
		mov    _0d8158_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0cdf68_data,%eax
		mov    (%edx),%edi
		mov    %eax,%edx
		imul   %edi,%edx
		mov    %ebx,%eax
		shr    $0x000010,%edx
		imul   %edx,%eax
		imul   0x000020(%esp),%edx
		add    $0x008000,%edx
		shr    $0x000010,%edx
		imul   $0x000140,%edx,%edx
		add    $0x008000,%eax
		shr    $0x000010,%eax
		test   %ebx,%ebx
		je     _042561_jump
		mov    0x000014(%esp),%edi
		add    0x000024(%esp),%edi
		sub    0x00001c(%esp),%edi
		mov    %edx,%ebp
		sub    %eax,%ebp
		add    %ebp,(%edi)
		mov    0x000018(%esp),%edi
		sub    0x000024(%esp),%edi
		add    0x00001c(%esp),%edi
		mov    %eax,%ebp
		sub    %edx,%ebp
		add    %ebp,(%edi)

	_042561_jump:
		cmpl   $0x000000,0x000020(%esp)
		je     _042579_jump
		mov    %eax,%edi
		neg    %edi
		mov    (%esi),%ebp
		sub    %edx,%edi
		add    %edi,%ebp
		mov    %ebp,(%esi)
		lea    (%eax,%edx,1),%edi
		add    %edi,(%ecx)

	_042579_jump:
		cmp    _0cdf78_data,%ebx
		ja     _042486_jump
		cmpl   $0x000000,0x000020(%esp)
		je     _0425a2_jump
		lea    (%eax,%edx,1),%edi
		mov    (%esp),%ebp
		add    %edi,0x000000(%ebp)
		mov    %eax,%edi
		neg    %edi
		sub    %edx,%edi
		mov    0x000028(%esp),%ebp
		add    %edi,0x000000(%ebp)

	_0425a2_jump:
		test   %ebx,%ebx
		je     _042486_jump
		mov    %eax,%edi
		mov    0x000030(%esp),%ebp
		sub    %edx,%edi
		sub    %eax,%edx
		mov    0x00002c(%esp),%eax
		add    %edi,0x000000(%ebp)
		add    %edx,(%eax)
		jmp    _042486_jump

	_0425c2_jump:
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0425cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c131a_data,%si
		mov    _0c1af8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _042718_jump
		mov    _0cdf80_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		sar    $0x000002,%edx
		mov    _0c1b85_data,%al
		sub    %eax,%edx
		mov    _0c24c0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000ff,%eax
		jne    _042625_jump
		mov    _0c2584_data,%bx
		test   %bx,%bx
		je     _0426e8_jump

	_042625_jump:
		mov    _0c1b54_data,%ax
		sub    %edx,%eax
		mov    $0x000002,%cl
		mov    %eax,%edx
		test   %ax,%ax
		js     _04263b_jump
		sar    %cl,%ax
		jmp    _042644_jump

	_04263b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_042644_jump:
		mov    %ax,_0c24c2_data
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _042658_jump
		neg    %eax

	_042658_jump:
		mov    %eax,%ebx
		mov    _0c24c0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _042668_jump
		neg    %eax

	_042668_jump:
		cmp    %eax,%ebx
		jg     _042718_jump
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04267e_jump
		neg    %eax

	_04267e_jump:
		mov    %eax,%ebx
		mov    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _04268b_jump
		mov    %ebx,%eax

	_04268b_jump:
		mov    %eax,%ebx
		mov    _0c24c0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0426ad_jump
		movswl %bx,%ebx
		cmp    %ebx,%eax
		jle    _0426a2_jump
		mov    %ebx,%eax

	_0426a2_jump:
		mov    %ax,_0c24c2_data
		jmp    _042718_jump

	_0426ad_jump:
		jge    _0426c2_jump
		movswl %bx,%ebx
		neg    %ebx
		cmp    %ebx,%eax
		jge    _0426ba_jump
		mov    %ebx,%eax

	_0426ba_jump:
		mov    %ax,_0c24c2_data
		jmp    _042718_jump

	_0426c2_jump:
		movswl %dx,%eax
		mov    _0c131a_data,%si
		test   %eax,%eax
		jle    _0426db_jump
		movw   $0x000001,_0c24c2_data
		jmp    _042718_jump

	_0426db_jump:
		jge    _042718_jump
		movw   $0x00ffff,_0c24c2_data
		jmp    _042718_jump

	_0426e8_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000001,%eax
		je     _042718_jump
		mov    _0c1b52_data,%eax
		movswl %dx,%edx
		sar    $0x000010,%eax
		add    $0x000030,%edx
		cmp    %edx,%eax
		jge    _042711_jump
		movw   $0x00fffc,_0c24c2_data
		jmp    _042718_jump

	_042711_jump:
		mov    %bx,_0c24c2_data

	_042718_jump:
		mov    _0c1af6_data,%eax
		sar    $0x000010,%eax
		mov    _0c131a_data,%si
		cmp    $0xffffffff,%eax
		jne    _04292e_jump
		mov    _0cdf7c_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		xor    %ecx,%ecx
		mov    _0c1b84_data,%cl
		sub    %ecx,%eax
		mov    _0cdf7c_data,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		sub    %ecx,%eax
		mov    _0c2582_data,%ecx
		sar    $0x000010,%ecx
		mov    %eax,%edx
		test   %ecx,%ecx
		jg     _042791_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0427d1_jump

	_042791_jump:
		mov    _0c1b52_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		mov    %si,_0c131a_data
		test   %ax,%ax
		js     _0427ac_jump
		sar    %cl,%ax
		jmp    _0427b5_jump

	_0427ac_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0427b5_jump:
		mov    _0c131a_data,%si
		cmp    %ax,%si
		jg     _04288f_jump
		jge    _042890_jump
		inc    %esi
		jmp    _042890_jump

	_0427d1_jump:
		test   %ecx,%ecx
		jl     _0427d9_jump
		test   %eax,%eax
		jge    _04281a_jump

	_0427d9_jump:
		mov    _0c1b52_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		mov    %si,_0c131a_data
		test   %ax,%ax
		js     _0427f4_jump
		sar    %cl,%ax
		jmp    _0427fd_jump

	_0427f4_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0427fd_jump:
		mov    _0c131a_data,%si
		cmp    %ax,%si
		jge    _04280f_jump
		inc    %esi
		jmp    _042890_jump

	_04280f_jump:
		jle    _042890_jump
		jmp    _04288f_jump

	_04281a_jump:
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _04285d_jump
		mov    _0c1b52_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _042843_jump
		sar    %cl,%ax
		jmp    _04284c_jump

	_042843_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04284c_jump:
		mov    _0c131a_data,%si
		cmp    %ax,%si
		jg     _04288f_jump
		jge    _042890_jump
		inc    %esi
		jmp    _042890_jump

	_04285d_jump:
		test   %eax,%eax
		jne    _042890_jump
		mov    _0c1b52_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _042875_jump
		sar    %cl,%ax
		jmp    _04287e_jump

	_042875_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04287e_jump:
		mov    _0c131a_data,%si
		cmp    %ax,%si
		jge    _04288d_jump
		inc    %esi
		jmp    _042890_jump

	_04288d_jump:
		jle    _042890_jump

	_04288f_jump:
		dec    %esi

	_042890_jump:
		movswl %si,%eax
		mov    %si,_0c131a_data
		test   %eax,%eax
		jge    _0428a0_jump
		neg    %eax

	_0428a0_jump:
		mov    _0c131a_data,%si
		cmp    $0x000004,%eax
		jle    _0428bf_jump
		movswl %si,%eax
		test   %eax,%eax
		jle    _0428ba_jump
		mov    $0x000004,%esi
		jmp    _0428bf_jump

	_0428ba_jump:
		mov    $0xfffffffc,%esi

	_0428bf_jump:
		mov    $0x000002,%cl
		mov    %esi,%eax
		mov    %si,_0c131a_data
		test   %ax,%ax
		js     _0428d4_jump
		sar    %cl,%ax
		jmp    _0428dd_jump

	_0428d4_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0428dd_jump:
		mov    _0c24c0_data,%cx
		mov    _0c131a_data,%si
		add    %eax,%ecx
		mov    _0c1b52_data,%di
		mov    %cx,_0c24c0_data
		cmp    %di,%dx
		jle    _04290c_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _042921_jump

	_04290c_jump:
		cmp    _0c1b52_data,%bx
		jge    _04292e_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04292e_jump

	_042921_jump:
		mov    _0c1b5c_data,%ax
		add    %ax,_0c24c0_data

	_04292e_jump:
		mov    %si,_0c131a_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04293c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cdf7c_data,%edi
		mov    _0cdf80_data,%esi
		xor    %ecx,%ecx
		xor    %eax,%eax
		add    $0x000002,%esi
		add    $0x000002,%edi
		mov    %esi,%edx
		mov    %edi,%ebx
		call   _016349_func
		push   %esi
		xor    %eax,%eax
		push   %edi
		mov    _0cdf0c_data,%ax
		push   %eax
		mov    _0cdf80_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0c247c_data,%ebx
		sar    $0x000010,%ebx
		sub    %eax,%ebx
		mov    _0cdf7c_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0c247a_data,%esi
		xor    %ecx,%ecx
		sar    $0x000010,%esi
		mov    _0cdf00_data,%edi
		sub    %eax,%esi
		xor    %edx,%edx
		mov    %esi,%eax
		mov    _0c94c0_data,%esi
		call   _014eff_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0429bc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0cdf78_data,%esi
		mov    %eax,%edi
		mov    %dx,(%esp)
		mov    _0c25ec_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0c25eb_data,%bl
		mov    _094a1e_data(,%eax,4),%ebp
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		mov    _094a1e_data(,%eax,4),%eax
		sar    $0x000010,%ebp
		sar    $0x000010,%eax
		sub    %eax,%ebp
		mov    %ebp,%eax
		test   %eax,%eax
		jge    _042a11_jump
		neg    %eax

	_042a11_jump:
		mov    _0c25ec_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0c25eb_data,%bl
		mov    _094a20_data(,%eax,4),%ebp
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		mov    _094a20_data(,%eax,4),%eax
		sar    $0x000010,%ebp
		sar    $0x000010,%eax
		sub    %eax,%ebp
		mov    %ebp,%eax
		test   %eax,%eax
		jge    _042a52_jump
		neg    %eax

	_042a52_jump:
		mov    $0x000001,%ah
		mov    %ah,0x000004(%esp)
		mov    %ah,0x000008(%esp)
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cdf6c_data,%al
		xor    %ecx,%ecx
		cmp    $0x000004,%eax
		je     _042c83_jump
		cmpw   $0x000000,_0c1b5c_data
		jne    _042ab3_jump
		cmpw   $0x000000,_0c1b5e_data
		jne    _042ab3_jump
		mov    $0x0000a0,%edx
	_042a8c_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    _0cdf84_data,%ecx
		mov    %edx,_0d8170_data
		sub    %ecx,%edx
		.byte 0x0000bb

	_042a98_jump:
		fs

	_042a9c_jump:
		shl    $0x000004,%edx
		mov    %ebx,_0d8174_data
		mov    %edx,%eax
		mov    %ebx,%ecx
		call   _041dac_func
		jmp    _042b88_jump

	_042ab3_jump:
		mov    _0c1b44_data,%edx
		xor    %eax,%eax
		mov    _0c2598_data,%ebx
		mov    _0c1b84_data,%al
		sar    $0x000010,%ebx
		add    %eax,%edx
		cmp    %ebx,%edx
		jle    _042b10_jump
		mov    _0c259a_data,%ebx
		sar    $0x000010,%ebx
		cmp    %ebx,%edx
		jge    _042b10_jump
		mov    _0c1b50_data,%edx
		sar    $0x000010,%edx
		lea    (%edx,%eax,1),%ebx
		mov    _0cdf7c_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ebx,%edx
		sub    %eax,%edx
		shl    $0x000004,%edx
		mov    %edx,%eax
		call   _041f4c_func
		test   %eax,%eax
		je     _042b25_jump
		xor    %bh,%bh
		mov    %bh,0x000004(%esp)
		jmp    _042b25_jump

	_042b10_jump:
		mov    $0x0000a0,%edx
		sub    _0cdf84_data,%edx
		shl    $0x000004,%edx
		mov    %edx,%eax
		call   _041dac_func

	_042b25_jump:
		mov    _0c1b48_data,%ebx
		xor    %eax,%eax
		mov    _0c259c_data,%ecx
		mov    _0c1b85_data,%al
		sar    $0x000010,%ecx
		add    %eax,%ebx
		cmp    %ecx,%ebx
		jle    _042b83_jump
		mov    _0c259e_data,%ecx
		sar    $0x000010,%ecx
		cmp    %ecx,%ebx
		jge    _042b83_jump
		mov    _0c1b52_data,%ecx
		sar    $0x000010,%ecx
		mov    _0cdf80_data,%ebx
		add    %eax,%ecx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		sar    $0x000002,%eax
		sub    %eax,%ecx
		shl    $0x000004,%ecx
		mov    %ecx,%eax
		call   _04209c_func
		test   %eax,%eax
		je     _042b98_jump
		xor    %al,%al
		mov    %al,0x000008(%esp)
		jmp    _042b98_jump

	_042b83_jump:
		mov    $0x000064,%ecx

	_042b88_jump:
		sub    _0cdf88_data,%ecx
		shl    $0x000004,%ecx
		mov    %ecx,%eax
		call   _041e7c_func

	_042b98_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _042bc1_jump
		mov    $0x000001,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jle    _042bad_jump
		mov    %ebx,%eax

	_042bad_jump:
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		cmp    %ebx,%eax
		jge    _042bba_jump
		mov    %ebx,%eax

	_042bba_jump:
		add    %ax,_0c247c_data

	_042bc1_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _042bee_jump
		mov    -0x000002(%esp),%ebx
		mov    $0x000001,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _042bda_jump
		mov    %ebx,%eax

	_042bda_jump:
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		cmp    %ebx,%eax
		jge    _042be7_jump
		mov    %ebx,%eax

	_042be7_jump:
		add    %ax,_0c247e_data

	_042bee_jump:
		mov    _0c247c_data,%ax
		mov    _0c259a_data,%bx
		mov    _0cdf78_data,%esi
		cmp    %bx,%ax
		jge    _042c1b_jump
		mov    %ebx,%eax
		mov    %bx,_0c247c_data
		xor    %ebx,%eax
		xor    %edi,%edi
		mov    %ax,_0c131a_data
		jmp    _042c37_jump

	_042c1b_jump:
		mov    _0c259c_data,%bx
		cmp    %bx,%ax
		jle    _042c37_jump
		xor    %edi,%edi
		mov    %bx,_0c247c_data
		mov    %di,_0c131a_data

	_042c37_jump:
		mov    _0c247e_data,%ax
		mov    _0c259e_data,%bx
		cmp    %bx,%ax
		jge    _042c5a_jump
		mov    %ebx,%eax
		mov    %bx,_0c247e_data
		mov    %esi,_0cdf78_data
		jmp    _042c75_jump

	_042c5a_jump:
		mov    _0c25a0_data,%bx
		mov    %esi,_0cdf78_data
		cmp    %bx,%ax
		jle    _042c83_jump
		mov    %ebx,%eax
		mov    %bx,_0c247e_data

	_042c75_jump:
		xor    %ebx,%eax
		xor    %ebx,%ebx
		mov    %ax,_0c131c_data
		mov    %bx,(%esp)

	_042c83_jump:
		mov    $_0c1b1c_data,%eax
		call   _0430ec_func
		cmpw   $0x000000,(%esp)
		jne    _042c9b_jump
		andb   $0x0000fe,_0cdf6c_data

	_042c9b_jump:
		mov    _0cdf78_data,%esi
		test   %di,%di
		jne    _042cad_jump
		andb   $0x0000fd,_0cdf6c_data

	_042cad_jump:
		test   %edx,%edx
		jne    _042dc3_jump
		test   %ecx,%ecx
		jne    _042dc3_jump
		cmpw   $0x000000,_0c1b5e_data
		jne    _042dc3_jump
		cmpw   $0x000000,_0c1b5c_data
		jne    _042dc3_jump
		testb  $0x0000fb,_0cdf6c_data
		jne    _042dc3_jump
		mov    %esi,_0cdf78_data
		cmp    $0x000040,%esi
		jge    _042d06_jump
		xor    %eax,%eax
		mov    _0cdf6d_data,%al
		test   %eax,%eax
		jne    _042d06_jump
		mov    $0x000001,%eax
		call   _041c7c_func

	_042d06_jump:
		mov    _0cdf78_data,%esi
		mov    %esi,%eax
		mov    _0cdf70_data,%ecx
		neg    %eax
		imul   %ecx,%eax
		mov    _0cdf74_data,%edi
		mov    _0cdf68_data,%ebp
		add    %edi,%eax
		cmp    %ebp,%eax
		jae    _042d3d_jump
		xor    %eax,%eax
		mov    _0cdf6d_data,%al
		test   %eax,%eax
		jne    _042d3d_jump
		mov    $0xfffffed4,%eax
		jmp    _042d72_jump

	_042d3d_jump:
		mov    _0cdf78_data,%esi
		mov    %esi,%eax
		mov    _0cdf70_data,%edx
		neg    %eax
		imul   %edx,%eax
		mov    _0cdf74_data,%ebx
		mov    _0cdf68_data,%ecx
		add    %ebx,%eax
		cmp    %ecx,%eax
		jbe    _042d77_jump
		xor    %eax,%eax
		mov    _0cdf6d_data,%al
		test   %eax,%eax
		jne    _042d77_jump
		mov    $0x00012c,%eax

	_042d72_jump:
		call   _0422ac_func

	_042d77_jump:
		mov    _0cdf78_data,%esi
		mov    %esi,%eax
		mov    _0cdf70_data,%edi
		neg    %eax
		imul   %edi,%eax
		mov    _0cdf74_data,%ebp
		mov    _0cdf68_data,%edx
		add    %ebp,%eax
		cmp    %edx,%eax
		jne    _042dde_jump
		cmp    $0x000040,%esi
		jne    _042dde_jump
		xor    %edx,%eax
		mov    _0cdf6c_data,%al
		test   %eax,%eax
		jne    _042dde_jump
		xor    %dl,%dl
		mov    %dl,_0cdf6d_data
		mov    $0x000004,%dh
		mov    %eax,_0d815c_data
		mov    %dh,_0cdf6c_data
		jmp    _042dde_jump

	_042dc3_jump:
		cmpw   $0x000000,_0c1b5c_data
		jne    _042dd7_jump
		cmpw   $0x000000,_0c1b5e_data
		je     _042dde_jump

	_042dd7_jump:
		andb   $0x0000fb,_0cdf6c_data

	_042dde_jump:
		xor    %eax,%eax
		mov    _0cdf6c_data,%al
		cmp    $0x000004,%eax
		jne    _0430da_jump
		mov    _0d815c_data,%ecx
		inc    %ecx
		mov    %ecx,_0d815c_data
		cmp    $0x000276,%ecx
		jne    _042e22_jump
		mov    _0cdf6d_data,%ah
		mov    $0x000019,%ebx
		or     $0x000004,%ah
		mov    %ebx,_0d8168_data
		mov    %ah,_0cdf6d_data
		jmp    _042f66_jump

	_042e22_jump:
		cmp    $0x000258,%ecx
		jne    _042e59_jump
		mov    _0cdf6d_data,%al
		mov    %esi,%edx
		or     $0x000002,%al
		neg    %edx
		mov    %al,_0cdf6d_data
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0d816c_data
		jmp    _042f66_jump

	_042e59_jump:
		mov    _0cdf6d_data,%bh
		test   %bh,%bh
		je     _042f66_jump
		test   $0x000001,%bh
		jne    _042f66_jump
		cmp    $0x000019,%esi
		jne    _042f66_jump
		mov    %esi,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		mov    _0cdf68_data,%edx
		add    $0x007d96,%eax
		cmp    %edx,%eax
		jne    _042f66_jump
		mov    %bh,%ch
		mov    %esi,%eax
		mov    %esi,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esi,_0cdf78_data
		lea    0x000140(%eax),%edx
		or     $0x000001,%ch
		sub    %eax,%edx
		mov    %ch,_0cdf6d_data
		movswl %dx,%eax
		mov    $0x000003,%ecx
		call   _064360_func
		mov    _0cdf78_data,%esi
		movswl %ax,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		lea    (%eax,%ebx,1),%edx
		mov    %edx,_0d8160_data
		lea    0x0000c8(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _064360_func
		mov    _0cdf78_data,%esi
		movswl %ax,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		mov    %eax,_0d8164_data
		mov    _0d8160_data,%eax
		mov    %eax,_0d8170_data
		mov    _0d8164_data,%eax
		mov    %eax,_0d8174_data
		mov    _0c247a_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %eax,_0d8188_data
		mov    _0c247c_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %eax,_0d818c_data
		mov    _0cdf84_data,%eax
		shl    $0x000004,%eax
		mov    %eax,_0d8180_data
		mov    _0cdf88_data,%eax
		shl    $0x000004,%eax
		mov    %eax,_0d8184_data

	_042f66_jump:
		mov    _0cdf6d_data,%dl
		mov    %esi,_0cdf78_data
		test   $0x000001,%dl
		je     _04302e_jump
		call   _041ccc_func
		mov    _0d8178_data,%eax
		call   _041dac_func
		mov    _0d817c_data,%eax
		call   _041e7c_func
		mov    _0cdf84_data,%eax
		cmp    _0d8160_data,%eax
		jne    _04302e_jump
		mov    _0cdf88_data,%eax
		cmp    _0d8164_data,%eax
		jne    _04302e_jump
		mov    _0cdf78_data,%esi
		mov    $0x000003,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    0x000140(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _064360_func
		mov    _0cdf78_data,%esi
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    (%eax,%ecx,1),%edx
		mov    %edx,_0d8160_data
		lea    0x0000c8(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _064360_func
		mov    _0cdf78_data,%esi
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    %ecx,%eax
		mov    %eax,_0d8164_data
		mov    _0d8160_data,%eax
		mov    %eax,_0d8170_data
		mov    _0d8164_data,%eax
		mov    %eax,_0d8174_data

	_04302e_jump:
		testb  $0x000002,_0cdf6d_data
		je     _043088_jump
		mov    _0cdf68_data,%eax
		mov    _0d816c_data,%ebp
		cmp    %ebp,%eax
		jae    _043067_jump
		mov    $0x00012c,%eax
		call   _0422ac_func
		mov    _0cdf68_data,%eax
		mov    _0d816c_data,%ecx
		cmp    %ecx,%eax
		jbe    _043088_jump
		mov    %ecx,_0cdf68_data
		jmp    _043088_jump

	_043067_jump:
		jbe    _043088_jump
		mov    $0xfffffed4,%eax
		call   _0422ac_func
		mov    _0cdf68_data,%eax
		mov    _0d816c_data,%ebx
		cmp    %ebx,%eax
		jae    _043088_jump
		mov    %ebx,_0cdf68_data

	_043088_jump:
		mov    _0cdf6d_data,%bl
		mov    _0cdf78_data,%esi
		test   $0x000004,%bl
		je     _0430da_jump
		mov    _0d8168_data,%edi
		cmp    %edi,%esi
		jae    _0430aa_jump
		mov    $0x000001,%eax
		jmp    _0430b1_jump

	_0430aa_jump:
		jbe    _0430da_jump
		mov    $0xffffffff,%eax

	_0430b1_jump:
		call   _041c7c_func
		mov    _0cdf78_data,%esi
		mov    %esi,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0d816c_data

	_0430da_jump:
		mov    %esi,_0cdf78_data
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0430ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c247c_data,%bx
		mov    0x000028(%eax),%dx
		sub    %ebx,%edx
		mov    _0cdf84_data,%bx
		add    $0x000008,%edx
		add    %edx,%ebx
		mov    _0cdf8c_data,%dx
		mov    _0c247e_data,%cx
		sub    %edx,%ebx
		mov    0x00002c(%eax),%dx
		mov    %bx,0x000036(%eax)
		mov    _0cdf88_data,%bx
		sub    %ecx,%edx
		add    %edx,%ebx
		mov    _0cdf90_data,%dx
		sub    %edx,%ebx
		mov    %bx,0x000038(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04313c_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0c1b5a_data,%eax
		mov    %dx,_0c24c0_data
		mov    %dx,_0c24c2_data
		sar    $0x000010,%eax
		mov    _0c1b44_data,%edx
		add    %eax,%edx
		mov    _0c1b5c_data,%ax
		mov    %ax,_0c2584_data
		mov    _0c1b5c_data,%eax
		mov    _0c1b48_data,%ebx
		sar    $0x000010,%eax
		add    %eax,%ebx
		mov    %edx,_0c1b44_data
		mov    %ebx,_0c1b48_data
		pop    %edx
		pop    %ebx
		ret    

_043190_switch:
		.long   _04324f_case
		.long   _04324f_case
		.long   _043257_case
		.long   _04324f_case
		.long   _04324f_case
		.long   _04324f_case
		.long   _043257_case
		.long   _04324f_case
		.long   _04325f_case
		.long   _04324f_case
		.long   _043257_case




_0431bc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    _0d8190_data,%ecx
		movswl %dx,%ebx
		mov    0x00000c(%ecx),%esi
		movw   $0x000000,0x000002(%ecx)
		test   %ebx,%ebx
		jl     _0431e9_jump
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _0431e7_jump
		mov    %ebx,%eax

	_0431e7_jump:
		jmp    _0431f8_jump

	_0431e9_jump:
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _0431f6_jump
		mov    %ebx,%eax

	_0431f6_jump:
		neg    %eax

	_0431f8_jump:
		xor    %ebx,%ebx
		mov    %ax,0x000006(%ecx)
		mov    (%esp),%bl
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _04320c_jump
		mov    %ebx,%eax

	_04320c_jump:
		mov    $0x00000b,%ebx
		cmp    %ebx,%eax
		jle    _043217_jump
		mov    %ebx,%eax

	_043217_jump:
		mov    %al,0x000008(%ecx)
		mov    (%ecx),%ah
		xor    %dl,%dl
		test   %ah,%ah
		jbe    _043267_jump
		xor    %edi,%edi

	_043224_jump:
		xor    %eax,%eax
		mov    %dl,%al
		imul   $0x00000a,%eax,%eax
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %di,0x000004(%esi,%eax,1)
		mov    %bx,0x000006(%esi,%eax,1)
		mov    %di,(%esi,%eax,1)
		mov    %di,0x000002(%esi,%eax,1)
		inc    %dl
		mov    %di,0x000008(%esi,%eax,1)
		cmp    (%ecx),%dl
		jae    _043267_jump
		jmp    _043224_jump

	_04324f_case:
		movw   $0x0000c8,0x000004(%ecx)
		jmp    _04327d_jump

	_043257_case:
		movw   $0x000140,0x000004(%ecx)
		jmp    _04327d_jump

	_04325f_case:
		movw   $0x000064,0x000004(%ecx)
		jmp    _04327d_jump

	_043267_jump:
		mov    0x000008(%ecx),%al
		dec    %al
		cmp    $0x00000a,%al
		ja     _04324f_case
		and    $0x0000ff,%eax
		jmp    *%cs:_043190_switch(,%eax,4)

	_04327d_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx

	_043284_jump:
		ret    

	_043288_case:
		mov    _0d8190_data,%eax
		test   %eax,%eax
		je     _043284_jump
		cmpl   $0x000000,0x00000c(%eax)
		je     _04329f_jump
		add    $0x00000c,%eax
		call   _077858_func

	_04329f_jump:
		cmpl   $0x000000,_0d8190_data
		je     _043284_jump
		mov    $_0d8190_data,%eax
		jmp    _077858_func



_0432b4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %ebx,%esi
		mov    %ecx,%ebp
		xor    %bl,%bl
		test   %esi,%esi
		je     _04332b_jump
		test   %ecx,%ecx
		je     _04332b_jump
		mov    $0x000018,%eax
		call   _077840_func
		mov    %eax,%edx
		mov    %eax,_0d8190_data
		test   %eax,%eax
		je     _04332b_jump
		mov    $0x00fa00,%ecx
		mov    _0cdf00_data,%edi
		movb   $0x0000c8,(%eax)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0432fd_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0432fd_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0cdf00_data,%eax
		movzbl (%edx),%esi
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%esi,4),%eax
		add    %esi,%eax
		add    %eax,%eax
		mov    %ebp,0x000014(%edx)
		call   _077840_func
		mov    %eax,0x00000c(%edx)
		test   %eax,%eax
		je     _04332b_jump
		mov    $0x000001,%bl

	_04332b_jump:
		test   %bl,%bl
		je     _043343_jump
		xor    %eax,%eax
		mov    -0x000002(%esp),%edx
		mov    0x000004(%esp),%al
		sar    $0x000010,%edx
		call   _0431bc_func
		jmp    _043348_jump

	_043343_jump:
		call   _043288_case

	_043348_jump:
		mov    %bl,%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_043354_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0d8190_data,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000008(%esp)
		mov    %ebx,0x000004(%esp)
		mov    0x00000c(%eax),%edx
		jmp    _04337d_jump

	_043371_jump:
		mov    0x000004(%esp),%eax
		inc    %eax
		add    $0x00000a,%edx
		mov    %eax,0x000004(%esp)

	_04337d_jump:
		mov    0x000008(%esp),%ebx
		xor    %eax,%eax
		mov    0x000004(%esp),%ecx
		mov    (%ebx),%al
		cmp    %ecx,%eax
		jle    _043443_jump
		mov    0x000006(%edx),%ecx
		mov    0x000004(%edx),%edi
		mov    (%edx),%esi
		sar    $0x000010,%ecx
		sar    $0x000010,%edi
		sar    $0x000010,%esi
		test   %ecx,%ecx
		jle    _043371_jump
		test   %esi,%esi
		jl     _043371_jump
		cmp    $0x0000c8,%esi
		jge    _043371_jump
		test   %edi,%edi
		jl     _043371_jump
		cmp    $0x0000c8,%edi
		jge    _043371_jump
		movswl (%edx),%eax
		test   %eax,%eax
		jge    _0433c9_jump
		add    %eax,%ecx
		xor    %eax,%eax

	_0433c9_jump:
		lea    (%eax,%ecx,1),%ebx
		cmp    $0x000140,%ebx
		jle    _0433db_jump
		mov    $0x000140,%ecx
		sub    %eax,%ecx

	_0433db_jump:
		test   %ecx,%ecx
		jle    _043371_jump
		mov    0x000002(%edx),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jge    _0433ed_jump
		add    %ebx,%ecx
		xor    %ebx,%ebx

	_0433ed_jump:
		lea    (%ebx,%ecx,1),%ebp
		cmp    $0x000140,%ebp
		jle    _0433ff_jump
		mov    $0x000140,%ecx
		sub    %ebx,%ecx

	_0433ff_jump:
		test   %ecx,%ecx
		jle    _043371_jump
		imul   $0x000140,%edi,%edi
		imul   $0x000140,%esi,%esi
		mov    %edi,(%esp)
		mov    0x000008(%esp),%edi
		mov    (%esp),%ebp
		mov    0x000014(%edi),%edi
		add    %ebp,%edi
		add    %ebx,%edi
		mov    0x000008(%esp),%ebx
		add    0x000010(%ebx),%esi
		add    %eax,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _043437_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_043437_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		jmp    _043371_jump

	_043443_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_043450_switch:
		.long   _0434c3_case
		.long   _0434c3_case
		.long   _0434c3_case
		.long   _0434c3_case
		.long   _0434c3_case
		.long   _0434c3_case
		.long   _0434c3_case
		.long   _0434c3_case
		.long   _0436a8_case
		.long   _043597_case
		.long   _043631_case




_04347c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    _0d8190_data,%ebp
		mov    0x000004(%ebp),%eax
		sar    $0x000010,%eax
		mov    0x00000c(%ebp),%edx
		test   %eax,%eax
		jl     _0434a5_jump
		mov    0x000004(%ebp),%bx
		sub    0x000002(%ebp),%bx
		jmp    _0434a9_jump

	_0434a5_jump:
		mov    0x000002(%ebp),%bx

	_0434a9_jump:
		mov    0x000008(%ebp),%al
		dec    %al
		cmp    $0x00000a,%al
		ja     _043878_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_043450_switch(,%eax,4)

	_0434c3_case:
		xor    %eax,%eax
		mov    0x000008(%ebp),%al
		cmp    $0x000001,%eax
		je     _0434d7_jump
		cmp    $0x000002,%eax
		je     _0434d7_jump
		cmp    $0x000008,%eax
		jne    _0434db_jump

	_0434d7_jump:
		mov    %ebx,%ecx
		jmp    _0434dd_jump

	_0434db_jump:
		xor    %ecx,%ecx

	_0434dd_jump:
		xor    %eax,%eax
		mov    0x000008(%ebp),%al
		cmp    $0x000005,%eax
		je     _0434f1_jump
		cmp    $0x000004,%eax
		je     _0434f1_jump
		cmp    $0x000006,%eax
		jne    _0434f7_jump

	_0434f1_jump:
		mov    %ebx,%eax
		neg    %eax
		jmp    _0434f9_jump

	_0434f7_jump:
		mov    %ecx,%eax

	_0434f9_jump:
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000008(%ebp),%al
		cmp    $0x000003,%eax
		je     _04350f_jump
		cmp    $0x000002,%eax
		je     _04350f_jump
		cmp    $0x000004,%eax
		jne    _043513_jump

	_04350f_jump:
		mov    %ebx,%eax
		jmp    _043515_jump

	_043513_jump:
		xor    %eax,%eax

	_043515_jump:
		mov    %eax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x000008(%ebp),%al
		cmp    $0x000007,%eax
		je     _04352d_jump
		cmp    $0x000008,%eax
		je     _04352d_jump
		cmp    $0x000006,%eax
		jne    _043531_jump

	_04352d_jump:
		mov    %ebx,%eax
		jmp    _043533_jump

	_043531_jump:
		xor    %eax,%eax

	_043533_jump:
		mov    %eax,0x000008(%esp)
		xor    %eax,%eax
		mov    0x000008(%ebp),%al
		cmp    $0x000001,%eax
		je     _043546_jump
		cmp    $0x000005,%eax
		jne    _04354a_jump

	_043546_jump:
		xor    %ebx,%ebx
		jmp    _04354c_jump

	_04354a_jump:
		neg    %ebx

	_04354c_jump:
		add    $0x000140,%ebx
		xor    %esi,%esi
		movswl %si,%eax
		cmp    $0x0000c8,%eax
		jl     _043563_jump
		jmp    _0438a8_jump

	_043563_jump:
		imul   $0x00000a,%eax,%eax
		mov    0x00000c(%esp),%edi
		mov    %di,0x000004(%edx,%eax,1)
		mov    %si,0x000006(%edx,%eax,1)
		mov    %cx,0x000002(%edx,%eax,1)
		mov    %bx,0x000008(%edx,%eax,1)
		mov    0x000008(%esp),%edi
		inc    %ecx
		inc    %esi
		mov    %di,(%edx,%eax,1)
		movswl %si,%eax
		cmp    $0x0000c8,%eax
		jl     _043563_jump
		jmp    _0438a8_jump

	_043597_case:
		xor    %esi,%esi
		mov    %ebx,%eax
		mov    %si,0x000028(%esp)
		neg    %eax
		mov    $0x000001,%esi
		mov    %eax,0x000018(%esp)
		jmp    _04361d_jump

	_0435ad_jump:
		movswl %si,%eax
		imul   $0x00000a,%eax,%eax
		imul   $0x00000a,%ecx,%ecx
		movw   $0x000000,0x000004(%edx,%eax,1)
		mov    0x000004(%edx,%eax,1),%di
		mov    %di,0x000004(%ecx,%edx,1)
		mov    0x000028(%esp),%edi
		mov    %di,0x000006(%ecx,%edx,1)
		movw   $0x000000,(%edx,%eax,1)
		mov    %si,0x000006(%edx,%eax,1)
		mov    (%edx,%eax,1),%di
		mov    %di,(%ecx,%edx,1)
		mov    %bx,0x000002(%ecx,%edx,1)
		mov    0x000018(%esp),%edi
		movw   $0x000140,0x000008(%edx,%eax,1)
		mov    %di,0x000002(%edx,%eax,1)
		add    $0x000002,%esi
		mov    0x000008(%edx,%eax,1),%ax
		add    $0x000002,%ebx
		mov    %ax,0x000008(%ecx,%edx,1)
		mov    0x000028(%esp),%eax
		add    $0x000002,%edi
		add    $0x000002,%eax
		mov    %edi,0x000018(%esp)
		mov    %ax,0x000028(%esp)

	_04361d_jump:
		mov    0x000026(%esp),%ecx
		sar    $0x000010,%ecx
		cmp    $0x0000c8,%ecx
		jl     _0435ad_jump
		jmp    _0438a8_jump

	_043631_case:
		mov    $0x000140,%eax
		sub    %ebx,%eax
		mov    $0x000001,%ecx
		mov    %eax,0x000010(%esp)
		xor    %esi,%esi
		mov    0x000010(%esp),%edi
		movswl %si,%eax
		cmp    $0x0000c8,%eax
		jl     _043656_jump
		jmp    _0438a8_jump

	_043656_jump:
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,0x000004(%edx,%eax,1)
		mov    %si,0x000006(%edx,%eax,1)
		mov    %bx,(%edx,%eax,1)
		mov    %si,0x000002(%edx,%eax,1)
		mov    %di,0x000008(%edx,%eax,1)
		movswl %cx,%eax
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,(%edx,%eax,1)
		mov    %bx,0x000004(%edx,%eax,1)
		mov    %cx,0x000006(%edx,%eax,1)
		mov    %cx,0x000002(%edx,%eax,1)
		add    $0x000002,%esi
		mov    %di,0x000008(%edx,%eax,1)
		add    $0x000002,%ecx
		movswl %si,%eax
		cmp    $0x0000c8,%eax
		jl     _043656_jump
		jmp    _0438a8_jump

	_0436a8_case:
		xor    %esi,%esi
		jmp    _0436b7_jump

	_0436ac_jump:
		imul   $0x00000a,%eax,%eax
		inc    %esi
		movw   $0x000000,0x000008(%edx,%eax,1)

	_0436b7_jump:
		movswl %si,%eax
		cmp    $0x0000c8,%eax
		jl     _0436ac_jump
		mov    %ebx,%eax
		neg    %eax
		add    $0x0000c7,%eax
		mov    %eax,(%esp)
		mov    %ebx,%eax
		add    %ebx,%eax
		mov    $0x0000c7,%ecx
		neg    %eax
		xor    %esi,%esi
		add    $0x000140,%eax
		mov    %cx,0x00001c(%esp)
		mov    %eax,0x000030(%esp)
		jmp    _043755_jump

	_0436ea_jump:
		imul   $0x00000a,%eax,%eax
		mov    %esi,%ecx
		add    %ebx,%ecx
		mov    %cx,0x000004(%edx,%eax,1)
		mov    %si,0x000006(%edx,%eax,1)
		mov    %cx,(%edx,%eax,1)
		mov    0x000030(%esp),%edi
		mov    %cx,0x000002(%edx,%eax,1)
		mov    %di,0x000008(%edx,%eax,1)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		mov    0x00001c(%esp),%edi
		mov    %cx,0x000004(%edx,%eax,1)
		mov    %di,0x000006(%edx,%eax,1)
		inc    %esi
		mov    %cx,(%edx,%eax,1)
		mov    (%esp),%edi
		mov    (%esp),%ecx
		dec    %edi
		mov    %cx,0x000002(%edx,%eax,1)
		mov    0x000030(%esp),%ecx
		mov    %edi,(%esp)
		mov    %cx,0x000008(%edx,%eax,1)
		mov    %ecx,%eax
		mov    0x00001c(%esp),%ecx
		sub    $0x000002,%eax
		dec    %ecx
		mov    %eax,0x000030(%esp)
		mov    %cx,0x00001c(%esp)

	_043755_jump:
		mov    $0x000064,%ecx
		movswl %bx,%eax
		sub    %eax,%ecx
		movswl %si,%eax
		cmp    %ecx,%eax
		jl     _0436ea_jump
		xor    %esi,%esi
		call   _043354_func
		mov    %si,0x00002c(%esp)
		mov    %ebx,%esi
		mov    $0x0000c7,%ecx
		neg    %esi
		jmp    _0437c3_jump

	_04377d_jump:
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,0x000004(%edx,%eax,1)
		mov    0x00002c(%esp),%edi
		mov    %bx,(%edx,%eax,1)
		mov    %di,0x000002(%edx,%eax,1)
		mov    %si,0x000008(%edx,%eax,1)
		movswl %cx,%eax
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,0x000004(%edx,%eax,1)
		mov    %cx,0x000006(%edx,%eax,1)
		mov    %bx,(%edx,%eax,1)
		mov    %cx,0x000002(%edx,%eax,1)
		mov    %si,0x000008(%edx,%eax,1)
		mov    %edi,%eax
		dec    %ecx
		inc    %eax
		inc    %esi
		mov    %ax,0x00002c(%esp)

	_0437c3_jump:
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000064,%eax
		jl     _04377d_jump
		call   _043354_func
		mov    $0x0000c8,%esi
		mov    $0x0000c7,%edi
		mov    %ebx,%ecx
		mov    %esi,0x000014(%esp)
		mov    $0x000140,%esi
		xor    %eax,%eax
		add    %esi,%ecx
		jmp    _043861_jump

	_0437ef_jump:
		imul   $0x00000a,%ecx,%ecx
		mov    %eax,%edi
		sub    %ebx,%edi
		mov    %edi,0x000004(%esp)
		mov    0x000024(%esp),%edi
		mov    %di,0x000004(%ecx,%edx,1)
		mov    %ax,0x000006(%ecx,%edx,1)
		mov    %si,(%ecx,%edx,1)
		mov    %ax,0x000002(%ecx,%edx,1)
		mov    0x000004(%esp),%edi
		mov    %di,0x000008(%ecx,%edx,1)
		mov    0x00001e(%esp),%ecx
		sar    $0x000010,%ecx
		imul   $0x00000a,%ecx,%ecx
		mov    0x000024(%esp),%edi
		mov    %di,0x000004(%ecx,%edx,1)
		mov    %si,(%ecx,%edx,1)
		mov    0x000020(%esp),%edi
		mov    %di,0x000006(%ecx,%edx,1)
		mov    0x000014(%esp),%edi
		mov    %di,0x000002(%ecx,%edx,1)
		mov    0x000004(%esp),%edi
		inc    %eax
		mov    %di,0x000008(%ecx,%edx,1)
		mov    0x000014(%esp),%ecx
		dec    %esi
		dec    %ecx
		mov    0x000020(%esp),%edi
		mov    %ecx,0x000014(%esp)
		mov    0x000024(%esp),%ecx
		dec    %edi
		dec    %ecx

	_043861_jump:
		mov    %di,0x000020(%esp)
		mov    %ecx,0x000024(%esp)
		movswl %ax,%ecx
		cmp    $0x000064,%ecx
		jl     _0437ef_jump
		jmp    _0438a8_jump

	_043878_jump:
		xor    %ecx,%ecx
		xor    %esi,%esi
		jmp    _04389c_jump

	_04387e_jump:
		imul   $0x00000a,%eax,%eax
		movw   $0x000140,0x000008(%edx,%eax,1)
		mov    %si,0x000004(%edx,%eax,1)
		mov    %cx,0x000006(%edx,%eax,1)
		mov    %si,(%edx,%eax,1)
		mov    %cx,0x000002(%edx,%eax,1)
		inc    %ecx

	_04389c_jump:
		xor    %ebx,%ebx
		movswl %cx,%eax
		mov    0x000000(%ebp),%bl
		cmp    %ebx,%eax
		jl     _04387e_jump

	_0438a8_jump:
		mov    0x000004(%ebp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0438b4_jump
		neg    %eax

	_0438b4_jump:
		mov    0x000002(%ebp),%si
		add    %eax,%esi
		mov    0x000004(%ebp),%di
		mov    %si,0x000002(%ebp)
		cmp    %di,%si
		jbe    _0438cd_jump
		movw   $0x000000,0x000002(%ebp)

	_0438cd_jump:
		mov    0x000002(%ebp),%ax
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0438e0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00005c,%esp
		mov    %eax,0x00002c(%esp)
		mov    %edx,(%esp)
		mov    $0x000064,%eax
		call   _07755c_func
		mov    %eax,0x000018(%esp)
		call   _01cd14_func
		xor    %eax,%eax
		mov    _095b0d_data,%al
		cmp    $0x000001,%eax
		jne    _043922_jump
		mov    $0x011800,%edx
		mov    0x00002c(%esp),%eax
		call   _077220_func
		mov    %eax,_0c6b64_data
		jmp    _04392a_jump

	_043922_jump:
		xor    %edx,%edx
		mov    %edx,_0c6b64_data

	_04392a_jump:
		mov    $0x0000ff,%dl
		xor    %eax,%eax

	_04392e_jump:
		inc    %eax
		mov    %dl,_0c6b57_data(%eax)
		cmp    $0x00000a,%eax
		jl     _04392e_jump
		cmpw   $0x000000,_0c1182_data
		je     _043969_jump
		mov    $_0c02b0_data,%esi
		mov    0x000018(%esp),%edi
		push   %edi

	_04394e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _043966_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04394e_jump

	_043966_jump:
		pop    %edi
		jmp    _043970_jump

	_043969_jump:
		mov    0x000018(%esp),%eax
		movb   $0x000000,(%eax)

	_043970_jump:
		mov    $_0c02b4_data,%esi
		mov    0x000018(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_043982_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04399a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _043982_jump

	_04399a_jump:
		pop    %edi
		mov    $_0c02ba_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0439a9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0439c1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0439a9_jump

	_0439c1_jump:
		pop    %edi
		mov    %ebx,%esi
		mov    $_0c02bc_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0439d2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0439ea_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0439d2_jump

	_0439ea_jump:
		pop    %edi
		mov    %edi,%eax
		call   _079ee3_func
		mov    %eax,%edi
		mov    %eax,%esi
		test   %eax,%eax
		jne    _043a2c_jump
		mov    $0x0000c8,%eax
		mov    0x000018(%esp),%ebx
		call   _07755c_func
		push   %ebx
		push   $_0c02bf_data
		push   %eax
		mov    %eax,%edx
		call   _0787fb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f628_func
		mov    %edx,%eax
		call   _077708_func
		jmp    _0440a1_jump

	_043a2c_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %eax,%ecx
		lea    0x00003c(%esp),%eax
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000040(%esp),%eax
		mov    %edi,%ecx
		call   _078dde_func
		xor    %eax,%eax
		mov    _095b0d_data,%al
		test   %eax,%eax
		jne    _043a79_jump
		mov    0x00003c(%esp),%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		add    %eax,%eax
		mov    0x000040(%esp),%bx
		mov    %ax,%dx
		mov    0x00002c(%esp),%eax
		jmp    _043a94_jump

	_043a79_jump:
		cmpb   $0x000000,_0ce843_data
		je     _043a9e_jump
		mov    0x00002c(%esp),%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000040(%esp),%bx
		mov    0x00003c(%esp),%dx

	_043a94_jump:
		call   _045e68_func
		mov    %eax,_0c94a8_data

	_043a9e_jump:
		mov    $0x000001,%ebx
		lea    0x000048(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $_0ce5dc_data,%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $_0ce5dd_data,%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		xor    %edi,%edi
		call   _078dde_func
		mov    $0x000001,%ebp
		jmp    _043b00_jump

	_043adf_jump:
		lea    0x000044(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%ebx
		mov    %ebp,%edx
		call   _078dde_func
		mov    0x000044(%esp),%bl
		xor    $0x000015,%bl
		inc    %edi
		mov    %bl,0x000044(%esp)
		mov    %bl,_0c6b57_data(%edi)

	_043b00_jump:
		xor    %eax,%eax
		mov    0x000048(%esp),%al
		cmp    %eax,%edi
		jl     _043adf_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0c1316_data,%eax
		mov    %esi,%ecx
		call   _078dde_func
		mov    _0c1316_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esp)
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		lea    0x000028(%edx),%eax
		add    $_0d8194_data,%eax
		mov    %eax,0x000008(%esp)
		lea    0x000080(%edx),%eax
		add    $_0d8194_data,%eax
		mov    %eax,0x000010(%esp)
		lea    0x000044(%edx),%eax
		add    $_0d8194_data,%eax
		mov    %eax,0x00000c(%esp)
		jmp    _043cb9_jump

	_043b62_jump:
		mov    0x00001c(%esp),%eax
		inc    %eax
		add    $0x00000c,%edi
		mov    %eax,0x00001c(%esp)

	_043b6e_jump:
		xor    %eax,%eax
		mov    0x00001c(%esp),%ebx
		mov    _0d8214_data(%ebp),%al
		cmp    %ebx,%eax
		jle    _043c86_jump
		mov    $0x000001,%ebx
		mov    _0d8198_data(%ebp),%eax
		mov    $0x000002,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000008,%eax
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    _0d8198_data(%ebp),%eax
		mov    $0x000002,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x00000a,%eax
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    _0d8198_data(%ebp),%eax
		mov    $0x000004,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000004,%eax
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000030(%esp),%eax
		mov    %esi,%ecx
		call   _078dde_func
		xor    %edx,%edx
		mov    0x00002c(%esp),%eax
		mov    0x000030(%esp),%dx
		call   _077220_func
		mov    _0d8198_data(%ebp),%edx
		mov    %esi,%ecx
		mov    %eax,(%edx,%edi,1)
		xor    %ebx,%ebx
		mov    _0d8198_data(%ebp),%eax
		mov    0x000030(%esp),%bx
		mov    $0x000001,%edx
		mov    (%edi,%eax,1),%eax
		call   _078dde_func
		mov    _0d8198_data(%ebp),%eax
		add    %edi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _043b62_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    0x00002c(%esp),%eax
		shl    $0x000002,%edx
		call   _077220_func
		mov    _0d8198_data(%ebp),%edx
		mov    %eax,0x000004(%edx,%edi,1)
		mov    %esi,%ecx
		mov    _0d8198_data(%ebp),%eax
		xor    %ebx,%ebx
		mov    $0x000004,%edx
		mov    0x00000a(%edi,%eax,1),%bx
		mov    0x000004(%edi,%eax,1),%eax
		call   _078dde_func
		jmp    _043b62_jump

	_043c70_jump:
		mov    _0d8198_data,%eax
		mov    %eax,_0d8198_data(%ebp)
		mov    _0d8214_data,%al
		mov    %al,_0d8214_data(%ebp)

	_043c86_jump:
		mov    0x000008(%esp),%edx
		mov    0x000010(%esp),%ebx
		mov    0x00000c(%esp),%ecx
		mov    0x000028(%esp),%edi
		add    $0x000084,%edx
		add    $0x000084,%ebx
		add    $0x000084,%ecx
		inc    %edi
		mov    %edx,0x000008(%esp)
		mov    %ebx,0x000010(%esp)
		mov    %ecx,0x00000c(%esp)
		mov    %edi,0x000028(%esp)

	_043cb9_jump:
		mov    _0c1314_data,%edx
		mov    _0c1316_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x000028(%esp),%ecx
		add    %edx,%eax
		cmp    %ecx,%eax
		jle    _043f74_jump
		imul   $0x000084,0x000028(%esp),%ebp
		mov    $0x000001,%ebx
		lea    0x000050(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    0x000008(%esp),%eax
		mov    %esi,%ecx
		call   _078dde_func
		mov    $_0d8194_data,%edi
		mov    0x000050(%esp),%bh
		add    %ebp,%edi
		test   %bh,%bh
		jne    _043d23_jump
		cmpb   $0x000000,_0ce840_data
		je     _043e4f_jump

	_043d23_jump:
		imul   $0x000084,0x000028(%esp),%edi
		mov    (%esp),%eax
		mov    _0d81bc_data(%edi),%edx
		call   _077220_func
		mov    %esi,%ecx
		mov    $0x000001,%edx
		mov    _0d81bc_data(%edi),%ebx
		mov    %eax,_0d819c_data(%edi)
		call   _078dde_func
		mov    $0x000001,%ebx
		lea    0x00004c(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		mov    %edi,%ebx
		mov    _0d81bc_data(%edi),%ebp
		xor    %edx,%edx
		test   %ebp,%ebp
		jle    _043d8b_jump

	_043d71_jump:
		mov    _0d819c_data(%ebx),%edi
		mov    (%edx,%edi,1),%al
		sub    %al,0x00004c(%esp)
		xorb   $0x00008f,(%edx,%edi,1)
		inc    %edx
		cmp    _0d81bc_data(%ebx),%edx
		jl     _043d71_jump

	_043d8b_jump:
		cmpb   $0x000000,0x00004c(%esp)
		je     _043dbf_jump
		mov    $0x0000c8,%eax
		mov    0x000018(%esp),%edi
		call   _07755c_func
		push   %edi
		push   $_0c02e3_data
		push   %eax
		mov    %eax,%edx
		call   _0787fb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f628_func
		mov    %edx,%eax
		call   _077708_func

	_043dbf_jump:
		imul   $0x000084,0x000028(%esp),%ebp
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%ecx
		mov    0x00000c(%esp),%eax
		call   _078dde_func
		xor    %edx,%edx
		mov    _0d81d8_data(%ebp),%dx
		imul   $0x00000c,%edx,%edx
		mov    0x00002c(%esp),%eax
		mov    %esi,%ecx
		xor    %ebx,%ebx
		call   _077220_func
		mov    $0x00000c,%edx
		mov    _0d81d8_data(%ebp),%bx
		mov    %eax,_0d8194_data(%ebp)
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    0x000010(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		mov    _0d8214_data(%ebp),%al
		test   %al,%al
		je     _043c70_jump
		xor    %edx,%edx
		mov    %al,%dl
		imul   $0x00000c,%edx,%edx
		mov    0x00002c(%esp),%eax
		xor    %edi,%edi
		call   _077220_func
		xor    %edx,%edx
		mov    %eax,_0d8198_data(%ebp)
		mov    %edx,0x00001c(%esp)
		jmp    _043b6e_jump

	_043e4f_jump:
		mov    $0x000001,%ebx
		xor    %eax,%eax
		mov    _0d81bc_data(%ebp),%edx
		mov    %eax,_0d819c_data(%ebp)
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _078fea_func
		mov    $0x000001,%ebx
		lea    0x00004c(%esp),%eax
		mov    %ebx,%edx
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000044(%edi),%eax
		mov    %esi,%ecx
		call   _078dde_func
		xor    %edx,%edx
		mov    %edx,_0d8194_data(%ebp)
		mov    _0d81d8_data(%ebp),%dx
		imul   $0x00000c,%edx,%edx
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _078fea_func
		mov    $0x000001,%ebx
		lea    0x000080(%edi),%eax
		mov    %ebx,%edx
		call   _078dde_func
		cmpb   $0x000000,_0d8214_data(%ebp)
		je     _043c70_jump
		xor    %ebx,%ebx
		xor    %edi,%edi
		mov    %ebx,_0d8198_data(%ebp)
		jmp    _043edb_jump

	_043eda_jump:
		inc    %edi

	_043edb_jump:
		xor    %eax,%eax
		mov    _0d8214_data(%ebp),%al
		cmp    %eax,%edi
		jge    _043c86_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000038(%esp),%eax
		mov    %esi,%ecx
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000034(%esp),%eax
		mov    %esi,%ecx
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000004(%esp),%eax
		mov    %esi,%ecx
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000030(%esp),%eax
		mov    %esi,%ecx
		call   _078dde_func
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		mov    0x000030(%esp),%dx
		call   _078fea_func
		cmpl   $0xffffffff,0x000004(%esp)
		je     _043eda_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000034(%esp),%dx
		mov    %esi,%eax
		shl    $0x000002,%edx
		call   _078fea_func
		jmp    _043eda_jump

	_043f74_jump:
		mov    _0c1318_data,%ax
		mov    _0c1316_data,%bx
		add    %eax,%ebx
		mov    %esi,%ecx
		mov    %bx,_0c1316_data
		mov    $0x000001,%ebx
		mov    $_0c1315_data,%eax
		mov    %ebx,%edx
		call   _078dde_func
		xor    %eax,%eax
		mov    _0c1314_data,%al
		mov    %eax,0x000020(%esp)
		shl    $0x000002,%eax
		mov    %eax,0x000024(%esp)
		jmp    _043fc5_jump

	_043fb1_jump:
		mov    0x000024(%esp),%eax
		mov    0x000020(%esp),%edx
		add    $0x000004,%eax
		inc    %edx
		mov    %eax,0x000024(%esp)
		mov    %edx,0x000020(%esp)

	_043fc5_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0c1315_data,%al
		mov    _0c1314_data,%dl
		mov    0x000020(%esp),%ebp
		add    %edx,%eax
		cmp    %ebp,%eax
		jle    _044088_jump
		mov    $0x000001,%ebx
		lea    0x000054(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		xor    %edx,%edx
		mov    0x000054(%esp),%dl
		mov    0x00002c(%esp),%eax
		shl    $0x000002,%edx
		xor    %ebp,%ebp
		call   _077220_func
		mov    0x000024(%esp),%edx
		xor    %edi,%edi
		mov    %edx,0x000014(%esp)
		mov    %eax,_0c1184_data(%edx)
		xor    %eax,%eax
		mov    0x000054(%esp),%al
		cmp    %eax,%ebp
		jge    _043fb1_jump

	_044022_jump:
		mov    $0x000001,%ebx
		lea    0x000058(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		xor    %edx,%edx
		mov    0x000058(%esp),%dl
		mov    0x00002c(%esp),%eax
		shl    $0x000003,%edx
		call   _077220_func
		mov    0x000014(%esp),%edx
		add    $0x000004,%edi
		mov    _0c1184_data(%edx),%edx
		mov    %eax,-0x000004(%edx,%edi,1)
		mov    0x000014(%esp),%eax
		mov    %esi,%ecx
		xor    %ebx,%ebx
		mov    _0c1184_data(%eax),%eax
		mov    0x000058(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%edi,%eax,1),%eax
		inc    %ebp
		call   _078dde_func
		xor    %eax,%eax
		mov    0x000054(%esp),%al
		cmp    %eax,%ebp
		jge    _043fb1_jump
		jmp    _044022_jump

	_044088_jump:
		add    %dl,_0c1315_data
		xor    %eax,%eax
		mov    _0c6b58_data,%al
		call   _045a5c_func
		mov    %esi,%eax
		call   _079f79_func

	_0440a1_jump:
		mov    0x000018(%esp),%eax
		call   _077708_func
		add    $0x00005c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0440b4_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000080,%esp
		mov    %eax,0x000064(%esp)
		mov    $0x000013,%ecx
		mov    %esp,%edi
		mov    $_09607c_data,%esi
		mov    $0x000064,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   _07755c_func
		mov    %eax,%edi
		mov    %eax,0x000068(%esp)
		call   _01cd14_func
		cmpw   $0x000000,_0c1182_data
		je     _044112_jump
		mov    $_0c02ff_data,%esi
		push   %edi

	_0440f7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04410f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0440f7_jump

	_04410f_jump:
		pop    %edi
		jmp    _044115_jump

	_044112_jump:
		movb   $0x000000,(%edi)

	_044115_jump:
		mov    $_0c0303_data,%esi
		mov    0x000068(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044127_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04413f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044127_jump

	_04413f_jump:
		pop    %edi
		mov    $_0c0309_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04414e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044166_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04414e_jump

	_044166_jump:
		pop    %edi
		mov    _0c24f0_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    %esp,%esi
		add    %edx,%eax
		add    %eax,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04418c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0441a4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04418c_jump

	_0441a4_jump:
		pop    %edi
		mov    $_0c030b_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0441b3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0441cb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0441b3_jump

	_0441cb_jump:
		pop    %edi
		mov    %ebx,%esi
		mov    $_0c030d_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0441dc_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0441f4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0441dc_jump

	_0441f4_jump:
		pop    %edi
		mov    %edi,%eax
		call   _079ee3_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _044230_jump
		mov    $0x0000c8,%eax
		call   _07755c_func
		push   %edi
		push   $_0c0310_data
		push   %eax
		mov    %eax,%edx
		call   _0787fb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f628_func
		mov    %edx,%eax
		call   _077708_func
		jmp    _044910_jump

	_044230_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %eax,%ecx
		lea    0x000050(%esp),%eax
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000060(%esp),%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0c24b4_data,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0c24b6_data,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    $0x000900,%ebx
		mov    $0x000001,%edx
		mov    $_0c7c6c_data,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $_0c2479_data,%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    _0c2479_data,%dl
		mov    %ah,_0c247a_data
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7c6c_data,%esi
		sub    %edx,%eax
		mov    $_0c796c_data,%edi
		shl    $0x000008,%eax
		mov    $0x000300,%ecx
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0c24b4_data,%eax
		mov    _0c24b2_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    %edx,_0c24b8_data
		mov    %edx,%eax
		shl    $0x000002,%edx
		sub    %eax,%edx
		mov    0x000064(%esp),%eax
		add    %edx,%edx
		mov    %ebp,%ecx
		call   _077220_func
		mov    $0x000006,%edx
		mov    _0c24b8_data,%ebx
		mov    %eax,_0c24bc_data
		call   _078dde_func
		mov    $0x000001,%ebx
		lea    0x00007c(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		mov    $0x000001,%ebx
		lea    0x000074(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0c2474_data,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    _0c2474_data,%ebx
		cmp    $0xffffffff,%ebx
		jne    _04437e_jump
		xor    %ecx,%ecx
		mov    %ecx,_0c2474_data
		jmp    _0443b2_jump

	_04437e_jump:
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    $_0d8194_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _095b0d_data,%al
		mov    %edx,_0c2474_data
		test   %eax,%eax
		jne    _0443b2_jump
		cmpb   $0x000000,_0ce835_data
		je     _0443b2_jump
		mov    0x000064(%esp),%eax
		call   _054940_func

	_0443b2_jump:
		xor    %eax,%eax
		mov    _095b0d_data,%al
		cmp    $0x000001,%eax
		je     _0443c8_jump
		mov    _0ce835_data,%dh
		test   %dh,%dh
		jne    _0443ce_jump

	_0443c8_jump:
		mov    0x00007c(%esp),%al
		jmp    _0443da_jump

	_0443ce_jump:
		test   %eax,%eax
		jne    _0443df_jump
		test   %dh,%dh
		je     _0443df_jump
		mov    0x000074(%esp),%al

	_0443da_jump:
		mov    %al,_0ce83f_data

	_0443df_jump:
		xor    %eax,%eax
		mov    _095b0d_data,%al
		cmp    $0x000001,%eax
		jne    _0445f0_jump
		mov    $0x000004,%edx
		mov    %ebp,%ecx
		mov    %eax,%ebx
		lea    0x000054(%esp),%eax
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000058(%esp),%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    0x000054(%esp),%edi
		test   %edi,%edi
		je     _044433_jump
		mov    %edi,%edx
		mov    0x000064(%esp),%eax
		shl    $0x000008,%edx
		call   _077220_func
		mov    %eax,_0caa44_data
		jmp    _044439_jump

	_044433_jump:
		mov    %edi,_0caa44_data

	_044439_jump:
		mov    0x000058(%esp),%edx
		test   %edx,%edx
		je     _044451_jump
		mov    0x000064(%esp),%eax
		call   _077220_func
		mov    %eax,_0caa40_data
		jmp    _044457_jump

	_044451_jump:
		mov    %edx,_0caa40_data

	_044457_jump:
		mov    0x000054(%esp),%ebx
		mov    $0x000001,%edx
		mov    _0caa44_data,%eax
		mov    %ebp,%ecx
		shl    $0x000008,%ebx
		call   _078dde_func
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		xor    %edx,%edx
		jmp    _0444a3_jump

	_044485_jump:
		mov    _0caa44_data,%esi
		mov    0x000078(%esp),%bl
		mov    (%edx,%esi,1),%al
		sub    %al,%bl
		mov    %bl,0x000078(%esp)
		mov    (%edx,%esi,1),%bh
		inc    %edx
		xor    $0x00007d,%bh
		mov    %bh,-0x000001(%edx,%esi,1)

	_0444a3_jump:
		mov    0x000054(%esp),%eax
		shl    $0x000008,%eax
		cmp    %eax,%edx
		jb     _044485_jump
		cmpb   $0x000000,0x000078(%esp)
		je     _0444e2_jump
		mov    $0x0000c8,%eax
		call   _07755c_func
		mov    %eax,%edx
		mov    0x000068(%esp),%eax
		push   %eax
		push   $_0c0334_data
		push   %edx
		call   _0787fb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f628_func
		mov    %edx,%eax
		call   _077708_func

	_0444e2_jump:
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0cbd0c_data,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    _0caa44_data,%edx
		xor    %eax,%eax

	_044500_jump:
		mov    _0cbd0c_data(%eax),%ebx
		add    $0x000004,%eax
		add    %edx,%ebx
		mov    %ebx,_0cbd08_data(%eax)
		cmp    $0x0012c0,%eax
		jne    _044500_jump
		mov    0x000058(%esp),%ebx
		mov    $0x000001,%edx
		mov    _0caa40_data,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		mov    0x000058(%esp),%ecx
		xor    %edx,%edx
		test   %ecx,%ecx
		jbe    _044567_jump

	_044549_jump:
		mov    _0caa40_data,%esi
		mov    0x000078(%esp),%cl
		mov    (%edx,%esi,1),%al
		sub    %al,%cl
		mov    %cl,0x000078(%esp)
		xorb   $0x0000f3,(%edx,%esi,1)
		inc    %edx
		cmp    0x000058(%esp),%edx
		jb     _044549_jump

	_044567_jump:
		cmpb   $0x000000,0x000078(%esp)
		je     _04459b_jump
		mov    $0x0000c8,%eax
		mov    0x000068(%esp),%edi
		call   _07755c_func
		push   %edi
		push   $_0c0350_data
		push   %eax
		mov    %eax,%edx
		call   _0787fb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f628_func
		mov    %edx,%eax
		call   _077708_func

	_04459b_jump:
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0caa4c_data,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		xor    %eax,%eax
		jmp    _0445c7_jump

	_0445b5_jump:
		xor    %ebx,%ebx
		mov    %ebx,_0caa4c_data(%eax)

	_0445bd_jump:
		add    $0x000004,%eax
		cmp    $0x0012c0,%eax
		je     _0445de_jump

	_0445c7_jump:
		cmpl   $0xffffffff,_0caa4c_data(%eax)
		je     _0445b5_jump
		mov    _0caa40_data,%edx
		add    %edx,_0caa4c_data(%eax)
		jmp    _0445bd_jump

	_0445de_jump:
		mov    0x000050(%esp),%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _078fea_func
		jmp    _044700_jump

	_0445f0_jump:
		test   %eax,%eax
		jne    _044700_jump
		mov    0x000060(%esp),%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _078fea_func
		mov    %ebp,%ecx
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0caa4c_data,%eax
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce574_data,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce578_data,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x00005c(%esp),%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    0x00005c(%esp),%edx
		mov    0x000064(%esp),%eax
		mov    $0x000001,%ebx
		call   _077220_func
		mov    %ebp,%ecx
		mov    0x00005c(%esp),%edx
		mov    %eax,_0c94a4_data
		call   _078dde_func
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		mov    0x00005c(%esp),%esi
		xor    %edx,%edx
		test   %esi,%esi
		jle    _0446b8_jump

	_04469a_jump:
		mov    _0c94a4_data,%ebx
		mov    0x000078(%esp),%cl
		mov    (%edx,%ebx,1),%al
		sub    %al,%cl
		mov    %cl,0x000078(%esp)
		xorb   $0x0000ff,(%edx,%ebx,1)
		inc    %edx
		cmp    0x00005c(%esp),%edx
		jl     _04469a_jump

	_0446b8_jump:
		cmpb   $0x000000,0x000078(%esp)
		je     _0446ec_jump
		mov    $0x0000c8,%eax
		mov    0x000068(%esp),%edi
		call   _07755c_func
		push   %edi
		push   $_0c036c_data
		push   %eax
		mov    %eax,%edx
		call   _0787fb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f628_func
		mov    %edx,%eax
		call   _077708_func

	_0446ec_jump:
		mov    $_0ce550_data,%edx
		mov    0x000064(%esp),%eax
		mov    _0c94a4_data,%ebx
		call   _054174_func

	_044700_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b08_data,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    _0c1b06_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    0x000064(%esp),%eax
		shl    $0x000002,%edx
		call   _077220_func
		mov    %eax,_0c1b04_data
		mov    _0c1b06_data,%edx
		sar    $0x000010,%edx
		mov    0x000064(%esp),%eax
		add    %edx,%edx
		call   _077220_func
		mov    _0c1b06_data,%edx
		mov    %eax,_0c1b0c_data
		sar    $0x000010,%edx
		mov    0x000064(%esp),%eax
		add    %edx,%edx
		call   _077220_func
		mov    %eax,_0c1b14_data
		mov    _0c1b06_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ebx
		shl    $0x000005,%ebx
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%ebx
		call   _0787d0_func
		mov    _0c1b06_data,%edx
		sar    $0x000010,%edx
		xor    %edi,%edi
		add    %edx,%edx
		mov    0x000064(%esp),%eax
		inc    %edx
		mov    %ebp,%ecx
		call   _077220_func
		mov    _0c1b06_data,%ebx
		mov    $0x000002,%edx
		sar    $0x000010,%ebx
		mov    %eax,_0c1b00_data
		call   _078dde_func
		mov    $0x000084,%edx
		mov    _0c1b06_data,%ebx
		mov    _0c1b04_data,%eax
		mov    %ebp,%ecx
		sar    $0x000010,%ebx
		xor    %esi,%esi
		call   _078dde_func
		jmp    _044834_jump

	_0447d5_jump:
		mov    _0c1b04_data,%eax
		movl   $0x000000,0x000010(%esi,%eax,1)

	_0447e2_jump:
		mov    0x000070(%esp),%ecx
		test   %cx,%cx
		je     _044820_jump
		xor    %edx,%edx
		mov    %cx,%dx
		mov    0x000064(%esp),%eax
		add    %edx,%edx
		call   _077220_func
		mov    _0c1b04_data,%edx
		xor    %ebx,%ebx
		mov    %ebp,%ecx
		mov    %eax,0x000014(%edx,%esi,1)
		mov    %edx,%eax
		mov    0x000070(%esp),%bx
		mov    $0x000002,%edx
		mov    0x000014(%esi,%eax,1),%eax
		call   _078dde_func
		jmp    _04482d_jump

	_044820_jump:
		mov    _0c1b04_data,%eax
		movl   $0x000000,0x000014(%esi,%eax,1)

	_04482d_jump:
		add    $0x000084,%esi
		inc    %edi

	_044834_jump:
		mov    _0c1b06_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jge    _044909_jump
		mov    _0c1b04_data,%eax
		movswl (%esi,%eax,1),%edx
		imul   $0x000084,%edx,%edx
		mov    _0d8194_data(%edx),%edx
		mov    %edx,(%esi,%eax,1)
		mov    0x000002(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0d8198_data(%edx),%edx
		mov    %edx,0x000004(%esi,%eax,1)
		mov    0x000006(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0d819c_data(%edx),%edx
		mov    %edx,0x000008(%esi,%eax,1)
		mov    0x00000a(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		mov    _0c1184_data(,%edx,4),%edx
		mov    %ebp,%ecx
		mov    %edx,0x00000c(%esi,%eax,1)
		mov    $0x000002,%edx
		lea    0x00006c(%esp),%eax
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000070(%esp),%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    0x00006c(%esp),%ebx
		test   %bx,%bx
		je     _0447d5_jump
		xor    %edx,%edx
		mov    0x000064(%esp),%eax
		mov    %bx,%dx
		call   _077220_func
		mov    _0c1b04_data,%edx
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    %eax,0x000010(%edx,%esi,1)
		mov    %edx,%eax
		mov    0x00006c(%esp),%bx
		mov    $0x000001,%edx
		mov    0x000010(%esi,%eax,1),%eax
		call   _078dde_func
		jmp    _0447e2_jump

	_044909_jump:
		mov    %ebp,%eax
		call   _079f79_func

	_044910_jump:
		mov    0x000068(%esp),%eax
		call   _077708_func
		add    $0x000080,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_044924_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,0x000018(%esp)
		mov    $0x000064,%eax
		mov    $_0c0397_data,%esi
		call   _07755c_func
		mov    %eax,%ebx
		mov    %eax,(%esp)
		movb   $0x000000,(%eax)
		mov    %ebx,%edi
		call   _01cd14_func
		push   %edi

	_044950_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044968_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044950_jump

	_044968_jump:
		pop    %edi
		mov    $_0c039d_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044977_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04498f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044977_jump

	_04498f_jump:
		pop    %edi
		mov    $_0c039f_data,%esi
		mov    $_0c03a8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0449a3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0449bb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0449a3_jump

	_0449bb_jump:
		pop    %edi
		mov    %ebx,%eax
		call   _079ee3_func
		mov    %eax,%esi
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _0449f9_jump
		mov    $0x0000c8,%eax
		call   _07755c_func
		push   %ebx
		push   $_0c03ab_data
		push   %eax
		mov    %eax,%edx
		call   _0787fb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f628_func
		mov    %edx,%eax
		call   _077708_func
		jmp    _044d6d_jump

	_0449f9_jump:
		mov    _0c1314_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		mov    $0x000001,%ebx
		shl    $0x000005,%edi
		mov    %eax,0x000004(%esp)
		add    %eax,%edi
		mov    $_0d8194_data,%eax
		shl    $0x000002,%edi
		mov    $0x000004,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000028,%eax
		call   _078dde_func
		mov    0x000018(%esp),%eax
		mov    _0d81bc_data(%edi),%edx
		call   _077220_func
		mov    %esi,%ecx
		mov    $0x000001,%edx
		mov    _0d81bc_data(%edi),%ebx
		mov    %eax,_0d819c_data(%edi)
		call   _078dde_func
		mov    %edi,%esi
		mov    _0d81bc_data(%edi),%edx
		xor    %eax,%eax
		test   %edx,%edx
		jle    _044a72_jump

	_044a5f_jump:
		mov    _0d819c_data(%esi),%edx
		xorb   $0x00008f,(%edx,%eax,1)
		inc    %eax
		cmp    _0d81bc_data(%esi),%eax
		jl     _044a5f_jump

	_044a72_jump:
		mov    $_0d8194_data,%edi
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		add    %esi,%edi
		mov    %ebp,%ecx
		lea    0x000044(%edi),%eax
		call   _078dde_func
		xor    %edx,%edx
		mov    _0d81d8_data(%esi),%dx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    0x000018(%esp),%eax
		xor    %ebx,%ebx
		call   _077220_func
		mov    $0x00000c,%edx
		mov    _0d81d8_data(%esi),%bx
		mov    %eax,_0d8194_data(%esi)
		call   _078dde_func
		mov    $0x000001,%ebx
		lea    0x000080(%edi),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		xor    %edx,%edx
		mov    _0d8214_data(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000018(%esp),%eax
		call   _077220_func
		mov    %eax,_0d8198_data(%esi)
		mov    0x000004(%esp),%eax
		mov    %eax,%edi
		xor    %ecx,%ecx
		shl    $0x000005,%edi
		mov    %ecx,0x000010(%esp)
		add    %eax,%edi
		xor    %esi,%esi
		shl    $0x000002,%edi
		jmp    _044b29_jump

	_044b1d_jump:
		mov    0x000010(%esp),%ebx
		inc    %ebx
		add    $0x00000c,%esi
		mov    %ebx,0x000010(%esp)

	_044b29_jump:
		xor    %eax,%eax
		mov    0x000010(%esp),%edx
		mov    _0d8214_data(%edi),%al
		cmp    %edx,%eax
		jle    _044c2b_jump
		mov    $0x000001,%ebx
		mov    _0d8198_data(%edi),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000008,%eax
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    _0d8198_data(%edi),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x00000a,%eax
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    _0d8198_data(%edi),%eax
		mov    $0x000004,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000004,%eax
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x00001c(%esp),%eax
		mov    %ebp,%ecx
		call   _078dde_func
		xor    %edx,%edx
		mov    0x000018(%esp),%eax
		mov    0x00001c(%esp),%dx
		call   _077220_func
		mov    _0d8198_data(%edi),%edx
		mov    %ebp,%ecx
		mov    %eax,(%edx,%esi,1)
		xor    %ebx,%ebx
		mov    _0d8198_data(%edi),%eax
		mov    0x00001c(%esp),%bx
		mov    $0x000001,%edx
		mov    (%esi,%eax,1),%eax
		call   _078dde_func
		mov    _0d8198_data(%edi),%eax
		add    %esi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _044b1d_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    0x000018(%esp),%eax
		shl    $0x000002,%edx
		call   _077220_func
		mov    _0d8198_data(%edi),%edx
		mov    %eax,0x000004(%edx,%esi,1)
		mov    %ebp,%ecx
		mov    _0d8198_data(%edi),%eax
		xor    %ebx,%ebx
		mov    $0x000004,%edx
		mov    0x00000a(%esi,%eax,1),%bx
		mov    0x000004(%esi,%eax,1),%eax
		call   _078dde_func
		jmp    _044b1d_jump

	_044c2b_jump:
		mov    $0x000001,%ebx
		mov    $_0c1315_data,%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		xor    %ebx,%ebx
		mov    %ebx,0x00000c(%esp)
		mov    %ebx,0x000014(%esp)
		jmp    _044c5e_jump

	_044c4a_jump:
		mov    0x000014(%esp),%esi
		mov    0x00000c(%esp),%edi
		add    $0x000004,%esi
		inc    %edi
		mov    %esi,0x000014(%esp)
		mov    %edi,0x00000c(%esp)

	_044c5e_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%ecx
		mov    _0c1315_data,%al
		cmp    %ecx,%eax
		jle    _044d17_jump
		mov    $0x000001,%ebx
		lea    0x000020(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		mov    0x000018(%esp),%eax
		shl    $0x000002,%edx
		xor    %edi,%edi
		call   _077220_func
		mov    0x000014(%esp),%edx
		xor    %esi,%esi
		mov    %edx,0x000008(%esp)
		mov    %eax,_0c1184_data(%edx)
		xor    %eax,%eax
		mov    0x000020(%esp),%al
		cmp    %eax,%edi
		jge    _044c4a_jump

	_044cb1_jump:
		mov    $0x000001,%ebx
		lea    0x000024(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		xor    %edx,%edx
		mov    0x000024(%esp),%dl
		mov    0x000018(%esp),%eax
		shl    $0x000003,%edx
		call   _077220_func
		mov    0x000008(%esp),%edx
		add    $0x000004,%esi
		mov    _0c1184_data(%edx),%edx
		mov    %eax,-0x000004(%edx,%esi,1)
		mov    0x000008(%esp),%eax
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    _0c1184_data(%eax),%eax
		mov    0x000024(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%esi,%eax,1),%eax
		inc    %edi
		call   _078dde_func
		xor    %eax,%eax
		mov    0x000020(%esp),%al
		cmp    %eax,%edi
		jge    _044c4a_jump
		jmp    _044cb1_jump

	_044d17_jump:
		mov    _0c1314_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		mov    $_0d8194_data,%esi
		shl    $0x000005,%eax
		mov    $0x000084,%ecx
		add    %edx,%eax
		mov    $_0c1e34_data,%edi
		shl    $0x000002,%eax
		mov    _0c1184_data,%edx
		add    %eax,%esi
		mov    %edx,_0d81a0_data(%eax)
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0c1316_data,%dx
		inc    %edx
		mov    %ebp,%eax
		mov    %dx,_0c1316_data
		call   _079f79_func

	_044d6d_jump:
		mov    (%esp),%eax
		call   _077708_func
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044d80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		call   _01cd14_func
		mov    $0x000064,%eax
		call   _07755c_func
		mov    _0c6b3c_data,%edx
		mov    %eax,%edi
		mov    %eax,0x000008(%esp)
		mov    $_0c6b20_data,%eax
		call   _077450_func
		mov    $_0c6b14_data,%eax
		mov    _0c6b38_data,%edx
		call   _077450_func
		mov    $_0c6b08_data,%eax
		mov    _0c6b34_data,%edx
		call   _077450_func
		mov    $_0c6afc_data,%eax
		mov    _0c6b30_data,%edx
		call   _077450_func
		cmpw   $0x000000,_0c1182_data
		je     _044e09_jump
		mov    $_0c03d1_data,%esi
		push   %edi

	_044dee_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044e06_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044dee_jump

	_044e06_jump:
		pop    %edi
		jmp    _044e0c_jump

	_044e09_jump:
		movb   $0x000000,(%edi)

	_044e0c_jump:
		mov    $_0c03d5_data,%esi
		mov    0x000008(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044e1e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044e36_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044e1e_jump

	_044e36_jump:
		pop    %edi
		mov    $_0c03db_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044e45_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044e5d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044e45_jump

	_044e5d_jump:
		pop    %edi
		mov    $_0c03dd_data,%esi
		mov    $_0c03e8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044e71_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044e89_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044e71_jump

	_044e89_jump:
		pop    %edi
		mov    %edi,%eax
		call   _079ee3_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _044ec5_jump
		mov    $0x0000c8,%eax
		call   _07755c_func
		push   %edi
		push   $_0c03eb_data
		push   %eax
		mov    %eax,%edx
		call   _0787fb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f628_func
		mov    %edx,%eax
		call   _077708_func
		jmp    _045588_jump

	_044ec5_jump:
		mov    $0x000001,%ebx
		mov    %eax,%ecx
		mov    $_0c1315_data,%eax
		mov    %ebx,%edx
		call   _078dde_func
		mov    _0c1315_data,%al
		xor    %edx,%edx
		mov    %al,_0c1314_data
		mov    %edx,(%esp)
		jmp    _044eec_jump

	_044ee9_jump:
		incl   (%esp)

	_044eec_jump:
		xor    %eax,%eax
		mov    (%esp),%ecx
		mov    _0c1315_data,%al
		cmp    %ecx,%eax
		jle    _044fa1_jump
		mov    $0x000001,%ebx
		lea    0x000018(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		xor    %edx,%edx
		mov    0x000018(%esp),%dl
		mov    $_0c6afc_data,%eax
		shl    $0x000002,%edx
		call   _077220_func
		mov    (%esp),%edx
		xor    %edi,%edi
		xor    %esi,%esi
		mov    %eax,_0c1184_data(,%edx,4)
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		cmp    %eax,%edi
		jge    _044ee9_jump

	_044f3b_jump:
		mov    $0x000001,%ebx
		lea    0x00001c(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		mov    $_0c6afc_data,%eax
		shl    $0x000003,%edx
		call   _077220_func
		mov    (%esp),%edx
		mov    _0c1184_data(,%edx,4),%edx
		mov    %eax,(%edx,%esi,1)
		add    $0x000004,%esi
		mov    (%esp),%eax
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    _0c1184_data(,%eax,4),%eax
		mov    0x00001c(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%esi,%eax,1),%eax
		inc    %edi
		call   _078dde_func
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		cmp    %eax,%edi
		jge    _044ee9_jump
		jmp    _044f3b_jump

	_044fa1_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0c1316_data,%eax
		mov    %ebp,%ecx
		mov    $0x000001,%esi
		call   _078dde_func
		mov    _0c1316_data,%ax
		mov    %esi,(%esp)
		mov    %ax,_0c1318_data
		jmp    _0452fd_jump

	_044fd0_jump:
		mov    _0c1184_data(,%esi,4),%edx
		mov    %edx,_0d81a0_data(%eax)

	_044fdd_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce5d8_data,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce5cc_data,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0d8194_data,%eax
		mov    $0x000004,%edx
		add    $0x000028,%eax
		call   _078dde_func
		imul   $0x000084,(%esp),%edx
		mov    $_0c6b20_data,%eax
		mov    _0d81bc_data(%edx),%edx
		call   _077220_func
		mov    (%esp),%ecx
		mov    %eax,%edx
		imul   $0x000084,%ecx,%eax
		mov    %ebp,%ecx
		mov    _0d81bc_data(%eax),%ebx
		mov    %edx,_0d819c_data(%eax)
		mov    %edx,%eax
		mov    $0x000001,%edx
		call   _078dde_func
		mov    $0x000001,%ebx
		lea    0x000014(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _078dde_func
		xor    %edx,%edx
		jmp    _045099_jump

	_04507b_jump:
		mov    _0d819c_data(%eax),%esi
		mov    0x000014(%esp),%bl
		mov    (%edx,%esi,1),%al
		sub    %al,%bl
		mov    %bl,0x000014(%esp)
		mov    (%edx,%esi,1),%bh
		inc    %edx
		xor    $0x00008f,%bh
		mov    %bh,-0x000001(%edx,%esi,1)

	_045099_jump:
		imul   $0x000084,(%esp),%eax
		cmp    _0d81bc_data(%eax),%edx
		jl     _04507b_jump
		cmpb   $0x000000,0x000014(%esp)
		je     _0450dc_jump
		mov    $0x0000c8,%eax
		call   _07755c_func
		mov    %eax,%edx
		mov    0x000008(%esp),%eax
		push   %eax
		push   $_0c0411_data
		push   %edx
		call   _0787fb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f628_func
		mov    %edx,%eax
		call   _077708_func

	_0450dc_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce5d0_data,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0d8194_data,%eax
		mov    $0x000002,%edx
		add    $0x000044,%eax
		call   _078dde_func
		imul   $0x000084,(%esp),%edx
		mov    _0d81d8_data(%edx),%dx
		and    $0x00ffff,%edx
		imul   $0x00000c,%edx,%edx
		mov    $_0c6afc_data,%eax
		call   _077220_func
		mov    (%esp),%ecx
		mov    %eax,%edx
		imul   $0x000084,%ecx,%eax
		xor    %ebx,%ebx
		mov    %ebp,%ecx
		mov    _0d81d8_data(%eax),%bx
		mov    %edx,_0d8194_data(%eax)
		mov    %edx,%eax
		mov    $0x00000c,%edx
		call   _078dde_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0d8194_data,%eax
		mov    %ebx,%edx
		add    $0x000080,%eax
		call   _078dde_func
		imul   $0x000084,(%esp),%eax
		cmpb   $0x000000,_0d8214_data(%eax)
		je     _0452f2_jump
		xor    %edx,%edx
		mov    _0d8214_data(%eax),%dl
		imul   $0x00000c,%edx,%edx
		mov    $_0c6afc_data,%eax
		call   _077220_func
		imul   $0x000084,(%esp),%edx
		xor    %edi,%edi
		xor    %esi,%esi
		mov    %eax,_0d8198_data(%edx)
		jmp    _0451ba_jump

	_0451b6_jump:
		add    $0x00000c,%esi
		inc    %edi

	_0451ba_jump:
		imul   $0x000084,(%esp),%eax
		xor    %edx,%edx
		mov    _0d8214_data(%eax),%dl
		cmp    %edx,%edi
		jge    _0452fa_jump
		mov    $0x000001,%ebx
		mov    _0d8198_data(%eax),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000008,%eax
		call   _078dde_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    _0d8198_data(%eax),%eax
		mov    %ebp,%ecx
		add    %esi,%eax
		mov    $0x000002,%edx
		add    $0x00000a,%eax
		call   _078dde_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000004,%edx
		mov    _0d8198_data(%eax),%eax
		mov    %ebp,%ecx
		add    %esi,%eax
		mov    $0x000001,%ebx
		add    $0x000004,%eax
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000010(%esp),%eax
		mov    %ebp,%ecx
		call   _078dde_func
		xor    %edx,%edx
		mov    $_0c6afc_data,%eax
		mov    0x000010(%esp),%dx
		call   _077220_func
		imul   $0x000084,(%esp),%edx
		mov    _0d8198_data(%edx),%edx
		mov    %eax,(%edx,%esi,1)
		imul   $0x000084,(%esp),%eax
		xor    %ebx,%ebx
		mov    %ebp,%ecx
		mov    _0d8198_data(%eax),%eax
		mov    0x000010(%esp),%bx
		mov    $0x000001,%edx
		mov    (%esi,%eax,1),%eax
		call   _078dde_func
		imul   $0x000084,(%esp),%eax
		mov    _0d8198_data(%eax),%eax
		add    %esi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _0451b6_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    $_0c6afc_data,%eax
		shl    $0x000002,%edx
		call   _077220_func
		imul   $0x000084,(%esp),%edx
		mov    _0d8198_data(%edx),%edx
		mov    %eax,0x000004(%edx,%esi,1)
		imul   $0x000084,(%esp),%eax
		xor    %ebx,%ebx
		mov    _0d8198_data(%eax),%eax
		mov    $0x000004,%edx
		mov    %ebp,%ecx
		mov    0x00000a(%esi,%eax,1),%bx
		mov    0x000004(%esi,%eax,1),%eax
		call   _078dde_func
		jmp    _0451b6_jump

	_0452f2_jump:
		xor    %edx,%edx
		mov    %edx,_0d8198_data(%eax)

	_0452fa_jump:
		incl   (%esp)

	_0452fd_jump:
		mov    _0c1314_data,%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jle    _04534e_jump
		imul   $0x000084,%edx,%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0d8194_data,%eax
		mov    $0x000004,%edx
		add    $0x00000c,%eax
		call   _078dde_func
		imul   $0x000084,(%esp),%eax
		mov    _0d81a0_data(%eax),%esi
		cmp    $0xffffffff,%esi
		jne    _044fd0_jump
		xor    %edi,%edi
		mov    %edi,_0d81a0_data(%eax)
		jmp    _044fdd_jump

	_04534e_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce5d4_data,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    (%esp),%edx
		mov    %edx,%eax
		mov    $_0d8194_data,%esi
		shl    $0x000005,%eax
		mov    $_0c1b1c_data,%edi
		add    %edx,%eax
		mov    $0x000084,%ecx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%esi
		mov    $0x000004,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0d8194_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0c245c_data
		mov    _0d819c_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0c2460_data
		mov    _0d81d8_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0c2464_data
		mov    %esp,%eax
		call   _078dde_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0d8194_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0c2468_data
		mov    _0d819c_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0c246c_data
		mov    _0d81d8_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0c2470_data
		mov    %esp,%eax
		call   _078dde_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0d8194_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0c1ca8_data
		mov    _0d819c_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0c1cb0_data
		mov    _0d81d8_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0c1cec_data
		mov    %esp,%eax
		call   _078dde_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0d8194_data(,%eax,4),%ebx
		mov    _0d819c_data(,%eax,4),%esi
		mov    _0d8198_data(,%eax,4),%edx
		mov    %esi,0x000004(%esp)
		mov    _0d81d8_data(,%eax,4),%si
		mov    _0d8214_data(,%eax,4),%cl
		mov    %esi,0x00000c(%esp)
		mov    _0d81a0_data(,%eax,4),%esi
		xor    %eax,%eax

	_0454c6_jump:
		add    $0x000084,%eax
		mov    %ebx,_0c2570_data(%eax)
		mov    %edx,_0c2574_data(%eax)
		mov    %cl,_0c25f0_data(%eax)
		mov    0x000004(%esp),%edi
		mov    %esi,_0c257c_data(%eax)
		mov    %edi,_0c2578_data(%eax)
		mov    0x00000c(%esp),%edi
		mov    %di,_0c25b4_data(%eax)
		cmp    $0x000c60,%eax
		jne    _0454c6_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    (%esp),%edx
		mov    %edx,%eax
		mov    $_0d8194_data,%esi
		shl    $0x000005,%eax
		mov    $_0c1d2c_data,%edi
		add    %edx,%eax
		mov    $0x000084,%ecx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%esi
		mov    $0x000004,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _078dde_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $_0d8194_data,%esi
		add    %edx,%eax
		mov    $_0c1db0_data,%edi
		shl    $0x000002,%eax
		mov    $0x000084,%ecx
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %ebp,%eax
		call   _079f79_func

	_045588_jump:
		mov    $0x0004b0,%edx
		mov    $_0c6afc_data,%eax
		call   _077220_func
		mov    %eax,_0caa48_data
		mov    $_0c6b20_data,%eax
		call   _0777d4_func
		mov    0x000008(%esp),%eax
		call   _077708_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0455bc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000ac,%esp
		mov    %eax,0x00008c(%esp)
		mov    %edx,0x000090(%esp)
		mov    %ebx,%ebp
		mov    %ecx,0x000084(%esp)
		call   _01cd14_func
		mov    $0x000064,%eax
		call   _07755c_func
		mov    _0c1182_data,%dx
		mov    %eax,0x00009c(%esp)
		test   %dx,%dx
		je     _045621_jump
		mov    $_0c042d_data,%esi
		mov    %eax,%edi
		push   %edi

	_045606_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04561e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _045606_jump

	_04561e_jump:
		pop    %edi
		jmp    _045624_jump

	_045621_jump:
		movb   $0x000000,(%eax)

	_045624_jump:
		mov    $_0c0431_data,%esi
		mov    0x00009c(%esp),%edi
		mov    $_0c043c_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04563e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _045656_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04563e_jump

	_045656_jump:
		pop    %edi
		mov    %edi,%eax
		call   _079ee3_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _04568d_jump
		mov    $0x0000c8,%eax
		call   _07755c_func
		push   %edi
		push   $_0c043f_data
		push   %eax
		mov    %eax,%edx
		call   _0787fb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f628_func
		mov    %edx,%eax
		call   _077708_func

	_04568d_jump:
		mov    0x000090(%esp),%edx
		lea    0x000000(,%edx,4),%edi
		sub    %edx,%edi
		shl    $0x000002,%edi
		mov    _092159_data(%edi),%al
		mov    %al,0x0000a8(%esp)
		mov    _092154_data(%edi),%eax
		xor    %ebx,%ebx
		sub    $0x000080,%eax
		mov    _092150_data(%edi),%edx
		mov    %eax,0x000088(%esp)
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _078fea_func
		mov    $0x000001,%ebx
		mov    $0x000080,%edx
		mov    %esp,%eax
		call   _078dde_func
		mov    %edi,%ebx
		xor    %eax,%eax

	_0456e5_jump:
		mov    (%esp,%eax,1),%dl
		mov    0x0000a8(%esp),%dh
		sub    %dl,%dh
		mov    (%esp,%eax,1),%cl
		mov    %dh,0x0000a8(%esp)
		mov    _092158_data(%ebx),%dl
		inc    %eax
		xor    %dl,%cl
		mov    %cl,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _0456e5_jump
		mov    0x000008(%esp),%eax
		sub    0x000004(%esp),%eax
		inc    %eax
		mov    %ax,0x000000(%ebp)
		mov    0x00000a(%esp),%eax
		sub    0x000006(%esp),%eax
		mov    0x000084(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x000084(%esp),%ebx
		mov    0x000042(%esp),%eax
		xor    %edx,%edx
		mov    %eax,0x0000a0(%esp)
		xor    %eax,%eax
		mov    0x000000(%ebp),%dx
		mov    (%ebx),%ax
		imul   %eax,%edx
		mov    %esi,%ecx
		mov    0x00008c(%esp),%eax
		mov    0x000088(%esp),%ebx
		call   _077220_func
		mov    %eax,%edi
		mov    0x000088(%esp),%eax
		mov    $0x000001,%edx
		call   _07755c_func
		mov    %eax,0x000080(%esp)
		mov    %eax,0x000094(%esp)
		call   _078dde_func
		mov    %esi,%eax
		mov    0x000088(%esp),%ecx
		call   _079f79_func
		test   %ecx,%ecx
		jbe    _0457db_jump
		mov    0x000090(%esp),%eax
		lea    0x000000(,%eax,4),%esi
		sub    %eax,%esi
		mov    0x000080(%esp),%eax
		shl    $0x000002,%esi
		lea    (%eax,%ecx,1),%ebx

	_0457b9_jump:
		mov    0x0000a8(%esp),%ch
		sub    (%eax),%ch
		mov    _092158_data(%esi),%dl
		mov    (%eax),%dh
		inc    %eax
		xor    %dl,%dh
		mov    %ch,0x0000a8(%esp)
		mov    %dh,-0x000001(%eax)
		cmp    %ebx,%eax
		jb     _0457b9_jump

	_0457db_jump:
		cmpb   $0x000000,0x0000a8(%esp)
		je     _04581d_jump
		mov    $0x0000c8,%eax
		mov    0x000090(%esp),%esi
		call   _07755c_func
		push   %esi
		mov    %eax,%edx
		mov    0x0000a0(%esp),%eax
		push   %eax
		push   $_0c0453_data
		push   %edx
		call   _0787fb_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _01f628_func
		mov    %edx,%eax
		call   _077708_func

	_04581d_jump:
		test   %edi,%edi
		je     _045900_jump
		cmpl   $0x000000,0x000094(%esp)
		je     _045900_jump
		xor    %ebx,%ebx
		xor    %esi,%esi
		mov    %ebx,0x000098(%esp)
		jmp    _045867_jump

	_045840_jump:
		xor    %edx,%edx
		mov    0x000000(%ebp),%dx
		imul   %esi,%edx
		mov    %eax,%ebx
		add    %ebx,%edx
		mov    0x0000a4(%esp),%bl
		inc    %eax
		mov    %bl,(%edx,%edi,1)

	_045858_jump:
		xor    %edx,%edx
		mov    0x0000a0(%esp),%dx
		cmp    %edx,%eax
		jb     _04587d_jump
		inc    %esi

	_045867_jump:
		mov    0x000084(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%ax
		cmp    %eax,%esi
		jae    _0458f2_jump
		xor    %eax,%eax

	_04587d_jump:
		mov    0x000098(%esp),%edx
		mov    0x000094(%esp),%ecx
		lea    0x000001(%edx),%ebx
		add    %ecx,%edx
		mov    (%edx),%dl
		mov    %dl,0x0000a4(%esp)
		and    $0x0000c0,%dl
		mov    %ebx,0x000098(%esp)
		cmp    $0x0000c0,%dl
		jne    _045840_jump
		mov    0x0000a4(%esp),%dl
		and    $0x00003f,%dl
		lea    0x000001(%ebx),%ecx
		mov    %ecx,0x000098(%esp)
		add    0x000094(%esp),%ebx
		mov    (%ebx),%bl
		and    $0x0000ff,%edx
		mov    %bl,0x0000a4(%esp)

	_0458d2_jump:
		dec    %edx
		cmp    $0xffffffff,%edx
		je     _045858_jump
		xor    %ebx,%ebx
		mov    0x000000(%ebp),%bx
		imul   %esi,%ebx
		mov    %eax,%ecx
		add    %ecx,%ebx
		mov    0x0000a4(%esp),%cl
		inc    %eax
		mov    %cl,(%edi,%ebx,1)
		jmp    _0458d2_jump

	_0458f2_jump:
		mov    0x000094(%esp),%eax
		call   _077708_func
		jmp    _04590a_jump

	_045900_jump:
		mov    $_0c0474_data,%eax
		call   _01f628_func

	_04590a_jump:
		mov    0x00009c(%esp),%eax
		call   _077708_func
		mov    %edi,%eax
		add    $0x0000ac,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_045924_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    %edx,(%esp)
		call   _01cd14_func
		mov    $0x000064,%eax
		call   _07755c_func
		mov    _0c1182_data,%dx
		mov    %eax,%ebp
		test   %dx,%dx
		je     _045971_jump
		mov    $_0c049d_data,%esi
		mov    %eax,%edi
		push   %edi

	_045956_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04596e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _045956_jump

	_04596e_jump:
		pop    %edi
		jmp    _045974_jump

	_045971_jump:
		movb   $0x000000,(%eax)

	_045974_jump:
		mov    $_0c04a1_data,%esi
		mov    %ebp,%edi
		mov    $_0c04ac_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_045989_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0459a1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _045989_jump

	_0459a1_jump:
		pop    %edi
		mov    %ebp,%eax
		call   _079ee3_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _0459d8_jump
		mov    $0x0000c8,%eax
		call   _07755c_func
		push   %ebp
		push   $_0c04af_data
		push   %eax
		mov    %eax,%edx
		call   _0787fb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f628_func
		mov    %edx,%eax
		call   _077708_func

	_0459d8_jump:
		lea    0x000000(,%ebx,4),%edi
		sub    %ebx,%edi
		shl    $0x000002,%edi
		mov    _092150_data(%edi),%eax
		add    _092154_data(%edi),%eax
		lea    -0x000300(%eax),%edx
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _078fea_func
		mov    $0x000001,%ebx
		mov    $0x000300,%edx
		mov    (%esp),%eax
		call   _078dde_func
		mov    %esi,%eax
		mov    (%esp),%ebx
		call   _079f79_func
		mov    %edi,%esi
		lea    0x000300(%ebx),%ecx

	_045a25_jump:
		mov    _092158_data(%esi),%dl
		mov    (%ebx),%ah
		xor    %dl,%ah
		xor    %edx,%edx
		mov    %ah,%dl
		mov    %ah,(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		inc    %ebx
		mov    %al,-0x000001(%ebx)
		cmp    %ecx,%ebx
		jne    _045a25_jump
		mov    %ebp,%eax
		call   _077708_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_045a5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000b0,%esp
		mov    %eax,0x000094(%esp)
		cmpb   $0x000000,_0ce843_data
		je     _045e5b_jump
		call   _01cd14_func
		mov    $0x000064,%eax
		call   _07755c_func
		mov    _0c1182_data,%dx
		mov    %eax,%ebp
		test   %dx,%dx
		je     _045abc_jump
		mov    $_0c04c3_data,%esi
		mov    %eax,%edi
		push   %edi

	_045aa1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _045ab9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _045aa1_jump

	_045ab9_jump:
		pop    %edi
		jmp    _045abf_jump

	_045abc_jump:
		movb   $0x000000,(%eax)

	_045abf_jump:
		mov    $_0c04c7_data,%esi
		mov    %ebp,%edi
		mov    $_0c04d2_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_045ad4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _045aec_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _045ad4_jump

	_045aec_jump:
		pop    %edi
		mov    %ebp,%eax
		call   _079ee3_func
		mov    %eax,0x000084(%esp)
		test   %eax,%eax
		jne    _045b28_jump
		mov    $0x0000c8,%eax
		call   _07755c_func
		push   %ebp
		push   $_0c04d5_data
		push   %eax
		mov    %eax,%edx
		call   _0787fb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f628_func
		mov    %edx,%eax
		call   _077708_func

	_045b28_jump:
		mov    0x000094(%esp),%edx
		lea    0x000000(,%edx,4),%edi
		sub    %edx,%edi
		shl    $0x000002,%edi
		mov    _092159_data(%edi),%al
		mov    %al,0x0000ac(%esp)
		mov    _092154_data(%edi),%eax
		xor    %ebx,%ebx
		sub    $0x000080,%eax
		mov    _092150_data(%edi),%edx
		mov    %eax,0x000080(%esp)
		mov    0x000084(%esp),%eax
		mov    0x000084(%esp),%ecx
		call   _078fea_func
		mov    $0x000001,%ebx
		mov    $0x000080,%edx
		mov    %esp,%eax
		call   _078dde_func
		mov    %edi,%ebx
		xor    %eax,%eax

	_045b8a_jump:
		mov    (%esp,%eax,1),%dl
		mov    0x0000ac(%esp),%dh
		sub    %dl,%dh
		mov    (%esp,%eax,1),%cl
		mov    %dh,0x0000ac(%esp)
		mov    _092158_data(%ebx),%dl
		inc    %eax
		xor    %dl,%cl
		mov    %cl,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _045b8a_jump
		mov    0x000008(%esp),%esi
		mov    0x000004(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    0x000006(%esp),%ecx
		mov    $0x000001,%edx
		sub    %ecx,%eax
		mov    _0c94a8_data,%edi
		inc    %eax
		sub    %ebx,%esi
		mov    %eax,0x0000a4(%esp)
		mov    0x000042(%esp),%eax
		mov    0x000084(%esp),%ecx
		mov    %eax,0x0000a8(%esp)
		mov    0x000080(%esp),%eax
		mov    0x000080(%esp),%ebx
		call   _07755c_func
		mov    %eax,0x000098(%esp)
		mov    %eax,0x000090(%esp)
		call   _078dde_func
		mov    0x000084(%esp),%eax
		inc    %esi
		call   _079f79_func
		mov    %ebp,%eax
		mov    0x000080(%esp),%edx
		call   _077708_func
		test   %edx,%edx
		jbe    _045c6a_jump
		mov    0x000094(%esp),%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    0x000098(%esp),%eax
		shl    $0x000002,%ebx
		lea    (%eax,%edx,1),%ecx

	_045c4f_jump:
		mov    (%eax),%dl
		sub    %dl,0x0000ac(%esp)
		mov    _092158_data(%ebx),%dl
		mov    (%eax),%dh
		inc    %eax
		xor    %dl,%dh
		mov    %dh,-0x000001(%eax)
		cmp    %ecx,%eax
		jb     _045c4f_jump

	_045c6a_jump:
		cmpb   $0x000000,0x0000ac(%esp)
		je     _045ca5_jump
		mov    $0x0000c8,%eax
		mov    0x000094(%esp),%ebx
		call   _07755c_func
		push   %ebx
		push   %ebp
		push   $_0c04e9_data
		push   %eax
		mov    %eax,%edx
		call   _0787fb_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _01f628_func
		mov    %edx,%eax
		call   _077708_func

	_045ca5_jump:
		test   %edi,%edi
		je     _045e0b_jump
		cmpl   $0x000000,0x000090(%esp)
		je     _045e0b_jump
		xor    %ebp,%ebp
		mov    %ebp,0x0000a0(%esp)
		mov    %ebp,0x00009c(%esp)
		jmp    _045d4d_jump

	_045cd0_jump:
		xor    %ecx,%ecx
		mov    0x00009c(%esp),%ebp
		mov    %si,%cx
		imul   %ecx,%ebp
		mov    %eax,%ecx
		add    %ebp,%ecx
		mov    0x000088(%esp),%eax
		mov    %dl,(%ecx,%edi,1)
		jmp    _045da7_jump

	_045cf2_jump:
		xor    %ecx,%ecx
		mov    _095b0d_data,%cl
		lea    0x000001(%eax),%ebx
		test   %ecx,%ecx
		jne    _045d1f_jump
		mov    %si,%cx
		mov    0x00009c(%esp),%ebp
		add    %ecx,%ecx
		imul   %ebp,%ecx
		lea    (%ecx,%eax,1),%ebp
		add    %edi,%ebp
		mov    %dl,0x000000(%ebp)
		movzwl %si,%ebp
		add    %ecx,%ebp
		jmp    _045d2e_jump

	_045d1f_jump:
		xor    %ecx,%ecx
		mov    0x00009c(%esp),%ebp
		mov    %si,%cx
		imul   %ecx,%ebp

	_045d2e_jump:
		mov    %eax,%ecx
		mov    %ebx,%eax
		lea    (%ecx,%ebp,1),%ebx
		mov    %dl,(%edi,%ebx,1)

	_045d38_jump:
		xor    %edx,%edx
		mov    0x0000a8(%esp),%dx
		cmp    %edx,%eax
		jb     _045d68_jump
		incl   0x00009c(%esp)

	_045d4d_jump:
		xor    %eax,%eax
		mov    0x00009c(%esp),%ebx
		mov    0x0000a4(%esp),%ax
		cmp    %ebx,%eax
		jbe    _045dfd_jump
		xor    %eax,%eax

	_045d68_jump:
		mov    0x0000a0(%esp),%edx
		mov    0x000090(%esp),%ebp
		lea    0x000001(%edx),%ecx
		add    %ebp,%edx
		mov    (%edx),%dl
		mov    %dl,%dh
		and    $0x0000c0,%dh
		mov    %ecx,0x0000a0(%esp)
		cmp    $0x0000c0,%dh
		jne    _045cf2_jump
		and    $0x00003f,%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %ecx,%edx
		inc    %ecx
		add    %ebp,%edx
		mov    %ecx,0x0000a0(%esp)
		mov    (%edx),%dl

	_045da7_jump:
		dec    %ebx
		cmp    $0xffffffff,%ebx
		je     _045d38_jump
		xor    %ecx,%ecx
		lea    0x000001(%eax),%ebp
		mov    _095b0d_data,%cl
		mov    %ebp,0x000088(%esp)
		test   %ecx,%ecx
		jne    _045cd0_jump
		mov    %si,%cx
		mov    0x00009c(%esp),%ebp
		add    %ecx,%ecx
		imul   %ebp,%ecx
		lea    (%ecx,%eax,1),%ebp
		add    %edi,%ebp
		mov    %dl,0x000000(%ebp)
		movzwl %si,%ebp
		mov    %eax,0x00008c(%esp)
		add    %ebp,%ecx
		add    0x00008c(%esp),%ecx
		mov    0x000088(%esp),%eax
		mov    %dl,(%ecx,%edi,1)
		jmp    _045da7_jump

	_045dfd_jump:
		mov    0x000090(%esp),%eax
		call   _077708_func
		jmp    _045e15_jump

	_045e0b_jump:
		mov    $_0c050a_data,%eax
		call   _01f628_func

	_045e15_jump:
		xor    %eax,%eax
		mov    _095b0d_data,%al
		test   %eax,%eax
		jne    _045e42_jump
		mov    _0c94ac_data,%eax
		add    %esi,%esi
		mov    %eax,_0c94a8_data
		mov    0x0000a4(%esp),%eax
		mov    %si,_0c94b0_data
		mov    %ax,_0c94b2_data
		jmp    _045e5b_jump

	_045e42_jump:
		mov    _0c94a8_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x0000a4(%esp),%bx
		mov    %si,%dx
		call   _045ea8_func

	_045e5b_jump:
		add    $0x0000b0,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_045e68_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %ebx,%esi
		xor    %ebx,%ebx
		xor    %edi,%edi
		mov    %dx,%bx
		mov    %si,%di
		mov    %ebx,%edx
		imul   %edi,%edx
		call   _077220_func
		lea    0x000000(,%ebx,2),%edx
		imul   %edi,%edx
		mov    %eax,%esi
		shl    $0x000003,%ebx
		mov    %ecx,%eax
		add    %ebx,%edx
		call   _077220_func
		mov    %eax,_0c94ac_data
		mov    %esi,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_045ea8_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%esi
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x000018(%esp)
		xor    %eax,%eax
		mov    %dx,_0c94b0_data
		mov    %dx,%ax
		xor    %edx,%edx
		mov    %bx,%dx
		mov    %eax,_0c94b4_data
		imul   %edx,%eax
		mov    %bx,_0c94b2_data
		mov    %esi,0x000004(%esp)
		mov    _0c94ac_data,%esi
		mov    %eax,_0c94b8_data
		test   %esi,%esi
		jne    _045ef6_jump
		mov    $_0c052c_data,%eax
		call   _01f628_func

	_045ef6_jump:
		xor    %edi,%edi
		jmp    _045efb_jump

	_045efa_jump:
		inc    %edi

	_045efb_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		cmp    %eax,%edi
		jae    _045fae_jump
		mov    _0c94b4_data,%edx
		xor    %eax,%eax
		test   %edx,%edx
		jbe    _045efa_jump
		jmp    _045f23_jump

	_045f18_jump:
		mov    _0c94b4_data,%ebx
		inc    %eax
		cmp    %ebx,%eax
		jae    _045efa_jump

	_045f23_jump:
		mov    %eax,%edx
		mov    _0c94b8_data,%ebx
		and    $0x000003,%edx
		shr    %ebx
		imul   %ebx,%edx
		mov    %ebx,0x000010(%esp)
		mov    %eax,%ebx
		shr    $0x000002,%ebx
		mov    %ebx,(%esp)
		add    %edx,%ebx
		mov    _0c94b4_data,%edx
		mov    %edi,%ebp
		shr    %edx
		imul   %edx,%ebp
		mov    %ebp,0x00000c(%esp)
		lea    (%ebx,%ebp,1),%edx
		xor    %ebx,%ebx
		mov    0x000014(%esp),%bx
		imul   %edi,%ebx
		mov    0x000004(%esp),%ebp
		add    %eax,%ebx
		add    %ebp,%ebx
		mov    _0c94b4_data,%ebp
		mov    (%ebx),%cl
		shr    $0x000002,%ebp
		mov    %cl,(%edx,%esi,1)
		add    %ebp,%edx
		mov    %ebp,0x000008(%esp)
		lea    (%esi,%edx,1),%ebp
		mov    %cl,0x000000(%ebp)
		cmp    $0x000010,%edi
		jae    _045f18_jump
		mov    0x000010(%esp),%edx
		mov    (%esp),%ebp
		shl    $0x000002,%edx
		mov    0x00000c(%esp),%ecx
		add    %ebp,%edx
		add    %ecx,%edx
		mov    (%ebx),%cl
		mov    0x000008(%esp),%ebp
		mov    %cl,(%edx,%esi,1)
		add    %ebp,%edx
		lea    (%esi,%edx,1),%ebp
		mov    %cl,0x000000(%ebp)
		jmp    _045f18_jump

	_045fae_jump:
		mov    _0c94b4_data,%eax
		mov    _0c94b8_data,%edx
		shr    %eax
		add    %edx,%edx
		mov    %eax,_0c94b4_data
		mov    %edx,_0c94b8_data
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_045fd0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		call   _01cd14_func
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		mov    %edi,%eax
		call   _0455bc_func
		mov    $_0c796c_data,%edx
		mov    $0x000300,%ecx
		mov    $_0c856c_data,%edi
		mov    %eax,_0c94bc_data
		mov    %esi,%eax
		mov    $_0c796c_data,%esi
		call   _045924_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		mov    (%esp),%ax
		mov    %eax,_0c94c4_data
		mov    %eax,_0c94cc_data
		xor    %eax,%eax
		mov    _0c94cc_data,%esi
		mov    0x000004(%esp),%ax
		imul   %eax,%esi
		mov    _0c94cc_data,%edx
		shr    $0x000002,%edx
		mov    %ax,_0c94c8_data
		mov    %edx,_0c94cc_data
		mov    _0c94bc_data,%eax
		mov    %esi,_0c94d0_data
		mov    %eax,_0c94c0_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04606c_func:
		push   %ebx
		push   %ecx
		cmpb   $0x00002c,(%eax)
		je     _046091_jump

	_046073_jump:
		mov    (%eax),%cl
		cmp    $0x00002a,%cl
		je     _046091_jump
		lea    0x000001(%eax),%ebx
		cmp    $0x000020,%cl
		jb     _04608a_jump
		inc    %edx
		mov    %ebx,%eax
		mov    %cl,-0x000001(%edx)
		jmp    _04608c_jump

	_04608a_jump:
		mov    %ebx,%eax

	_04608c_jump:
		cmpb   $0x00002c,(%eax)
		jne    _046073_jump

	_046091_jump:
		cmpb   $0x00002a,(%eax)
		jne    _04609b_jump
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_04609b_jump:
		inc    %eax
		movb   $0x000000,(%edx)
		pop    %ecx
		pop    %ebx
		ret    



_0460a4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ebx
		mov    %edx,0x000008(%esp)
		call   _01cd14_func
		mov    $0x000064,%eax
		mov    $_0c055b_data,%esi
		mov    $_0c0563_data,%edx
		call   _07755c_func
		mov    %eax,%ecx
		mov    %eax,%edi
		mov    %eax,0x000004(%esp)
		push   %edi

	_0460d4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0460ec_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0460d4_jump

	_0460ec_jump:
		pop    %edi
		mov    %ecx,%eax
		call   _079ee3_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _046123_jump
		mov    $0x0000c8,%eax
		call   _07755c_func
		push   %ecx
		push   $_0c0566_data
		push   %eax
		mov    %eax,%edx
		call   _0787fb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f628_func
		mov    %edx,%eax
		call   _077708_func

	_046123_jump:
		mov    0x000008(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0921e9_data(,%eax,4),%dl
		mov    _0921e4_data(,%eax,4),%eax
		mov    %dl,0x000014(%esp)
		mov    %eax,0x000010(%esp)
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _077220_func
		mov    %eax,%edx
		mov    %eax,%esi
		mov    $0x0000c8,%eax
		call   _07755c_func
		mov    %eax,%edi
		mov    %eax,(%esp)
		test   %edx,%edx
		je     _04616a_jump
		test   %eax,%eax
		jne    _046174_jump

	_04616a_jump:
		mov    $_0c057a_data,%eax
		call   _01f628_func

	_046174_jump:
		mov    0x000008(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%esp)
		mov    _0921e0_data(%eax),%edx
		mov    %ebp,%eax
		mov    %ebp,%ecx
		call   _078fea_func
		mov    0x000010(%esp),%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _078dde_func
		mov    %ebp,%eax
		mov    0x000010(%esp),%edx
		call   _079f79_func
		test   %edx,%edx
		jbe    _0461dc_jump
		mov    0x00000c(%esp),%edx
		mov    0x000010(%esp),%ecx
		mov    %esi,%eax
		add    %esi,%ecx

	_0461c4_jump:
		mov    (%eax),%bl
		sub    %bl,0x000014(%esp)
		mov    _0921e8_data(%edx),%bl
		mov    (%eax),%bh
		inc    %eax
		xor    %bl,%bh
		mov    %bh,-0x000001(%eax)
		cmp    %ecx,%eax
		jb     _0461c4_jump

	_0461dc_jump:
		cmpb   $0x000000,0x000014(%esp)
		je     _046210_jump
		mov    $0x0000c8,%eax
		mov    0x000004(%esp),%ebx
		call   _07755c_func
		push   %ebx
		push   $_0c059a_data
		push   %eax
		mov    %eax,%edx
		call   _0787fb_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f628_func
		mov    %edx,%eax
		call   _077708_func

	_046210_jump:
		mov    %esi,%ecx
		xor    %ebx,%ebx

	_046214_jump:
		mov    %edi,%edx
		mov    %esi,%eax
		call   _04606c_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _046239_jump
		xor    %edx,%edx
		mov    %bx,%dx
		inc    %ebx
		mov    %ecx,_0cd750_data(,%edx,4)
		lea    0x000002(%eax),%ecx
		movb   $0x000000,-0x000001(%eax)
		jmp    _046214_jump

	_046239_jump:
		mov    (%esp),%eax
		call   _077708_func
		mov    0x000004(%esp),%eax
		call   _077708_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0465b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		testb  $0x000004,_0c32e5_data
		je     _046624_jump
		mov    _0ce504_data,%eax
		mov    %eax,_0ce514_data
		mov    _0ce508_data,%eax
		mov    %eax,_0ce518_data
		mov    _0ce50c_data,%eax
		mov    %eax,_0ce51c_data
		mov    _0ce510_data,%eax
		mov    %eax,_0ce520_data
		mov    _0ce524_data,%eax
		mov    %eax,_0ce504_data
		mov    _0ce528_data,%eax
		mov    %eax,_0ce508_data
		mov    _0ce52c_data,%eax
		mov    _0ce504_data,%ecx
		mov    %eax,_0ce50c_data
		mov    _0ce530_data,%eax
		mov    _0ce508_data,%edx
		mov    %eax,_0ce510_data
		mov    %eax,%ebx
		mov    _0ce50c_data,%eax
		call   _016349_func

	_046624_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_046628_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		testb  $0x000004,_0c32e5_data
		je     _046697_jump
		mov    $0x000023,%ecx
		mov    _0c25e0_data,%dx
		mov    $0x00004d,%ebx
		test   %dx,%dx
		je     _04665e_jump
		mov    $0x000055,%ebx
		xor    %esi,%esi
		mov    $0x00002d,%ecx
		mov    %si,_0c25e0_data

	_04665e_jump:
		push   $0x000000
		mov    $0x00000d,%eax
		movswl %cx,%ecx
		push   $0x0000ff
		movswl %bx,%ebx
		xor    %edx,%edx
		call   _019f18_func
		push   $0x000000
		mov    $0x000017,%ecx
		mov    $0x000044,%ebx
		push   $0x0000ff
		mov    $0x000004,%edx
		mov    $0x0000f1,%eax
		call   _019f18_func

	_046697_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04669c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0ce514_data,%edi
		mov    _0ce518_data,%ebp
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    _0cd002_data,%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		mov    %ecx,%esi
		sub    %eax,%edx
		add    %eax,%ebx
		sub    %eax,%esi
		add    %eax,%ecx
		cmp    %edi,%esi
		jge    _0466cb_jump
		mov    %edi,%esi

	_0466cb_jump:
		cmp    %ebp,%esi
		jle    _0466d1_jump
		mov    %ebp,%esi

	_0466d1_jump:
		cmp    _0ce51c_data,%edx
		jge    _0466df_jump
		mov    _0ce51c_data,%edx

	_0466df_jump:
		cmp    _0ce520_data,%edx
		jle    _0466ed_jump
		mov    _0ce520_data,%edx

	_0466ed_jump:
		cmp    %ebp,%ecx
		jle    _0466f3_jump
		mov    %ebp,%ecx

	_0466f3_jump:
		cmp    %edi,%ecx
		jge    _0466f9_jump
		mov    %edi,%ecx

	_0466f9_jump:
		cmp    _0ce520_data,%ebx
		jle    _046707_jump
		mov    _0ce520_data,%ebx

	_046707_jump:
		cmp    _0ce51c_data,%ebx
		jge    _046715_jump
		mov    _0ce51c_data,%ebx

	_046715_jump:
		mov    %ebp,_0ce518_data
		mov    %edi,_0ce514_data
		mov    %esi,_0ce524_data
		mov    %ecx,_0ce528_data
		mov    %edx,_0ce52c_data
		mov    %ebx,_0ce530_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_046740_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    $0x000005,%ebx
		xor    %edx,%edx
		mov    $0x00000f,%ecx
		mov    %dx,_0ccfd4_data
		mov    %bx,_0ccfda_data
		mov    %cx,_0cd006_data
		xor    %ecx,%ecx
		mov    $0x0000ff,%ebp

	_046771_jump:
		mov    _0c916c_data,%eax
		mov    _0c7c6c_data(%ecx),%dl
		mov    %dl,(%ecx,%eax,1)
		mov    _0c7c6d_data(%ecx),%dl
		mov    %dl,0x000001(%ecx,%eax,1)
		mov    _0c7c6e_data(%ecx),%dl
		xor    %ebx,%ebx
		mov    %dl,0x000002(%ecx,%eax,1)
		mov    %ebp,%eax
		mov    _0c7c6c_data(%ecx),%bl
		xor    %edx,%edx
		cmp    %ebx,%eax
		jle    _0467a5_jump
		mov    %ebx,%eax

	_0467a5_jump:
		mov    _0c7c6d_data(%ecx),%dl
		imul   $0x00004d,%edx,%edx
		mov    $0x000064,%ebx
		mov    %al,_0c7c6c_data(%ecx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		cmp    %ebx,%eax
		jle    _0467cc_jump
		mov    %ebx,%eax

	_0467cc_jump:
		mov    _0c7c6e_data(%ecx),%dl
		imul   $0x000007,%edx,%edx
		mov    $0x000064,%ebx
		mov    %al,_0c7c6d_data(%ecx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %ebp,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _0467f4_jump
		mov    %ebx,%eax

	_0467f4_jump:
		mov    %al,_0c7c6b_data(%ecx)
		cmp    $0x000300,%ecx
		jne    _046771_jump
		mov    _0ce504_data,%eax
		mov    %eax,_0ce514_data
		mov    _0ce508_data,%eax
		mov    %eax,_0ce518_data
		mov    _0ce50c_data,%eax
		mov    %eax,_0ce51c_data
		mov    _0ce510_data,%eax
		mov    %eax,_0ce520_data
		xor    %eax,%eax
		mov    %esi,%edx
		mov    %ax,_0cd004_data
		mov    %edi,%eax
		call   _04669c_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_046848_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%ebp
		mov    %ecx,%esi
		mov    _0cd002_data,%ecx
		mov    _0cd004_data,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		add    %edx,%ecx
		mov    %eax,%edx
		sub    %ecx,%edx
		mov    %edx,0x000008(%esp)
		add    %eax,%ecx
		mov    %eax,%edx
		mov    0x000008(%esp),%edi
		sub    %ebx,%edx
		cmp    _0ce51c_data,%edi
		jge    _04688a_jump
		mov    _0ce51c_data,%edi
		mov    %edi,0x000008(%esp)

	_04688a_jump:
		mov    _0ce520_data,%edi
		cmp    %edi,%edx
		jl     _046896_jump
		mov    %edi,%edx

	_046896_jump:
		mov    0x000008(%esp),%edi
		sub    %edi,%edx
		mov    %edx,0x000004(%esp)
		lea    (%eax,%ebx,1),%edx
		mov    _0ce520_data,%eax
		cmp    %eax,%ecx
		jl     _0468ae_jump
		mov    %eax,%ecx

	_0468ae_jump:
		mov    _0ce51c_data,%ebx
		cmp    %ebx,%edx
		jge    _0468ba_jump
		mov    %ebx,%edx

	_0468ba_jump:
		sub    %edx,%ecx
		mov    %ecx,(%esp)
		cmpl   $0x000000,0x000004(%esp)
		jle    _046953_jump
		mov    %ebp,%eax
		mov    _0ce514_data,%edi
		sub    %esi,%eax
		cmp    %edi,%eax
		jl     _04690f_jump
		cmp    _0ce518_data,%eax
		jge    _04690f_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000008(%esp),%edi
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %ecx,%edi
		mov    0x000004(%esp),%ecx
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _046906_jump
		rep stos %al,%es:(%edi)

	_046906_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _04690f_jump
		rep stos %eax,%es:(%edi)

	_04690f_jump:
		mov    _0ce514_data,%edi
		lea    (%esi,%ebp,1),%eax
		cmp    %edi,%eax
		jl     _046953_jump
		cmp    _0ce518_data,%eax
		jge    _046953_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000008(%esp),%edi
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %ecx,%edi
		mov    0x000004(%esp),%ecx
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _04694a_jump
		rep stos %al,%es:(%edi)

	_04694a_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _046953_jump
		rep stos %eax,%es:(%edi)

	_046953_jump:
		cmpl   $0x000000,(%esp)
		jle    _0469dd_jump
		mov    %ebp,%eax
		mov    _0ce514_data,%ebx
		sub    %esi,%eax
		cmp    %ebx,%eax
		jl     _04699d_jump
		cmp    _0ce518_data,%eax
		jge    _04699d_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%edi
		add    %edx,%eax
		mov    (%esp),%ecx
		add    %eax,%edi
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _046994_jump
		rep stos %al,%es:(%edi)

	_046994_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _04699d_jump
		rep stos %eax,%es:(%edi)

	_04699d_jump:
		mov    _0ce514_data,%edi
		add    %ebp,%esi
		cmp    %edi,%esi
		jl     _0469dd_jump
		cmp    _0ce518_data,%esi
		jge    _0469dd_jump
		lea    0x000000(,%esi,4),%eax
		add    %esi,%eax
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%edi
		add    %edx,%eax
		mov    (%esp),%ecx
		add    %eax,%edi
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _0469d4_jump
		rep stos %al,%es:(%edi)

	_0469d4_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _0469dd_jump
		rep stos %eax,%es:(%edi)

	_0469dd_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_0469e8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,0x000010(%esp)
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    %ecx,0x000008(%esp)
		mov    %ebx,%esi
		xor    %edi,%edi
		jmp    _046a17_jump

	_046a01_jump:
		mov    0x000008(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%edx
		inc    %edi
		xor    %ebx,%ebx
		push   %eax
		mov    0x000014(%esp),%eax
		inc    %esi
		call   _046848_func

	_046a17_jump:
		mov    _0cd004_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jle    _046a01_jump
		xor    %edi,%edi
		mov    (%esp),%esi
		mov    %edi,0x000014(%esp)
		test   %esi,%esi
		jl     _046a9a_jump
		mov    $0x000001,%edx
		lea    (%esi,%esi,1),%eax
		sub    %edx,%eax
		mov    %edx,0x00000c(%esp)
		mov    %eax,0x000004(%esp)

	_046a42_jump:
		mov    0x000008(%esp),%ebx
		mov    0x000010(%esp),%eax
		mov    %esi,%ecx
		push   %ebx
		mov    %ebp,%edx
		mov    %edi,%ebx
		call   _046848_func
		mov    0x000008(%esp),%ecx
		mov    0x000010(%esp),%eax
		mov    %esi,%ebx
		push   %ecx
		mov    %ebp,%edx
		mov    %edi,%ecx
		call   _046848_func
		mov    0x00000c(%esp),%eax
		mov    0x000014(%esp),%edx
		inc    %edi
		add    %eax,%edx
		lea    0x000002(%eax),%ebx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x00000c(%esp)
		cmp    %edx,%esi
		jg     _046a96_jump
		mov    0x000004(%esp),%eax
		dec    %esi
		sub    %eax,%edx
		lea    -0x000002(%eax),%ebx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x000004(%esp)

	_046a96_jump:
		cmp    %esi,%edi
		jle    _046a42_jump

	_046a9a_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_046aa4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		testb  $0x000004,_0c32e5_data
		je     _046b5e_jump
		mov    _0cd008_data,%edx
		mov    _0ccfe6_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _046ad1_jump
		neg    %eax

	_046ad1_jump:
		mov    _0cd006_data,%edx
		mov    %eax,%ebx
		mov    _0ccfe4_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _046aee_jump
		neg    %eax

	_046aee_jump:
		cmp    %ebx,%eax
		jge    _046af4_jump
		mov    %ebx,%eax

	_046af4_jump:
		add    $0x000006,%eax
		mov    _0cd002_data,%ebx
		mov    %ax,_0cd006_data
		mov    _0ccfe6_data,%ax
		mov    _0ccfe6_data,%edx
		mov    %ax,_0cd008_data
		mov    _0ccfe8_data,%ax
		sar    $0x000010,%ebx
		mov    %ax,_0cd00a_data
		mov    _0ccfe4_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0469e8_func
		mov    _0ce514_data,%eax
		mov    %eax,_0ce504_data
		mov    _0ce518_data,%eax
		mov    %eax,_0ce508_data
		mov    _0ce51c_data,%eax
		mov    %eax,_0ce50c_data
		mov    _0ce520_data,%eax
		mov    %eax,_0ce510_data

	_046b5e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_046b64_func:
		testb  $0x000004,_0c32e5_data
		je     _046b95_jump
		mov    _0ce514_data,%eax
		mov    %eax,_0ce504_data
		mov    _0ce518_data,%eax
		mov    %eax,_0ce508_data
		mov    _0ce51c_data,%eax
		mov    %eax,_0ce50c_data
		mov    _0ce520_data,%eax
		mov    %eax,_0ce510_data

	_046b95_jump:
		ret    



_046b98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c1b44_data,%cx
		movzbw _0c1b90_data,%si
		xor    %eax,%eax
		mov    _0c1b48_data,%dx
		mov    _0c1b84_data,%al
		add    %edx,%esi
		add    %eax,%ecx
		mov    _0c247c_data,%ax
		mov    %ecx,%edx
		sub    %eax,%edx
		sub    $0x000010,%esi
		add    $0x000008,%edx
		mov    %esi,%eax
		mov    %dx,_0ccfe6_data
		sub    _0c247e_data,%ax
		xor    %ebx,%ebx
		mov    %ax,_0ccfe8_data
		mov    _0ccfe6_data,%ax
		mov    %bx,_0ccfee_data
		mov    %ax,_0cd008_data
		mov    _0ccfe8_data,%ax
		mov    %bx,_0ccff0_data
		mov    %ax,_0cd00a_data
		xor    %al,%al
		jmp    _046c21_jump

	_046c0f_jump:
		inc    %al
		mov    %cx,_0ccff2_data(,%edx,2)
		mov    %si,_0ccffa_data(,%edx,2)

	_046c21_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000004,%edx
		jl     _046c0f_jump
		mov    %cx,_0ccfea_data
		mov    %si,_0ccfec_data
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _095b0d_data,%al
		mov    %bx,_0cd002_data
		test   %eax,%eax
		jne    _046c62_jump
		mov    _0ccfe6_data,%edx
		mov    _0ccfe4_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _046740_func

	_046c62_jump:
		mov    _0ccfea_data,%cx
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_046c70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _046f24_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _046ca5_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000009,%eax
		je     _046f24_jump

	_046ca5_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _046cd3_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000016,%eax
		je     _046f24_jump
		cmp    $0x000020,%eax
		je     _046f24_jump
		cmp    $0x000026,%eax
		je     _046f24_jump

	_046cd3_jump:
		mov    _0cd002_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000032,%eax
		jge    _046d33_jump
		mov    _0c1af2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _046d33_jump
		mov    _0ccfd2_data,%eax
		sar    $0x000010,%eax
		mov    $0x000200,%edx
		call   _0557d0_func
		cwtl   
		sub    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %edx,%eax
		add    %eax,%eax
		sar    $0x000009,%eax
		mov    %ax,_0cd004_data
		mov    _0ccfd2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000080,%eax
		jge    _046d51_jump
		addw   $0x000002,_0ccfd4_data
		jmp    _046d51_jump

	_046d33_jump:
		xor    %eax,%eax
		mov    _0c249a_data,%al
		cmp    $0x000001,%eax
		jl     _046d48_jump
		decw   _0cd004_data
		jmp    _046d51_jump

	_046d48_jump:
		jge    _046d51_jump
		incw   _0cd004_data

	_046d51_jump:
		mov    _0cd000_data,%edx
		sar    $0x000010,%edx
		add    %edx,%edx
		mov    _0c1ed2_data,%ah
		mov    _0ccff2_data(%edx),%si
		mov    _0ccffa_data(%edx),%di
		test   %ah,%ah
		je     _046da2_jump
		mov    _0c1ec0_data,%eax
		xor    %ebx,%ebx
		mov    0x000068(%eax),%bl
		mov    0x000028(%eax),%cx
		add    %ecx,%ebx
		mov    %bx,_0ccff2_data(%edx)
		xor    %ebx,%ebx
		mov    0x00002c(%eax),%cx
		mov    0x000069(%eax),%bl
		add    %ecx,%ebx
		mov    %bx,_0ccffa_data(%edx)
		jmp    _046e48_jump

	_046da2_jump:
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d840_func
		xor    %eax,%eax
		mov    _0c1b44_data,%dx
		mov    _0c1b84_data,%al
		add    %eax,%edx
		mov    _0cd000_data,%eax
		sar    $0x000010,%eax
		mov    %dx,_0ccff2_data(,%eax,2)
		xor    %edx,%edx
		mov    _0c1b48_data,%bx
		mov    _0c1b90_data,%dl
		add    %ebx,%edx
		sub    $0x000004,%edx
		mov    %dx,_0ccffa_data(,%eax,2)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		setg   %al
		mov    (%esp),%edx
		xor    %ah,%ah
		add    %eax,%edx
		mov    _0cd000_data,%eax
		sar    $0x000010,%eax
		mov    %dx,_0ccff2_data(,%eax,2)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		setg   %al
		mov    0x000008(%esp),%edx
		xor    %ah,%ah
		add    %eax,%edx
		mov    _0cd000_data,%eax
		sar    $0x000010,%eax
		mov    %dx,_0ccffa_data(,%eax,2)

	_046e48_jump:
		mov    _0cd002_data,%ax
		mov    _0ccfea_data,%bx
		inc    %eax
		mov    _0ccfee_data,%cx
		mov    %eax,%edx
		mov    %ax,_0cd002_data
		xor    %ah,%dh
		mov    %esi,%eax
		and    $0x000003,%dl
		sub    %ebx,%eax
		mov    %dx,_0cd002_data
		sub    %cx,%ax
		je     _046e8b_jump
		cwtl   
		test   %eax,%eax
		jle    _046e86_jump
		mov    $0x000001,%eax
		jmp    _046e8b_jump

	_046e86_jump:
		mov    $0xffffffff,%eax

	_046e8b_jump:
		mov    _0ccfec_data,%si
		mov    %edi,%edx
		mov    _0ccff0_data,%di
		sub    %esi,%edx
		sub    %di,%dx
		je     _046eb5_jump
		movswl %dx,%edx
		test   %edx,%edx
		jle    _046eb0_jump
		mov    $0x000001,%edx
		jmp    _046eb5_jump

	_046eb0_jump:
		mov    $0xffffffff,%edx

	_046eb5_jump:
		add    %ax,_0ccfee_data
		mov    _0ccfec_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jle    _046ed2_jump
		movw   $0x000008,_0ccfee_data

	_046ed2_jump:
		mov    _0ccfec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff8,%eax
		jge    _046ee8_jump
		movw   $0x00fff8,_0ccfee_data

	_046ee8_jump:
		add    %dx,_0ccff0_data
		mov    _0ccfee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jle    _046f05_jump
		movw   $0x000008,_0ccff0_data

	_046f05_jump:
		mov    _0ccfee_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff8,%eax
		jge    _04700b_jump
		movw   $0x00fff8,_0ccff0_data
		jmp    _04700b_jump

	_046f24_jump:
		mov    _0cd002_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000032,%eax
		jl     _046f52_jump
		mov    $0x000200,%eax
		call   _064360_func
		mov    _0cd004_data,%bx
		sub    $0x000002,%ebx
		mov    %ax,_0ccfd4_data
		mov    %bx,_0cd004_data

	_046f52_jump:
		mov    _0ccfd2_data,%eax
		sar    $0x000010,%eax
		call   _0557d0_func
		mov    _0ccfd8_data,%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %edx,%eax
		sar    $0x000009,%eax
		mov    %ax,_0ccfee_data
		mov    _0ccfd2_data,%eax
		sar    $0x000010,%eax
		call   _055820_func
		mov    _0ccfd8_data,%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %edx,%eax
		sar    $0x000009,%eax
		mov    _0c249a_data,%dl
		mov    %ax,_0ccff0_data
		test   %dl,%dl
		je     _046fbe_jump
		decw   _0cd004_data
		mov    _0cd002_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _046fbe_jump
		xor    %esi,%esi
		mov    %si,_0cd004_data

	_046fbe_jump:
		mov    $0x000032,%eax
		call   _064360_func
		add    %ax,_0ccfd4_data
		mov    _0ccfd2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000200,%eax
		jle    _04700b_jump
		mov    _0ccfda_data,%dx
		inc    %edx
		xor    %eax,%eax
		mov    %dx,_0ccfda_data
		mov    %ax,_0ccfd4_data
		mov    _0ccfd8_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jle    _04700b_jump
		movw   $0x00000a,_0ccfda_data

	_04700b_jump:
		mov    _0ccfee_data,%ax
		mov    _0ccfea_data,%cx
		mov    _0ccfec_data,%si
		add    %eax,%ecx
		mov    _0ccff0_data,%ax
		mov    _0c247c_data,%di
		add    %eax,%esi
		mov    %ecx,%eax
		sub    %edi,%eax
		add    $0x000008,%eax
		mov    _0c247e_data,%dx
		mov    %ax,_0ccfe6_data
		mov    %esi,%eax
		sub    %edx,%eax
		mov    %ax,_0ccfe8_data
		xor    %eax,%eax
		mov    %cx,_0ccfea_data
		mov    _095b0d_data,%al
		mov    %si,_0ccfec_data
		test   %eax,%eax
		jne    _04707f_jump
		mov    _0ccfe6_data,%edx
		mov    _0ccfe4_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _04669c_func

	_04707f_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_047090_switch:
		.long   _0470ec_case
		.long   _0470ec_case
		.long   _0470ec_case
		.long   _0470ec_case
		.long   _0470ec_case
		.long   _0470ec_case




_0470a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0ce83f_data,%al
		mov    _0c6b58_data(%eax),%al
		and    $0x0000ff,%eax
		cmp    $0xffffffff,%eax
		je     _0470c7_jump
		call   _045a5c_func

	_0470c7_jump:
		xor    %eax,%eax
		mov    _095b0d_data,%al
		test   %eax,%eax
		jne    _047117_jump
		mov    _0c24f2_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _0470ec_case
		and    $0x00ffff,%eax
		jmp    *%cs:_047090_switch(,%eax,4)

	_0470ec_case:
		mov    _0cdefc_data,%edx
		mov    _0c94ac_data,%ecx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    _0c94b2_data,%bx
		push   %edx
		xor    %edx,%edx
		mov    _0ce83f_data,%al
		mov    _0c94b0_data,%dx
		call   _06f000_func

	_047117_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04711c_switch:
		.long   _0471e1_case
		.long   _0471e1_case
		.long   _0471e1_case
		.long   _0471e1_case
		.long   _0471e1_case
		.long   _0471e1_case
		.long   _04722f_case
		.long   _0471e1_case
		.long   _0471e1_case
		.long   _0471df_case
		.long   _0471df_case
		.long   _0471e1_case
		.long   _0471e1_case

_047150_switch:
		.long   _0471e1_case
		.long   _0471e1_case
		.long   _04722f_case
		.long   _0471df_case
		.long   _04722f_case
		.long   _04722f_case
		.long   _0471e1_case
		.long   _0471e1_case
		.long   _0471e1_case
		.long   _0471e1_case
		.long   _0471e1_case
		.long   _0471e1_case
		.long   _0471e1_case

_047184_switch:
		.long   _047201_case
		.long   _047235_case
		.long   _047255_case
		.long   _047273_case
		.long   _0471e1_case
		.long   _0471e1_case




_04719c_func:
		push   %ebx
		push   %edx
		mov    _0c24b4_data,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    _0c94b2_data,%bx
		shl    $0x000004,%eax
		xor    %dh,%dh
		cmp    %ebx,%eax
		jge    _0471bf_jump
		mov    $0x000003,%dl
		jmp    _0471c1_jump

	_0471bf_jump:
		xor    %dl,%dl

	_0471c1_jump:
		mov    _0c24f2_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _0471e1_case
		and    $0x00ffff,%eax
		jmp    *%cs:_047184_switch(,%eax,4)

	_0471df_case:
		mov    $0x000003,%dl

	_0471e1_case:
		mov    %dl,_0ce83e_data
		mov    %dh,_0db525_data
		call   _0470a8_func
		mov    _0ce83e_data,%dl
		pop    %edx
		pop    %ebx
		ret    

	_0471fb_jump:
		mov    $0x000001,%dl
		mov    $0x000002,%dh
		jmp    _0471e1_case

	_047201_case:
		mov    _0c24f0_data,%ax
		cmp    $0x000009,%ax
		jb     _047225_jump
		jbe    _0471fb_jump
		cmp    $0x000010,%ax
		jb     _0471e1_case
		jbe    _0471df_case
		cmp    $0x000015,%ax
		jbe    _0471e1_case
		cmp    $0x000016,%ax
		je     _0471df_case
		jmp    _0471e1_case

	_047225_jump:
		cmp    $0x000007,%ax
		jb     _0471e1_case
		jbe    _0471df_case
		jmp    _0471e1_case

	_04722f_case:
		mov    $0x000001,%dl
		mov    $0x000004,%dh
		jmp    _0471e1_case

	_047235_case:
		mov    _0c24f0_data,%ax
		cmp    $0x000007,%ax
		jb     _0471e1_case
		cmp    $0x00000b,%ax
		jbe    _04722f_case
		cmp    $0x000011,%ax
		jbe    _0471e1_case
		cmp    $0x000012,%ax
		je     _04722f_case
		jmp    _0471e1_case

	_047255_case:
		mov    _0c24f0_data,%ax
		dec    %eax
		cmp    $0x00000c,%ax
		ja     _0471e1_case
		and    $0x00ffff,%eax
		jmp    *%cs:_04711c_switch(,%eax,4)

	_047273_case:
		mov    _0c24f0_data,%ax
		dec    %eax
		cmp    $0x00000c,%ax
		ja     _0471e1_case
		and    $0x00ffff,%eax
		jmp    *%cs:_047150_switch(,%eax,4)

_047294_switch:
		.long   _0472c9_case
		.long   _0472ff_case
		.long   _047334_case
		.long   _047341_case




_0472a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c94a0_data,%cx
		mov    _0ce83e_data,%dl
		cmp    $0x000003,%dl
		ja     _04734e_jump
		xor    %eax,%eax
		mov    %dl,%al
		jmp    *%cs:_047294_switch(,%eax,4)

	_0472c9_case:
		xor    %eax,%eax
		mov    _0c247c_data,%edx
		mov    _0c94b2_data,%ax
		sar    $0x000010,%edx
		sub    $0x0000d8,%eax
		imul   %eax,%edx
		mov    _0c24f2_data,%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		mov    %cx,_0c94a0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0472ff_case:
		mov    _0c247c_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    _0db525_data,%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %eax,%edx
		mov    _0c94b2_data,%bx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %edx,%ecx
		mov    %cx,_0c94a0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047334_case:
		xor    %ecx,%ecx
		mov    %cx,_0c94a0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047341_case:
		mov    _0c94b2_data,%cx
		sub    $0x0000d8,%ecx

	_04734e_jump:
		mov    %cx,_0c94a0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_047360_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		call   _06cdd8_func
		test   %al,%al
		je     _0473fb_jump
		call   _0408c0_func
		cmpl   $0x0003e7,_0ce810_data
		je     _0473e7_jump
		cmpb   $0x000000,_0ce841_data
		je     _0473e7_jump
		mov    _0ce800_data,%eax
		call   _077f10_func
		mov    _0ce804_data,%eax
		call   _077f1c_func
		mov    _0ce808_data,%eax
		call   _077f24_func
		mov    _0ce80c_data,%eax
		call   _077f2c_func
		mov    _0ce810_data,%eax
		call   _077f34_func
		call   _077a80_func
		test   %eax,%eax
		je     _0473d0_jump
		mov    $_0c0628_data,%eax
		call   _01f628_func

	_0473d0_jump:
		mov    $0x000001,%cl
		call   _077cac_func
		mov    %cl,_0ce841_data
		call   _06a70c_func
		jmp    _04746a_jump

	_0473e7_jump:
		mov    _0ce810_data,%eax
		xor    %bh,%bh
		call   _077f34_func
		mov    %bh,_0ce841_data
		jmp    _04746a_jump

	_0473fb_jump:
		cmpb   $0x000000,_0ce841_data
		je     _04740e_jump
		call   _077cac_func
		call   _06a70c_func

	_04740e_jump:
		mov    $0x00000d,%edx
		mov    $0x000012,%ebx
		mov    $0x000001,%ecx
		mov    $0x000003,%eax
		xor    %edi,%edi
		mov    %dx,_0cd024_data
		mov    %bx,_0cd026_data
		mov    %cx,_0cd028_data
		mov    %cx,_0cd01c_data
		mov    %di,_0cd01e_data
		mov    %ax,_0cd022_data
		mov    $0x000012,%eax
		xor    %dl,%dl
		call   _06a6e4_func
		mov    %dl,_095b0d_data
		call   _0408c0_func
		mov    %dl,_0cd74c_data

	_04746a_jump:
		xor    %eax,%eax
		mov    _0cd74c_data,%al
		cmp    $0x000003,%eax
		jl     _04747e_jump
		xor    %ch,%ch
		mov    %ch,_0cd74c_data

	_04747e_jump:
		xor    %edx,%edx
		mov    $_0c6afc_data,%eax
		mov    _0cd74c_data,%dl
		call   _0460a4_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_047498_func:
		push   %ebx
		push   %edx
		cmp    $0x000001,%al
		jb     _0474e9_jump
		jbe    _0474c3_jump
		cmp    $0x000002,%al
		je     _0474df_jump
		jmp    _0474ed_jump

	_0474a6_jump:
		mov    $0x000001,%dh
		mov    $0x00003c,%eax
		xor    %ebx,%ebx
		mov    %dh,_0c6b47_data
		call   _03b678_jump
		mov    %bx,_0c6b4e_data
		jmp    _0474ed_jump

	_0474c3_jump:
		movb   $0x000001,_0c6b47_data
		xor    %edx,%edx
		mov    $0x000032,%eax
		mov    %dx,_0c6b4e_data
		call   _03b678_jump
		jmp    _0474ed_jump

	_0474df_jump:
		xor    %ah,%ah
		mov    %ah,_0c6b47_data
		jmp    _0474ed_jump

	_0474e9_jump:
		test   %al,%al
		je     _0474a6_jump

	_0474ed_jump:
		call   _0361c8_func
		pop    %edx
		pop    %ebx
		ret    



_0474f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		xor    %eax,%eax
		mov    _095b0d_data,%al
		test   %eax,%eax
		jne    _0475ca_jump
		cmpb   $0x000000,_0c32f4_data
		je     _047569_jump
		mov    _0ce7e6_data,%eax
		mov    _096156_data,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		mov    _09614e_data(,%eax,2),%ebx
		mov    _096146_data(,%eax,2),%edx
		sar    $0x000010,%ebx
		mov    _09613e_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0546ac_func
		mov    _0ce508_data,%edx
		mov    _0ce504_data,%ecx
		mov    _0ce510_data,%ebx
		mov    _0ce50c_data,%eax
		call   _016349_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047569_jump:
		mov    _0ce7e6_data,%eax
		sar    $0x000010,%eax
		mov    _096156_data(,%eax,2),%ecx
		mov    _09614e_data(,%eax,2),%ebx
		mov    _096146_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09613e_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0546ac_func
		mov    _0ce508_data,%edx
		mov    _0ce504_data,%ecx
		mov    _0ce510_data,%ebx
		mov    _0ce50c_data,%eax
		call   _016349_func
		mov    _0cdefc_data,%edi
		call   _014f74_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0475ca_jump:
		call   _0162e3_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0475e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xffffffff,%esi
		mov    _0c1b04_data,%edx
		mov    _0c1b08_data,%cx
		xor    %eax,%eax
		mov    %esi,%edi
		test   %cx,%cx
		jle    _047627_jump
		jmp    _047615_jump

	_047602_jump:
		cmp    $0x000070,%ebx
		jne    _047609_jump
		mov    %eax,%edi

	_047609_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _047627_jump

	_047615_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x0000cb,%ebx
		jne    _047602_jump
		mov    %eax,%esi
		jmp    _047609_jump

	_047627_jump:
		mov    %di,_0dbb7e_data
		mov    %si,_0dbb80_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04763c_func:
		push   %edx
		mov    _0c259a_data,%dx
		mov    %dx,_0c25a2_data
		mov    _0c259c_data,%dx
		mov    %dx,_0c25a4_data
		call   _0186d4_func
		mov    _0ce508_data,%dx
		sub    _0ce504_data,%dx
		mov    %ax,_0c4598_data
		sub    %edx,%eax
		sub    $0x000010,%eax
		mov    %ax,_0c25a6_data
		mov    _0c24f4_data,%ax
		mov    %ax,_0c25a8_data
		call   _018750_func
		pop    %edx
		ret    



_047690_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,_0c25b1_data
		jne    _047753_jump
		mov    _0c25a2_data,%ecx
		mov    _0c24be_data,%eax
		mov    _0c25a0_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0c247a_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _0476d7_jump
		cmp    %ecx,%eax
		jg     _0476d7_jump
		mov    $0x000001,%eax
		jmp    _0476d9_jump

	_0476d7_jump:
		xor    %eax,%eax

	_0476d9_jump:
		test   %eax,%eax
		je     _04771c_jump
		mov    _0c25a6_data,%ecx
		mov    _0c24c0_data,%eax
		mov    _0c25a4_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0c247c_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _047712_jump
		cmp    %ecx,%eax
		jg     _047712_jump
		mov    $0x000001,%eax
		jmp    _047714_jump

	_047712_jump:
		xor    %eax,%eax

	_047714_jump:
		test   %eax,%eax
		je     _04771c_jump
		mov    $0x000001,%al
		jmp    _04771e_jump

	_04771c_jump:
		xor    %al,%al

	_04771e_jump:
		mov    %al,_0c25b1_data
		test   %al,%al
		je     _047783_jump
		mov    _0c247c_data,%ax
		mov    %ax,_0c259c_data
		mov    %ax,_0c259a_data
		mov    _0c25a6_data,%ax
		mov    %ax,_0c259e_data
		mov    _0c25a8_data,%ax
		mov    %ax,_0c25a0_data
		jmp    _047783_jump

	_047753_jump:
		mov    0x00007f(%edx),%bl
		test   %bl,%bl
		je     _04776a_jump
		cmpb   $0x000000,_0c249a_data
		jne    _04776a_jump
		mov    %bl,%cl
		dec    %cl
		mov    %cl,0x00007f(%edx)

	_04776a_jump:
		mov    _0c259e_data,%ax
		mov    _0c247e_data,%bx
		cmp    %bx,%ax
		jge    _047783_jump
		mov    %bx,_0c259e_data

	_047783_jump:
		cmpb   $0x000000,_0c25b1_data
		je     _047798_jump
		cmpb   $0x000000,0x00007f(%edx)
		jne    _047798_jump
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047798_jump:
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0477a0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		test   %dl,%dl
		jbe    _0477b2_jump
		cmp    $0x000001,%dl
		je     _0477dd_jump
		jmp    _04780c_jump

	_0477b2_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0c2598_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dh
		mov    %eax,0x000028(%ebx)
		or     $0x000008,%dh
		mov    $0xffffffff,%eax
		mov    %dh,0x000081(%ebx)
		jmp    _047877_jump

	_0477dd_jump:
		mov    _0c259a_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ebx),%al
		add    $0x000130,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%ebx)
		mov    0x000081(%ebx),%dl
		and    $0x0000f7,%dl
		mov    $0x000001,%eax
		mov    %dl,0x000081(%ebx)
		jmp    _047877_jump

	_04780c_jump:
		mov    _0c2598_data,%esi
		mov    _0c259a_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		lea    0x000140(%esi,%edi,1),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x000068(%ebx),%cl
		add    %ecx,%ebp
		sub    %eax,%ebp
		mov    %ebp,%eax
		movswl %ax,%edx
		test   %edx,%edx
		jle    _047863_jump
		add    $0x000130,%edi
		sub    %ecx,%edi
		mov    0x000081(%ebx),%ch
		mov    %edi,0x000028(%ebx)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%ebx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_047863_jump:
		sub    %ecx,%esi
		mov    0x000081(%ebx),%cl
		mov    %esi,0x000028(%ebx)
		or     $0x000008,%cl
		mov    %cl,0x000081(%ebx)

	_047877_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_047880_func:
		push   %edx
		mov    _0dbb66_data,%eax
		sar    $0x000010,%eax
		call   _055820_func
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000009,%edx
		sbb    %edx,%eax
		sar    $0x000009,%eax
		mov    _0dbb62_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    %ax,_0c25aa_data
		mov    _0dbb66_data,%eax
		sar    $0x000010,%eax
		call   _0557d0_func
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000009,%edx
		sbb    %edx,%eax
		sar    $0x000009,%eax
		mov    _0dbb64_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		addw   $0x000004,_0dbb68_data
		mov    %ax,_0c25ac_data
		mov    _0dbb66_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000200,%eax
		jle    _047918_jump
		movw   $0x008300,_0dbb68_data

	_047918_jump:
		pop    %edx
		ret    

_04791c_switch:
		.long   _04795d_case
		.long   _0479c7_case
		.long   _04796a_case
		.long   _0479c7_case
		.long   _04796a_case
		.long   _0479c7_case
		.long   _04798f_case




_047938_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,(%esp)
		jmp    _047a95_jump

	_04794c_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %di,%ax
		jl     _0479b0_jump
		jmp    _047a91_jump

	_04795d_case:
		xor    %dl,%bl
		mov    %bl,0x00000c(%esp)
		movb   $0x000001,0x000008(%esp)
		jmp    _0479c7_case

	_04796a_case:
		testb  $0x000008,0x000081(%esi)
		je     _047981_jump
		mov    $0x000004,%bh
		mov    $0x000005,%dh
		mov    %bh,0x00000c(%esp)
		mov    %dh,0x000008(%esp)
		jmp    _0479c7_case

	_047981_jump:
		mov    $0x000002,%dh
		mov    $0x000003,%bl
		mov    %dh,0x00000c(%esp)
		mov    %bl,0x000008(%esp)
		jmp    _0479c7_case

	_04798f_case:
		testb  $0x000008,0x000081(%esi)
		je     _04799d_jump
		movb   $0x000001,0x000004(%esp)

	_04799d_jump:
		mov    $0x000006,%dh
		mov    $0x000007,%bl
		mov    %dh,0x00000c(%esp)
		mov    %bl,0x000008(%esp)
		jmp    _0479c7_case

	_0479ab_jump:
		mov    0x00006c(%esi),%dl
		dec    %dl

	_0479b0_jump:
		xor    %dh,%dh
		mov    %dh,0x000004(%esp)
		cmp    $0x000006,%dl
		ja     _0479c7_case
		xor    %ebx,%ebx
		mov    %dl,%bl
		jmp    *%cs:_04791c_switch(,%ebx,4)

	_0479c7_case:
		xor    %ebx,%ebx
		mov    0x000060(%ecx),%bx
		cmp    $0x0000c2,%ebx
		jne    _04794c_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _04794c_jump
		mov    0x00000c(%esp),%bl
		mov    0x00006c(%ecx),%dh
		cmp    %bl,%dh
		je     _0479f8_jump
		cmp    0x000008(%esp),%dh
		jne    _04794c_jump

	_0479f8_jump:
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f584_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    (%esp),%bl
		mov    %eax,0x00002c(%ecx)
		test   %bl,%bl
		je     _047a49_jump
		mov    0x000008(%esp),%al
		jmp    _047a4d_jump

	_047a49_jump:
		mov    0x00000c(%esp),%al

	_047a4d_jump:
		xor    %ebx,%ebx
		mov    $0x000001,%edx
		mov    %al,%bl
		mov    %ecx,%eax
		call   _01d4a8_func
		mov    %ecx,%eax
		call   _01dcec_func
		mov    0x000004(%esp),%al
		mov    $0x000001,%ebx
		test   %al,%al
		je     _047a7a_jump
		cmpb   $0x000000,(%esp)
		sete   %al
		jmp    _047a81_jump

	_047a7a_jump:
		cmpb   $0x000000,(%esp)
		setne  %al

	_047a81_jump:
		and    $0x0000ff,%eax
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ecx,%eax
		call   _058bb4_func

	_047a91_jump:
		addb   $0x000002,(%esp)

	_047a95_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x000002,%eax
		jg     _047ab9_jump
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%di
		xor    %eax,%eax
		test   %di,%di
		jg     _0479ab_jump
		jmp    _047a91_jump

	_047ab9_jump:
		mov    %esi,%eax
		call   _072b98_func
		mov    0x000032(%esi),%edx
		mov    $0x0000dc,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		mov    0x000081(%esi),%bl
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%esi)
		add    $0x000010,%esp

	_047ae9_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_047af0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		mov    $0xffffffff,%edi
		movswl %si,%edx
		cmp    $0x000008,%edx
		jge    _047ae9_jump
		xor    %eax,%eax
		jmp    _047b16_jump

	_047b08_jump:
		inc    %esi
		movswl %si,%edx
		cmp    $0x000008,%edx
		jge    _047ae9_jump
		xor    %eax,%eax
		jmp    _047b16_jump

	_047b15_jump:
		inc    %eax

	_047b16_jump:
		movswl %ax,%edx
		cmp    $0x000008,%edx
		jge    _047b08_jump
		movswl %si,%ebx
		add    %edx,%edx
		shl    $0x000004,%ebx
		add    %edx,%ebx
		mov    _0dbb86_data(%ebx),%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _047b15_jump
		imul   $0x000084,%edx,%ecx
		mov    _0c1b04_data,%edx
		movb   $0x000046,0x00007f(%ecx,%edx,1)
		mov    %di,_0dbb88_data(%ebx)
		jmp    _047b15_jump

_047b50_switch:
		.long   _047d18_case
		.long   _047d4b_case
		.long   _047d63_case
		.long   _047d91_case
		.long   _047d18_case
		.long   _047d4b_case
		.long   _047d7b_case
		.long   _047d91_case
		.long   _047dab_case




_047b74_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%edi
		xor    %eax,%eax
		mov    _0dbb6c_data,%al
		cmp    $0x0000fe,%eax
		jne    _047cb1_jump
		mov    _0dbb76_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		jne    _047cb1_jump
		mov    _0c1b44_data,%dx
		movzbw 0x000068(%edi),%si
		mov    0x000028(%edi),%bx
		xor    %eax,%eax
		add    %ebx,%esi
		mov    _0c1b84_data,%al
		movswl %si,%ebx
		add    %edx,%eax
		lea    0x000008(%ebx),%ecx
		cwtl   
		sub    $0x000008,%ebx
		cmp    %ebx,%eax
		jl     _047bd8_jump
		cmp    %ecx,%eax
		jg     _047bd8_jump
		mov    $0x000001,%eax
		jmp    _047bda_jump

	_047bd8_jump:
		xor    %eax,%eax

	_047bda_jump:
		test   %eax,%eax
		je     _047ca7_jump
		mov    _0c1b04_data,%ebx
		mov    _0c1b08_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _047c0b_jump
		jmp    _047c98_jump

	_047bfb_jump:
		inc    %eax
		add    $0x000084,%ebx
		cmp    %cx,%ax
		jge    _047c98_jump

	_047c0b_jump:
		xor    %edx,%edx
		mov    0x000060(%ebx),%dx
		cmp    $0x0000c1,%edx
		jne    _047bfb_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _047bfb_jump
		mov    _0ce504_data,%ebp
		mov    0x000081(%ebx),%dl
		xor    %eax,%eax
		and    $0x0000f7,%dl
		mov    0x000068(%ebx),%al
		mov    %dl,0x000081(%ebx)
		movswl %si,%edx
		movb   $0x000000,0x00006c(%ebx)
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %edx,0x000028(%ebx)
		mov    _0ce508_data,%edx
		mov    0x000069(%edi),%al
		mov    0x00002c(%edi),%ecx
		movzbl 0x000069(%ebx),%edi
		add    %ecx,%eax
		sub    %ebp,%edx
		sub    %edi,%eax
		mov    $0x000012,%ecx
		mov    %eax,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		shl    $0x000002,%eax
		movl   $0x000001,0x000024(%ebx)
		sub    %edx,%eax
		mov    0x000081(%ebx),%dh
		sub    %eax,%edi
		or     $0x000004,%dh
		mov    %edi,0x00002c(%ebx)
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		call   _01f584_func
		movb   $0x000032,0x00007f(%ebx)

	_047c98_jump:
		mov    $0x0000ff,%bl
		mov    %si,_0dbb78_data
		mov    %bl,_0dbb6c_data

	_047ca7_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047cb1_jump:
		xor    %ah,%ah
		mov    %ah,0x000014(%esp)
		jmp    _047f2f_jump

	_047cbc_jump:
		xor    %edx,%edx
		mov    0x000028(%edi),%bx
		mov    0x000068(%edi),%dl
		add    %edx,%ebx
		mov    %bx,0x000008(%esp)
		test   %eax,%eax
		jne    _047dc7_jump
		mov    _0ce510_data,%edx
		sub    _0ce50c_data,%edx
		mov    $0x000009,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0dbb76_data,%ebx
		mov    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sub    %ebx,%eax
		test   %eax,%eax
		jge    _047d06_jump
		neg    %eax

	_047d06_jump:
		cmp    %edx,%eax
		jge    _047dc7_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047d18_case:
		xor    %cl,%cl
		mov    %cl,0x000010(%esp)
		mov    %cl,0x00000c(%esp)

	_047d22_jump:
		cmpw   $0x000000,0x000008(%esp)
		je     _047f1a_jump
		mov    _0c1b04_data,%ebx
		mov    _0c1b08_data,%si
		xor    %ecx,%ecx
		test   %si,%si
		jg     _047e27_jump
		jmp    _047efa_jump

	_047d4b_case:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		mov    $0x000002,%bh
		shr    $0x000007,%al
		mov    %bh,0x000010(%esp)
		mov    %al,0x00000c(%esp)
		jmp    _047d22_jump

	_047d63_case:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		mov    $0x000006,%bl
		shr    $0x000007,%al
		mov    %bl,0x000010(%esp)
		mov    %al,0x00000c(%esp)
		jmp    _047d22_jump

	_047d7b_case:
		mov    $0x000006,%ch
		mov    0x000081(%edi),%ah
		mov    %ch,0x000010(%esp)
		test   $0x000008,%ah
		sete   0x00000c(%esp)
		jmp    _047d22_jump

	_047d91_case:
		movb   $0x000004,0x000010(%esp)
		mov    0x000081(%edi),%dh
		test   $0x000008,%dh
		sete   %al
		mov    %al,0x00000c(%esp)
		jmp    _047d22_jump

	_047dab_case:
		mov    $0xffffffff,%ecx
		xor    %esi,%esi
		shl    $0x000004,%eax
		mov    %si,0x000008(%esp)
		mov    %cx,_0dbb88_data(%ebx,%eax,1)
		jmp    _047d22_jump

	_047dc7_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000014(%esp),%al
		mov    _0dbb6c_data,%dl
		lea    0x000000(,%eax,4),%ebx
		mov    _0dbb70_data(%eax),%cl
		mov    _096514_data(,%edx,4),%edx
		inc    %cl
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    %cl,_0dbb70_data(%eax)
		mov    %cl,%bl
		mov    (%edx),%edx
		add    %ebx,%ebx
		mov    (%edx,%ebx,1),%dx
		cmp    $0x000008,%dx
		ja     _047d22_jump
		and    $0x00ffff,%edx
		jmp    *%cs:_047b50_switch(,%edx,4)

	_047e17_jump:
		inc    %ecx
		add    $0x000084,%ebx
		cmp    %si,%cx
		jge    _047efa_jump

	_047e27_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		cmp    $0x0000c1,%eax
		jne    _047e17_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _047e17_jump
		mov    0x000010(%esp),%al
		mov    %al,0x00006c(%ebx)
		mov    0x00000c(%esp),%al
		and    $0x000001,%al
		mov    0x000081(%ebx),%ah
		and    $0x0000f7,%ah
		shl    $0x000003,%al
		mov    %ah,%dl
		movzbl 0x000014(%esp),%ebp
		or     %al,%dl
		xor    %eax,%eax
		mov    %dl,0x000081(%ebx)
		mov    _0dbb70_data(%ebp),%al
		add    %eax,%eax
		mov    %eax,0x000004(%esp)
		mov    %ebp,%eax
		mov    0x000004(%esp),%edx
		shl    $0x000004,%eax
		add    %edx,%eax
		mov    %cx,_0dbb88_data(%eax)
		xor    %eax,%eax
		mov    0x000068(%ebx),%al
		mov    %eax,(%esp)
		mov    0x000006(%esp),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		movb   $0x000000,0x00006b(%ebx)
		sub    %edx,%eax
		mov    %eax,0x000028(%ebx)
		xor    %eax,%eax
		mov    0x00002c(%edi),%edx
		mov    0x000069(%edi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%ebx),%al
		sub    %eax,%edx
		mov    _0ce504_data,%eax
		mov    %edx,(%esp)
		mov    _0ce508_data,%edx
		sub    %eax,%edx
		movl   $0x000012,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		sub    $0x000006,%ebp
		imul   %ebp,%eax
		mov    (%esp),%edx
		add    %eax,%edx
		mov    %edx,0x00002c(%ebx)
		mov    0x000081(%ebx),%dh
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%dh
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		call   _01f584_func

	_047efa_jump:
		cmp    %si,%cx
		jl     _047f1a_jump
		xor    %eax,%eax
		mov    0x000014(%esp),%al
		xor    %edx,%edx
		mov    _0dbb70_data(%eax),%dl
		shl    $0x000004,%eax
		movw   $0x00ffff,_0dbb88_data(%eax,%edx,2)

	_047f1a_jump:
		xor    %eax,%eax
		mov    0x000028(%edi),%dx
		mov    0x000068(%edi),%al
		add    %edx,%eax
		mov    %ax,_0dbb78_data

	_047f2b_jump:
		incb   0x000014(%esp)

	_047f2f_jump:
		xor    %eax,%eax
		mov    0x000014(%esp),%al
		cmp    $0x000008,%eax
		jge    _047ca7_jump
		xor    %edx,%edx
		mov    _0dbb70_data(%eax),%dl
		cmp    $0x000007,%edx
		jne    _047cbc_jump
		mov    $0x0000ff,%dl
		mov    %dl,_0dbb6c_data
		mov    %dl,_0dbb70_data(%eax)
		movw   $0x008300,_0dbb78_data
		jmp    _047f2b_jump



_047f68_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		movzbl %dl,%esi
		mov    %esi,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		mov    0x00000c(%ecx),%eax
		lea    0x000000(,%esi,8),%edx
		movb   $0x000000,0x00006b(%ecx)
		mov    (%eax),%esi
		mov    0x000002(%edx,%esi,1),%dl
		mov    %dl,0x00006a(%ecx)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_047f94_func:
		test   %dl,%dl
		je     _047fa0_jump
		movw   $0x0000d5,0x000060(%eax)
		jmp    _047fa6_jump

	_047fa0_jump:
		movw   $0x000062,0x000060(%eax)

	_047fa6_jump:
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		mov    _0930b4_data(,%edx,2),%dx
		mov    %dx,0x00005c(%eax)
		ret    

_047fbc_switch:
		.long   _048b6b_case
		.long   _048abc_case
		.long   _048b6b_case
		.long   _048b4e_case
		.long   _048b6b_case

_047fd0_switch:
		.long   _048107_case
		.long   _04810d_case
		.long   _04813a_case
		.long   _0480ea_case
		.long   _0480ea_case
		.long   _0483f6_case
		.long   _0480ea_case
		.long   _0484cc_case
		.long   _0485af_case
		.long   _0480ea_case
		.long   _0480ea_case
		.long   _0480ea_case
		.long   _04863e_case
		.long   _048766_case
		.long   _0487cb_case
		.long   _0488af_case
		.long   _04890d_case
		.long   _0480ea_case
		.long   _048a4b_case
		.long   _048c97_case
		.long   _0480ea_case
		.long   _048ce1_case
		.long   _048d97_case
		.long   _048e7c_case
		.long   _049007_case
		.long   _048e75_case
		.long   _048a02_case
		.long   _04911b_case
		.long   _0491b8_case
		.long   _049360_case
		.long   _048e53_case
		.long   _0490bb_case
		.long   _048bfc_case
		.long   _048bfc_case
		.long   _048b23_case
		.long   _048b88_case
		.long   _04881c_case
		.long   _049058_case
		.long   _0486ce_case
		.long   _048d2b_case
		.long   _0482f8_case
		.long   _04843c_case
		.long   _0481f4_case
		.long   _048bfc_case
		.long   _0482c1_case
		.long   _048e7c_case
		.long   _048191_case




_04808c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    _0dbb7e_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c1b04_data,%edi
		add    %edx,%eax
		mov    _0dbb7c_data,%edx
		shl    $0x000002,%eax
		sar    $0x000010,%edx
		lea    (%edi,%eax,1),%ebp
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%edi
		movb   $0x0000ff,0x000004(%esp)
		mov    _0dbb66_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		jne    _0480f7_jump
		mov    %esi,%eax
		add    $0x000081,%eax
		mov    %eax,(%esp)

	_0480ea_case:
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump

	_0480f7_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048107_case:
		incb   _0c25b7_data

	_04810d_case:
		xor    %ah,%ah
		mov    $0x000001,%dl
		mov    %ah,_0c25b3_data
		mov    %dl,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04813a_case:
		mov    _0c25b8_data,%al
		mov    %al,_0c25b7_data
		mov    _0c25b2_data,%al
		mov    %al,_0c25b3_data
		xor    %eax,%eax
		mov    _0c25b3_data,%al
		cmp    $0x0000ff,%eax
		jne    _048166_jump
		mov    %al,%bh
		inc    %bh
		mov    %bh,_0c25b3_data

	_048166_jump:
		movb   $0x000001,_0c25b4_data
		movb   $0x0000ff,_0c25b8_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048191_case:
		mov    $0xffff8300,%edx
		mov    $0x000036,%ebx
		mov    $_0c1b1c_data,%eax
		mov    %dx,_0c257c_data
		mov    $0x000003,%edx
		call   _01d4a8_func
		mov    $0x000001,%bl
		mov    $0x000001,%edx
		mov    $_0c1b1c_data,%eax
		mov    %bl,_0c2570_data
		call   _01d354_func
		xor    %bh,%bh
		sub    $0x000003,%eax
		mov    %bh,_0c25b4_data
		mov    %ax,0x000048(%esi)
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0481f4_case:
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    _0c1b44_data,%ax
		xor    %edx,%edx
		mov    %ax,_0c257c_data
		mov    %esi,%eax
		call   _058bb4_func
		mov    $0x000001,%bl
		movw   $0x000000,0x000048(%esi)
		mov    %bl,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048247_jump:
		mov    $0x000010,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x00002b,%edx
		mov    %ebp,%eax
		call   _047f68_func
		mov    0x00006c(%edi),%al
		xor    %edx,%edx
		inc    %al
		mov    %al,%dl
		mov    %edi,%eax
		mov    $0x000001,%ebx
		call   _01d498_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _058bb4_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%edi)
		xor    %dl,%dl
		mov    0x00002c(%esi),%eax
		movb   $0x000000,0x00006b(%edi)
		mov    %dl,_0c25b4_data
		mov    %eax,0x00002c(%edi)
		jmp    _0482d4_jump

	_048299_jump:
		mov    0x000081(%ebp),%cl
		xor    %al,%al
		and    $0x0000fb,%cl
		mov    %al,_0c25b3_data
		mov    $0x000001,%ah
		mov    %cl,0x000081(%ebp)
		mov    $0x000006,%ch
		mov    %ah,_0c25b4_data
		mov    %ch,_0c25b7_data
		jmp    _0482d4_jump

	_0482c1_case:
		mov    0x00006c(%edi),%al
		cmp    $0x000025,%al
		jb     _0482d4_jump
		cmp    $0x000029,%al
		jbe    _048247_jump
		cmp    $0x00002a,%al
		je     _048299_jump

	_0482d4_jump:
		movb   $0x0000ff,_0c25b6_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0482f8_case:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    0x00002c(%esi),%ax
		mov    %ax,_0c25ac_data
		mov    _0c1ec0_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		je     _0483c3_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _058bb4_func
		mov    0x00000c(%esi),%eax
		mov    (%eax),%eax
		mov    0x000046(%esi),%edx
		mov    0x00000d(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %ax,_0c25aa_data
		mov    _0c1ec0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04837a_jump
		mov    _0c25aa_data,%dx
		mov    0x000028(%esi),%ax
		add    %eax,%edx
		mov    %dx,_0c25aa_data
		jmp    _04838f_jump

	_04837a_jump:
		jle    _04838f_jump
		mov    _0c25aa_data,%cx
		mov    0x000028(%esi),%ax
		sub    %ecx,%eax
		mov    %ax,_0c25aa_data

	_04838f_jump:
		mov    $0x0000ff,%ch
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ch,_0c25ae_data
		mov    %ch,_0c25b0_data
		mov    %ah,_0c25af_data
		mov    $0x0000ff,%ecx
		mov    %esi,%eax
		mov    %ecx,%ebx
		call   _018420_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		jmp    _0483cc_jump

	_0483c3_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx

	_0483cc_jump:
		call   _058bb4_func
		xor    %dl,%dl
		mov    %dl,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0483f6_case:
		mov    %esi,%eax
		call   _071d94_func
		xor    %bl,%bl
		mov    $0x000001,%eax
		mov    _0c32ec_data,%dh
		mov    %bl,_0c25b4_data
		or     $0x000020,%dh
		mov    %ax,_0c24ec_data
		mov    %dh,_0c32ec_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04843c_case:
		mov    %esi,%eax
		mov    0x000081(%esi),%dl
		call   _01dc54_func
		mov    0x000081(%esi),%al
		xor    %ebx,%ebx
		shl    $0x000004,%al
		shl    $0x000004,%dl
		shr    $0x000007,%al
		shr    $0x000007,%dl
		mov    %al,%bl
		xor    %eax,%eax
		mov    %dl,%al
		cmp    %eax,%ebx
		je     _0484a8_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		xor    %cl,%cl
		call   _058bb4_func
		mov    %cl,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0484a8_jump:
		movb   $0x000001,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0484cc_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %bl,%bl
		movb   $0x000003,0x00007e(%esi)
		mov    %bl,_0dbb7c_data
		mov    %bl,_0dbb7b_data
		call   _047f94_func
		mov    $0x00002c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _0477a0_func
		mov    0x000028(%esi),%eax
		sub    $0x000090,%eax
		xor    %edx,%edx
		mov    %eax,0x000028(%esi)
		mov    _0c4596_data,%eax
		mov    0x000069(%esi),%dl
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    0x000081(%esi),%cl
		sub    $0x000020,%eax
		and    $0x0000f7,%cl
		mov    %eax,0x00002c(%esi)
		xor    %eax,%eax
		mov    _0c259a_data,%dx
		mov    0x000068(%esi),%al
		mov    %cl,0x000081(%esi)
		sub    %eax,%edx
		mov    $0x000001,%ch
		mov    %edx,%eax
		mov    %ch,_0c25af_data
		add    $0x000032,%eax
		mov    $0x0000ff,%ecx
		mov    %ax,_0c25aa_data
		mov    0x00002c(%esi),%ax
		mov    %ecx,%ebx
		mov    %ax,_0c25ac_data
		mov    $0x0000ff,%al
		mov    $0x000001,%edx
		mov    %al,_0c25ae_data
		mov    %al,_0c25b0_data
		mov    %esi,%eax
		call   _018420_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _058bb4_func
		xor    %dl,%dl
		mov    %dl,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0485af_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000004,%ecx
		call   _047f94_func
		mov    $0x000001,%edx
		mov    0x000028(%esi),%ax
		mov    %cx,_0dbb68_data
		mov    %ax,_0dbb64_data
		mov    0x00002c(%esi),%ax
		mov    $0x0000ff,%ecx
		sub    $0x00003c,%eax
		mov    %ecx,%ebx
		mov    %ax,_0dbb66_data
		call   _047880_func
		mov    %esi,%eax
		call   _018420_func
		mov    $0x000001,%al
		mov    $0x000001,%ebx
		mov    %al,_0c25af_data
		mov    $0x0000ff,%ah
		mov    %ebx,%edx
		mov    %ah,_0c25ae_data
		mov    %ah,_0c25b0_data
		mov    %esi,%eax
		call   _058bb4_func
		xor    %dh,%dh
		mov    %dh,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04863e_case:
		mov    $0x000001,%edx
		mov    $0x000001,%bl
		mov    %esi,%eax
		mov    $0x0000ff,%ecx
		call   _047f94_func
		mov    0x000028(%esi),%ax
		mov    _0c4598_data,%dx
		add    $0x00006e,%eax
		mov    %bl,_0c25af_data
		mov    %ax,_0c25aa_data
		xor    %eax,%eax
		mov    $0x0000ff,%bh
		mov    0x000069(%esi),%al
		mov    %bh,_0c25ae_data
		sub    %eax,%edx
		mov    %bh,_0c25b0_data
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x00007c,%eax
		mov    $0x000001,%edx
		mov    %ax,_0c25ac_data
		mov    %esi,%eax
		call   _018420_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _058bb4_func
		mov    %ch,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0486ce_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _047f94_func
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %cl,%cl
		call   _01d4a8_func
		mov    $0x000001,%bl
		mov    _0c4598_data,%ax
		mov    %cl,_0c25b0_data
		xor    %edx,%edx
		mov    %bl,_0c25af_data
		mov    0x000069(%esi),%dl
		xor    %ecx,%ecx
		mov    $0x0000ff,%bh
		sub    %edx,%eax
		mov    $0x000001,%edx
		mov    %ax,_0c25ac_data
		mov    %bh,_0c25ae_data
		mov    0x000028(%esi),%ax
		mov    $0x0000ff,%ebx
		mov    %ax,_0c25aa_data
		mov    %esi,%eax
		call   _018420_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _058bb4_func
		mov    %ch,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048766_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x00000a,%ebx
		call   _047f94_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ebp)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ebp)
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%edi)
		mov    $0x000001,%ebx
		mov    0x00002c(%esi),%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%edi)
		mov    %esi,%eax
		call   _058bb4_func
		xor    %dh,%dh
		mov    %dh,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0487cb_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000025,%ebx
		call   _047f94_func
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		orb    $0x000004,0x000081(%edi)
		mov    %edi,%eax
		call   _01f584_func
		mov    %edi,%eax
		mov    $0x000001,%dl
		call   _01dcec_func
		mov    %dl,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04881c_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _047f94_func
		testb  $0x000004,0x000081(%edi)
		jne    _048838_jump
		mov    %edi,%eax
		call   _01f584_func

	_048838_jump:
		orb    $0x000004,0x000081(%edi)
		movb   $0x000006,0x00007e(%esi)
		testb  $0x000004,0x000081(%ebp)
		jne    _048853_jump
		mov    %ebp,%eax
		call   _01f584_func

	_048853_jump:
		mov    $0x000013,%ebx
		mov    0x000081(%ebp),%cl
		mov    %esi,%eax
		or     $0x000004,%cl
		xor    %edx,%edx
		mov    %cl,0x000081(%ebp)
		call   _01d4a8_func
		mov    $0x000024,%edx
		mov    %ebp,%eax
		mov    $0x000001,%ebx
		call   _047f68_func
		mov    %esi,%eax
		xor    %edx,%edx
		xor    %ch,%ch
		call   _058bb4_func
		mov    %ch,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0488af_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _047f94_func
		mov    $0x000001,%eax
		call   _064360_func
		test   %ax,%ax
		je     _0488cd_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		jmp    _0488d4_jump

	_0488cd_jump:
		mov    $0x000009,%ebx
		mov    %esi,%eax

	_0488d4_jump:
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _058bb4_func
		xor    %al,%al
		mov    %al,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04890d_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _047f94_func
		mov    _0dbb7c_data,%dl
		mov    $0x000001,%ebx
		inc    %dl
		mov    %esi,%eax
		mov    %dl,_0dbb7c_data
		mov    %ebx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _058bb4_func
		mov    0x00002c(%esi),%ax
		mov    %ax,_0c25ac_data
		mov    0x00000c(%esi),%eax
		mov    0x000004(%eax),%eax
		mov    0x000046(%esi),%edx
		mov    0x000005(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    0x000081(%esi),%dh
		mov    %ax,_0c25aa_data
		test   $0x000008,%dh
		je     _048993_jump
		mov    _0c25aa_data,%bx
		mov    0x000028(%esi),%ax
		add    %eax,%ebx
		mov    %bx,_0c25aa_data
		jmp    _0489a6_jump

	_048993_jump:
		mov    _0c25aa_data,%dx
		mov    0x000028(%esi),%ax
		sub    %edx,%eax
		mov    %ax,_0c25aa_data

	_0489a6_jump:
		mov    $0x000001,%bl
		mov    $0x0000ff,%ecx
		mov    $0x000001,%edx
		mov    %bl,_0c25af_data
		mov    $0x0000ff,%bh
		mov    %esi,%eax
		mov    %bh,_0c25ae_data
		mov    %bh,_0c25b0_data
		mov    %ecx,%ebx
		call   _018420_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _058bb4_func
		mov    %ch,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048a02_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000005,%ebx
		call   _047f94_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _058bb4_func
		xor    %al,%al
		mov    %al,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048a4b_case:
		mov    $0x000005,%ch
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000007,%ebx
		call   _047f94_func
		mov    $0x000004,%al
		xor    %edx,%edx
		mov    %al,_0dbb6b_data
		mov    %esi,%eax
		mov    %ch,_0c25b6_data
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _058bb4_func
		xor    %ah,%ah
		mov    %ah,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048aa4_jump:
		mov    $0x00001f,%edx
		mov    %esi,%eax
		call   _01d498_func
		mov    $0x000021,%edx
		mov    %ebp,%eax
		call   _047f68_func

	_048abc_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _047f94_func
		mov    0x000081(%ebp),%al
		mov    $0x000001,%ebx
		or     $0x000004,%al
		xor    %edx,%edx
		mov    %al,0x000081(%ebp)
		mov    %esi,%eax
		call   _058bb4_func
		xor    %ah,%ah
		mov    %ah,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048b09_jump:
		mov    $0x000018,%edx
		mov    %esi,%eax
		call   _01d498_func
		mov    $0x000019,%edx
		mov    %ebp,%eax
		call   _047f68_func
		jmp    _048abc_case

	_048b23_case:
		mov    0x00006c(%esi),%ah
		mov    %ah,%al
		cmp    $0x000015,%ah
		jb     _048b44_jump
		jbe    _048b09_jump
		cmp    $0x00001f,%ah
		jb     _048abc_case
		jbe    _048b09_jump
		cmp    $0x000022,%ah
		je     _048aa4_jump
		jmp    _048abc_case

	_048b44_jump:
		cmp    $0x000013,%ah
		je     _048b09_jump
		jmp    _048abc_case

	_048b4e_case:
		mov    $0x000017,%edx
		mov    %esi,%eax
		call   _01d498_func
		mov    $0x00001a,%edx
		mov    %ebp,%eax
		call   _047f68_func
		jmp    _048abc_case

	_048b6b_case:
		mov    $0x00001e,%edx
		mov    %esi,%eax
		call   _01d498_func
		mov    $0x000020,%edx
		mov    %ebp,%eax
		call   _047f68_func
		jmp    _048abc_case

	_048b88_case:
		mov    0x00006c(%esi),%al
		sub    $0x000013,%al
		cmp    $0x000004,%al
		ja     _048abc_case
		and    $0x0000ff,%eax
		jmp    *%cs:_047fbc_switch(,%eax,4)

	_048ba2_jump:
		mov    $0x000016,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000012,%edx
		mov    %ebp,%eax
		call   _047f68_func
		jmp    _048c56_jump

	_048bc1_jump:
		mov    $0x000015,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000011,%edx
		mov    %ebp,%eax
		call   _047f68_func
		jmp    _048c56_jump

	_048be0_jump:
		mov    $0x000022,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000023,%edx
		mov    %ebp,%eax
		call   _047f68_func
		jmp    _048c56_jump

	_048bfc_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _047f94_func
		mov    $0x000008,%dl
		xor    %ebx,%ebx
		mov    %dl,_0c25b6_data
		xor    %edx,%edx
		mov    _0c25b3_data,%al
		mov    _0c25b7_data,%dl
		mov    %al,%bl
		inc    %al
		mov    _0965f0_data(,%edx,4),%edx
		mov    %al,_0c25b3_data
		mov    (%edx,%ebx,1),%al
		mov    0x000004(%esp),%dh
		mov    %al,_0dbb6b_data
		cmp    $0x000021,%dh
		jb     _048c4d_jump
		jbe    _048ba2_jump
		cmp    $0x00002b,%dh
		je     _048be0_jump
		jmp    _048c56_jump

	_048c4d_jump:
		cmp    $0x000020,%dh
		je     _048bc1_jump

	_048c56_jump:
		mov    $0x000001,%ebx
		mov    0x000081(%ebp),%ch
		mov    %esi,%eax
		or     $0x000004,%ch
		xor    %edx,%edx
		mov    %ch,0x000081(%ebp)
		call   _058bb4_func
		xor    %al,%al
		mov    %al,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048c97_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000008,%ebx
		call   _047f94_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		xor    %cl,%cl
		call   _058bb4_func
		mov    %cl,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048ce1_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000b,%ebx
		call   _047f94_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _058bb4_func
		xor    %bh,%bh
		mov    %bh,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048d2b_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _047f94_func
		mov    0x000081(%edi),%dh
		mov    $0x000001,%ebx
		or     $0x000004,%dh
		mov    %edi,%eax
		mov    %dh,0x000081(%edi)
		call   _01f584_func
		mov    $0x000002,%edx
		movb   $0x000003,0x00007e(%esi)
		mov    %edi,%eax
		movw   $0x00fffa,0x000042(%edi)
		call   _01d4a8_func
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%edi),%al
		mov    $0x00000e,%ebx
		movsbw 0x000001(%edx,%eax,8),%ax
		xor    %edx,%edx
		mov    %ax,0x000040(%edi)
		mov    %esi,%eax
		call   _01d4a8_func
		addl   $0x000064,0x000028(%esi)
		jmp    _048dae_jump

	_048d97_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000d,%ebx
		call   _047f94_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func

	_048dae_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,_0c25aa_data
		xor    %eax,%eax
		mov    _0c25a0_data,%dx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    $0x0000ff,%ecx
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x000010,%eax
		mov    $0x000001,%edx
		mov    %ax,_0c25ac_data
		mov    %esi,%eax
		call   _018420_func
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		cmp    $0x000016,%eax
		jne    _048e20_jump
		mov    $0x000020,%al
		mov    $0x000002,%dl
		mov    %al,_0c25ae_data
		mov    %dl,_0c25af_data
		mov    0x000081(%esi),%dh
		mov    %al,_0c25b0_data
		test   $0x000008,%dh
		je     _048e18_jump
		addw   $0x000050,_0c25aa_data
		jmp    _048e20_jump

	_048e18_jump:
		subw   $0x000050,_0c25aa_data

	_048e20_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _058bb4_func
		xor    %bl,%bl
		mov    %bl,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048e53_case:
		mov    0x000081(%esi),%dh
		mov    (%esp),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)
		jmp    _048e7c_case

	_048e75_case:
		orb    $0x000008,0x000081(%esi)

	_048e7c_case:
		mov    $0x00003c,%ecx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    %ecx,_0dbb84_data
		call   _047f94_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		mov    %esi,%eax
		call   _0477a0_func
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		cmp    $0x00002d,%eax
		jne    _048edd_jump
		xor    %eax,%eax
		mov    _0c1b44_data,%dx
		mov    _0c1b84_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %dx,_0c25aa_data
		mov    _0c25a8_data,%eax
		sar    $0x000010,%eax
		jmp    _048f65_jump

	_048edd_jump:
		cmp    $0x000019,%eax
		jne    _048f13_jump
		mov    _0dbb7c_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%edx
		mov    0x000028(%edx,%eax,1),%ax
		add    $0x000064,%eax
		mov    %ax,_0c25aa_data
		mov    _0c25a8_data,%eax
		sar    $0x000010,%eax
		add    $0x000050,%eax
		jmp    _048f65_jump

	_048f13_jump:
		testb  $0x000008,0x000081(%esi)
		je     _048f38_jump
		mov    0x000028(%esi),%ax
		add    $0x000030,%eax
		mov    %ax,_0c25aa_data
		mov    _0c25a8_data,%eax
		sar    $0x000010,%eax
		add    $0x000050,%eax
		jmp    _048f65_jump

	_048f38_jump:
		mov    0x000028(%esi),%dx
		sub    $0x0000a0,%edx
		mov    %dx,_0c25aa_data
		cmp    $0x000019,%eax
		jne    _048f5a_jump
		mov    %edx,%ebx
		add    $0x000070,%ebx
		mov    %bx,_0c25aa_data

	_048f5a_jump:
		mov    _0c25a8_data,%eax
		sar    $0x000010,%eax
		sub    $0x000050,%eax

	_048f65_jump:
		mov    %eax,0x000028(%esi)
		mov    $0x000018,%bl
		mov    $0x000001,%cl
		mov    _0c259e_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    %bl,_0c25ae_data
		mov    0x000069(%esi),%al
		mov    %bl,_0c25b0_data
		sub    %eax,%edx
		mov    %cl,_0c25af_data
		sub    $0x000010,%edx
		mov    $0x0000ff,%ecx
		mov    %edx,0x00002c(%esi)
		mov    %ecx,%ebx
		mov    0x00002c(%esi),%ax
		mov    $0x000001,%edx
		mov    %ax,_0c25ac_data
		mov    %esi,%eax
		call   _018420_func
		xor    %eax,%eax
		mov    _0c4598_data,%dx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    $0x00000e,%ebx
		mov    %dx,_0c25ac_data
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _058bb4_func
		mov    %ch,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049007_case:
		mov    %esi,%eax
		call   _01dc54_func
		xor    %edx,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _047f94_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _058bb4_func
		xor    %dl,%dl
		mov    %dl,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049058_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _047f94_func
		andb   $0x0000fb,0x000081(%ebp)
		mov    0x000081(%edi),%ah
		mov    $0x000006,%ebx
		and    $0x0000fb,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%edi)
		mov    %esi,%eax
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _058bb4_func
		xor    %dl,%dl
		mov    %dl,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0490bb_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _047f94_func
		subl   $0x000064,0x000028(%esi)
		mov    0x000081(%edi),%ah
		xor    %edx,%edx
		and    $0x0000fb,%ah
		mov    $0x000014,%ebx
		mov    %ah,0x000081(%edi)
		mov    %esi,%eax
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _058bb4_func
		xor    %dl,%dl
		mov    %dl,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04911b_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000f,%ebx
		call   _047f94_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    0x000028(%esi),%ax
		mov    $0x0000ff,%ecx
		mov    %ax,_0c25aa_data
		xor    %eax,%eax
		mov    _0c25a0_data,%dx
		mov    0x000069(%esi),%al
		mov    $0x000001,%bh
		sub    %eax,%edx
		mov    %bh,_0c25af_data
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x000010,%eax
		mov    $0x0000ff,%dh
		mov    %ax,_0c25ac_data
		mov    %dh,_0c25ae_data
		mov    %dh,_0c25b0_data
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _018420_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %cl,%cl
		call   _058bb4_func
		mov    %cl,_0c25b4_data
		movb   $0x0000ff,_0dbb6c_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0491b8_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _047f94_func
		mov    0x000081(%esi),%bh
		xor    %edx,%edx
		test   $0x000008,%bh
		sete   %dl
		mov    %esi,%eax
		call   _0477a0_func
		testb  $0x000008,0x000081(%esi)
		je     _04920d_jump
		mov    $0x000090,%eax
		mov    _0ce504_data,%edx
		mov    0x000028(%esi),%ebx
		sub    %edx,%eax
		sub    %eax,%ebx
		xor    %edx,%edx
		mov    _0c259c_data,%ax
		mov    0x000068(%esi),%dl
		add    $0x000140,%eax
		sub    %edx,%eax
		add    $0x000090,%eax
		mov    %ebx,0x000028(%esi)
		jmp    _04922f_jump

	_04920d_jump:
		xor    %eax,%eax
		mov    _0c259a_data,%dx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000028(%esi),%ecx
		mov    %edx,%eax
		add    $0x000088,%ecx
		sub    $0x000090,%eax
		mov    %ecx,0x000028(%esi)

	_04922f_jump:
		mov    %ax,_0c25aa_data
		mov    _0c25b3_data,%al
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    _0c25b7_data,%dl
		mov    %al,%bl
		inc    %al
		mov    _0965f0_data(,%edx,4),%edx
		mov    %al,_0c25b3_data
		add    %ebx,%edx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    (%edx),%bl
		mov    _0c4596_data,%edx
		mov    0x000069(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		sub    $0x000020,%edx
		sub    %ebx,%edx
		mov    %edx,0x00002c(%esi)
		mov    $0x00000f,%ebx
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %ax,_0c25ac_data
		mov    %esi,%eax
		mov    $0x0000ff,%ch
		call   _01d4a8_func
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ch,_0c25ae_data
		mov    %ch,_0c25b0_data
		mov    $0x0000ff,%ecx
		mov    %ah,_0c25af_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018420_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _058bb4_func
		xor    %eax,%eax
		mov    $0x000029,%dl
		mov    _0c25b7_data,%al
		mov    %dl,_0dbb7a_data
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0c25b3_data,%al
		mov    %al,%bl
		inc    %al
		mov    _0965f0_data(%edx),%edx
		mov    %al,_0c25b3_data
		mov    (%edx,%ebx,1),%al
		mov    %al,_0dbb6c_data
		xor    %eax,%eax
		mov    _0dbb6c_data,%al
		cmp    $0x0000ff,%eax
		jne    _049321_jump

	_049303_jump:
		mov    $0x000006,%eax
		call   _064360_func
		mov    %al,_0dbb6c_data
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _049303_jump
		cmp    $0x000006,%eax
		je     _049303_jump

	_049321_jump:
		mov    $0x0000ff,%bl
		xor    %eax,%eax
		jmp    _04932e_jump

	_049327_jump:
		inc    %eax
		mov    %bl,_0dbb70_data(%edx)

	_04932e_jump:
		movswl %ax,%edx
		cmp    $0x000008,%edx
		jl     _049327_jump
		movw   $0x008300,_0dbb78_data
		xor    %dh,%dh
		mov    %dh,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049360_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _047f94_func
		mov    0x000081(%esi),%cl
		mov    (%esp),%eax
		test   $0x000008,%cl
		sete   %dl
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    %ch,%dh
		or     %dl,%dh
		xor    %ebx,%ebx
		mov    %dh,(%eax)
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _058bb4_func
		xor    %bl,%bl
		call   _047af0_func
		mov    %bl,_0c25b4_data
		cmpb   $0x000000,_0c25b4_data
		jne    _0493c8_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0493c8_jump:
		xor    %eax,%eax
		mov    _0c25b7_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0c25b3_data,%al
		mov    %al,%bl
		inc    %al
		mov    _0965f0_data(%edx),%edx
		mov    %al,_0c25b3_data
		mov    (%edx,%ebx,1),%al
		mov    %al,0x000004(%esp)
		cmp    $0x00002e,%al
		ja     _0480ea_case
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		jmp    *%cs:_047fd0_switch(,%eax,4)



_04940c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dl,0x000010(%esp)
		mov    0x000048(%eax),%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edi
		mov    %esp,%ecx
		add    %eax,%edi
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		mov    0x000050(%esi),%edx
		push   %eax
		sar    $0x000010,%edx
		mov    %edi,%eax
		call   _01d840_func
		cmpb   $0x000000,0x000010(%esp)
		jne    _04946b_jump
		jmp    _0494df_jump

	_049459_jump:
		movb   $0x00002f,0x000002(%eax)
		jmp    _04949a_jump

	_04945f_jump:
		movb   $0x000030,0x000002(%eax)
		jmp    _04949a_jump

	_049465_jump:
		movb   $0x00002e,0x000002(%eax)
		jmp    _04949a_jump

	_04946b_jump:
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		mov    (%eax),%eax
		shl    $0x000003,%edx
		add    %edx,%eax
		mov    0x00006c(%edi),%dl
		cmp    $0x000012,%dl
		jb     _049495_jump
		jbe    _049465_jump
		cmp    $0x000023,%dl
		je     _04945f_jump
		jmp    _04949a_jump

	_049495_jump:
		cmp    $0x000011,%dl
		je     _049459_jump

	_04949a_jump:
		mov    0x000002(%eax),%al
		mov    %al,0x00006a(%edi)
		mov    0x000006(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _0494d2_jump
		movb   $0x000001,0x000070(%esi)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000028(%esi),%ebx
		sub    $0x000005,%eax
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		jmp    _0494df_jump

	_0494d2_jump:
		mov    0x000028(%esi),%edx
		movb   $0x000000,0x000070(%esi)
		add    $0x000005,%edx
		mov    %edx,0x000028(%esi)

	_0494df_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%al
		mov    0x000074(%esi),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movw   $0x000000,0x000042(%esi)
		mov    0x000002(%esp),%ebx
		sar    $0x000011,%ebx
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		add    %ebx,%edx
		sub    %eax,%edx
		add    $0x000002,%edx
		mov    %edx,0x00002c(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_04951c_switch:
		.long   _04954d_case
		.long   _04955a_case
		.long   _049567_case
		.long   _049574_case




_04952c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    _0dbb6b_data,%al
		dec    %al
		cmp    $0x000003,%al
		ja     _04957f_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_04951c_switch(,%edx,4)

	_04954d_case:
		mov    $0x000003,%ch
		mov    $0x0000c0,%al
		mov    %ch,0x000004(%esp)
		mov    %al,(%esp)
		jmp    _04957f_jump

	_04955a_case:
		mov    $0x000004,%bh
		mov    $0x0000c0,%cl
		mov    %bh,0x000004(%esp)
		mov    %cl,(%esp)
		jmp    _04957f_jump

	_049567_case:
		mov    $0x000002,%dh
		mov    $0x0000c0,%bl
		mov    %dh,0x000004(%esp)
		mov    %bl,(%esp)
		jmp    _04957f_jump

	_049574_case:
		mov    $0x000004,%ah
		mov    $0x0000f4,%dl
		mov    %ah,0x000004(%esp)
		mov    %dl,(%esp)

	_04957f_jump:
		mov    _0c1b04_data,%ebx
		mov    _0c1b08_data,%si
		xor    %eax,%eax
		test   %si,%si
		jg     _0495a8_jump
		jmp    _049667_jump

	_049598_jump:
		inc    %eax
		add    $0x000084,%ebx
		cmp    %si,%ax
		jge    _049667_jump

	_0495a8_jump:
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    (%esp),%dl
		mov    0x000060(%ebx),%cx
		cmp    %edx,%ecx
		jne    _049598_jump
		mov    0x000024(%ebx),%edx
		test   %edx,%edx
		jne    _049598_jump
		mov    0x000060(%edi),%dx
		cmp    $0x0000d5,%edx
		jne    _0495e5_jump
		mov    _0dbb7e_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0c1b04_data,%edi
		shl    $0x000002,%edx
		add    %edx,%edi

	_0495e5_jump:
		mov    0x000034(%edi),%ax
		mov    %ax,0x00004a(%ebx)
		xor    %eax,%eax
		mov    _0c25b6_data,%al
		mov    %ax,0x000052(%ebx)
		mov    0x000081(%ebx),%ah
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%ebx)
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    %ah,%dl
		and    $0x0000f7,%dl
		mov    %dl,0x000081(%ebx)
		mov    %dl,%dh
		movb   $0x000000,0x00006b(%ebx)
		or     %al,%dh
		mov    0x000004(%esp),%al
		mov    %dh,0x000081(%ebx)
		mov    %al,0x00006c(%ebx)
		mov    0x000034(%ebx),%ax
		mov    $0x000001,%edx
		mov    %ax,0x00004a(%edi)
		mov    %ebx,%eax
		call   _04940c_func
		mov    0x000081(%ebx),%cl
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%cl
		mov    %ebx,%eax
		mov    %cl,0x000081(%ebx)
		call   _01f584_func
		mov    %ebx,%eax
		call   _01dcec_func

	_049667_jump:
		mov    $0x0000ff,%ch
		xor    %al,%al
		mov    %ch,_0c25b6_data
		mov    %al,_0dbb6b_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049680_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0dbb84_data,%edx
		test   %edx,%edx
		je     _04969e_jump
		lea    -0x000001(%edx),%ebx
		mov    %ebx,_0dbb84_data
		jmp    _04972f_jump

	_04969e_jump:
		call   _047690_func
		test   %al,%al
		je     _04972f_jump
		mov    _0c25b5_data,%ah
		test   %ah,%ah
		je     _0496bf_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0c25b5_data

	_0496bf_jump:
		mov    0x000081(%esi),%al
		xor    %edx,%edx
		and    $0x000001,%al
		mov    %al,%dl
		test   %edx,%edx
		je     _0497a7_jump
		mov    %esi,%eax
		call   _04808c_func
		andb   $0x0000fe,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0496e6_jump:
		mov    _0c25b6_data,%dl
		cmp    $0x0000ff,%edx
		je     _0496fb_jump
		mov    %esi,%eax
		call   _04952c_func

	_0496fb_jump:
		movw   $0x000000,0x000040(%esi)
		mov    $0xffff8300,%edx
		movw   $0x000000,0x000042(%esi)
		mov    %dx,_0c25aa_data
		mov    %dx,_0c25ac_data
		mov    %dx,_0dbb68_data

	_049721_jump:
		mov    %esi,%eax
		call   _0185f8_func
		mov    %esi,%eax
		call   _04808c_func

	_04972f_jump:
		andb   $0x0000fe,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04973b_jump:
		xor    %edx,%edx
		mov    _0dbb7a_data,%dl
		test   %edx,%edx
		jne    _04976f_jump
		mov    _0dbb6c_data,%dl
		cmp    $0x0000ff,%edx
		je     _04976f_jump
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		test   %edx,%edx
		jne    _04976f_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x00000f,%edx
		jne    _04976f_jump
		mov    %esi,%eax
		call   _047b74_func
		jmp    _049783_jump

	_04976f_jump:
		mov    _0dbb7a_data,%bl
		test   %bl,%bl
		je     _049783_jump
		mov    %bl,%bh
		dec    %bh
		mov    %bh,_0dbb7a_data

	_049783_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0c25b0_data,%cl
		mov    _0c25ae_data,%bl
		mov    _0c25af_data,%dl
		call   _018420_func
		jmp    _049721_jump

	_0497a7_jump:
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		je     _0496e6_jump
		movb   $0x0000ff,_0c25b6_data
		mov    _0dbb66_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffff8300,%edx
		je     _04973b_jump
		call   _047880_func
		jmp    _049783_jump

_0497d8_switch:
		.long   _04982d_case
		.long   _049854_case
		.long   _049864_case
		.long   _049864_case
		.long   _049864_case




_0497ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0c25b7_data,%al
		cmp    $0x000008,%eax
		je     _049800_jump
		cmp    $0x000009,%eax
		jne    _04980c_jump

	_049800_jump:
		mov    $_0c25b8_data,%eax
		mov    $_0c25b2_data,%ebx
		jmp    _049816_jump

	_04980c_jump:
		mov    $_0c25b7_data,%eax
		mov    $_0c25b3_data,%ebx

	_049816_jump:
		mov    (%eax),%dl
		mov    %dl,%dh
		dec    %dh
		cmp    $0x000004,%dh
		ja     _049864_case
		xor    %ecx,%ecx
		mov    %dh,%cl
		jmp    *%cs:_0497d8_switch(,%ecx,4)

	_04982d_case:
		xor    %ecx,%ecx
		mov    _0dbb7b_data,%cl
		cmp    $0x000002,%ecx
		jl     _049864_case
		xor    %ecx,%ecx
		mov    _0dbb7c_data,%cl
		cmp    $0x000002,%ecx
		jle    _049864_case
		xor    %dh,%dh
		movb   $0x000002,(%eax)
		mov    %dh,_0dbb7c_data
		jmp    _049864_case

	_049854_case:
		xor    %ecx,%ecx
		mov    _0dbb7b_data,%cl
		cmp    $0x000003,%ecx
		jl     _049864_case
		movb   $0x000003,(%eax)

	_049864_case:
		cmp    (%eax),%dl
		je     _049873_jump
		xor    %ch,%ch
		movb   $0x000000,(%ebx)
		mov    %ch,_0dbb7b_data

	_049873_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049878_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c25b3_data,%dl
		mov    _0c25b7_data,%dh

	_049887_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %dh,%bl
		mov    %dl,%cl
		mov    _0965f0_data(,%ebx,4),%ebx
		xor    %ah,%ah
		mov    (%ecx,%ebx,1),%al
		cmp    $0x00001a,%al
		jb     _0498f8_jump
		jbe    _0498d2_jump
		cmp    $0x000021,%al
		jb     _0498ec_jump
		jbe    _0498d0_jump
		cmp    $0x000023,%al
		jb     _0498d2_jump
		cmp    $0x000024,%al
		jbe    _0498d2_jump
		cmp    $0x00002b,%al
		je     _0498d0_jump
		jmp    _04991c_jump

	_0498bc_jump:
		mov    %al,%ah
		xor    %dl,%dl
		jmp    _04991c_jump

	_0498c5_jump:
		mov    $0x000001,%ah
		xor    %dl,%dl
		add    %ah,%dh
		jmp    _04991c_jump

	_0498d0_jump:
		inc    %dl

	_0498d2_jump:
		mov    $0x000001,%ah
		add    %ah,%dl
		jmp    _04991c_jump

	_0498db_jump:
		add    $0x000002,%dl

	_0498de_jump:
		mov    $0x000001,%ah
		jmp    _04991c_jump

	_0498e2_jump:
		test   %dl,%dl
		je     _04991c_jump
		mov    $0x000001,%ah
		sub    %ah,%dl
		jmp    _04991c_jump

	_0498ec_jump:
		cmp    $0x00001c,%al
		jb     _04991c_jump
		jbe    _0498db_jump
		cmp    $0x00001d,%al
		je     _0498de_jump
		jmp    _04991c_jump

	_0498f8_jump:
		cmp    $0x00000f,%al
		jb     _049914_jump
		jbe    _0498d2_jump
		cmp    $0x000016,%al
		jb     _04990a_jump
		jbe    _0498e2_jump
		cmp    $0x000018,%al
		je     _0498d2_jump
		jmp    _04991c_jump

	_04990a_jump:
		cmp    $0x000012,%al
		jb     _04991c_jump
		cmp    $0x000013,%al
		jbe    _0498d2_jump
		jmp    _04991c_jump

	_049914_jump:
		test   %al,%al
		jbe    _0498c5_jump
		cmp    $0x000001,%al
		je     _0498bc_jump

	_04991c_jump:
		test   %ah,%ah
		jne    _049887_jump
		mov    %dl,_0c25b2_data
		mov    %dh,_0c25b8_data
		mov    %dh,_0c25b7_data
		mov    %dl,_0c25b3_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049940_func:
		push   %ebx
		push   %ecx
		push   %edi
		mov    %eax,%ebx
		mov    %edx,%ecx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%ebx),%edi
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edi
		xor    %eax,%eax
		mov    (%edi),%edi
		mov    0x00006c(%ebx),%al
		testb  $0x000001,0x000007(%edi,%eax,8)
		je     _049ae5_jump
		cmpb   $0x000000,_0c25b5_data
		jne    _049ae5_jump
		shl    $0x000008,%edx
		add    %edx,%eax
		cmp    $0x000013,%eax
		jb     _049a4a_jump
		jbe    _04999f_jump
		cmp    $0x00001e,%eax
		jb     _0499c4_jump
		cmp    $0x00001f,%eax
		jbe    _04999f_jump
		cmp    $0x000025,%eax
		jb     _0499bd_jump
		jbe    _0499a9_jump
		cmp    $0x00002c,%eax
		je     _0499a9_jump
		jmp    _0499b3_jump

	_04999f_jump:
		mov    $0x0000ff,%eax
		jmp    _0499e1_jump

	_0499a9_jump:
		mov    $0xffffffff,%eax
		jmp    _0499e1_jump

	_0499b3_jump:
		mov    $0x000001,%eax
		jmp    _0499e1_jump

	_0499bd_jump:
		cmp    $0x000022,%eax
		je     _04999f_jump
		jmp    _0499b3_jump

	_0499c4_jump:
		cmp    $0x000016,%eax
		jb     _0499d7_jump
		jbe    _04999f_jump
		cmp    $0x000018,%eax
		jbe    _04999f_jump
		mov    $0x000001,%eax
		jmp    _0499e1_jump

	_0499d7_jump:
		cmp    $0x000015,%eax
		je     _04999f_jump
		mov    $0x000001,%eax

	_0499e1_jump:
		cmp    %cx,%ax
		jne    _049ae5_jump
		movswl %cx,%eax
		cmp    $0x000001,%eax
		jne    _049a0b_jump
		movb   $0x000001,_0c1ed3_data
		mov    %ebx,%eax
		call   _01e92c_func
		incb   _0dbb7b_data
		call   _0497ec_func

	_049a0b_jump:
		cmpb   $0x000000,0x000076(%ebx)
		je     _049ab1_jump
		xor    %eax,%eax
		mov    _0c25b7_data,%al
		cmp    $0x000008,%eax
		je     _049abf_jump
		cmp    $0x000009,%eax
		je     _049abf_jump
		call   _049878_func
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		cmp    $0x000062,%eax
		jne    _049aa8_jump
		movb   $0x000008,_0c25b7_data
		jmp    _049abf_jump

	_049a4a_jump:
		cmp    $0x00000a,%eax
		jb     _049a86_jump
		jbe    _0499a9_jump
		cmp    $0x00000d,%eax
		jb     _049a73_jump
		jbe    _0499a9_jump
		cmp    $0x00000f,%eax
		je     _0499a9_jump
		mov    $0x000001,%eax
		jmp    _0499e1_jump

	_049a73_jump:
		cmp    $0x00000b,%eax
		je     _0499a9_jump
		mov    $0x000001,%eax
		jmp    _0499e1_jump

	_049a86_jump:
		cmp    $0x000002,%eax
		jb     _0499b3_jump
		jbe    _0499a9_jump
		cmp    $0x000006,%eax
		je     _0499a9_jump
		mov    $0x000001,%eax
		jmp    _0499e1_jump

	_049aa8_jump:
		movb   $0x000009,_0c25b7_data
		jmp    _049abf_jump

	_049ab1_jump:
		movb   $0x00000a,_0c25b7_data
		movb   $0x000001,_0c2571_data

	_049abf_jump:
		xor    %dl,%dl
		mov    $0x000001,%cl
		mov    %dl,_0c25b3_data
		mov    %cl,_0c25b4_data
		mov    0x000081(%ebx),%ch
		mov    $0x0000ff,%dh
		or     %cl,%ch
		mov    %dh,_0c25b5_data
		mov    %ch,0x000081(%ebx)

	_049ae5_jump:
		pop    %edi
		pop    %ecx
		pop    %ebx
		ret    

_049aec_switch:
		.long   _049b1f_case
		.long   _049b17_case
		.long   _049b1b_case
		.long   _049b17_case




_049afc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x00006c(%eax),%al
		sub    $0x000002,%al
		cmp    $0x000003,%al
		ja     _049b21_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_049aec_switch(,%eax,4)

	_049b17_case:
		xor    %dl,%dl
		jmp    _049b21_jump

	_049b1b_case:
		mov    $0x000007,%dl
		jmp    _049b21_jump

	_049b1f_case:
		mov    $0x00000e,%dl

	_049b21_jump:
		cmp    0x00006b(%ebx),%dl
		jb     _049b34_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _04940c_func
		jmp    _049bc3_jump

	_049b34_jump:
		mov    0x000048(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x000034(%ebx),%cx
		cmp    0x00004a(%eax),%cx
		je     _049b8e_jump
		mov    %ebx,%eax
		call   _04d2c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049b61_jump:
		movb   $0x000001,0x000002(%edx)
		mov    %ebx,%eax
		call   _04d2c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049b70_jump:
		movb   $0x000000,0x000002(%edx)
		mov    %ebx,%eax
		call   _04d2c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049b7f_jump:
		movb   $0x00001c,0x000002(%edx)
		mov    %ebx,%eax
		call   _04d2c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049b8e_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		mov    (%ecx),%ecx
		shl    $0x000003,%edx
		mov    0x00006a(%eax),%al
		add    %ecx,%edx
		cmp    $0x00002f,%al
		jb     _049bbf_jump
		jbe    _049b70_jump
		cmp    $0x000030,%al
		je     _049b7f_jump
		mov    %ebx,%eax
		call   _04d2c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049bbf_jump:
		cmp    $0x00002e,%al
		je     _049b61_jump

	_049bc3_jump:
		mov    %ebx,%eax
		call   _04d2c4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049bd0_func:
		push   %edx
		mov    0x00007f(%eax),%dl
		test   %dl,%dl
		je     _049be6_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,0x00007f(%eax)
		jne    _049be6_jump
		call   _047938_func

	_049be6_jump:
		pop    %edx
		ret    



_049bf0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%esi
		mov    _0c1ec0_data,%edx
		cmpl   $0x000000,0x000024(%edx)
		jne    _049c42_jump
		mov    _0c1b44_data,%di
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _0c1b84_data,%bl
		mov    _0c1b90_data,%cl
		add    %edi,%ebx
		movzbl _0c1b85_data,%edi
		add    %ecx,%edi
		mov    _0c1b48_data,%ebp
		sar    %edi
		add    %ebp,%edi
		movw   $0x000000,0x000040(%edx)
		sub    $0x00000a,%edi
		movw   $0x000000,0x000042(%edx)
		mov    %edi,%ecx
		jmp    _049c60_jump

	_049c42_jump:
		xor    %ebx,%ebx
		mov    0x000028(%edx),%cx
		mov    0x000068(%edx),%bl
		add    %ecx,%ebx
		xor    %ecx,%ecx
		movzbl 0x000074(%edx),%edi
		mov    0x000069(%edx),%cl
		add    %edi,%ecx
		sar    %ecx
		add    0x00002c(%edx),%ecx
		sub    $0x000003,%ecx

	_049c60_jump:
		xor    %edx,%edx
		movzbl 0x000074(%eax),%edi
		mov    0x000069(%eax),%dl
		add    %edi,%edx
		sar    %edx
		mov    0x00002c(%eax),%edi
		add    %edx,%edi
		movswl %cx,%edx
		sub    %edx,%edi
		sub    0x000028(%eax),%bx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		movswl %di,%edx
		mov    %bx,(%esi)
		test   %edx,%edx
		jge    _049ccd_jump
		mov    _0c1ec0_data,%esi
		mov    0x000040(%esi),%esi
		sar    $0x000010,%esi
		test   %esi,%esi
		jle    _049cba_jump
		cmp    $0xffffffe2,%edx
		jle    _049cab_jump
		addw   $0x000002,0x000042(%eax)
		jmp    _049d15_jump

	_049cab_jump:
		cmp    $0xffffffd0,%edx
		jle    _049d15_jump
		incw   0x000042(%eax)
		jmp    _049d15_jump

	_049cba_jump:
		cmp    $0xffffffe2,%edx
		jle    _049cc6_jump
		subw   $0x000002,0x000042(%eax)
		jmp    _049d15_jump

	_049cc6_jump:
		cmp    $0xffffffd0,%edx
		jle    _049d15_jump
		jmp    _049d11_jump

	_049ccd_jump:
		mov    _0c1ec0_data,%esi
		mov    0x000040(%esi),%esi
		sar    $0x000010,%esi
		test   %esi,%esi
		jl     _049cfc_jump
		cmp    $0x00001e,%edx
		jge    _049ced_jump
		addw   $0x000002,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_049ced_jump:
		cmp    $0x000030,%edx
		jge    _049d15_jump
		incw   0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_049cfc_jump:
		cmp    $0x00001e,%edx
		jge    _049d0c_jump
		subw   $0x000002,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_049d0c_jump:
		cmp    $0x000030,%edx
		jge    _049d15_jump

	_049d11_jump:
		decw   0x000042(%eax)

	_049d15_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_049d1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		xor    %cl,%cl
		cmp    $0x000002,%edx
		je     _049d4f_jump
		shl    $0x000002,%edx
		mov    0x00000c(%eax),%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000001,0x000007(%ebx,%edx,8)
		je     _049d7f_jump
		mov    $0x000001,%ebx
		mov    %ebx,%edx
		call   _058bb4_func
		jmp    _049d7f_jump

	_049d4f_jump:
		cmp    %edx,%edx
		jne    _049d7d_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000001,%edx
		jne    _049d7d_jump
		xor    %edx,%edx
		mov    0x00006b(%eax),%dl
		test   %edx,%edx
		jne    _049d7d_jump
		movw   $0x00fffb,0x000042(%eax)
		mov    %cl,0x000071(%eax)
		mov    0x00002c(%eax),%edx
		mov    %cl,0x000072(%eax)
		sub    $0x00000e,%edx
		mov    %edx,0x00002c(%eax)
		jmp    _049d7f_jump

	_049d7d_jump:
		mov    $0x000001,%cl

	_049d7f_jump:
		mov    %cl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049d88_func:
		push   %ebx
		mov    0x000081(%eax),%bl
		shl    $0x000004,%bl
		shr    $0x000007,%bl
		and    $0x0000ff,%ebx
		jne    _049da4_jump
		movswl %dx,%ebx
		test   %ebx,%ebx
		jg     _049dc1_jump

	_049da4_jump:
		mov    0x000081(%eax),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _049dc5_jump
		movswl %dx,%eax
		test   %eax,%eax
		jge    _049dc5_jump

	_049dc1_jump:
		mov    $0x000001,%al
		pop    %ebx
		ret    

	_049dc5_jump:
		xor    %al,%al
		pop    %ebx
		ret    



_049dcc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		cmp    $0x000002,%eax
		je     _049de3_jump
		cmp    $0x000001,%eax
		jne    _049f71_jump

	_049de3_jump:
		movswl %dx,%edx
		mov    %ebx,%eax
		call   _049d88_func
		test   %al,%al
		je     _049e44_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		cmp    $0x000002,%eax
		jne    _049e15_jump
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _049e15_jump
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		test   %eax,%eax
		je     _049e15_jump
		incw   0x000042(%ebx)
		jmp    _049e1c_jump

	_049e15_jump:
		mov    %ebx,%eax
		call   _049d1c_func

	_049e1c_jump:
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _049e36_jump
		mov    $0x000004,%eax
		jmp    _049e3b_jump

	_049e36_jump:
		mov    $0xfffffffc,%eax

	_049e3b_jump:
		mov    %ax,0x000040(%ebx)
		jmp    _049ecd_jump

	_049e44_jump:
		mov    _0c1b5c_data,%ax
		neg    %eax
		mov    %ax,0x000040(%ebx)
		mov    0x00003a(%ebx),%eax
		mov    0x000028(%ebx),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jle    _049e91_jump
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _049e91_jump
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _049e85_jump
		movw   $0x000000,0x000040(%ebx)
		jmp    _049ecd_jump

	_049e85_jump:
		mov    0x000040(%ebx),%cx
		add    %ecx,%ecx
		mov    %cx,0x000040(%ebx)
		jmp    _049ecd_jump

	_049e91_jump:
		mov    0x00003a(%ebx),%eax
		mov    0x000028(%ebx),%ecx
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		jge    _049ecd_jump
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _049ecd_jump
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _049ec3_jump
		movw   $0x000000,0x000040(%ebx)
		jmp    _049ecd_jump

	_049ec3_jump:
		mov    0x000040(%ebx),%dx
		add    %edx,%edx
		mov    %dx,0x000040(%ebx)

	_049ecd_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		cmp    $0x000001,%eax
		jne    _049f4f_jump
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ebx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		xor    %ecx,%ecx
		shr    $0x000007,%al
		mov    %al,%cl
		lea    0x000007(%edx),%eax
		test   %ecx,%ecx
		jne    _049f14_jump
		mov    0x00003e(%ebx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jg     _049f35_jump

	_049f14_jump:
		mov    0x000081(%ebx),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		jne    _049f3c_jump
		mov    0x00003e(%ebx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jge    _049f3c_jump

	_049f35_jump:
		mov    $0x000001,%edx
		jmp    _049f3e_jump

	_049f3c_jump:
		xor    %edx,%edx

	_049f3e_jump:
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		shl    $0x000004,%dl
		mov    %dh,%cl
		or     %dl,%cl
		mov    %cl,(%eax)

	_049f4f_jump:
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jle    _049f63_jump
		movw   $0x000004,0x000040(%ebx)
		pop    %ecx
		pop    %ebx
		ret    

	_049f63_jump:
		cmp    $0xfffffffc,%eax
		jge    _049f78_jump
		movw   $0x00fffc,0x000040(%ebx)
		pop    %ecx
		pop    %ebx
		ret    

	_049f71_jump:
		mov    %ebx,%eax
		call   _04d2c4_func

	_049f78_jump:
		pop    %ecx
		pop    %ebx
		ret    



_049f7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		test   %eax,%eax
		jne    _049fb0_jump
		mov    0x00006c(%ebx),%al
		cmp    $0x00000a,%eax
		jne    _049fb0_jump
		mov    0x000048(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0x000032,%eax
		jle    _04a2a7_jump
		subw   $0x000032,0x00004a(%ebx)
		jmp    _04a2a7_jump

	_049fb0_jump:
		mov    %ebx,%eax
		call   _049d1c_func
		test   %al,%al
		je     _04a2a7_jump
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x000001,%eax
		je     _04a006_jump
		mov    0x000048(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0x0001f4,%eax
		jne    _04a006_jump
		movb   $0x00008c,0x00007d(%ebx)
		mov    0x00004a(%ebx),%dx
		mov    0x000028(%ebx),%ax
		inc    %edx
		mov    %ax,0x00004e(%ebx)
		mov    %ebx,%eax
		mov    %dx,0x00004a(%ebx)
		mov    $0x000003,%edx
		movw   $0x000000,0x000042(%ebx)
		call   _01d498_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04a006_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x000003,%eax
		jne    _04a035_jump
		cmpb   $0x000000,0x000072(%ebx)
		je     _04a2a7_jump
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _04a2a7_jump
		decw   0x000042(%ebx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04a035_jump:
		cmp    $0x000004,%eax
		jne    _04a2a7_jump
		mov    0x00004c(%ebx),%eax
		mov    0x000028(%ebx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _04a051_jump
		neg    %eax

	_04a051_jump:
		mov    %eax,%edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    _0c1b44_data,%esi
		mov    _0c1b84_data,%al
		add    %eax,%esi
		mov    0x00004c(%ebx),%eax
		sar    $0x000010,%eax
		sub    %eax,%esi
		xor    %eax,%eax
		mov    0x000068(%ebx),%al
		sub    %eax,%esi
		lea    -0x00000a(%esi),%eax
		movswl %dx,%edi
		test   %eax,%eax
		jge    _04a07f_jump
		neg    %eax

	_04a07f_jump:
		movzbl 0x00007d(%ebx),%esi
		mov    %ax,(%esp)
		cmp    %esi,%edi
		jg     _04a0a0_jump
		cmp    %ax,%dx
		jle    _04a10d_jump
		cmp    $0x00008c,%esi
		jne    _04a10d_jump

	_04a0a0_jump:
		xor    %eax,%eax
		mov    0x00007d(%ebx),%al
		cmp    $0x00008c,%eax
		jne    _04a0c0_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x00008c,%eax
		jge    _04a0c0_jump
		mov    (%esp),%al
		mov    %al,0x00007d(%ebx)

	_04a0c0_jump:
		xor    %eax,%eax
		mov    0x000072(%ebx),%al
		cmp    $0x000001,%eax
		jne    _04a0e7_jump
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _04a0e3_jump
		incw   0x000040(%ebx)
		jmp    _04a0e7_jump

	_04a0e3_jump:
		decw   0x000040(%ebx)

	_04a0e7_jump:
		xor    %eax,%eax
		mov    0x000071(%ebx),%al
		cmp    $0x000001,%eax
		jne    _04a276_jump
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jle    _04a276_jump
		decw   0x000042(%ebx)
		jmp    _04a276_jump

	_04a10d_jump:
		xor    %eax,%eax
		mov    _0c1b48_data,%di
		mov    0x000069(%ebx),%al
		mov    0x00002c(%ebx),%si
		mov    %eax,%edx
		xor    %eax,%eax
		add    %esi,%edx
		mov    _0c1b85_data,%al
		sub    %edi,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x00003e(%ebx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jg     _04a14c_jump
		mov    0x000081(%ebx),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		je     _04a171_jump

	_04a14c_jump:
		mov    0x00003e(%ebx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jl     _04a1d1_jump
		mov    0x000081(%ebx),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		jne    _04a1d1_jump

	_04a171_jump:
		mov    0x000081(%ebx),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		jne    _04a18d_jump
		movw   $0x00fffc,0x000040(%ebx)
		jmp    _04a193_jump

	_04a18d_jump:
		movw   $0x000004,0x000040(%ebx)

	_04a193_jump:
		movswl %ax,%edx
		cmp    $0x00000a,%edx
		jle    _04a1a6_jump
		movw   $0x00ffff,0x000042(%ebx)
		jmp    _04a276_jump

	_04a1a6_jump:
		cmp    $0xffffffec,%edx
		jge    _04a1b6_jump
		movw   $0x000002,0x000042(%ebx)
		jmp    _04a276_jump

	_04a1b6_jump:
		cmp    $0xfffffff6,%edx
		jge    _04a1c6_jump
		movw   $0x000001,0x000042(%ebx)
		jmp    _04a276_jump

	_04a1c6_jump:
		movw   $0x000000,0x000042(%ebx)
		jmp    _04a276_jump

	_04a1d1_jump:
		cwtl   
		cmp    $0xfffffff6,%eax
		jle    _04a1ea_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _04a1ea_jump
		movw   $0x000000,0x000042(%ebx)
		jmp    _04a1f0_jump

	_04a1ea_jump:
		movw   $0x000001,0x000042(%ebx)

	_04a1f0_jump:
		movswl %cx,%eax
		cmp    $0x000008,%eax
		jge    _04a20b_jump
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		je     _04a229_jump

	_04a20b_jump:
		movswl %cx,%eax
		cmp    $0x000008,%eax
		jle    _04a240_jump
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _04a240_jump

	_04a229_jump:
		decw   0x000040(%ebx)
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffc,%eax
		jge    _04a255_jump
		movw   $0x00fffc,0x000040(%ebx)
		jmp    _04a255_jump

	_04a240_jump:
		incw   0x000040(%ebx)
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jle    _04a255_jump
		movw   $0x000004,0x000040(%ebx)

	_04a255_jump:
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _04a276_jump
		movswl %cx,%eax
		cmp    $0x000008,%eax
		jge    _04a276_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x00004a(%ebx)
		call   _01d498_func

	_04a276_jump:
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _024568_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _04a2a7_jump
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04a29e_jump
		mov    $0xffffffff,%eax
		jmp    _04a2a3_jump

	_04a29e_jump:
		mov    $0x000001,%eax

	_04a2a3_jump:
		mov    %ax,0x000040(%ebx)

	_04a2a7_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a2b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		xor    %bl,%bl
		test   %eax,%eax
		jne    _04a2eb_jump
		mov    0x00006c(%edx),%al
		cmp    $0x000003,%eax
		jne    _04a2eb_jump
		movw   $0x00fffc,0x000042(%edx)
		mov    0x000081(%edx),%cl
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%cl
		mov    $0x000001,%bl
		mov    %cl,0x000081(%edx)
		jmp    _04a45b_jump

	_04a2eb_jump:
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		cmp    $0x000001,%eax
		jne    _04a2ff_jump
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000002,%eax
		je     _04a331_jump

	_04a2ff_jump:
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		test   %eax,%eax
		jne    _04a315_jump
		mov    0x00006c(%edx),%al
		cmp    $0x000002,%eax
		je     _04a331_jump
		cmp    $0x000004,%eax
		je     _04a331_jump

	_04a315_jump:
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		cmp    $0x000002,%eax
		jne    _04a45b_jump
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000002,%eax
		jne    _04a45b_jump

	_04a331_jump:
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		lea    0x000000(,%eax,8),%esi
		mov    (%ecx),%eax
		mov    $0x000001,%bl
		testb  $0x000010,0x000007(%esi,%eax,1)
		je     _04a35e_jump
		xor    %eax,%eax
		mov    0x00006b(%edx),%al
		test   %eax,%eax
		jmp    _04a388_jump

	_04a35e_jump:
		xor    %ecx,%ecx
		mov    0x00006a(%edx),%cl
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		lea    0x000000(,%eax,4),%ecx
		mov    0x000004(%edx),%eax
		mov    0x00000a(%ecx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %ecx,%ecx
		dec    %eax
		mov    0x00006b(%edx),%cl
		cmp    %eax,%ecx

	_04a388_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _04a3cb_jump
		xor    %ecx,%ecx
		mov    0x00006d(%edx),%cl
		mov    0x00000c(%edx),%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		xor    %eax,%eax
		mov    (%ecx),%ecx
		mov    0x00006c(%edx),%al
		mov    0x000005(%ecx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _04a3cb_jump
		movw   $0x000000,0x00004a(%edx)
		mov    %bl,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04a3cb_jump:
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		cmp    $0x000002,%eax
		je     _04a3e3_jump
		mov    %edx,%eax
		call   _04d2c4_func
		mov    %bl,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04a3e3_jump:
		mov    0x000048(%edx),%eax
		sar    $0x000010,%eax
		movw   $0x000000,0x000042(%edx)
		cmp    $0x0001f4,%eax
		jl     _04a45b_jump
		mov    0x00004c(%edx),%eax
		mov    0x000028(%edx),%ecx
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _04a409_jump
		neg    %eax

	_04a409_jump:
		cwtl   
		cmp    $0x000008,%eax
		jge    _04a438_jump
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _04a42d_jump
		decw   0x000040(%edx)
		mov    %bl,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04a42d_jump:
		incw   0x000040(%edx)
		mov    %bl,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04a438_jump:
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _04a452_jump
		mov    $0x000004,%eax
		jmp    _04a457_jump

	_04a452_jump:
		mov    $0xfffffffc,%eax

	_04a457_jump:
		mov    %ax,0x000040(%edx)

	_04a45b_jump:
		mov    %bl,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04a464_switch:
		.long   _04a725_case
		.long   _04a756_case
		.long   _04a7b3_case
		.long   _04a725_case




_04a474_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		mov    (%edx),%ebp
		shl    $0x000003,%eax
		add    %eax,%ebp
		mov    %ecx,%eax
		call   _04a2b0_func
		test   %al,%al
		jne    _04a8de_jump
		mov    0x000048(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x0001f4,%eax
		jl     _04a4c0_jump
		mov    %ecx,%eax
		call   _049f7c_func
		jmp    _04a8de_jump

	_04a4c0_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _04a4d5_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000007,%eax
		je     _04a8de_jump

	_04a4d5_jump:
		xor    %edx,%edx
		mov    0x000070(%ecx),%dl
		test   %edx,%edx
		jne    _04a4e7_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _04a4f3_jump

	_04a4e7_jump:
		cmp    $0x000001,%edx
		jne    _04a4f3_jump
		orb    $0x000008,0x000081(%ecx)

	_04a4f3_jump:
		cmpb   $0x000000,0x00007b(%ecx)
		je     _04a82d_jump
		xor    %eax,%eax
		mov    _0c1b44_data,%dx
		mov    _0c1b84_data,%al
		mov    0x000028(%ecx),%bx
		add    %edx,%eax
		movzbw 0x000068(%ecx),%si
		sub    %ebx,%eax
		sub    %esi,%eax
		movswl %ax,%edx
		mov    %eax,%esi
		mov    %edx,%eax
		test   %eax,%eax
		jge    _04a527_jump
		neg    %eax

	_04a527_jump:
		sar    %eax
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%ecx),%bx
		mov    0x000069(%ecx),%al
		add    %ebx,%eax
		mov    _0c1b48_data,%bx
		sub    %ebx,%eax
		mov    %eax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%ebx
		mov    _0c1b85_data,%al
		sub    %eax,%ebx
		incw   0x00004a(%ecx)
		mov    %ecx,%eax
		mov    %bx,0x00000c(%esp)
		call   _049d88_func
		test   %al,%al
		je     _04a592_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _04a586_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000a,%eax
		jne    _04a586_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d498_func
		jmp    _04a689_jump

	_04a586_jump:
		mov    %ecx,%eax
		call   _049d1c_func
		jmp    _04a689_jump

	_04a592_jump:
		cmpb   $0x000000,_0c1ed2_data
		jne    _04a5a8_jump
		cmpb   $0x000000,_0c1ed4_data
		je     _04a813_jump

	_04a5a8_jump:
		lea    0x000008(%esp),%edx
		mov    %ecx,%eax
		call   _049bf0_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _04a5eb_jump
		movswl %si,%eax
		cmp    $0xfffffff6,%eax
		jge    _04a5eb_jump
		movswl %di,%eax
		mov    0x000006(%esp),%edx
		neg    %eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _04a61d_jump
		mov    (%esp),%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04a61d_jump

	_04a5eb_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _04a646_jump
		movswl %si,%eax
		cmp    $0x00000a,%eax
		jle    _04a646_jump
		cmp    0x000008(%esp),%di
		jg     _04a61d_jump
		mov    (%esp),%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _04a646_jump

	_04a61d_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04a630_jump
		mov    %ecx,%eax
		call   _049d1c_func
		jmp    _04a663_jump

	_04a630_jump:
		testb  $0x000004,0x000007(%ebp)
		je     _04a663_jump
		mov    $0x000009,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _04a663_jump

	_04a646_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _04a663_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000a,%eax
		jne    _04a663_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d498_func

	_04a663_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _04a674_jump
		movw   $0x00fffd,0x000042(%ecx)

	_04a674_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jle    _04a689_jump
		movw   $0x000003,0x000042(%ecx)

	_04a689_jump:
		movswl %di,%eax
		cmp    $0x000028,%eax
		jge    _04a6d6_jump
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jge    _04a6d6_jump
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _04a6d6_jump
		testb  $0x000002,0x000007(%ebp)
		je     _04a6d6_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _04a6c0_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a0_func

	_04a6c0_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _01d498_func
		movw   $0x000001,0x000052(%ecx)
		movb   $0x000000,0x00007f(%ecx)

	_04a6d6_jump:
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _04a6f8_jump
		mov    0x00007f(%ecx),%dl
		xor    %eax,%eax
		inc    %dl
		mov    %dl,%al
		mov    %dl,0x00007f(%ecx)
		cmp    $0x000028,%eax
		jle    _04a6f8_jump
		movw   $0x000000,0x000052(%ecx)

	_04a6f8_jump:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000074(%ecx),%al
		add    %eax,%edx
		mov    _0c247c_data,%eax
		sar    $0x000010,%eax
		sub    $0x000032,%eax
		cmp    %eax,%edx
		jge    _04a716_jump
		addw   $0x000002,0x000042(%ecx)

	_04a716_jump:
		movswl %si,%edx
		mov    %ecx,%eax
		call   _049dcc_func
		jmp    _04a89c_jump

	_04a725_case:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		cmp    $0x000001,%edx
		je     _04a73d_jump
		test   %edx,%edx
		jne    _04a74b_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x00000a,%eax
		jne    _04a74b_jump

	_04a73d_jump:
		mov    $0x000008,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func

	_04a74b_jump:
		movw   $0x000000,0x000040(%ecx)
		jmp    _04a689_jump

	_04a756_case:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		cmp    $0x000002,%edx
		je     _04a689_jump
		test   %edx,%edx
		jne    _04a776_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000009,%eax
		je     _04a689_jump

	_04a776_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _04a78b_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000a,%eax
		je     _04a689_jump

	_04a78b_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _04a7a0_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000b,%eax
		je     _04a689_jump

	_04a7a0_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		jmp    _04a689_jump

	_04a7b3_case:
		mov    %ecx,%eax
		call   _049d1c_func
		test   %al,%al
		je     _04a689_jump
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04a7f9_jump
		xor    %eax,%eax
		mov    0x000071(%ecx),%al
		cmp    $0x000001,%eax
		jne    _04a689_jump
		decw   0x000042(%ecx)
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _04a689_jump
		movw   $0x00fffd,0x000042(%ecx)
		jmp    _04a689_jump

	_04a7f9_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jle    _04a689_jump
		movw   $0x000001,0x000042(%ecx)
		jmp    _04a689_jump

	_04a813_jump:
		mov    _0c1b89_data,%al
		cmp    $0x000003,%al
		ja     _04a689_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_04a464_switch(,%eax,4)

	_04a82d_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x000002,%eax
		je     _04a89c_jump
		cmp    $0x000001,%eax
		jne    _04a861_jump
		mov    $0x000008,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _058bb4_func

	_04a861_jump:
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01dc54_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shl    $0x000004,%dl
		shr    $0x000007,%al
		shr    $0x000007,%dl
		movzbl %al,%ebp
		xor    %eax,%eax
		mov    %dl,%al
		cmp    %eax,%ebp
		je     _04a89c_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _058bb4_func

	_04a89c_jump:
		xor    %eax,%eax
		mov    0x000065(%ecx),%al
		testb  $0x000001,_092204_data(%eax)
		je     _04a8b0_jump
		movw   $0x000000,0x000042(%ecx)

	_04a8b0_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024568_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _04a8cd_jump
		movw   $0x000000,0x000040(%ecx)

	_04a8cd_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		je     _04a8de_jump
		mov    %ecx,%eax
		call   _024ba8_func

	_04a8de_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a8e8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		movswl %dx,%eax
		cmp    $0x000001,%eax
		jne    _04a92d_jump
		mov    %ecx,%eax
		call   _01e92c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _04a918_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		pop    %ecx
		pop    %ebx
		ret    

	_04a918_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		andb   $0x0000ef,0x000081(%ecx)

	_04a92d_jump:
		pop    %ecx
		pop    %ebx
		ret    



_04a930_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _04a967_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000003,%eax
		jne    _04a967_jump
		movw   $0x000000,0x000040(%ecx)
		mov    0x000081(%ecx),%dl
		movw   $0x00fff8,0x000042(%ecx)
		and    $0x0000ef,%dl
		mov    %dl,0x000081(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04a967_jump:
		mov    %ecx,%eax
		call   _04ab40_func
		cmpw   $0x000000,0x00004a(%ecx)
		je     _04a9a4_jump
		mov    %ecx,%eax
		call   _049d1c_func
		test   %al,%al
		je     _04a9a4_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _04a99e_jump
		movw   $0x000002,0x000040(%ecx)
		jmp    _04a9a4_jump

	_04a99e_jump:
		movw   $0x00fffe,0x000040(%ecx)

	_04a9a4_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		je     _04a9e4_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01d754_func
		test   %ax,%ax
		je     _04a9d6_jump
		movw   $0x0001f6,0x00004a(%ecx)
		movw   $0x000000,0x000040(%ecx)

	_04a9d6_jump:
		mov    %ecx,%eax
		call   _04d2c4_func
		mov    %ecx,%eax
		call   _024ba8_func

	_04a9e4_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024568_func
		movzbw %al,%si
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _04aa3e_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000074(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e288_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _04aa6b_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04aa6b_jump
		movw   $0x000001,0x000042(%ecx)
		jmp    _04aa6b_jump

	_04aa3e_jump:
		xor    %eax,%eax
		mov    0x000066(%ecx),%al
		testb  $0x000002,_092204_data(%eax)
		jne    _04aa6b_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _058bb4_func

	_04aa6b_jump:
		movswl %si,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _04aacf_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _04aa8d_jump
		mov    %ecx,%eax
		call   _01dd18_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04aa8d_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,0x000081(%ecx)
		mov    %bh,%ah
		mov    0x000040(%ecx),%bx
		or     %al,%ah
		neg    %ebx
		mov    %ah,0x000081(%ecx)
		mov    %bx,0x000040(%ecx)

	_04aacf_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04aad4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		movswl %dx,%eax
		cmp    $0x000001,%eax
		jne    _04ab3a_jump
		mov    _0c1ec0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04aaf8_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _04ab01_jump

	_04aaf8_jump:
		jge    _04ab01_jump
		orb    $0x000008,0x000081(%ecx)

	_04ab01_jump:
		mov    %ecx,%eax
		call   _01e92c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _04ab25_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		pop    %ecx
		pop    %ebx
		ret    

	_04ab25_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		andb   $0x0000ef,0x000081(%ecx)

	_04ab3a_jump:
		pop    %ecx
		pop    %ebx
		ret    



_04ab40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		cmpb   $0x000000,_0c1ed2_data
		jne    _04ab5f_jump
		cmpb   $0x000000,_0c1ed4_data
		je     _04ac8d_jump

	_04ab5f_jump:
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		mov    %esp,%edx
		mov    %esi,%eax
		call   _073538_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04ab7d_jump
		neg    %eax

	_04ab7d_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jg     _04acc1_jump
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000023,%eax
		jge    _04acc1_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _04acc1_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _04abc8_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _04abf1_jump

	_04abc8_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _04acc1_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04acc1_jump

	_04abf1_jump:
		mov    _0c1ec0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _04ac0a_jump
		mov    $0x000001,%eax
		jg     _04ac0a_jump
		neg    %eax

	_04ac0a_jump:
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		neg    %edx
		cmp    $0x000000,%eax
		je     _04ac22_jump
		mov    $0x000001,%eax
		jg     _04ac22_jump
		neg    %eax

	_04ac22_jump:
		cmp    %edx,%eax
		jne    _04acc1_jump
		xor    %edx,%eax
		movw   $0x000000,0x000040(%esi)
		mov    _0c1b89_data,%al
		movw   $0x000000,0x000042(%esi)
		cmp    $0x000002,%eax
		je     _04ac4d_jump
		movw   $0x0001f5,0x00004a(%esi)
		jmp    _04acc1_jump

	_04ac4d_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000004,0x000007(%ebx,%eax,1)
		je     _04acc1_jump
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _04acba_jump

	_04ac8d_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _04acc1_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%eax
		jne    _04acc1_jump
		mov    $0x00000c,%edx
		mov    $0x000001,%ebx
		mov    %esi,%eax
		movw   $0x000000,0x00004a(%esi)
		call   _01d498_func
		mov    $0x000008,%edx

	_04acba_jump:
		mov    %esi,%eax
		call   _058bb4_func

	_04acc1_jump:
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04acd0_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0c2576_data,%ecx
		mov    _0c2572_data,%esi
		sar    $0x000011,%ecx
		sar    $0x000010,%esi
		add    %esi,%ecx
		mov    _0c2574_data,%edi
		mov    %ecx,%esi
		mov    _0c2578_data,%ecx
		sar    $0x000010,%edi
		sar    $0x000011,%ecx
		add    %edi,%ecx
		mov    %ecx,(%esp)
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		sub    %ecx,%esi
		mov    %si,(%edx)
		testb  $0x000008,0x000081(%eax)
		je     _04ad1e_jump
		sub    $0x000030,%esi
		mov    %si,(%edx)
		jmp    _04ad26_jump

	_04ad1e_jump:
		mov    %esi,%ecx
		add    $0x000030,%ecx
		mov    %cx,(%edx)

	_04ad26_jump:
		mov    (%esp),%eax
		sub    $0x000070,%eax
		mov    %ax,(%ebx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04ad38_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    %esp,%ebx
		lea    0x000004(%esp),%edx
		call   _04acd0_func
		mov    0x000004(%esp),%edx
		mov    0x000028(%ecx),%ax
		sub    %eax,%edx
		mov    %dx,0x000004(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04ad6b_jump
		neg    %eax

	_04ad6b_jump:
		mov    %ax,0x000004(%esp)
		mov    (%esp),%ebx
		mov    0x00002c(%ecx),%ax
		sub    %eax,%ebx
		mov    %bx,(%esp)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		test   %eax,%eax
		jge    _04ad8c_jump
		neg    %eax

	_04ad8c_jump:
		mov    0x000002(%esp),%ebx
		mov    %si,%dx
		sar    $0x000010,%ebx
		mov    %ax,(%esp)
		cmp    %edx,%ebx
		jge    _04adae_jump
		movswl %ax,%edx
		xor    %eax,%eax
		mov    %di,%ax
		cmp    %eax,%edx
		jge    _04adae_jump
		mov    $0x000001,%al
		jmp    _04adb0_jump

	_04adae_jump:
		xor    %al,%al

	_04adb0_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04adb8_func:
		push   %ebx
		push   %edx
		mov    _0c259a_data,%dx
		mov    %dx,_0c25a2_data
		mov    _0c259c_data,%dx
		mov    %dx,_0c25a4_data
		call   _0186d4_func
		mov    _0ce504_data,%bx
		mov    %eax,%edx
		mov    %ax,_0c4598_data
		mov    _0ce508_data,%ax
		sub    %ebx,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		sub    $0x000010,%eax
		add    $0x000010,%edx
		mov    %ax,_0c25a6_data
		mov    %dx,_0c25a8_data
		call   _018750_func

	_04ae0e_jump:
		pop    %edx
		pop    %ebx
		ret    



_04ae14_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		cmpb   $0x000000,_0c25b1_data
		jne    _04aed8_jump
		mov    _0c25a2_data,%ecx
		mov    _0c24be_data,%eax
		mov    _0c25a0_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0c247a_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _04ae5c_jump
		cmp    %ecx,%eax
		jg     _04ae5c_jump
		mov    $0x000001,%eax
		jmp    _04ae5e_jump

	_04ae5c_jump:
		xor    %eax,%eax

	_04ae5e_jump:
		test   %eax,%eax
		je     _04aea1_jump
		mov    _0c25a6_data,%ecx
		mov    _0c24c0_data,%eax
		mov    _0c25a4_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0c247c_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _04ae97_jump
		cmp    %ecx,%eax
		jg     _04ae97_jump
		mov    $0x000001,%eax
		jmp    _04ae99_jump

	_04ae97_jump:
		xor    %eax,%eax

	_04ae99_jump:
		test   %eax,%eax
		je     _04aea1_jump
		mov    $0x000001,%al
		jmp    _04aea3_jump

	_04aea1_jump:
		xor    %al,%al

	_04aea3_jump:
		mov    %al,_0c25b1_data
		test   %al,%al
		je     _04af0f_jump
		mov    _0c247c_data,%ax
		mov    %ax,_0c259c_data
		mov    %ax,_0c259a_data
		mov    _0c25a6_data,%ax
		mov    %ax,_0c259e_data
		mov    _0c25a8_data,%ax
		mov    %ax,_0c25a0_data
		jmp    _04af0f_jump

	_04aed8_jump:
		mov    _0c259e_data,%ax
		mov    _0c247e_data,%bx
		cmp    %bx,%ax
		jge    _04aef1_jump
		mov    %bx,_0c259e_data

	_04aef1_jump:
		mov    0x00007f(%edx),%bl
		test   %bl,%bl
		je     _04aeff_jump
		mov    %bl,%bh
		dec    %bh
		mov    %bh,0x00007f(%edx)

	_04aeff_jump:
		mov    0x00005a(%edx),%cx
		test   %cx,%cx
		je     _04af0f_jump
		mov    %ecx,%esi
		dec    %esi
		mov    %si,0x00005a(%edx)

	_04af0f_jump:
		cmpb   $0x000000,_0c25b1_data
		je     _04af25_jump
		cmpb   $0x000000,0x00007f(%edx)
		jne    _04af25_jump
		mov    $0x000001,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04af25_jump:
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04af2c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		test   %dl,%dl
		jbe    _04af3e_jump
		cmp    $0x000001,%dl
		je     _04af69_jump
		jmp    _04af98_jump

	_04af3e_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0c2598_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dh
		mov    %eax,0x000028(%ebx)
		and    $0x0000f7,%dh
		mov    $0xffffffff,%eax
		mov    %dh,0x000081(%ebx)
		jmp    _04b003_jump

	_04af69_jump:
		mov    _0c259a_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ebx),%al
		add    $0x000140,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%ebx)
		mov    0x000081(%ebx),%dl
		or     $0x000008,%dl
		mov    $0x000001,%eax
		mov    %dl,0x000081(%ebx)
		jmp    _04b003_jump

	_04af98_jump:
		mov    _0c2598_data,%esi
		mov    _0c259a_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		lea    0x000140(%esi,%edi,1),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x000068(%ebx),%cl
		add    %ecx,%ebp
		sub    %eax,%ebp
		mov    %ebp,%eax
		movswl %ax,%edx
		test   %edx,%edx
		jle    _04afef_jump
		add    $0x000140,%edi
		sub    %ecx,%edi
		mov    0x000081(%ebx),%ch
		mov    %edi,0x000028(%ebx)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%ebx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_04afef_jump:
		sub    %ecx,%esi
		mov    0x000081(%ebx),%cl
		mov    %esi,0x000028(%ebx)
		or     $0x000008,%cl
		mov    %cl,0x000081(%ebx)

	_04b003_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_04b00c_switch:
		.long   _04b0bc_case
		.long   _04b0b6_case
		.long   _04b643_case
		.long   _04b0d0_case
		.long   _04b4ea_case
		.long   _04b836_case
		.long   _04b844_case
		.long   _04b966_case
		.long   _04b721_case
		.long   _04b613_case
		.long   _04b235_case
		.long   _04b77d_case
		.long   _04b6f8_case
		.long   _04b6cf_case
		.long   _04b4c1_case
		.long   _04b443_case
		.long   _04ba7d_case
		.long   _04ba7d_case
		.long   _04bbad_case
		.long   _04bb52_case
		.long   _04b2e1_case
		.long   _04b5e8_case
		.long   _04b3a8_case
		.long   _04b272_case
		.long   _04b513_case




_04b070_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    _0c2598_data,%edx
		mov    _0c259a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		lea    0x000140(%eax),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edi
		cmpb   $0x000000,_0c25b4_data
		jne    _04bc6a_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04b0b6_case:
		incb   _0c25b7_data

	_04b0bc_case:
		xor    %dl,%dl
		mov    %dl,_0c25b3_data
		movb   $0x000001,_0c25b4_data
		jmp    _04bca4_jump

	_04b0d0_case:
		mov    _0c25b8_data,%al
		mov    %al,_0c25b7_data
		mov    _0c25b2_data,%al
		mov    %al,_0c25b3_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0c25b7_data,%al
		mov    _0c25b3_data,%dl
		mov    _0966b8_data(,%eax,4),%eax
		mov    (%edx,%eax,1),%al
		mov    %al,_0dbc0b_data
		xor    %eax,%eax
		mov    _0dbc0b_data,%al
		cmp    $0x00001a,%eax
		je     _04b11a_jump
		xor    %eax,%eax
		mov    _0dbc0b_data,%al
		cmp    $0x00000e,%eax
		jne    _04b15d_jump

	_04b11a_jump:
		xor    %eax,%eax
		mov    _0dbc0b_data,%al
		cmp    $0x00001a,%eax
		je     _04b12f_jump
		cmp    $0x00000e,%eax
		jne    _04b218_jump

	_04b12f_jump:
		mov    _0c25b3_data,%dh
		xor    %eax,%eax
		inc    %dh
		mov    _0c25b7_data,%al
		mov    %dh,_0c25b3_data
		xor    %edx,%edx
		mov    _0966b8_data(,%eax,4),%eax
		mov    _0c25b3_data,%dl
		mov    (%edx,%eax,1),%al
		mov    %al,_0dbc0b_data
		jmp    _04b11a_jump

	_04b15d_jump:
		xor    %eax,%eax
		mov    _0dbc0b_data,%al
		cmp    $0x000014,%eax
		jne    _04b178_jump
		mov    %dl,%bl
		inc    %bl
		mov    %bl,_0c25b3_data
		jmp    _04b218_jump

	_04b178_jump:
		xor    %eax,%eax
		mov    _0dbc0b_data,%al
		cmp    $0x000012,%eax
		je     _04b1a0_jump
		xor    %eax,%eax
		mov    _0dbc0b_data,%al
		cmp    $0x000013,%eax
		je     _04b1a0_jump
		xor    %eax,%eax
		mov    _0dbc0b_data,%al
		cmp    $0x000015,%eax
		jne    _04b218_jump

	_04b1a0_jump:
		xor    %eax,%eax
		mov    _0dbc0b_data,%al
		cmp    $0x000015,%eax
		jne    _04b1b2_jump
		incb   _0c25b3_data

	_04b1b2_jump:
		mov    _0c25b3_data,%dh
		xor    %eax,%eax
		inc    %dh
		mov    _0c25b7_data,%al
		mov    %dh,_0c25b3_data

	_04b1c7_jump:
		xor    %edx,%edx
		mov    _0966b8_data(,%eax,4),%eax
		mov    _0c25b3_data,%dl
		mov    (%edx,%eax,1),%al
		mov    %al,_0dbc0b_data
		xor    %eax,%eax
		mov    _0dbc0b_data,%al
		cmp    $0x000015,%eax
		je     _04b1ef_jump
		cmp    $0x000014,%eax
		jne    _04b218_jump

	_04b1ef_jump:
		xor    %eax,%eax
		mov    _0dbc0b_data,%al
		cmp    $0x000015,%eax
		jne    _04b201_jump
		incb   _0c25b3_data

	_04b201_jump:
		mov    _0c25b3_data,%dl
		xor    %eax,%eax
		inc    %dl
		mov    _0c25b7_data,%al
		mov    %dl,_0c25b3_data
		jmp    _04b1c7_jump

	_04b218_jump:
		mov    $0x0000ff,%bl
		xor    %cl,%cl
		mov    %bl,_0c25b8_data
		mov    $0x000001,%bh
		mov    %cl,_0dbc0a_data
		mov    %bh,_0c25b4_data
		jmp    _04bca4_jump

	_04b235_case:
		mov    _0c25b3_data,%al
		and    $0x0000ff,%eax
		mov    (%edx,%eax,1),%al
		xor    %ah,%ah
		mov    _0c25b7_data,%dl
		mov    %ah,_0c25b3_data
		cmp    %dl,%al
		jne    _04b260_jump
		mov    %dl,%dh
		inc    %dh
		mov    %dh,_0c25b7_data
		jmp    _04b265_jump

	_04b260_jump:
		mov    %al,_0c25b7_data

	_04b265_jump:
		xor    %bl,%bl
		mov    %bl,_0c25b4_data
		jmp    _04bca4_jump

	_04b272_case:
		xor    %eax,%eax
		mov    0x000077(%esi),%al
		cmp    $0x000005,%eax
		jne    _04b28a_jump
		call   _07387c_func
		orb    $0x000001,_0c32ec_data
		jmp    _04b2d4_jump

	_04b28a_jump:
		mov    $0xffff8300,%ebx
		mov    $0x000003,%edx
		mov    _0c32ec_data,%ch
		mov    $_0c1b1c_data,%eax
		or     $0x000002,%ch
		mov    %bx,_0c257c_data
		mov    $0x000036,%ebx
		mov    %ch,_0c32ec_data
		call   _01d4a8_func
		mov    $0x000001,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d354_func
		inc    %eax
		mov    %ax,0x000048(%esi)
		movb   $0x000001,_0c2570_data

	_04b2d4_jump:
		xor    %dl,%dl
		mov    %dl,_0c25b4_data
		jmp    _04bca4_jump

	_04b2e1_case:
		xor    %eax,%eax
		mov    0x000077(%esi),%al
		cmp    $0x00000c,%eax
		jne    _04b2fe_jump
		mov    $0x000013,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _04b380_jump

	_04b2fe_jump:
		mov    _0c1b04_data,%eax
		mov    _0c1b08_data,%dx
		xor    %ebx,%ebx
		test   %dx,%dx
		jg     _04b31e_jump
		jmp    _04b380_jump

	_04b313_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %dx,%bx
		jge    _04b380_jump

	_04b31e_jump:
		xor    %ecx,%ecx
		mov    0x000060(%eax),%cx
		cmp    $0x0000ab,%ecx
		jne    _04b313_jump
		mov    (%eax),%edx
		mov    %edx,(%esi)
		mov    0x000004(%eax),%edx
		mov    %edx,0x000004(%esi)
		mov    0x000008(%eax),%edx
		mov    %edx,0x000008(%esi)
		mov    0x00000c(%eax),%edx
		mov    %edx,0x00000c(%esi)
		mov    0x000044(%eax),%dx
		mov    %dx,0x000044(%esi)
		mov    0x00006d(%eax),%dl
		mov    %dl,0x00006d(%esi)
		mov    0x00006c(%eax),%dl
		mov    0x000069(%esi),%bl
		mov    %dl,0x00006c(%esi)
		add    $0x000004,%bl
		mov    0x00006a(%eax),%al
		movb   $0x000000,0x00006b(%esi)
		mov    %bl,0x000069(%esi)
		mov    0x000081(%esi),%bh
		mov    %al,0x00006a(%esi)
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%esi)
		xor    %ebx,%ebx
		mov    %ebx,_0c1b40_data

	_04b380_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _058bb4_func
		mov    0x000048(%esi),%ax
		xor    %cl,%cl
		add    $0x000080,%eax
		mov    %cl,_0c25b4_data
		mov    %ax,0x000048(%esi)
		jmp    _04bca4_jump

	_04b3a8_case:
		xor    %eax,%eax
		mov    0x000077(%esi),%al
		cmp    $0x00000c,%eax
		jne    _04b3b6_jump
		subb   $0x000010,0x000069(%esi)

	_04b3b6_jump:
		mov    _0c259a_data,%dx
		mov    0x000081(%esi),%bl
		xor    %eax,%eax
		add    $0x0000a0,%edx
		mov    0x000068(%esi),%al
		and    $0x0000f7,%bl
		sub    %eax,%edx
		mov    %bl,0x000081(%esi)
		mov    %dx,_0c25aa_data
		mov    _0c25a8_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%dl
		mov    %eax,0x000028(%esi)
		mov    _0c4598_data,%ax
		mov    $0x000001,%ebx
		sub    %edx,%eax
		mov    $0x000002,%edx
		mov    %ax,_0c25ac_data
		mov    %esi,%eax
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %cl,%cl
		call   _058bb4_func
		mov    $0x0000ff,%bh
		mov    %cl,_0c25b0_data
		mov    $0x000001,%ch
		mov    %bh,_0c25ae_data
		mov    %ch,_0c25af_data
		mov    %cl,_0c25b4_data
		jmp    _04bca4_jump

	_04b443_case:
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    _0c4598_data,%dx
		mov    %ax,_0c25aa_data
		mov    _0ce504_data,%ax
		sub    $0x0000e6,%edx
		add    %eax,%edx
		mov    $0x000006,%ebx
		mov    %dx,_0c25ac_data
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		mov    $0x0000ff,%ecx
		call   _058bb4_func
		mov    $0x0000ff,%ah
		mov    $0x000001,%dh
		mov    %ecx,%ebx
		mov    %ah,_0c25ae_data
		mov    %ah,_0c25b0_data
		mov    %dh,_0c25af_data
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _018420_func
		xor    %bl,%bl
		mov    %bl,_0c25b4_data
		jmp    _04bca4_jump

	_04b4c1_case:
		mov    $0x000005,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _058bb4_func
		xor    %bh,%bh
		mov    %bh,_0c25b4_data
		jmp    _04bca4_jump

	_04b4ea_case:
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _058bb4_func
		xor    %ah,%ah
		mov    %ah,_0c25b4_data
		jmp    _04bca4_jump

	_04b513_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _04b551_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000014,%eax
		jne    _04b551_jump
		mov    %esi,%eax
		call   _01dc54_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %cl,%cl
		call   _058bb4_func
		mov    %cl,_0c25b4_data
		jmp    _04bca4_jump

	_04b551_jump:
		mov    %esi,%eax
		mov    0x000081(%esi),%bl
		call   _01dc54_func
		mov    0x000081(%esi),%al
		xor    %ecx,%ecx
		shl    $0x000004,%al
		shl    $0x000004,%bl
		shr    $0x000007,%al
		shr    $0x000007,%bl
		mov    %al,%cl
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %bl,%al
		mov    %bl,%dl
		cmp    %eax,%ecx
		je     _04bca4_jump
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		or     %al,%bl
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		xor    %ebx,%ebx
		call   _01d4a8_func
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01d354_func
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _058bb4_func
		mov    0x000048(%esi),%dx
		xor    %bh,%bh
		add    %ecx,%edx
		mov    %bh,_0c25b4_data
		mov    %dx,0x000048(%esi)
		jmp    _04bca4_jump

	_04b5e8_case:
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		sub    $0x000030,%eax
		mov    %ax,_0c257c_data
		testb  $0x000001,_0c1b44_data
		je     _04b60a_jump
		orb    $0x000001,_0c257c_data
		jmp    _04b643_case

	_04b60a_jump:
		andb   $0x0000fe,_0c257c_data
		jmp    _04b643_case

	_04b613_case:
		mov    _0dbc0a_data,%cl
		xor    %bh,%bh
		movb   $0x000003,0x00007e(%esi)
		mov    %bh,_0c25b5_data
		test   %cl,%cl
		jne    _04b635_jump
		movb   $0x000001,_0c25b4_data
		jmp    _04bca4_jump

	_04b635_jump:
		mov    $0x000004,%ah
		mov    %bh,_0dbc0a_data
		mov    %ah,_0dbc0b_data

	_04b643_case:
		mov    0x000028(%esi),%ax
		mov    _0ce504_data,%cx
		mov    %ax,_0c25aa_data
		mov    _0c259e_data,%ax
		add    %ecx,%eax
		sub    $0x000080,%eax
		mov    %ax,_0c25ac_data
		xor    %eax,%eax
		mov    _0dbc0b_data,%al
		cmp    $0x000004,%eax
		jne    _04b67b_jump
		mov    $0x000008,%ebx
		jmp    _04b680_jump

	_04b67b_jump:
		mov    $0x000006,%ebx

	_04b680_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x0000ff,%bh
		mov    $0x000001,%ch
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    %bh,_0c25ae_data
		mov    %ch,_0c25af_data
		mov    $0x0000ff,%ecx
		mov    %bh,_0c25b0_data
		mov    %ecx,%ebx
		call   _018420_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _058bb4_func
		xor    %al,%al
		mov    %al,_0c25b4_data
		jmp    _04bca4_jump

	_04b6cf_case:
		mov    $0x000014,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %cl,%cl
		call   _058bb4_func
		mov    %cl,_0c25b4_data
		jmp    _04bca4_jump

	_04b6f8_case:
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _058bb4_func
		mov    %ch,_0c25b4_data
		jmp    _04bca4_jump

	_04b721_case:
		mov    %esi,%eax
		call   _01dc54_func
		testb  $0x000008,0x000081(%esi)
		sete   %al
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _04af2c_func
		mov    _0c259c_data,%eax
		sar    $0x000010,%eax
		sub    $0x000080,%eax
		mov    0x000081(%esi),%dh
		mov    %eax,0x00002c(%esi)
		test   $0x000008,%dh
		je     _04b765_jump
		subl   $0x000030,0x000028(%esi)
		andb   $0x0000f7,0x000081(%esi)
		jmp    _04b77d_case

	_04b765_jump:
		mov    0x000028(%esi),%edx
		mov    0x000081(%esi),%bl
		add    $0x000030,%edx
		or     $0x000008,%bl
		mov    %edx,0x000028(%esi)
		mov    %bl,0x000081(%esi)

	_04b77d_case:
		mov    0x000081(%esi),%al
		mov    $_0c25ac_data,%ebx
		shl    $0x000004,%al
		mov    $_0c25aa_data,%edx
		shr    $0x000007,%al
		xor    %cl,%cl
		mov    %al,(%esp)
		mov    %esi,%eax
		mov    %cl,_0dbc0c_data
		call   _01dc54_func
		mov    %esi,%eax
		call   _04acd0_func
		mov    $0x000008,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000010,%ch
		call   _01d4a8_func
		mov    $0x000002,%ah
		mov    $0x000001,%edx
		mov    %ch,_0c25ae_data
		mov    %ch,_0c25b0_data
		mov    $0x0000ff,%ecx
		mov    %ah,_0c25af_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018420_func
		xor    %eax,%eax
		mov    _0dbc0b_data,%al
		cmp    $0x00000d,%eax
		jne    _04b7f7_jump
		movw   $0x00ffc0,0x000042(%esi)
		jmp    _04b7fd_jump

	_04b7f7_jump:
		movw   $0x000000,0x000040(%esi)

	_04b7fd_jump:
		mov    (%esp),%al
		mov    0x000081(%esi),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,%dh
		mov    $0x000001,%ebx
		or     %al,%dh
		mov    %esi,%eax
		mov    %dh,0x000081(%esi)
		mov    $0x000002,%edx
		call   _058bb4_func
		xor    %bl,%bl
		mov    %bl,_0c25b4_data
		jmp    _04bca4_jump

	_04b836_case:
		mov    $0x00000c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func

	_04b844_case:
		xor    %eax,%eax
		mov    _0dbc0b_data,%al
		cmp    $0x000008,%eax
		jne    _04b85e_jump
		mov    $0x00000b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func

	_04b85e_jump:
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _04af2c_func
		cwtl   
		test   %eax,%eax
		jle    _04b89c_jump
		mov    0x000028(%esi),%edx
		xor    %eax,%eax
		add    $0x000030,%edx
		mov    0x000068(%esi),%al
		mov    %edx,0x000028(%esi)
		mov    _0c259a_data,%dx
		mov    0x000081(%esi),%bl
		sub    %eax,%edx
		and    $0x0000f7,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%esi)
		sub    $0x000030,%eax
		jmp    _04b8cf_jump

	_04b89c_jump:
		mov    0x000081(%esi),%dh
		mov    0x000028(%esi),%eax
		or     $0x000008,%dh
		sub    $0x000030,%eax
		mov    %dh,0x000081(%esi)
		mov    %eax,0x000028(%esi)
		mov    _0c259c_data,%dx
		xor    %eax,%eax
		add    $0x000140,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		add    $0x000030,%eax

	_04b8cf_jump:
		mov    %ax,_0c25aa_data
		mov    _0c4596_data,%eax
		sar    $0x000010,%eax
		sub    $0x0000e6,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,_0c25ac_data
		xor    %eax,%eax
		mov    _0c25b7_data,%al
		mov    $0x000001,%ch
		lea    0x000000(,%eax,4),%ebx
		xor    %edx,%edx
		mov    _0c25b3_data,%al
		mov    %ch,_0c25af_data
		mov    %al,%dl
		inc    %al
		mov    _0966b8_data(%ebx),%ebx
		mov    %al,_0c25b3_data
		xor    %eax,%eax
		mov    $0x0000ff,%ecx
		mov    (%edx,%ebx,1),%al
		mov    $0x0000ff,%bh
		shl    $0x00000a,%eax
		mov    $0x000001,%edx
		mov    %eax,_0c25c0_data
		mov    %bh,_0c25ae_data
		mov    %bh,_0c25b0_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018420_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _058bb4_func
		xor    %al,%al
		mov    %al,_0c25b4_data
		jmp    _04bca4_jump

	_04b966_case:
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _04af2c_func
		cwtl   
		test   %eax,%eax
		jle    _04b9b2_jump
		mov    _0c259a_data,%dx
		mov    0x000081(%esi),%cl
		mov    0x000028(%esi),%ebp
		xor    %eax,%eax
		and    $0x0000f7,%cl
		mov    0x000068(%esi),%al
		add    $0x000050,%ebp
		sub    %eax,%edx
		mov    %cl,0x000081(%esi)
		mov    %edx,%eax
		mov    %ebp,0x000028(%esi)
		sub    $0x000050,%eax
		jmp    _04b9e5_jump

	_04b9b2_jump:
		mov    _0c259c_data,%dx
		mov    0x000081(%esi),%bh
		mov    0x000028(%esi),%ecx
		xor    %eax,%eax
		or     $0x000008,%bh
		add    $0x000140,%edx
		mov    0x000068(%esi),%al
		sub    $0x000060,%ecx
		sub    %eax,%edx
		mov    %bh,0x000081(%esi)
		mov    %edx,%eax
		mov    %ecx,0x000028(%esi)
		add    $0x000040,%eax

	_04b9e5_jump:
		mov    %ax,_0c25aa_data
		mov    _0c4596_data,%eax
		sar    $0x000010,%eax
		sub    $0x0000b4,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,_0c25ac_data
		xor    %eax,%eax
		mov    _0c25b7_data,%al
		mov    $0x0000ff,%ch
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0c25b3_data,%al
		mov    %ch,_0c25ae_data
		mov    %al,%bl
		inc    %al
		mov    _0966b8_data(%edx),%edx
		mov    %al,_0c25b3_data
		xor    %eax,%eax
		mov    %ch,_0c25b0_data
		mov    (%edx,%ebx,1),%al
		mov    $0x0000ff,%ecx
		shl    $0x00000a,%eax
		mov    $0x000001,%edx
		mov    %eax,_0c25c0_data
		mov    $0x000001,%ah
		mov    %ecx,%ebx
		mov    %ah,_0c25af_data
		mov    %esi,%eax
		call   _018420_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _058bb4_func
		xor    %dl,%dl
		mov    %dl,_0c25b4_data
		jmp    _04bca4_jump

	_04ba7d_case:
		mov    _0c4596_data,%eax
		sar    $0x000010,%eax
		sub    $0x000048,%eax
		mov    %eax,0x00002c(%esi)
		xor    %eax,%eax
		mov    _0dbc0b_data,%al
		cmp    $0x000013,%eax
		jne    _04ba9b_jump
		subl   $0x000030,0x00002c(%esi)

	_04ba9b_jump:
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _04af2c_func
		cwtl   
		test   %eax,%eax
		jle    _04bacd_jump
		mov    0x000028(%esi),%eax
		add    $0x000044,%eax
		mov    0x000081(%esi),%bl
		mov    %eax,0x000028(%esi)
		and    $0x0000f7,%bl
		mov    0x000028(%esi),%ax
		mov    %bl,0x000081(%esi)
		sub    $0x000018,%eax
		jmp    _04baee_jump

	_04bacd_jump:
		mov    0x000028(%esi),%ebp
		sub    $0x00004c,%ebp
		mov    0x000081(%esi),%dh
		mov    %ebp,0x000028(%esi)
		or     $0x000008,%dh
		mov    0x000028(%esi),%ax
		mov    %dh,0x000081(%esi)
		add    $0x000010,%eax

	_04baee_jump:
		mov    %ax,_0c25aa_data
		mov    $0x00000e,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000001,%ch
		call   _01d4a8_func
		mov    $0x0000ff,%bh
		mov    $0x000001,%edx
		mov    %ch,_0c25af_data
		mov    0x00002c(%esi),%ax
		mov    $0x0000ff,%ecx
		mov    %ax,_0c25ac_data
		mov    %bh,_0c25ae_data
		mov    %bh,_0c25b0_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018420_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _058bb4_func
		xor    %al,%al
		mov    %al,_0c25b4_data
		jmp    _04bca4_jump

	_04bb52_case:
		mov    $0x00000e,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _058bb4_func
		xor    %eax,%eax
		mov    _0c25b7_data,%al
		lea    0x000000(,%eax,4),%ebx
		xor    %edx,%edx
		mov    _0c25b3_data,%al
		mov    %al,%dl
		inc    %al
		mov    _0966b8_data(%ebx),%ebx
		mov    %al,_0c25b3_data
		mov    (%edx,%ebx,1),%al
		mov    0x000048(%esi),%dx
		xor    %ah,%ah
		imul   %eax,%edx
		mov    %ah,_0c25b4_data
		mov    %dx,0x000048(%esi)
		jmp    _04bca4_jump

	_04bbad_case:
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		movswl %di,%eax
		cmp    %eax,%edx
		jle    _04bbe2_jump
		xor    %eax,%eax
		mov    _0c259a_data,%dx
		mov    0x000068(%esi),%al
		mov    0x000081(%esi),%cl
		sub    %eax,%edx
		and    $0x0000f7,%cl
		mov    %edx,%eax
		mov    %cl,0x000081(%esi)
		sub    $0x000038,%eax
		jmp    _04bc08_jump

	_04bbe2_jump:
		mov    _0c259c_data,%ax
		mov    0x000081(%esi),%bh
		xor    %edx,%edx
		add    $0x000140,%eax
		mov    0x000068(%esi),%dl
		or     $0x000008,%bh
		sub    %edx,%eax
		mov    %bh,0x000081(%esi)
		add    $0x000030,%eax

	_04bc08_jump:
		mov    %ax,_0c25aa_data
		mov    $0x000004,%ebx
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %ax,_0c25ac_data
		mov    %esi,%eax
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		mov    $0x0000ff,%ch
		call   _058bb4_func
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ch,_0c25ae_data
		mov    %ch,_0c25b0_data
		mov    $0x0000ff,%ecx
		mov    %ah,_0c25af_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018420_func
		xor    %dl,%dl
		mov    %dl,_0c25b4_data
		jmp    _04bca4_jump

	_04bc6a_jump:
		xor    %eax,%eax
		mov    _0c25b7_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0c25b3_data,%al
		mov    %al,%bl
		inc    %al
		mov    _0966b8_data(%edx),%edx
		mov    %al,_0c25b3_data
		mov    (%edx,%ebx,1),%al
		mov    %al,_0dbc0b_data
		xor    %ebx,%ebx
		sub    $0x000002,%al
		mov    %ebx,_0c25c0_data
		cmp    $0x000018,%al
		jbe    _04bcb7_jump

	_04bca4_jump:
		cmpb   $0x000000,_0c25b4_data
		jne    _04bc6a_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04bcb7_jump:
		mov    %al,%bl
		mov    _0c259a_data,%ax
		add    $0x0000a0,%eax
		jmp    *%cs:_04b00c_switch(,%ebx,4)



_04bccc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%edi
		mov    0x00006c(%eax),%al
		xor    %ebp,%ebp
		cmp    $0x00000b,%al
		jb     _04bce6_jump
		jbe    _04bd0d_jump
		cmp    $0x00000c,%al
		je     _04bcff_jump

	_04bce6_jump:
		mov    _0c1b04_data,%esi
		mov    _0c1b08_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _04bd2b_jump
		jmp    _04be60_jump

	_04bcff_jump:
		mov    $0x000003,%ah
		mov    $0x000033,%dl
		mov    %ah,0x000014(%esp)
		mov    %dl,0x000010(%esp)
		jmp    _04bce6_jump

	_04bd0d_jump:
		mov    $0x000003,%dh
		mov    $0x000034,%bl
		mov    %dh,0x000014(%esp)
		mov    %bl,0x000010(%esp)
		jmp    _04bce6_jump

	_04bd1b_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %cx,%ax
		jge    _04be60_jump

	_04bd2b_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000010(%esp),%dl
		mov    0x000060(%esi),%bx
		cmp    %edx,%ebx
		jne    _04bd1b_jump
		cmpl   $0x000000,0x000024(%esi)
		je     _04bd67_jump
		jmp    _04bd1b_jump

	_04bd43_jump:
		movw   $0x000001,0x000050(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _04bdf8_jump

	_04bd54_jump:
		movw   $0x000003,0x000050(%esi)
		mov    0x000040(%edi),%ax
		mov    %ax,0x000040(%esi)
		jmp    _04bdf8_jump

	_04bd67_jump:
		lea    0x000004(%esp),%edx
		lea    0x00000c(%esp),%ecx
		mov    0x000081(%esi),%bh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f584_func
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		xor    %edx,%edx
		mov    %edi,%eax
		mov    0x00001c(%esp),%dl
		call   _01d840_func
		mov    -0x000002(%esp),%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000011,%edx
		add    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		xor    %edx,%edx
		mov    0x00000a(%esp),%ebx
		mov    0x000074(%esi),%dl
		mov    0x000028(%esi),%ax
		sar    $0x000010,%ebx
		mov    %ax,0x00003c(%esi)
		sub    %edx,%ebx
		mov    %ebx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    0x000010(%esp),%cl
		mov    %ax,0x00003e(%esi)
		cmp    $0x000033,%cl
		jb     _04bdf8_jump
		jbe    _04bd43_jump
		cmp    $0x000034,%cl
		je     _04bd54_jump

	_04bdf8_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		movw   $0x000000,0x000042(%esi)
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		mov    0x000002(%ebx,%edx,8),%al
		mov    %al,0x00006a(%esi)
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01dcec_func
		movb   $0x000000,0x000071(%esi)
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		mov    0x000081(%esi),%dl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%dl
		and    $0x000008,%al
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,%bl
		and    $0x0000bf,%bl
		mov    %esi,%ebp
		mov    %bl,0x000081(%esi)

	_04be60_jump:
		mov    %ebp,%eax
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04be6c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		movzbw 0x000068(%eax),%di
		add    0x000028(%eax),%di
		mov    0x00006c(%eax),%al
		mov    %di,0x000004(%esp)
		cmp    $0x00000b,%al
		jb     _04be99_jump
		jbe    _04bfc9_jump
		cmp    $0x00000c,%al
		je     _04bf9c_jump

	_04be99_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _04bea4_jump
		neg    %eax

	_04bea4_jump:
		mov    %ax,(%esp)
		test   %edx,%edx
		jge    _04beae_jump
		add    %ebx,%edi

	_04beae_jump:
		mov    _0c259e_data,%bx
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		mov    _0c259a_data,%ecx
		add    %eax,%edx
		mov    _0c25a0_data,%ax
		sar    $0x000010,%ecx
		sub    %ebx,%eax
		mov    %dx,0x000010(%esp)
		add    $0x0000c8,%eax
		mov    _0c2572_data,%edx
		mov    %ax,0x000008(%esp)
		mov    _0c2576_data,%eax
		sar    $0x000010,%edx
		sar    $0x000011,%eax
		mov    _0c2578_data,%ebx
		add    %edx,%eax
		sar    $0x000011,%ebx
		mov    %eax,%edx
		mov    _0c2574_data,%eax
		sar    $0x000010,%eax
		add    $0x000130,%ecx
		add    %ebx,%eax
		mov    _0c2598_data,%ebx
		mov    %ax,0x00000c(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _04bf32_jump
		cmp    %ecx,%eax
		jg     _04bf32_jump
		mov    $0x000001,%eax
		jmp    _04bf34_jump

	_04bf32_jump:
		xor    %eax,%eax

	_04bf34_jump:
		test   %eax,%eax
		je     _04bf93_jump
		cmp    %di,%dx
		jl     _04bf93_jump
		mov    0x00000c(%esp),%eax
		cmp    0x000010(%esp),%ax
		jl     _04bf93_jump
		mov    -0x000002(%esp),%eax
		movswl %di,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		add    %ebx,%eax
		cmp    %eax,%edx
		jg     _04bf93_jump
		mov    0x00000e(%esp),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _04bf93_jump
		mov    %esi,%eax
		mov    $0x000010,%ebx
		call   _04bccc_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		subw   $0x000040,_0c25ac_data

	_04bf93_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04bf9c_jump:
		mov    0x00003e(%esi),%edx
		sar    $0x000010,%edx
		add    %edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movswl %di,%edi
		sub    %eax,%edi
		jmp    _04be99_jump

	_04bfc9_jump:
		mov    0x00003e(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %eax,%ebx
		jmp    _04be99_jump



_04bff0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		call   _04ae14_func
		test   %al,%al
		je     _04c0a6_jump
		mov    0x00005a(%esi),%dx
		test   %dx,%dx
		je     _04c013_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x00005a(%esi)

	_04c013_jump:
		mov    _0c25b5_data,%ah
		test   %ah,%ah
		je     _04c027_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0c25b5_data

	_04c027_jump:
		mov    0x000081(%esi),%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _04c201_jump
		jmp    _04c09f_jump

	_04c03f_jump:
		mov    _0dbc06_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000e,%eax
		jne    _04c079_jump
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		cmp    $0x00000f,%eax
		jne    _04c079_jump
		mov    0x000081(%esi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_04c079_jump:
		mov    $0xffff8300,%ebx
		mov    %bx,_0c25aa_data
		mov    %bx,_0c25ac_data
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)

	_04c098_jump:
		mov    %esi,%eax
		call   _0185f8_func

	_04c09f_jump:
		mov    %esi,%eax
		call   _04b070_func

	_04c0a6_jump:
		xor    %eax,%eax
		mov    0x000081(%esi),%cl
		mov    0x00006a(%esi),%al
		and    $0x0000fe,%cl
		mov    %ax,_0dbc08_data
		mov    %cl,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04c0c5_jump:
		mov    $_0c25ac_data,%ebx
		mov    %esi,%eax
		mov    $_0c25aa_data,%edx
		call   _01dc54_func
		mov    %esi,%eax
		call   _04acd0_func
		mov    $0x000018,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _04ad38_func
		test   %al,%al
		je     _04c0f6_jump
		movb   $0x000001,_0c25b4_data

	_04c0f6_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    $0x000002,%eax
		jge    _04c1b8_jump
		cmpb   $0x000000,_0c1ed2_data
		je     _04c1b8_jump
		cmpb   $0x000000,_0dbc0c_data
		jne    _04c1b8_jump
		cmpb   $0x000000,_0cdae8_data
		jne    _04c1b8_jump
		xor    %eax,%eax
		mov    _0c6940_data,%al
		test   %eax,%eax
		jne    _04c1b8_jump
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    0x000069(%esi),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movb   $0x000001,_0dbc0c_data
		mov    0x00002c(%esi),%ecx
		mov    _0c1ec0_data,%ebx
		add    %eax,%ecx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000074(%ebx),%dl
		mov    0x000069(%ebx),%al
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		add    0x00002c(%ebx),%eax
		cmp    %eax,%ecx
		jle    _04c182_jump
		addw   $0x000050,0x000042(%esi)
		jmp    _04c187_jump

	_04c182_jump:
		subw   $0x000050,0x000042(%esi)

	_04c187_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %eax,%ebx
		mov    _0c1ec0_data,%eax
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		add    0x000028(%eax),%edx
		cmp    %edx,%ebx
		jle    _04c1a9_jump
		addw   $0x000050,0x000040(%esi)
		jmp    _04c1b8_jump

	_04c1a9_jump:
		subw   $0x000050,0x000040(%esi)
		jmp    _04c1b8_jump

	_04c1b0_jump:
		cmp    $0x000004,%al
		je     _04c0f6_jump

	_04c1b8_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0c25b0_data,%cl
		mov    _0c25ae_data,%bl
		mov    _0c25af_data,%dl
		call   _018420_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _04c098_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000c,%eax
		je     _04c1f5_jump
		cmp    $0x00000b,%eax
		jne    _04c098_jump

	_04c1f5_jump:
		mov    %esi,%eax
		call   _04be6c_func
		jmp    _04c098_jump

	_04c201_jump:
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		je     _04c03f_jump
		mov    _0dbc0b_data,%al
		cmp    $0x00000a,%al
		jb     _04c1b0_jump
		jbe    _04c0c5_jump
		cmp    $0x00000d,%al
		je     _04c0c5_jump
		jmp    _04c1b8_jump

_04c228_switch:
		.long   _04c2a4_case
		.long   _04c2b6_case
		.long   _04c2e9_case
		.long   _04c2c8_case
		.long   _04c2e9_case
		.long   _04c2e9_case
		.long   _04c2e9_case
		.long   _04c2e9_case
		.long   _04c2e9_case
		.long   _04c2e9_case
		.long   _04c2da_case




_04c254_func:
		push   %edx
		xor    %eax,%eax
		mov    _0c25b7_data,%al
		cmp    $0x000008,%eax
		je     _04c274_jump
		xor    %edx,%edx
		mov    _0966b8_data(,%eax,4),%eax
		mov    _0c25b3_data,%dl
		add    %edx,%eax
		jmp    _04c28c_jump

	_04c274_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0c25b8_data,%al
		mov    _0c25b2_data,%dl
		mov    _0966b8_data(,%eax,4),%eax
		add    %edx,%eax

	_04c28c_jump:
		mov    (%eax),%dl
		sub    $0x000002,%dl
		cmp    $0x00000a,%dl
		ja     _04c2e9_case
		and    $0x0000ff,%edx
		jmp    *%cs:_04c228_switch(,%edx,4)

	_04c2a4_case:
		xor    %eax,%eax
		mov    _0c25b7_data,%al
		mov    _0966b8_data(,%eax,4),%eax
		mov    (%eax),%al
		pop    %edx
		ret    

	_04c2b6_case:
		xor    %eax,%eax
		mov    _0c25b7_data,%al
		mov    _0966bc_data(,%eax,4),%eax
		mov    (%eax),%al
		pop    %edx
		ret    

	_04c2c8_case:
		xor    %eax,%eax
		mov    _0c25b8_data,%al
		mov    _0966b8_data(,%eax,4),%eax
		mov    (%eax),%al
		pop    %edx
		ret    

	_04c2da_case:
		mov    0x000001(%eax),%al
		and    $0x0000ff,%eax
		mov    _0966b8_data(,%eax,4),%eax

	_04c2e9_case:
		mov    (%eax),%al
		pop    %edx
		ret    



_04c2f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0c25b7_data,%al
		cmp    $0x000008,%eax
		jne    _04c310_jump
		mov    $_0c25b8_data,%eax
		mov    $_0c25b2_data,%ebx
		jmp    _04c31a_jump

	_04c310_jump:
		mov    $_0c25b7_data,%eax
		mov    $_0c25b3_data,%ebx

	_04c31a_jump:
		mov    (%eax),%cl
		mov    %cl,(%esp)
		xor    %ecx,%ecx
		mov    0x000077(%edx),%cl
		cmp    $0x00000c,%ecx
		jne    _04c36e_jump
		mov    0x000076(%edx),%dl
		and    $0x0000ff,%edx
		cmp    $0x000009,%edx
		jle    _04c33c_jump
		movb   $0x000003,(%eax)
		jmp    _04c364_jump

	_04c33c_jump:
		cmp    $0x000007,%edx
		jle    _04c346_jump
		movb   $0x000005,(%eax)
		jmp    _04c364_jump

	_04c346_jump:
		cmp    $0x000004,%edx
		jle    _04c350_jump
		movb   $0x000006,(%eax)
		jmp    _04c364_jump

	_04c350_jump:
		test   %edx,%edx
		jle    _04c359_jump
		movb   $0x000007,(%eax)
		jmp    _04c364_jump

	_04c359_jump:
		xor    %dl,%dl
		movb   $0x000009,(%eax)
		mov    %dl,_0c25b5_data

	_04c364_jump:
		mov    (%esp),%dl
		cmp    (%eax),%dl
		je     _04c36e_jump
		movb   $0x000000,(%ebx)

	_04c36e_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c378_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmpb   $0x000000,_0c25b5_data
		jne    _04c45f_jump
		mov    $0x000001,%dl
		mov    %ebx,%eax
		mov    %dl,_0c1ed3_data
		call   _01e92c_func
		mov    $0x0000ff,%dh
		mov    0x000081(%ebx),%cl
		mov    %ebx,%eax
		or     %dl,%cl
		mov    %dh,_0c25b5_data
		mov    %cl,0x000081(%ebx)
		call   _04c2f0_func
		call   _04c254_func
		cmp    $0x000007,%al
		jb     _04c3ca_jump
		cmp    $0x00000a,%al
		jbe    _04c42c_jump
		cmp    $0x000012,%al
		jb     _04c3ca_jump
		cmp    $0x000015,%al
		jbe    _04c42c_jump

	_04c3ca_jump:
		mov    0x000076(%ebx),%al
		test   %al,%al
		je     _04c435_jump
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    %al,%cl
		mov    0x000077(%ebx),%dl
		add    %edx,%ecx
		lea    0x000000(,%edx,4),%ebx
		sub    %edx,%ebx
		mov    %ebx,%edx
		shl    $0x00000e,%edx
		mov    $0x00000c,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x004000,%eax
		mov    %eax,_0c25bc_data
		xor    %eax,%eax
		mov    _0c25b7_data,%al
		cmp    $0x000008,%eax
		je     _04c450_jump
		mov    $0x000008,%dh
		mov    %al,_0c25b8_data
		mov    _0c25b3_data,%al
		mov    %dh,_0c25b7_data
		mov    %al,_0c25b2_data
		jmp    _04c450_jump

	_04c42c_jump:
		movb   $0x000001,_0dbc0a_data
		jmp    _04c3ca_jump

	_04c435_jump:
		mov    $0x004000,%edx
		mov    $0x000009,%ah
		mov    %edx,_0c25bc_data
		mov    $0x000001,%dl
		mov    %ah,_0c25b7_data
		mov    %dl,_0c2571_data

	_04c450_jump:
		xor    %bl,%bl
		mov    %bl,_0c25b3_data
		movb   $0x000001,_0c25b4_data

	_04c45f_jump:
		pop    %ecx
		pop    %ebx
		ret    



_04c464_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		xor    %ecx,%ecx
		mov    0x000076(%eax),%cl
		test   %ecx,%ecx
		je     _04c51e_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04c47e_jump:
		mov    _0c1b44_data,%dx
		sub    $0x000032,%edx
		mov    %dx,0x00004a(%eax)
		mov    _0c1b48_data,%dx
		sub    $0x000050,%edx
		mov    $0x000001,%ebx
		mov    %dx,0x000056(%eax)
		mov    %ebx,%edx
		jmp    _04c53b_jump

	_04c4a6_jump:
		mov    _0c1af6_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _04c4b8_jump
		movb   $0x000002,0x00007f(%eax)

	_04c4b8_jump:
		mov    _0c247c_data,%dx
		add    0x000050(%eax),%dx
		sub    $0x000064,%edx
		mov    0x000052(%eax),%cx
		mov    %dx,0x00004a(%eax)
		mov    _0c247e_data,%dx
		add    %ecx,%edx
		mov    _0c24c0_data,%bx
		sub    $0x00000a,%edx
		inc    %ebx
		mov    %dx,0x000056(%eax)
		mov    $0x000002,%edx
		jmp    _04c53b_jump

	_04c4ed_jump:
		mov    _0c247c_data,%dx
		add    $0x0003e8,%edx
		mov    %dx,0x00004a(%eax)
		mov    _0c1b48_data,%dx
		movw   $0x0001f4,0x000050(%eax)
		sub    $0x00007d,%edx
		mov    $0x000003,%ebx
		mov    %dx,0x000056(%eax)
		mov    $0x000001,%edx
		jmp    _04c53b_jump

	_04c51e_jump:
		mov    0x00007f(%eax),%cl
		cmp    $0x000001,%cl
		jb     _04c533_jump
		jbe    _04c4a6_jump
		cmp    $0x000002,%cl
		je     _04c4ed_jump
		jmp    _04c53b_jump

	_04c533_jump:
		test   %cl,%cl
		je     _04c47e_jump

	_04c53b_jump:
		mov    _0c1af6_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _04c557_jump
		xor    %ecx,%ecx
		mov    0x00007f(%eax),%cl
		cmp    $0x000002,%ecx
		je     _04c557_jump
		movb   $0x000001,0x00007f(%eax)

	_04c557_jump:
		cmpb   $0x000000,_0c249d_data
		je     _04c60e_jump
		mov    0x000048(%eax),%ecx
		mov    0x000028(%eax),%esi
		sar    $0x000010,%ecx
		cmp    %esi,%ecx
		jle    _04c59f_jump
		mov    0x000040(%eax),%di
		inc    %edi
		mov    %di,0x000040(%eax)
		cmp    %di,%bx
		jge    _04c583_jump
		mov    %bx,0x000040(%eax)

	_04c583_jump:
		mov    0x00003e(%eax),%ecx
		mov    0x000028(%eax),%edi
		mov    0x000048(%eax),%esi
		sar    $0x000010,%ecx
		sar    $0x000010,%esi
		add    %edi,%ecx
		cmp    %esi,%ecx
		jle    _04c5b4_jump
		dec    %ebx
		mov    %bx,0x000040(%eax)
		jmp    _04c5b4_jump

	_04c59f_jump:
		decw   0x000040(%eax)
		mov    0x00003e(%eax),%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jge    _04c5b4_jump
		movw   $0x00ffff,0x000040(%eax)

	_04c5b4_jump:
		mov    0x000040(%eax),%ebx
		mov    0x00002c(%eax),%ebp
		mov    0x000054(%eax),%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%ecx
		add    %ebp,%ebx
		cmp    %ebx,%ecx
		jle    _04c5e2_jump
		mov    0x000042(%eax),%bx
		inc    %ebx
		mov    %bx,0x000042(%eax)
		cmp    %bx,%dx
		jge    _04c60e_jump
		mov    %dx,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04c5e2_jump:
		movswl %dx,%esi
		sub    %esi,%ebx
		cmp    %ebx,%ecx
		jge    _04c608_jump
		decw   0x000042(%eax)
		mov    0x000040(%eax),%ebx
		neg    %esi
		sar    $0x000010,%ebx
		cmp    %esi,%ebx
		jge    _04c60e_jump
		neg    %edx
		mov    %dx,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04c608_jump:
		movw   $0x000000,0x000042(%eax)

	_04c60e_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04c618_switch:
		.long   _04c65c_case
		.long   _04c665_case
		.long   _04c66e_case
		.long   _04c677_case
		.long   _04c680_case




_04c62c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0c255c_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x00004e(%eax),%ebx
		sar    $0x000010,%ebx
		cmp    $0x0001f4,%ebx
		jne    _04c689_jump
		pop    %edx
		pop    %ebx
		ret    

	_04c65c_case:
		movw   $0x000064,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_04c665_case:
		movw   $0x000000,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_04c66e_case:
		movw   $0x00ffb0,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_04c677_case:
		movw   $0x00ff9c,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_04c680_case:
		movw   $0x000000,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_04c689_jump:
		mov    0x000076(%edx),%dl
		dec    %dl
		cmp    $0x000004,%dl
		ja     _04ae0e_jump
		and    $0x0000ff,%edx
		jmp    *%cs:_04c618_switch(,%edx,4)



_04c6a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		je     _04c6d9_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _04c6d9_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000001,0x000050(%ecx)
		call   _058bb4_func
		movb   $0x000004,0x000072(%ecx)

	_04c6d9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c6e0_func:
		push   %edx
		xor    %eax,%eax

	_04c6e3_jump:
		inc    %eax
		xor    %dl,%dl
		mov    %dl,_0c2497_data(%eax)
		cmp    $0x000019,%eax
		jl     _04c6e3_jump
		pop    %edx
		ret    



_04c6f4_func:
		push   %edx
		xor    %eax,%eax
		jmp    _04c6ff_jump

	_04c6f9_jump:
		inc    %eax
		cmp    $0x000019,%eax
		jge    _04c71b_jump

	_04c6ff_jump:
		incb   _0c2498_data(%eax)
		xor    %edx,%edx
		mov    _0c2498_data(%eax),%dl
		cmp    %eax,%edx
		jl     _04c6f9_jump
		xor    %dh,%dh
		mov    %dh,_0c2498_data(%eax)
		jmp    _04c6f9_jump

	_04c71b_jump:
		incl   _0c4734_data
		pop    %edx
		ret    

_04c724_switch:
		.long   _04c75b_case
		.long   _04c869_case
		.long   _04c977_case
		.long   _04ca85_case
		.long   _04cb93_case
		.long   _04cca1_case




_04c73c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000074,%esp
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		mov    %dx,0x000070(%esp)
		mov    %bx,0x00006c(%esp)
		jmp    _04cdc0_jump

	_04c75b_case:
		movw   $0x00fffe,(%eax)
		mov    0x00000c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000004(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000008(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000014(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000018(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00001c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000020(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000050(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000068(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00002c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000030(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000034(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000010(%esp),%eax
		movw   $0x00fffe,(%eax)
		movw   $0x00fffe,(%edx)
		movw   $0x00001e,(%ebx)
		movw   $0x00002d,(%ecx)
		movw   $0x000023,(%esi)
		mov    0x00003c(%esp),%eax
		movw   $0x000019,0x000000(%ebp)
		movw   $0x00fffe,(%eax)
		mov    0x000040(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000044(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000048(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00004c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000038(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000054(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000058(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00005c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000060(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000064(%esp),%eax
		movw   $0x00fffe,(%eax)
		jmp    _04cdaa_jump

	_04c869_case:
		movw   $0x00fffe,(%eax)
		mov    0x00000c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000004(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000008(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000014(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000018(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00001c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000020(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000050(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000068(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00002c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000030(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000034(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000010(%esp),%eax
		movw   $0x00fffe,(%eax)
		movw   $0x000028,(%edx)
		movw   $0x000019,(%ebx)
		movw   $0x00fffe,(%ecx)
		movw   $0x00fffe,(%esi)
		mov    0x00003c(%esp),%eax
		movw   $0x00fffe,0x000000(%ebp)
		movw   $0x00fffe,(%eax)
		mov    0x000040(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000044(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000048(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00004c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000038(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000054(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000058(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00005c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000060(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000064(%esp),%eax
		movw   $0x00fffe,(%eax)
		jmp    _04cdaa_jump

	_04c977_case:
		movw   $0x00fffe,(%eax)
		mov    0x00000c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000004(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000008(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000014(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000018(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00001c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000020(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000050(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000068(%esp),%eax
		movw   $0x00002d,(%eax)
		mov    0x00002c(%esp),%eax
		movw   $0x000014,(%eax)
		mov    0x000030(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000034(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000010(%esp),%eax
		movw   $0x00fffe,(%eax)
		movw   $0x00fffe,(%edx)
		movw   $0x00fffe,(%ebx)
		movw   $0x00fffe,(%ecx)
		movw   $0x00fffe,(%esi)
		mov    0x00003c(%esp),%eax
		movw   $0x00fffe,0x000000(%ebp)
		movw   $0x00fffe,(%eax)
		mov    0x000040(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000044(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000048(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00004c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000038(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000054(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000058(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00005c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000060(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000064(%esp),%eax
		movw   $0x00fffe,(%eax)
		jmp    _04cdaa_jump

	_04ca85_case:
		movw   $0x00fffe,(%eax)
		mov    0x00000c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000004(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000008(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000014(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000018(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00001c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000020(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000050(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000068(%esp),%eax
		movw   $0x000023,(%eax)
		mov    0x00002c(%esp),%eax
		movw   $0x000032,(%eax)
		mov    0x000030(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000034(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000010(%esp),%eax
		movw   $0x00fffe,(%eax)
		movw   $0x00fffe,(%edx)
		movw   $0x00fffe,(%ebx)
		movw   $0x00fffe,(%ecx)
		movw   $0x00fffe,(%esi)
		mov    0x00003c(%esp),%eax
		movw   $0x00fffe,0x000000(%ebp)
		movw   $0x00fffe,(%eax)
		mov    0x000040(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000044(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000048(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00004c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000038(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000054(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000058(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00005c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000060(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000064(%esp),%eax
		movw   $0x00fffe,(%eax)
		jmp    _04cdaa_jump

	_04cb93_case:
		movw   $0x00fffe,(%eax)
		mov    0x00000c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000004(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000008(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000014(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000018(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00001c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000020(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000050(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000068(%esp),%eax
		movw   $0x000023,(%eax)
		mov    0x00002c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000030(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000034(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000010(%esp),%eax
		movw   $0x00fffe,(%eax)
		movw   $0x00fffe,(%edx)
		movw   $0x00fffe,(%ebx)
		movw   $0x00fffe,(%ecx)
		movw   $0x00fffe,(%esi)
		mov    0x00003c(%esp),%eax
		movw   $0x00fffe,0x000000(%ebp)
		movw   $0x00fffe,(%eax)
		mov    0x000040(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000044(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000048(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00004c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000038(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000054(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000058(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00005c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000060(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000064(%esp),%eax
		movw   $0x00fffe,(%eax)
		jmp    _04cdaa_jump

	_04cca1_case:
		movw   $0x00fffe,(%eax)
		mov    0x00000c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000004(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000008(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000024(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000014(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000018(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00001c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000020(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000050(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000068(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00002c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000030(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000034(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000010(%esp),%eax
		movw   $0x00fffe,(%eax)
		movw   $0x00fffe,(%edx)
		movw   $0x00fffe,(%ebx)
		movw   $0x00fffe,(%ecx)
		movw   $0x00fffe,(%esi)
		mov    0x00003c(%esp),%eax
		movw   $0x00fffe,0x000000(%ebp)
		movw   $0x00fffe,(%eax)
		mov    0x000040(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000044(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000048(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00004c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000038(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000054(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000058(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x00005c(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000060(%esp),%eax
		movw   $0x00fffe,(%eax)
		mov    0x000064(%esp),%eax
		movw   $0x00fffe,(%eax)

	_04cdaa_jump:
		mov    0x00006c(%esp),%ecx
		mov    0x000070(%esp),%esi
		add    $0x000020,%ecx
		inc    %esi
		mov    %cx,0x00006c(%esp)
		mov    %si,0x000070(%esp)

	_04cdc0_jump:
		mov    0x00006e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jg     _04cec4_jump
		mov    0x00006a(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000070(%esp),%edx
		add    %eax,%eax
		dec    %edx
		add    $_0c459a_data,%eax
		cmp    $0x000005,%dx
		ja     _04cdaa_jump
		and    $0x00ffff,%edx
		shl    $0x000002,%edx
		mov    %edx,(%esp)
		lea    0x000002(%eax),%edx
		mov    %edx,0x00000c(%esp)
		lea    0x000004(%eax),%edx
		mov    %edx,0x000004(%esp)
		lea    0x000006(%eax),%edx
		mov    %edx,0x000008(%esp)
		lea    0x000008(%eax),%edx
		mov    %edx,0x000024(%esp)
		lea    0x00000a(%eax),%edx
		mov    %edx,0x000028(%esp)
		lea    0x00000c(%eax),%edx
		mov    %edx,0x000014(%esp)
		lea    0x00000e(%eax),%edx
		mov    %edx,0x000018(%esp)
		lea    0x000010(%eax),%edx
		mov    %edx,0x00001c(%esp)
		lea    0x000012(%eax),%edx
		mov    %edx,0x000020(%esp)
		lea    0x000014(%eax),%edx
		mov    %edx,0x000050(%esp)
		lea    0x000016(%eax),%edx
		mov    %edx,0x000068(%esp)
		lea    0x000018(%eax),%edx
		mov    %edx,0x00002c(%esp)
		lea    0x00001a(%eax),%edx
		mov    %edx,0x000030(%esp)
		lea    0x00001c(%eax),%edx
		mov    %edx,0x000034(%esp)
		lea    0x00001e(%eax),%edx
		mov    %edx,0x000010(%esp)
		lea    0x000020(%eax),%edx
		lea    0x000022(%eax),%ebx
		lea    0x000024(%eax),%ecx
		lea    0x000026(%eax),%esi
		lea    0x000028(%eax),%ebp
		lea    0x00002a(%eax),%edi
		mov    %edi,0x00003c(%esp)
		lea    0x00002c(%eax),%edi
		mov    %edi,0x000040(%esp)
		lea    0x00002e(%eax),%edi
		mov    %edi,0x000044(%esp)
		lea    0x000030(%eax),%edi
		mov    %edi,0x000048(%esp)
		lea    0x000032(%eax),%edi
		mov    %edi,0x00004c(%esp)
		lea    0x000034(%eax),%edi
		mov    %edi,0x000038(%esp)
		lea    0x000036(%eax),%edi
		mov    %edi,0x000054(%esp)
		lea    0x000038(%eax),%edi
		mov    %edi,0x000058(%esp)
		lea    0x00003a(%eax),%edi
		mov    %edi,0x00005c(%esp)
		lea    0x00003c(%eax),%edi
		mov    %edi,0x000060(%esp)
		lea    0x00003e(%eax),%edi
		mov    %edi,0x000064(%esp)
		mov    (%esp),%edi
		jmp    *%cs:_04c724_switch(%edi)

	_04cec4_jump:
		add    $0x000074,%esp
		pop    %ebp

	_04cec8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_04cecd_jump:
		ret    



_04ced0_func:
		cmpl   $0x000000,_0c4734_data
		jne    _04cede_jump
		call   _03bfc4_func

	_04cede_jump:
		xor    %eax,%eax
		mov    _0c24d2_data,%al
		cmp    $0x000020,%eax
		jne    _04ceef_jump
		call   _03bfec_func

	_04ceef_jump:
		testb  $0x000040,_0c1af6_data
		jne    _04cecd_jump
		jmp    _03bf9c_func



_04cf00_func:
		push   %ecx
		cwtl   
		mov    $0x000007,%cl
		mov    _0948d8_data(,%eax,2),%ax
		test   %ax,%ax
		js     _04cf16_jump
		sar    %cl,%ax
		jmp    _04cf1f_jump

	_04cf16_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04cf1f_jump:
		pop    %ecx
		ret    



_04cf24_func:
		push   %ebx
		push   %edx
		cmpw   $0x000000,_0c25c4_data
		je     _04cf66_jump
		mov    _0c25c2_data,%eax
		sar    $0x000010,%eax
		call   _04cf00_func
		mov    _0c25c4_data,%bx
		mov    %eax,%edx
		inc    %ebx
		cwtl   
		mov    %bx,_0c25c4_data
		cmp    $0x0000ff,%eax
		jne    _04cf5f_jump
		xor    %edx,%edx
		mov    %dx,_0c25c4_data

	_04cf5f_jump:
		add    %dx,_0c247e_data

	_04cf66_jump:
		pop    %edx
		pop    %ebx
		ret    



_04cf6c_func:
		push   %ebx
		push   %edx
		mov    _0c25c8_data,%dx
		movswl %dx,%eax
		mov    _094956_data(,%eax,2),%ax
		movswl %ax,%ebx
		cmp    $0x0000ff,%ebx
		je     _04cf9e_jump
		mov    _0c247e_data,%bx
		add    %eax,%ebx
		inc    %edx
		mov    %bx,_0c247e_data
		jmp    _04cfa0_jump

	_04cf9e_jump:
		xor    %edx,%edx

	_04cfa0_jump:
		mov    %dx,_0c25c8_data
		pop    %edx
		pop    %ebx
		ret    



_04cfac_func:
		push   %ebx
		push   %edx
		mov    _0c25c6_data,%dx
		movswl %dx,%eax
		mov    _094956_data(,%eax,2),%ax
		movswl %ax,%ebx
		cmp    $0x0000ff,%ebx
		je     _04cfde_jump
		mov    _0c247c_data,%bx
		add    %eax,%ebx
		inc    %edx
		mov    %bx,_0c247c_data
		jmp    _04cfe0_jump

	_04cfde_jump:
		xor    %edx,%edx

	_04cfe0_jump:
		mov    %dx,_0c25c6_data
		pop    %edx
		pop    %ebx
		ret    



_04cfec_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    _0c247c_data,%cx
		mov    _0c247e_data,%si
		mov    %eax,%ebx
		movswl (%edx),%eax
		cmp    $0x0000ff,%eax
		jne    _04d00f_jump
		movw   $0x000000,(%edx)

	_04d00f_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _04d02e_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _04d02e_jump
		movw   $0x000000,(%ebx)

	_04d02e_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _04d04d_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000b,%eax
		jne    _04d04d_jump
		movw   $0x000000,(%ebx)

	_04d04d_jump:
		mov    _0c24f0_data,%eax
		mov    %cx,_0c247c_data
		sar    $0x000010,%eax
		mov    %si,_0c247e_data
		cmp    $0x000005,%eax
		jne    _04d07f_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _04d07f_jump
		movw   $0x000000,(%ebx)
		movw   $0x000000,(%edx)

	_04d07f_jump:
		call   _04cf24_func
		mov    _0c25c4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04d095_jump
		call   _04cfac_func

	_04d095_jump:
		mov    _0c25c6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04d0a6_jump
		call   _04cf6c_func

	_04d0a6_jump:
		mov    _0c247e_data,%si
		mov    (%edx),%ax
		mov    _0c247c_data,%cx
		add    %eax,%esi
		mov    (%ebx),%ax
		mov    _0c259a_data,%di
		add    %eax,%ecx
		cmp    %di,%cx
		jge    _04d0de_jump
		mov    %edi,%eax
		sub    %ecx,%eax
		add    %ax,(%ebx)
		mov    %edi,%ecx
		xor    %edi,%edi
		mov    %di,_0c131a_data
		jmp    _04d100_jump

	_04d0de_jump:
		mov    _0c259c_data,%di
		cmp    %di,%cx
		jle    _04d100_jump
		mov    %ecx,%eax
		mov    %edi,%ecx
		sub    %edi,%eax
		mov    (%ebx),%di
		sub    %eax,%edi
		xor    %eax,%eax
		mov    %di,(%ebx)
		mov    %ax,_0c131a_data

	_04d100_jump:
		mov    _0c259e_data,%bx
		cmp    %bx,%si
		jge    _04d128_jump
		mov    (%edx),%ax
		sub    %esi,%ebx
		add    %ebx,%eax
		mov    %ax,(%edx)
		xor    %edx,%edx
		mov    _0c259e_data,%si
		mov    %dx,_0c131c_data
		jmp    _04d14b_jump

	_04d128_jump:
		mov    _0c25a0_data,%di
		cmp    %di,%si
		jle    _04d14b_jump
		mov    %esi,%eax
		mov    (%edx),%si
		sub    %edi,%eax
		sub    %eax,%esi
		mov    %si,(%edx)
		mov    %edi,%esi
		xor    %edi,%edi
		mov    %di,_0c131c_data

	_04d14b_jump:
		mov    $_0c1b1c_data,%eax
		mov    %cx,_0c247c_data
		mov    %si,_0c247e_data
		call   _01dcec_func
		mov    _0c247c_data,%cx
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04d170_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edi
		xor    %esi,%esi
		jmp    _04d218_jump

	_04d17e_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _04d215_jump

	_04d18e_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x0000d0,%edx
		jne    _04d17e_jump
		mov    0x000024(%ecx),%edx
		test   %edx,%edx
		jne    _04d17e_jump
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f584_func
		movw   $0x000000,0x00005e(%ecx)
		xor    %ebx,%ebx
		mov    %edx,0x000030(%ecx)
		test   %si,%si
		setne  %al
		mov    %al,%bl
		mov    %ecx,%eax
		call   _01d4a8_func
		xor    %edx,%edx
		mov    0x000028(%edi),%ebx
		mov    0x000068(%edi),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%ecx),%dl
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,0x000028(%ecx)
		mov    0x000069(%edi),%dl
		mov    0x00002c(%edi),%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000069(%ecx),%dl
		sub    %edx,%ebx
		mov    %ebx,0x00002c(%ecx)
		test   %si,%si
		je     _04d206_jump
		mov    $0x000002,%edx
		jmp    _04d20b_jump

	_04d206_jump:
		mov    $0x000007,%edx

	_04d20b_jump:
		mov    %ecx,%eax
		mov    %dl,0x00007e(%ecx)
		call   _01dcec_func

	_04d215_jump:
		add    $0x000002,%esi

	_04d218_jump:
		movswl %si,%edx
		cmp    $0x000002,%edx
		jg     _04cec8_jump
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _04d18e_jump
		jmp    _04d215_jump



_04d240_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edx
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _04d254_jump
		sar    %cl,%ax
		jmp    _04d25d_jump

	_04d254_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04d25d_jump:
		movswl %dx,%edx
		movswl %ax,%ebx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _04d26b_jump
		neg    %eax

	_04d26b_jump:
		mov    %eax,%esi
		and    $0x00000f,%esi
		je     _04d2ba_jump
		mov    _0c4734_data,%edi
		imul   %esi,%edi
		mov    $0x000004,%cl
		mov    %edi,%eax
		test   %eax,%eax
		je     _04d287_jump
		sar    %cl,%eax
		jmp    _04d28d_jump

	_04d287_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_04d28d_jump:
		mov    %eax,%ebp
		mov    %edi,%eax
		mov    $0x000004,%cl
		sub    %esi,%eax
		test   %eax,%eax
		je     _04d29d_jump
		sar    %cl,%eax
		jmp    _04d2a3_jump

	_04d29d_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_04d2a3_jump:
		sub    %eax,%ebp
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _04d2b5_jump
		mov    $0x000001,%eax
		jg     _04d2b5_jump
		neg    %eax

	_04d2b5_jump:
		imul   %ebp,%eax
		add    %eax,%ebx

	_04d2ba_jump:
		mov    %ebx,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04d2c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ecx,%ecx
		mov    0x00006a(%eax),%cl
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    0x000004(%edx),%ecx
		mov    0x000008(%ecx,%eax,4),%ax
		xor    %al,%al
		and    $0x0000c0,%ah
		and    $0x00ffff,%eax
		sar    $0x00000e,%eax
		inc    %eax
		xor    %ecx,%ecx
		mov    %al,%ah
		mov    %al,%cl
		mov    _0c2498_data(%ecx),%cl
		and    $0x0000ff,%ecx
		je     _04d31f_jump
		jmp    _04d34d_jump

	_04d304_jump:
		xor    %ebx,%ebx
		movsbw 0x000001(%ecx),%cx
		mov    %ah,%bl
		imul   %ecx,%ebx
		jmp    _04d34f_jump

	_04d312_jump:
		xor    %ebx,%ebx
		movsbw (%ecx),%cx
		mov    %ah,%bl
		imul   %ecx,%ebx
		jmp    _04d34f_jump

	_04d31f_jump:
		movzbl 0x00006d(%edx),%esi
		mov    0x00000c(%edx),%ecx
		mov    0x000081(%edx),%al
		shl    $0x000002,%esi
		shl    $0x000004,%al
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    0x00006c(%edx),%cl
		mov    (%esi),%esi
		shl    $0x000003,%ecx
		shr    $0x000007,%al
		add    %esi,%ecx
		test   %al,%al
		jbe    _04d304_jump
		cmp    $0x000001,%al
		je     _04d312_jump
		jmp    _04d34f_jump

	_04d34d_jump:
		xor    %ebx,%ebx

	_04d34f_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x000017,%eax
		jne    _04d37c_jump
		testb  $0x000002,_0c32e5_data
		je     _04d37c_jump
		mov    $0x000001,%cl
		mov    %ebx,%eax
		test   %ax,%ax
		js     _04d371_jump
		sar    %cl,%ax
		jmp    _04d37a_jump

	_04d371_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04d37a_jump:
		mov    %eax,%ebx

	_04d37c_jump:
		mov    %bx,0x000040(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_04d384_jump:
		ret    



_04d388_func:
		movl   $0x000001,0x000024(%eax)
		movl   $0x000001,0x00001c(%eax)
		movl   $0x000000,0x000030(%eax)
		test   %dl,%dl
		je     _04d384_jump
		jmp    _072f20_func



_04d3a8_func:
		testb  $0x000004,0x000081(%eax)
		je     _04d384_jump
		movl   $0x000001,0x000024(%eax)
		movl   $0x000001,0x00001c(%eax)
		movl   $0x000000,0x000030(%eax)
		test   %dl,%dl
		je     _04d384_jump
		jmp    _072f20_func



_04d3d0_func:
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %dx,(%esp)
		mov    %ebx,%esi
		mov    %cl,0x00000c(%esp)
		xor    %edx,%edx
		mov    _0dbc10_data,%dx
		xor    %ecx,%ecx
		mov    _092868_data(,%edx,2),%ax
		mov    _09265c_data(,%edx,2),%bx
		mov    %ax,0x000008(%esp)
		mov    0x000068(%esi),%al
		shl    $0x000002,%edx
		mov    %al,0x000010(%esp)
		mov    _092244_data(%edx),%ah
		mov    %bx,0x000004(%esp)
		test   $0x000010,%ah
		je     _04d611_jump
		test   $0x000080,%ah
		je     _04d55b_jump
		cmpb   $0x000000,_0c13b2_data
		je     _04d55b_jump

	_04d435_jump:
		mov    $0x000001,%ecx
		jmp    _04d611_jump

	_04d43f_jump:
		movswl %di,%eax
		cmp    $0xfffffee4,%eax
		jle    _04d611_jump
		cmp    $0x0001bc,%eax
		jge    _04d611_jump
		mov    $0x000001,%ecx
		jmp    _04d611_jump

	_04d462_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0xffffffce,%eax
		jle    _04d4bf_jump
		movswl %di,%eax
		cmp    $0xfffffee4,%eax
		jle    _04d4bf_jump
		cmp    $0x0001f4,%eax
		jge    _04d4bf_jump
		mov    _0c24de_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000076(%eax),%dl
		test   %edx,%edx
		jne    _04d4bf_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movb   $0x00000a,0x000076(%eax)
		call   _01d4a8_func

	_04d4bf_jump:
		mov    _0c24de_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		mov    0x000076(%edx,%eax,4),%al
		and    $0x0000ff,%eax
		test   %eax,%eax
		jle    _04d611_jump
		mov    $0x000001,%ecx
		jmp    _04d611_jump

	_04d4f0_jump:
		movswl %di,%eax
		cmp    $0xfffffee4,%eax
		jle    _04d611_jump
		cmp    $0x0001f4,%eax
		jge    _04d611_jump
		mov    $0x000001,%ecx
		jmp    _04d611_jump

	_04d513_jump:
		movswl %di,%eax
		cmp    $0xfffffee4,%eax
		jle    _04d611_jump
		cmp    $0x0001bc,%eax
		jge    _04d611_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff9c,%eax
		jle    _04d611_jump
		cmp    $0x0000fa,%eax
		jge    _04d611_jump
		mov    $0x000001,%ecx
		jmp    _04d611_jump

	_04d551_jump:
		movb   $0x000080,0x000010(%esp)
		jmp    _04d611_jump

	_04d55b_jump:
		mov    _0dbc10_data,%ax
		cmp    $0x00009d,%ax
		jb     _04d5c5_jump
		jbe    _04d4f0_jump
		cmp    $0x0000d7,%ax
		jb     _04d59b_jump
		jbe    _04d435_jump
		cmp    $0x0000dc,%ax
		jb     _04d58c_jump
		jbe    _04d462_jump
		cmp    $0x0000f4,%ax
		je     _04d551_jump
		jmp    _04d611_jump

	_04d58c_jump:
		cmp    $0x0000db,%ax
		je     _04d4bf_jump
		jmp    _04d611_jump

	_04d59b_jump:
		cmp    $0x0000c0,%ax
		jb     _04d5b9_jump
		jbe    _04d551_jump
		cmp    $0x0000cc,%ax
		jb     _04d611_jump
		cmp    $0x0000cd,%ax
		jbe    _04d435_jump
		jmp    _04d611_jump

	_04d5b9_jump:
		cmp    $0x0000be,%ax
		je     _04d435_jump
		jmp    _04d611_jump

	_04d5c5_jump:
		cmp    $0x000078,%ax
		jb     _04d5f5_jump
		jbe    _04d435_jump
		cmp    $0x00008f,%ax
		jb     _04d5e9_jump
		jbe    _04d435_jump
		cmp    $0x000099,%ax
		je     _04d435_jump
		jmp    _04d611_jump

	_04d5e9_jump:
		cmp    $0x00007a,%ax
		je     _04d513_jump
		jmp    _04d611_jump

	_04d5f5_jump:
		cmp    $0x00005e,%ax
		jb     _04d607_jump
		jbe    _04d435_jump
		cmp    $0x000061,%ax
		jmp    _04d60b_jump

	_04d607_jump:
		cmp    $0x00000a,%ax

	_04d60b_jump:
		je     _04d43f_jump

	_04d611_jump:
		movswl %cx,%eax
		test   %eax,%eax
		jne    _04d6ca_jump
		cmpb   $0x000000,0x00000c(%esp)
		je     _04d63b_jump
		mov    0x000004(%esp),%edx
		mov    0x000008(%esp),%ebx
		add    $0x00003c,%edx
		add    $0x00003c,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,0x000008(%esp)

	_04d63b_jump:
		mov    0x000002(%esp),%edx
		mov    $0xfffffee4,%ebx
		sar    $0x000010,%edx
		movswl %di,%eax
		sub    %edx,%ebx
		cmp    %ebx,%eax
		jl     _04d6c1_jump
		add    $0x0001bc,%edx
		cmp    %edx,%eax
		jg     _04d6c1_jump
		mov    0x000006(%esp),%eax
		mov    $0xffffff70,%ebx
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %eax,%ebx
		cmp    %ebx,%edx
		jl     _04d6c1_jump
		add    $0x000130,%eax
		cmp    %eax,%edx
		jg     _04d6c1_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		cmp    $0xffffffe2,%eax
		jl     _04d6c1_jump
		mov    _0c24b4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		add    $0x00001e,%eax
		cmp    %edx,%eax
		jl     _04d6c1_jump
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		mov    0x000028(%esi),%ecx
		add    %eax,%eax
		add    %ecx,%eax
		test   %eax,%eax
		jl     _04d6c1_jump
		mov    _0c24b2_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ecx,%eax
		jge    _04d6c5_jump

	_04d6c1_jump:
		xor    %ecx,%ecx
		jmp    _04d6ca_jump

	_04d6c5_jump:
		mov    $0x000001,%ecx

	_04d6ca_jump:
		movswl %cx,%eax
		cmp    $0x000001,%eax
		jne    _04d71f_jump
		xor    %eax,%eax
		mov    _0dbc10_data,%ax
		testb  $0x000080,_092244_data(,%eax,4)
		je     _04d71f_jump
		mov    $0x000001,%dh
		mov    _0c256f_data,%bl
		mov    %dh,_0c13b2_data
		test   %bl,%bl
		jne    _04d708_jump
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		test   %eax,%eax
		je     _04d708_jump
		cmpb   $0x000000,_0c25b1_data
		jne    _04d71a_jump

	_04d708_jump:
		cmpb   $0x000000,_0c256f_data
		je     _04d71f_jump
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		test   %eax,%eax
		jne    _04d71f_jump

	_04d71a_jump:
		call   _01f540_func

	_04d71f_jump:
		movswl %cx,%eax
		cmp    $0x000001,%eax
		sete   %al
		xor    %ah,%ah
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		ret    



_04d730_func:
		push   %edx
		movl   $0xffff8300,0x000028(%eax)
		movl   $0xffff8300,0x00002c(%eax)
		mov    0x000081(%eax),%dl
		movl   $0x000001,0x000030(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    



_04d758_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %ebx,%esi
		mov    0x000060(%ebx),%bx
		mov    %bx,_0dbc10_data
		mov    0x000024(%esi),%bl
		mov    %bl,(%esp)
		mov    0x000081(%esi),%bl
		movl   $0x000000,0x000024(%esi)
		test   $0x000004,%bl
		je     _04d9ab_jump
		movswl %dx,%edx
		cwtl   
		xor    %ecx,%ecx
		mov    %esi,%ebx
		mov    (%esp),%cl
		call   _04d3d0_func
		test   %ax,%ax
		je     _04d89b_jump
		mov    0x00005c(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _04d881_jump
		mov    _0dbc10_data,%ax
		testb  $0x000001,_092245_data(,%eax,4)
		jne    _04d7d6_jump
		mov    0x000030(%esi),%edx
		cmp    $0x000002,%edx
		jl     _04d7d6_jump
		je     _04d881_jump
		cmp    $0x00000a,%eax
		jne    _04d881_jump

	_04d7d6_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		mov    %eax,0x000024(%esi)
		xor    %eax,%eax
		mov    _0dbc10_data,%ax
		shl    $0x000002,%eax
		testb  $0x000001,_092244_data(%eax)
		jne    _04d7fb_jump
		testb  $0x000040,_092247_data(%eax)
		je     _04d829_jump

	_04d7fb_jump:
		cmpl   $0x000000,0x000024(%esi)
		jne    _04d817_jump
		xor    %eax,%eax
		mov    _0dbc10_data,%ax
		testb  $0x000001,_092245_data(,%eax,4)
		je     _04d817_jump
		mov    $0x000001,%al
		jmp    _04d819_jump

	_04d817_jump:
		xor    %al,%al

	_04d819_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _04d388_func
		jmp    _04d9ab_jump

	_04d829_jump:
		mov    $0x000001,%cl
		mov    0x000034(%esi),%ax

	_04d82f_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%ebx
		add    %eax,%ebx
		mov    0x000024(%ebx),%eax
		test   %eax,%eax
		jne    _04d856_jump
		mov    0x000060(%esi),%ax
		test   %cl,_092245_data(,%eax,4)
		je     _04d856_jump
		mov    %cl,%al
		jmp    _04d858_jump

	_04d856_jump:
		xor    %al,%al

	_04d858_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebx,%eax
		call   _04d3a8_func
		mov    0x000032(%ebx),%eax
		mov    _0c1b00_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%esi),%ax
		jne    _04d82f_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_04d881_jump:
		mov    0x00005c(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04d9ab_jump
		decw   0x00005e(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_04d89b_jump:
		mov    0x000030(%esi),%ax
		cwtl   
		cmp    $0x000001,%eax
		je     _04d9ab_jump
		xor    %edx,%edx
		mov    _0dbc10_data,%dx
		movw   $0x000000,0x00005e(%esi)
		testb  $0x000020,_092246_data(,%edx,4)
		je     _04d8d1_jump
		mov    %esi,%eax
		call   _04d730_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_04d8d1_jump:
		cmp    $0x000002,%eax
		jne    _04d8e5_jump
		movl   $0x000001,0x000030(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_04d8e5_jump:
		test   %eax,%eax
		je     _04d8f2_jump
		cmp    $0x000004,%eax
		jne    _04d9ab_jump

	_04d8f2_jump:
		xor    %edx,%edx
		mov    _0dbc10_data,%dx
		testb  $0x000001,_092244_data(,%edx,4)
		je     _04d914_jump
		mov    %esi,%eax
		call   _057bb4_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_04d914_jump:
		movl   $0x000004,0x000030(%esi)
		mov    0x000034(%esi),%ax
		movl   $0x000001,0x000024(%esi)
		xor    %bl,%bl
		cmp    $0x00000a,%edx
		je     _04d95f_jump

	_04d92d_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%edx
		add    %edx,%eax
		cmpl   $0x000004,0x000030(%eax)
		je     _04d946_jump
		mov    $0x000001,%bl
		jmp    _04d95f_jump

	_04d946_jump:
		mov    0x000032(%eax),%eax
		mov    _0c1b00_data,%edx
		sar    $0x000010,%eax
		mov    0x000034(%esi),%cx
		mov    (%edx,%eax,2),%ax
		cmp    %cx,%ax
		jne    _04d92d_jump

	_04d95f_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%al
		add    %ebp,%eax
		cmp    $0xffffffe2,%eax
		jge    _04d975_jump
		movl   $0x000000,0x000024(%esi)

	_04d975_jump:
		test   %bl,%bl
		jne    _04d9ab_jump
		mov    0x000034(%esi),%ax

	_04d97d_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%ebx
		add    %eax,%ebx
		mov    %ebx,%eax
		call   _057bb4_func
		mov    0x000032(%ebx),%edx
		mov    _0c1b00_data,%eax
		sar    $0x000010,%edx
		mov    0x000034(%esi),%di
		mov    (%eax,%edx,2),%ax
		cmp    %di,%ax
		jne    _04d97d_jump

	_04d9ab_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_04d9b4_switch:
		.long   _04da8d_case
		.long   _04da9f_case
		.long   _04dab1_case
		.long   _04dacc_case
		.long   _04daf1_case
		.long   _04da78_case
		.long   _04da55_case
		.long   _04da55_case
		.long   _04da55_case
		.long   _04db08_case
		.long   _04db29_case




_04d9e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%edx
		xor    %ecx,%ecx
		mov    0x00006d(%edx),%cl
		mov    0x00000c(%edx),%esi
		shl    $0x000002,%ecx
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    (%esi),%esi
		mov    0x00006c(%edx),%cl
		mov    0x000005(%esi,%ecx,8),%cl
		shr    $0x000004,%cl
		mov    %cl,(%esp)
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    (%esp),%cl
		xor    %eax,%eax
		test   %ecx,%ecx
		je     _04da6e_jump
		xor    %ecx,%ecx
		mov    0x000060(%edx),%cx
		cmp    $0x000057,%ecx
		je     _04da2c_jump
		cmp    $0x000058,%ecx
		jne    _04db4d_jump

	_04da2c_jump:
		xor    %ecx,%ecx
		mov    0x00007d(%edx),%cl
		test   %ecx,%ecx
		jle    _04da3f_jump
		dec    %cl
		mov    %cl,0x00007d(%edx)
		jmp    _04da55_case

	_04da3f_jump:
		xor    %ecx,%ecx
		mov    0x000071(%edx),%cl
		test   %ecx,%ecx
		jne    _04da55_case
		mov    $0x000001,%ebx
		add    %bx,0x000042(%edx)

	_04da55_case:
		xor    %ecx,%ecx
		mov    0x000060(%edx),%cx
		testb  $0x000020,_092245_data(,%ecx,4)
		je     _04da6a_jump
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax

	_04da6a_jump:
		add    %ax,0x000042(%edx)

	_04da6e_jump:
		mov    %ebx,%eax
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04da78_case:
		xor    %ecx,%ecx
		mov    _0c249a_data,%cl
		test   %ecx,%ecx
		jne    _04da55_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _04da55_case

	_04da8d_case:
		xor    %ecx,%ecx
		mov    0x000071(%edx),%cl
		test   %ecx,%ecx
		jne    _04da55_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _04da55_case

	_04da9f_case:
		xor    %ecx,%ecx
		mov    0x000072(%edx),%cl
		test   %ecx,%ecx
		jne    _04da55_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _04da55_case

	_04dab1_case:
		mov    0x000040(%edx),%ecx
		sar    $0x000010,%ecx
		cmp    $0x000001,%ecx
		jge    _04dac3_jump
		mov    $0x000001,%eax
		jmp    _04da55_case

	_04dac3_jump:
		jle    _04da55_case
		mov    $0xffffffff,%eax
		jmp    _04da55_case

	_04dacc_case:
		mov    0x000040(%edx),%ecx
		sar    $0x000010,%ecx
		cmp    $0xfffffffe,%ecx
		jle    _04dae1_jump
		mov    $0xffffffff,%eax
		jmp    _04da55_case

	_04dae1_jump:
		jge    _04da55_case
		mov    $0x000001,%eax
		jmp    _04da55_case

	_04daf1_case:
		xor    %ecx,%ecx
		mov    0x000071(%edx),%cl
		test   %ecx,%ecx
		jne    _04da55_case
		mov    $0xffffffff,%eax
		jmp    _04da55_case

	_04db08_case:
		mov    0x000071(%edx),%cl
		inc    %cl
		mov    %cl,0x000071(%edx)
		cmp    0x000072(%edx),%cl
		jb     _04da55_case
		mov    $0x000001,%eax
		movb   $0x000000,0x000071(%edx)
		mov    %eax,%ebx
		jmp    _04da55_case

	_04db29_case:
		mov    0x000071(%edx),%cl
		inc    %cl
		mov    %cl,0x000071(%edx)
		cmp    0x000072(%edx),%cl
		jb     _04da55_case
		mov    $0xffffffff,%eax
		mov    $0x000001,%ebx
		movb   $0x000000,0x000071(%edx)
		jmp    _04da55_case

	_04db4d_jump:
		mov    (%esp),%cl
		dec    %cl
		cmp    $0x00000a,%cl
		ja     _04da55_case
		and    $0x0000ff,%ecx
		jmp    *%cs:_04d9b4_switch(,%ecx,4)



_04db6c_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%ecx),%ebx
		mov    0x00000a(%ebx,%eax,4),%ax
		dec    %eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%ecx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%ebx,%eax,8)
		je     _04dbc9_jump
		xor    %ebx,%ebx
		mov    -0x000002(%esp),%eax
		mov    %dl,%bl
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _04dbbe_jump
		mov    %ebx,%eax

	_04dbbe_jump:
		mov    (%esp),%ah
		sub    %al,%ah
		mov    %ah,%al
		inc    %al
		jmp    _04dbda_jump

	_04dbc9_jump:
		xor    %ebx,%ebx
		mov    -0x000002(%esp),%eax
		mov    %dl,%bl
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _04dbda_jump
		mov    %ebx,%eax

	_04dbda_jump:
		mov    %al,0x00006b(%ecx)
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_04dbe4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		mov    0x00000c(%esi),%edx
		mov    %ax,0x000008(%esp)
		xor    %eax,%eax
		mov    0x000004(%esi),%ebp
		mov    0x00006d(%esi),%al
		xor    %ecx,%ecx
		shl    $0x000002,%eax
		mov    0x00006a(%esi),%cl
		add    %eax,%edx
		xor    %eax,%eax
		lea    0x000000(,%ecx,4),%edi
		mov    0x00006c(%esi),%al
		mov    (%edx),%ebx
		shl    $0x000003,%eax
		sub    %ecx,%edi
		add    %eax,%ebx
		shl    $0x000002,%edi
		mov    0x000005(%ebx),%al
		add    %edi,%ebp
		and    $0x00000f,%al
		je     _04dc6c_jump
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		je     _04dc5c_jump
		jmp    _04dc6c_jump

	_04dc54_jump:
		incb   0x00006b(%esi)
		jmp    _04dc6c_jump

	_04dc5c_jump:
		mov    0x000007(%ebx),%al
		shl    $0x000003,%al
		shr    $0x000007,%al
		test   %al,%al
		je     _04dc54_jump
		decb   0x00006b(%esi)

	_04dc6c_jump:
		mov    0x000002(%ebx),%al
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000000(,%edx,4),%edi
		mov    %al,0x00006a(%esi)
		sub    %edx,%edi
		mov    0x000004(%esi),%eax
		shl    $0x000002,%edi
		add    %eax,%edi
		mov    0x000073(%esi),%al
		cmp    $0x000001,%al
		jb     _04dc9c_jump
		jbe    _04dd85_jump
		cmp    $0x000002,%al
		je     _04dde5_jump

	_04dc9c_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x00006b(%esi),%al
		mov    0x00000a(%edi),%dx
		cmp    %edx,%eax
		jge    _04dcb6_jump
		cmp    $0x0000ff,%eax
		jne    _04de6d_jump

	_04dcb6_jump:
		mov    0x000004(%ebx),%al
		mov    %al,0x00006c(%esi)
		mov    0x000003(%ebx),%al
		mov    %al,0x00006d(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    (%edx),%ebx
		shl    $0x000003,%eax
		add    %eax,%ebx
		xor    %ecx,%ecx
		mov    0x000002(%ebx),%al
		mov    %al,%cl
		lea    0x000000(,%ecx,4),%edi
		mov    %al,0x00006a(%esi)
		sub    %ecx,%edi
		mov    0x000004(%esi),%eax
		shl    $0x000002,%edi
		add    %eax,%edi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000017,%eax
		jne    _04dd2f_jump
		mov    _0c1af0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jne    _04dd2f_jump
		mov    _0c1aee_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0x000002,%ecx
		je     _04dd25_jump
		cmp    $0x000006,%ecx
		jne    _04dd2f_jump

	_04dd25_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000008,%eax
		jne    _04dd50_jump

	_04dd2f_jump:
		mov    _0c1af0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00003d,%eax
		jne    _04dd6f_jump
		mov    _0c1aee_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _04dd6f_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00003d,%eax
		je     _04dd6f_jump

	_04dd50_jump:
		mov    _0c1b70_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00003c,%eax
		jle    _04dd6f_jump
		testb  $0x000001,_0c32e6_data
		jne    _04dd6f_jump
		movw   $0x00003c,_0c1b72_data

	_04dd6f_jump:
		testb  $0x000010,0x000007(%ebx)
		je     _04de3a_jump
		xor    %eax,%eax
		mov    0x00000a(%edi),%ax
		dec    %eax
		jmp    _04de3c_jump

	_04dd85_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		je     _04dda4_jump
		testb  $0x000010,0x000007(%ebx)
		jne    _04dd9c_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _04dda4_jump

	_04dd9c_jump:
		mov    0x00000a(%edi),%al
		dec    %al
		mov    %al,0x00006b(%esi)

	_04dda4_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _04dc9c_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%ecx),%eax
		mov    (%esp),%ecx
		mov    0x000032(%esi),%edx
		add    %ecx,%eax
		sar    $0x000010,%edx
		mov    0x000006(%eax),%al
		and    $0x0000ff,%eax
		call   _06ac04_func
		jmp    _04dc9c_jump

	_04dde5_jump:
		testb  $0x000010,0x000007(%ebx)
		jne    _04ddf1_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _04ddf9_jump

	_04ddf1_jump:
		mov    0x00000a(%edi),%al
		dec    %al
		mov    %al,0x00006b(%esi)

	_04ddf9_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _04dc9c_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%ecx),%eax
		mov    (%esp),%ecx
		mov    0x000032(%esi),%edx
		add    %ecx,%eax
		sar    $0x000010,%edx
		mov    0x000006(%eax),%al
		and    $0x0000ff,%eax
		call   _06ac04_func
		jmp    _04dc9c_jump

	_04de3a_jump:
		xor    %eax,%eax

	_04de3c_jump:
		mov    %al,0x00006b(%esi)
		cmpl   $0x000000,0x000024(%esi)
		je     _04de6d_jump
		xor    %ebx,%ebx
		mov    0x00006d(%esi),%bl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		mov    0x000032(%esi),%edx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%al
		sar    $0x000010,%edx
		mov    0x000006(%ebx,%eax,8),%al
		and    $0x0000ff,%eax
		call   _06ac04_func

	_04de6d_jump:
		mov    0x000081(%esi),%ah
		movb   $0x000000,0x000073(%esi)
		test   $0x000020,%ah
		je     _04de8e_jump
		mov    0x000002(%esp),%ecx
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		sar    $0x000010,%ecx
		call   _01d790_func

	_04de8e_jump:
		mov    0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00006b(%esi),%al
		lea    0x000081(%esi),%ebx
		cmp    %eax,%edx
		jne    _04deb4_jump
		mov    0x000006(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00006a(%esi),%al
		cmp    %eax,%edx
		je     _04debb_jump

	_04deb4_jump:
		mov    $0x000001,%eax
		jmp    _04debd_jump

	_04debb_jump:
		xor    %eax,%eax

	_04debd_jump:
		mov    (%ebx),%dl
		and    $0x000001,%al
		and    $0x00007f,%dl
		shl    $0x000007,%al
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,(%ebx)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ded8_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		mov    0x00002c(%eax),%ax
		add    %edx,%eax
		xor    %ah,%ah
		and    $0x00000f,%al
		pop    %edx
		ret    

_04deec_switch:
		.long   _04dfb3_case
		.long   _04dfb3_case
		.long   _04dfca_case
		.long   _04dfe8_case
		.long   _04e000_case
		.long   _04e000_case
		.long   _04e01f_case
		.long   _04e01f_case
		.long   _04dfb3_case
		.long   _04e055_case
		.long   _04dfb3_case
		.long   _04dfb3_case
		.long   _04dfb3_case
		.long   _04dfb3_case
		.long   _04e041_case
		.long   _04e041_case
		.long   _04dfb3_case
		.long   _04dfb3_case
		.long   _04dfca_case
		.long   _04dfe8_case
		.long   _04e000_case
		.long   _04e000_case
		.long   _04e01f_case
		.long   _04e01f_case
		.long   _04dfb3_case
		.long   _04dfb3_case
		.long   _04dfb3_case
		.long   _04dfb3_case
		.long   _04dfb3_case
		.long   _04dfb3_case
		.long   _04e041_case




_04df68_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %bl,%al
		mov    0x000040(%ecx),%ebx
		sar    $0x000010,%ebx
		cmp    $0x000001,%ebx
		jg     _04dfa4_jump
		xor    %ebx,%ebx
		movzbl %dl,%esi
		mov    %al,%bl
		mov    %esi,%edx
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _01d4a8_func
		cmp    $0x000002,%esi
		je     _04dfc6_jump
		mov    %ecx,%eax
		call   _024ec4_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_04dfa4_jump:
		movzbl _0c249a_data,%esi
		test   %esi,%esi
		je     _04e065_jump

	_04dfb3_case:
		mov    0x000040(%ecx),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jge    _04dfc6_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d498_func

	_04dfc6_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_04dfca_case:
		mov    $0x000001,%esi
		mov    0x000040(%ecx),%ebx
		mov    0x000040(%ecx),%di
		sar    $0x000011,%ebx
		sub    $0x000002,%edi
		sub    %ebx,%esi
		mov    %di,0x000040(%ecx)
		mov    %si,0x000042(%ecx)
		jmp    _04dfb3_case

	_04dfe8_case:
		mov    0x000040(%ecx),%ebx
		mov    $0x000001,%esi
		sar    $0x000011,%ebx
		sub    %ebx,%esi
		mov    %si,0x000042(%ecx)
		addw   $0x000002,0x000040(%ecx)
		jmp    _04dfb3_case

	_04e000_case:
		mov    0x000040(%ecx),%ebx
		sar    $0x000010,%ebx
		inc    %ebx
		mov    $0x000001,%esi
		sar    %ebx
		sub    %ebx,%esi
		mov    0x000040(%ecx),%bx
		mov    %si,0x000042(%ecx)
		dec    %ebx
		mov    %bx,0x000040(%ecx)
		jmp    _04dfb3_case

	_04e01f_case:
		mov    0x000040(%ecx),%ebx
		mov    $0x000001,%esi
		sar    $0x000010,%ebx
		mov    0x000040(%ecx),%dx
		inc    %ebx
		inc    %edx
		sar    %ebx
		mov    %dx,0x000040(%ecx)
		sub    %ebx,%esi
		mov    %si,0x000042(%ecx)
		jmp    _04dfb3_case

	_04e041_case:
		mov    0x000040(%ecx),%ebx
		sar    $0x000010,%ebx
		inc    %ebx
		sar    %ebx
		neg    %ebx
		mov    %bx,0x000042(%ecx)
		jmp    _04dfb3_case

	_04e055_case:
		add    $0x000003,%ebx
		sar    %ebx
		neg    %ebx
		mov    %bx,0x000042(%ecx)
		jmp    _04dfb3_case

	_04e065_jump:
		mov    0x000062(%ecx),%dl
		cmp    $0x00001e,%dl
		ja     _04dfb3_case
		movzbl %dl,%esi
		jmp    *%cs:_04deec_switch(,%esi,4)



_04e07c_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000062(%eax),%dl
		testb  $0x000001,_092204_data(%edx)
		je     _04e0a0_jump
		mov    0x000065(%eax),%al
		and    $0x0000ff,%eax
		testb  $0x000040,_092204_data(%eax)
		je     _04e0a0_jump
		mov    $0x000001,%al
		pop    %edx
		ret    

	_04e0a0_jump:
		xor    %al,%al
		pop    %edx
		ret    



_04e0a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x00002f,%eax
		jne    _04e0c0_jump
		mov    $0x000020,%ecx
		mov    $0xfffffffc,%ebx
		jmp    _04e0cf_jump

	_04e0c0_jump:
		cmp    $0x000045,%eax
		jne    _04e0cf_jump
		mov    $0x000030,%ecx
		mov    $0xfffffffa,%ebx

	_04e0cf_jump:
		mov    %edx,%eax
		call   _04e07c_func
		test   %al,%al
		je     _04e0e0_jump
		mov    0x000065(%edx),%al
		mov    %al,0x000062(%edx)

	_04e0e0_jump:
		mov    0x000062(%edx),%al
		cmp    $0x00000e,%al
		jb     _04e157_jump
		jbe    _04e13d_jump
		cmp    $0x000013,%al
		jb     _04e143_jump
		jbe    _04e113_jump
		cmp    $0x000016,%al
		jb     _04e104_jump
		cmp    $0x000017,%al
		jbe    _04e119_jump
		cmp    $0x00001e,%al
		je     _04e13d_jump
		jmp    _04e193_jump

	_04e104_jump:
		neg    %ecx
		mov    %bx,0x000042(%edx)
		mov    %cx,0x000040(%edx)
		jmp    _04e193_jump

	_04e113_jump:
		add    $0x000002,%ebx
		add    $0x000010,%ecx

	_04e119_jump:
		mov    %bx,0x000042(%edx)
		mov    %cx,0x000040(%edx)
		jmp    _04e193_jump

	_04e126_jump:
		mov    $0xfffffff0,%eax
		add    $0x000002,%ebx
		sub    %ecx,%eax
		mov    %bx,0x000042(%edx)
		mov    %ax,0x000040(%edx)
		jmp    _04e193_jump

	_04e13a_jump:
		sub    $0x000003,%ebx

	_04e13d_jump:
		mov    %bx,0x000042(%edx)
		jmp    _04e193_jump

	_04e143_jump:
		cmp    $0x00000f,%al
		jbe    _04e13d_jump
		cmp    $0x000012,%al
		je     _04e126_jump
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04e157_jump:
		cmp    $0x000004,%al
		jb     _04e173_jump
		cmp    $0x000005,%al
		jbe    _04e104_jump
		cmp    $0x000007,%al
		jbe    _04e119_jump
		cmp    $0x000009,%al
		je     _04e13a_jump
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04e173_jump:
		cmp    $0x000002,%al
		jb     _04e193_jump
		jbe    _04e126_jump
		add    $0x000002,%ebx
		add    $0x000010,%ecx
		mov    %bx,0x000042(%edx)
		mov    %cx,0x000040(%edx)
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04e193_jump:
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04e1a0_switch:
		.long   _04e33d_case
		.long   _04e33d_case
		.long   _04e2c1_case
		.long   _04e2dc_case
		.long   _04e2f7_case
		.long   _04e2f7_case
		.long   _04e312_case
		.long   _04e312_case
		.long   _04e33d_case
		.long   _04e32d_case
		.long   _04e33d_case
		.long   _04e33d_case
		.long   _04e33d_case
		.long   _04e33d_case
		.long   _04e33d_case
		.long   _04e33d_case
		.long   _04e33d_case
		.long   _04e33d_case
		.long   _04e2c1_case
		.long   _04e2dc_case
		.long   _04e2f7_case
		.long   _04e2f7_case
		.long   _04e312_case
		.long   _04e312_case
		.long   _04e33d_case
		.long   _04e33d_case
		.long   _04e33d_case
		.long   _04e33d_case
		.long   _04e33d_case
		.long   _04e33d_case
		.long   _04e33d_case




_04e21c_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    $0x000005,%esi
		mov    0x00006d(%ecx),%al
		mov    $0x000003,%edi
		cmp    $0x000002,%eax
		jne    _04e253_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _04e253_jump
		mov    $0xffffffff,%edx
		mov    %ecx,%eax
		call   _074e10_func
		jmp    _04e423_jump

	_04e253_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _04e282_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _04e282_jump
		mov    %ecx,%eax
		mov    0x000060(%ecx),%dx
		movw   $0x00002f,0x000060(%ecx)
		call   _04e0a4_func
		mov    %dx,0x000060(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_04e282_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _04e3f1_jump
		mov    %ecx,%eax
		call   _04e07c_func
		mov    %al,(%esp)
		and    $0x0000ff,%eax
		je     _04e2a9_jump
		mov    0x000065(%ecx),%al
		jmp    _04e2ac_jump

	_04e2a9_jump:
		mov    0x000062(%ecx),%al

	_04e2ac_jump:
		cmp    $0x00001e,%al
		ja     _04e33d_case
		and    $0x0000ff,%eax
		jmp    *%cs:_04e1a0_switch(,%eax,4)

	_04e2c1_case:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _04e2d1_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%ecx)

	_04e2d1_jump:
		imul   0x000042(%ecx),%si
		sub    %si,0x000040(%ecx)
		jmp    _04e33d_case

	_04e2dc_case:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _04e2ec_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%ecx)

	_04e2ec_jump:
		imul   0x000042(%ecx),%si
		add    %si,0x000040(%ecx)
		jmp    _04e33d_case

	_04e2f7_case:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _04e307_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_04e307_jump:
		imul   0x000042(%ecx),%di
		sub    %di,0x000040(%ecx)
		jmp    _04e33d_case

	_04e312_case:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _04e322_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_04e322_jump:
		imul   0x000042(%ecx),%di
		add    %di,0x000040(%ecx)
		jmp    _04e33d_case

	_04e32d_case:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _04e33d_case
		mov    $0x000001,%edi
		mov    %di,0x000042(%ecx)

	_04e33d_case:
		movswl %bx,%eax
		test   %eax,%eax
		jle    _04e36f_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jle    _04e367_jump
		mov    0x000042(%ecx),%si
		sub    %esi,%ebx
		mov    %bx,0x000042(%ecx)
		test   %dx,%dx
		je     _04e375_jump
		mov    %ebx,%edi
		inc    %edi
		mov    %di,0x000042(%ecx)
		jmp    _04e375_jump

	_04e367_jump:
		movw   $0x000000,0x000042(%ecx)
		jmp    _04e375_jump

	_04e36f_jump:
		movw   $0x00fffd,0x000042(%ecx)

	_04e375_jump:
		cmpb   $0x000000,(%esp)
		je     _04e3b8_jump

	_04e37b_jump:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e288_func
		cmp    0x000062(%ecx),%al
		jne    _04e3a8_jump
		decl   0x00002c(%ecx)
		jmp    _04e37b_jump

	_04e3a8_jump:
		mov    %ecx,%eax
		call   _024ec4_func
		mov    %ecx,%eax
		call   _01e494_func
		jmp    _04e3f1_jump

	_04e3b8_jump:
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000001,_092204_data(%eax)
		je     _04e3ea_jump
		mov    %ecx,%eax
		call   _04ded8_func
		cwtl   
		cmp    $0x000004,%eax
		jl     _04e3ea_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jg     _04e3ea_jump
		test   %eax,%eax
		jne    _04e3f1_jump
		movw   $0x000001,0x000042(%ecx)
		jmp    _04e3f1_jump

	_04e3ea_jump:
		mov    %ecx,%eax
		call   _024ec4_func

	_04e3f1_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		movb   $0x000000,0x000071(%ecx)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		shr    $0x000004,%al
		and    $0x0000ff,%eax
		cmp    $0x00000b,%eax
		je     _04e423_jump
		cmp    $0x00000a,%eax
		je     _04e423_jump
		movb   $0x000000,0x000072(%ecx)

	_04e423_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_04e42c_switch:
		.long   _04e631_case
		.long   _04e631_case
		.long   _04e569_case
		.long   _04e58b_case
		.long   _04e5ad_case
		.long   _04e5ad_case
		.long   _04e5e7_case
		.long   _04e5e7_case
		.long   _04e631_case
		.long   _04e621_case
		.long   _04e631_case
		.long   _04e631_case
		.long   _04e631_case
		.long   _04e631_case
		.long   _04e631_case
		.long   _04e631_case
		.long   _04e631_case
		.long   _04e631_case
		.long   _04e569_case
		.long   _04e58b_case
		.long   _04e5ad_case
		.long   _04e5ad_case
		.long   _04e5e7_case
		.long   _04e5e7_case
		.long   _04e631_case
		.long   _04e631_case
		.long   _04e631_case
		.long   _04e631_case
		.long   _04e631_case
		.long   _04e631_case
		.long   _04e631_case




_04e4a8_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,0x000004(%esp)
		mov    %ebx,%edi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000026,%eax
		jne    _04e4d1_jump
		mov    $0x000001,%eax
		mov    $0x000002,%ecx
		mov    %eax,%ebx
		mov    %eax,%edx
		jmp    _04e4e5_jump

	_04e4d1_jump:
		mov    $0x000005,%eax
		mov    $0x000004,%ebx
		mov    $0x000003,%edx
		mov    $0x000001,%ecx

	_04e4e5_jump:
		mov    %eax,0x000008(%esp)
		mov    %cx,(%esp)
		mov    0x000040(%esi),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jl     _04e74d_jump
		mov    0x00003e(%esi),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jle    _04e50b_jump
		sub    %ax,0x000040(%esi)
		jmp    _04e511_jump

	_04e50b_jump:
		jge    _04e511_jump
		add    %ax,0x000040(%esi)

	_04e511_jump:
		movswl %bx,%ecx
		mov    0x00003e(%esi),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jl     _04e52d_jump
		cmp    %ecx,%eax
		jg     _04e52d_jump
		mov    $0x000001,%eax
		jmp    _04e52f_jump

	_04e52d_jump:
		xor    %eax,%eax

	_04e52f_jump:
		test   %eax,%eax
		je     _04e539_jump
		movw   $0x000000,0x000040(%esi)

	_04e539_jump:
		mov    %esi,%eax
		call   _04e07c_func
		mov    %al,%bl
		and    $0x0000ff,%eax
		je     _04e551_jump
		mov    0x000065(%esi),%al
		jmp    _04e554_jump

	_04e551_jump:
		mov    0x000062(%esi),%al

	_04e554_jump:
		cmp    $0x00001e,%al
		ja     _04e631_case
		and    $0x0000ff,%eax
		jmp    *%cs:_04e42c_switch(,%eax,4)

	_04e569_case:
		cmpw   $0x000000,0x000042(%esi)
		jne    _04e579_jump
		mov    $0x000001,%edx
		mov    %dx,0x000042(%esi)

	_04e579_jump:
		mov    0x000008(%esp),%eax
		imul   0x000042(%esi),%ax
		sub    %ax,0x000040(%esi)
		jmp    _04e631_case

	_04e58b_case:
		cmpw   $0x000000,0x000042(%esi)
		jne    _04e59b_jump
		mov    $0x000001,%ecx
		mov    %cx,0x000042(%esi)

	_04e59b_jump:
		mov    0x000008(%esp),%eax
		imul   0x000042(%esi),%ax
		add    %ax,0x000040(%esi)
		jmp    _04e631_case

	_04e5ad_case:
		cmpw   $0x000000,0x000042(%esi)
		jne    _04e5bd_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%esi)

	_04e5bd_jump:
		mov    0x000040(%esi),%eax
		movswl %dx,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000040(%esi)
		jmp    _04e631_case

	_04e5e7_case:
		cmpw   $0x000000,0x000042(%esi)
		jne    _04e5f7_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%esi)

	_04e5f7_jump:
		mov    0x000040(%esi),%eax
		movswl %dx,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000040(%esi)
		jmp    _04e631_case

	_04e621_case:
		cmpw   $0x000000,0x000042(%esi)
		jne    _04e631_case
		mov    $0x000001,%edx
		mov    %dx,0x000042(%esi)

	_04e631_case:
		movswl %di,%eax
		test   %eax,%eax
		jle    _04e673_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jle    _04e664_jump
		sub    0x000042(%esi),%di
		mov    0x000004(%esp),%edx
		mov    %di,0x000042(%esi)
		test   %dx,%dx
		je     _04e6da_jump
		mov    %edi,%ecx
		inc    %ecx
		mov    %cx,0x000042(%esi)
		jmp    _04e6da_jump

	_04e664_jump:
		movw   $0x000000,0x000042(%esi)
		movb   $0x000002,0x000076(%esi)
		jmp    _04e6da_jump

	_04e673_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000008,%eax
		je     _04e698_jump
		cmp    $0x000086,%eax
		je     _04e698_jump
		cmp    $0x0000a7,%eax
		je     _04e698_jump
		cmp    $0x0000b1,%eax
		je     _04e698_jump
		cmp    $0x000006,%eax
		jne    _04e6d4_jump

	_04e698_jump:
		mov    _0c1b66_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _04e6bd_jump
		testb  $0x000002,_0c32e5_data
		je     _04e6b5_jump
		movw   $0x00fffc,0x000042(%esi)
		jmp    _04e6c3_jump

	_04e6b5_jump:
		movw   $0x00fffd,0x000042(%esi)
		jmp    _04e6c3_jump

	_04e6bd_jump:
		movw   $0x00fffb,0x000042(%esi)

	_04e6c3_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000006,%eax
		jne    _04e6da_jump
		incw   0x000042(%esi)
		jmp    _04e6da_jump

	_04e6d4_jump:
		movw   $0x00fffd,0x000042(%esi)

	_04e6da_jump:
		test   %bl,%bl
		je     _04e714_jump

	_04e6de_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e288_func
		cmp    0x000062(%esi),%al
		jne    _04e70b_jump
		decl   0x00002c(%esi)
		jmp    _04e6de_jump

	_04e70b_jump:
		mov    %esi,%eax
		call   _01e494_func
		jmp    _04e746_jump

	_04e714_jump:
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000001,_092204_data(%eax)
		je     _04e746_jump
		mov    %esi,%eax
		call   _04ded8_func
		cwtl   
		cmp    $0x000004,%eax
		jl     _04e746_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jg     _04e746_jump
		test   %eax,%eax
		jne    _04e74d_jump
		movw   $0x000001,0x000042(%esi)
		jmp    _04e74d_jump

	_04e746_jump:
		mov    %esi,%eax
		call   _024ec4_func

	_04e74d_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		movb   $0x000000,0x000071(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		shr    $0x000004,%al
		and    $0x0000ff,%eax
		cmp    $0x00000b,%eax
		je     _04e77f_jump
		cmp    $0x00000a,%eax
		je     _04e77f_jump
		movb   $0x000000,0x000072(%esi)

	_04e77f_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04e788_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000042(%ecx)
		movw   $0x000000,0x000040(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e7ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _024ec4_func
		mov    0x000076(%ecx),%dl
		cmp    0x000077(%ecx),%dl
		je     _04e7f7_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%bl
		testb  $0x000040,0x000007(%edx,%ebx,8)
		je     _04e7e0_jump
		mov    $0x000002,%edx
		jmp    _04e7e5_jump

	_04e7e0_jump:
		mov    $0x00000b,%edx

	_04e7e5_jump:
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %dl,%bl
		mov    $0x000001,%edx
		call   _01d4a8_func
		jmp    _04e80c_jump

	_04e7f7_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		orb    $0x000010,0x000081(%ecx)

	_04e80c_jump:
		mov    %ecx,%eax
		call   _01dc54_func
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		test   $0x000008,%ah
		setne  %dl
		and    $0x0000ff,%edx
		add    $0x000002,%edx
		and    $0x0000ff,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e840_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000040(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04e87a_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    $0x000002,%edx
		call   _024ec4_func
		mov    %ecx,%eax
		call   _058bb4_func
		mov    0x000048(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x0001f4,%eax
		jle    _04e87a_jump
		movw   $0x000000,0x00004a(%ecx)

	_04e87a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e880_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,_0c2564_data
		je     _04e8a7_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _04e8a7_jump
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		call   _04df68_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04e8a7_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _04e8cb_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _058bb4_func
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _024ec4_func

	_04e8cb_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e8d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		jne    _04e8f7_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		mov    %ecx,%eax
		call   _024ec4_func

	_04e8f7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e8fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %edx,%eax
		lea    -0x000002(%eax),%edx
		lea    0x000002(%eax),%edi
		xor    %eax,%eax
		mov    0x00002c(%ecx),%ebx
		mov    0x000069(%ecx),%al
		mov    _0c24b2_data,%esi
		add    %ebx,%eax
		sar    $0x000010,%esi
		sar    $0x000004,%eax
		imul   %eax,%esi
		sar    $0x000004,%edx
		add    %esi,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0c24bc_data,%ebx
		sub    %edx,%eax
		sar    $0x000004,%edi
		mov    0x000002(%ebx,%eax,2),%al
		xor    %ah,%ah
		lea    (%edi,%esi,1),%edx
		mov    %ax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		xor    %edx,%edx
		mov    0x000002(%ebx,%eax,2),%dl
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _04ea57_jump
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000002,_092204_data(%eax)
		jne    _04ea57_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _04e9a5_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		je     _04e9cf_jump

	_04e9a5_jump:
		movswl %dx,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _04ea57_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _04ea57_jump

	_04e9cf_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04ea08_jump
		testb  $0x000008,0x000081(%ecx)
		je     _04e9f5_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		jmp    _04ea57_jump

	_04e9f5_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		jmp    _04ea57_jump

	_04ea08_jump:
		mov    0x00003e(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    $0x000001,%ebx
		mov    0x000028(%ecx),%esi
		mov    $0x000004,%edx
		add    %eax,%esi
		mov    %ecx,%eax
		mov    %esi,0x000028(%ecx)
		call   _058bb4_func
		mov    0x000081(%ecx),%dh
		lea    0x000081(%ecx),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_04ea57_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ea60_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		call   _01d4a8_func
		testb  $0x000008,0x000081(%ecx)
		je     _04ea88_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		jmp    _04ea91_jump

	_04ea88_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_04ea91_jump:
		call   _058bb4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ea9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006e(%eax),%bl
		mov    0x00006f(%eax),%dl
		call   _01d4a8_func
		mov    %ecx,%eax
		call   _024ec4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04eabc_switch:
		.long   _04edc6_case
		.long   _04ee0c_case
		.long   _04ed08_case
		.long   _04edc6_case
		.long   _04ed08_case
		.long   _04ed08_case
		.long   _04edbb_case




_04ead8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		shr    $0x000004,%al
		and    $0x0000ff,%eax
		cmp    $0x00000b,%eax
		je     _04eb32_jump
		cmp    $0x00000a,%eax
		je     _04eb32_jump
		incb   0x000071(%esi)
		xor    %eax,%eax
		mov    0x000071(%esi),%al
		cmp    $0x000003,%eax
		jl     _04eb1d_jump
		movb   $0x000000,0x000071(%esi)

	_04eb1d_jump:
		mov    0x000072(%esi),%dl
		xor    %eax,%eax
		inc    %dl
		mov    %dl,%al
		mov    %dl,0x000072(%esi)
		cmp    $0x000004,%eax
		jl     _04eb32_jump
		movb   $0x000000,0x000072(%esi)

	_04eb32_jump:
		mov    %esi,%eax
		call   _04d9e0_func
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000003,%eax
		jne    _04eba6_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _04eb65_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _04eb65_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d498_func

	_04eb65_jump:
		cmpb   $0x000000,_0c2564_data
		jne    _04ec25_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jl     _04ec25_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		jne    _04ec25_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d498_func
		movw   $0x000000,0x000040(%esi)
		jmp    _04ec25_jump

	_04eba6_jump:
		cmp    $0x000028,%eax
		je     _04ebb0_jump
		cmp    $0x00007a,%eax
		jne    _04ec0b_jump

	_04ebb0_jump:
		mov    %esi,%eax
		call   _04e8fc_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _04ec25_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04ebe7_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		je     _04ec25_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d498_func
		jmp    _04ec25_jump

	_04ebe7_jump:
		jge    _04ec25_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _024288_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _04ec25_jump
		movw   $0x000000,0x000042(%esi)
		jmp    _04ec25_jump

	_04ec0b_jump:
		cmp    $0x00005b,%eax
		jne    _04ec25_jump
		decw   0x000056(%esi)
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _04ec25_jump
		mov    %esi,%eax
		call   _06d450_func

	_04ec25_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000004,_092247_data(,%eax,4)
		je     _04ece2_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _04ece2_jump
		testb  $0x000020,0x000081(%esi)
		je     _04ec8d_jump
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d840_func
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x000008(%esp),%ebx
		mov    0x000074(%esi),%al
		add    %eax,%ebx
		mov    %bx,0x000008(%esp)
		jmp    _04ecac_jump

	_04ec8d_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		mov    0x00002c(%esi),%dx
		add    %eax,%edx
		mov    %dx,0x000008(%esp)

	_04ecac_jump:
		mov    0x000040(%esi),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000014,%eax
		cwtl   
		call   _01e288_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092204_data(%eax)
		je     _04ece2_jump
		movw   $0x000000,0x000042(%esi)

	_04ece2_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000001,_092246_data(,%eax,4)
		je     _04ed08_case
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000002,_092204_data(%eax)
		jne    _04f21a_jump

	_04ed08_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000020,_092245_data(,%eax,4)
		je     _04f703_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000060,%eax
		jle    _04ed2d_jump
		movw   $0x000060,0x000042(%esi)

	_04ed2d_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff80,%eax
		jge    _04f725_jump
		movw   $0x00ff80,0x000042(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04ed4b_jump:
		mov    %esi,%eax
		call   _0762b8_func
		jmp    _04ed08_case

	_04ed54_jump:
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01dc54_func
		mov    %esi,%eax
		mov    $0x000003,%edx
		call   _024ec4_func
		mov    %esi,%eax
		call   _058bb4_func
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		je     _04edad_jump
		mov    %esi,%eax
		call   _04d170_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		mov    $0x000001,%bl
		mov    $0xfffffff8,%ecx
		mov    %bl,_0c24d3_data
		call   _0652ac_func
		mov    %cx,_0c1b5e_data

	_04edad_jump:
		movw   $0x000001,_0c25c4_data
		jmp    _04ed08_case

	_04edbb_case:
		mov    %esi,%eax
		movb   $0x000002,0x00007d(%esi)
		call   _01dc54_func

	_04edc6_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		testb  $0x000008,0x000081(%esi)
		je     _04ede9_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _04edf3_jump

	_04ede9_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_04edf3_jump:
		mov    %esi,%eax
		call   _058bb4_func
		mov    %esi,%eax
		call   _024ec4_func
		movw   $0x000000,0x000042(%esi)
		jmp    _04ed08_case

	_04ee0c_case:
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		mov    %esi,%eax
		call   _024ec4_func
		movw   $0x000000,0x000042(%esi)
		jmp    _04ed08_case

	_04ee29_jump:
		mov    0x000075(%esi),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _04ed08_case
		and    $0x0000ff,%eax
		jmp    *%cs:_04eabc_switch(,%eax,4)

	_04ee43_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04ed08_case
		mov    %esi,%eax
		call   _024ec4_func
		negw   0x000042(%esi)
		jmp    _04ed08_case

	_04ee61_jump:
		mov    %esi,%eax
		call   _04e788_func
		jmp    _04ed08_case

	_04ee6d_jump:
		mov    %esi,%eax
		call   _04e840_func
		jmp    _04ed08_case

	_04ee79_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _04ed08_case
		mov    $0x000001,%ebx
		mov    $0x000010,%edx
		mov    %esi,%eax
		call   _058bb4_func
		movb   $0x000000,0x00007d(%esi)
		jmp    _04ed08_case

	_04eea1_jump:
		mov    0x000032(%esi),%edx
		mov    $0x0000bb,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		mov    %esi,%eax
		call   _072c60_func
		jmp    _04ed08_case

	_04eebd_jump:
		mov    %esi,%eax
		call   _04e7ac_func
		jmp    _04ed08_case

	_04eec9_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _04eee3_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _06ac04_func

	_04eee3_jump:
		mov    %esi,%eax
		call   _04e0a4_func
		jmp    _04ed08_case

	_04eeef_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _04ef09_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _06ac04_func

	_04ef09_jump:
		mov    $0x000001,%ebx
		movswl %di,%edx
		mov    %esi,%eax
		call   _04e21c_func
		jmp    _04ed08_case

	_04ef1d_jump:
		mov    %esi,%eax
		call   _04e8d0_func
		jmp    _04ed08_case

	_04ef29_jump:
		mov    $0x000001,%ebx
		movswl %di,%edx
		mov    %esi,%eax
		call   _04e4a8_func
		jmp    _04ed08_case

	_04ef3d_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _04ed08_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _06ac04_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000006,0x000042(%esi)
		call   _04e4a8_func
		decw   0x000050(%esi)
		jmp    _04ed08_case

	_04ef75_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _04ed08_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _06ac04_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000007,0x000042(%esi)
		call   _04e4a8_func
		decw   0x000050(%esi)
		jmp    _04ed08_case

	_04efad_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _04e4a8_func
		jmp    _04ed08_case

	_04efce_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00008c,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _04e4a8_func
		jmp    _04ed08_case

	_04efef_jump:
		mov    0x000032(%esi),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _04e4a8_func
		jmp    _04ed08_case

	_04f00d_jump:
		mov    0x000060(%esi),%dx
		cmp    $0x000082,%dx
		jb     _04f046_jump
		jbe    _04efef_jump
		cmp    $0x0000a7,%dx
		jb     _04f02a_jump
		jbe    _04efad_jump
		cmp    $0x0000b1,%dx
		jmp    _04f06d_jump

	_04f02a_jump:
		cmp    $0x000086,%dx
		je     _04efad_jump
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _04e4a8_func
		jmp    _04ed08_case

	_04f046_jump:
		cmp    $0x000008,%dx
		jb     _04f069_jump
		jbe    _04efad_jump
		cmp    $0x000026,%dx
		je     _04efef_jump
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _04e4a8_func
		jmp    _04ed08_case

	_04f069_jump:
		cmp    $0x000006,%dx

	_04f06d_jump:
		je     _04efce_jump
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _04e4a8_func
		jmp    _04ed08_case

	_04f084_jump:
		mov    $0x00000b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000042(%esi)
		jmp    _04ed08_case

	_04f09d_jump:
		mov    %esi,%eax
		call   _04e880_func
		jmp    _04ed08_case

	_04f0a9_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _04f0ba_jump
		mov    $0x000007,%ebx
		jmp    _04f0c9_jump

	_04f0ba_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _04f0d2_jump
		mov    $0x00000a,%ebx

	_04f0c9_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func

	_04f0d2_jump:
		mov    %esi,%eax
		call   _024ec4_func
		movw   $0x000000,0x000042(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _04ed08_case

	_04f0ea_jump:
		mov    %esi,%eax
		mov    $0x000005,%ebx
		call   _024ec4_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		movw   $0x000000,0x000042(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _04ed08_case

	_04f110_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		jmp    _04ed08_case

	_04f121_jump:
		mov    %esi,%eax
		call   _0206a0_func
		jmp    _04ed08_case

	_04f12d_jump:
		mov    %esi,%eax
		call   _02a6f0_func
		jmp    _04ed08_case

	_04f139_jump:
		mov    %esi,%eax
		call   _04ea60_func
		jmp    _04ed08_case

	_04f145_jump:
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jge    _04ed08_case
		mov    %esi,%eax
		call   _02154c_func
		jmp    _04ed08_case

	_04f160_jump:
		mov    %esi,%eax
		call   _022db0_func
		jmp    _04ed08_case

	_04f16c_jump:
		mov    %esi,%eax
		call   _023174_func
		jmp    _04ed08_case

	_04f178_jump:
		mov    %esi,%eax
		call   _06ed80_func
		jmp    _04ed08_case

	_04f184_jump:
		mov    %esi,%eax
		call   _06e7e0_func
		jmp    _04ed08_case

	_04f190_jump:
		mov    %esi,%eax
		call   _05e710_func
		jmp    _04ed08_case

	_04f19c_jump:
		mov    %esi,%eax
		call   _05e5ec_func
		jmp    _04ed08_case

	_04f1a8_jump:
		mov    %esi,%eax
		call   _0205e8_func
		jmp    _04ed08_case

	_04f1b4_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _04ed08_case
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _04ed08_case
		mov    $0x00001d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000028(%esi),%ebx
		mov    _0c1b44_data,%edx
		lea    0x000081(%esi),%eax
		cmp    %ebx,%edx
		setg   %dl
		and    $0x0000ff,%edx
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		or     %dl,%cl
		mov    %cl,(%eax)
		jmp    _04ed08_case

	_04f21a_jump:
		mov    0x000060(%esi),%dx
		mov    %edx,%eax
		cmp    $0x000064,%dx
		jb     _04f48e_jump
		jbe    _04ee6d_jump
		cmp    $0x0000ac,%dx
		jb     _04f371_jump
		jbe    _04ee79_jump
		cmp    $0x0000cc,%dx
		jb     _04f2dd_jump
		cmp    $0x0000cd,%dx
		jbe    _04ed08_case
		cmp    $0x0000d9,%dx
		jb     _04f2a2_jump
		jbe    _04ee6d_jump
		cmp    $0x0000de,%dx
		jb     _04f292_jump
		jbe    _04ed08_case
		cmp    $0x0000e3,%dx
		jb     _04f6f7_jump
		jbe    _04ed08_case
		cmp    $0x0000ef,%dx
		je     _04f0a9_jump
		jmp    _04f6f7_jump

	_04f292_jump:
		cmp    $0x0000da,%dx
		je     _04ed54_jump
		jmp    _04f6f7_jump

	_04f2a2_jump:
		cmp    $0x0000d4,%dx
		jb     _04f2c6_jump
		jbe    _04ed08_case
		cmp    $0x0000d5,%dx
		je     _04ed08_case
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f2c6_jump:
		cmp    $0x0000d3,%dx
		je     _04f1a8_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f2dd_jump:
		cmp    $0x0000bb,%dx
		jb     _04f336_jump
		jbe    _04f190_jump
		cmp    $0x0000c3,%dx
		jb     _04f31f_jump
		jbe    _04f1b4_jump
		cmp    $0x0000c6,%dx
		jb     _04f6f7_jump
		jbe    _04f160_jump
		cmp    $0x0000c8,%dx
		je     _04f16c_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f31f_jump:
		cmp    $0x0000be,%dx
		je     _04f19c_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f336_jump:
		cmp    $0x0000b4,%dx
		jb     _04f35a_jump
		jbe    _04f178_jump
		cmp    $0x0000b6,%dx
		je     _04f4f6_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f35a_jump:
		cmp    $0x0000b1,%dx
		je     _04f00d_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f371_jump:
		cmp    $0x000084,%dx
		jb     _04f403_jump
		jbe    _04ed08_case
		cmp    $0x000093,%dx
		jb     _04f3db_jump
		jbe    _04ed08_case
		cmp    $0x000097,%dx
		jb     _04f3c4_jump
		jbe    _04ed08_case
		cmp    $0x0000a5,%dx
		jb     _04f6f7_jump
		jbe    _04eebd_jump
		cmp    $0x0000a7,%dx
		je     _04f00d_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f3c4_jump:
		cmp    $0x000096,%dx
		je     _04ed08_case
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f3db_jump:
		cmp    $0x000086,%dx
		jb     _04f110_jump
		jbe    _04f00d_jump
		cmp    $0x00008b,%dx
		je     _04ed08_case
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f403_jump:
		cmp    $0x000070,%dx
		jb     _04f452_jump
		jbe    _04ee43_jump
		cmp    $0x00007a,%dx
		jb     _04f43c_jump
		jbe    _04ef1d_jump
		cmp    $0x00007b,%dx
		jbe    _04ee29_jump
		cmp    $0x000082,%dx
		je     _04f00d_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f43c_jump:
		cmp    $0x000077,%dx
		je     _04eea1_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f452_jump:
		cmp    $0x000067,%dx
		jb     _04f478_jump
		cmp    $0x000068,%dx
		jbe    _04ed08_case
		cmp    $0x00006e,%dx
		je     _04ed08_case
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f478_jump:
		cmp    $0x000066,%dx
		je     _04ed08_case
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f48e_jump:
		cmp    $0x000035,%dx
		jb     _04f5c4_jump
		jbe    _04ef3d_jump
		cmp    $0x000049,%dx
		jb     _04f53a_jump
		jbe    _04ed08_case
		cmp    $0x000057,%dx
		jb     _04f502_jump
		cmp    $0x000058,%dx
		jbe    _04ed08_case
		cmp    $0x00005d,%dx
		jb     _04f4ec_jump
		jbe    _04f4f6_jump
		cmp    $0x000061,%dx
		jb     _04f6f7_jump
		jbe    _04f121_jump
		cmp    $0x000062,%dx
		je     _04ed08_case
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f4ec_jump:
		cmp    $0x00005a,%dx
		jb     _04f6f7_jump

	_04f4f6_jump:
		mov    %esi,%eax
		call   _06d6e8_func
		jmp    _04ed08_case

	_04f502_jump:
		cmp    $0x00004d,%dx
		jb     _04f524_jump
		jbe    _04f0a9_jump
		cmp    $0x00004e,%dx
		je     _04ef29_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f524_jump:
		cmp    $0x00004a,%dx
		je     _04f184_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f53a_jump:
		cmp    $0x000041,%dx
		jb     _04f588_jump
		jbe    _04f139_jump
		cmp    $0x000045,%dx
		jb     _04f572_jump
		jbe    _04eec9_jump
		cmp    $0x000046,%dx
		jbe    _04ed4b_jump
		cmp    $0x000048,%dx
		je     _04f0ea_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f572_jump:
		cmp    $0x000044,%dx
		je     _04ed08_case
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f588_jump:
		cmp    $0x00003c,%dx
		jb     _04f5ae_jump
		cmp    $0x00003d,%dx
		jbe    _04f12d_jump
		cmp    $0x00003e,%dx
		je     _04ee61_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f5ae_jump:
		cmp    $0x00003a,%dx
		je     _04f084_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f5c4_jump:
		cmp    $0x000020,%dx
		jb     _04f67c_jump
		jbe    _04ed08_case
		cmp    $0x00002e,%dx
		jb     _04f644_jump
		jbe    _04f145_jump
		cmp    $0x000032,%dx
		jb     _04f62e_jump
		jbe    _04ed08_case
		cmp    $0x000033,%dx
		jbe    _04ef75_jump
		cmpw   $0x000000,0x000050(%esi)
		je     _04ed08_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _06ac04_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000006,0x000042(%esi)
		call   _04e21c_func
		decw   0x000050(%esi)
		jmp    _04ed08_case

	_04f62e_jump:
		cmp    $0x00002f,%dx
		je     _04eec9_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f644_jump:
		cmp    $0x000026,%dx
		jb     _04f666_jump
		jbe    _04f00d_jump
		cmp    $0x000028,%dx
		je     _04ef1d_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f666_jump:
		cmp    $0x000024,%dx
		je     _04eeef_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f67c_jump:
		cmp    $0x000008,%dx
		jb     _04f6cc_jump
		jbe    _04f00d_jump
		cmp    $0x00000d,%dx
		jb     _04f6b6_jump
		jbe    _04ed08_case
		cmp    $0x00000f,%dx
		jb     _04f6f7_jump
		jbe    _04ed08_case
		cmp    $0x00001b,%dx
		je     _04ed08_case
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f6b6_jump:
		cmp    $0x000009,%dx
		je     _04eebd_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f6cc_jump:
		cmp    $0x000003,%dx
		jb     _04f6ee_jump
		jbe    _04f09d_jump
		cmp    $0x000006,%dx
		je     _04f00d_jump
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f6ee_jump:
		test   %dx,%dx
		je     _04eebd_jump

	_04f6f7_jump:
		mov    %esi,%eax
		call   _04ea9c_func
		jmp    _04ed08_case

	_04f703_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jle    _04f714_jump
		movw   $0x000006,0x000042(%esi)

	_04f714_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff8,%eax
		jge    _04f725_jump
		movw   $0x00fff8,0x000042(%esi)

	_04f725_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f730_func:
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000062(%edx),%al
		cmp    $0x00000a,%eax
		jne    _04f7bb_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x000017,%eax
		jne    _04f758_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000006,%eax
		je     _04f7bb_jump

	_04f758_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x000034,%eax
		jne    _04f76c_jump
		andb   $0x0000fb,0x000081(%edx)
		pop    %edx
		ret    

	_04f76c_jump:
		testb  $0x000002,_092246_data(,%eax,4)
		je     _04f7bb_jump
		testb  $0x000040,0x000081(%edx)
		jne    _04f794_jump
		mov    %edx,%eax
		call   _072610_func
		movw   $0x000000,0x000042(%edx)
		mov    0x000042(%edx),%ax
		mov    %ax,0x000040(%edx)

	_04f794_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000002,_092247_data(,%eax,4)
		je     _04f7bb_jump
		mov    _0c247c_data,%eax
		sar    $0x000010,%eax
		movl   $0x000000,0x000024(%edx)
		add    $0x0001e4,%eax
		mov    %eax,0x00002c(%edx)

	_04f7bb_jump:
		pop    %edx
		ret    



_04f7c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _04f7e3_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _04f9a9_jump

	_04f7e3_jump:
		xor    %ecx,%ecx
		mov    0x000060(%esi),%cx
		mov    0x000040(%esi),%bx
		mov    _092246_data(,%ecx,4),%dl
		mov    0x000042(%esi),%ax
		test   $0x000080,%dl
		je     _04f834_jump
		xor    %ecx,%ecx
		mov    0x00007d(%esi),%cl
		cmp    $0x000001,%ecx
		jne    _04f834_jump
		xor    %ecx,%ecx
		mov    _0c24ac_data,%cl
		test   %ecx,%ecx
		jne    _04f834_jump
		movswl %bx,%ecx
		test   %ecx,%ecx
		jle    _04f81f_jump
		mov    %ebx,%ecx
		dec    %ecx
		jmp    _04f822_jump

	_04f81f_jump:
		mov    %ebx,%ecx
		inc    %ecx

	_04f822_jump:
		mov    %cx,0x000040(%esi)
		mov    0x00003e(%esi),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jne    _04f834_jump
		movb   $0x000000,0x00007d(%esi)

	_04f834_jump:
		xor    %ecx,%ecx
		mov    0x000060(%esi),%cx
		cmp    $0x00005e,%ecx
		jne    _04f86d_jump
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax
		mov    _0c1ec4_data,%ecx
		mov    0x000028(%esi),%ebp
		add    %eax,%ecx
		mov    0x00003e(%esi),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		sar    $0x000004,%ebx
		add    %eax,%ebp
		mov    %ebx,0x00002c(%esi)
		mov    %ecx,_0c1ec4_data
		mov    %ebp,0x000028(%esi)
		jmp    _04f970_jump

	_04f86d_jump:
		testb  $0x000020,_092245_data(,%ecx,4)
		je     _04f882_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		call   _04d240_func

	_04f882_jump:
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000010,_092245_data(,%eax,4)
		je     _04f8a5_jump
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		call   _04d240_func
		mov    %eax,%edi
		jmp    _04f8a7_jump

	_04f8a5_jump:
		mov    %ebx,%edi

	_04f8a7_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000040,_092246_data(,%eax,4)
		je     _04f956_jump
		mov    0x000028(%esi),%dx
		mov    0x00002c(%esi),%cx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%esi),%bl
		mov    0x000068(%esi),%al
		add    %ecx,%ebx
		add    %edx,%eax
		sub    $0x000008,%ebx
		mov    %eax,%ecx
		movswl %bx,%ebx
		cwtl   
		add    %edi,%ecx
		sar    $0x000004,%ebx
		sar    $0x000004,%eax
		movswl %bx,%ebx
		cwtl   
		mov    %ebx,%edx
		mov    %cx,0x000004(%esp)
		call   _01e288_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092204_data(%eax)
		jne    _04f91d_jump
		mov    0x000002(%esp),%eax
		sar    $0x000014,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e288_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092204_data(%eax)
		jne    _04f94a_jump

	_04f91d_jump:
		mov    0x000002(%esp),%eax
		mov    _0c24f4_data,%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		add    $0x000130,%ecx
		cmp    %ebx,%eax
		jl     _04f944_jump
		cmp    %ecx,%eax
		jg     _04f944_jump
		mov    $0x000001,%eax
		jmp    _04f946_jump

	_04f944_jump:
		xor    %eax,%eax

	_04f946_jump:
		test   %eax,%eax
		jne    _04f956_jump

	_04f94a_jump:
		mov    0x000040(%esi),%ax
		neg    %eax
		neg    %edi
		mov    %ax,0x000040(%esi)

	_04f956_jump:
		movswl %di,%eax
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		mov    -0x000002(%esp),%eax
		mov    0x00002c(%esi),%ebx
		sar    $0x000010,%eax
		mov    %edx,0x000028(%esi)
		add    %eax,%ebx
		mov    %ebx,0x00002c(%esi)

	_04f970_jump:
		lea    0x000082(%esi),%ebx
		test   %di,%di
		jne    _04f982_jump
		cmpw   $0x000000,(%esp)
		je     _04f989_jump

	_04f982_jump:
		mov    $0x000001,%eax
		jmp    _04f98b_jump

	_04f989_jump:
		xor    %eax,%eax

	_04f98b_jump:
		mov    (%ebx),%cl
		and    $0x0000fe,%cl
		and    $0x000001,%al
		mov    %cl,%ch
		or     %al,%ch
		mov    %esi,%eax
		mov    %ch,(%ebx)
		call   _04f730_func
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04f9a9_jump:
		andb   $0x0000fe,0x000082(%esi)
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f9bc_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _01dc90_func
		test   %ax,%ax
		je     _04f9e4_jump
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		lea    0x000000(,%ebx,4),%eax
		add    %eax,%ebx
		shl    $0x000002,%ebx
		mov    %edx,%eax
		call   *_0932cc_data(%ebx)

	_04f9e4_jump:
		pop    %edx
		pop    %ebx
		mov    %eax,%eax
		ret    



_04f9ec_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0dbc10_data,%ax
		testb  $0x000002,_092244_data(,%eax,4)
		je     _04fa09_jump
		mov    %edx,%eax
		call   _0726f8_func

	_04fa09_jump:
		xor    %eax,%eax
		mov    _0dbc10_data,%ax
		testb  $0x000020,_092244_data(,%eax,4)
		je     _04fa22_jump
		mov    %edx,%eax
		call   _02d770_func

	_04fa22_jump:
		xor    %eax,%eax
		mov    _0dbc10_data,%ax
		testb  $0x000001,_092246_data(,%eax,4)
		je     _04fa3b_jump
		mov    %edx,%eax
		call   _01e494_func

	_04fa3b_jump:
		xor    %eax,%eax
		mov    _0dbc10_data,%ax
		testb  $0x000080,_092245_data(,%eax,4)
		je     _04fa56_jump
		mov    %edx,%eax
		call   _058b40_func
		jmp    _04fa5a_jump

	_04fa56_jump:
		movb   $0x00001e,0x000070(%edx)

	_04fa5a_jump:
		xor    %ebx,%ebx
		mov    _0dbc10_data,%bx
		lea    0x000000(,%ebx,4),%eax
		add    %eax,%ebx
		shl    $0x000002,%ebx
		mov    %edx,%eax
		call   *_0932c0_data(%ebx)
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		cmp    $0x000002,%eax
		jne    _04fa88_jump
		mov    %edx,%eax
		call   _04ead8_func

	_04fa88_jump:
		testb  $0x000020,0x000081(%edx)
		je     _04fa9a_jump
		mov    %edx,%eax
		call   _02cc4c_func
		jmp    _04faa0_jump

	_04fa9a_jump:
		movw   $0x002710,0x000054(%edx)

	_04faa0_jump:
		xor    %eax,%eax
		mov    _0dbc10_data,%ax
		testb  $0x000040,_092245_data(,%eax,4)
		je     _04fab9_jump
		mov    %edx,%eax
		call   _05b4b0_func

	_04fab9_jump:
		xor    %eax,%eax
		mov    _0dbc10_data,%ax
		testb  $0x000020,_092244_data(,%eax,4)
		je     _04fad2_jump
		mov    %edx,%eax
		call   _04f9bc_func

	_04fad2_jump:
		pop    %edx
		pop    %ebx
		ret    



_04fad8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    $0xffffffff,%ebx
		xor    %edx,%edx
		mov    _0c247a_data,%eax
		mov    %dx,_0c245a_data
		sar    $0x000010,%eax
		mov    %bx,_0c2392_data
		mov    %eax,(%esp)
		mov    _0c247c_data,%edx
		mov    (%esp),%ebx
		sar    $0x000010,%edx
		add    $0x000528,%eax
		mov    %edx,0x000010(%esp)
		sub    %ebx,%eax
		mov    0x000010(%esp),%ecx
		sar    %eax
		add    $0x0004b0,%edx
		mov    %eax,0x00000c(%esp)
		add    %ebx,%eax
		sub    %ecx,%edx
		sub    $0x0001f4,%eax
		sar    %edx
		mov    %eax,(%esp)
		lea    -0x0001f4(%ecx,%edx,1),%eax
		mov    %eax,0x000010(%esp)
		mov    _0c1b0c_data,%eax
		mov    %edx,0x000008(%esp)
		movswl (%eax),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		xor    %edi,%edi
		add    %edx,%eax
		mov    _0c1b04_data,%ecx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%ecx
		xor    %eax,%eax
		jmp    _04fb8b_jump

	_04fb67_jump:
		movl   $0x000000,0x00001c(%ecx)
		mov    _0c1b0c_data,%ecx
		movswl 0x000002(%ecx,%eax,1),%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0c1b04_data,%esi
		add    $0x000002,%eax
		inc    %ebx
		add    %esi,%ecx

	_04fb8b_jump:
		mov    _0c1b0e_data,%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%ebx
		jl     _04fb67_jump
		mov    $_0c2392_data,%esi
		mov    _0c2458_data,%eax
		dec    %ebp
		sar    $0x000010,%eax
		mov    %ebp,0x000014(%esp)
		add    %eax,%eax
		lea    0x000000(%ebp,%ebp,1),%ecx
		add    %eax,%esi
		mov    _0c1b0c_data,%eax
		movswl (%ecx,%eax,1),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%ebx
		shl    $0x000002,%eax
		mov    %esi,0x000004(%esp)
		add    %eax,%ebx
		test   %ebp,%ebp
		jmp    _04fc3e_jump

	_04fbd5_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000010,_092244_data(,%eax,4)
		je     _04fc11_jump
		mov    _0c247e_data,%dx
		mov    0x00002c(%ebx),%ax
		sub    %edx,%eax
		mov    _0c247c_data,%dx
		movswl %ax,%ebp
		mov    0x000028(%ebx),%ax
		sub    %edx,%eax
		add    $0x000008,%eax
		mov    %ebp,%edx
		cwtl   
		call   _04d758_func
		jmp    _04fc18_jump

	_04fc11_jump:
		movl   $0x000000,0x000024(%ebx)

	_04fc18_jump:
		mov    _0c1b0c_data,%eax
		movswl -0x000002(%ecx,%eax,1),%eax
		imul   $0x000084,%eax,%eax
		mov    0x000014(%esp),%edx
		mov    _0c1b04_data,%ebx
		dec    %edx
		sub    $0x000002,%ecx
		mov    %edx,0x000014(%esp)
		add    %eax,%ebx
		test   %ecx,%ecx

	_04fc3e_jump:
		jl     _04fcaa_jump
		cmpl   $0x000000,0x00001c(%ebx)
		jne    _04fc18_jump
		mov    (%esp),%edx
		mov    0x000028(%ebx),%eax
		sub    %edx,%eax
		mov    0x00000c(%esp),%ebp
		test   %eax,%eax
		jge    _04fc58_jump
		neg    %eax

	_04fc58_jump:
		cmp    %ebp,%eax
		jge    _04fbd5_jump
		mov    0x000010(%esp),%edx
		mov    0x00002c(%ebx),%eax
		sub    %edx,%eax
		mov    0x000008(%esp),%ebp
		test   %eax,%eax
		jge    _04fc73_jump
		neg    %eax

	_04fc73_jump:
		cmp    %ebp,%eax
		jge    _04fbd5_jump
		mov    _0c247e_data,%dx
		mov    0x00002c(%ebx),%ax
		sub    %edx,%eax
		mov    _0c247c_data,%dx
		movswl %ax,%ebp
		mov    0x000028(%ebx),%ax
		sub    %edx,%eax
		add    $0x000008,%eax
		mov    %ebp,%edx
		cwtl   
		call   _04d758_func
		jmp    _04fc18_jump

	_04fcaa_jump:
		mov    _0c1b0e_data,%ebp
		sar    $0x000010,%ebp
		dec    %ebp
		mov    _0c1b0c_data,%eax
		lea    0x000000(,%ebp,2),%ebx
		movswl (%ebx,%eax,1),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		test   %ebp,%ebp
		jmp    _04fd13_jump

	_04fcda_jump:
		xor    %ecx,%ecx
		mov    0x000060(%eax),%cx
		testb  $0x000001,_092244_data(,%ecx,4)
		je     _04fcf5_jump
		mov    0x000032(%eax),%eax
		sar    $0x000010,%eax
		call   _01f5b4_func

	_04fcf5_jump:
		mov    _0c1b0c_data,%eax
		movswl -0x000002(%ebx,%eax,1),%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%ecx
		sub    $0x000002,%ebx
		dec    %ebp
		add    %ecx,%eax
		test   %ebx,%ebx

	_04fd13_jump:
		jl     _04fd5d_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _04fcda_jump
		mov    _0c247c_data,%dx
		mov    0x000028(%eax),%cx
		sub    %edx,%ecx
		add    $0x000008,%ecx
		mov    %cx,0x000036(%eax)
		mov    _0c247e_data,%dx
		mov    0x00002c(%eax),%cx
		sub    %edx,%ecx
		mov    %cx,0x000038(%eax)
		add    $0x000002,%esi
		mov    0x000034(%eax),%ax
		inc    %edi
		mov    %ax,-0x000002(%esi)
		cmp    $0x000064,%edi
		jle    _04fcf5_jump
		mov    $_0c06c8_data,%eax
		call   _01f628_func
		jmp    _04fcf5_jump

	_04fd5d_jump:
		mov    0x000004(%esp),%ebx
		mov    %esi,%edx
		sub    %ebx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edx
		mov    _0c2458_data,%eax
		sar    $0x000010,%eax
		movw   $0x00ffff,(%esi)
		add    %edx,%eax
		mov    %ax,_0c245a_data
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi

	_04fd8a_jump:
		pop    %esi

	_04fd8b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04fd90_func:
		incw   _0c24c8_data
		mov    _0c24c6_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000063,%eax
		jle    _04fdad_jump
		movw   $0x000063,_0c24c8_data

	_04fdad_jump:
		xor    %eax,%eax
		mov    _0c24d1_data,%al
		cmp    $0x000004,%eax
		jne    _04fdc1_jump
		movb   $0x000004,_0c1b92_data
		ret    

	_04fdc1_jump:
		movb   $0x000002,_0c1b92_data
		ret    



_04fdcc_func:
		push   %ebx
		push   %edx
		mov    _0c25da_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _04feb3_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00007f(%edx),%al
		test   %eax,%eax
		jle    _04fe05_jump
		mov    %al,%ah
		movb   $0x000000,0x00006b(%edx)
		dec    %ah
		mov    %ah,0x00007f(%edx)

	_04fe05_jump:
		mov    %edx,%eax
		call   _04dbe4_func
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%edx),%al
		testb  $0x000010,0x000007(%ebx,%eax,8)
		je     _04fe30_jump
		xor    %eax,%eax
		mov    0x00006b(%edx),%al
		test   %eax,%eax
		jmp    _04fe53_jump

	_04fe30_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%edx),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%edx),%ebx
		mov    0x00000a(%ebx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %ebx,%ebx
		dec    %eax
		mov    0x00006b(%edx),%bl
		cmp    %eax,%ebx

	_04fe53_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _04feb3_jump
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    (%eax),%eax
		mov    0x00006c(%edx),%bl
		mov    0x000005(%eax,%ebx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _04feb3_jump
		mov    _0c257e_data,%eax
		mov    $0xffffffff,%ebx
		sar    $0x000010,%eax
		mov    %bx,_0c25dc_data
		cmp    $0x000003,%eax
		je     _04feac_jump
		cmp    $0x000004,%eax
		je     _04feac_jump
		call   _04fd90_func

	_04feac_jump:
		andb   $0x0000fb,0x000081(%edx)

	_04feb3_jump:
		mov    _0c25dc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _04ff7d_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00007f(%edx),%al
		test   %eax,%eax
		jle    _04fee8_jump
		dec    %al
		movb   $0x000000,0x00006b(%edx)
		mov    %al,0x00007f(%edx)

	_04fee8_jump:
		mov    %edx,%eax
		call   _04dbe4_func
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    (%eax),%eax
		mov    0x00006c(%edx),%bl
		testb  $0x000010,0x000007(%eax,%ebx,8)
		je     _04ff13_jump
		xor    %eax,%eax
		mov    0x00006b(%edx),%al
		test   %eax,%eax
		jmp    _04ff37_jump

	_04ff13_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%edx),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%edx),%ebx
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x00000a(%eax),%bx
		xor    %eax,%eax
		dec    %ebx
		mov    0x00006b(%edx),%al
		cmp    %ebx,%eax

	_04ff37_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _04ff7d_jump
		xor    %ebx,%ebx
		mov    0x00006d(%edx),%bl
		mov    0x00000c(%edx),%eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%edx),%al
		mov    0x000005(%ebx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _04ff7d_jump
		movw   $0x00ffff,_0c25de_data
		andb   $0x0000fb,0x000081(%edx)

	_04ff7d_jump:
		pop    %edx
		pop    %ebx
		ret    



_04ff80_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c2390_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _0c245a_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _04fd8b_jump
		jmp    _04ffde_jump

	_04ffb2_jump:
		inc    %edx
		movswl %dx,%eax
		mov    _0c2390_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%ebx
		mov    _0c245a_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jge    _04fd8b_jump

	_04ffde_jump:
		xor    %ebx,%ebx
		mov    0x000060(%eax),%bx
		cmp    $0x0000cc,%ebx
		je     _04ffb2_jump
		cmp    $0x0000cd,%ebx
		je     _04ffb2_jump
		call   _04dbe4_func
		jmp    _04ffb2_jump



_04fffc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c25da_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05001a_jump
		mov    _0c25dc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05001f_jump

	_05001a_jump:
		call   _04fdcc_func

	_05001f_jump:
		cmpb   $0x000000,_0c25ca_data
		je     _05003f_jump
		mov    $0x000007,%edx
		mov    _0c25cc_data,%eax
		call   _028430_func
		xor    %dl,%dl
		mov    %dl,_0c25ca_data

	_05003f_jump:
		mov    _0c2390_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c245a_data,%cx
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%edx
		test   %cx,%cx
		jle    _04fd8a_jump
		jmp    _05009a_jump

	_05006e_jump:
		inc    %ebx
		movswl %bx,%eax
		mov    _0c2390_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%edx
		mov    _0c245a_data,%si
		add    %eax,%edx
		cmp    %si,%bx
		jge    _04fd8a_jump

	_05009a_jump:
		mov    0x000060(%edx),%ax
		mov    %ax,_0dbc10_data
		xor    %eax,%eax
		mov    _0dbc10_data,%ax
		testb  $0x000008,_092247_data(,%eax,4)
		jne    _0500f5_jump
		cmp    $0x0000a1,%eax
		jne    _0500c7_jump
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000017,%eax
		je     _0500f5_jump

	_0500c7_jump:
		xor    %eax,%eax
		mov    _0dbc10_data,%ax
		cmp    $0x000053,%eax
		jne    _0500de_jump
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000001,%eax
		je     _0500f5_jump

	_0500de_jump:
		xor    %eax,%eax
		mov    _0dbc10_data,%ax
		cmp    $0x000021,%eax
		jne    _0500fc_jump
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000023,%eax
		je     _0500fc_jump

	_0500f5_jump:
		mov    %edx,%eax
		call   _01e840_func

	_0500fc_jump:
		xor    %eax,%eax
		mov    _0dbc10_data,%ax
		cmp    $0x0000a1,%eax
		je     _05006e_jump
		cmpl   $0x000000,0x000024(%edx)
		je     _05006e_jump
		mov    %edx,%eax
		call   _04f9ec_func
		xor    %eax,%eax
		mov    _0dbc10_data,%ax
		testb  $0x000080,_092244_data(,%eax,4)
		jne    _05006e_jump
		xor    %eax,%eax
		mov    0x000076(%edx),%al
		test   %eax,%eax
		jne    _05006e_jump
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    (%eax),%eax
		mov    0x00006c(%edx),%cl
		testb  $0x000008,0x000007(%eax,%ecx,8)
		je     _05006e_jump
		incb   0x000076(%edx)
		jmp    _05006e_jump



_050168_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c2390_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    _0c245a_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _0501c0_jump

	_050193_jump:
		inc    %edx
		call   _04f7c0_func
		movswl %dx,%eax
		mov    _0c2390_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%ebx
		mov    _0c245a_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _050193_jump

	_0501c0_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0501c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    _0c2390_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _0c245a_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _050220_jump

	_0501f4_jump:
		inc    %edx
		call   _01dcec_func
		movswl %dx,%eax
		mov    _0c2390_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%ebx
		mov    _0c1b04_data,%eax
		mov    _0c245a_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _0501f4_jump

	_050220_jump:
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0502ec_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmpl   $0x000000,0x000024(%esi)
		je     _0502ec_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d840_func
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000074(%esi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0c1b85_data,%dl
		sub    %edx,%eax
		mov    %eax,_0c1b48_data
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x0000fe,%eax
		jne    _0502e2_jump
		xor    %edx,%edx
		mov    _0c1b44_data,%ebx
		mov    _0c1b84_data,%dl
		mov    0x000006(%esp),%eax
		add    %ebx,%edx
		mov    0x000002(%esp),%ebx
		sar    $0x000011,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		sub    %eax,%edx
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		imul   %edx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _0502ca_jump
		sar    %cl,%ax
		jmp    _0502d3_jump

	_0502ca_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0502d3_jump:
		mov    _0c1b48_data,%ecx
		cwtl   
		sub    %eax,%ecx
		mov    %ecx,_0c1b48_data

	_0502e2_jump:
		mov    $_0c1b1c_data,%eax
		call   _01dcec_func

	_0502ec_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0502f4_switch:
		.long   _0504b3_case
		.long   _05057d_case
		.long   _050350_case
		.long   _050400_case




_050304_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c1b9d_data,%dl
		xor    %ebx,%ebx
		test   $0x000008,%dl
		je     _050325_jump
		mov    _0c1b44_data,%si
		add    $0x000046,%esi
		jmp    _05032f_jump

	_050325_jump:
		mov    _0c1b44_data,%si
		add    $0x00003a,%esi

	_05032f_jump:
		mov    _0c1b48_data,%di
		add    $0x000020,%edi
		cmp    $0x000003,%ax
		ja     _05063b_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0502f4_switch(,%eax,4)

	_050350_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x000003,%edx
		jge    _05063b_jump
		mov    _0c24b2_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24bc_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092204_data(%edx)
		je     _0503a7_jump
		mov    $0x000001,%ebx

	_0503a7_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24bc_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092204_data(%edx)
		je     _0503cf_jump
		mov    $0x000001,%ebx

	_0503cf_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _05063b_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_050400_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x00000c,%edx
		jle    _05063b_jump
		add    $0x000040,%ecx
		mov    _0c24b2_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24bc_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092204_data(%edx)
		je     _05045a_jump
		mov    $0x000001,%ebx

	_05045a_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24bc_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092204_data(%edx)
		je     _050482_jump
		mov    $0x000001,%ebx

	_050482_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _05063b_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0504b3_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000003,%edx
		jge    _05063b_jump
		movswl %di,%eax
		mov    _0c24b2_data,%edx
		add    %esi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		dec    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24bc_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092204_data(%edx)
		je     _05050e_jump
		mov    $0x000001,%ebx

	_05050e_jump:
		mov    _0c24b2_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24bc_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092204_data(%edx)
		je     _050540_jump
		mov    $0x000001,%ebx

	_050540_jump:
		mov    _0c24b2_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _05063b_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05057d_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x00000c,%edx
		jle    _05063b_jump
		movswl %di,%eax
		mov    _0c24b2_data,%edx
		add    %esi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		lea    0x000003(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0c24bc_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _0505d9_jump
		mov    $0x000001,%ebx

	_0505d9_jump:
		mov    _0c24b2_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ecx
		mov    _0c24bc_data,%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _05060b_jump
		mov    $0x000001,%ebx

	_05060b_jump:
		mov    _0c24b2_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _05063b_jump
		mov    $0x000001,%ebx

	_05063b_jump:
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050644_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _050667_jump
		call   _050304_func
		test   %ax,%ax
		je     _050667_jump
		xor    %edx,%edx
		mov    %dx,_0c1b5e_data

	_050667_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c1b88_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		jne    _050693_jump
		testb  $0x000002,_0c32e5_data
		je     _05069a_jump

	_050693_jump:
		mov    $0x000028,%eax
		jmp    _05069f_jump

	_05069a_jump:
		mov    $0x000019,%eax

	_05069f_jump:
		mov    _0c1b5c_data,%edx
		mov    _0c1b48_data,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		mov    %ebx,_0c1b48_data
		mov    _0c259c_data,%ebx
		sar    $0x000010,%ebx
		movswl %ax,%edx
		lea    -0x000014(%ebx),%eax
		mov    _0c1b48_data,%ecx
		sub    %edx,%eax
		cmp    %ecx,%eax
		jle    _050706_jump
		mov    %eax,_0c1b48_data
		mov    _0c1b64_data,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    %bx,_0c1b5e_data
		cmp    $0xffffffff,%eax
		je     _050706_jump
		mov    _0c1b70_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		cmp    $0xffffffff,%eax
		sete   %al
		and    $0x0000ff,%eax
		call   _02d3ac_func

	_050706_jump:
		mov    $_0c1b1c_data,%eax
		xor    %ecx,%ecx
		call   _01dcec_func
		mov    %cx,_0c24c2_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050720_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _050748_jump
		mov    $0x000003,%eax
		call   _050304_func
		test   %ax,%ax
		je     _050748_jump
		xor    %edx,%edx
		mov    %dx,_0c1b5e_data

	_050748_jump:
		mov    _0c1b5c_data,%eax
		mov    _0c1b48_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    $_0c1b1c_data,%eax
		mov    %edx,_0c1b48_data
		call   _01dcec_func
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _0507c6_jump
		mov    _0c259e_data,%edx
		mov    _0c247c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _0507bd_jump
		mov    _0c1b52_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000064,%eax
		jge    _0507ad_jump
		xor    %ecx,%ecx
		mov    %cx,_0c24c2_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0507ad_jump:
		mov    _0c1b5e_data,%ax
		mov    %ax,_0c24c2_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0507bd_jump:
		xor    %ebx,%ebx
		mov    %bx,_0c24c2_data

	_0507c6_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0507cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _0507ed_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000017,%eax
		je     _050c9d_jump

	_0507ed_jump:
		mov    _0c1af8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0509f8_jump
		mov    _0c2578_data,%edx
		xor    %eax,%eax
		sar    $0x000011,%edx
		mov    _0c1b85_data,%al
		sub    %eax,%edx
		lea    0x000072(%edx),%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _05083e_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000f,%eax
		jne    _050973_jump
		cmpb   $0x000000,_0c2572_data
		je     _050973_jump

	_05083e_jump:
		mov    _0c25c2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _050973_jump
		mov    _0c24c0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000ff,%eax
		jne    _05086d_jump
		mov    _0c2584_data,%di
		test   %di,%di
		je     _050936_jump

	_05086d_jump:
		mov    _0c1b54_data,%ax
		sub    %edx,%eax
		mov    $0x000002,%cl
		mov    %eax,%edx
		test   %ax,%ax
		js     _050883_jump
		sar    %cl,%ax
		jmp    _05088c_jump

	_050883_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05088c_jump:
		mov    %ax,_0c24c2_data
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0508a0_jump
		neg    %eax

	_0508a0_jump:
		mov    %eax,%ebx
		mov    _0c24c0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0508b0_jump
		neg    %eax

	_0508b0_jump:
		cmp    %eax,%ebx
		jg     _0509f8_jump
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0508c6_jump
		neg    %eax

	_0508c6_jump:
		mov    %eax,%ebx
		mov    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _0508d3_jump
		mov    %ebx,%eax

	_0508d3_jump:
		mov    %eax,%ebx
		mov    _0c24c0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0508f5_jump
		movswl %bx,%ebx
		cmp    %ebx,%eax
		jle    _0508ea_jump
		mov    %ebx,%eax

	_0508ea_jump:
		mov    %ax,_0c24c2_data
		jmp    _0509f8_jump

	_0508f5_jump:
		jge    _05090d_jump
		movswl %bx,%ebx
		neg    %ebx
		cmp    %ebx,%eax
		jge    _050902_jump
		mov    %ebx,%eax

	_050902_jump:
		mov    %ax,_0c24c2_data
		jmp    _0509f8_jump

	_05090d_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jle    _050922_jump
		movw   $0x000001,_0c24c2_data
		jmp    _0509f8_jump

	_050922_jump:
		jge    _0509f8_jump
		movw   $0x00ffff,_0c24c2_data
		jmp    _0509f8_jump

	_050936_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000001,%eax
		je     _0509f8_jump
		mov    _0c1b52_data,%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		add    $0x000030,%eax
		cmp    %eax,%ebx
		jge    _050967_jump
		movw   $0x00fffc,_0c24c2_data
		jmp    _0509f8_jump

	_050967_jump:
		mov    %di,_0c24c2_data
		jmp    _0509f8_jump

	_050973_jump:
		mov    _0c247e_data,%ax
		cmp    _0c25a0_data,%ax
		je     _0509a0_jump
		mov    _0c1b52_data,%ebx
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _0509a0_jump
		test   %eax,%eax
		jg     _0509d4_jump

	_0509a0_jump:
		mov    _0c247e_data,%ax
		cmp    _0c259e_data,%ax
		je     _0509f8_jump
		xor    %eax,%eax
		mov    _0c1b90_data,%al
		mov    _0c1b52_data,%edx
		neg    %eax
		sar    $0x000010,%edx
		sub    $0x000010,%eax
		cmp    %eax,%edx
		jg     _0509f8_jump
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0509f8_jump

	_0509d4_jump:
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000010,%eax
		jg     _0509ef_jump
		mov    _0c1b5e_data,%ax
		mov    %ax,_0c24c2_data
		jmp    _0509f8_jump

	_0509ef_jump:
		xor    %esi,%esi
		mov    %si,_0c24c2_data

	_0509f8_jump:
		mov    _0c1af6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _050c25_jump
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0c1b84_data,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    _0c2490_data,%bx
		add    $0x000030,%eax
		mov    _0c248e_data,%si
		add    %eax,%ebx
		mov    _0c2582_data,%eax
		sub    $0x000030,%edx
		sar    $0x000010,%eax
		sub    %esi,%edx
		test   %eax,%eax
		jg     _050a4c_jump
		mov    _0c1b5a_data,%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jle    _050a98_jump

	_050a4c_jump:
		mov    _0c1b52_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _050a60_jump
		sar    %cl,%ax
		jmp    _050a69_jump

	_050a60_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_050a69_jump:
		mov    _0c131a_data,%cx
		cmp    %cx,%ax
		jge    _050a83_jump
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,_0c131a_data
		jmp    _050b86_jump

	_050a83_jump:
		jle    _050b86_jump
		mov    %ecx,%edi
		inc    %edi
		mov    %di,_0c131a_data
		jmp    _050b86_jump

	_050a98_jump:
		test   %eax,%eax
		jl     _050aa0_jump
		test   %ecx,%ecx
		jge    _050aec_jump

	_050aa0_jump:
		mov    _0c1b52_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _050ab4_jump
		sar    %cl,%ax
		jmp    _050abd_jump

	_050ab4_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_050abd_jump:
		mov    _0c131a_data,%cx
		cmp    %cx,%ax
		jle    _050ad7_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_0c131a_data
		jmp    _050b86_jump

	_050ad7_jump:
		jge    _050b86_jump
		mov    %ecx,%edi
		dec    %edi
		mov    %di,_0c131a_data
		jmp    _050b86_jump

	_050aec_jump:
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _050b43_jump
		mov    _0c1b52_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _050b15_jump
		sar    %cl,%ax
		jmp    _050b1e_jump

	_050b15_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_050b1e_jump:
		mov    _0c131a_data,%cx
		cmp    %cx,%ax
		jge    _050b35_jump
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,_0c131a_data
		jmp    _050b86_jump

	_050b35_jump:
		jle    _050b86_jump
		mov    %ecx,%edi
		inc    %edi
		mov    %di,_0c131a_data
		jmp    _050b86_jump

	_050b43_jump:
		test   %eax,%eax
		jne    _050b86_jump
		mov    _0c1b52_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _050b5b_jump
		sar    %cl,%ax
		jmp    _050b64_jump

	_050b5b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_050b64_jump:
		mov    _0c131a_data,%di
		cmp    %di,%ax
		jle    _050b7a_jump
		inc    %edi
		mov    %di,_0c131a_data
		jmp    _050b86_jump

	_050b7a_jump:
		jge    _050b86_jump
		mov    %edi,%esi
		dec    %esi
		mov    %si,_0c131a_data

	_050b86_jump:
		cmpb   $0x000000,_0c5185_data
		je     _050bc0_jump
		mov    _0c1318_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _050b9d_jump
		neg    %eax

	_050b9d_jump:
		cmp    $0x000004,%eax
		jle    _050bc0_jump
		mov    _0c1318_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _050bb5_jump
		mov    $0x000004,%eax
		jmp    _050bba_jump

	_050bb5_jump:
		mov    $0xfffffffc,%eax

	_050bba_jump:
		mov    %ax,_0c131a_data

	_050bc0_jump:
		mov    $0x000002,%cl
		mov    _0c131a_data,%ax
		test   %ax,%ax
		js     _050bd2_jump
		sar    %cl,%ax
		jmp    _050bdb_jump

	_050bd2_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_050bdb_jump:
		mov    _0c24c0_data,%cx
		add    %eax,%ecx
		mov    _0c1b52_data,%si
		mov    %cx,_0c24c0_data
		cmp    %si,%bx
		jle    _050c03_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _050c18_jump

	_050c03_jump:
		cmp    _0c1b52_data,%dx
		jge    _050c25_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _050c25_jump

	_050c18_jump:
		mov    _0c1b5c_data,%ax
		add    %ax,_0c24c0_data

	_050c25_jump:
		mov    _0c1af8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _050c9d_jump
		mov    _0c1b64_data,%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		je     _050c9d_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000020,_092245_data(,%eax,4)
		je     _050c75_jump
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		call   _04d240_func
		add    %ax,_0c24c2_data
		jmp    _050c89_jump

	_050c75_jump:
		mov    _0c24c2_data,%bx
		mov    0x000042(%edx),%ax
		add    %eax,%ebx
		mov    %bx,_0c24c2_data

	_050c89_jump:
		mov    _0c24c2_data,%si
		mov    0x00004c(%edx),%ax
		add    %eax,%esi
		mov    %si,_0c24c2_data

	_050c9d_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050ca4_func:
		push   %ecx
		push   %edx
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _050cd2_jump
		mov    $0x000001,%eax
		call   _050304_func
		test   %ax,%ax
		je     _050cd2_jump
		xor    %edx,%edx
		mov    %dx,_0c1b5c_data
		mov    %dx,_0c2584_data

	_050cd2_jump:
		mov    _0c1b5a_data,%eax
		mov    _0c1b44_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0ce570_data,%ax
		cwtl   
		mov    %edx,_0c1b44_data
		cmp    %edx,%eax
		jge    _050d1b_jump
		mov    %eax,_0c1b44_data
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %cx,_0c1b5c_data
		mov    _0c1b89_data,%al
		mov    %cx,_0c2584_data
		cmp    $0x000002,%eax
		je     _050d1b_jump
		mov    %cx,_0c1b5e_data

	_050d1b_jump:
		mov    $_0c1b1c_data,%eax
		call   _01dcec_func
		pop    %edx
		pop    %ecx
		ret    



_050d28_func:
		push   %ecx
		push   %edx
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _050d53_jump
		xor    %eax,%eax
		call   _050304_func
		test   %ax,%ax
		je     _050d53_jump
		xor    %edx,%edx
		mov    %dx,_0c1b5c_data
		mov    %dx,_0c2584_data

	_050d53_jump:
		mov    _0c1b5a_data,%eax
		mov    _0c1b44_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0c1af6_data,%eax
		sar    $0x000010,%eax
		mov    %edx,_0c1b44_data
		cmp    $0xffffffff,%eax
		jne    _050da2_jump
		mov    _0ce572_data,%ax
		cwtl   
		cmp    %edx,%eax
		jle    _050da2_jump
		mov    %eax,_0c1b44_data
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0c1b89_data,%al
		mov    %cx,_0c2584_data
		cmp    $0x000002,%eax
		je     _050da2_jump
		mov    %cx,_0c1b5e_data

	_050da2_jump:
		pop    %edx
		pop    %ecx
		ret    



_050da8_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0c24d1_data,%al
		cmp    $0x000002,%eax
		jne    _050dcb_jump
		mov    _0c1b92_data,%al
		xor    %dh,%dh
		mov    %al,_0c24cd_data
		mov    %dh,_0c24cc_data
		jmp    _050df8_jump

	_050dcb_jump:
		xor    %eax,%eax
		mov    _0c1b92_data,%al
		cmp    $0x000002,%eax
		jg     _050de6_jump
		xor    %dl,%dl
		mov    %al,_0c24cd_data
		mov    %dl,_0c24cc_data
		jmp    _050df8_jump

	_050de6_jump:
		mov    $0x000002,%ah
		mov    %al,%bl
		sub    %ah,%bl
		mov    %ah,_0c24cd_data
		mov    %bl,_0c24cc_data

	_050df8_jump:
		mov    _0c24c6_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _050e16_jump
		xor    %bl,%bl
		mov    %bl,_0c24cb_data
		mov    %bl,_0c24ca_data
		jmp    _050e38_jump

	_050e16_jump:
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %dl,_0c24cb_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %al,_0c24ca_data

	_050e38_jump:
		xor    %edx,%edx
		mov    _0c24ce_data,%dl
		cmp    $0x000063,%edx
		jle    _050e4a_jump
		mov    $0x000063,%edx

	_050e4a_jump:
		xor    %ebx,%ebx
		mov    $0x00000a,%ecx
		mov    %dl,%bl
		mov    %dl,_0c24ce_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %al,_0c24cf_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %dl,_0c24d0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050e7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c1b00_data,%esi
		mov    _0c519e_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _050ee2_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		cmpl   $0x000000,0x000020(%ecx)
		je     _050ee2_jump
		mov    0x000032(%ecx),%eax
		mov    %esi,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%ecx),%ax
		je     _050ee2_jump

	_050ebe_jump:
		cwtl   
		imul   $0x000084,%eax,%ebx
		mov    _0c1b04_data,%edx
		andb   $0x0000fb,0x000081(%edx,%ebx,1)
		mov    %esi,%edx
		mov    0x000034(%ecx),%bx
		mov    (%edx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _050ebe_jump

	_050ee2_jump:
		mov    %esi,_0c1b00_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050ef0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    _0c1b00_data,%esi
		mov    %eax,%ecx
		xor    %ah,%ah
		mov    0x000032(%ecx),%edx
		mov    %ah,(%esp)
		sar    $0x000010,%edx
		mov    %esi,%eax
		mov    (%eax,%edx,2),%ax
		cmp    0x000034(%ecx),%ax
		je     _050f4b_jump

	_050f16_jump:
		cwtl   
		imul   $0x000084,%eax,%edx
		mov    _0c1b04_data,%ebx
		mov    0x000060(%edx,%ebx,1),%dx
		and    $0x00ffff,%edx
		cmp    $0x0000a4,%edx
		jne    _050f3c_jump
		movb   $0x000001,(%esp)
		jmp    _050f4b_jump

	_050f3c_jump:
		mov    %esi,%edx
		mov    0x000034(%ecx),%bx
		mov    (%edx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _050f16_jump

	_050f4b_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		mov    %esi,_0c1b00_data
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050f60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0c1b00_data,%edi
		mov    _0c1b04_data,%ebx
		mov    _0c1b08_data,%ax
		xor    %esi,%esi
		mov    %eax,0x000004(%esp)
		test   %ax,%ax
		jle    _05105a_jump
		jmp    _050fa0_jump

	_050f8c_jump:
		mov    0x000004(%esp),%ecx
		inc    %esi
		add    $0x000084,%ebx
		cmp    %cx,%si
		jge    _05105a_jump

	_050fa0_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		cmp    $0x0000a4,%eax
		jne    _050f8c_jump
		movswl %si,%eax
		mov    %edi,%ecx
		mov    (%ecx,%eax,2),%ax
		mov    %esi,%edx
		cmp    %si,%ax
		je     _050ffe_jump

	_050fbd_jump:
		cmp    %si,%ax
		je     _050ffe_jump
		testb  $0x000004,0x000081(%ebx)
		je     _050ff0_jump
		xor    %edx,%edx
		mov    0x000060(%ebx),%dx
		cmp    $0x0000a4,%edx
		jne    _050ff0_jump
		movswl %ax,%edx
		imul   $0x000084,%edx,%ecx
		mov    _0c1b04_data,%edx
		andb   $0x0000fb,0x000081(%ecx,%edx,1)

	_050ff0_jump:
		mov    %edi,%ecx
		mov    %eax,%edx
		cwtl   
		mov    (%ecx,%eax,2),%ax
		cmp    %dx,%ax
		jne    _050fbd_jump

	_050ffe_jump:
		cmp    %si,%ax
		jne    _050f8c_jump
		movswl %si,%ecx
		add    %ecx,%ecx
		lea    (%edi,%ecx,1),%ebp
		movswl %dx,%ecx
		mov    %ecx,(%esp)
		add    %ecx,%ecx
		lea    (%edi,%ecx,1),%eax
		mov    0x000000(%ebp),%cx
		mov    %cx,(%eax)
		cmp    %cx,%dx
		jne    _051037_jump
		imul   $0x000084,(%esp),%eax
		mov    _0c1b04_data,%edx
		movl   $0x000000,0x000020(%edx,%eax,1)

	_051037_jump:
		movswl %si,%eax
		lea    0x000000(,%eax,2),%edx
		lea    (%edi,%edx,1),%eax
		mov    (%eax),%dx
		mov    %dx,0x000052(%ebx)
		mov    %si,(%eax)
		movl   $0x000000,0x000020(%ebx)
		jmp    _050f8c_jump

	_05105a_jump:
		mov    %edi,_0c1b00_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05106c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0c1b00_data,%esi
		mov    %eax,%ebx
		mov    0x000034(%eax),%cx
		mov    %esi,%edx
		movswl %cx,%eax
		mov    (%edx,%eax,2),%ax
		cmp    %cx,%ax
		je     _05109d_jump

	_05108c_jump:
		mov    %eax,%ecx
		movswl %ax,%edx
		mov    %esi,%eax
		mov    (%eax,%edx,2),%ax
		cmp    0x000034(%ebx),%ax
		jne    _05108c_jump

	_05109d_jump:
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		lea    (%esi,%eax,1),%ebp
		movswl %cx,%eax
		lea    (%eax,%eax,1),%edi
		lea    (%esi,%edi,1),%edx
		mov    0x000000(%ebp),%di
		mov    %di,(%edx)
		cmp    %di,%cx
		jne    _0510d2_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		movl   $0x000000,0x000020(%edx,%eax,4)

	_0510d2_jump:
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		lea    (%esi,%eax,1),%edx
		mov    0x000034(%ebx),%ax
		mov    %ax,(%edx)
		movl   $0x000000,0x000020(%ebx)
		mov    %esi,_0c1b00_data
		pop    %ebp
		pop    %edi

	_0510f3_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0510f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c1b04_data,%edx
		mov    _0c1b08_data,%si
		xor    %ebx,%ebx
		test   %si,%si
		jle    _0510f3_jump
		jmp    _05112e_jump

	_051112_jump:
		movl   $0x000001,0x000020(%edx)
		jmp    _051122_jump

	_05111b_jump:
		movl   $0x000000,0x000020(%edx)

	_051122_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %si,%bx
		jge    _0510f3_jump

	_05112e_jump:
		mov    _0c1b00_data,%ecx
		movswl %bx,%eax
		cmp    (%ecx,%eax,2),%bx
		je     _05111b_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		shl    $0x000002,%eax
		mov    _092247_data(%eax),%cl
		test   $0x000040,%cl
		jne    _051162_jump
		test   $0x000020,%cl
		je     _051112_jump
		mov    %edx,%eax
		call   _050ef0_func
		test   %ax,%ax
		jne    _051112_jump

	_051162_jump:
		mov    %edx,%eax
		call   _05106c_func
		jmp    _051122_jump



_05116c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c32e4_data,%ah
		mov    _0c32e5_data,%dl
		mov    _0c1b9d_data,%bl
		xor    %cl,%cl
		and    $0x000048,%ah
		and    $0x000082,%dl
		and    $0x0000fe,%bl
		mov    %cl,_0c24ce_data
		mov    %ah,_0c32e4_data
		mov    %dl,_0c32e5_data
		mov    %bl,_0c1b9d_data
		mov    _0c32e6_data,%dh
		mov    $0x000002,%bh
		and    $0x0000fe,%dh
		mov    %bh,_0c24d1_data
		mov    %dh,_0c32e6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0511c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		xor    %ah,%ah
		mov    %ah,_0c25e2_data
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000006,%eax
		sete   %al
		xor    %ah,%ah
		xor    %edx,%edx
		inc    %eax
		mov    %dx,_0cd0c4_data
		mov    _0c32e5_data,%dl
		mov    %ax,_0c2580_data
		test   $0x000002,%dl
		je     _051218_jump
		mov    $0x000021,%ecx
		mov    _0c1b92_data,%al
		mov    $_0c1b1c_data,%edi
		mov    $_0c1ba0_data,%esi
		mov    %al,_0c1c16_data
		rep movsl %ds:(%esi),%es:(%edi)

	_051218_jump:
		mov    $0x000017,%esi
		mov    $0x000064,%edx
		mov    _0c1b9d_data,%al
		xor    %ebx,%ebx
		xor    %cl,%cl
		mov    %bx,_0c247c_data
		mov    %bx,_0c247e_data
		mov    %si,_0c1b7c_data
		mov    %bx,_0c1b52_data
		mov    %bx,_0c1b54_data
		mov    %bx,_0c1b5c_data
		mov    %bx,_0c1b5e_data
		mov    %edx,_0c1b44_data
		mov    %cl,_0c1b86_data
		mov    %cl,_0c1b87_data
		or     $0x00000c,%al
		mov    $0x00000a,%ebx
		mov    $0x000050,%dh
		mov    $0xffffffff,%ecx
		mov    %al,_0c1b9d_data
		mov    $0x000002,%ah
		mov    %ebx,_0c1b48_data
		mov    %dh,_0c1b84_data
		mov    %cx,_0c1b66_data
		mov    %ecx,%edi
		mov    %cx,_0c1b6e_data
		mov    $0x00004e,%bl
		mov    $0x000001,%ecx
		mov    %ah,_0c1b89_data
		mov    %ah,_0c1b88_data
		mov    %di,_0c1b72_data
		xor    %dh,%dh
		mov    %bl,_0c1b85_data
		mov    %ecx,_0c1b40_data
		mov    %dh,_0c1b99_data
		mov    %dh,_0c1b9b_data
		mov    %dh,_0c1ad0_data
		mov    %dh,_0c1ace_data
		mov    %dh,_0c256d_data
		mov    $0x000014,%bh
		mov    $0x000001,%cl
		xor    %dl,%dl
		mov    %bh,_0c1b90_data
		mov    %cl,_0c256c_data
		mov    %dh,_0c256e_data
		mov    %dh,_0c2573_data
		mov    %dh,_0c1aee_data
		mov    %al,%bh
		mov    $0xffff8300,%eax
		mov    %dh,_0cd0e9_data
		mov    %ax,_0c257c_data
		xor    %al,%al
		and    $0x0000bf,%bh
		xor    %ah,%ah
		mov    %bh,_0c1b9d_data
		mov    %ax,_0c2584_data
		jmp    _051346_jump

	_051331_jump:
		lea    0x000000(,%eax,2),%ebx
		mov    _0c1b44_data,%ax
		inc    %edx
		mov    %ax,_0c2586_data(%ebx)

	_051346_jump:
		movswl %dx,%eax
		cmp    $0x00000a,%eax
		jl     _051331_jump
		xor    %cl,%cl
		mov    (%esp),%al
		mov    %cl,_0c1ed2_data
		mov    %cl,_0c1ed4_data
		test   %al,%al
		je     _05136a_jump
		andb   $0x0000f7,_0c32e4_data

	_05136a_jump:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jne    _051384_jump
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _05139d_jump

	_051384_jump:
		cmpb   $0x000000,_0cdae8_data
		jne    _05139d_jump
		cmpb   $0x000000,_0c6940_data
		jne    _05139d_jump
		andb   $0x0000bf,_0c32e4_data

	_05139d_jump:
		mov    _0c32e6_data,%bh
		test   $0x000001,%bh
		je     _0513cc_jump
		mov    _0c32e5_data,%cl
		mov    %bh,%al
		and    $0x0000fd,%cl
		and    $0x000001,%al
		mov    %cl,_0c32e5_data
		add    %al,%al
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,_0c32e5_data
		call   _052c60_jump

	_0513cc_jump:
		andb   $0x0000e5,_0c32e5_data
		cmpb   $0x000000,_0c212c_data
		je     _051414_jump
		mov    _0c1f1c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _051414_jump
		mov    _0c32e5_data,%bl
		mov    _0c24f0_data,%eax
		and    $0x00009f,%bl
		sar    $0x000010,%eax
		mov    %bl,_0c32e5_data
		cmp    $0x000006,%eax
		jne    _051433_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _051433_jump
		jmp    _05142e_jump

	_051414_jump:
		mov    _0c32e5_data,%dl
		and    $0x00009f,%dl
		mov    %dl,_0c32e5_data
		mov    %dl,%dh
		or     $0x000020,%dh
		mov    %dh,_0c32e5_data

	_05142e_jump:
		call   _052988_func

	_051433_jump:
		mov    _0c1b04_data,%edx
		mov    _0c1b08_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _05145c_jump
		jmp    _051555_jump

	_05144c_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _051555_jump

	_05145c_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x000063,%ebx
		jne    _05144c_jump
		xor    %esi,%esi
		mov    %esi,_0c1b40_data
		mov    _0c1b9d_data,%bh
		mov    _0c1b40_data,%al
		and    $0x0000fb,%bh
		and    $0x000001,%al
		mov    %bh,%cl
		shl    $0x000002,%al
		mov    %bh,_0c1b9d_data
		or     %al,%cl
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		add    %ebx,%eax
		sub    $0x0000a0,%eax
		mov    %ax,_0c247c_data
		mov    0x00002c(%edx),%ax
		sub    $0x00000a,%eax
		mov    %ax,_0c247e_data
		xor    %eax,%eax
		mov    _095b0d_data,%al
		mov    %cl,_0c1b9d_data
		test   %eax,%eax
		jne    _0514c8_jump
		call   _054410_func
		jmp    _051523_jump

	_0514c8_jump:
		mov    _0c247c_data,%ax
		mov    _0c24f6_data,%cx
		cmp    %cx,%ax
		jl     _0514e1_jump
		mov    %cx,_0c247c_data

	_0514e1_jump:
		mov    _0c247e_data,%ax
		mov    _0c24f4_data,%si
		cmp    %si,%ax
		jl     _0514fa_jump
		mov    %si,_0c247e_data

	_0514fa_jump:
		mov    _0c247a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05150f_jump
		xor    %edi,%edi
		mov    %di,_0c247c_data

	_05150f_jump:
		mov    _0c247c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _051523_jump
		xor    %eax,%eax
		mov    %ax,_0c247e_data

	_051523_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%ebx
		mov    0x000068(%edx),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b84_data,%al
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%al
		mov    0x00002c(%edx),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b85_data,%al
		sub    %eax,%edx
		mov    %ebx,_0c1b44_data
		mov    %edx,_0c1b48_data

	_051555_jump:
		cmpb   $0x000000,_0c117e_data
		je     _05156a_jump
		mov    $_0c1b1c_data,%eax
		call   _01e494_func
		jmp    _05157a_jump

	_05156a_jump:
		xor    %eax,%eax

	_05156c_jump:
		inc    %eax
		xor    %dl,%dl
		mov    %dl,_0c1b7d_data(%eax)
		cmp    $0x000005,%eax
		jb     _05156c_jump

	_05157a_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051584_func:
		push   %edx
		and    $0x0000ff,%eax
		mov    _092204_data(%eax),%dl
		test   $0x000040,%dl
		je     _0515a1_jump
		test   $0x000008,%dl
		je     _0515a1_jump
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_0515a1_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_0515a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000007,%eax
		je     _051727_jump
		mov    _0c1b44_data,%si
		xor    %eax,%eax
		mov    _0c1b48_data,%dx
		mov    _0c1b84_data,%al
		xor    %ebx,%ebx
		add    %eax,%esi
		xor    %eax,%eax
		mov    _0c1b85_data,%bl
		mov    _0c1b7e_data,%al
		add    %edx,%ebx
		testb  $0x000040,_092204_data(%eax)
		je     _0515f3_jump
		sub    $0x000008,%ebx

	_0515f3_jump:
		mov    _0c1b5c_data,%ax
		add    %eax,%eax
		movswl %bx,%ecx
		add    %eax,%esi
		lea    -0x000008(%ecx),%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		movswl %ax,%ebx
		mov    %ebx,%eax
		call   _01e288_func
		mov    %al,0x00000c(%esp)
		lea    -0x000018(%ecx),%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _01e288_func
		mov    %al,(%esp)
		mov    %al,0x000004(%esp)
		lea    -0x000028(%ecx),%eax
		sar    $0x000004,%eax
		sub    $0x000038,%ecx
		movswl %ax,%edx
		mov    %ebx,%eax
		sar    $0x000004,%ecx
		call   _01e288_func
		mov    %al,0x000008(%esp)
		movswl %cx,%edx
		mov    %ebx,%eax
		call   _01e288_func
		mov    %al,%cl
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		mov    _092204_data(%eax),%dh
		xor    %ebx,%ebx
		test   $0x000010,%dh
		je     _051681_jump
		xor    %eax,%eax
		mov    (%esp),%al
		call   _051584_func
		test   %ax,%ax
		jne    _051681_jump
		mov    $0x000001,%ebx

	_051681_jump:
		test   %bx,%bx
		jne    _0516fa_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b28_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c1b88_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		jne    _0516fa_jump
		testb  $0x000002,_0c32e5_data
		jne    _0516fa_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		testb  $0x000010,_092204_data(%eax)
		je     _0516d8_jump
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		call   _051584_func
		test   %ax,%ax
		je     _0516f5_jump

	_0516d8_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		testb  $0x000010,_092204_data(%eax)
		je     _0516fa_jump
		xor    %eax,%eax
		mov    %cl,%al
		call   _051584_func
		test   %ax,%ax
		jne    _0516fa_jump

	_0516f5_jump:
		mov    $0x000001,%ebx

	_0516fa_jump:
		test   %bx,%bx
		je     _051727_jump
		xor    %ebx,%ebx
		mov    $0x000001,%eax
		mov    %bx,_0c1b5c_data
		mov    %bx,_0c2584_data
		mov    %bx,_0c1b64_data
		call   _065064_func
		xor    %eax,%eax
		call   _065064_func

	_051727_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051730_func:
		push   %edx
		push   %edi
		xor    %edx,%edx
		mov    %dx,_0c24c0_data
		mov    %dx,_0c24c2_data
		mov    %dx,_0c1b5c_data
		mov    %dx,_0c1b5e_data
		call   _040b24_func
		test   %ax,%ax
		je     _051773_jump
		xor    %eax,%eax
		mov    _0c1b5c_data,%dx
		mov    _0c2582_data,%al
		add    %eax,%edx
		mov    %dx,_0c1b5c_data
		jmp    _051794_jump

	_051773_jump:
		call   _040ab0_func
		test   %ax,%ax
		je     _051794_jump
		xor    %eax,%eax
		mov    _0c1b5c_data,%di
		mov    _0c2582_data,%al
		sub    %eax,%edi
		mov    %di,_0c1b5c_data

	_051794_jump:
		call   _040b98_func
		test   %ax,%ax
		je     _0517b5_jump
		xor    %eax,%eax
		mov    _0c2582_data,%al
		mov    %eax,%edx
		mov    _0c1b5c_data,%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		jmp    _0517d3_jump

	_0517b5_jump:
		call   _040c0c_func
		test   %ax,%ax
		je     _0517d9_jump
		xor    %edx,%edx
		mov    _0c1b5c_data,%eax
		mov    _0c2582_data,%dl
		sar    $0x000010,%eax
		sar    %edx
		sub    %edx,%eax

	_0517d3_jump:
		mov    %ax,_0c1b5e_data

	_0517d9_jump:
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0517ec_jump
		call   _050720_func
		jmp    _0517f3_jump

	_0517ec_jump:
		jge    _0517f3_jump
		call   _050644_func

	_0517f3_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _051806_jump
		call   _050d28_func
		jmp    _05180d_jump

	_051806_jump:
		jle    _05180d_jump
		call   _050ca4_func

	_05180d_jump:
		mov    $_0c1b1c_data,%eax
		call   _01dcec_func
		mov    _0c1b5c_data,%ax
		mov    %ax,_0c24c0_data
		mov    _0c1b5e_data,%ax
		mov    %ax,_0c24c2_data
		call   _02e338_func
		pop    %edi
		pop    %edx
		ret    

_051838_switch:
		.long   _0518f6_case
		.long   _051921_case
		.long   _051950_case
		.long   _051971_case




_051848_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0c1b44_data,%di
		mov    _0c1b48_data,%ax
		mov    _0c24f8_data,%cx
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %ax,(%esp)
		mov    %dx,_0c1af8_data
		mov    $0xffffffff,%edx
		test   %cx,%cx
		jg     _051894_jump
		jmp    _0518be_jump

	_051883_jump:
		mov    _0c24f8_data,%si
		inc    %ebx
		cmp    %si,%bx
		jge    _0518be_jump

	_051894_jump:
		movswl %bx,%eax
		mov    _0c24f8_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%esi
		add    %esi,%eax
		xor    %ecx,%ecx
		mov    0x000060(%eax),%cx
		cmp    $0x000040,%ecx
		je     _051a13_jump

	_0518be_jump:
		mov    _0c1af6_data,%eax
		sar    $0x000010,%eax
		mov    $0x000001,%bl
		test   %eax,%eax
		jg     _0518d3_jump
		decw   _0c1af8_data

	_0518d3_jump:
		test   %bl,%bl
		je     _051a81_jump
		mov    _0c1af6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _051a2d_jump
		mov    _0c1af8_data,%ax
		jmp    _051a39_jump

	_0518f6_case:
		movswl %di,%ecx
		cmp    0x000028(%eax),%ecx
		jl     _051883_jump
		mov    0x00003a(%eax),%ecx
		mov    _0c1af8_data,%si
		sar    $0x000010,%ecx
		inc    %esi
		sub    $0x0000c8,%ecx
		mov    %si,_0c1af8_data
		mov    %ecx,0x000028(%eax)
		jmp    _051883_jump

	_051921_case:
		movswl %di,%ecx
		cmp    0x000028(%eax),%ecx
		jl     _051883_jump
		mov    0x00003a(%eax),%ecx
		mov    _0c1af8_data,%si
		sar    $0x000010,%ecx
		dec    %esi
		sub    $0x0000c8,%ecx
		mov    %si,_0c1af8_data
		mov    %ecx,0x000028(%eax)
		jmp    _051883_jump

	_051950_case:
		mov    -0x000002(%esp),%ecx
		mov    0x00002c(%eax),%ebp
		sar    $0x000010,%ecx
		cmp    %ebp,%ecx
		jl     _051965_jump
		neg    %edx
		jmp    _051883_jump

	_051965_jump:
		movl   $0x002710,0x00002c(%eax)
		jmp    _051883_jump

	_051971_case:
		mov    _0c2560_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _0519a2_jump
		imul   $0x000084,%ecx,%ecx
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    0x000076(%esi),%cl
		test   %ecx,%ecx
		jne    _051883_jump
		mov    0x00004e(%esi),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jne    _051883_jump

	_0519a2_jump:
		mov    -0x000002(%esp),%ecx
		mov    0x00002c(%eax),%esi
		sar    $0x000010,%ecx
		cmp    %esi,%ecx
		jl     _0519d7_jump
		movswl %dx,%eax
		mov    %dx,_0c1afa_data
		test   %eax,%eax
		jge    _0519c0_jump
		neg    %eax

	_0519c0_jump:
		mov    _0c1afa_data,%dx
		cmp    $0x000001,%eax
		jne    _0519d3_jump
		mov    $0x000002,%edx
		jmp    _0519de_jump

	_0519d3_jump:
		neg    %edx
		jmp    _0519de_jump

	_0519d7_jump:
		movl   $0x002710,0x00002c(%eax)

	_0519de_jump:
		mov    _0c2560_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _051883_jump
		movswl %dx,%ecx
		cmp    $0x000002,%ecx
		je     _051883_jump
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%ecx
		movw   $0x000002,0x000056(%ecx,%eax,1)
		jmp    _051883_jump

	_051a13_jump:
		mov    0x000076(%eax),%cl
		cmp    $0x000003,%cl
		ja     _051883_jump
		and    $0x0000ff,%ecx
		jmp    *%cs:_051838_switch(,%ecx,4)

	_051a2d_jump:
		cmp    $0xffffffff,%eax
		jge    _051a3f_jump
		mov    _0c1af8_data,%ax
		inc    %eax

	_051a39_jump:
		mov    %ax,_0c24c0_data

	_051a3f_jump:
		movswl %dx,%eax
		cmp    $0x000001,%eax
		jne    _051a52_jump
		movw   $0x00ffff,_0c24c2_data
		jmp    _051a81_jump

	_051a52_jump:
		cmp    $0x000002,%eax
		jne    _051a74_jump
		mov    _0c249a_data,%ah
		test   %ah,%ah
		je     _051a6c_jump
		movw   $0x00ffff,_0c24c2_data
		jmp    _051a74_jump

	_051a6c_jump:
		xor    %al,%al
		mov    %ax,_0c24c2_data

	_051a74_jump:
		movswl %dx,%eax
		cmp    $0xfffffffe,%eax
		jne    _051a81_jump
		mov    $0xffffffff,%edx

	_051a81_jump:
		mov    %dx,_0c1afa_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051a94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    _0c1b04_data,%eax
		mov    _0c1b08_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _051ac4_jump

	_051ab2_jump:
		add    $0x000084,%eax
		inc    %edx
		movl   $0x000000,-0x000068(%eax)
		cmp    %bx,%dx
		jl     _051ab2_jump

	_051ac4_jump:
		xor    %ecx,%ecx
		xor    %esi,%esi
		jmp    _051ade_jump

	_051aca_jump:
		add    $0x000002,%eax
		inc    %edx
		mov    %si,-0x000002(%eax)

	_051ad2_jump:
		movswl %dx,%ebx
		cmp    $0x000140,%ebx
		jl     _051aca_jump
		inc    %ecx

	_051ade_jump:
		movswl %cx,%eax
		cmp    $0x000008,%eax
		jge    _051afc_jump
		imul   $0x000282,%eax,%eax
		mov    %esi,%edx
		mov    %si,_0c571e_data(%eax)
		add    $_0c549e_data,%eax
		jmp    _051ad2_jump

	_051afc_jump:
		call   _053250_func
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _051b25_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jne    _051b25_jump
		mov    $0x00000b,%eax
		call   _053d6c_jump

	_051b25_jump:
		xor    %ah,%ah
		xor    %dl,%dl
		xor    %ebx,%ebx
		mov    %ah,_0c25b1_data
		mov    %ah,_0cd0df_data
		mov    %ah,_0c5185_data
		mov    %bx,_0c1370_data
		mov    %bx,_0c1372_data
		mov    %bx,_0c1374_data
		mov    %ah,_0c1376_data
		mov    _0c32ed_data,%al
		xor    %dh,%dh
		shl    $0x000005,%al
		mov    %dx,_0c5190_data
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,_0cd0c0_data
		mov    _0c24f0_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    %edx,_0c136c_data
		cmp    $0x000005,%eax
		jne    _051bb3_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jne    _051bb3_jump
		mov    $0x000020,%edi
		mov    $0x000138,%eax
		mov    %di,_0c24b6_data
		mov    %ax,_0c25a0_data
		mov    %ax,_0c24f4_data

	_051bb3_jump:
		xor    %bh,%bh
		mov    $0xfffffffe,%ecx
		mov    %bh,_0c6964_data
		mov    %ecx,_0c4738_data
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %ebx,_0c4734_data
		call   _04c6e0_func
		mov    $0xffffffff,%ebx
		mov    %cx,_0c245a_data
		mov    %cx,_0c247c_data
		xor    %eax,%eax
		mov    %cx,_0c247e_data
		mov    _095b0d_data,%al
		mov    %bx,_0c1b50_data
		mov    %bx,_0c2392_data
		test   %eax,%eax
		jne    _051c12_jump
		call   _05436c_func
		jmp    _051c8c_jump

	_051c12_jump:
		mov    _0c24b6_data,%ax
		shl    $0x000004,%eax
		sub    $0x0000c8,%eax
		mov    %ax,_0c24f4_data
		mov    _0c24b4_data,%ax
		shl    $0x000004,%eax
		sub    $0x000131,%eax
		mov    %ax,_0c24f6_data
		mov    _0c24f4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _051c4f_jump
		mov    %cx,_0c24f6_data

	_051c4f_jump:
		mov    _0c24f2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _051c64_jump
		xor    %ebx,%ebx
		mov    %bx,_0c24f4_data

	_051c64_jump:
		xor    %ecx,%ecx
		mov    _0c24f6_data,%ax
		mov    %cx,_0c259a_data
		mov    %ax,_0c259c_data
		mov    _0c24f4_data,%ax
		mov    %cx,_0c259e_data
		mov    %ax,_0c25a0_data

	_051c8c_jump:
		mov    $0xffffffff,%ebx
		mov    _0c2565_data,%dh
		xor    %edi,%edi
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    %di,_0c24c2_data
		mov    %di,_0c24c0_data
		mov    %di,_0c131c_data
		mov    %di,_0c131a_data
		mov    %di,_0c24c4_data
		mov    %di,_0c2584_data
		mov    %di,_0c2568_data
		mov    %di,_0c256a_data
		mov    %di,_0c25c4_data
		xor    %al,%cl
		mov    %bx,_0c24d4_data
		mov    %cl,_0c2564_data
		xor    %ah,%ch
		xor    %al,%al
		mov    %ch,_0c25ca_data
		mov    %al,_0c2570_data
		mov    %al,_0c2571_data
		mov    %al,_0c1ae4_data
		test   %dh,%dh
		jne    _051d0f_jump
		movb   $0x000040,_0c24d2_data

	_051d0f_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		call   _0511c0_func
		cmpw   $0x000000,_0c518e_data
		jne    _051d4c_jump
		cmpw   $0x000000,_0c2488_data
		je     _051d4c_jump
		cmpb   $0x000000,_0c2131_data
		je     _051d4c_jump
		mov    $_0c1ed8_data,%eax
		mov    _0c24ce_data,%dl
		call   _06c7bc_func
		mov    %dl,_0c24ce_data

	_051d4c_jump:
		cmpw   $0x000000,_0c2488_data
		jne    _051dde_jump
		mov    $0x000001,%esi
		mov    _0c2390_data,%al
		mov    _0c1b9d_data,%cl
		mov    %al,_0c2131_data
		mov    %esi,_0c1b40_data
		and    $0x0000fb,%cl
		mov    _0c1b40_data,%al
		mov    %cl,_0c1b9d_data
		and    $0x000001,%al
		mov    %cl,%ch
		shl    $0x000002,%al
		or     %al,%ch
		mov    _0c2488_data,%eax
		sar    $0x000010,%eax
		mov    %eax,_0c1b44_data
		mov    _0c248a_data,%eax
		sar    $0x000010,%eax
		mov    %eax,_0c1b48_data
		mov    _0c2478_data,%al
		inc    %al
		mov    %al,_0c247a_data
		xor    %eax,%eax
		mov    _0c2478_data,%al
		mov    %ch,_0c1b9d_data
		call   _03bbfc_func
		mov    _0c2484_data,%ax
		mov    %ax,_0c247c_data
		mov    _0c2486_data,%ax
		mov    %ax,_0c247e_data
		jmp    _051de5_jump

	_051dde_jump:
		xor    %al,%al
		mov    %al,_0c518c_data

	_051de5_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		call   _056b84_func
		call   _0510f8_func
		call   _050e7c_func
		call   _057bf0_func
		mov    _0c25ec_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _051e2a_jump
		mov    _0c25ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _051e2a_jump
		testb  $0x000002,_0c32ed_data
		je     _051e2a_jump
		orb    $0x000004,_0c32e5_data
		jmp    _051e31_jump

	_051e2a_jump:
		andb   $0x0000fb,_0c32e5_data

	_051e31_jump:
		testb  $0x000004,_0c32e5_data
		je     _051e3f_jump
		call   _046b98_func

	_051e3f_jump:
		call   _04fffc_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051e50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _04c73c_func
		call   _023e00_func
		call   _01f51c_func
		call   _025014_func
		mov    $0x000001,%edx
		mov    $0x000003,%ecx
		mov    $0x000002,%ah
		mov    $0xffffffff,%edi
		xor    %bl,%bl
		mov    %dx,_0c24ec_data
		mov    %edx,%esi
		mov    %dx,_0c24ee_data
		mov    %cx,_0c24c8_data
		mov    %ah,_0c1b92_data
		mov    %bl,_0c25e2_data
		mov    $0x000001,%dl
		mov    $0x0000a0,%eax
		mov    %si,_0c2488_data
		xor    %bh,%bh
		mov    %dl,_0c1ed0_data
		mov    $0x000005,%dh
		xor    %cl,%cl
		mov    %dh,_0cd0d4_data
		mov    $0x0000aa,%edx
		mov    %bl,_0cd0de_data
		call   _01d1ec_func
		call   _05116c_func
		mov    $0x000005,%eax
		mov    %di,_0c1af8_data
		mov    %di,_0c1afa_data
		mov    %bx,_0c2490_data
		xor    %edx,%edx
		mov    %cl,_0c2566_data
		mov    %dx,_0c248e_data
		call   _064360_func
		movswl %ax,%edx
		add    %edx,%edx
		mov    _095aee_data(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ax,_0cdaf0_data
		cmp    $0x000005,%ebx
		jne    _051f48_jump
		mov    _095afa_data(%edx),%edx
		sar    $0x000010,%edx
		cmp    $0x00000a,%edx
		jne    _051f48_jump
		add    %esi,%eax
		mov    %ax,_0cdaf0_data
		mov    _0cdaee_data,%edx
		sar    $0x000010,%edx
		cmp    $0x000006,%edx
		jne    _051f48_jump
		xor    %ch,%ch
		mov    %cx,_0cdaf0_data

	_051f48_jump:
		mov    $0x000001,%ch
		mov    $0xfffffffe,%edx
		xor    %ah,%ah
		xor    %esi,%esi
		mov    %ch,_0cd0d8_data
		mov    %ch,_0cd0d9_data
		mov    %edx,_0c4738_data
		mov    %ah,_0c1180_data
		mov    %ah,_0cd0e8_data
		mov    %si,_0cdaf2_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051f80_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    %dx,_0c24ee_data
		mov    %bx,_0c24ec_data
		pop    %edx
		pop    %ebx
		ret    



_051f9c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0ce50c_data,%eax
		mov    %eax,_0ce52c_data
		mov    _0ce510_data,%eax
		mov    %eax,_0ce530_data
		mov    _0ce504_data,%eax
		mov    %eax,_0ce524_data
		mov    _0ce508_data,%eax
		mov    %eax,_0ce528_data
		cmpb   $0x000000,_0c2565_data
		jne    _05207b_jump
		xor    %ebx,%ebx
		mov    %bx,_0c51a2_data
		call   _023c70_func
		cwtl   
		cmp    $0xfffffffe,%eax
		setne  %al
		xor    %ah,%ah
		mov    %ax,_0c518e_data
		test   %ax,%ax
		jne    _052008_jump
		mov    _0c2486_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _052008_jump
		call   _06c560_func

	_052008_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _051a94_func
		cmpw   $0x000000,_0c518e_data
		jne    _052033_jump
		mov    _0c2486_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _052033_jump
		mov    $_0c1ed8_data,%edx
		xor    %eax,%eax
		call   _06c56c_func

	_052033_jump:
		cmpw   $0x000000,_0c2488_data
		jne    _05204d_jump
		movw   $0x000001,_0c2488_data
		call   _01cdc0_func
		jmp    _052055_jump

	_05204d_jump:
		xor    %dl,%dl
		mov    %dl,_0c518c_data

	_052055_jump:
		call   _050f60_func
		mov    $0x000001,%edx
		xor    %eax,%eax
		mov    %dx,_0c2580_data
		mov    $0x000010,%dh
		mov    %ax,_0c24ec_data
		mov    %dh,_0c2582_data
		call   _04fad8_func

	_05207b_jump:
		pop    %edx
		pop    %ebx
		ret    



_052080_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    _0c1b04_data,%esi
		xor    %edx,%edx
		mov    _0c1b08_data,%ax
		mov    %edx,(%esp)
		mov    %eax,0x000004(%esp)
		test   %ax,%ax
		jle    _05218e_jump
		jmp    _05211e_jump

	_0520ab_jump:
		mov    0x000034(%esi),%dx
		movswl %dx,%ebx
		mov    _0c1f20_data(,%ebx,2),%ax
		cmp    %ax,%dx
		je     _052108_jump

	_0520bf_jump:
		movswl %dx,%ecx
		imul   $0x000084,%ecx,%ebx
		mov    _0c1b00_data,%edi
		mov    _0c1f20_data(,%ecx,2),%ax
		mov    %ax,(%edi,%ecx,2)
		cmp    %ax,%dx
		je     _0520ef_jump
		mov    _0c1b04_data,%ecx
		movl   $0x000001,0x000020(%ecx,%ebx,1)
		jmp    _0520fd_jump

	_0520ef_jump:
		mov    _0c1b04_data,%ecx
		movl   $0x000000,0x000020(%ecx,%ebx,1)

	_0520fd_jump:
		mov    0x000034(%esi),%bx
		mov    %eax,%edx
		cmp    %bx,%ax
		jne    _0520bf_jump

	_052108_jump:
		mov    (%esp),%ecx
		mov    0x000004(%esp),%edi
		inc    %ecx
		add    $0x000084,%esi
		mov    %ecx,(%esp)
		cmp    %di,%cx
		jge    _05218e_jump

	_05211e_jump:
		xor    %ebx,%ebx
		mov    0x000060(%esi),%bx
		cmp    $0x0000a4,%ebx
		jne    _052108_jump
		testb  $0x000004,0x000081(%esi)
		je     _0520ab_jump
		mov    0x000052(%esi),%ax

	_05213d_jump:
		movswl %ax,%ebx
		lea    0x000000(,%ebx,2),%ecx
		mov    _0c1b00_data,%ebx
		mov    %eax,%edx
		mov    (%ecx,%ebx,1),%ax
		cmp    0x000052(%esi),%ax
		jne    _05213d_jump
		mov    0x000032(%esi),%ecx
		sar    $0x000010,%ecx
		mov    %ax,(%ebx,%ecx,2)
		movswl %dx,%ecx
		mov    0x000034(%esi),%ax
		mov    %ax,(%ebx,%ecx,2)
		imul   $0x000084,%ecx,%ebx
		mov    _0c1b04_data,%ecx
		movl   $0x000001,0x000020(%esi)
		movl   $0x000001,0x000020(%ecx,%ebx,1)
		jmp    _052108_jump

	_05218e_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052198_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _052080_func
		cmpw   $0x000000,_0c518e_data
		jne    _0521ce_jump
		mov    _0c2486_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _0521ce_jump
		xor    %eax,%eax
		mov    _0c24f0_data,%al
		call   _058e40_func
		cwtl   
		test   %eax,%eax
		jne    _0521ce_jump
		call   _06c560_func

	_0521ce_jump:
		mov    _0c24da_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _052250_jump
		cmpw   $0x000000,_0c24ec_data
		jne    _0521ef_jump
		cmpw   $0x000000,_0c24ee_data
		je     _052250_jump

	_0521ef_jump:
		mov    $0x000021,%ecx
		mov    $_0c1c24_data,%edi
		mov    $_0c1b1c_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0c1b1c_data,%edi
		mov    $_0c1ba0_data,%esi
		mov    $0x000001,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		call   _0511c0_func
		mov    _0c1c9a_data,%al
		mov    %al,_0c1b92_data
		mov    _0c1c9b_data,%al
		xor    %ebx,%ebx
		mov    %al,_0c1b93_data
		mov    _0c1c9d_data,%al
		xor    %edx,%edx
		mov    %al,_0c1b95_data
		mov    $_0c1b1c_data,%eax
		xor    %esi,%esi
		call   _01d4a8_func
		mov    %si,_0c2580_data

	_052250_jump:
		cmpb   $0x000000,_0c256f_data
		je     _05225e_jump
		call   _01f540_func

	_05225e_jump:
		mov    _0c255e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _052273_jump
		xor    %dl,%dl
		mov    %dl,_0c6941_data

	_052273_jump:
		mov    $_0c6b14_data,%eax
		call   _077830_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052284_func:
		push   %edx
		xor    %eax,%eax
		mov    _0c24d2_data,%al
		test   %eax,%eax
		jne    _0522a1_jump
		call   _052080_func
		xor    %eax,%eax
		call   _051a94_func
		call   _050f60_func

	_0522a1_jump:
		cmpw   $0x000000,_0c518e_data
		jne    _0522cb_jump
		mov    _0c2486_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _0522cb_jump
		mov    $_0c2134_data,%edx
		xor    %eax,%eax
		call   _06c56c_func
		xor    %ah,%ah
		mov    %ah,_0c1180_data

	_0522cb_jump:
		pop    %edx
		ret    



_0522d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0c1afc_data
		je     _052390_jump
		mov    _0c24da_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _052375_jump
		mov    $0x000021,%ecx
		mov    $_0c1ba0_data,%edi
		mov    $_0c1b1c_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,%esi
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %esi,%eax
		mov    _0c1b04_data,%esi
		shl    $0x000002,%eax
		mov    $_0c1b1c_data,%edi
		add    %eax,%esi
		mov    $0x000001,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		call   _0511c0_func
		mov    _0c1c16_data,%al
		mov    %al,_0c1b92_data
		mov    _0c1c17_data,%al
		mov    $0x000006,%edx
		mov    %al,_0c1b93_data
		mov    _0c1c19_data,%al
		xor    %ebx,%ebx
		mov    %al,_0c1b95_data
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		mov    $0x000002,%edx
		xor    %bl,%bl
		mov    %dx,_0c2580_data
		mov    %bl,_0c1afc_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_052375_jump:
		cmpb   $0x000000,_0c9474_data
		je     _052390_jump
		mov    $0x000001,%eax
		xor    %dh,%dh
		call   _0511c0_func
		mov    %dh,_0c1afc_data

	_052390_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052398_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cdae8_data
		je     _0523f8_jump
		mov    $0x000201,%edx
		sub    %eax,%eax
		in     (%dx),%al
		test   $0x000010,%al
		je     _0523c9_jump
		test   $0x000020,%al
		je     _0523c9_jump
		test   $0x000040,%al
		je     _0523c9_jump
		test   $0x000080,%al
		je     _0523c9_jump
		xor    %eax,%eax
		mov    _0cdae8_data,%al
		cmp    $0x000003,%eax
		jne    _0523f8_jump

	_0523c9_jump:
		movb   $0x000002,_0cdae8_data
		mov    $0x000001,%edx
		mov    $0x000001,%eax
		mov    %dx,_0c24ee_data
		call   _040a7c_func
		test   %al,%al
		je     _0523f8_jump
		mov    $0x000001,%dh
		mov    %dh,_0c2566_data
		mov    %dh,_0c2565_data

	_0523f8_jump:
		call   _04c6f4_func
		call   _023c98_func
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    %ax,_0c1af0_data
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		mov    %ax,_0c1af2_data
		mov    _0c247c_data,%ax
		mov    %ax,_0c2480_data
		mov    _0c247e_data,%ax
		mov    %ax,_0c2482_data
		xor    %eax,%eax
		mov    _095b0c_data,%al
		cmp    $0x000001,%eax
		jne    _052475_jump
		xor    %eax,%eax
		mov    _0c247c_data,%dx
		mov    _0c1b84_data,%al
		add    $0x000140,%edx
		sub    %eax,%edx
		sub    $0x000024,%edx
		mov    %dx,_0ce570_data
		mov    _0c247c_data,%dx
		add    $0x000014,%edx
		sub    %eax,%edx
		mov    %dx,_0ce572_data
		jmp    _0524b3_jump

	_052475_jump:
		mov    _0c247c_data,%ax
		xor    %edx,%edx
		mov    _0ce510_data,%bx
		mov    _0c1b84_data,%dl
		add    %ebx,%eax
		sub    %edx,%eax
		sub    $0x000024,%eax
		mov    _0ce50c_data,%cx
		mov    %ax,_0ce570_data
		mov    _0c247c_data,%ax
		add    %ecx,%eax
		add    $0x000014,%eax
		sub    %edx,%eax
		mov    %ax,_0ce572_data

	_0524b3_jump:
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0524da_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0dbc12_data,%al
		mov    %al,0x00007e(%edx)

	_0524da_jump:
		testb  $0x000004,_0c32e5_data
		je     _0524e8_jump
		call   _046c70_func

	_0524e8_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _052503_jump
		mov    _0c256a_data,%ax
		mov    %ax,_0c2568_data
		jmp    _05250c_jump

	_052503_jump:
		xor    %esi,%esi
		mov    %si,_0c2568_data

	_05250c_jump:
		call   _04fffc_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_052518_switch:
		.long   _05257c_case
		.long   _052583_case
		.long   _0525a7_case
		.long   _0525a7_case
		.long   _0525ae_case




_05252c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _023d98_func
		call   _024064_func
		call   _04ff80_func
		testb  $0x000004,_0c1b9d_data
		je     _052826_jump
		xor    %eax,%eax
		mov    _0c24d2_data,%al
		cmp    $0x000040,%eax
		je     _052562_jump
		movw   $0x00ffff,_0c1b66_data

	_052562_jump:
		mov    _0c2580_data,%ax
		dec    %eax
		cmp    $0x000004,%ax
		ja     _0525b5_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_052518_switch(,%eax,4)

	_05257c_case:
		call   _069dc4_func
		jmp    _0525ba_jump

	_052583_case:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000006,%eax
		je     _0525a0_jump
		mov    $0x000006,%edx
		mov    $_0c1b1c_data,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func

	_0525a0_jump:
		call   _069a7c_func
		jmp    _0525ba_jump

	_0525a7_case:
		call   _069434_func
		jmp    _0525ba_jump

	_0525ae_case:
		call   _027d64_func
		jmp    _0525ba_jump

	_0525b5_jump:
		call   _051730_func

	_0525ba_jump:
		mov    _0c24f6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0525d9_jump
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0525d9_jump
		call   _051848_func
		jmp    _0525ec_jump

	_0525d9_jump:
		mov    $0xffffffff,%ecx
		mov    %cx,_0c1af8_data
		mov    %cx,_0c1afa_data

	_0525ec_jump:
		call   _050168_func
		mov    $_0c1b1c_data,%eax
		call   _01dcec_func
		mov    _0c1af8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _052620_jump
		mov    _0c24c0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000ff,%eax
		jne    _052620_jump
		xor    %edi,%edi
		mov    %di,_0c24c2_data

	_052620_jump:
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _052631_jump
		call   _0507cc_func

	_052631_jump:
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _0527d1_jump
		mov    _0c1af6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05268d_jump
		mov    _0c1b5c_data,%ax
		mov    %ax,_0c1af8_data
		mov    _0c24c0_data,%ax
		mov    %ax,_0c1b5c_data
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _05267a_jump
		call   _050ca4_func
		jmp    _052681_jump

	_05267a_jump:
		jge    _052681_jump
		call   _050d28_func

	_052681_jump:
		mov    _0c1af8_data,%ax
		mov    %ax,_0c1b5c_data

	_05268d_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000e,%eax
		je     _0527aa_jump
		cmp    $0x000001,%al
		jb     _052796_jump
		jbe    _0526f2_jump
		cmp    $0x000005,%al
		je     _05276d_jump
		jmp    _05279e_jump

	_0526b4_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0526c2_jump
		neg    %eax

	_0526c2_jump:
		cmp    $0x000001,%eax
		jg     _0526de_jump
		mov    _0c24be_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0526d5_jump
		neg    %eax

	_0526d5_jump:
		cmp    $0x000001,%eax
		jle    _05279e_jump

	_0526de_jump:
		mov    $0x000006,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		jmp    _05279e_jump

	_0526f2_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _052700_jump
		neg    %eax

	_052700_jump:
		cmp    $0x000001,%eax
		jg     _05272c_jump
		mov    _0c24be_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _052713_jump
		neg    %eax

	_052713_jump:
		cmp    $0x000001,%eax
		jg     _05272c_jump
		mov    $0x000007,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		jmp    _05279e_jump

	_05272c_jump:
		mov    _0c24be_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05273a_jump
		neg    %eax

	_05273a_jump:
		cmp    $0x000004,%eax
		jle    _05279e_jump
		mov    _0c24f4_data,%eax
		mov    _0c247a_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    $0x000064,%eax
		cmp    %eax,%edx
		jge    _05279e_jump
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		call   _01ccfc_func
		jmp    _05279e_jump

	_05276d_jump:
		mov    _0c24be_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05277b_jump
		neg    %eax

	_05277b_jump:
		cmp    $0x000004,%eax
		jg     _05279e_jump
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		call   _01ccfc_func
		jmp    _05279e_jump

	_052796_jump:
		test   %al,%al
		je     _0526b4_jump

	_05279e_jump:
		mov    _0c247c_data,%ax
		mov    %ax,_0c259a_data

	_0527aa_jump:
		mov    _0c24be_data,%edx
		mov    _0c1ec0_data,%eax
		sar    $0x000010,%edx
		mov    0x000028(%eax),%ebx
		add    %edx,%ebx
		mov    _0c24c0_data,%edx
		mov    0x00002c(%eax),%ecx
		sar    $0x000010,%edx
		mov    %ebx,0x000028(%eax)
		add    %edx,%ecx
		mov    %ecx,0x00002c(%eax)

	_0527d1_jump:
		mov    $_0c24c2_data,%edx
		mov    $_0c24c0_data,%eax
		call   _04cfec_func
		call   _04fad8_func
		call   _0501c4_func
		mov    _0c1b64_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _052850_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x00007e(%eax),%dl
		mov    %dl,_0dbc12_data
		xor    %edx,%edx
		mov    _0dbc12_data,%dl
		cmp    $0x000003,%edx
		jle    _052850_jump
		movb   $0x000003,0x00007e(%eax)
		jmp    _052850_jump

	_052826_jump:
		mov    $0xffffffff,%edx
		call   _050168_func
		mov    %dx,_0c1afa_data
		call   _04fad8_func
		mov    _0c24d2_data,%dl
		test   %dl,%dl
		je     _052850_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0c24d2_data

	_052850_jump:
		call   _050da8_func
		cmpw   $0x000000,_0c51a2_data
		je     _05288c_jump
		mov    _0c2480_data,%ecx
		mov    _0c247e_data,%ebx
		mov    _0c247c_data,%edx
		mov    _0c247a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _053430_func
		call   _053b80_func

	_05288c_jump:
		call   _07370c_func
		testb  $0x000002,_0c32e5_data
		je     _052981_jump
		xor    %eax,%eax
		call   _01d2dc_func
		testb  $0x000001,_0c32e6_data
		je     _0528ce_jump
		mov    _0c1b70_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0528e3_jump
		mov    _0c1b74_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000100,%eax
		je     _0528ce_jump
		test   %eax,%eax
		jne    _0528e3_jump

	_0528ce_jump:
		mov    $0x000100,%edx
		mov    $0x0000c8,%al
		mov    %dx,_0c1b76_data
		mov    %al,_0c117f_data
		jmp    _052927_jump

	_0528e3_jump:
		testb  $0x000001,_0c32e6_data
		je     _052927_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000005,%eax
		je     _052927_jump
		xor    %eax,%eax
		mov    _0c117f_data,%al
		test   %eax,%eax
		jne    _05291d_jump
		mov    _0c1b74_data,%ebx
		sar    $0x000010,%ebx
		sub    $0x000005,%ebx
		cmp    %ebx,%eax
		jge    _052915_jump
		mov    %ebx,%eax

	_052915_jump:
		mov    %ax,_0c1b76_data
		jmp    _052927_jump

	_05291d_jump:
		mov    %al,%ch
		dec    %ch
		mov    %ch,_0c117f_data

	_052927_jump:
		testb  $0x000008,_0c1b9d_data
		je     _052958_jump
		xor    %eax,%eax
		mov    _0c1b54_data,%si
		mov    _0c1b85_data,%al
		add    %esi,%eax
		xor    %ebx,%ebx
		movswl %ax,%edx
		mov    _0c1b52_data,%ax
		mov    _0c1b84_data,%bl
		sub    $0x000008,%eax
		add    %ebx,%eax
		jmp    _05297b_jump

	_052958_jump:
		xor    %eax,%eax
		mov    _0c1b54_data,%bx
		mov    _0c1b85_data,%al
		add    %ebx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0c1b52_data,%cx
		mov    _0c1b84_data,%al
		add    %ecx,%eax

	_05297b_jump:
		cwtl   
		call   _01d1ec_func

	_052981_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052988_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1eb8_data,%edx
		mov    _0c1ebc_data,%ebx
		mov    _0c32e5_data,%al
		and    $0x00009f,%al
		testb  $0x000060,_0c32e5_data
		jne    _0529eb_jump
		mov    %al,_0c32e5_data
		or     $0x000020,%al
		mov    %al,_0c32e5_data
		test   %ebx,%ebx
		je     _0529d1_jump
		movl   $0x000001,0x000024(%ebx)
		mov    0x000081(%ebx),%cl
		movb   $0x000003,0x00007e(%ebx)
		or     $0x000004,%cl
		mov    %cl,0x000081(%ebx)

	_0529d1_jump:
		test   %edx,%edx
		je     _052a2c_jump
		movl   $0x000001,0x000024(%edx)
		mov    0x000081(%edx),%ch
		movb   $0x000001,0x00007e(%edx)
		or     $0x000004,%ch
		jmp    _052a26_jump

	_0529eb_jump:
		mov    %al,_0c32e5_data
		test   %ebx,%ebx
		je     _052a0e_jump
		movl   $0x000000,0x000024(%ebx)
		mov    0x000081(%ebx),%cl
		movb   $0x000003,0x00007e(%ebx)
		and    $0x0000fb,%cl
		mov    %cl,0x000081(%ebx)

	_052a0e_jump:
		test   %edx,%edx
		je     _052a2c_jump
		movl   $0x000000,0x000024(%edx)
		mov    0x000081(%edx),%ch
		movb   $0x000003,0x00007e(%edx)
		and    $0x0000fb,%ch

	_052a26_jump:
		mov    %ch,0x000081(%edx)

	_052a2c_jump:
		mov    %ebx,_0c1ebc_data
		mov    %edx,_0c1eb8_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052a3c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c32e5_data,%ah
		test   $0x000002,%ah
		sete   %al
		and    $0x000001,%al
		mov    %ah,%dl
		and    $0x0000fd,%dl
		add    %al,%al
		mov    %dl,_0c32e5_data
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,_0c32e5_data
		test   $0x000002,%dh
		je     _052ab9_jump
		mov    $0x000021,%ecx
		mov    $_0c1ba0_data,%edi
		mov    $_0c1b1c_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0c24dc_data,%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %esi,%eax
		mov    _0c1b04_data,%esi
		shl    $0x000002,%eax
		mov    $_0c1b1c_data,%edi
		add    %eax,%esi
		mov    _0c1ba4_data,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0xffffffff,%edx
		mov    %eax,_0c1b20_data
		mov    $0x0000ce,%eax
		jmp    _052af6_jump

	_052ab9_jump:
		mov    $0x000021,%ecx
		mov    $_0c1c24_data,%edi
		mov    $_0c1ba0_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0c1ba0_data,%edi
		mov    $_0c1b1c_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0c1b1c_data,%edi
		mov    $_0c1c24_data,%esi
		mov    $0xffffffff,%edx
		mov    $0x0000cf,%eax
		rep movsl %ds:(%esi),%es:(%edi)

	_052af6_jump:
		call   _06ac04_func
		mov    _0c1bd6_data,%ax
		mov    %ax,_0c1b52_data
		mov    _0c1bd8_data,%ax
		mov    %ax,_0c1b54_data
		mov    _0c1be0_data,%ax
		mov    %ax,_0c1b5c_data
		mov    _0c1be2_data,%ax
		mov    %ax,_0c1b5e_data
		mov    _0c1bc8_data,%eax
		mov    %eax,_0c1b44_data
		mov    _0c1bcc_data,%eax
		mov    %eax,_0c1b48_data
		mov    _0c1c08_data,%al
		mov    %al,_0c1b84_data
		mov    _0c1c09_data,%al
		mov    %al,_0c1b85_data
		mov    _0c1c14_data,%al
		mov    %al,_0c1b90_data
		mov    _0c1c0a_data,%al
		mov    _0c1b9d_data,%bh
		mov    %al,_0c1b86_data
		mov    _0c1c0b_data,%al
		and    $0x0000f7,%bh
		mov    %al,_0c1b87_data
		mov    _0c1c21_data,%al
		mov    %bh,%cl
		and    $0x000008,%al
		or     %al,%cl
		mov    _0c1bf0_data,%ax
		mov    %ax,_0c1b6c_data
		mov    _0c1c0d_data,%al
		mov    %al,_0c1b89_data
		mov    _0c1c0c_data,%al
		mov    $0x000017,%edx
		mov    %al,_0c1b88_data
		mov    _0c1bea_data,%ax
		mov    %dx,_0c1b7c_data
		mov    %ax,_0c1b66_data
		mov    _0c1bf2_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0c1b6e_data
		mov    _0c1bf6_data,%ax
		mov    %bh,_0c1b9d_data
		mov    %ax,_0c1b72_data
		mov    _0c1c1d_data,%al
		mov    %edx,_0c1b40_data
		mov    %al,_0c1b99_data
		mov    _0c1c1f_data,%al
		mov    $0x000002,%edx
		mov    %al,_0c1b9b_data
		mov    _0c1c16_data,%al
		mov    %cl,_0c1b9d_data
		mov    %al,_0c1b92_data
		mov    _0c1c17_data,%al
		mov    %cl,%ch
		mov    %al,_0c1b93_data
		mov    _0c1c19_data,%al
		or     $0x000004,%ch
		mov    %al,_0c1b95_data
		mov    $_0c1b1c_data,%eax
		mov    %ch,_0c1b9d_data
		call   _024288_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092204_data(%eax)
		je     _052c57_jump
		mov    $0x00000f,%ebx
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		call   _01d4a8_func

	_052c57_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_052c60_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c32e5_data,%ah
		shl    $0x000006,%ah
		shr    $0x000007,%ah
		mov    _0c32e6_data,%al
		and    $0x000001,%al
		cmp    %al,%ah
		jne    _052f37_jump
		mov    _0c32e6_data,%ah
		test   $0x000001,%ah
		sete   %al
		and    $0x000001,%al
		mov    %ah,%dl
		and    $0x0000fe,%dl
		mov    %dl,_0c32e6_data
		mov    %dl,%dh
		mov    _0c32e5_data,%bl
		or     %al,%dh
		and    $0x0000fd,%bl
		mov    %dh,%al
		mov    %bl,_0c32e5_data
		and    $0x000001,%al
		mov    %bl,%bh
		add    %al,%al
		or     %al,%bh
		mov    %dh,_0c32e6_data
		mov    %bh,_0c32e5_data
		test   $0x000001,%dh
		je     _052d69_jump
		mov    $0x000021,%ecx
		mov    $_0c1ba0_data,%edi
		mov    _0c24dc_data,%edx
		mov    $_0c1b1c_data,%esi
		sar    $0x000010,%edx
		mov    %bh,%bl
		mov    %edx,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %edx,%eax
		mov    _0c1b04_data,%esi
		shl    $0x000002,%eax
		mov    $_0c1b1c_data,%edi
		add    %eax,%esi
		and    $0x000084,%bl
		mov    _0c32e4_data,%dh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0c1ba4_data,%eax
		mov    $_0c32e8_data,%edi
		mov    $_0c32e4_data,%esi
		mov    %eax,_0c1b20_data
		mov    _0c1ba8_data,%eax
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %eax,_0c1b24_data
		mov    %bl,_0c32e5_data
		mov    _0c32e6_data,%bh
		mov    _0c1ba0_data,%eax
		or     $0x000001,%bh
		mov    %eax,_0c1b1c_data
		mov    %bh,%al
		and    $0x000041,%dh
		and    $0x000001,%al
		mov    %bl,%cl
		add    %al,%al
		mov    %dh,_0c32e4_data
		or     %al,%cl
		mov    %bh,_0c32e6_data
		mov    %cl,_0c32e5_data
		jmp    _052dd7_jump

	_052d69_jump:
		mov    $0x000021,%ecx
		mov    $_0c1c24_data,%edi
		mov    $_0c1ba0_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0c1ba0_data,%edi
		mov    $_0c1b1c_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0c1b1c_data,%edi
		mov    $_0c1c24_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %al,%al
		mov    $_0c32e4_data,%edi
		mov    $_0c32e8_data,%esi
		and    $0x000001,%al
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    _0c32e5_data,%ah
		and    $0x0000fd,%ah
		mov    %ah,_0c32e5_data
		add    %al,%al
		mov    _0c32e6_data,%ch
		mov    %ah,%dl
		and    $0x0000fe,%ch
		or     %al,%dl
		mov    %ch,_0c32e6_data
		mov    %dl,_0c32e5_data

	_052dd7_jump:
		mov    _0c1bd6_data,%ax
		mov    %ax,_0c1b52_data
		mov    _0c1bd8_data,%ax
		mov    %ax,_0c1b54_data
		mov    _0c1be0_data,%ax
		mov    %ax,_0c1b5c_data
		mov    _0c1be2_data,%ax
		mov    %ax,_0c1b5e_data
		mov    _0c1bc8_data,%eax
		mov    %eax,_0c1b44_data
		mov    _0c1bcc_data,%eax
		mov    %eax,_0c1b48_data
		mov    _0c1c08_data,%al
		mov    %al,_0c1b84_data
		mov    _0c1c09_data,%al
		mov    %al,_0c1b85_data
		mov    _0c1c14_data,%al
		mov    %al,_0c1b90_data
		mov    _0c1c0a_data,%al
		mov    %al,_0c1b86_data
		mov    _0c1c0b_data,%al
		mov    _0c1b9d_data,%ch
		mov    %al,_0c1b87_data
		mov    _0c1c21_data,%al
		and    $0x0000f7,%ch
		and    $0x000008,%al
		mov    %ch,%ah
		mov    %ch,_0c1b9d_data
		or     %al,%ah
		mov    %ah,_0c1b9d_data
		mov    _0c1bf0_data,%ax
		mov    %ax,_0c1b6c_data
		mov    _0c1c0d_data,%al
		mov    %al,_0c1b89_data
		mov    _0c1c0c_data,%al
		mov    %al,_0c1b88_data
		mov    _0c1bea_data,%ax
		mov    $0x000017,%edx
		mov    %ax,_0c1b66_data
		mov    _0c1bf2_data,%ax
		mov    %dx,_0c1b7c_data
		mov    %ax,_0c1b6e_data
		mov    _0c1bf6_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0c1b72_data
		mov    _0c1c1d_data,%al
		mov    %edx,_0c1b40_data
		mov    %al,_0c1b99_data
		mov    _0c1c1f_data,%al
		mov    _0c1b9d_data,%dl
		mov    %al,_0c1b9b_data
		mov    _0c1c16_data,%al
		or     $0x000004,%dl
		mov    %al,_0c1b92_data
		mov    _0c1c17_data,%al
		mov    %dl,_0c1b9d_data
		mov    %al,_0c1b93_data
		mov    _0c1c19_data,%al
		mov    $0x000002,%edx
		mov    %al,_0c1b95_data
		mov    $_0c1b1c_data,%eax
		call   _024288_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092204_data(%eax)
		je     _052f37_jump
		mov    $0x00000f,%ebx
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		call   _01d4a8_func

	_052f37_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052f40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0c25e2_data,%al
		cmp    $0x000003,%eax
		je     _053084_jump
		cmp    $0x000002,%eax
		jne    _052f80_jump
		call   _04c6f4_func
		call   _059b3c_func
		xor    %edx,%edx
		mov    $_0c1b1c_data,%eax
		mov    %dx,_0c24c0_data
		mov    %dx,_0c24c2_data
		call   _04dbe4_func
		jmp    _052f85_jump

	_052f80_jump:
		call   _0281b0_func

	_052f85_jump:
		cmpw   $0x000000,_0c51a2_data
		je     _052fd1_jump
		mov    $0x000001,%esi
		mov    _0c2480_data,%ecx
		mov    _0c247e_data,%ebx
		mov    _0c247c_data,%edx
		mov    _0c247a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		xor    %edi,%edi
		call   _053430_func
		call   _053b80_func
		mov    %si,_0ce8e2_data
		mov    %di,_0ce8e0_data

	_052fd1_jump:
		mov    _0c2390_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0c245a_data,%ax
		xor    %ebx,%ebx
		test   %ax,%ax
		jle    _053084_jump
		jmp    _053026_jump

	_052fff_jump:
		inc    %ebx
		movswl %bx,%eax
		mov    _0c2390_data(,%eax,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0c1b04_data,%eax
		mov    _0c245a_data,%cx
		add    %eax,%edx
		cmp    %cx,%bx
		jge    _053084_jump

	_053026_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000008,_092247_data(,%eax,4)
		jne    _053071_jump
		cmp    $0x0000a1,%eax
		jne    _053047_jump
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000017,%eax
		je     _053071_jump

	_053047_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x000053,%eax
		jne    _05305c_jump
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000001,%eax
		je     _053071_jump

	_05305c_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x000021,%eax
		jne    _052fff_jump
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000023,%eax
		je     _052fff_jump

	_053071_jump:
		mov    %edx,%eax
		call   _04dbe4_func
		mov    %edx,%eax
		call   _01e840_func
		jmp    _052fff_jump

	_053084_jump:
		call   _04fad8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053090_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpw   $0x000000,_0c51a2_data
		je     _0530f0_jump
		xor    %esi,%esi

	_0530a0_jump:
		mov    _0c2480_data,%ecx
		mov    _0c247e_data,%ebx
		mov    _0c247c_data,%edx
		mov    _0c247a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _053430_func
		call   _053b80_func
		call   _04c6f4_func
		mov    _0c247c_data,%ax
		mov    %ax,_0c2480_data
		mov    _0c247e_data,%ax
		inc    %esi
		mov    %ax,_0c2482_data
		cmp    $0x000064,%esi
		jl     _0530a0_jump

	_0530f0_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0530f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x0001ff,%eax
		mov    $0x000007,%edx
		call   _064360_func
		xor    %ebx,%ebx
		mov    %eax,%ecx

	_05310e_jump:
		movswl %dx,%eax
		add    %eax,%eax
		cmp    _0c51a8_data(%eax),%cx
		jle    _053128_jump
		mov    $0x000001,%ebx
		add    %bx,_0c51b8_data(%eax)

	_053128_jump:
		movswl %bx,%eax
		dec    %edx
		test   %eax,%eax
		je     _05310e_jump
		movswl %dx,%eax
		add    %eax,%eax
		mov    _0c51ba_data(%eax),%dx
		cmp    _0c51ca_data(%eax),%dx
		jle    _05314f_jump
		mov    %edx,%ecx
		dec    %ecx
		mov    %cx,_0c51ba_data(%eax)

	_05314f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053154_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x00000a,%edx
		mov    $0x00000f,%ebx
		mov    $0x000019,%ecx
		mov    $0x00001e,%esi
		mov    $0x000023,%edi
		mov    $0x000028,%eax
		mov    %dx,_0c51b8_data
		mov    %bx,_0c51ba_data
		mov    %cx,_0c51bc_data
		mov    %si,_0c51be_data
		mov    %di,_0c51c0_data
		mov    %ax,_0c51c2_data
		mov    $0x00002b,%edx
		mov    $0x000035,%ebx
		mov    %dx,_0c51c4_data
		mov    %bx,_0c51c6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0531c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x0001ff,%eax
		mov    $0x000007,%edx
		call   _064360_func
		xor    %ebx,%ebx
		mov    %eax,%esi

	_0531d7_jump:
		movswl %dx,%eax
		add    %eax,%eax
		cmp    _0c51a8_data(%eax),%si
		jl     _0531fe_jump
		mov    _0c51b6_data(%eax),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jle    _0531fe_jump
		mov    $0x000001,%ebx
		sub    %bx,_0c51b8_data(%eax)

	_0531fe_jump:
		movswl %bx,%eax
		dec    %edx
		test   %eax,%eax
		jne    _05320d_jump
		movswl %dx,%eax
		test   %eax,%eax
		jge    _0531d7_jump

	_05320d_jump:
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		jne    _053249_jump
		mov    $0x000007,%eax
		xor    %ebx,%ebx

	_05321c_jump:
		movswl %ax,%edx
		add    %edx,%edx
		mov    _0c51b6_data(%edx),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jle    _05323a_jump
		mov    $0x000001,%ebx
		sub    %bx,_0c51b8_data(%edx)

	_05323a_jump:
		movswl %bx,%edx
		dec    %eax
		test   %edx,%edx
		jne    _053249_jump
		movswl %ax,%edx
		test   %edx,%edx
		jge    _05321c_jump

	_053249_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053250_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    $0x000014,%edx
		mov    $0x00001e,%ebx
		mov    $0x000032,%ecx
		mov    $0x00003c,%esi
		mov    $0x000046,%edi
		mov    $0x000050,%eax
		mov    %dx,_0c51c8_data
		mov    %bx,_0c51ca_data
		mov    %cx,_0c51cc_data
		mov    %si,_0c51ce_data
		mov    %di,_0c51d0_data
		mov    %ax,_0c51d2_data
		mov    $0x000060,%edx
		mov    $0x00006a,%ebx
		mov    $0xffffffc0,%edi
		xor    %ecx,%ecx
		mov    %dx,_0c51d4_data
		mov    %bx,_0c51d6_data
		mov    %cx,0x000008(%esp)
		mov    %cx,0x000004(%esp)
		mov    %di,(%esp)
		mov    $0x0002bc,%ebp
		jmp    _0532e8_jump

	_0532d4_jump:
		mov    (%esp),%ecx
		mov    0x000004(%esp),%esi
		add    $0x000020,%ecx
		inc    %esi
		mov    %cx,(%esp)
		mov    %si,0x000004(%esp)

	_0532e8_jump:
		mov    0x000002(%esp),%ecx
		sar    $0x000010,%ecx
		cmp    $0x000008,%ecx
		jge    _053416_jump
		xor    %eax,%eax
		mov    -0x000002(%esp),%ebx
		mov    %ax,_0c51b8_data(,%ecx,2)
		mov    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    %ax,_0c51a8_data(,%ecx,2)
		mov    (%esp),%eax
		sar    $0x000010,%ebx
		mov    %ax,0x00000c(%esp)
		mov    %ebx,%eax
		call   _01d31c_func
		mov    $0x0000c8,%edx
		mov    %ax,_0c51e8_data(,%ecx,2)
		mov    %ebx,%eax
		call   _01d31c_func
		xor    %edx,%edx
		mov    %ax,_0c5208_data(,%ecx,2)
		mov    %ebx,%eax
		call   _01d2e4_func
		mov    $0x000140,%edx
		mov    %ax,_0c51d8_data(,%ecx,2)
		mov    %ebx,%eax
		call   _01d2e4_func
		xor    %edx,%edx
		mov    %ax,_0c51f8_data(,%ecx,2)
		mov    %edx,0x000010(%esp)
		jmp    _0533a1_jump

	_05336f_jump:
		mov    0x000006(%esp),%ebx
		mov    _0c51a4_data,%edx
		sar    $0x000010,%ebx
		mov    %cx,(%edx,%ebx,8)
		mov    0x00000c(%esp),%eax
		mov    %di,0x000002(%edx,%ebx,8)
		mov    %ax,0x000004(%edx,%ebx,8)
		mov    0x000008(%esp),%edi
		mov    0x000010(%esp),%eax
		inc    %edi
		inc    %eax
		mov    %di,0x000008(%esp)
		mov    %eax,0x000010(%esp)

	_0533a1_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    0x000010(%esp),%eax
		cmp    _0c51c8_data(,%edx,2),%ax
		jge    _0532d4_jump

	_0533ba_jump:
		mov    %ebp,%eax
		mov    0x00000a(%esp),%ebx
		call   _064360_func
		mov    %eax,%ecx
		mov    $0x000190,%eax
		sar    $0x000010,%ebx
		call   _064360_func
		movswl %cx,%edx
		mov    %eax,%edi
		mov    %ebx,%eax
		sub    $0x000096,%edi
		call   _01d264_func
		mov    %eax,%esi
		movswl %di,%edx
		mov    %ebx,%eax
		movswl %si,%ebx
		call   _01d2a0_func
		cmp    $0x000140,%ebx
		jge    _0533ba_jump
		test   %ebx,%ebx
		jle    _0533ba_jump
		movswl %ax,%ebx
		cmp    $0x0000c8,%ebx
		jge    _0533ba_jump
		test   %ebx,%ebx
		jg     _05336f_jump
		jmp    _0533ba_jump

	_053416_jump:
		xor    %edx,%edx
		mov    %dx,_0c458c_data
		mov    %dx,_0c458e_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053430_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    %eax,0x000038(%esp)
		mov    %edx,%edi
		mov    %ebx,0x000004(%esp)
		mov    %ecx,0x000034(%esp)
		mov    _0c458e_data,%ax
		mov    %eax,0x000008(%esp)
		mov    _0c458c_data,%ax
		mov    %ax,0x00000c(%esp)
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%esi
		mov    0x000008(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,_0c458e_data
		mov    _0c458c_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%ebp
		mov    %eax,0x000014(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %edx,%ebx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		movswl %bx,%eax
		test   %eax,%eax
		jge    _0534be_jump
		neg    %eax

	_0534be_jump:
		cmp    $0x000001,%eax
		jne    _0534e6_jump
		xor    %eax,%eax
		mov    _0c249c_data,%al
		test   %eax,%eax
		jne    _0534e6_jump
		mov    _0c458a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _0534e4_jump
		mov    $0x000001,%eax
		jg     _0534e4_jump
		neg    %eax

	_0534e4_jump:
		add    %eax,%esi

	_0534e6_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _0534ef_jump
		neg    %eax

	_0534ef_jump:
		cmp    $0x000002,%eax
		jne    _053517_jump
		xor    %eax,%eax
		mov    _0c249a_data,%al
		test   %eax,%eax
		jne    _053517_jump
		mov    _0c458a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _053515_jump
		mov    $0x000001,%eax
		jg     _053515_jump
		neg    %eax

	_053515_jump:
		add    %eax,%esi

	_053517_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _053520_jump
		neg    %eax

	_053520_jump:
		cmp    $0x000003,%eax
		jne    _053549_jump
		xor    %eax,%eax
		mov    _0c249c_data,%al
		cmp    $0x000003,%eax
		jge    _053549_jump
		mov    _0c458a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _053547_jump
		mov    $0x000001,%eax
		jg     _053547_jump
		neg    %eax

	_053547_jump:
		add    %eax,%esi

	_053549_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _053552_jump
		neg    %eax

	_053552_jump:
		cmp    $0x000001,%eax
		jne    _053582_jump
		xor    %eax,%eax
		mov    _0c249c_data,%al
		test   %eax,%eax
		jne    _053582_jump
		mov    _0c458c_data,%eax
		sar    $0x000010,%eax
		mov    0x000014(%esp),%ebx
		cmp    $0x000000,%eax
		je     _05357c_jump
		mov    $0x000001,%eax
		jg     _05357c_jump
		neg    %eax

	_05357c_jump:
		add    %eax,%ebx
		mov    %ebx,0x000014(%esp)

	_053582_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _05358b_jump
		neg    %eax

	_05358b_jump:
		cmp    $0x000002,%eax
		jne    _0535bb_jump
		xor    %eax,%eax
		mov    _0c249a_data,%al
		test   %eax,%eax
		jne    _0535bb_jump
		mov    _0c458c_data,%eax
		sar    $0x000010,%eax
		mov    0x000014(%esp),%ecx
		cmp    $0x000000,%eax
		je     _0535b5_jump
		mov    $0x000001,%eax
		jg     _0535b5_jump
		neg    %eax

	_0535b5_jump:
		add    %eax,%ecx
		mov    %ecx,0x000014(%esp)

	_0535bb_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _0535c4_jump
		neg    %eax

	_0535c4_jump:
		cmp    $0x000003,%eax
		jne    _0535f5_jump
		xor    %eax,%eax
		mov    _0c249c_data,%al
		cmp    $0x000003,%eax
		jge    _0535f5_jump
		mov    _0c458c_data,%eax
		sar    $0x000010,%eax
		mov    0x000014(%esp),%edx
		cmp    $0x000000,%eax
		je     _0535ef_jump
		mov    $0x000001,%eax
		jg     _0535ef_jump
		neg    %eax

	_0535ef_jump:
		add    %eax,%edx
		mov    %edx,0x000014(%esp)

	_0535f5_jump:
		mov    $0x0000aa,%edx
		mov    $0x0000a0,%eax
		call   _01d1ec_func
		mov    0x000034(%esp),%eax
		mov    $0xffffffc0,%ecx
		sub    %edi,%eax
		mov    0x000038(%esp),%edi
		mov    %eax,0x000010(%esp)
		mov    0x000004(%esp),%eax
		xor    %ebx,%ebx
		sub    %edi,%eax
		mov    %bx,0x000018(%esp)
		add    %esi,%eax
		mov    %cx,0x00001c(%esp)
		mov    %eax,0x000030(%esp)
		jmp    _053647_jump

	_053631_jump:
		mov    0x000018(%esp),%eax
		mov    0x00001c(%esp),%edx
		inc    %eax
		add    $0x000020,%edx
		mov    %ax,0x000018(%esp)
		mov    %dx,0x00001c(%esp)

	_053647_jump:
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x0000c0,%eax
		jge    _05371e_jump
		mov    0x000016(%esp),%edx
		sar    $0x000010,%edx
		mov    _0c51a6_data(,%edx,2),%eax
		mov    0x000014(%esp),%ecx
		sar    $0x000010,%eax
		mov    _0c51a4_data,%ebx
		shl    $0x000003,%eax
		mov    _0c5208_data(,%edx,2),%si
		add    %ebx,%eax
		mov    0x000010(%esp),%ebx
		mov    _0c51a8_data(,%edx,2),%di
		add    %ecx,%ebx
		mov    %edi,(%esp)
		mov    %ebx,0x000024(%esp)
		mov    0x000030(%esp),%ebx
		add    _0c51b8_data(,%edx,2),%di
		mov    %ebx,0x000020(%esp)
		mov    _0c51e8_data(,%edx,2),%bx
		mov    _0c51d8_data(,%edx,2),%cx
		mov    %ebx,0x00002c(%esp)
		mov    _0c51f8_data(,%edx,2),%bx
		mov    (%esp),%edx
		mov    %edi,0x000028(%esp)
		jmp    _0536f9_jump

	_0536cb_jump:
		cmp    %di,%cx
		jle    _0536d3_jump
		mov    %bx,(%eax)

	_0536d3_jump:
		mov    0x000002(%eax),%di
		cmp    %di,%si
		jge    _0536e6_jump
		mov    0x00002c(%esp),%edi
		mov    %di,0x000002(%eax)
		jmp    _0536f1_jump

	_0536e6_jump:
		cmp    0x00002c(%esp),%di
		jge    _0536f1_jump
		mov    %si,0x000002(%eax)

	_0536f1_jump:
		mov    0x000028(%esp),%edi
		inc    %edx
		add    $0x000008,%eax

	_0536f9_jump:
		cmp    %di,%dx
		jge    _053631_jump
		mov    0x000020(%esp),%edi
		add    %di,(%eax)
		mov    0x000024(%esp),%edi
		add    %di,0x000002(%eax)
		mov    (%eax),%di
		cmp    %di,%bx
		jge    _0536cb_jump
		mov    %cx,(%eax)
		jmp    _0536d3_jump

	_05371e_jump:
		mov    0x000008(%esp),%eax
		mov    %ax,_0c458e_data
		mov    0x00000c(%esp),%eax
		mov    %ax,_0c458c_data
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _053759_jump
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %ax,_0c256a_data

	_053759_jump:
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_053760_func:
		push   %ebx
		mov    %ax,_0c5218_data
		xor    %ebx,%ebx
		cwtl   
		mov    %bx,_0c521a_data
		mov    %dx,_0c521c_data(,%eax,2)
		pop    %ebx
		ret    

	_05377b_jump:
		cmp    $0x000001,%edx
		jne    _05379d_jump
		movw   $0x000004,(%eax)
		add    $0x000002,%eax
		movw   $0x000003,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		jmp    _053af3_jump

	_05379d_jump:
		cmp    $0x000002,%edx
		jne    _0537c3_jump
		movw   $0x000004,(%eax)
		add    %edx,%eax
		movw   $0x000003,(%eax)
		add    %edx,%eax
		movw   $0x000200,(%eax)
		add    %edx,%eax
		movw   $0x000000,(%eax)
		add    %edx,%eax
		jmp    _053afb_jump

	_0537c3_jump:
		cmp    $0x000003,%edx
		jne    _053823_jump
		movswl %cx,%edx
		cmp    $0x000008,%edx
		je     _0537d7_jump
		movw   $0x000004,(%eax)
		jmp    _0537dc_jump

	_0537d7_jump:
		movw   $0x000002,(%eax)

	_0537dc_jump:
		add    $0x000002,%eax
		mov    %ecx,%esi
		movswl %cx,%edx
		add    %ecx,%esi
		lea    0x000002(%eax),%edi
		mov    %esi,0x000004(%esp)
		lea    0x000004(%eax),%esi
		cmp    $0x000008,%edx
		jle    _053803_jump
		movw   $0x000008,(%eax)
		mov    0x000004(%esp),%eax
		sub    $0x000010,%eax
		jmp    _053819_jump

	_053803_jump:
		jge    _053af3_jump
		mov    0x000004(%esp),%edx
		movw   $0x000009,(%eax)
		mov    $0x000010,%eax
		sub    %edx,%eax

	_053819_jump:
		mov    %ax,(%edi)
		mov    %esi,%eax
		jmp    _053af3_jump

	_053823_jump:
		cmp    $0x000004,%edx
		jne    _053871_jump
		movswl %cx,%edx
		test   %edx,%edx
		je     _053836_jump
		movw   $0x000004,(%eax)
		jmp    _05383b_jump

	_053836_jump:
		movw   $0x000002,(%eax)

	_05383b_jump:
		add    $0x000002,%eax
		lea    0x000002(%eax),%esi
		movswl %cx,%edx
		lea    0x000004(%eax),%edi
		test   %edx,%edx
		jle    _053856_jump
		movw   $0x000008,(%eax)
		mov    %ecx,%eax
		add    %ecx,%eax
		jmp    _053867_jump

	_053856_jump:
		jge    _053af3_jump
		movw   $0x000009,(%eax)
		mov    %ecx,%eax
		neg    %eax
		add    %eax,%eax

	_053867_jump:
		mov    %ax,(%esi)
		mov    %edi,%eax
		jmp    _053af3_jump

	_053871_jump:
		add    $0x000002,%eax
		cmp    $0x000005,%edx
		jne    _0538d8_jump
		movswl %bx,%edx
		cmp    $0xfffffff8,%edx
		je     _05388c_jump
		movw   $0x000004,_0c529e_data
		jmp    _053895_jump

	_05388c_jump:
		movw   $0x000002,_0c529e_data

	_053895_jump:
		mov    %ebx,%edx
		movswl %bx,%esi
		add    %ebx,%edx
		lea    0x000002(%eax),%edi
		mov    %edx,(%esp)
		lea    0x000004(%eax),%edx
		cmp    $0xfffffff8,%esi
		jle    _0538b9_jump
		movw   $0x000006,(%eax)
		mov    (%esp),%eax
		add    $0x000010,%eax
		jmp    _0538ce_jump

	_0538b9_jump:
		jge    _053af3_jump
		mov    (%esp),%esi
		movw   $0x000007,(%eax)
		mov    $0xfffffff0,%eax
		sub    %esi,%eax

	_0538ce_jump:
		mov    %ax,(%edi)
		mov    %edx,%eax
		jmp    _053af3_jump

	_0538d8_jump:
		cmp    $0x000006,%edx
		jne    _05393d_jump
		movswl %bx,%edx
		cmp    $0x000008,%edx
		je     _0538f0_jump
		movw   $0x000004,_0c529e_data
		jmp    _0538f9_jump

	_0538f0_jump:
		movw   $0x000002,_0c529e_data

	_0538f9_jump:
		mov    %ebx,%esi
		movswl %bx,%edx
		add    %ebx,%esi
		lea    0x000002(%eax),%edi
		mov    %esi,0x00000c(%esp)
		lea    0x000004(%eax),%esi
		cmp    $0x000008,%edx
		jle    _05391d_jump
		movw   $0x000006,(%eax)
		mov    0x00000c(%esp),%eax
		sub    $0x000010,%eax
		jmp    _053933_jump

	_05391d_jump:
		jge    _053af3_jump
		mov    0x00000c(%esp),%edx
		movw   $0x000007,(%eax)
		mov    $0x000010,%eax
		sub    %edx,%eax

	_053933_jump:
		mov    %ax,(%edi)
		mov    %esi,%eax
		jmp    _053af3_jump

	_05393d_jump:
		cmp    $0x000007,%edx
		jne    _0539a0_jump
		movswl %bx,%edx
		cmp    $0xfffffff0,%edx
		je     _053955_jump
		movw   $0x000004,_0c529e_data
		jmp    _05395e_jump

	_053955_jump:
		movw   $0x000002,_0c529e_data

	_05395e_jump:
		movswl %bx,%edi
		lea    0x000002(%eax),%ebp
		mov    %ebx,%edx
		lea    0x000004(%eax),%esi
		add    %ebx,%edx
		cmp    $0xfffffff0,%edi
		jle    _053983_jump
		add    $0x000020,%edx
		movw   $0x000006,(%eax)
		mov    %esi,%eax
		mov    %dx,0x000000(%ebp)
		jmp    _053af3_jump

	_053983_jump:
		jge    _053af3_jump
		movw   $0x000007,(%eax)
		mov    $0xffffffe0,%eax
		sub    %edx,%eax
		mov    %ax,0x000000(%ebp)
		mov    %esi,%eax
		jmp    _053af3_jump

	_0539a0_jump:
		cmp    $0x000008,%edx
		jne    _053a05_jump
		movswl %bx,%edx
		cmp    $0x000010,%edx
		je     _0539b8_jump
		movw   $0x000004,_0c529e_data
		jmp    _0539c1_jump

	_0539b8_jump:
		movw   $0x000002,_0c529e_data

	_0539c1_jump:
		mov    %ebx,%esi
		movswl %bx,%edx
		add    %ebx,%esi
		lea    0x000002(%eax),%edi
		mov    %esi,0x000010(%esp)
		lea    0x000004(%eax),%esi
		cmp    $0x000010,%edx
		jle    _0539e5_jump
		movw   $0x000006,(%eax)
		mov    0x000010(%esp),%eax
		sub    $0x000020,%eax
		jmp    _0539fb_jump

	_0539e5_jump:
		jge    _053af3_jump
		mov    0x000010(%esp),%edx
		movw   $0x000007,(%eax)
		mov    $0x000020,%eax
		sub    %edx,%eax

	_0539fb_jump:
		mov    %ax,(%edi)
		mov    %esi,%eax
		jmp    _053af3_jump

	_053a05_jump:
		cmp    $0x000009,%edx
		jne    _053a58_jump
		movswl %bx,%edx
		test   %edx,%edx
		je     _053a1c_jump
		movw   $0x000004,_0c529e_data
		jmp    _053a25_jump

	_053a1c_jump:
		movw   $0x000002,_0c529e_data

	_053a25_jump:
		lea    0x000002(%eax),%esi
		movswl %bx,%edx
		lea    0x000004(%eax),%edi
		test   %edx,%edx
		jle    _053a3d_jump
		movw   $0x000006,(%eax)
		mov    %ebx,%eax
		add    %ebx,%eax
		jmp    _053a4e_jump

	_053a3d_jump:
		jge    _053af3_jump
		movw   $0x000007,(%eax)
		mov    %ebx,%eax
		neg    %eax
		add    %eax,%eax

	_053a4e_jump:
		mov    %ax,(%esi)
		mov    %edi,%eax
		jmp    _053af3_jump

	_053a58_jump:
		cmp    $0x00000a,%edx
		jne    _053ad9_jump
		movswl %cx,%edx
		cmp    $0xfffffff0,%edx
		je     _053a74_jump
		movw   $0x000006,_0c529e_data
		jmp    _053a7d_jump

	_053a74_jump:
		movw   $0x000004,_0c529e_data

	_053a7d_jump:
		mov    %ecx,%edi
		movswl %cx,%edx
		add    %ecx,%edi
		lea    0x000002(%eax),%esi
		mov    %edi,0x000008(%esp)
		lea    0x000004(%eax),%edi
		cmp    $0xfffffff0,%edx
		jle    _053aa3_jump
		movw   $0x000008,(%eax)
		mov    0x000008(%esp),%eax
		add    $0x000020,%eax
		jmp    _053ab5_jump

	_053aa3_jump:
		jge    _053aba_jump
		mov    0x000008(%esp),%edx
		movw   $0x000009,(%eax)
		mov    $0xffffffe0,%eax
		sub    %edx,%eax

	_053ab5_jump:
		mov    %ax,(%esi)
		mov    %edi,%eax

	_053aba_jump:
		movw   $0x000000,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		movw   $0x000009,(%eax)
		add    $0x000002,%eax
		movw   $0x000020,(%eax)
		jmp    _053b00_jump

	_053ad9_jump:
		cmp    $0x00000b,%edx
		jne    _053b00_jump
		movw   $0x000004,_0c529e_data
		movw   $0x00000a,(%eax)
		add    $0x000004,%eax
		mov    %si,-0x000002(%eax)

	_053af3_jump:
		movw   $0x000000,(%eax)
		add    $0x000002,%eax

	_053afb_jump:
		movw   $0x007fff,(%eax)

	_053b00_jump:
		mov    $0x000001,%esi
		mov    _0c52a0_data,%edx
		mov    _0c529e_data,%eax
		mov    %bx,_0c458c_data
		mov    %cx,_0c458e_data
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %si,_0c529c_data
		call   _053760_func
		mov    _0c529c_data,%di
		add    $0x000002,%edi
		mov    _0c458c_data,%bx
		mov    %di,_0c529c_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_053b54_switch:
		.long   _053c52_case
		.long   _053bbe_case
		.long   _053bd1_case
		.long   _053bdb_case
		.long   _053bf1_case
		.long   _053c04_case
		.long   _053be5_case
		.long   _053bf9_case
		.long   _053c0d_case
		.long   _053c21_case
		.long   _053c35_case




_053b80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c529c_data,%cx
		mov    _0c5218_data,%ax
		cmp    $0x00000a,%ax
		ja     _053c52_case
		and    $0x00ffff,%eax
		lea    0x000000(,%eax,4),%ebx
		mov    _0c458c_data,%dx
		mov    _0c458c_data,%ax
		inc    %edx
		dec    %eax
		jmp    *%cs:_053b54_switch(%ebx)

	_053bbe_case:
		xor    %eax,%eax
		mov    %ax,_0c458c_data
		mov    %ax,_0c458e_data
		jmp    _053c52_case

	_053bd1_case:
		call   _0530f8_func
		jmp    _053c52_case

	_053bdb_case:
		call   _0531c0_func
		jmp    _053c52_case

	_053be5_case:
		xor    %edx,%edx
		mov    _0c249a_data,%dl
		test   %edx,%edx
		jne    _053c52_case

	_053bf1_case:
		mov    %ax,_0c458c_data
		jmp    _053c52_case

	_053bf9_case:
		xor    %eax,%eax
		mov    _0c249a_data,%al
		test   %eax,%eax
		jne    _053c52_case

	_053c04_case:
		mov    %dx,_0c458c_data
		jmp    _053c52_case

	_053c0d_case:
		xor    %eax,%eax
		mov    _0c249a_data,%al
		test   %eax,%eax
		jne    _053c52_case
		decw   _0c458e_data
		jmp    _053c52_case

	_053c21_case:
		xor    %eax,%eax
		mov    _0c249a_data,%al
		test   %eax,%eax
		jne    _053c52_case
		incw   _0c458e_data
		jmp    _053c52_case

	_053c35_case:
		mov    $0xfffffff8,%edx
		mov    $0x000008,%ebx
		mov    %dx,_0c458c_data
		mov    %bx,_0c458e_data
		call   _053154_func

	_053c52_case:
		mov    _0c5216_data,%eax
		sar    $0x000010,%eax
		mov    _0c521a_data,%bx
		lea    0x000000(,%eax,2),%edx
		mov    _0c529c_data,%cx
		inc    %ebx
		mov    _0c521c_data(%edx),%si
		mov    %bx,_0c521a_data
		cmp    %si,%bx
		jne    _053cc2_jump
		movswl %cx,%eax
		inc    %ecx
		mov    _0c529e_data(,%eax,2),%bx
		movswl %cx,%eax
		mov    _0c529e_data(,%eax,2),%ax
		inc    %ecx
		movswl %ax,%edx
		movswl %bx,%eax
		mov    %cx,_0c529c_data
		call   _053760_func
		mov    _0c529c_data,%cx
		mov    _0c529e_data,%di
		cmp    %di,%cx
		jne    _053cc2_jump
		xor    %edi,%ecx

	_053cc2_jump:
		mov    %cx,_0c529c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_053cd0_switch:
		.long   _053d25_case
		.long   _053d2c_case
		.long   _053d33_case
		.long   _053d3a_case
		.long   _053d41_case
		.long   _053d48_case
		.long   _053d4f_case
		.long   _053d56_case
		.long   _053d5d_case
		.long   _053d64_case
		.long   _053dbe_case
		.long   _053d21_case




_053d00_func:
		andb   $0x0000fb,0x000081(%eax)
		mov    0x00006c(%eax),%al
		sub    $0x000015,%al
		cmp    $0x00000b,%al
		ja     _053dbe_case
		and    $0x0000ff,%eax
		jmp    *%cs:_053cd0_switch(,%eax,4)

	_053d21_case:
		xor    %eax,%eax
		jmp    _053d6c_jump

	_053d25_case:
		mov    $0x000001,%eax
		jmp    _053d6c_jump

	_053d2c_case:
		mov    $0x000002,%eax
		jmp    _053d6c_jump

	_053d33_case:
		mov    $0x000003,%eax
		jmp    _053d6c_jump

	_053d3a_case:
		mov    $0x000004,%eax
		jmp    _053d6c_jump

	_053d41_case:
		mov    $0x000005,%eax
		jmp    _053d6c_jump

	_053d48_case:
		mov    $0x000006,%eax
		jmp    _053d6c_jump

	_053d4f_case:
		mov    $0x000007,%eax
		jmp    _053d6c_jump

	_053d56_case:
		mov    $0x000008,%eax
		jmp    _053d6c_jump

	_053d5d_case:
		mov    $0x000009,%eax
		jmp    _053d6c_jump

	_053d64_case:
		mov    $0x00000a,%eax
		lea    0x000000(%eax),%eax

	_053d6c_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0c458c_data,%bx
		mov    _0c458e_data,%cx
		mov    %eax,%edx
		mov    $_0c529e_data,%eax
		mov    $0x000001,%esi
		movswl %dx,%edx
		mov    %si,_0c51a2_data
		test   %edx,%edx
		jne    _05377b_jump
		movw   $0x000004,(%eax)
		add    $0x000002,%eax
		movw   $0x000002,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		jmp    _053af3_jump

	_053dbe_case:
		ret    



_054174_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    _0c24bc_data,%eax
		mov    %ebx,0x00000c(%edx)
		mov    %eax,(%edx)
		mov    _0c24b8_data,%edx
		mov    %esi,%eax
		shl    $0x000002,%edx
		call   _077220_func
		mov    $0x000008,%edx
		mov    %eax,0x000004(%ecx)
		mov    %esi,%eax
		call   _077220_func
		mov    _0c24b8_data,%edx
		xor    %esi,%esi
		mov    %eax,0x000008(%ecx)
		test   %edx,%edx
		jle    _05423c_jump
		xor    %eax,%eax
		xor    %edx,%edx

	_0541bf_jump:
		mov    (%ecx),%ebx
		mov    (%edx,%ebx,1),%bx
		and    $0x00ffff,%ebx
		mov    0x00000c(%ecx),%edi
		mov    _0caa4c_data(,%ebx,4),%ebx
		add    %ebx,%edi
		mov    %edi,(%esp)
		mov    0x000004(%ecx),%edi
		mov    (%esp),%ebp
		mov    %ebp,(%edi,%eax,1)
		imul   $0x000120,_0ce578_data,%edi
		cmp    %edi,%ebx
		ja     _0541ff_jump
		mov    0x000004(%ecx),%ebx
		mov    (%ebx,%eax,1),%ebx
		mov    0x000100(%ebx),%ebx
		jmp    _05420b_jump

	_0541ff_jump:
		mov    0x000004(%ecx),%ebx
		mov    (%ebx,%eax,1),%ebx
		mov    0x000200(%ebx),%ebx

	_05420b_jump:
		cmp    $0xaaaaaaaa,%ebx
		jne    _054217_jump
		mov    $0x000001,%bl
		jmp    _054225_jump

	_054217_jump:
		cmp    $0x55555555,%ebx
		jne    _054223_jump
		xor    %bl,%bl
		jmp    _054225_jump

	_054223_jump:
		mov    $0x000002,%bl

	_054225_jump:
		mov    (%ecx),%edi
		add    $0x000004,%eax
		inc    %esi
		mov    %bl,0x000004(%edx,%edi,1)
		mov    _0c24b8_data,%ebx
		add    $0x000006,%edx
		cmp    %ebx,%esi
		jl     _0541bf_jump

	_05423c_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_054244_func:
		mov    _0c24b4_data,%dx
		mov    %dx,0x000016(%eax)
		mov    _0c24b6_data,%dx
		mov    %dx,0x000018(%eax)
		mov    %eax,%eax



_05425c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0c247a_data,%ecx
		mov    _0ce50c_data,%ebx
		sar    $0x000010,%ecx
		add    %ebx,%ecx
		mov    _0c247c_data,%ebx
		mov    _0ce504_data,%esi
		sar    $0x000010,%ebx
		add    %esi,%ebx
		mov    0x000014(%edx),%edx
		mov    %ebx,%esi
		sar    $0x000010,%edx
		sar    $0x000004,%esi
		imul   %edx,%esi
		sub    $0x000008,%ecx
		mov    %ecx,%edx
		mov    0x000008(%eax),%eax
		sar    $0x000004,%edx
		xor    %ch,%ch
		add    %esi,%edx
		and    $0x00000f,%cl
		mov    %dx,0x000006(%eax)
		mov    _0ce50c_data,%dx
		xor    %bh,%bh
		sub    %ecx,%edx
		and    $0x00000f,%bl
		mov    %dx,(%eax)
		mov    _0ce504_data,%dx
		sub    %ebx,%edx
		movswl (%eax),%ebx
		mov    %dx,0x000002(%eax)
		mov    _0ce510_data,%edx
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    (%eax),%edx
		mov    _0ce508_data,%ecx
		sar    $0x000010,%edx
		sub    %edx,%ecx
		mov    %ecx,%edx
		test   $0x00000f,%bl
		setne  %cl
		and    $0x0000ff,%ecx
		sar    $0x000004,%ebx
		add    %ecx,%ebx
		mov    %bl,0x000004(%eax)
		test   $0x00000f,%dl
		setne  %bl
		and    $0x0000ff,%ebx
		sar    $0x000004,%edx
		add    %ebx,%edx
		mov    %dl,0x000005(%eax)
		mov    (%eax),%ax
		xor    %ah,%ah
		and    $0x000003,%al
		mov    $0x000004,%edx
		cwtl   
		mov    _0cdf04_data,%ebx
		sub    %eax,%edx
		add    %edx,%ebx
		mov    %edx,_0cdf08_data
		mov    %ebx,_0cdefc_data
		mov    %ebx,_0ccfd0_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054338_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x0000c8,%ebx
		mov    $0x000004,%ecx
		xor    %edx,%edx
		mov    $0x000140,%esi
		mov    %edx,_0ce504_data
		mov    %ebx,_0ce508_data
		mov    %ecx,_0ce50c_data
		mov    %esi,_0ce510_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05436c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c24b4_data,%cx
		shl    $0x000004,%ecx
		mov    _0ce510_data,%bx
		mov    %ecx,%eax
		sub    %ebx,%eax
		mov    _0ce508_data,%dx
		mov    %eax,%ebx
		mov    _0c24b6_data,%ax
		sub    $0x000140,%ecx
		shl    $0x000004,%eax
		mov    %cx,_0ce534_data
		mov    %eax,%esi
		sub    $0x0000c8,%eax
		sub    %edx,%esi
		mov    %ax,_0ce536_data
		movswl %bx,%eax
		mov    %esi,%edx
		test   %eax,%eax
		jge    _0543bf_jump
		xor    %ebx,%ebx

	_0543bf_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _0543c8_jump
		xor    %edx,%edx

	_0543c8_jump:
		mov    _0ce50c_data,%ax
		neg    %eax
		add    $0x000008,%eax
		mov    %ax,_0c259a_data
		mov    %ebx,%eax
		add    $0x000008,%eax
		mov    %ax,_0c259c_data
		mov    _0ce504_data,%ax
		neg    %eax
		mov    %dx,_0c25a0_data
		mov    %ax,_0c259e_data
		mov    %bx,_0c24f6_data
		mov    %dx,_0c24f4_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054410_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c247c_data,%bx
		mov    _0c247e_data,%cx
		mov    _0ce50c_data,%eax
		movswl %bx,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _054439_jump
		mov    _0ce50c_data,%bx
		neg    %ebx

	_054439_jump:
		mov    _0c24f6_data,%dx
		cmp    %dx,%bx
		jle    _054447_jump
		mov    %edx,%ebx

	_054447_jump:
		mov    _0ce504_data,%eax
		movswl %cx,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _05445e_jump
		mov    _0ce504_data,%cx
		neg    %ecx

	_05445e_jump:
		mov    _0c24f4_data,%si
		cmp    %si,%cx
		jle    _05446c_jump
		mov    %esi,%ecx

	_05446c_jump:
		mov    %cx,_0c247e_data
		mov    %bx,_0c247c_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0546ac_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    _0c24f6_data,%di
		mov    %eax,%esi
		sub    _0ce50c_data,%ax
		mov    %eax,(%esp)
		mov    _0ce510_data,%ax
		sub    %edx,%eax
		mov    %eax,0x000004(%esp)
		mov    %ebx,%eax
		sub    _0ce504_data,%ax
		mov    %eax,0x00000c(%esp)
		mov    _0ce508_data,%ax
		sub    %ecx,%eax
		mov    %eax,0x000008(%esp)
		movswl %bx,%eax
		mov    %eax,_0ce504_data
		movswl %cx,%eax
		mov    %eax,_0ce508_data
		movswl %si,%eax
		mov    %eax,_0ce50c_data
		movswl %dx,%eax
		mov    _0ce508_data,%edx
		mov    %eax,_0ce510_data
		cmp    $0x0000c8,%edx
		jle    _054721_jump
		movl   $0x0000c8,_0ce508_data

	_054721_jump:
		cmpl   $0x000000,_0ce504_data
		jge    _054732_jump
		xor    %esi,%esi
		mov    %esi,_0ce504_data

	_054732_jump:
		cmpl   $0x000140,_0ce510_data
		jle    _054748_jump
		movl   $0x000140,_0ce510_data

	_054748_jump:
		cmpl   $0x000004,_0ce50c_data
		jge    _05475b_jump
		movl   $0x000004,_0ce50c_data

	_05475b_jump:
		cmpl   $0x000004,_0ce50c_data
		jl     _0547f0_jump
		mov    (%esp),%eax
		mov    _0c259a_data,%dx
		mov    _0c259c_data,%bx
		sub    %eax,%edx
		mov    0x000004(%esp),%eax
		mov    %dx,_0c259a_data
		add    %eax,%ebx
		mov    _0c2598_data,%eax
		sar    $0x000010,%eax
		mov    %bx,_0c259c_data
		cmp    $0x00000c,%eax
		jle    _0547a5_jump
		movw   $0x00000c,_0c259a_data

	_0547a5_jump:
		mov    _0ce532_data,%eax
		mov    _0c259a_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    $0x000008,%eax
		cmp    %eax,%edx
		jge    _0547ce_jump
		mov    _0ce534_data,%ax
		add    $0x000008,%eax
		mov    %ax,_0c259c_data

	_0547ce_jump:
		mov    0x000004(%esp),%esi
		mov    _0ce534_data,%dx
		add    %esi,%edi
		cmp    %dx,%di
		jge    _0547e2_jump
		mov    %edx,%edi

	_0547e2_jump:
		mov    _0c247c_data,%bx
		cmp    %bx,%di
		jge    _0547f0_jump
		mov    %ebx,%edi

	_0547f0_jump:
		cmpl   $0x000000,_0ce504_data
		jl     _054892_jump
		mov    0x00000c(%esp),%eax
		mov    _0c259e_data,%cx
		mov    _0c25a0_data,%si
		sub    %eax,%ecx
		mov    0x000008(%esp),%eax
		mov    %cx,_0c259e_data
		add    %eax,%esi
		mov    _0c259c_data,%eax
		sar    $0x000010,%eax
		mov    %si,_0c25a0_data
		test   %eax,%eax
		jle    _054839_jump
		xor    %eax,%eax
		mov    %ax,_0c259e_data

	_054839_jump:
		mov    _0c25a0_data,%ax
		mov    _0ce536_data,%dx
		cmp    %dx,%ax
		jge    _054852_jump
		mov    %dx,_0c25a0_data

	_054852_jump:
		mov    0x000008(%esp),%eax
		mov    _0c24f4_data,%bx
		add    %eax,%ebx
		mov    _0ce536_data,%cx
		mov    %bx,_0c24f4_data
		cmp    %cx,%bx
		jge    _054879_jump
		mov    %cx,_0c24f4_data

	_054879_jump:
		mov    _0c24f4_data,%ax
		mov    _0c247e_data,%si
		cmp    %si,%ax
		jge    _054892_jump
		mov    %si,_0c24f4_data

	_054892_jump:
		mov    %di,_0c24f6_data
		call   _054410_func
		xor    %ecx,%ecx
		mov    _0c24f6_data,%di
		mov    _0ce510_data,%dx
		movswl %di,%ebx
		mov    %dx,%cx
		add    %ebx,%ecx
		mov    _0c24b2_data,%ebx
		sar    $0x000010,%ebx
		shl    $0x000004,%ebx
		mov    _0ce508_data,%ax
		cmp    %ebx,%ecx
		jle    _0548d8_jump
		mov    _0c24b4_data,%di
		shl    $0x000004,%edi
		sub    %edx,%edi

	_0548d8_jump:
		mov    _0c24f2_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    %ax,%dx
		add    %edx,%ebx
		mov    _0c24b4_data,%edx
		sar    $0x000010,%edx
		shl    $0x000004,%edx
		cmp    %edx,%ebx
		jle    _05490b_jump
		mov    _0c24b6_data,%dx
		shl    $0x000004,%edx
		sub    %eax,%edx
		mov    %dx,_0c24f4_data

	_05490b_jump:
		mov    _0ce50c_data,%eax
		mov    %eax,_0ce52c_data
		mov    _0ce510_data,%eax
		mov    %eax,_0ce530_data
		mov    _0ce504_data,%eax
		mov    %eax,_0ce524_data
		mov    _0ce508_data,%eax
		mov    %eax,_0ce528_data
		mov    %di,_0c24f6_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    



_054940_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,0x000004(%esp)
		mov    $0x000001,%edx
		mov    $0x00000c,%ebx
		mov    _0c2474_data,%eax
		mov    $0x000004,%ebp
		mov    %edx,0x000008(%esp)
		mov    0x000044(%eax),%ax
		mov    %ebx,(%esp)
		mov    %ax,0x000010(%esp)
		jmp    _054988_jump

	_054973_jump:
		mov    (%esp),%edx
		mov    0x000008(%esp),%ebx
		add    $0x000004,%ebp
		add    $0x00000c,%edx
		inc    %ebx
		mov    %edx,(%esp)
		mov    %ebx,0x000008(%esp)

	_054988_jump:
		mov    0x00000e(%esp),%eax
		mov    0x000008(%esp),%ecx
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		jbe    _054a22_jump
		mov    _0c2474_data,%esi
		mov    (%esp),%edi
		mov    (%esi),%esi
		add    %edi,%esi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000006(%esi),%dl
		mov    0x000005(%esi),%al
		mov    %dx,0x00000c(%esp)
		test   $0x000001,%al
		je     _0549c0_jump
		and    $0x010000,%eax

	_0549c0_jump:
		mov    0x00000a(%esp),%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    0x000004(%esp),%eax
		call   _077220_func
		mov    %eax,_0ce57c_data(%ebp)
		mov    _0c2474_data,%eax
		mov    0x000008(%eax),%ebx
		mov    (%esi),%eax
		xor    %edi,%edi
		add    %eax,%ebx
		mov    _0ce57c_data(%ebp),%eax
		jmp    _0549f1_jump

	_0549f0_jump:
		inc    %edi

	_0549f1_jump:
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%edi
		jae    _054973_jump
		xor    %edx,%edx
		jmp    _054a0a_jump

	_054a04_jump:
		movb   $0x000000,(%eax)

	_054a07_jump:
		inc    %ebx
		inc    %eax
		inc    %edx

	_054a0a_jump:
		xor    %ecx,%ecx
		mov    0x000005(%esi),%cl
		cmp    %ecx,%edx
		jae    _0549f0_jump
		mov    (%ebx),%cl
		and    $0x0000ff,%ecx
		jne    _054a04_jump
		movb   $0x0000ff,(%eax)
		jmp    _054a07_jump

	_054a22_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054a30_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000048,%esp
		mov    %eax,%ebp
		mov    %edx,%ecx
		mov    0x000008(%edx),%eax
		mov    %eax,0x000020(%esp)
		mov    0x000020(%esp),%edx
		xor    %eax,%eax
		mov    0x000005(%edx),%al
		cmp    $0x000001,%eax
		jle    _054da5_jump
		xor    %eax,%eax
		mov    0x000004(%edx),%al
		cmp    $0x000001,%eax
		jle    _054da5_jump
		mov    (%edx),%eax
		sar    $0x000010,%eax
		movswl (%edx),%edx
		mov    %eax,%ebx
		add    %edx,%ebp
		shl    $0x000008,%ebx
		shl    $0x000006,%eax
		add    %ebx,%ebp
		mov    0x000020(%esp),%edx
		add    %eax,%ebp
		xor    %eax,%eax
		mov    0x000006(%edx),%ax
		mov    %eax,0x000010(%esp)
		mov    (%edx),%ax
		mov    %ax,0x000038(%esp)
		mov    %ax,0x000040(%esp)
		mov    0x000002(%edx),%ax
		mov    %eax,0x00002c(%esp)
		mov    %ax,0x000034(%esp)
		xor    %edx,%edx
		mov    0x000010(%esp),%eax
		mov    %edx,0x000028(%esp)
		mov    %eax,0x000004(%esp)
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    %ebp,(%esp)
		add    %eax,%eax
		shl    $0x000002,%edx
		mov    %eax,0x000018(%esp)
		jmp    _054b0e_jump

	_054ac4_jump:
		mov    0x000032(%esp),%ebx
		mov    0x00003e(%esp),%eax
		mov    %ebp,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%edx,%esi,1),%esi
		call   _015584_func

	_054adf_jump:
		mov    0x000040(%esp),%ebx
		mov    0x000018(%esp),%eax
		mov    0x000028(%esp),%esi
		add    $0x000010,%ebp
		add    $0x000004,%edx
		add    $0x000010,%ebx
		add    $0x000006,%eax
		inc    %esi
		mov    %bx,0x000040(%esp)
		mov    0x000010(%esp),%ebx
		mov    %eax,0x000018(%esp)
		inc    %ebx
		mov    %esi,0x000028(%esp)
		mov    %ebx,0x000010(%esp)

	_054b0e_jump:
		mov    0x000020(%esp),%ebx
		xor    %eax,%eax
		mov    0x000004(%ebx),%al
		cmp    0x000028(%esp),%eax
		jle    _054b51_jump
		mov    0x000018(%esp),%edi
		mov    (%ecx),%eax
		add    %edi,%eax
		mov    0x000004(%eax),%al
		and    $0x0000ff,%eax
		je     _054adf_jump
		cmp    $0x000001,%eax
		jne    _054ac4_jump
		mov    0x000032(%esp),%ebx
		mov    0x00003e(%esp),%eax
		mov    %ebp,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%edx,%esi,1),%esi
		call   _01571c_func
		jmp    _054adf_jump

	_054b51_jump:
		mov    (%esp),%edx
		mov    0x000004(%esp),%ebx
		mov    0x000014(%ecx),%eax
		mov    $0x000001,%esi
		sar    $0x000010,%eax
		add    $0x001400,%edx
		add    %eax,%ebx
		mov    %esi,0x00001c(%esp)
		jmp    _054c7e_jump

	_054b74_jump:
		mov    0x000036(%esp),%eax
		movswl %bx,%ebx
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _015584_func

	_054b8b_jump:
		mov    $0x000001,%ebp
		mov    0x000024(%esp),%eax
		add    %ebp,%eax
		add    $0x000010,%edx
		mov    %eax,0x000024(%esp)
		lea    0x000000(,%eax,4),%ebx
		mov    %ebp,0x000028(%esp)
		imul   $0x000006,%eax,%ebp
		jmp    _054bd5_jump

	_054bad_jump:
		mov    0x000004(%ecx),%esi
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		call   _015022_func

	_054bba_jump:
		mov    0x000024(%esp),%eax
		mov    0x000028(%esp),%esi
		add    $0x000010,%edx
		add    $0x000004,%ebx
		add    $0x000006,%ebp
		inc    %eax
		inc    %esi
		mov    %eax,0x000024(%esp)
		mov    %esi,0x000028(%esp)

	_054bd5_jump:
		mov    0x000020(%esp),%esi
		movzbl 0x000004(%esi),%esi
		mov    0x000028(%esp),%edi
		dec    %esi
		cmp    %edi,%esi
		jle    _054c05_jump
		mov    (%ecx),%esi
		movzbl 0x000004(%esi,%ebp,1),%esi
		test   %esi,%esi
		je     _054bba_jump
		cmp    $0x000001,%esi
		jne    _054bad_jump
		mov    0x000004(%ecx),%esi
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		call   _0151ff_func
		jmp    _054bba_jump

	_054c05_jump:
		mov    (%ecx),%eax
		movzbl 0x000004(%eax,%ebp,1),%esi
		test   %esi,%esi
		je     _054c5f_jump
		mov    0x00001c(%esp),%edi
		mov    0x00002c(%esp),%eax
		shl    $0x000004,%edi
		add    %eax,%edi
		mov    0x000028(%esp),%eax
		shl    $0x000004,%eax
		mov    %eax,0x000030(%esp)
		mov    0x000038(%esp),%eax
		add    0x000030(%esp),%eax
		cmp    $0x000001,%esi
		jne    _054c4c_jump
		movswl %di,%esi
		mov    0x000004(%ecx),%ebp
		cwtl   
		mov    %edx,%edi
		mov    (%ebx,%ebp,1),%ebp
		mov    %esi,%ebx
		mov    %ebp,%esi
		call   _01571c_func
		jmp    _054c5f_jump

	_054c4c_jump:
		movswl %di,%ebp
		mov    0x000004(%ecx),%esi
		cwtl   
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		mov    %ebp,%ebx
		call   _015584_func

	_054c5f_jump:
		mov    0x00000c(%esp),%edx
		mov    0x000008(%esp),%ebx
		mov    0x00001c(%esp),%ebp
		mov    0x000014(%ecx),%eax
		add    $0x001400,%edx
		sar    $0x000010,%eax
		inc    %ebp
		add    %eax,%ebx
		mov    %ebp,0x00001c(%esp)

	_054c7e_jump:
		mov    %ebx,0x000024(%esp)
		mov    0x000020(%esp),%ebx
		mov    0x00002c(%esp),%esi
		mov    0x000024(%esp),%ebp
		xor    %eax,%eax
		mov    0x00001c(%esp),%edi
		mov    0x000005(%ebx),%al
		mov    0x00001c(%esp),%ebx
		shl    $0x000002,%ebp
		shl    $0x000004,%ebx
		dec    %eax
		add    %esi,%ebx
		cmp    %edi,%eax
		jle    _054ced_jump
		mov    0x000024(%esp),%eax
		mov    %eax,0x000008(%esp)
		imul   $0x000006,%eax,%esi
		mov    (%ecx),%eax
		mov    %edx,0x00000c(%esp)
		mov    0x000004(%esi,%eax,1),%al
		and    $0x0000ff,%eax
		je     _054b8b_jump
		cmp    $0x000001,%eax
		jne    _054b74_jump
		mov    0x000036(%esp),%eax
		movswl %bx,%ebx
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _01571c_func
		jmp    _054b8b_jump

	_054ced_jump:
		mov    0x000038(%esp),%eax
		mov    %bx,0x000044(%esp)
		mov    %ax,0x00003c(%esp)
		xor    %eax,%eax
		mov    0x000024(%esp),%ebx
		mov    %eax,0x000028(%esp)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		add    %eax,%eax
		mov    %eax,0x000014(%esp)
		jmp    _054d60_jump

	_054d16_jump:
		mov    0x000042(%esp),%ebx
		mov    0x00003a(%esp),%eax
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _015584_func

	_054d31_jump:
		mov    0x00003c(%esp),%edi
		mov    0x000014(%esp),%esi
		mov    0x000028(%esp),%eax
		add    $0x000010,%edx
		add    $0x000004,%ebp
		add    $0x000010,%edi
		add    $0x000006,%esi
		inc    %eax
		mov    %di,0x00003c(%esp)
		mov    0x000024(%esp),%edi
		mov    %esi,0x000014(%esp)
		inc    %edi
		mov    %eax,0x000028(%esp)
		mov    %edi,0x000024(%esp)

	_054d60_jump:
		mov    0x000020(%esp),%ebx
		xor    %eax,%eax
		mov    0x000028(%esp),%edi
		mov    0x000004(%ebx),%al
		cmp    %edi,%eax
		jle    _054da5_jump
		mov    0x000014(%esp),%ebx
		mov    (%ecx),%eax
		add    %ebx,%eax
		mov    0x000004(%eax),%al
		and    $0x0000ff,%eax
		je     _054d31_jump
		cmp    $0x000001,%eax
		jne    _054d16_jump
		mov    0x000042(%esp),%ebx
		mov    0x00003a(%esp),%eax
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _01571c_func
		jmp    _054d31_jump

	_054da5_jump:
		add    $0x000048,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_054db0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    _0ce508_data,%edx
		mov    _0ce504_data,%ecx
		mov    _0ce510_data,%ebx
		mov    _0ce50c_data,%eax
		call   _016349_func
		mov    _0cdefc_data,%eax
		mov    %eax,_0cdf04_data
		lea    0x000004(%eax),%ebx
		mov    _0c94a4_data,%edx
		mov    $_0ce550_data,%eax
		mov    %ebx,_0cdefc_data
		call   _054244_func
		mov    $0x00fa00,%ebx
		mov    _095b08_data,%eax
		xor    %edx,%edx
		call   _0787d0_func
		mov    _0cdefc_data,%edi
		call   _014f74_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054e14_func:
		mov    _0cdf04_data,%eax
		mov    %eax,_0cdefc_data
		mov    %eax,_0ccfd0_data
		ret    



_054e30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c519e_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _054e69_jump
		mov    %edx,%eax
		push   $0xffffffcd
		shl    $0x000005,%eax
		mov    $0x000015,%ecx
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		mov    $0x000002,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01ce68_func

	_054e69_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054e70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    _0c519e_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _054f0c_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		lea    0x000008(%esp),%ebx
		push   %ebx
		lea    0x000008(%esp),%ebx
		lea    0x000010(%esp),%ecx
		push   %ebx
		mov    $0x000002,%edx
		lea    0x000008(%esp),%ebx
		call   _01d840_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    $0x000015,%eax
		mov    %eax,0x000028(%esi)
		mov    0x00000c(%esp),%eax
		sub    $0x000043,%eax
		mov    %ax,0x000008(%esp)
		mov    0x000040(%esi),%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		lea    (%eax,%ebx,1),%ecx
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x00002c(%esi),%eax
		cmp    %ebx,%eax
		jl     _054ef8_jump
		cmp    %ecx,%eax
		jg     _054ef8_jump
		mov    $0x000001,%eax
		jmp    _054efa_jump

	_054ef8_jump:
		xor    %eax,%eax

	_054efa_jump:
		test   %eax,%eax
		je     _054f0c_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d4a8_func

	_054f0c_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054f14_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,0x000010(%esp)
		mov    %bl,%cl
		mov    _0c1b04_data,%esi
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _054f4b_jump
		jmp    _0550b7_jump

	_054f3b_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _0550b7_jump

	_054f4b_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000049,%edx
		jne    _054f3b_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _054f3b_jump
		test   %cl,%cl
		je     _054f7d_jump
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _054f9f_jump

	_054f7d_jump:
		mov    0x000081(%edi),%ah
		lea    0x000081(%esi),%edx
		test   $0x000008,%ah
		sete   %al
		mov    (%edx),%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,(%edx)

	_054f9f_jump:
		mov    0x000010(%esp),%eax
		mov    %ax,0x000042(%esi)
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %edi,%eax
		call   _01d840_func
		mov    0x00000a(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x000028(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _054fee_jump
		mov    -0x000002(%esp),%eax
		mov    0x000028(%esi),%ebx
		sar    $0x000010,%eax
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)

	_054fee_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    0x000069(%esi),%dl
		add    %edx,%eax
		mov    0x000002(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000081(%esi),%al
		mov    %edx,0x00002c(%esi)
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _058bb4_func
		mov    %esi,%eax
		call   _01dcec_func
		orb    $0x000004,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f584_func
		mov    0x000081(%esi),%dl
		xor    %eax,%eax
		and    $0x0000bf,%dl
		mov    _0c1b84_data,%al
		mov    %dl,0x000081(%esi)
		mov    _0c1b44_data,%dx
		mov    0x000028(%esi),%bx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000068(%esi),%al
		mov    0x000081(%esi),%bl
		sub    %eax,%edx
		test   $0x000008,%bl
		je     _05507e_jump
		mov    $0x000001,%eax
		jmp    _055083_jump

	_05507e_jump:
		mov    $0xffffffff,%eax

	_055083_jump:
		movswl %dx,%edx
		imul   %eax,%edx
		xor    %ebx,%ebx
		movswl %dx,%eax
		cmp    %ebx,%eax
		jge    _055094_jump
		mov    %ebx,%eax

	_055094_jump:
		mov    0x000081(%esi),%bh
		add    $0x00000f,%eax
		and    $0x0000fc,%bh
		mov    %ax,0x000052(%esi)
		mov    %bh,0x000081(%esi)
		mov    0x000034(%edi),%ax
		mov    %ax,0x000050(%esi)
		decb   0x00007d(%edi)

	_0550b7_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0550c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x00001a,%eax
		jge    _0550d5_jump
		movw   $0x000000,0x000052(%ecx)

	_0550d5_jump:
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _055127_jump
		mov    0x00006b(%ecx),%al
		cmp    $0x00001a,%eax
		jne    _055127_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _055127_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _054f14_func
		movw   $0x000001,0x000052(%ecx)

	_055127_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05512c_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _05513e_jump
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		je     _055151_jump

	_05513e_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		cmp    $0x000001,%edx
		jne    _055166_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		jne    _055166_jump

	_055151_jump:
		xor    %edx,%edx
		mov    0x00007d(%eax),%dl
		test   %edx,%edx
		jle    _055166_jump
		mov    $0x000002,%ebx
		xor    %edx,%edx
		call   _01d4a8_func

	_055166_jump:
		pop    %edx
		pop    %ebx
		ret    



_05516c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    0x000081(%eax),%bl
		call   _01dc54_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		shl    $0x000004,%bl
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    0x00006c(%ecx),%al
		shr    $0x000007,%bl
		add    %edx,%eax
		mov    %bl,%dl
		and    $0x000001,%dl
		shl    $0x000003,%dl
		cmp    $0x000006,%eax
		jb     _055457_jump
		jbe    _055394_jump
		cmp    $0x000100,%eax
		jb     _055448_jump
		jbe    _0552b1_jump
		cmp    $0x000205,%eax
		jb     _055431_jump
		jbe    _05547f_jump
		cmp    $0x000207,%eax
		je     _055388_jump

	_0551d8_jump:
		mov    0x00007f(%ecx),%dh
		test   %dh,%dh
		je     _0551e6_jump
		mov    %dh,%bl
		dec    %bl
		mov    %bl,0x00007f(%ecx)

	_0551e6_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0551eb_jump:
		movw   $0x00fff8,0x000042(%ecx)
		movw   $0x000000,0x000040(%ecx)
		jmp    _0551d8_jump

	_0551f9_jump:
		mov    _0c1ed2_data,%al
		movw   $0x000000,0x000040(%ecx)
		test   %al,%al
		je     _055218_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _0551d8_jump

	_055218_jump:
		xor    %eax,%eax
		mov    0x00007d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _055250_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %bl,%al
		je     _055240_jump
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _01d498_func
		jmp    _0551d8_jump

	_055240_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		jmp    _0551d8_jump

	_055250_jump:
		mov    %bl,%al
		and    $0x000001,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		jmp    _0551d8_jump

	_05526f_jump:
		mov    0x000081(%ecx),%dh
		and    $0x0000f7,%dh
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,0x000081(%ecx)
		mov    _0c1ed2_data,%bh
		movw   $0x000000,0x000040(%ecx)
		test   %bh,%bh
		je     _0552a5_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _0551d8_jump

	_0552a5_jump:
		mov    %ecx,%eax
		call   _0550c0_func
		jmp    _0551d8_jump

	_0552b1_jump:
		cmpb   $0x000000,_0c1ed2_data
		je     _0552cd_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _0551d8_jump

	_0552cd_jump:
		xor    %eax,%eax
		mov    0x00007d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _055378_jump
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _024568_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		jne    _05532b_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%esi
		mov    0x000068(%ecx),%al
		add    %eax,%esi
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		add    %esi,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e288_func
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		jne    _055347_jump

	_05532b_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%bl
		jne    _055347_jump
		mov    0x000081(%ecx),%bl
		test   $0x000008,%bl
		sete   %bl

	_055347_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %bl,%al
		je     _055365_jump
		mov    $0x000006,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func

	_055365_jump:
		mov    %ecx,%eax
		call   _04d2c4_func
		mov    %ecx,%eax
		call   _024ba8_func
		jmp    _0551d8_jump

	_055378_jump:
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _0551d8_jump

	_055388_jump:
		mov    %ecx,%eax
		call   _054e70_func
		jmp    _0551d8_jump

	_055394_jump:
		mov    %bl,%al
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		movw   $0x000000,0x000040(%ecx)
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    _0c1ed2_data,%dl
		mov    %ah,0x000081(%ecx)
		test   %dl,%dl
		je     _0551d8_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _0551d8_jump

	_0553db_jump:
		mov    0x000081(%ecx),%bh
		and    $0x0000f7,%bh
		mov    %bh,%al
		or     %dl,%al
		mov    %al,0x000081(%ecx)
		mov    _0c1ed2_data,%ah
		movw   $0x000000,0x000040(%ecx)
		test   %ah,%ah
		jne    _0551d8_jump
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _01d498_func
		jmp    _0551d8_jump

	_055413_jump:
		mov    0x000081(%ecx),%dh
		and    $0x0000f7,%dh
		movw   $0x000000,0x000040(%ecx)
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _0551d8_jump

	_055431_jump:
		cmp    $0x000202,%eax
		jb     _0551d8_jump
		mov    %ecx,%eax
		call   _054e30_func
		jmp    _0551d8_jump

	_055448_jump:
		cmp    $0x000007,%eax
		jbe    _055413_jump
		cmp    $0x000008,%eax
		je     _0553db_jump
		jmp    _0551d8_jump

	_055457_jump:
		cmp    $0x000002,%eax
		jb     _055473_jump
		jbe    _05526f_jump
		cmp    $0x000004,%eax
		jb     _0551eb_jump
		jbe    _055394_jump
		jmp    _05547f_jump

	_055473_jump:
		test   %eax,%eax
		jbe    _0551f9_jump
		movb   $0x000064,0x00007f(%ecx)

	_05547f_jump:
		movw   $0x000000,0x000040(%ecx)
		jmp    _0551d8_jump



_05548c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00007f(%eax)
		jne    _055556_jump
		mov    $0x000001,%dl
		mov    %ecx,%eax
		mov    %dl,_0c1ed3_data
		call   _01e92c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _055505_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    _0c519e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _055556_jump
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%ecx
		add    %ecx,%eax
		call   _058b14_func
		mov    _0c519e_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0c1b04_data,%eax
		movw   $0x000000,0x000048(%eax,%ecx,4)
		pop    %ecx
		pop    %ebx
		ret    

	_055505_jump:
		mov    _0c1ec0_data,%edx
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _05551e_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _055548_jump

	_05551e_jump:
		jl     _055541_jump
		testb  $0x000008,0x000081(%edx)
		je     _055541_jump
		andb   $0x0000f7,0x000081(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %ecx
		pop    %ebx
		ret    

	_055541_jump:
		orb    $0x000008,0x000081(%ecx)

	_055548_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func

	_055556_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05555c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		mov    0x00004e(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _055594_jump
		andb   $0x0000fb,0x000081(%ebx)
		mov    %ebx,%eax
		call   _072f20_func
		jmp    _0556f1_jump

	_055594_jump:
		mov    0x000050(%ebx),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		jg     _0556d7_jump
		mov    0x000081(%ebx),%dl
		test   $0x000001,%dl
		je     _0555cc_jump
		mov    0x000081(%ebx),%cl
		movl   $0x000000,0x000024(%ebx)
		and    $0x0000fb,%cl
		mov    %cl,0x000081(%ebx)
		incb   0x00007d(%eax)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0555cc_jump:
		mov    %dl,%dh
		or     $0x000003,%dh
		mov    %dh,0x000081(%ebx)
		xor    %edx,%edx
		mov    0x000028(%ebx),%cx
		mov    0x000068(%ebx),%dl
		mov    0x000028(%eax),%si
		add    %ecx,%edx
		mov    0x000068(%eax),%al
		sub    %esi,%edx
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %dx,0x000052(%ebx)
		mov    0x000050(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0555ff_jump
		neg    %eax

	_0555ff_jump:
		mov    %ax,0x000052(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_055609_jump:
		mov    0x000056(%ebx),%ax
		mov    %ax,0x000040(%ebx)
		mov    0x000048(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _055629_jump
		mov    0x00004a(%ebx),%ax
		mov    %ax,0x000042(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_055629_jump:
		testb  $0x000001,0x000081(%ebx)
		je     _0556bb_jump
		mov    0x00004e(%ebx),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000028(%eax),%cx
		mov    0x000068(%eax),%dl
		mov    0x000028(%ebx),%si
		add    %edx,%ecx
		xor    %edx,%edx
		sub    %esi,%ecx
		mov    0x000068(%ebx),%dl
		sub    %edx,%ecx
		xor    %edx,%edx
		mov    %cx,0x000052(%ebx)
		xor    %ecx,%ecx
		mov    0x000069(%eax),%dl
		mov    0x000074(%eax),%cl
		add    %ecx,%edx
		sar    %edx
		mov    0x00002c(%eax),%ecx
		add    %edx,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%ebx),%al
		mov    0x000069(%ebx),%dl
		add    %edx,%eax
		mov    0x00002c(%ebx),%esi
		sar    %eax
		add    %esi,%eax
		sub    %eax,%ecx
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		imul   %ecx,%eax
		mov    0x000052(%ebx),%di
		mov    %ax,0x000042(%ebx)
		test   %di,%di
		je     _0556ab_jump
		cwtd   
		idiv   %di
		mov    %ax,0x000042(%ebx)

	_0556ab_jump:
		mov    0x000050(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0556b7_jump
		neg    %eax

	_0556b7_jump:
		mov    %ax,0x000052(%ebx)

	_0556bb_jump:
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0556c7_jump
		neg    %eax

	_0556c7_jump:
		cwtl   
		call   _04d240_func
		sub    %ax,0x000052(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0556d7_jump:
		mov    0x000081(%ebx),%cl
		and    $0x0000fd,%cl
		mov    0x000070(%ebx),%al
		mov    %cl,0x000081(%ebx)
		cmp    $0x000014,%al
		je     _055609_jump

	_0556f1_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055700_func:
		push   %ecx
		push   %esi
		mov    $0x00000f,%esi
		and    $0x0000ff,%edx
		sub    %edx,%esi
		lea    (%esi,%esi,1),%edx
		mov    $0x000003,%esi
		mov    %dl,%cl
		mov    $0xffffffff,%edx
		shl    %cl,%esi
		shl    %cl,%ebx
		mov    (%eax),%ecx
		sub    %esi,%edx
		and    %edx,%ecx
		mov    %ecx,%esi
		or     %ebx,%esi
		mov    %esi,(%eax)
		pop    %esi
		pop    %ecx
		ret    



_055734_func:
		push   %esi
		push   %edi
		mov    %ecx,%esi
		mov    (%eax),%eax
		mov    $0x00000f,%ecx
		and    $0x0000ff,%edx
		sub    %edx,%ecx
		lea    (%ecx,%ecx,1),%edx
		mov    $0x000003,%edi
		mov    %dl,%cl
		shl    %cl,%edi
		and    %edi,%eax
		sar    %cl,%eax
		mov    %eax,%edx
		and    $0x000002,%edx
		sar    %edx
		and    $0x000001,%eax
		mov    %edx,(%ebx)
		mov    %eax,(%esi)
		pop    %edi
		pop    %esi
		ret    

	_055768_jump:
		push   %ebx
		push   %ecx
		xor    %ebx,%ebx
		mov    %dl,%cl
		mov    %dx,%bx
		and    $0x000007,%cl
		sar    $0x000003,%ebx
		mov    $0x000001,%dl
		movswl %bx,%ebx
		shl    %cl,%dl
		or     %dl,(%ebx,%eax,1)
		pop    %ecx
		pop    %ebx
		ret    

	_0557a8_jump:
		push   %ebx
		push   %ecx
		xor    %ebx,%ebx
		mov    %dx,%bx
		sar    $0x000003,%ebx
		mov    %dl,%cl
		movswl %bx,%ebx
		and    $0x000007,%cl
		add    %eax,%ebx
		mov    $0x000001,%al
		shl    %cl,%al
		and    (%ebx),%al
		pop    %ecx
		pop    %ebx
		ret    



_0557d0_func:
		push   %edx
		add    $0x000080,%eax
		and    $0x000001,%ah
		movswl %ax,%edx
		cmp    $0x000100,%edx
		jge    _055800_jump
		sub    $0x000080,%eax
		movswl %ax,%edx
		test   %edx,%edx
		jge    _0557f3_jump
		neg    %eax

	_0557f3_jump:
		movswl %ax,%edx
		mov    _0966e0_data(,%edx,2),%ax
		pop    %edx
		ret    

	_055800_jump:
		sub    $0x000180,%eax
		movswl %ax,%edx
		test   %edx,%edx
		jge    _05580f_jump
		neg    %eax

	_05580f_jump:
		movswl %ax,%edx
		mov    _0966e0_data(,%edx,2),%ax
		neg    %eax
		pop    %edx
		ret    



_055820_func:
		push   %edx
		and    $0x000001,%ah
		movswl %ax,%edx
		cmp    $0x000100,%edx
		jge    _055849_jump
		sub    $0x000080,%eax
		movswl %ax,%edx
		test   %edx,%edx
		jge    _05583e_jump
		neg    %eax

	_05583e_jump:
		cwtl   
		mov    _0966e0_data(,%eax,2),%ax
		pop    %edx
		ret    

	_055849_jump:
		sub    $0x000180,%eax
		movswl %ax,%edx
		test   %edx,%edx
		jge    _055858_jump
		neg    %eax

	_055858_jump:
		cwtl   
		mov    _0966e0_data(,%eax,2),%ax
		neg    %eax
		pop    %edx
		ret    



_055868_func:
		push   %ecx
		push   %esi
		and    $0x000001,%ah
		movswl %ax,%ecx
		cmp    $0x000100,%ecx
		jge    _0558bc_jump
		sub    $0x000080,%eax
		movswl %ax,%ecx
		test   %ecx,%ecx
		jge    _05589b_jump
		neg    %eax
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _0966e0_data(,%esi,2),%cx
		jmp    _0558ac_jump

	_05589b_jump:
		mov    $0x000080,%esi
		sub    %ecx,%esi
		mov    _0966e0_data(,%esi,2),%cx
		neg    %ecx

	_0558ac_jump:
		mov    %cx,(%ebx)
		movswl %ax,%ebx
		mov    _0966e0_data(,%ebx,2),%ax
		jmp    _055900_jump

	_0558bc_jump:
		sub    $0x000180,%eax
		movswl %ax,%ecx
		test   %ecx,%ecx
		jge    _0558e1_jump
		neg    %eax
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _0966e0_data(,%esi,2),%cx
		neg    %ecx
		jmp    _0558f0_jump

	_0558e1_jump:
		mov    $0x000080,%esi
		sub    %ecx,%esi
		mov    _0966e0_data(,%esi,2),%cx

	_0558f0_jump:
		mov    %cx,(%ebx)
		movswl %ax,%ebx
		mov    _0966e0_data(,%ebx,2),%ax
		neg    %eax

	_055900_jump:
		mov    %ax,(%edx)
		pop    %esi
		pop    %ecx
		ret    



_055928_func:
		push   %edx
		add    $0x000080,%eax
		xor    %ah,%ah
		sub    $0x000080,%eax
		movswl %ax,%edx
		test   %edx,%edx
		jge    _05593f_jump
		neg    %eax

	_05593f_jump:
		cwtl   
		mov    _0966e0_data(,%eax,2),%ax
		pop    %edx
		ret    



_05594c_func:
		push   %ecx
		xor    %ah,%ah
		sub    $0x000080,%eax
		movswl %ax,%ecx
		test   %ecx,%ecx
		jge    _05595e_jump
		neg    %eax

	_05595e_jump:
		cwtl   
		mov    _0966e0_data(,%eax,2),%cx
		mov    %cx,(%edx)
		mov    $0x000080,%edx
		sub    %eax,%edx
		mov    _0966e0_data(,%edx,2),%ax
		mov    %ax,(%ebx)
		pop    %ecx
		ret    



_055980_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000060(%eax),%dx
		mov    %edx,%eax
		cmp    $0x000087,%dx
		jb     _055c62_jump
		jbe    _055a01_jump
		cmp    $0x0000c0,%dx
		jb     _055b17_jump
		cmp    $0x0000c2,%dx
		jbe    _055a42_jump
		cmp    $0x0000ea,%dx
		jb     _055a92_jump
		jbe    _055a01_jump
		cmp    $0x0000f6,%dx
		jb     _055a66_jump
		jbe    _055a47_jump
		cmp    $0x0000fb,%dx
		jb     _055a51_jump
		jbe    _055a47_jump
		cmp    $0x0000fc,%dx
		jbe    _055a4c_jump
		cmp    $0x0000fd,%dx
		je     _055a25_jump
		jmp    _055a42_jump

	_0559f4_jump:
		xor    %eax,%eax
		mov    0x000076(%ebx),%al
		test   %eax,%eax
		jne    _055a78_jump

	_055a01_jump:
		mov    $0x000002,%al
		pop    %edx
		pop    %ebx
		ret    

	_055a06_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _055a01_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000e,%eax
		jne    _055a01_jump

	_055a20_jump:
		mov    $0x000003,%al
		pop    %edx
		pop    %ebx
		ret    

	_055a25_jump:
		mov    _0c519e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _055a3a_jump
		mov    $0x000004,%eax
		pop    %edx
		pop    %ebx
		ret    

	_055a3a_jump:
		mov    $0x000007,%eax
		pop    %edx
		pop    %ebx
		ret    

	_055a42_jump:
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055a47_jump:
		mov    $0x000005,%al
		pop    %edx
		pop    %ebx
		ret    

	_055a4c_jump:
		mov    $0x000007,%al
		pop    %edx
		pop    %ebx
		ret    

	_055a51_jump:
		cmp    $0x0000f8,%dx
		jb     _055a42_jump
		jbe    _055a01_jump
		cmp    $0x0000f9,%dx
		je     _055a20_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055a66_jump:
		cmp    $0x0000ef,%dx
		jb     _055a7d_jump
		jbe    _055a20_jump
		cmp    $0x0000f4,%dx
		jb     _055a42_jump
		jbe    _055a42_jump

	_055a78_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_055a7d_jump:
		cmp    $0x0000ec,%dx
		jb     _055a42_jump
		jbe    _055a78_jump
		cmp    $0x0000ee,%dx
		je     _055a78_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055a92_jump:
		cmp    $0x0000cb,%dx
		jb     _055add_jump
		jbe    _055a20_jump
		cmp    $0x0000d5,%dx
		jb     _055ac6_jump
		jbe    _055a78_jump
		cmp    $0x0000dc,%dx
		jb     _055a42_jump
		cmp    $0x0000dd,%dx
		jbe    _055a01_jump
		cmp    $0x0000e0,%dx
		je     _055a01_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055ac6_jump:
		cmp    $0x0000cc,%dx
		jbe    _055a78_jump
		cmp    $0x0000d3,%dx
		je     _055a20_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055add_jump:
		cmp    $0x0000c6,%dx
		jb     _055b01_jump
		jbe    _055a20_jump
		cmp    $0x0000c7,%dx
		jbe    _055a78_jump
		cmp    $0x0000c9,%dx
		jbe    _055a20_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055b01_jump:
		cmp    $0x0000c4,%dx
		jb     _055a42_jump
		jbe    _055a42_jump

	_055b12_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    

	_055b17_jump:
		cmp    $0x00009d,%dx
		jb     _055bc9_jump
		jbe    _055b12_jump
		cmp    $0x0000ad,%dx
		jb     _055b80_jump
		jbe    _055d2f_jump
		cmp    $0x0000b7,%dx
		jb     _055b5f_jump
		jbe    _055a20_jump
		cmp    $0x0000bb,%dx
		jb     _055a42_jump
		jbe    _055a20_jump
		cmp    $0x0000be,%dx
		je     _055a20_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055b5f_jump:
		cmp    $0x0000b4,%dx
		jb     _055a42_jump
		jbe    _055a20_jump
		cmp    $0x0000b5,%dx
		je     _055a78_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055b80_jump:
		cmp    $0x0000a4,%dx
		jb     _055bae_jump
		jbe    _055a78_jump
		cmp    $0x0000a8,%dx
		jb     _055a42_jump
		jbe    _055a01_jump
		cmp    $0x0000aa,%dx
		je     _055a01_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055bae_jump:
		cmp    $0x00009e,%dx
		jbe    _055a78_jump
		cmp    $0x0000a1,%dx
		je     _055a01_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055bc9_jump:
		cmp    $0x000092,%dx
		jb     _055c19_jump
		jbe    _055a01_jump
		cmp    $0x000095,%dx
		jb     _055c09_jump
		jbe    _055b12_jump
		cmp    $0x000096,%dx
		jbe    _055a01_jump
		cmp    $0x00009a,%dx
		jb     _055a42_jump
		cmp    $0x00009b,%dx
		jbe    _055a20_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055c09_jump:
		cmp    $0x000093,%dx
		jbe    _0559f4_jump
		mov    $0x000006,%al
		pop    %edx
		pop    %ebx
		ret    

	_055c19_jump:
		cmp    $0x00008d,%dx
		jb     _055c41_jump
		jbe    _055a78_jump
		cmp    $0x00008e,%dx
		jbe    _055d2f_jump
		cmp    $0x00008f,%dx
		je     _055a01_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055c41_jump:
		cmp    $0x000089,%dx
		jb     _055a42_jump
		jbe    _055d2f_jump
		cmp    $0x00008a,%dx
		je     _055a20_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055c62_jump:
		cmp    $0x00004b,%dx
		jb     _055d89_jump
		jbe    _055a01_jump
		cmp    $0x000060,%dx
		jb     _055d0d_jump
		jbe    _055a47_jump
		cmp    $0x00006f,%dx
		jb     _055cd3_jump
		jbe    _055a47_jump
		cmp    $0x000079,%dx
		jb     _055cba_jump
		jbe    _055a01_jump
		cmp    $0x00007b,%dx
		jb     _055a42_jump
		jbe    _055a06_jump
		cmp    $0x000085,%dx
		je     _055a20_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055cba_jump:
		cmp    $0x000070,%dx
		jbe    _055a47_jump
		cmp    $0x000077,%dx
		je     _055a20_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055cd3_jump:
		cmp    $0x000066,%dx
		jb     _055cf4_jump
		jbe    _055a01_jump
		cmp    $0x00006d,%dx
		jb     _055a42_jump
		jbe    _055a47_jump
		mov    $0x000002,%al
		pop    %edx
		pop    %ebx
		ret    

	_055cf4_jump:
		cmp    $0x000061,%dx
		jbe    _055a20_jump
		cmp    $0x000062,%dx
		je     _055a78_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055d0d_jump:
		cmp    $0x000056,%dx
		jb     _055d53_jump
		jbe    _055a20_jump
		cmp    $0x00005d,%dx
		jb     _055d34_jump
		jbe    _055a01_jump
		cmp    $0x00005e,%dx
		jbe    _055a01_jump

	_055d2f_jump:
		mov    $0x000006,%al
		pop    %edx
		pop    %ebx
		ret    

	_055d34_jump:
		cmp    $0x000058,%dx
		jb     _055a42_jump
		jbe    _055a4c_jump
		cmp    $0x00005a,%dx
		jb     _055a42_jump
		mov    $0x000002,%al
		pop    %edx
		pop    %ebx
		ret    

	_055d53_jump:
		cmp    $0x00004f,%dx
		jb     _055d7a_jump
		jbe    _055a01_jump
		cmp    $0x000052,%dx
		jb     _055a42_jump
		jbe    _055d2f_jump
		cmp    $0x000053,%dx
		je     _055a01_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055d7a_jump:
		cmp    $0x00004d,%dx
		jb     _055a42_jump
		mov    $0x000003,%al
		pop    %edx
		pop    %ebx
		ret    

	_055d89_jump:
		cmp    $0x000029,%dx
		jb     _055e19_jump
		jbe    _055a01_jump
		cmp    $0x000037,%dx
		jb     _055ddb_jump
		jbe    _055d2f_jump
		cmp    $0x000042,%dx
		jb     _055dbc_jump
		jbe    _055a20_jump
		cmp    $0x000048,%dx
		jb     _055a42_jump
		mov    $0x000003,%al
		pop    %edx
		pop    %ebx
		ret    

	_055dbc_jump:
		cmp    $0x000039,%dx
		jb     _055a42_jump
		jbe    _055a01_jump
		cmp    $0x00003b,%dx
		jbe    _055a20_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055ddb_jump:
		cmp    $0x00002d,%dx
		jb     _055e00_jump
		jbe    _055a01_jump
		cmp    $0x00002e,%dx
		jbe    _055a20_jump
		cmp    $0x000030,%dx
		je     _055a01_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055e00_jump:
		cmp    $0x00002a,%dx
		jbe    _055a4c_jump
		cmp    $0x00002c,%dx
		je     _055a20_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055e19_jump:
		cmp    $0x000013,%dx
		jb     _055e69_jump
		jbe    _055a01_jump
		cmp    $0x00001c,%dx
		jb     _055e50_jump
		jbe    _055a20_jump
		cmp    $0x00001e,%dx
		jb     _055a42_jump
		jbe    _055a78_jump
		cmp    $0x00001f,%dx
		je     _055d2f_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055e50_jump:
		cmp    $0x000014,%dx
		jbe    _055a47_jump
		cmp    $0x000015,%dx
		je     _055a01_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055e69_jump:
		cmp    $0x000004,%dx
		jb     _055e94_jump
		jbe    _055a4c_jump
		cmp    $0x000007,%dx
		jb     _055a42_jump
		jbe    _055a47_jump
		cmp    $0x00000b,%dx
		je     _055a01_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    

	_055e94_jump:
		cmp    $0x000002,%dx
		je     _055d2f_jump
		mov    $0x000004,%al
		pop    %edx
		pop    %ebx
		ret    



_055ea4_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000001,_092244_data(,%eax,4)
		je     _055ecb_jump
		movl   $0xffff8300,0x000028(%edx)
		movl   $0xffff8300,0x00002c(%edx)
		jmp    _055ef0_jump

	_055ecb_jump:
		test   %eax,%eax
		je     _055ed8_jump
		cmp    $0x000009,%eax
		jne    _055ef0_jump

	_055ed8_jump:
		cmpl   $0x000000,0x000028(%edx)
		jge    _055ef0_jump
		movl   $0xffff8300,0x000028(%edx)
		movl   $0xffff8300,0x00002c(%edx)

	_055ef0_jump:
		movw   $0x000000,0x00005a(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    0x00006d(%edx),%al
		mov    %al,0x00006f(%edx)
		mov    0x00006c(%edx),%al
		mov    %al,0x00006e(%edx)
		mov    0x000076(%edx),%al
		mov    %al,0x000077(%edx)
		mov    0x000060(%edx),%ax
		movl   $0x000001,0x000030(%edx)
		mov    %eax,%ebx
		cmp    $0x000062,%ax
		jb     _0560cc_jump
		jbe    _055f63_jump
		cmp    $0x0000ae,%ax
		jb     _05602c_jump
		jbe    _055fa3_jump
		cmp    $0x0000d5,%ax
		jb     _055ff2_jump
		jbe    _055f63_jump
		cmp    $0x0000e1,%ax
		jb     _055fdf_jump
		jbe    _055fa3_jump
		cmp    $0x0000e2,%ax
		jbe    _055fac_jump
		cmp    $0x0000e3,%ax
		je     _055f7f_jump
		jmp    _055fd2_jump

	_055f63_jump:
		call   _0475e0_func
		jmp    _056206_jump

	_055f6d_jump:
		movb   $0x0000c8,0x00007a(%edx)
		jmp    _056206_jump

	_055f76_jump:
		movb   $0x0000a0,0x00007a(%edx)
		jmp    _056206_jump

	_055f7f_jump:
		movb   $0x00003c,0x00007a(%edx)
		jmp    _056206_jump

	_055f88_jump:
		movb   $0x0000b4,0x00007a(%edx)
		jmp    _056206_jump

	_055f91_jump:
		movb   $0x0000dc,0x00007a(%edx)
		jmp    _056206_jump

	_055f9a_jump:
		movb   $0x000064,0x00007a(%edx)
		jmp    _056206_jump

	_055fa3_jump:
		movb   $0x000096,0x00007a(%edx)
		jmp    _056206_jump

	_055fac_jump:
		movb   $0x000032,0x00007a(%edx)
		jmp    _056206_jump

	_055fb5_jump:
		movb   $0x0000fa,0x00007a(%edx)
		jmp    _056206_jump

	_055fbe_jump:
		movb   $0x000000,0x00007a(%edx)
		jmp    _056206_jump

	_055fc7_jump:
		movw   $0x000000,0x000050(%edx)
		jmp    _056206_jump

	_055fd2_jump:
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_055fdf_jump:
		cmp    $0x0000d9,%ax
		je     _055f76_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_055ff2_jump:
		cmp    $0x0000b8,%ax
		jb     _056015_jump
		jbe    _055fac_jump
		cmp    $0x0000bb,%ax
		jb     _055fd2_jump
		jbe    _055fa3_jump
		cmp    $0x0000d4,%ax
		je     _055fa3_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_056015_jump:
		cmp    $0x0000b7,%ax
		je     _055f88_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_05602c_jump:
		cmp    $0x00007a,%ax
		jb     _056082_jump
		jbe    _055f9a_jump
		cmp    $0x000099,%ax
		jb     _05606b_jump
		jbe    _055f6d_jump
		cmp    $0x0000a8,%ax
		jb     _055fd2_jump
		cmp    $0x0000a9,%ax
		jbe    _055fbe_jump
		cmp    $0x0000ac,%ax
		je     _055f91_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_05606b_jump:
		cmp    $0x000096,%ax
		je     _055f76_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_056082_jump:
		cmp    $0x000071,%ax
		jb     _0560b5_jump
		jbe    _055fc7_jump
		cmp    $0x000074,%ax
		jb     _055fd2_jump
		jbe    _055f6d_jump
		cmp    $0x000078,%ax
		je     _055f9a_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_0560b5_jump:
		cmp    $0x000064,%ax
		je     _055f91_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_0560cc_jump:
		cmp    $0x000032,%ax
		jb     _056176_jump
		jbe    _055f7f_jump
		cmp    $0x00003d,%ax
		jb     _056132_jump
		jbe    _055fa3_jump
		cmp    $0x000046,%ax
		jb     _05611b_jump
		jbe    _055f76_jump
		cmp    $0x000048,%ax
		jb     _055fd2_jump
		jbe    _055f9a_jump
		cmp    $0x000051,%ax
		je     _055fbe_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_05611b_jump:
		cmp    $0x000041,%ax
		je     _055f7f_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_056132_jump:
		cmp    $0x000038,%ax
		jb     _05615f_jump
		jbe    _055f91_jump
		cmp    $0x000039,%ax
		jbe    _055fb5_jump
		cmp    $0x00003c,%ax
		je     _055f91_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_05615f_jump:
		cmp    $0x000037,%ax
		je     _055f9a_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_056176_jump:
		cmp    $0x000014,%ax
		jb     _0561cc_jump
		jbe    _055f88_jump
		cmp    $0x000023,%ax
		jb     _0561b5_jump
		jbe    _055f9a_jump
		cmp    $0x000028,%ax
		jb     _055fd2_jump
		jbe    _055f9a_jump
		cmp    $0x00002b,%ax
		je     _055f9a_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_0561b5_jump:
		cmp    $0x000020,%ax
		je     _055fa3_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_0561cc_jump:
		cmp    $0x00000c,%ax
		jb     _0561ef_jump
		jbe    _055f88_jump
		cmp    $0x00000e,%ax
		je     _055f88_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_0561ef_jump:
		cmp    $0x000005,%ax
		je     _055f7f_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_056206_jump:
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

_056210_switch:
		.long   _05659c_case
		.long   _0565ab_case
		.long   _0565ba_case
		.long   _0565c9_case
		.long   _0565d8_case
		.long   _0565ed_case
		.long   _0565fc_case




_05622c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		movw   $0x000000,0x000048(%eax)
		movl   $0x000000,0x000024(%eax)
		call   _055980_func
		mov    %al,0x00007e(%ecx)
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		mov    _0930b4_data(,%eax,2),%ax
		mov    %ax,0x00005c(%ecx)
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x0000a3,%eax
		je     _056278_jump
		mov    0x00006f(%ecx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%ecx),%al
		mov    %al,0x00006c(%ecx)

	_056278_jump:
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00003c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		movw   $0x000000,0x000040(%ecx)
		add    %edx,%eax
		movw   $0x000000,0x000042(%ecx)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000002(%eax,%edx,8),%al
		movb   $0x000000,0x000073(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000000,0x000072(%ecx)
		movw   $0x00ffff,0x000056(%ecx)
		movw   $0x00ffff,0x00004a(%ecx)
		movb   $0x000000,0x00007b(%ecx)
		mov    %al,0x00006a(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x00ffff,0x000046(%ecx)
		and    $0x0000f7,%ah
		mov    0x000010(%ecx),%ebx
		mov    %ah,0x000081(%ecx)
		lea    0x000081(%ecx),%eax
		test   %ebx,%ebx
		setne  %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		shl    $0x000004,%dl
		mov    %dh,%bl
		or     %dl,%bl
		xor    %edx,%edx
		mov    %bl,(%eax)
		mov    $0x000005,%ebx
		lea    0x000062(%ecx),%eax
		call   _0787d0_func
		mov    %ecx,%eax
		call   _058b40_func
		movw   $0x000000,0x000058(%ecx)
		movb   $0x0000ff,0x00007c(%ecx)
		movl   $0x000001,0x000030(%ecx)
		movb   $0x000000,0x00007f(%ecx)
		movb   $0x000000,0x00007d(%ecx)
		mov    0x000077(%ecx),%al
		mov    0x000081(%ecx),%bh
		mov    %al,0x000076(%ecx)
		and    $0x00003f,%bh
		mov    0x000082(%ecx),%al
		mov    %bh,0x000081(%ecx)
		and    $0x0000fe,%al
		mov    0x000060(%ecx),%bx
		mov    %al,0x000082(%ecx)
		mov    %ebx,%eax
		cmp    $0x0000af,%bx
		jb     _056926_jump
		cmp    $0x0000af,%bx
		jbe    _05647c_jump
		cmp    $0x0000df,%bx
		jb     _05686b_jump
		jbe    _056a90_jump
		cmp    $0x0000ed,%bx
		jb     _056824_jump
		jbe    _056700_jump
		cmp    $0x0000f1,%bx
		jb     _0567ec_jump
		jbe    _056720_jump
		cmp    $0x0000fa,%bx
		jb     _0567da_jump
		jbe    _05647c_jump
		cmp    $0x0000fc,%bx
		jbe    _056419_jump
		jmp    _056a90_jump

	_0563c3_jump:
		mov    %ecx,%eax
		call   _06cef0_func
		jmp    _056a90_jump

	_0563cf_jump:
		mov    _0c32ed_data,%al
		shl    $0x000005,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _056a90_jump
		mov    $0x000001,%edx
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %dx,_0cd0be_data
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		movb   $0x000002,0x00006e(%ecx)
		call   _058bb4_func
		jmp    _056a90_jump

	_056419_jump:
		movw   $0x00fff1,0x00003c(%ecx)
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05642f_jump:
		mov    0x000028(%ecx),%ax
		xor    %edx,%edx
		xor    %esi,%esi
		mov    %ax,_0c25aa_data
		mov    0x000069(%ecx),%dl
		mov    $_0c1b1c_data,%eax
		mov    $0x004000,%ecx
		call   _0186d4_func
		sub    %edx,%eax
		mov    %ecx,_0c25bc_data
		add    $0x000010,%eax
		mov    %esi,_0c25c0_data
		mov    %ax,_0c25ac_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05646f_jump:
		mov    0x000076(%ecx),%al
		mov    %al,0x00006b(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05647c_jump:
		mov    0x000076(%ecx),%al
		and    $0x000001,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05649e_jump:
		movb   $0x000005,0x000072(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0564a9_jump:
		movb   $0x00000a,0x000072(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0564b4_jump:
		movw   $0x0000d5,0x000060(%ecx)

	_0564ba_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x004000,%edi
		call   _047f94_func
		xor    %ebp,%ebp
		xor    %bl,%bl
		mov    %ecx,%eax
		mov    $0x0000ff,%dh
		call   _04763c_func
		mov    %edi,_0c25bc_data
		mov    %ebp,_0c25c0_data
		mov    %dh,_0c25b6_data
		mov    %bl,_0c13b2_data
		mov    %dh,_0c25b8_data
		xor    %al,%al
		movb   $0x0000b4,0x00007f(%ecx)
		mov    %al,_0c25b4_data
		mov    %al,_0c25b7_data
		xor    %bh,%bh
		xor    %ch,%ch
		mov    %bh,_0c25b1_data
		mov    %ch,_0c25b3_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05651d_jump:
		xor    %dh,%dh
		mov    %dh,_0c25b7_data

	_056525_jump:
		mov    %ecx,%eax
		movw   $0x0000ff,0x00005a(%ecx)
		call   _04adb8_func
		xor    %edx,%edx
		xor    %bl,%bl
		mov    $0x004000,%eax
		mov    %edx,_0c25c0_data
		mov    %bl,_0c13b2_data
		movb   $0x000064,0x00007f(%ecx)
		mov    $0x0000ff,%cl
		xor    %bh,%bh
		mov    %eax,_0c25bc_data
		mov    %bh,_0c25b1_data
		mov    %cl,_0c25b8_data
		xor    %al,%al
		xor    %ch,%ch
		mov    %al,_0c25b4_data
		mov    %ch,_0c25b3_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056576_jump:
		mov    0x000081(%ecx),%al
		movb   $0x00001e,0x000074(%ecx)
		and    $0x0000df,%al
		mov    %al,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05658f_jump:
		movw   $0x000000,0x000056(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05659c_case:
		movb   $0x000002,0x00007d(%ecx)
		movb   $0x000000,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0565ab_case:
		movb   $0x000008,0x00007d(%ecx)
		movb   $0x00003c,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0565ba_case:
		movb   $0x000018,0x00007d(%ecx)
		movb   $0x0000aa,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0565c9_case:
		movb   $0x00000a,0x00007d(%ecx)
		movb   $0x000064,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0565d8_case:
		movw   $0x000000,0x00004a(%ecx)
		movb   $0x000001,0x00007d(%ecx)
		movb   $0x000000,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0565ed_case:
		movb   $0x000004,0x00007d(%ecx)
		movb   $0x00003c,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0565fc_case:
		movb   $0x000024,0x00007d(%ecx)
		movb   $0x000078,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05660b_jump:
		mov    0x000075(%ecx),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _056a90_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_056210_switch(,%eax,4)

	_056625_jump:
		movw   $0x000028,0x000050(%ecx)
		movw   $0x000028,0x000056(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056638_jump:
		movb   $0x000001,0x00007d(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056643_jump:
		xor    %eax,%eax
		mov    0x00006e(%ecx),%al
		xor    %edx,%edx
		cmp    $0x00000e,%eax
		sete   %al
		mov    %al,%dl
		mov    %ecx,%eax
		call   _03cf20_func
		movw   $0x000000,0x000056(%ecx)
		movb   $0x000050,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05666a_jump:
		movw   $0x000064,0x00004a(%ecx)
		mov    0x000081(%ecx),%dl
		mov    0x00004a(%ecx),%ax
		or     $0x000004,%dl
		mov    %ax,0x000056(%ecx)
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05668e_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _0566b4_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d354_func
		sub    $0x000002,%eax
		mov    %ax,0x000050(%ecx)
		mov    %ax,0x000056(%ecx)
		jmp    _0566c0_jump

	_0566b4_jump:
		movw   $0x000028,0x000050(%ecx)
		movw   $0x000014,0x000056(%ecx)

	_0566c0_jump:
		mov    0x000081(%ecx),%dh
		movw   $0x000014,0x000052(%ecx)
		or     $0x000024,%dh
		mov    %dh,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0566dc_jump:
		movw   $0x00000f,0x00004a(%ecx)
		mov    0x000081(%ecx),%bl
		mov    0x00004a(%ecx),%ax
		or     $0x000004,%bl
		mov    %ax,0x000056(%ecx)
		mov    %bl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056700_jump:
		movw   $0x000001,0x00004a(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000056(%ecx)

	_05670e_jump:
		orb    $0x000004,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05671c_jump:
		movb   $0x000000,0x00007d(%ecx)

	_056720_jump:
		movw   $0x000000,0x000052(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05672d_jump:
		xor    %ebx,%ebx
		movb   $0x0000a0,0x00007a(%ecx)
		mov    %bx,_0c5196_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056741_jump:
		mov    0x000081(%ecx),%dl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05675e_jump:
		orb    $0x000008,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05676c_jump:
		movw   $0x000000,0x000050(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056779_jump:
		mov    0x00000c(%ecx),%eax
		mov    0x000004(%eax),%eax
		andb   $0x0000ef,0x000007(%eax)
		mov    0x00000c(%ecx),%eax
		mov    0x000004(%eax),%eax
		andb   $0x0000ef,0x000017(%eax)
		movw   $0x000000,0x00004a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05679a_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _0567b3_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000039,%eax
		jne    _0567b3_jump
		mov    %ecx,_0c1ebc_data
		jmp    _0567b9_jump

	_0567b3_jump:
		mov    %ecx,_0c1eb8_data

	_0567b9_jump:
		movb   $0x000003,0x00007e(%ecx)
		mov    0x000081(%ecx),%bl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0567da_jump:
		cmp    $0x0000f3,%bx
		je     _056700_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0567ec_jump:
		cmp    $0x0000ef,%bx
		jb     _056a90_jump
		jbe    _056643_jump

	_0567fd_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		dec    %eax
		cwtl   
		call   _064360_func
		mov    %al,0x00006b(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056824_jump:
		cmp    $0x0000e4,%bx
		jb     _05684e_jump
		jbe    _0563cf_jump
		cmp    $0x0000e6,%bx
		jbe    _05647c_jump
		cmp    $0x0000eb,%bx
		je     _05646f_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05684e_jump:
		cmp    $0x0000e2,%bx
		jb     _056a90_jump
		jbe    _05675e_jump
		movb   $0x000002,_0c25b7_data
		jmp    _056525_jump

	_05686b_jump:
		cmp    $0x0000bf,%bx
		jb     _0568d9_jump
		jbe    _05646f_jump
		cmp    $0x0000d4,%bx
		jb     _0568b6_jump
		jbe    _05676c_jump
		cmp    $0x0000d9,%bx
		jb     _0568a4_jump
		jbe    _056779_jump
		cmp    $0x0000da,%bx
		je     _05642f_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0568a4_jump:
		cmp    $0x0000d5,%bx
		je     _0564ba_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0568b6_jump:
		cmp    $0x0000c5,%bx
		jb     _056a90_jump
		jbe    _056741_jump
		cmp    $0x0000ca,%bx
		je     _05679a_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0568d9_jump:
		cmp    $0x0000b4,%bx
		jb     _056909_jump
		jbe    _0563c3_jump
		cmp    $0x0000b7,%bx
		jb     _056a90_jump
		jbe    _0563c3_jump
		cmp    $0x0000b8,%bx
		je     _05675e_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056909_jump:
		cmp    $0x0000b0,%bx
		jbe    _0567fd_jump
		cmp    $0x0000b2,%bx
		je     _056720_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056926_jump:
		cmp    $0x000048,%bx
		jb     _056a00_jump
		jbe    _056638_jump
		cmp    $0x00007b,%bx
		jb     _0569a8_jump
		jbe    _05660b_jump
		cmp    $0x000096,%bx
		jb     _056985_jump
		jbe    _05672d_jump
		cmp    $0x0000a8,%bx
		jb     _056973_jump
		cmp    $0x0000a9,%bx
		jbe    _056720_jump
		cmp    $0x0000aa,%bx
		je     _056741_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056973_jump:
		cmp    $0x000098,%bx
		je     _056700_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056985_jump:
		cmp    $0x000090,%bx
		jb     _056a90_jump
		jbe    _05658f_jump
		cmp    $0x000091,%bx
		je     _056625_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0569a8_jump:
		cmp    $0x00004d,%bx
		jb     _0569df_jump
		jbe    _056643_jump
		cmp    $0x000062,%bx
		jb     _056a90_jump
		jbe    _0564b4_jump
		cmp    $0x000074,%bx
		jb     _056a90_jump
		cmp    $0x000076,%bx
		jbe    _05671c_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0569df_jump:
		cmp    $0x00004a,%bx
		jb     _056a90_jump
		jbe    _0563c3_jump
		cmp    $0x00004b,%bx
		je     _056741_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056a00_jump:
		cmp    $0x00001c,%bx
		jb     _056a54_jump
		jbe    _05666a_jump
		cmp    $0x000032,%bx
		jb     _056a39_jump
		jbe    _05651d_jump
		cmp    $0x000034,%bx
		jb     _05649e_jump
		jbe    _0564a9_jump
		cmp    $0x000035,%bx
		je     _05649e_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056a39_jump:
		cmp    $0x00001d,%bx
		jbe    _056700_jump
		cmp    $0x000022,%bx
		je     _056700_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056a54_jump:
		cmp    $0x000015,%bx
		jb     _056a7d_jump
		jbe    _05670e_jump
		cmp    $0x000019,%bx
		jb     _056a90_jump
		jbe    _0566dc_jump
		cmp    $0x00001a,%bx
		je     _05668e_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056a7d_jump:
		test   %bx,%bx
		jbe    _056576_jump
		cmp    $0x000007,%bx
		je     _05670e_jump

	_056a90_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056a98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    _0c1b08_data,%cx
		mov    %dx,_0c1b18_data
		mov    %dx,_0c1b10_data
		test   %cx,%cx
		jle    _056ae1_jump
		xor    %ecx,%ecx

	_056abd_jump:
		mov    _0c1b14_data,%ebx
		movswl %dx,%eax
		mov    %cx,(%ebx,%eax,2)
		mov    _0c1b0c_data,%ebx
		mov    _0c1b08_data,%si
		inc    %edx
		mov    %cx,(%ebx,%eax,2)
		cmp    %si,%dx
		jl     _056abd_jump

	_056ae1_jump:
		mov    _0c1b04_data,%ebx
		mov    _0c1b08_data,%ax
		xor    %edx,%edx
		mov    %eax,(%esp)
		test   %ax,%ax
		jle    _056b7b_jump
		jmp    _056b26_jump

	_056afd_jump:
		mov    _0c1b10_data,%ax
		mov    _0c1b0c_data,%ecx
		movswl %ax,%esi
		inc    %eax
		mov    %dx,(%ecx,%esi,2)
		mov    %ax,_0c1b10_data

	_056b17_jump:
		mov    (%esp),%eax
		inc    %edx
		add    $0x000084,%ebx
		cmp    %ax,%dx
		jge    _056b7b_jump

	_056b26_jump:
		cmpw   $0x000000,_0c518e_data
		jne    _056b4f_jump
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000002,_092245_data(,%eax,4)
		je     _056b4f_jump
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		call   _06cc8c_func
		test   %al,%al
		jne    _056b17_jump

	_056b4f_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000001,_092244_data(,%eax,4)
		je     _056afd_jump
		mov    _0c1b18_data,%ax
		movswl %ax,%ecx
		inc    %eax
		mov    _0c1b14_data,%esi
		mov    %ax,_0c1b18_data
		mov    %dx,(%esi,%ecx,2)
		jmp    _056b17_jump

	_056b7b_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056b84_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %al,0x00000c(%esp)
		mov    $0xffffffff,%edx
		xor    %ah,%ah
		xor    %esi,%esi
		mov    %dx,0x000008(%esp)
		mov    %edx,%ebx
		mov    %dx,(%esp)
		mov    %ah,_0c5184_data
		mov    %ah,_0c24ea_data
		mov    %ah,_0c13b2_data
		mov    %dx,_0c24e4_data
		mov    %si,_0c24f8_data
		mov    %dx,_0c24dc_data
		mov    %dx,_0c24de_data
		mov    %dx,_0c25dc_data
		mov    %dx,_0c25de_data
		mov    %dx,_0c2560_data
		mov    %dx,_0c2562_data
		mov    %dx,_0c255e_data
		mov    %dx,_0c51a0_data
		mov    %dx,_0c519e_data
		mov    %dx,_0c1ad4_data
		mov    %dx,_0c24e0_data
		mov    %dx,_0c1ad8_data
		mov    %dx,_0c519a_data
		mov    %dx,_0c1ae6_data
		mov    %dx,_0c1ae8_data
		mov    %dx,_0c1aea_data
		mov    %dx,_0c1aec_data
		mov    %dx,_0c1ad6_data
		mov    _0c1b04_data,%eax
		xor    %dl,%bl
		mov    %edx,%esi
		mov    %bl,_0c5186_data
		xor    %edx,%esi
		mov    _0c1b08_data,%dx
		mov    %eax,%ecx
		mov    %edx,0x000004(%esp)
		test   %dx,%dx
		jle    _057b49_jump
		lea    0x000081(%eax),%edi

	_056c70_jump:
		mov    0x00000c(%esp),%al
		mov    %si,0x000034(%ecx)
		test   %al,%al
		je     _056c83_jump
		mov    %ecx,%eax
		call   _055ea4_func

	_056c83_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		movw   $0x000000,0x00005e(%ecx)
		cmp    $0x0000a3,%eax
		jne    _056ca2_jump
		mov    0x00006f(%ecx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%ecx),%al
		mov    %al,0x00006c(%ecx)

	_056ca2_jump:
		mov    %ecx,%eax
		call   _05622c_func
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000001,_092244_data(,%eax,4)
		je     _056cdb_jump
		movl   $0xffff8300,0x000028(%ecx)
		mov    0x000081(%ecx),%bl
		movl   $0xffff8300,0x00002c(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _056ce2_jump

	_056cdb_jump:
		orb    $0x000004,0x000081(%ecx)

	_056ce2_jump:
		mov    0x000060(%ecx),%dx
		mov    %edx,%eax
		cmp    $0x000079,%dx
		jb     _05782f_jump
		jbe    _05790c_jump
		cmp    $0x0000c4,%dx
		jb     _0576eb_jump
		cmp    $0x0000c5,%dx
		jbe    _05790c_jump
		cmp    $0x0000dc,%dx
		jb     _0575ca_jump
		jbe    _056ea2_jump
		cmp    $0x0000ee,%dx
		jb     _057581_jump
		jbe    _0573dd_jump
		cmp    $0x0000f6,%dx
		jb     _057560_jump
		jbe    _056dcc_jump
		cmp    $0x0000f9,%dx
		jb     _057a8d_jump
		jbe    _056d5a_jump
		cmp    $0x000101,%dx
		je     _056dac_jump
		jmp    _057a8d_jump

	_056d5a_jump:
		xor    %eax,%eax
		mov    0x00006e(%ecx),%al
		cmp    $0x000002,%eax
		jne    _057a8d_jump
		mov    0x000034(%ecx),%ax
		mov    %ax,_0c1ad8_data
		jmp    _057a8d_jump

	_056d77_jump:
		testb  $0x000008,_0c32e4_data
		jne    _0573dd_jump
		mov    _0c32ed_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000fb,%bh
		shl    $0x000002,%al
		mov    %bh,%ah
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _057a8d_jump

	_056dac_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0c519a_data
		jmp    _057a8d_jump

	_056dbb_jump:
		movw   $0x000000,0x000050(%ecx)
		movw   $0x000000,0x000056(%ecx)
		jmp    _057a8d_jump

	_056dcc_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0c1ad6_data
		jmp    _057a8d_jump

	_056ddb_jump:
		movw   $0x000000,0x000050(%ecx)
		mov    0x000034(%ecx),%ax
		mov    0x000081(%ecx),%bl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bl
		mov    %ax,_0c1ae6_data
		mov    %bl,0x000081(%ecx)
		jmp    _057a8d_jump

	_056e06_jump:
		movw   $0x000000,0x000050(%ecx)
		mov    0x000034(%ecx),%ax
		mov    0x000081(%ecx),%bh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %ax,_0c1aec_data
		mov    %bh,0x000081(%ecx)
		jmp    _057a8d_jump

	_056e31_jump:
		movw   $0x000000,0x000050(%ecx)
		mov    0x000034(%ecx),%ax
		mov    0x000081(%ecx),%dl
		movl   $0x000000,0x000024(%ecx)
		mov    %ax,_0c1ae8_data
		and    $0x0000fb,%dl
		mov    0x000034(%ecx),%ax
		mov    %dl,0x000081(%ecx)
		mov    %ax,0x000008(%esp)
		jmp    _057a8d_jump

	_056e65_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0c1aea_data
		mov    0x000034(%ecx),%ax
		mov    %ax,(%esp)
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000050(%ecx)
		or     $0x000008,%al
		mov    %al,0x000081(%ecx)
		mov    %al,%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _057a8d_jump

	_056ea2_jump:
		mov    %si,_0c24e0_data
		movw   $0x000000,0x000056(%ecx)
		jmp    _057a8d_jump

	_056eb4_jump:
		mov    _0c24de_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%edx
		mov    _0c1b04_data,%eax
		mov    0x00002c(%edx,%eax,1),%eax
		add    $0x000078,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _057a8d_jump

	_056edf_jump:
		mov    0x00001c(%ecx),%ebp
		test   %ebp,%ebp
		jne    _057a8d_jump
		mov    0x000081(%ecx),%bl
		mov    %ebp,0x000024(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _057a8d_jump

	_056f01_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _057010_jump
		mov    _0c247a_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		mov    %edx,0x000028(%ecx)
		cmp    $0x000001,%eax
		jne    _056f50_jump
		testb  $0x000040,_0c32e4_data
		je     _056f3b_jump
		movb   $0x000001,0x000076(%ecx)

	_056f3b_jump:
		mov    _0c24f2_data,%eax
		sar    $0x000010,%eax
		add    $0x0000c8,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _056fe1_jump

	_056f50_jump:
		mov    0x000028(%ecx),%ax
		mov    %ax,0x000050(%ecx)
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		movb   $0x000000,0x000076(%ecx)
		cmp    $0x000003,%eax
		jne    _056f76_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000007,%eax
		je     _056fdb_jump

	_056f76_jump:
		mov    _0c24f2_data,%eax
		sar    $0x000010,%eax
		add    $0x000078,%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0c24f4_data,%ax
		add    $0x000078,%eax
		mov    %ax,0x00003e(%ecx)
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _056fad_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		je     _056fba_jump

	_056fad_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _056fe1_jump

	_056fba_jump:
		mov    _0c24f2_data,%eax
		sar    $0x000010,%eax
		add    $0x000082,%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0c24f4_data,%ax
		add    $0x000082,%eax
		mov    %ax,0x00003e(%ecx)
		jmp    _056fe1_jump

	_056fdb_jump:
		movw   $0x000000,0x00003a(%ecx)

	_056fe1_jump:
		mov    0x000081(%ecx),%ah
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%ah
		mov    %si,_0c2562_data
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000056(%ecx)
		call   _01dcec_func
		jmp    _057a8d_jump

	_057010_jump:
		mov    _0c2560_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _057171_jump
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _057171_jump
		andb   $0x0000f7,0x000081(%ecx)
		mov    _0c2560_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		movw   $0x000000,0x000042(%ecx)
		mov    _0c1b04_data,%edx
		movw   $0x000000,0x000040(%ecx)
		addw   $0x000065,0x000050(%edx,%eax,1)
		mov    0x00004e(%edx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0c2560_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%edx
		mov    _0c1b04_data,%eax
		mov    0x00002c(%edx,%eax,1),%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _0570a1_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000007,%eax
		je     _057111_jump

	_0570a1_jump:
		mov    _0c24f4_data,%ax
		add    $0x000078,%eax
		mov    %ax,0x00003e(%ecx)
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _0570cc_jump
		mov    _0c24f4_data,%ax
		add    $0x000082,%eax
		mov    %ax,0x00003e(%ecx)

	_0570cc_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _05711f_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jne    _05711f_jump
		mov    _0c2560_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%ebx
		mov    _0c1b04_data,%edx
		mov    0x00002c(%edx,%ebx,1),%edx
		add    %eax,%edx
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		mov    0x00002c(%ecx),%ax
		jmp    _05711b_jump

	_057111_jump:
		mov    0x00002c(%ecx),%ax
		movw   $0x000000,0x00003a(%ecx)

	_05711b_jump:
		mov    %ax,0x00003e(%ecx)

	_05711f_jump:
		mov    %ecx,%eax
		call   _01dcec_func
		orb    $0x000004,0x000081(%ecx)
		mov    _0c2560_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%edx
		movl   $0x000001,0x000024(%ecx)
		mov    0x000076(%edx,%eax,1),%bl
		inc    %bl
		mov    %bl,0x000076(%edx,%eax,1)
		xor    %eax,%eax
		mov    %bl,%al
		mov    %bl,0x00006c(%ecx)
		cmp    $0x000003,%eax
		jle    _057166_jump
		mov    %bl,%bh
		sub    $0x000004,%bh
		mov    %bh,0x00006c(%ecx)

	_057166_jump:
		movw   $0x000000,0x000056(%ecx)
		jmp    _057a8d_jump

	_057171_jump:
		mov    0x000081(%ecx),%bh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%ecx)
		jmp    _057a8d_jump

	_05718c_jump:
		mov    _0c32e4_data,%dh
		mov    _0c259c_data,%ax
		mov    (%edi),%bl
		test   $0x000040,%dh
		sete   %dl
		and    $0x0000fb,%bl
		and    $0x000001,%dl
		shl    $0x000002,%dl
		mov    %bl,%bh
		mov    %ax,_0c259a_data
		or     %dl,%bh
		mov    %ax,_0c247c_data
		mov    %bh,(%edi)
		jmp    _057a8d_jump

	_0571c0_jump:
		mov    %si,_0c2560_data
		jmp    _057a8d_jump

	_0571cc_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _057a8d_jump
		mov    _0c1b44_data,%ax
		sub    $0x0000c8,%eax
		mov    %ax,0x00003c(%ecx)
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0c1b48_data,%eax
		mov    $0x000009,%ebx
		sub    $0x000032,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01d4a8_func
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		movl   $0x000001,0x000024(%ecx)
		movw   $0x000000,0x000050(%ecx)
		movw   $0x000000,0x000052(%ecx)
		mov    0x000081(%ecx),%dl
		movb   $0x000000,0x00007f(%ecx)
		or     $0x000008,%dl
		mov    %si,_0c255e_data
		mov    %dl,0x000081(%ecx)
		jmp    _057a8d_jump

	_057249_jump:
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %si,_0c24de_data
		mov    %dh,0x000081(%ecx)
		jmp    _057a8d_jump

	_05726b_jump:
		cmpb   $0x000000,_0c2131_data
		je     _057285_jump
		cmpw   $0x000000,_0c518e_data
		jne    _057285_jump
		andb   $0x0000fb,0x000081(%ecx)

	_057285_jump:
		mov    0x00006d(%ecx),%al
		test   %al,%al
		jbe    _057295_jump
		cmp    $0x000005,%al
		je     _0572a5_jump
		jmp    _057a8d_jump

	_057295_jump:
		movb   $0x000000,0x00007f(%ecx)
		movl   $0x000000,0x000024(%ecx)
		jmp    _057a8d_jump

	_0572a5_jump:
		movb   $0x00001e,0x00007f(%ecx)
		jmp    _057a8d_jump

	_0572ae_jump:
		mov    _0c24f6_data,%eax
		sar    $0x000010,%eax
		mov    %si,_0c24fa_data(,%eax,2)
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0c24f8_data,%dx
		mov    0x00003a(%ecx),%eax
		inc    %edx
		sar    $0x000010,%eax
		mov    %dx,_0c24f8_data
		mov    %eax,0x000028(%ecx)
		mov    _0c24f6_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000032,%eax
		jl     _0572f6_jump
		mov    $_0c06e0_data,%eax
		call   _01f628_func

	_0572f6_jump:
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _057a8d_jump

	_057302_jump:
		mov    0x00000c(%ecx),%eax
		mov    0x000008(%eax),%eax
		movb   $0x000000,0x000016(%eax)
		jmp    _057a8d_jump

	_057311_jump:
		mov    _0c24ea_data,%al
		mov    _0c24ea_data,%dl
		and    $0x0000ff,%eax
		inc    %dl
		mov    %si,_0c24e6_data(,%eax,2)
		mov    %dl,_0c24ea_data
		jmp    _057a8d_jump

	_057336_jump:
		mov    0x000081(%ecx),%dl
		and    $0x0000fb,%dl
		mov    %si,_0c24dc_data
		mov    %dl,0x000081(%ecx)
		jmp    _057a8d_jump

	_057351_jump:
		andb   $0x0000fb,0x000081(%ecx)
		mov    0x000034(%ecx),%ax
		mov    %ax,_0c1ad2_data
		jmp    _057a8d_jump

	_057367_jump:
		mov    _0c1ed0_data,%al
		mov    %al,0x00006e(%ecx)
		mov    %si,_0c24e2_data
		mov    %al,0x00006c(%ecx)
		mov    _0c24e0_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%edx
		add    %eax,%edx
		mov    0x000081(%ecx),%ah
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%ah
		mov    %edx,_0c1ec0_data
		mov    %ah,0x000081(%ecx)
		jmp    _057a8d_jump

	_0573ad_jump:
		mov    0x000081(%ecx),%bh
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%bh
		mov    %si,_0c24da_data
		mov    %bh,0x000081(%ecx)
		jmp    _057a8d_jump

	_0573cc_jump:
		movw   $0x000028,0x000056(%ecx)
		jmp    _057a8d_jump

	_0573d7_jump:
		movw   $0x000000,0x000056(%ecx)

	_0573dd_jump:
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _057a8d_jump

	_0573e9_jump:
		movw   $0x000000,0x000052(%ecx)
		jmp    _057a8d_jump

	_0573f4_jump:
		movl   $0x000000,0x000024(%ecx)
		mov    0x000081(%ecx),%dh
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _057a8d_jump

	_057413_jump:
		movb   $0x000007,0x000078(%ecx)
		movb   $0x000000,0x00007f(%ecx)
		jmp    _057a8d_jump

	_057420_jump:
		movw   $0x000001,0x00004a(%ecx)
		movl   $0x000000,0x000024(%ecx)
		movb   $0x000007,0x000078(%ecx)
		mov    0x000081(%ecx),%dh
		mov    0x00004a(%ecx),%ax
		and    $0x0000fb,%dh
		mov    %ax,0x000056(%ecx)
		mov    %dh,0x000081(%ecx)
		jmp    _057a8d_jump

	_05744d_jump:
		movswl %si,%eax
		cmp    $0x000001,%eax
		jl     _057a8d_jump
		movswl %si,%eax
		dec    %eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%edx
		add    %edx,%eax
		orb    $0x000004,0x000081(%ecx)
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		cmp    $0x00000a,%edx
		jne    _057a8d_jump
		mov    0x000028(%eax),%eax
		cmp    0x000028(%ecx),%eax
		jne    _057a8d_jump
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _057a8d_jump

	_0574a8_jump:
		mov    %ecx,%eax
		call   _020c80_func
		jmp    _057a8d_jump

	_0574b4_jump:
		mov    _0c32ed_data,%bl
		mov    0x000034(%ecx),%ax
		movb   $0x000007,0x000078(%ecx)
		mov    %ax,_0c24e4_data
		test   $0x000008,%bl
		je     _057a8d_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movb   $0x000004,0x00006e(%ecx)
		call   _01d4a8_func
		jmp    _057a8d_jump

	_0574e8_jump:
		mov    0x000081(%ecx),%ah
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _057a8d_jump

	_057500_jump:
		movw   $0x00ffff,0x000050(%ecx)
		movw   $0x000000,0x000052(%ecx)
		mov    %si,_0c51a0_data

	_057513_jump:
		movb   $0x000000,0x00007f(%ecx)
		jmp    _057a8d_jump

	_05751c_jump:
		mov    %si,_0c519e_data
		jmp    _057a8d_jump

	_057528_jump:
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x00003c(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%ecx)
		mov    0x00003a(%ecx),%eax
		movw   $0x000000,0x00003e(%ecx)
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00003c(%ecx),%eax
		movl   $0x000000,0x000024(%ecx)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _057a8d_jump

	_057560_jump:
		cmp    $0x0000f2,%dx
		jb     _057a8d_jump
		jbe    _056edf_jump
		cmp    $0x0000f4,%dx
		je     _05790c_jump
		jmp    _057a8d_jump

	_057581_jump:
		cmp    $0x0000e7,%dx
		jb     _0575a9_jump
		jbe    _056e31_jump
		cmp    $0x0000e8,%dx
		jbe    _056e65_jump
		cmp    $0x0000e9,%dx
		je     _05790c_jump
		jmp    _057a8d_jump

	_0575a9_jump:
		cmp    $0x0000df,%dx
		jb     _057a8d_jump
		jbe    _056ddb_jump
		cmp    $0x0000e0,%dx
		je     _0573dd_jump
		jmp    _057a8d_jump

	_0575ca_jump:
		cmp    $0x0000cd,%dx
		jb     _05768c_jump
		jbe    _057351_jump
		cmp    $0x0000d7,%dx
		jb     _057666_jump
		jbe    _05790c_jump
		cmp    $0x0000da,%dx
		jb     _057a8d_jump
		jbe    _056e06_jump
		xor    %eax,%eax
		mov    0x000077(%ecx),%al
		sar    $0x000002,%eax
		mov    %al,0x000076(%ecx)
		mov    _0c24de_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _057a8d_jump
		mov    _0c24de_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%edx
		mov    _0c1b04_data,%eax
		add    %eax,%edx
		mov    0x000028(%ecx),%eax
		cmp    0x000028(%edx),%eax
		jge    _056eb4_jump
		mov    _0c24de_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%edx
		mov    0x00002c(%edx,%eax,1),%eax
		add    $0x000070,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _057a8d_jump

	_057666_jump:
		cmp    $0x0000ce,%dx
		jbe    _05790c_jump
		cmp    $0x0000d1,%dx
		jb     _057a8d_jump
		cmp    $0x0000d2,%dx
		jbe    _05790c_jump
		jmp    _057a8d_jump

	_05768c_jump:
		cmp    $0x0000c8,%dx
		jb     _0576db_jump
		jbe    _0574a8_jump
		cmp    $0x0000cb,%dx
		jb     _057a8d_jump
		jbe    _0573dd_jump
		mov    _0c1b20_data,%eax
		mov    %eax,0x000004(%ecx)
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000034(%ecx),%ax
		movb   $0x000007,0x000078(%ecx)
		mov    %ax,_0c1ad4_data
		jmp    _057a8d_jump

	_0576db_jump:
		cmp    $0x0000c6,%dx
		je     _0574a8_jump
		jmp    _057a8d_jump

	_0576eb_jump:
		cmp    $0x000093,%dx
		jb     _0577a1_jump
		jbe    _0571cc_jump
		cmp    $0x0000b3,%dx
		jb     _057758_jump
		jbe    _056edf_jump
		cmp    $0x0000be,%dx
		jb     _057737_jump
		jbe    _057420_jump
		cmp    $0x0000c0,%dx
		jb     _057a8d_jump
		jbe    _05790c_jump
		cmp    $0x0000c2,%dx
		jbe    _05790c_jump
		jmp    _057a8d_jump

	_057737_jump:
		cmp    $0x0000ba,%dx
		jb     _057a8d_jump
		jbe    _05790c_jump
		cmp    $0x0000bb,%dx
		je     _05751c_jump
		jmp    _057a8d_jump

	_057758_jump:
		cmp    $0x00009d,%dx
		jb     _057786_jump
		jbe    _056f01_jump
		cmp    $0x0000a5,%dx
		jb     _057a8d_jump
		jbe    _057302_jump
		cmp    $0x0000ad,%dx
		je     _057500_jump
		jmp    _057a8d_jump

	_057786_jump:
		cmp    $0x000094,%dx
		jbe    _0578a5_jump
		cmp    $0x000099,%dx
		je     _0571c0_jump
		jmp    _057a8d_jump

	_0577a1_jump:
		cmp    $0x000088,%dx
		jb     _0577f2_jump
		jbe    _057249_jump
		cmp    $0x00008f,%dx
		jb     _0577d1_jump
		jbe    _05790c_jump
		cmp    $0x000091,%dx
		jb     _057a8d_jump
		jbe    _0573cc_jump
		jmp    _05790c_jump

	_0577d1_jump:
		cmp    $0x00008b,%dx
		jb     _057a8d_jump
		jbe    _05790c_jump
		cmp    $0x00008e,%dx
		je     _0578a5_jump
		jmp    _057a8d_jump

	_0577f2_jump:
		cmp    $0x000082,%dx
		jb     _057820_jump
		jbe    _05790c_jump
		cmp    $0x000085,%dx
		jb     _057a8d_jump
		jbe    _056d77_jump
		cmp    $0x000087,%dx
		je     _05790c_jump
		jmp    _057a8d_jump

	_057820_jump:
		cmp    $0x00007a,%dx
		je     _05790c_jump
		jmp    _057a8d_jump

	_05782f_jump:
		cmp    $0x00003e,%dx
		jb     _057976_jump
		jbe    _05790c_jump
		cmp    $0x00005e,%dx
		jb     _0578ec_jump
		jbe    _057367_jump
		cmp    $0x00006d,%dx
		jb     _0578ae_jump
		jbe    _0578a5_jump
		cmp    $0x000070,%dx
		jb     _057882_jump
		jbe    _05790c_jump
		cmp    $0x000073,%dx
		jb     _057a8d_jump
		jbe    _0573f4_jump
		cmp    $0x000077,%dx
		je     _05790c_jump
		jmp    _057a8d_jump

	_057882_jump:
		cmp    $0x00006e,%dx
		jbe    _05790c_jump
		testb  $0x000008,_0c32ed_data
		je     _0578a5_jump
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d498_func
		movb   $0x00000a,0x00006e(%ecx)

	_0578a5_jump:
		movb   $0x000007,0x000078(%ecx)
		jmp    _057a8d_jump

	_0578ae_jump:
		cmp    $0x000063,%dx
		jb     _0578d1_jump
		jbe    _05726b_jump
		cmp    $0x000066,%dx
		jb     _057a8d_jump
		jbe    _05790c_jump
		cmp    $0x00006c,%dx
		je     _05790c_jump
		jmp    _057a8d_jump

	_0578d1_jump:
		cmp    $0x000060,%dx
		jb     _057a8d_jump
		jbe    _056dbb_jump
		cmp    $0x000061,%dx
		je     _05790c_jump
		jmp    _057a8d_jump

	_0578ec_jump:
		cmp    $0x000049,%dx
		jb     _05794a_jump
		jbe    _05790c_jump
		cmp    $0x000052,%dx
		jb     _05792b_jump
		jbe    _0578a5_jump
		cmp    $0x000053,%dx
		jbe    _05790c_jump
		cmp    $0x00005a,%dx
		jb     _057a8d_jump

	_05790c_jump:
		movl   $0x000000,0x000024(%ecx)

	_057913_jump:
		mov    0x000081(%ecx),%bl
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _057a8d_jump

	_05792b_jump:
		cmp    $0x00004e,%dx
		jb     _057a8d_jump
		cmp    $0x00004f,%dx
		jbe    _05790c_jump
		cmp    $0x000051,%dx
		je     _057311_jump
		jmp    _057a8d_jump

	_05794a_jump:
		cmp    $0x000041,%dx
		jb     _057967_jump
		jbe    _0573e9_jump
		cmp    $0x000042,%dx
		jbe    _05790c_jump
		cmp    $0x000047,%dx
		je     _05790c_jump
		jmp    _057a8d_jump

	_057967_jump:
		cmp    $0x000040,%dx
		je     _0572ae_jump
		jmp    _057a8d_jump

	_057976_jump:
		cmp    $0x00001f,%dx
		jb     _057a1b_jump
		jbe    _0574e8_jump
		cmp    $0x000027,%dx
		jb     _0579e0_jump
		jbe    _0573d7_jump
		cmp    $0x000033,%dx
		jb     _0579c1_jump
		cmp    $0x000034,%dx
		jbe    _05790c_jump
		cmp    $0x000037,%dx
		jb     _057a8d_jump
		jbe    _0574b4_jump
		cmp    $0x00003b,%dx
		je     _05790c_jump
		jmp    _057a8d_jump

	_0579c1_jump:
		cmp    $0x00002c,%dx
		jb     _057a8d_jump
		jbe    _05790c_jump
		cmp    $0x00002e,%dx
		je     _0574a8_jump
		jmp    _057a8d_jump

	_0579e0_jump:
		cmp    $0x000024,%dx
		jb     _057a02_jump
		jbe    _05790c_jump
		cmp    $0x000025,%dx
		jbe    _05718c_jump
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _057a8d_jump

	_057a02_jump:
		cmp    $0x000020,%dx
		jbe    _057528_jump
		cmp    $0x000021,%dx
		je     _05790c_jump
		jmp    _057a8d_jump

	_057a1b_jump:
		cmp    $0x00000d,%dx
		jb     _057a61_jump
		jbe    _05790c_jump
		cmp    $0x000014,%dx
		jb     _057a49_jump
		jbe    _057413_jump
		cmp    $0x000015,%dx
		jbe    _057513_jump
		cmp    $0x000017,%dx
		je     _057336_jump
		jmp    _057a8d_jump

	_057a49_jump:
		cmp    $0x00000f,%dx
		jb     _057a8d_jump
		jbe    _05790c_jump
		cmp    $0x000013,%dx
		je     _0572f6_jump
		jmp    _057a8d_jump

	_057a61_jump:
		cmp    $0x000009,%dx
		jb     _057a83_jump
		jbe    _057302_jump
		cmp    $0x00000a,%dx
		jbe    _05744d_jump
		cmp    $0x00000b,%dx
		je     _0573ad_jump
		jmp    _057a8d_jump

	_057a83_jump:
		cmp    $0x000003,%dx
		je     _057913_jump

	_057a8d_jump:
		xor    %eax,%eax
		mov    _0c25ec_data,%al
		imul   $0x000014,%eax,%eax
		mov    _094a29_data(%eax),%al
		and    $0x0000ff,%eax
		cmp    $0x000006,%eax
		jne    _057ad3_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x00003a,%eax
		jne    _057ad3_jump
		movl   $0x000000,0x000024(%ecx)
		mov    0x000081(%ecx),%bh
		mov    0x000032(%ecx),%eax
		and    $0x0000fb,%bh
		sar    $0x000010,%eax
		mov    %bh,0x000081(%ecx)
		call   _06cc54_func

	_057ad3_jump:
		cmpw   $0x000000,_0c518e_data
		jne    _057b12_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000002,_092245_data(,%eax,4)
		je     _057b12_jump
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		call   _06cc8c_func
		test   %al,%al
		je     _057b12_jump
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)

	_057b12_jump:
		cmpw   $0x000000,_0c518e_data
		je     _057b2f_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x0000a1,%eax
		jne    _057b2f_jump
		incb   _0c5186_data

	_057b2f_jump:
		mov    0x000004(%esp),%eax
		add    $0x000084,%edi
		inc    %esi
		add    $0x000084,%ecx
		cmp    %ax,%si
		jl     _056c70_jump

	_057b49_jump:
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _057b86_jump
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _057b86_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%ebx
		mov    (%esp),%ecx
		mov    %cx,0x000052(%ebx,%eax,4)
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    0x000008(%esp),%edx
		mov    %dx,0x000052(%ebx,%eax,4)

	_057b86_jump:
		cmpw   $0x000000,_0c518e_data
		je     _057ba4_jump
		xor    %eax,%eax
		mov    _0c24ce_data,%al
		xor    %bh,%bh
		mov    %eax,_0c5188_data
		mov    %bh,_0c24ce_data

	_057ba4_jump:
		call   _056a98_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057bb4_func:
		push   %edx
		mov    %eax,%edx
		call   _05622c_func
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000002,0x000030(%edx)
		call   _01dcec_func
		cmpl   $0x000000,0x000020(%edx)
		je     _057bdb_jump
		xor    %eax,%eax
		jmp    _057be0_jump

	_057bdb_jump:
		mov    $0x000078,%eax

	_057be0_jump:
		movl   $0x000000,0x000024(%edx)
		mov    %ax,0x00005e(%edx)
		pop    %edx
		ret    



_057bf0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c24f0_data,%si
		mov    _0c24f2_data,%di
		xor    %eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		jmp    _057c49_jump

	_057c0b_jump:
		xor    %ecx,%ecx
		mov    %cx,_09265c_data(%ebx)

	_057c14_jump:
		cmp    $0x000011,%eax
		je     _057c23_jump
		cmp    $0x000010,%eax
		je     _057c23_jump
		cmp    $0x000018,%eax
		jne    _057c3b_jump

	_057c23_jump:
		movswl %di,%ecx
		cmp    $0x000001,%ecx
		jne    _057c34_jump
		orb    $0x000008,_092245_data(%edx)
		jmp    _057c3b_jump

	_057c34_jump:
		andb   $0x0000f7,_092245_data(%edx)

	_057c3b_jump:
		add    $0x000002,%ebx
		inc    %eax
		add    $0x000004,%edx
		cmp    $0x000106,%eax
		jge    _057c60_jump

	_057c49_jump:
		test   %eax,%eax
		jne    _057c14_jump
		movswl %si,%ecx
		cmp    $0x000003,%ecx
		jne    _057c0b_jump
		movw   $0x00ff88,_09265c_data(%ebx)
		jmp    _057c14_jump

	_057c60_jump:
		mov    %di,_0c24f2_data
		mov    %si,_0c24f0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_057cd0_switch:
		.long   _057eeb_case
		.long   _057ec6_case
		.long   _057ea8_case
		.long   _057eb1_case
		.long   _057ec0_case
		.long   _057ecf_case
		.long   _057ede_case
		.long   _057ef4_case
		.long   _057f27_case
		.long   _057f52_case
		.long   _057f7d_case
		.long   _057fb0_case
		.long   _057fdb_case
		.long   _058007_case
		.long   _058033_case




_057d0c_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%ebx
		mov    _0dbc14_data,%edx
		movswl %bx,%ebx
		mov    0x000034(%edx),%ecx
		call   _010010_func
		test   %ebx,%ebx
		jl     _057d3d_jump
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _057d36_jump
		mov    %ebx,%eax

	_057d36_jump:
		neg    %eax
		jmp    _057d4a_jump

	_057d3d_jump:
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _057d4a_jump
		mov    %ebx,%eax

	_057d4a_jump:
		xor    %ebx,%ebx
		mov    %ax,0x000004(%edx)
		mov    (%esp),%bl
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _057d5e_jump
		mov    %ebx,%eax

	_057d5e_jump:
		mov    $0x00000f,%ebx
		cmp    %ebx,%eax
		jle    _057d69_jump
		mov    %ebx,%eax

	_057d69_jump:
		mov    %al,0x00001d(%edx)
		movl   $0x000000,0x000014(%ecx)
		movl   $0x000000,0x000054(%ecx)
		movl   $0x00013f,0x00003c(%ecx)
		movl   $0x0000c7,0x000068(%ecx)
		movl   $0x0000a0,0x000064(%ecx)
		movl   $0x000000,0x00006c(%ecx)
		mov    0x000014(%ecx),%eax
		mov    %eax,(%ecx)
		mov    0x000054(%ecx),%eax
		mov    %eax,0x000040(%ecx)
		mov    %eax,0x000004(%ecx)
		mov    0x00003c(%ecx),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x000068(%ecx),%eax
		mov    %eax,0x00002c(%ecx)
		mov    %eax,0x000018(%ecx)
		mov    0x000064(%ecx),%eax
		mov    %eax,0x000050(%ecx)
		mov    0x00006c(%ecx),%eax
		mov    %eax,0x000058(%ecx)
		mov    %eax,0x000044(%ecx)
		mov    %eax,0x000030(%ecx)
		mov    %eax,0x00001c(%ecx)
		mov    %eax,0x000008(%ecx)
		mov    0x000030(%edx),%ecx
		mov    0x000028(%edx),%eax
		movb   $0x000000,0x000026(%ecx)
		movb   $0x00009f,0x00002a(%ecx)
		movb   $0x000000,0x00002b(%ecx)
		movb   $0x0000c7,0x000029(%ecx)
		mov    %eax,(%ecx)
		mov    0x000026(%ecx),%al
		mov    %al,0x000024(%ecx)
		mov    0x00002a(%ecx),%al
		mov    %al,0x000028(%ecx)
		mov    0x00002b(%ecx),%al
		mov    %al,0x000025(%ecx)
		mov    0x000029(%ecx),%al
		mov    %al,0x000027(%ecx)
		mov    0x000030(%edx),%ecx
		mov    0x00002c(%edx),%eax
		movb   $0x000000,0x000052(%ecx)
		movb   $0x00009f,0x000056(%ecx)
		movb   $0x000000,0x000057(%ecx)
		movb   $0x0000c7,0x000055(%ecx)
		mov    %eax,0x00002c(%ecx)
		mov    0x000052(%ecx),%al
		mov    %al,0x000050(%ecx)
		mov    0x000056(%ecx),%al
		mov    %al,0x000054(%ecx)
		mov    0x000057(%ecx),%al
		mov    %al,0x000051(%ecx)
		mov    0x000055(%ecx),%al
		mov    %al,0x000053(%ecx)
		movw   $0x000000,(%edx)
		movw   $0x000200,0x000002(%edx)
		movw   $0x000000,0x00000a(%edx)
		movw   $0x000000,0x000010(%edx)
		movw   $0x000000,0x000016(%edx)
		movw   $0x0000a0,0x000018(%edx)
		mov    0x00000a(%edx),%ax
		mov    %ax,0x000008(%edx)
		mov    %ax,0x000006(%edx)
		mov    0x000010(%edx),%ax
		mov    %ax,0x00000e(%edx)
		mov    %ax,0x00000c(%edx)
		mov    0x000016(%edx),%ax
		mov    %ax,0x000014(%edx)
		mov    %ax,0x000012(%edx)
		add    $0x00002c,%ecx
		mov    0x000002(%edx),%eax
		movw   $0x000064,0x00001a(%edx)
		sar    $0x000010,%eax
		movb   $0x000000,0x00001c(%edx)
		test   %eax,%eax
		jge    _057e8c_jump
		neg    %eax

	_057e8c_jump:
		mov    %eax,%ecx
		mov    0x00001d(%edx),%al
		dec    %al
		cmp    $0x00000e,%al
		ja     _058055_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_057cd0_switch(,%eax,4)

	_057ea8_case:
		mov    %cx,0x000016(%edx)
		jmp    _058055_jump

	_057eb1_case:
		mov    %cx,0x000014(%edx)
		add    %ecx,%ecx
		mov    %cx,0x000012(%edx)
		jmp    _058055_jump

	_057ec0_case:
		mov    %cx,0x000016(%edx)
		add    %ecx,%ecx

	_057ec6_case:
		mov    %cx,0x000014(%edx)
		jmp    _058055_jump

	_057ecf_case:
		mov    %cx,0x000016(%edx)
		add    %ecx,%ecx
		mov    %cx,0x000012(%edx)
		jmp    _058055_jump

	_057ede_case:
		mov    %cx,0x000016(%edx)
		imul   $0x000003,%ecx,%eax
		add    %ecx,%ecx
		mov    %ax,0x000014(%edx)

	_057eeb_case:
		mov    %cx,0x000012(%edx)
		jmp    _058055_jump

	_057ef4_case:
		mov    0x000004(%edx),%ax
		movw   $0x000200,0x000006(%edx)
		neg    %eax
		mov    %ax,0x000012(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x0000c9,0x00001a(%edx)
		sar    $0x000010,%eax
		movb   $0x000001,0x00001c(%edx)
		test   %eax,%eax
		jg     _058055_jump
		movw   $0x000180,0x000006(%edx)
		jmp    _058055_jump

	_057f27_case:
		mov    0x000004(%edx),%ax
		mov    %ax,0x000012(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x0000c9,0x00001a(%edx)
		sar    $0x000010,%eax
		movb   $0x000001,0x00001c(%edx)
		test   %eax,%eax
		jg     _058055_jump
		movw   $0x000080,0x000006(%edx)
		jmp    _058055_jump

	_057f52_case:
		mov    0x000004(%edx),%ax
		mov    %ax,0x000012(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x00fffe,0x00001a(%edx)
		sar    $0x000010,%eax
		movb   $0x000001,0x00001c(%edx)
		test   %eax,%eax
		jg     _058055_jump
		movw   $0x000080,0x000006(%edx)
		jmp    _058055_jump

	_057f7d_case:
		mov    0x000004(%edx),%ax
		movw   $0x000200,0x000006(%edx)
		neg    %eax
		mov    %ax,0x000012(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x00fffe,0x00001a(%edx)
		sar    $0x000010,%eax
		movb   $0x000001,0x00001c(%edx)
		test   %eax,%eax
		jg     _058055_jump
		movw   $0x000180,0x000006(%edx)
		jmp    _058055_jump

	_057fb0_case:
		mov    0x000004(%edx),%ax
		mov    %ax,0x000014(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x00fffe,0x000018(%edx)
		sar    $0x000010,%eax
		movb   $0x000001,0x00001c(%edx)
		test   %eax,%eax
		jg     _058055_jump
		movw   $0x000080,0x000008(%edx)
		jmp    _058055_jump

	_057fdb_case:
		mov    0x000004(%edx),%ax
		movw   $0x000200,0x000008(%edx)
		neg    %eax
		mov    %ax,0x000014(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x00fffe,0x000018(%edx)
		sar    $0x000010,%eax
		movb   $0x000001,0x00001c(%edx)
		test   %eax,%eax
		jg     _058055_jump
		movw   $0x000180,0x000008(%edx)
		jmp    _058055_jump

	_058007_case:
		mov    0x000004(%edx),%ax
		movw   $0x000200,0x000008(%edx)
		neg    %eax
		mov    %ax,0x000014(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x000141,0x000018(%edx)
		sar    $0x000010,%eax
		movb   $0x000001,0x00001c(%edx)
		test   %eax,%eax
		jg     _058055_jump
		movw   $0x000180,0x000008(%edx)
		jmp    _058055_jump

	_058033_case:
		mov    0x000004(%edx),%ax
		mov    %ax,0x000014(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x000141,0x000018(%edx)
		sar    $0x000010,%eax
		movb   $0x000001,0x00001c(%edx)
		test   %eax,%eax
		jg     _058055_jump
		movw   $0x000080,0x000008(%edx)

	_058055_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%al
		cmp    $0x000001,%eax
		jne    _058065_jump
		movw   $0x000081,0x000002(%edx)

	_058065_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    

	_05806c_case:
		push   %edx
		mov    _0dbc14_data,%edx
		test   %edx,%edx
		je     _0580a6_jump
		cmpl   $0x000000,0x000030(%edx)
		je     _058085_jump
		lea    0x000030(%edx),%eax
		call   _077858_func

	_058085_jump:
		cmpl   $0x000000,0x000034(%edx)
		je     _058093_jump
		lea    0x000034(%edx),%eax
		call   _077858_func

	_058093_jump:
		cmpl   $0x000000,_0dbc14_data
		je     _0580a6_jump
		mov    $_0dbc14_data,%eax
		call   _077858_func

	_0580a6_jump:
		pop    %edx
		ret    



_0580a8_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %ebx,%edi
		mov    %ecx,%ebx
		xor    %cl,%cl
		test   %edi,%edi
		je     _058115_jump
		test   %ebx,%ebx
		je     _058115_jump
		mov    $0x000038,%eax
		call   _077840_func
		mov    %eax,%edx
		mov    %eax,_0dbc14_data
		test   %eax,%eax
		je     _058115_jump
		mov    %edi,0x000020(%eax)
		mov    %eax,%esi
		mov    %ebx,0x000024(%eax)
		mov    $0x000058,%eax
		call   _077840_func
		mov    %eax,0x000030(%edx)
		test   %eax,%eax
		je     _058115_jump
		mov    $0x000078,%eax
		call   _077840_func
		mov    %eax,0x000034(%edx)
		test   %eax,%eax
		je     _058115_jump
		mov    _0cdf00_data,%eax
		mov    %eax,0x000028(%edx)
		lea    0x00c800(%eax),%ebx
		mov    $0x000001,%cl
		mov    %ebx,0x00002c(%edx)

	_058115_jump:
		test   %cl,%cl
		je     _058152_jump
		mov    $0x0000a0,%ebx
		mov    0x000028(%esi),%edx
		mov    0x000020(%esi),%eax
		call   _075f40_func
		mov    $0x0000a0,%ebx
		mov    0x000020(%esi),%eax
		mov    0x00002c(%esi),%edx
		add    $0x0000a0,%eax
		call   _075f40_func
		xor    %eax,%eax
		mov    -0x000002(%esp),%edx
		mov    0x000004(%esp),%al
		sar    $0x000010,%edx
		call   _057d0c_func
		jmp    _058157_jump

	_058152_jump:
		call   _05806c_case

	_058157_jump:
		mov    %cl,%al
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_058160_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		mov    _0dbc14_data,%ecx
		xor    %eax,%eax
		mov    0x00001c(%ecx),%al
		mov    0x000034(%ecx),%edi
		test   %eax,%eax
		jne    _0581a9_jump
		mov    0x000002(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _05818a_jump
		mov    (%ecx),%ax
		jmp    _058193_jump

	_05818a_jump:
		mov    0x000002(%ecx),%ax
		mov    (%ecx),%bx
		sub    %ebx,%eax

	_058193_jump:
		mov    %ax,0x000028(%esp)
		mov    0x000028(%esp),%eax
		shl    $0x000002,%eax
		add    $0x000002,%ah
		mov    %ax,0x000028(%esp)
		jmp    _0581b0_jump

	_0581a9_jump:
		movw   $0x000200,0x000028(%esp)

	_0581b0_jump:
		lea    0x000024(%esp),%ebx
		mov    0x000004(%ecx),%eax
		lea    0x000020(%esp),%edx
		sar    $0x000010,%eax
		call   _055868_func
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000024(%esp),%ebx
		mov    %eax,0x000010(%esp)
		mov    0x000006(%ecx),%eax
		lea    0x000020(%esp),%edx
		sar    $0x000010,%eax
		mov    0x000022(%esp),%ebp
		call   _055868_func
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000014(%esp)
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000024(%esp),%ebx
		mov    %eax,0x00000c(%esp)
		mov    0x000008(%ecx),%eax
		lea    0x000020(%esp),%edx
		sar    $0x000010,%eax
		call   _055868_func
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000018(%esp)
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00001c(%esp)
		xor    %ah,%ah
		sar    $0x000010,%ebp
		mov    %ah,0x00002c(%esp)
		jmp    _058271_jump

	_05822f_jump:
		mov    0x000026(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000009,%eax
		add    %edx,%ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000016(%ecx),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,0x00000c(%edi)
		mov    %esi,%edx
		shl    $0x000009,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000018(%ecx),%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    0x00002c(%esp),%dl
		add    $0x000014,%edi
		inc    %dl
		mov    %eax,-0x000004(%edi)
		mov    %dl,0x00002c(%esp)

	_058271_jump:
		xor    %eax,%eax
		mov    0x00002c(%esp),%al
		cmp    $0x000006,%eax
		jge    _058361_jump
		mov    0x000016(%ecx),%eax
		mov    (%edi),%edx
		sar    $0x000010,%eax
		mov    0x000018(%ecx),%esi
		sub    %eax,%edx
		sar    $0x000010,%esi
		mov    %edx,%eax
		mov    0x000004(%edi),%edx
		sub    %esi,%edx
		mov    %edx,%esi
		mov    0x000008(%ecx),%edx
		sar    $0x000010,%edx
		mov    0x000008(%edi),%ebx
		test   %edx,%edx
		je     _0582dc_jump
		mov    0x00001c(%esp),%edx
		imul   %eax,%edx
		mov    %edx,0x000008(%esp)
		mov    0x000018(%esp),%edx
		imul   %esi,%edx
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		sub    0x000004(%esp),%edx
		mov    %edx,(%esp)
		imul   0x000018(%esp),%eax
		imul   0x00001c(%esp),%esi
		add    %eax,%esi
		mov    (%esp),%eax
		sar    $0x000009,%esi
		sar    $0x000009,%eax

	_0582dc_jump:
		mov    0x000006(%ecx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		je     _05831c_jump
		mov    0x000014(%esp),%edx
		imul   %ebx,%edx
		mov    %edx,0x000008(%esp)
		mov    0x00000c(%esp),%edx
		imul   %eax,%edx
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		add    0x000004(%esp),%edx
		mov    %edx,(%esp)
		imul   0x00000c(%esp),%ebx
		imul   0x000014(%esp),%eax
		sub    %eax,%ebx
		mov    (%esp),%eax
		sar    $0x000009,%ebx
		sar    $0x000009,%eax

	_05831c_jump:
		mov    0x000004(%ecx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		je     _05822f_jump
		mov    0x000010(%esp),%edx
		imul   %ebx,%edx
		imul   %ebp,%ebx
		mov    %edx,0x000004(%esp)
		mov    %esi,%edx
		imul   %ebp,%edx
		mov    %edx,0x000008(%esp)
		mov    0x000004(%esp),%edx
		add    0x000008(%esp),%edx
		mov    %edx,(%esp)
		imul   0x000010(%esp),%esi
		sub    %esi,%ebx
		mov    (%esp),%esi
		sar    $0x000009,%ebx
		sar    $0x000009,%esi
		jmp    _05822f_jump

	_058361_jump:
		mov    0x000012(%ecx),%ax
		mov    0x000006(%ecx),%si
		mov    0x000008(%ecx),%di
		mov    0x00000a(%ecx),%dx
		add    %eax,%esi
		mov    0x000014(%ecx),%ax
		mov    %si,0x000006(%ecx)
		add    %eax,%edi
		mov    0x000016(%ecx),%ax
		mov    %di,0x000008(%ecx)
		add    %eax,%edx
		mov    %dx,0x00000a(%ecx)
		mov    0x000034(%ecx),%edx
		mov    0x000030(%ecx),%eax
		mov    0x00000c(%edx),%ebx
		mov    %ebx,0x000004(%eax)
		mov    0x000010(%edx),%ebx
		mov    %ebx,0x000008(%eax)
		mov    0x000020(%edx),%ebx
		mov    %ebx,0x00000c(%eax)
		mov    0x000024(%edx),%ebx
		mov    %ebx,0x000010(%eax)
		mov    0x000070(%edx),%ebx
		mov    %ebx,0x000014(%eax)
		mov    0x000074(%edx),%ebx
		mov    %ebx,0x000018(%eax)
		mov    0x00005c(%edx),%ebx
		mov    %ebx,0x00001c(%eax)
		mov    0x000060(%edx),%ebx
		mov    %ebx,0x000020(%eax)
		mov    0x000030(%ecx),%eax
		mov    0x00005c(%edx),%ebx
		mov    %ebx,0x000030(%eax)
		mov    0x000060(%edx),%ebx
		mov    %ebx,0x000034(%eax)
		mov    0x000070(%edx),%ebx
		mov    %ebx,0x000038(%eax)
		mov    0x000074(%edx),%ebx
		mov    %ebx,0x00003c(%eax)
		mov    0x000034(%edx),%ebx
		mov    %ebx,0x000040(%eax)
		mov    0x000038(%edx),%ebx
		mov    %ebx,0x000044(%eax)
		mov    0x000048(%edx),%ebx
		mov    %ebx,0x000048(%eax)
		add    $0x00002c,%eax
		mov    0x00004c(%edx),%edx
		mov    %edx,0x000020(%eax)
		mov    0x000002(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _058403_jump
		neg    %eax

	_058403_jump:
		mov    (%ecx),%bx
		add    %eax,%ebx
		mov    0x000002(%ecx),%si
		mov    %bx,(%ecx)
		cmp    %si,%bx
		jbe    _058419_jump
		movw   $0x000000,(%ecx)

	_058419_jump:
		mov    (%ecx),%ax
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058428_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    _0dbc14_data,%ebx
		mov    0x000030(%ebx),%edx
		mov    0x000024(%ebx),%eax
		mov    %edx,%esi
		call   _010045_func
		lea    0x00002c(%edx),%esi
		mov    0x000024(%ebx),%eax
		call   _010045_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_058450_func:
		push   %edx
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		mov    0x000018(%eax,%edx,4),%dx
		mov    %dx,0x000046(%eax)
		decb   0x00007c(%eax)
		pop    %edx
		ret    



_058464_func:
		push   %edx
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x00007f,%edx
		jle    _05847d_jump
		mov    $0x000100,%edx
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %edx,%eax
		neg    %eax
		pop    %edx
		ret    

	_05847d_jump:
		xor    %ah,%ah
		pop    %edx
		ret    

	_058484_jump:
		xor    %al,%al
		ret    



_058488_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000048(%eax)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_0584a8_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000048(%eax)
		cmp    $0x000004,%dx
		jbe    _0584cb_jump
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_0584cb_jump:
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000050(%eax)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_0584e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		sar    $0x000010,%ebx
		mov    0x000010(%eax),%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _058464_func
		mov    0x000046(%edx),%cx
		mov    %ax,0x000048(%edx)
		inc    %ecx
		mov    %cx,0x000046(%edx)
		mov    0x000044(%edx),%ebx
		mov    0x000010(%edx),%eax
		sar    $0x000010,%ebx
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _058464_func
		mov    %ax,0x000052(%edx)
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058534_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		sar    $0x000010,%ebx
		mov    0x000010(%eax),%eax
		mov    (%ebx,%eax,1),%al
		mov    0x000046(%edx),%cx
		xor    %ah,%ah
		inc    %ecx
		mov    %ax,0x000048(%edx)
		mov    %cx,0x000046(%edx)
		mov    0x000044(%edx),%eax
		mov    0x000010(%edx),%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _058464_func
		mov    0x000046(%edx),%si
		mov    %ax,0x000056(%edx)
		inc    %esi
		mov    %si,0x000046(%edx)
		mov    0x000044(%edx),%eax
		mov    0x000010(%edx),%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _058464_func
		mov    %ax,0x00004a(%edx)
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0585a0_func:
		movw   $0x00ffff,0x000046(%eax)
		call   _058ae8_func
		mov    $0x000001,%al
		ret    

	_0585b0_jump:
		incw   0x000046(%eax)
		xor    %al,%al
		ret    



_0585b8_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		cmp    $0x000004,%dl
		jbe    _0585d4_jump
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_0585d4_jump:
		incw   0x000046(%eax)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_0585e0_jump:
		addw   $0x000002,0x000046(%eax)
		xor    %al,%al
		ret    



_0585e8_func:
		addw   $0x000003,0x000046(%eax)
		lea    0x000000(%eax),%eax

	_0585f0_jump:
		xor    %al,%al
		ret    



_0585f4_func:
		movw   $0x00ffff,0x000046(%eax)
		call   _058b14_func
		nop



_058600_func:
		mov    $0x000001,%al
		ret    



_058604_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		movb   $0x000001,0x000073(%eax)
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		movb   $0x000002,0x000070(%eax)
		call   _01d354_func
		dec    %eax
		mov    %ax,0x000048(%ebx)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_058624_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    $0x000001,%edx
		call   _058b88_func
		mov    0x000046(%ebx),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,2),%edx
		mov    0x000014(%ebx),%eax
		mov    (%edx,%eax,1),%ax
		mov    %ax,0x000046(%ebx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_058650_func:
		push   %ebx
		push   %edx
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_058670_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _058693_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_058693_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_058698_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _0586bb_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_0586bb_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_0586c0_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _0586e3_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_0586e3_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_0586e8_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _05870b_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_05870b_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_058710_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000046(%eax),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000050(%edx),%ebx
		shl    $0x000002,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %eax,0x000028(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05873c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000046(%eax),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000050(%edx),%ebx
		shl    $0x000002,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_058768_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _058bb4_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_058780_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _01d4a0_func
		movw   $0x000000,0x000040(%ebx)
		mov    $0x000001,%al
		movw   $0x000000,0x000042(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_0587a0_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _01d498_func
		movw   $0x000000,0x000040(%ebx)
		mov    $0x000001,%al
		movw   $0x000000,0x000042(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_0587c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x000048(%eax),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _0587dd_jump

	_0587d0_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _058b14_func
		cmp    %cx,%dx
		jl     _0587d0_jump

	_0587dd_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0587e4_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _058b88_func
		mov    $0x000001,%al
		pop    %edx
		ret    



_0587f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%edx
		mov    $0x000001,%ebx
		call   _058b88_func
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000048(%ecx),%dl
		call   _058bb4_func
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05881c_func:
		call   _058450_func
		mov    $0x000001,%al
		ret    



_058824_func:
		push   %edx
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		decw   0x00001a(%eax,%edx,4)
		mov    0x000018(%eax,%edx,4),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _05884c_jump
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		mov    0x000018(%eax,%edx,4),%dx
		mov    %dx,0x000046(%eax)
		mov    $0x000001,%al
		pop    %edx
		ret    

	_05884c_jump:
		decb   0x00007c(%eax)
		mov    $0x000001,%al
		pop    %edx
		ret    



_058854_func:
		movw   $0x00ffff,0x000046(%eax)
		mov    $0x000001,%al
		ret    



_058860_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _05887f_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _058bb4_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_05887f_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_058884_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _0588a3_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _058bb4_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_0588a3_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_0588a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		testb  $0x000002,0x000081(%eax)
		je     _0588ce_jump
		mov    0x000048(%ebx),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _0588ce_jump

	_0588c1_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _058b14_func
		cmp    %cx,%dx
		jl     _0588c1_jump

	_0588ce_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0588d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		testb  $0x000002,0x000081(%eax)
		jne    _0588fa_jump
		mov    0x000048(%ebx),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _0588fa_jump

	_0588ed_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _058b14_func
		cmp    %cx,%dx
		jl     _0588ed_jump

	_0588fa_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058900_func:
		push   %ebx
		push   %edx
		mov    0x000048(%eax),%dl
		and    $0x000001,%dl
		mov    0x000081(%eax),%dh
		and    $0x0000fd,%dh
		add    %dl,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,0x000081(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_058924_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000048(%eax),%ax
		cmp    $0x000003,%ax
		jb     _058a90_jump
		jbe    _058a44_jump
		cmp    $0x000046,%ax
		jb     _058a84_jump
		jbe    _05895a_jump
		cmp    $0x000047,%ax
		jbe    _05897e_jump
		cmp    $0x000048,%ax
		je     _0589a8_jump
		jmp    _058ae2_jump

	_05895a_jump:
		mov    %edx,%eax
		call   _01dc90_func
		test   %ax,%ax
		je     _058972_jump
		orb    $0x000002,0x000081(%edx)
		jmp    _058ae2_jump

	_058972_jump:
		andb   $0x0000fd,0x000081(%edx)
		jmp    _058ae2_jump

	_05897e_jump:
		mov    0x000081(%edx),%cl
		test   $0x000001,%cl
		je     _058998_jump
		mov    %cl,%al
		or     $0x000002,%al
		mov    %al,0x000081(%edx)
		jmp    _058ae2_jump

	_058998_jump:
		mov    %cl,%ch
		and    $0x0000fd,%ch
		mov    %ch,0x000081(%edx)
		jmp    _058ae2_jump

	_0589a8_jump:
		mov    0x000081(%edx),%ah
		test   $0x000010,%ah
		jne    _0589c4_jump
		mov    %ah,%bl
		or     $0x000002,%bl
		mov    %bl,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0589c4_jump:
		mov    %ah,%bh
		and    $0x0000fd,%bh
		mov    %bh,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0589d5_jump:
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		xor    %ebx,%ebx
		shr    $0x000007,%al
		mov    %al,%bl
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		cmp    %eax,%ebx
		jne    _058972_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0589fc_jump:
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		call   _064360_func
		test   %ax,%ax
		jne    _058972_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058a1d_jump:
		andb   $0x0000fd,0x000081(%edx)

	_058a24_jump:
		mov    %cl,%al
		mov    0x000081(%edx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%cl
		or     %al,%cl
		mov    %cl,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058a44_jump:
		mov    0x00004e(%edx),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x00006d(%edx),%bl
		cmp    %eax,%ebx
		jne    _058972_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058a64_jump:
		mov    0x00004e(%edx),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x00006c(%edx),%bl
		cmp    %eax,%ebx
		jne    _058972_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058a84_jump:
		cmp    $0x000004,%ax
		je     _058a64_jump
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058a90_jump:
		cmp    $0x000001,%ax
		jb     _058ad9_jump
		jbe    _0589fc_jump
		mov    %edx,%eax
		mov    0x000081(%edx),%cl
		call   _01dc54_func
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		xor    %ebx,%ebx
		shr    $0x000007,%al
		mov    %al,%bl
		mov    0x00004e(%edx),%eax
		shl    $0x000004,%cl
		sar    $0x000010,%eax
		shr    $0x000007,%cl
		cmp    %eax,%ebx
		jne    _058a1d_jump
		orb    $0x000002,0x000081(%edx)
		jmp    _058a24_jump

	_058ad9_jump:
		test   %ax,%ax
		je     _0589d5_jump

	_058ae2_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058ae8_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		mov    0x000010(%eax),%edx
		sar    $0x000010,%ebx
		mov    (%edx,%ebx,1),%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %dl,0x000070(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		call   *_0967e4_data(,%edx,4)
		pop    %edx
		pop    %ebx
		ret    



_058b14_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		mov    0x000010(%eax),%edx
		sar    $0x000010,%ebx
		mov    (%edx,%ebx,1),%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %dl,0x000070(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		call   *_0967e8_data(,%edx,4)
		pop    %edx
		pop    %ebx
		ret    



_058b40_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		cmpl   $0x000000,0x000010(%eax)
		je     _058b81_jump
		testb  $0x000010,0x000081(%eax)
		je     _058b85_jump
		mov    0x000048(%edx),%bx
		movswl %bx,%eax
		dec    %ebx
		mov    %bx,0x000048(%edx)
		test   %eax,%eax
		jne    _058b85_jump

	_058b63_jump:
		mov    %edx,%eax
		xor    %ebx,%ebx
		call   _058ae8_func
		mov    0x000070(%edx),%bl
		imul   $0x00000c,%ebx,%ebx
		mov    %edx,%eax
		call   *_0967ec_data(%ebx)
		test   %al,%al
		jne    _058b63_jump
		pop    %edx
		pop    %ebx
		ret    

	_058b81_jump:
		movb   $0x00001e,0x000070(%eax)

	_058b85_jump:
		pop    %edx
		pop    %ebx
		ret    



_058b88_func:
		push   %ebx
		push   %ecx
		mov    0x00007c(%eax),%dh
		xor    %ebx,%ebx
		inc    %dh
		mov    %dh,%bl
		shl    $0x000002,%ebx
		mov    %dh,0x00007c(%eax)
		lea    (%eax,%ebx,1),%ecx
		mov    0x000046(%eax),%bx
		mov    %bx,0x000018(%ecx)
		xor    %ebx,%ebx
		mov    0x00007c(%eax),%bl
		xor    %dh,%dh
		mov    %dx,0x00001a(%eax,%ebx,4)
		pop    %ecx
		pop    %ebx
		ret    



_058bb4_func:
		push   %ecx
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		mov    %dl,0x000008(%esp)
		mov    %bl,(%esp)
		mov    0x000046(%eax),%bx
		mov    0x000081(%eax),%al
		shl    $0x000003,%al
		shr    $0x000007,%al
		mov    %al,0x000004(%esp)

	_058bd5_jump:
		mov    %ecx,%eax
		call   _058b14_func
		cmp    0x000046(%ecx),%bx
		je     _058bfe_jump
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		cmp    $0x00000b,%eax
		jne    _058bd5_jump
		mov    0x000044(%ecx),%eax
		mov    0x000010(%ecx),%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,1),%al
		cmp    0x000008(%esp),%al
		jne    _058bd5_jump

	_058bfe_jump:
		cmpb   $0x000000,(%esp)
		je     _058c47_jump
		cmp    0x000046(%ecx),%bx
		je     _058c4b_jump
		mov    0x000081(%ecx),%dh
		movw   $0x000000,0x000048(%ecx)
		or     $0x000010,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _058b40_func
		mov    0x000004(%esp),%al
		mov    0x000081(%ecx),%bl
		and    $0x000001,%al
		and    $0x0000ef,%bl
		shl    $0x000004,%al
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,0x000081(%ecx)
		add    $0x00000c,%esp
		pop    %ecx
		ret    

	_058c47_jump:
		movb   $0x00001e,0x000070(%ecx)

	_058c4b_jump:
		add    $0x00000c,%esp
		pop    %ecx
		ret    



_058c50_func:
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %dl,(%esp)
		mov    $0x000001,%edx
		call   _058b88_func
		and    $0x0000ff,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    (%esp),%dl
		call   _058bb4_func
		add    $0x000004,%esp
		pop    %ecx
		ret    



_058c80_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000081(%edx),%bl
		add    $0x000081,%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		or     %dl,%cl
		mov    %cl,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058cac_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x00006c(%eax),%al
		cmp    $0x000003,%al
		jb     _058dee_jump
		jbe    _058d1c_jump
		cmp    $0x000005,%al
		je     _058d64_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058cca_jump:
		xor    %eax,%eax
		mov    _0c24ce_data,%al
		cmp    $0x00000a,%eax
		jl     _058d05_jump
		xor    %eax,%eax
		mov    _0c24ce_data,%al
		mov    $0x000002,%edx
		mov    %ax,0x000052(%ecx)
		mov    %ecx,%eax
		mov    $0x000009,%ebx
		call   _01d498_func
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058d05_jump:
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d498_func
		andb   $0x0000f7,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058d1c_jump:
		mov    $0x00000a,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		cmpb   $0x000000,_0c249a_data
		jne    _058df6_jump
		xor    %edx,%edx
		mov    0x000050(%ecx),%eax
		mov    _0c24ce_data,%dl
		sar    $0x000010,%eax
		sub    %edx,%eax
		cmp    $0x00000a,%eax
		jge    _058df6_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0c24ce_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058d64_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _058d90_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000b,%eax
		je     _058d90_jump
		cmp    $0x00000c,%eax
		je     _058d90_jump
		mov    $0x00000b,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func

	_058d90_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jl     _058df6_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d498_func
		mov    %ecx,%eax
		call   _071d94_func
		call   _01cd50_func
		orb    $0x000001,_0c1b9d_data
		mov    _0c2131_data,%al
		mov    %al,_0c2390_data
		mov    _0c247a_data,%al
		mov    %al,_0c2478_data
		call   _03c014_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058dee_jump:
		cmp    $0x000001,%al
		je     _058cca_jump

	_058df6_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_058dfc_switch:
		.long   _058e66_case
		.long   _058ed7_case
		.long   _058e6e_case
		.long   _058ed7_case
		.long   _058ed7_case
		.long   _058ed7_case
		.long   _058ed7_case
		.long   _058ed7_case
		.long   _058ed7_case
		.long   _058e76_case
		.long   _058e7e_case

_058e28_switch:
		.long   _058e86_case
		.long   _058ea4_case
		.long   _058ed7_case
		.long   _058ec3_case
		.long   _058ed2_case
		.long   _058ed7_case




_058e40_func:
		push   %ebx
		push   %edx
		mov    %al,%dl
		mov    _0c24f2_data,%bx
		dec    %ebx
		xor    %eax,%eax
		cmp    $0x000005,%bx
		ja     _058ed7_case
		and    $0x00ffff,%ebx
		jmp    *%cs:_058e28_switch(,%ebx,4)

	_058e66_case:
		mov    $0x000015,%eax
		pop    %edx
		pop    %ebx
		ret    

	_058e6e_case:
		mov    $0x000014,%eax
		pop    %edx
		pop    %ebx
		ret    

	_058e76_case:
		mov    $0x000012,%eax
		pop    %edx
		pop    %ebx
		ret    

	_058e7e_case:
		mov    $0x000013,%eax
		pop    %edx
		pop    %ebx
		ret    

	_058e86_case:
		sub    $0x000002,%dl
		cmp    $0x00000a,%dl
		ja     _058ed7_case
		and    $0x0000ff,%edx
		jmp    *%cs:_058dfc_switch(,%edx,4)

	_058e9c_jump:
		mov    $0x000011,%eax
		pop    %edx
		pop    %ebx
		ret    

	_058ea4_case:
		cmp    $0x000004,%dl
		jb     _058ed7_case
		jbe    _058e9c_jump
		cmp    $0x000009,%dl
		je     _058e76_case
		pop    %edx
		pop    %ebx
		ret    

	_058eb3_jump:
		mov    $0x00000c,%eax
		pop    %edx
		pop    %ebx
		ret    

	_058ebb_jump:
		mov    $0x00000d,%eax
		pop    %edx
		pop    %ebx
		ret    

	_058ec3_case:
		cmp    $0x000003,%dl
		jb     _058ed7_case
		jbe    _058eb3_jump
		cmp    $0x000009,%dl
		je     _058ebb_jump
		pop    %edx
		pop    %ebx
		ret    

	_058ed2_case:
		cmp    $0x000002,%dl
		je     _058eb3_jump

	_058ed7_case:
		pop    %edx
		pop    %ebx
		ret    



_058edc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		testb  $0x000002,_0c32e5_data
		jne    _058f10_jump
		testb  $0x000001,_0c1b9d_data
		jne    _058f14_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		je     _058f07_jump
		cmp    $0x000003,%eax
		jne    _058f10_jump

	_058f07_jump:
		cmpb   $0x000000,_0c518c_data
		je     _058f14_jump

	_058f10_jump:
		movb   $0x000000,0x00007b(%esi)

	_058f14_jump:
		xor    %eax,%eax
		mov    _0c1b9d_data,%bl
		mov    0x00006c(%esi),%al
		and    $0x0000fe,%bl
		test   %eax,%eax
		jne    _058fe9_jump
		testb  $0x000001,_0c1b9d_data
		je     _058f69_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0c24ce_data,%dl
		mov    _0c518c_data,%al
		add    %edx,%eax
		cmp    $0x00000a,%eax
		jl     _058f5e_jump
		mov    $0x00000b,%edx
		mov    %esi,%eax
		call   _01d498_func
		movb   $0x0000c8,0x00007f(%esi)
		jmp    _059242_jump

	_058f5e_jump:
		mov    %bl,_0c1b9d_data
		jmp    _059242_jump

	_058f69_jump:
		xor    %eax,%eax
		mov    0x00007b(%esi),%al
		cmp    $0x000001,%eax
		jl     _058fb0_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000014,%eax
		jge    _058fb0_jump
		xor    %eax,%eax
		mov    _0c24ce_data,%al
		cmp    $0x00000a,%eax
		jl     _058f95_jump
		movb   $0x000014,0x00006b(%esi)
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058f95_jump:
		mov    $0x00000a,%edx
		mov    %esi,%eax
		call   _01d498_func
		andb   $0x0000f7,0x000081(%esi)
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058fb0_jump:
		xor    %eax,%eax
		mov    0x00007b(%esi),%al
		test   %eax,%eax
		jne    _059242_jump
		mov    0x00006b(%esi),%al
		cmp    $0x000013,%eax
		jne    _059242_jump
		xor    %eax,%eax
		mov    0x00007b(%esi),%al
		movb   $0x000000,0x00006b(%esi)
		test   %eax,%eax
		jne    _059242_jump
		andb   $0x0000fe,_0c1b9d_data
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058fe9_jump:
		xor    %edx,%edx
		mov    0x00007b(%esi),%dl
		test   %edx,%edx
		je     _05921d_jump
		testb  $0x000001,_0c1b9d_data
		je     _059026_jump
		cmp    $0x00000b,%eax
		jne    _059026_jump
		decb   0x00007f(%esi)
		xor    %eax,%eax
		mov    0x00007f(%esi),%al
		test   %eax,%eax
		jne    _059242_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    %bl,_0c1b9d_data
		jmp    _05923d_jump

	_059026_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		jne    _05920e_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _059052_jump
		mov    _0c1b88_data,%al
		test   %eax,%eax
		je     _059062_jump
		cmp    $0x000001,%eax
		je     _059062_jump
		cmp    $0x000002,%eax
		je     _059062_jump

	_059052_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000001,%eax
		jne    _059242_jump

	_059062_jump:
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01d3c0_func
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		mov    _0c1b44_data,%ebx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    _0c1b84_data,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x00000a(%esp),%edx
		mov    %eax,%ecx
		sar    $0x000011,%edx
		sub    %edx,%ecx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b48_data,%ebx
		mov    _0c1b85_data,%al
		add    %eax,%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		test   %eax,%eax
		jge    _0590cb_jump
		neg    %eax

	_0590cb_jump:
		cmp    $0x000008,%eax
		jg     _059242_jump
		movswl %cx,%eax
		test   %eax,%eax
		jge    _0590dd_jump
		neg    %eax

	_0590dd_jump:
		cmp    $0x000010,%eax
		jg     _0590f7_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _05911f_jump

	_0590f7_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _059100_jump
		neg    %eax

	_059100_jump:
		cmp    $0x000010,%eax
		jg     _059242_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _059242_jump

	_05911f_jump:
		movswl %cx,%eax
		test   %eax,%eax
		jge    _059128_jump
		neg    %eax

	_059128_jump:
		cmp    $0x000010,%eax
		jg     _059173_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _059173_jump
		mov    0x000081(%esi),%ch
		and    $0x0000f7,%ch
		xor    %eax,%eax
		mov    %ch,0x000081(%esi)
		xor    %edx,%edx
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%ecx
		mov    _0c1b84_data,%dl
		add    %ecx,%eax
		sub    %edx,%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000011,%edx
		sub    %edx,%eax
		sub    $0x00000c,%eax
		jmp    _0591bf_jump

	_059173_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _05917c_jump
		neg    %eax

	_05917c_jump:
		cmp    $0x000010,%eax
		jg     _0591c4_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _0591c4_jump
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%edx
		mov    0x000081(%esi),%cl
		add    %eax,%edx
		xor    %eax,%eax
		or     $0x000008,%cl
		mov    _0c1b84_data,%al
		mov    %cl,0x000081(%esi)
		sub    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000011,%eax
		add    %edx,%eax
		add    $0x00000c,%eax

	_0591bf_jump:
		mov    %eax,_0c1b44_data

	_0591c4_jump:
		xor    %eax,%eax
		mov    _0c1b48_data,%edx
		mov    _0c1b85_data,%al
		add    %eax,%edx
		sar    $0x000004,%edx
		shl    $0x000004,%edx
		sub    %eax,%edx
		mov    %edx,_0c1b48_data
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %dx,_0c1b5c_data
		mov    %dx,_0c2584_data
		mov    %dx,_0c1b5e_data
		mov    %dx,_0c1b6e_data
		call   _058cac_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05920e_jump:
		mov    %esi,%eax
		call   _058cac_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05921d_jump:
		cmp    $0x00000a,%eax
		je     _059242_jump
		test   %edx,%edx
		jne    _059242_jump
		mov    _0c1b89_data,%dl
		cmp    $0x000003,%edx
		je     _059242_jump
		cmp    $0x000001,%eax
		je     _059242_jump
		mov    $0x000001,%edx
		mov    %esi,%eax

	_05923d_jump:
		call   _01d498_func

	_059242_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05924c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		xor    %edx,%edx
		call   _02f010_func
		mov    0x00006d(%esi),%dl
		test   %edx,%edx
		jne    _05931f_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000004,%edx
		jne    _05931f_jump
		mov    $0x000001,%ah
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%bx
		mov    %ah,_0cd0df_data
		xor    %eax,%eax
		test   %bx,%bx
		jg     _0592a1_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059291_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _05931f_jump

	_0592a1_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x000026,%edx
		jne    _059291_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _059291_jump
		mov    $0x000002,%ebx
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f584_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		mov    0x000028(%esi),%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%dl
		mov    0x000068(%ecx),%al
		add    %ebx,%edx
		add    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%edx
		movw   $0x00fffe,0x000042(%ecx)
		add    $0x000032,%edx
		movw   $0x000001,0x000040(%ecx)
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01dcec_func
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d498_func
		movw   $0x00fff8,0x000042(%esi)

	_05931f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059324_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		movb   $0x000000,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_05933c_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %ebx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%si
		xor    %eax,%eax
		test   %si,%si
		jg     _059373_jump
		jmp    _059445_jump

	_059363_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %si,%ax
		jge    _059445_jump

	_059373_jump:
		xor    %ebx,%ebx
		mov    0x000060(%ecx),%bx
		test   %ebx,%ebx
		jne    _059385_jump
		movswl %dx,%ebx
		cmp    $0x000001,%ebx
		je     _059398_jump

	_059385_jump:
		xor    %ebx,%ebx
		mov    0x000060(%ecx),%bx
		cmp    $0x000009,%ebx
		jne    _059363_jump
		movswl %dx,%ebx
		cmp    $0x000002,%ebx
		jne    _059363_jump

	_059398_jump:
		mov    0x00003a(%ecx),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jg     _059363_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _059363_jump
		andb   $0x0000bb,0x000081(%ecx)
		mov    $0x000002,%ebx
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    %ebx,%edx
		movw   $0x000000,0x00005e(%ecx)
		call   _01d4a8_func
		movl   $0x000001,0x000030(%ecx)
		xor    %ebx,%ebx
		mov    0x000068(%edi),%bl
		mov    0x000028(%edi),%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		sub    %ebx,%eax
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		mov    0x00002c(%edi),%ebx
		sar    $0x000002,%eax
		sub    %eax,%ebx
		mov    %ecx,%eax
		mov    %ebx,0x00002c(%ecx)
		call   _01dc54_func
		mov    0x000004(%esp),%eax
		mov    %ax,0x000042(%ecx)
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _05942e_jump
		mov    (%esp),%eax
		jmp    _059433_jump

	_05942e_jump:
		mov    (%esp),%eax
		neg    %eax

	_059433_jump:
		mov    %ax,0x000040(%ecx)
		mov    %ecx,%eax
		call   _01dcec_func
		andb   $0x0000ef,0x000081(%ecx)

	_059445_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_05944c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		call   _02f010_func
		cmpb   $0x000000,_0c1ed2_data
		jne    _059470_jump
		cmpb   $0x000000,_0c1ed4_data
		je     _059563_jump

	_059470_jump:
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _073538_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05948e_jump
		neg    %eax

	_05948e_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jg     _059550_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x00000f,%eax
		jge    _059550_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _0594bd_jump
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		je     _0594dc_jump

	_0594bd_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _0594ce_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		je     _0594dc_jump

	_0594ce_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%eax
		jne    _059580_jump

	_0594dc_jump:
		mov    _0c1ec0_data,%eax
		mov    0x000081(%eax),%ah
		shl    $0x000004,%ah
		shr    $0x000007,%ah
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%ah
		je     _059580_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		movw   $0x000000,0x000040(%esi)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%esi)
		call   _01d4a8_func
		mov    0x000081(%esi),%dh
		and    $0x0000ef,%dh
		mov    $0x000001,%ebx
		mov    %dh,0x000081(%esi)
		test   $0x000008,%dh
		setne  %al
		and    $0x0000ff,%eax
		xor    %edx,%edx
		add    $0x000002,%eax
		mov    %al,%dl
		mov    %esi,%eax
		call   _058bb4_func
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059550_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _059580_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000010,%eax
		jne    _059580_jump
		jmp    _059574_jump

	_059563_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _059580_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000010,%eax
		jne    _059580_jump

	_059574_jump:
		mov    $0x000011,%edx
		mov    %esi,%eax
		call   _01d498_func

	_059580_jump:
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059588_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    _0c1ec0_data,%eax
		mov    0x000034(%eax),%eax
		mov    0x000034(%ecx),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    $0x00001e,%eax
		cmp    %edx,%eax
		jle    _0595e4_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _0595e4_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _0595e4_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		mov    $0x000001,%edx
		mov    _0c32ed_data,%ah
		movb   $0x000002,0x00006e(%ecx)
		or     $0x000004,%ah
		mov    %dx,_0cd0be_data
		mov    %ah,_0c32ed_data

	_0595e4_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0595e8_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000076(%eax),%dl
		cmp    $0x000002,%edx
		jg     _0595fa_jump
		dec    %dl
		mov    %dl,0x00006b(%eax)
		pop    %edx
		ret    

	_0595fa_jump:
		sub    $0x000003,%dl
		mov    %dl,0x00006b(%eax)
		pop    %edx
		ret    



_059604_func:
		xor    %edx,%edx
		mov    0x000076(%eax),%dl
		cmp    $0x000002,%edx
		je     _059613_jump
		cmp    $0x000004,%edx
		jne    _059616_jump

	_059613_jump:
		decb   0x000076(%eax)

	_059616_jump:
		ret    



_059618_func:
		push   %edx
		mov    %eax,%edx
		call   _02f010_func
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		pop    %edx
		ret    



_059630_func:
		push   %ebx
		mov    %eax,%ebx
		testb  $0x000080,_0c32e4_data
		je     _059668_jump
		mov    _0c257e_data,%edx
		sar    $0x000010,%edx
		cmp    $0x000003,%edx
		je     _059668_jump
		mov    0x000032(%ebx),%edx
		mov    $0x0000c2,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		mov    _0c1ec0_data,%edx
		mov    0x000034(%ebx),%bx
		mov    %bx,0x00004a(%edx)

	_059668_jump:
		pop    %ebx
		ret    



_05966c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		call   _072f20_func
		mov    0x000032(%ebx),%edx
		mov    $0x0000c2,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		mov    _0c25da_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0596b8_jump
		call   _04fd90_func
		mov    _0c25da_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,1)

	_0596b8_jump:
		call   _07312c_func
		mov    %ax,_0c25dc_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _0596ce_jump
		call   _04fd90_func

	_0596ce_jump:
		mov    0x000081(%ebx),%ch
		mov    0x000032(%ebx),%eax
		and    $0x0000fb,%ch
		sar    $0x000010,%eax
		mov    %ch,0x000081(%ebx)
		call   _06cc54_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0596ec_func:
		push   %ebx
		movswl %dx,%edx
		cmp    $0x000004,%edx
		jne    _059732_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000005,%edx
		jne    _059732_jump
		mov    _0c1ec0_data,%ebx
		mov    0x00003e(%ebx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jl     _059728_jump
		jle    _059718_jump
		mov    $0x000009,%edx
		jmp    _05972d_jump

	_059718_jump:
		testb  $0x000008,0x000081(%ebx)
		je     _059728_jump
		mov    $0x000009,%edx
		jmp    _05972d_jump

	_059728_jump:
		mov    $0x000006,%edx

	_05972d_jump:
		call   _01d498_func

	_059732_jump:
		pop    %ebx
		ret    



_059734_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _072f20_func
		mov    _0c32e4_data,%ah
		mov    0x000081(%edx),%bl
		or     $0x000080,%ah
		and    $0x0000fb,%bl
		mov    %ah,_0c32e4_data
		mov    %bl,0x000081(%edx)
		pop    %edx
		pop    %ebx
		ret    

_059760_switch:
		.long   _059807_case
		.long   _05983c_case
		.long   _05980d_case
		.long   _05983c_case
		.long   _05980d_case
		.long   _05983c_case
		.long   _05983c_case
		.long   _059813_case
		.long   _05983c_case
		.long   _059819_case
		.long   _05983c_case
		.long   _059819_case




_059790_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x00006c(%eax),%bl
		mov    _0c32e4_data,%al
		and    $0x000001,%al
		cmp    $0x000007,%ebx
		jne    _0597f0_jump
		and    $0x0000ff,%eax
		jne    _0597d5_jump
		mov    _0c1ec0_data,%eax
		movb   $0x000008,0x00006e(%eax)
		jmp    _05983c_case

	_0597ba_jump:
		movb   $0x000008,0x00006e(%ebx)
		jmp    _05983c_case

	_0597c3_jump:
		movb   $0x00000a,0x00006e(%ebx)
		jmp    _05983c_case

	_0597cc_jump:
		movb   $0x00000c,0x00006e(%ebx)
		jmp    _05983c_case

	_0597d5_jump:
		mov    _0c1ec0_data,%ebx
		mov    0x00006e(%ebx),%al
		cmp    $0x000003,%al
		jb     _0597ea_jump
		jbe    _0597c3_jump
		cmp    $0x000005,%al
		je     _0597cc_jump
		jmp    _05983c_case

	_0597ea_jump:
		cmp    $0x000001,%al
		je     _0597ba_jump
		jmp    _05983c_case

	_0597f0_jump:
		cmp    $0x00000e,%ebx
		jne    _05983c_case
		and    $0x0000ff,%eax
		jne    _05981f_jump
		mov    _0c1ec0_data,%eax
		movb   $0x000001,0x00006e(%eax)
		jmp    _05983c_case

	_059807_case:
		movb   $0x000003,0x00006e(%eax)
		jmp    _05983c_case

	_05980d_case:
		movb   $0x000005,0x00006e(%eax)
		jmp    _05983c_case

	_059813_case:
		movb   $0x00000a,0x00006e(%eax)
		jmp    _05983c_case

	_059819_case:
		movb   $0x00000c,0x00006e(%eax)
		jmp    _05983c_case

	_05981f_jump:
		mov    _0c1ec0_data,%eax
		mov    0x00006e(%eax),%bl
		dec    %bl
		cmp    $0x00000b,%bl
		ja     _05983c_case
		and    $0x0000ff,%ebx
		jmp    *%cs:_059760_switch(,%ebx,4)

	_05983c_case:
		mov    %edx,%eax
		call   _072f20_func
		mov    0x000081(%edx),%ah
		mov    _0c32e4_data,%bl
		and    $0x0000fb,%ah
		or     $0x000001,%bl
		mov    %ah,0x000081(%edx)
		mov    _0c1ec0_data,%eax
		mov    %bl,_0c32e4_data
		mov    0x00006e(%eax),%bl
		mov    %bl,0x00006c(%eax)
		mov    %bl,_0c1ed0_data
		mov    0x000032(%edx),%edx
		mov    $0x00000b,%eax
		sar    $0x000010,%edx
		mov    %bl,_0c212b_data
		call   _06ac04_func
		pop    %edx
		pop    %ebx
		ret    



_05988c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _072f20_func
		mov    0x000076(%edx),%al
		mov    _0c1b92_data,%ah
		add    %al,%ah
		mov    _0c24d1_data,%bl
		mov    %ah,_0c1b92_data
		cmp    %bl,%ah
		jbe    _0598b6_jump
		mov    %bl,_0c1b92_data

	_0598b6_jump:
		andb   $0x0000fb,0x000081(%edx)
		mov    0x000032(%edx),%edx
		mov    $0x000008,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		pop    %edx
		pop    %ebx
		ret    



_0598d0_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000032(%eax),%edx
		mov    $0x0000d5,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		mov    %ebx,%eax
		call   _072f20_func
		mov    _0c32e4_data,%ah
		mov    0x000081(%ebx),%dl
		or     $0x000008,%ah
		and    $0x0000fb,%dl
		mov    %ah,_0c32e4_data
		mov    %dl,0x000081(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_05990c_func:
		push   %edx
		orb    $0x000040,_0c32e4_data
		mov    0x000081(%eax),%dh
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%eax)
		mov    0x000032(%eax),%edx
		mov    $0x00000a,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		pop    %edx
		ret    



_05993c_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000032(%eax),%edx
		mov    $0x00000e,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		mov    $0x000017,%edx
		mov    %ebx,%eax
		call   _01d498_func
		cmpw   $0x000000,_0c518e_data
		je     _0599a0_jump
		mov    _0c5186_data,%dl
		dec    %dl
		mov    %dl,_0c5186_data
		mov    _0c518c_data,%dh
		inc    %dh
		xor    %eax,%eax
		mov    %dh,_0c518c_data
		mov    %dl,%al
		mov    %dh,_0c24ce_data
		test   %eax,%eax
		jne    _0599a6_jump
		movw   $0x00ffe0,_0c5190_data
		call   _03bfec_func
		jmp    _0599a6_jump

	_0599a0_jump:
		incb   _0c24ce_data

	_0599a6_jump:
		xor    %eax,%eax
		mov    _0c24ce_data,%al
		cmp    $0x000063,%eax
		jle    _0599f9_jump
		mov    %ebx,%eax
		call   _072f20_func
		cmpw   $0x000000,_0c518e_data
		je     _0599ce_jump
		movw   $0x00ffff,_0c25dc_data
		jmp    _0599d9_jump

	_0599ce_jump:
		call   _07312c_func
		mov    %ax,_0c25dc_data

	_0599d9_jump:
		mov    _0c25da_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0599eb_jump
		call   _04fd90_func

	_0599eb_jump:
		movb   $0x000001,_0c1180_data
		subb   $0x000064,_0c24ce_data

	_0599f9_jump:
		mov    0x000038(%ebx),%ax
		add    $0x00000a,%eax
		movswl %ax,%edx
		mov    0x000036(%ebx),%ax
		add    $0x00000a,%eax
		cwtl   
		call   _073614_func
		pop    %edx
		pop    %ebx
		ret    



_059a18_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _072f20_func
		mov    _0c25dc_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _059a54_jump
		mov    $0x000004,%ah
		mov    %ah,_0c1b92_data
		mov    %ah,_0c24d1_data
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%ebx
		andb   $0x0000fb,0x000081(%ebx,%eax,1)

	_059a54_jump:
		call   _07312c_func
		mov    %ax,_0c25de_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _059a71_jump
		mov    $0x000004,%al
		mov    %al,_0c1b92_data
		mov    %al,_0c24d1_data

	_059a71_jump:
		andb   $0x0000fb,0x000081(%edx)
		mov    0x000032(%edx),%edx
		mov    $0x00000c,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _059aa8_jump
		cmp    $0x000004,%eax
		je     _059aa8_jump
		mov    $0x000004,%bh
		mov    %bh,_0c1b92_data
		mov    %bh,_0c24d1_data

	_059aa8_jump:
		pop    %edx
		pop    %ebx
		ret    



_059aac_func:
		push   %edx
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		call   _02e2a4_func
		pop    %edx
		ret    



_059acc_func:
		push   %ebx
		push   %edx
		mov    0x000076(%eax),%dl
		cmp    0x000077(%eax),%dl
		jae    _059aec_jump
		mov    %dl,%bl
		dec    %bl
		xor    %edx,%edx
		mov    %bl,%dl
		mov    %bl,0x000076(%eax)
		cmp    $0x000001,%edx
		jge    _059aec_jump
		mov    0x000077(%eax),%dl
		mov    %dl,0x000076(%eax)

	_059aec_jump:
		pop    %edx
		pop    %ebx
		ret    



_059af0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0c24dc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _059b29_jump
		mov    0x000076(%edx),%al
		cmp    0x000077(%edx),%al
		jne    _059b29_jump
		mov    %edx,%eax
		call   _072f20_func
		movw   $0x000000,0x000040(%edx)
		mov    0x000076(%edx),%bl
		movw   $0x000000,0x000042(%edx)
		dec    %bl
		mov    %bl,0x000076(%edx)
		call   _052a3c_func

	_059b29_jump:
		pop    %edx
		pop    %ebx
		ret    



_059b2c_func:
		call   _059b3c_func
		xor    %ah,%ah
		mov    %ah,_0c1180_data
		ret    



_059b3c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _059bac_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000008,%eax
		je     _059bac_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _059b78_jump
		mov    _0c2582_data,%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _059b78_jump
		sub    %eax,_0c1b44_data

	_059b78_jump:
		xor    %edx,%edx
		mov    $0x000001,%ah
		mov    %dx,_0c1b5c_data
		mov    %ah,_0c2573_data
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		mov    %dx,_0c2584_data
		test   %eax,%eax
		jge    _05a090_jump
		mov    %dx,_0c1b5e_data
		jmp    _05a090_jump

	_059bac_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		je     _059bc0_jump
		cmp    $0x000001,%eax
		jne    _059d3d_jump

	_059bc0_jump:
		mov    _0c1b70_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _059d3d_jump
		xor    %eax,%eax
		mov    _0c25e2_data,%al
		test   %eax,%eax
		jne    _059d3d_jump
		mov    _0c2570_data,%cl
		test   %cl,%cl
		je     _059c00_jump
		mov    $0x000036,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		jmp    _059c1a_jump

	_059c00_jump:
		mov    $0x000017,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		mov    %cl,_0c1b87_data

	_059c1a_jump:
		cmpb   $0x000000,_0c1ed2_data
		je     _059c43_jump
		mov    _0c1ec0_data,%eax
		andb   $0x0000fb,0x000081(%eax)
		xor    %dh,%dh
		mov    %dh,_0c1ed2_data
		call   _072f20_func
		xor    %eax,%eax
		call   _05f05c_func

	_059c43_jump:
		call   _073c10_func
		xor    %eax,%eax
		mov    _0c5184_data,%al
		cmp    $0x000001,%eax
		jne    _059c83_jump
		mov    $_0c32e4_data,%edi
		mov    $_0c32e8_data,%esi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		xor    %edi,%edi
		xor    %eax,%eax
		mov    %di,_0c2584_data
		call   _065064_func
		mov    $0x000001,%eax
		xor    %bl,%bl
		call   _065064_func
		mov    %bl,_0c5184_data

	_059c83_jump:
		mov    _0c25da_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _059cbe_jump
		movw   $0x00ffff,_0c25dc_data
		call   _04fd90_func
		mov    _0c25da_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,1)

	_059cbe_jump:
		mov    _0c25dc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _059cfb_jump
		mov    $0xffffffff,%edx
		mov    $0x000004,%cl
		mov    _0c1b04_data,%eax
		mov    %dx,_0c25de_data
		mov    %cl,_0c1b92_data
		mov    -0x000003(%eax),%dl
		sub    $0x000084,%eax
		and    $0x0000fb,%dl
		mov    %cl,_0c24d1_data
		mov    %dl,0x000081(%eax)

	_059cfb_jump:
		xor    %ebx,%ebx
		mov    _0c2570_data,%dh
		mov    %bx,_0c2584_data
		mov    %bx,_0c1b5c_data
		test   %dh,%dh
		jne    _059d32_jump
		cmpb   $0x000000,_0c5184_data
		jne    _059d32_jump
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		je     _059d32_jump
		movb   $0x000002,_0c25e2_data

	_059d32_jump:
		call   _01ccfc_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059d3d_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _059d55_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000017,%eax
		je     _059d75_jump

	_059d55_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _059f90_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000036,%eax
		jne    _059f90_jump

	_059d75_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _059da2_jump
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		test   %eax,%eax
		jmp    _059dce_jump

	_059da2_jump:
		xor    %edx,%edx
		mov    _0c1b86_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b20_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1b87_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_059dce_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _059e29_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _059e29_jump
		cmpb   $0x000000,_0c2570_data
		je     _059efc_jump
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _059efc_jump

	_059e29_jump:
		cmpb   $0x000000,_0c2570_data
		je     _059f06_jump
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _059f06_jump
		call   _0370d0_func
		test   %al,%al
		jne    _059efc_jump
		xor    %eax,%eax
		mov    _0cd0d2_data,%al
		test   %eax,%eax
		je     _059f06_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _059e90_jump
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		test   %eax,%eax
		jmp    _059ebc_jump

	_059e90_jump:
		xor    %edx,%edx
		mov    _0c1b86_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b20_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1b87_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_059ebc_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _059f06_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b28_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _059f06_jump

	_059efc_jump:
		call   _03c014_func
		jmp    _05a083_jump

	_059f06_jump:
		xor    %edx,%edx
		mov    _0c1b64_data,%eax
		mov    %dx,_0c1b5c_data
		mov    %dx,_0c1b5e_data
		mov    %dx,_0c2584_data
		sar    $0x000010,%eax
		mov    %dx,_0c24f8_data
		cmp    $0xffffffff,%eax
		je     _05a090_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		mov    _0c1b64_data,%ebx
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		sar    $0x000010,%ebx
		movw   $0x000000,0x000042(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b64_data,%ebx
		sar    $0x000010,%ebx
		movw   $0x000000,0x000040(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b64_data,%ebx
		sar    $0x000010,%ebx
		movb   $0x000000,0x000071(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movb   $0x000000,0x000072(%edx,%eax,4)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_059f90_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000006,%eax
		jne    _05a090_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000e,%eax
		je     _059fc8_jump
		mov    $0x00000e,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		xor    %dl,%dl
		mov    %dl,_0c1b87_data
		call   _01ccfc_func

	_059fc8_jump:
		mov    $0x000002,%dh
		xor    %eax,%eax
		xor    %esi,%esi
		mov    _0c1b88_data,%al
		mov    %dh,_0c25e2_data
		mov    %si,_0c2584_data
		mov    %si,_0c1b5c_data
		mov    %si,_0c1b5e_data
		cmp    $0x00000e,%eax
		jne    _05a090_jump
		xor    %edx,%edx
		mov    _0c1b28_data,%ebx
		mov    _0c1b89_data,%dl
		mov    (%ebx,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _05a01a_jump
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		test   %eax,%eax
		jmp    _05a046_jump

	_05a01a_jump:
		xor    %edx,%edx
		mov    _0c1b86_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b20_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1b87_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_05a046_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05a090_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _05a090_jump

	_05a083_jump:
		xor    %bh,%bh
		call   _07387c_func
		mov    %bh,_0c25e2_data

	_05a090_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a098_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		cmpw   $0x000000,_0c518e_data
		je     _05a0d0_jump
		mov    _0c5188_data,%al
		xor    %edx,%edx
		xor    %edi,%edi
		mov    %al,_0c24ce_data
		mov    %edx,_0c5188_data
		mov    $_0c1b1c_data,%eax
		mov    %di,_0c2488_data
		call   _071d94_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_05a0d0_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _05a0e8_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000008,%eax
		je     _05a14b_jump

	_05a0e8_jump:
		xor    %eax,%eax
		mov    _0c1b92_data,%al
		cmp    $0x0000ff,%eax
		je     _05a14b_jump
		xor    %eax,%eax
		mov    _0c25e2_data,%al
		test   %eax,%eax
		jne    _05a14b_jump
		call   _03c014_func
		mov    $_0c2134_data,%eax
		mov    $0x000001,%ebx
		call   _06c7bc_func
		mov    _0c1180_data,%ah
		mov    %bx,_0c24ee_data
		test   %ah,%ah
		je     _05a14b_jump
		sub    %bx,_0c24c8_data
		mov    _0c24c6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05a143_jump
		xor    %esi,%esi
		mov    %si,_0c24c8_data

	_05a143_jump:
		xor    %dl,%dl
		mov    %dl,_0c1180_data

	_05a14b_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_05a150_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		test   %ebx,%ebx
		jne    _05a226_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000004,%edx
		jne    _05a226_jump
		lea    0x000000(,%ebx,4),%ecx
		mov    0x00000c(%eax),%ebx
		mov    (%ecx,%ebx,1),%ebx
		testb  $0x000010,0x000007(%ebx,%edx,8)
		je     _05a18b_jump
		xor    %edx,%edx
		mov    0x00006b(%eax),%dl
		test   %edx,%edx
		jmp    _05a1af_jump

	_05a18b_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x00000a(%ebx,%edx,4),%dx
		and    $0x00ffff,%edx
		xor    %ebx,%ebx
		dec    %edx
		mov    0x00006b(%eax),%bl
		cmp    %edx,%ebx

	_05a1af_jump:
		sete   %dl
		and    $0x0000ff,%edx
		je     _05a226_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%eax),%edx
		mov    0x00006c(%eax),%al
		and    $0x0000ff,%eax
		mov    (%edx,%ebx,1),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _05a226_jump
		mov    _0c32ed_data,%ch
		test   $0x000008,%ch
		jne    _05a226_jump
		mov    %ch,%al
		mov    _0c24e2_data,%edx
		or     $0x000008,%al
		sar    $0x000010,%edx
		mov    %al,_0c32ed_data
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		call   _073aa8_func
		movb   $0x000001,_0cd0df_data

	_05a226_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a22c_func:
		push   %edx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000001,%edx
		jne    _05a241_jump
		mov    $0x000005,%edx
		call   _01d498_func

	_05a241_jump:
		pop    %edx
		ret    



_05a244_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edi
		xor    %edx,%edx
		mov    0x000070(%eax),%dl
		test   %edx,%edx
		jne    _05a260_jump
		andb   $0x0000f7,0x000081(%eax)
		jmp    _05a274_jump

	_05a260_jump:
		cmp    $0x000001,%edx
		jne    _05a274_jump
		mov    0x000081(%eax),%ah
		or     $0x000008,%ah
		mov    %ah,0x000081(%edi)

	_05a274_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		test   %edx,%edx
		jne    _05a32c_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x00000b,%edx
		jne    _05a32c_jump
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		cmp    $0x000005,%edx
		jl     _05a311_jump
		xor    %edx,%edx
		mov    0x00007f(%edi),%dl
		test   %edx,%edx
		jne    _05a311_jump
		mov    %dl,%ch
		mov    0x00007d(%edi),%al
		inc    %ch
		inc    %al
		mov    %ch,0x00007f(%edi)
		mov    %al,%dl
		mov    %al,0x00007d(%edi)
		cmp    $0x000002,%edx
		jle    _05a2be_jump
		movb   $0x000001,0x00007d(%edi)

	_05a2be_jump:
		xor    %edx,%edx
		mov    0x000076(%edi),%dl
		cmp    $0x000001,%edx
		je     _05a2e3_jump
		mov    $0xffffffff,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %edi,%eax
		mov    0x00007d(%edi),%dl
		call   _05933c_func
		jmp    _05a480_jump

	_05a2e3_jump:
		mov    $0xfffffffe,%ecx
		mov    %edx,%ebx
		mov    %edi,%eax
		mov    $0x000002,%edx
		call   _05933c_func
		mov    $0xffffffff,%ecx
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _05933c_func
		jmp    _05a480_jump

	_05a311_jump:
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		cmp    $0x000002,%edx
		jge    _05a480_jump
		movb   $0x000000,0x00007f(%edi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05a32c_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		test   %edx,%edx
		jne    _05a3d1_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x000015,%edx
		jne    _05a3d1_jump
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		cmp    $0x000005,%edx
		jl     _05a3b6_jump
		xor    %edx,%edx
		mov    0x00007f(%edi),%dl
		test   %edx,%edx
		jne    _05a3b6_jump
		mov    $0xfffffffc,%esi
		mov    %dl,%cl
		xor    %bh,%bh
		inc    %cl
		mov    %bh,(%esp)
		mov    %cl,0x00007f(%edi)
		jmp    _05a36e_jump

	_05a36b_jump:
		incb   (%esp)

	_05a36e_jump:
		xor    %edx,%edx
		mov    (%esp),%dl
		cmp    $0x000004,%edx
		jge    _05a480_jump
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		inc    %edx
		xor    %dh,%dh
		mov    $0x000003,%eax
		mov    %edx,%ebx
		sub    %edx,%eax
		neg    %ebx
		movswl %ax,%edx
		movswl %bx,%ecx
		mov    %edi,%eax
		movswl %si,%ebx
		inc    %esi
		call   _05933c_func
		movswl %si,%edx
		cmp    $0xfffffffe,%edx
		jne    _05a36b_jump
		mov    $0x000003,%esi
		jmp    _05a36b_jump

	_05a3b6_jump:
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		cmp    $0x000002,%edx
		jge    _05a480_jump
		movb   $0x000000,0x00007f(%edi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05a3d1_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		test   %edx,%edx
		jne    _05a440_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x000003,%edx
		jne    _05a440_jump
		mov    0x00007f(%edi),%bl
		xor    %edx,%edx
		inc    %bl
		mov    0x00007d(%edi),%dl
		mov    %bl,0x00007f(%edi)
		cmp    $0x000003,%edx
		je     _05a40b_jump
		xor    %edx,%edx
		mov    %bl,%dl
		cmp    $0x0000fd,%edx
		jl     _05a40b_jump
		mov    %edi,%eax
		call   _07293c_func
		movb   $0x000003,0x00007d(%edi)

	_05a40b_jump:
		movw   $0x000000,0x000040(%edi)
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		movw   $0x000000,0x000042(%edi)
		cmp    $0x00000c,%edx
		jle    _05a42e_jump
		movb   $0x000003,0x00006b(%edi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05a42e_jump:
		cmp    $0x000001,%edx
		jg     _05a480_jump
		movb   $0x000000,0x00007f(%edi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05a440_jump:
		xor    %edx,%edx
		mov    0x00006d(%edi),%dl
		cmp    $0x000001,%edx
		jne    _05a480_jump
		cmpw   $0x000000,0x000052(%edi)
		je     _05a454_jump
		incb   0x00007f(%edi)

	_05a454_jump:
		xor    %edx,%edx
		mov    0x00007f(%edi),%dl
		cmp    $0x0000fe,%edx
		jl     _05a472_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %edi,%eax
		call   _058bb4_func

	_05a472_jump:
		mov    %edi,%eax
		call   _04d2c4_func
		mov    %edi,%eax
		call   _024ba8_func

	_05a480_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a48c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		movswl %dx,%eax
		test   %eax,%eax
		jne    _05a4c6_jump
		movb   $0x000001,_0c1ed3_data
		mov    %ecx,%eax
		call   _01e92c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _05a4ba_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _05a4d0_jump

	_05a4ba_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		jmp    _05a4d0_jump

	_05a4c6_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_05a4d0_jump:
		mov    %ecx,%eax
		call   _058bb4_func
		pop    %ecx
		pop    %ebx
		ret    



_05a4dc_func:
		movw   $0x000001,0x000052(%eax)
		ret    



_05a4e4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _05a556_jump
		mov    %ecx,%eax
		call   _01e92c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _05a52a_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		jmp    _05a533_jump

	_05a52a_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_05a533_jump:
		call   _01d4a8_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _05a552_jump
		movb   $0x000000,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_05a552_jump:
		movb   $0x000001,0x000070(%ecx)

	_05a556_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05a55c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _05a5b3_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _05a576_jump
		cmp    $0x000002,%eax
		jne    _05a5b3_jump

	_05a576_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		call   _01d4a8_func
		andb   $0x0000ef,0x000081(%ecx)
		mov    %ecx,%eax
		call   _01dc54_func
		testb  $0x000008,0x000081(%ecx)
		je     _05a5af_jump
		movb   $0x000001,0x000070(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05a5af_jump:
		movb   $0x000000,0x000070(%ecx)

	_05a5b3_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a610_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		movswl %dx,%eax
		cmp    $0x0000ff,%eax
		je     _05a644_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000001,0x000007(%ebx,%eax,1)
		je     _05a707_jump

	_05a644_jump:
		mov    %ecx,%eax
		call   _01e92c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _05a681_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		subl   $0x000002,0x00002c(%ecx)
		andb   $0x0000ef,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_05a681_jump:
		mov    _0c1ec0_data,%eax
		testb  $0x000008,0x000081(%eax)
		je     _05a6aa_jump
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jle    _05a6a6_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _05a6cd_jump

	_05a6a6_jump:
		jge    _05a6d4_jump
		jmp    _05a6c3_jump

	_05a6aa_jump:
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jle    _05a6c1_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _05a6cd_jump

	_05a6c1_jump:
		jge    _05a6d4_jump

	_05a6c3_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_05a6cd_jump:
		mov    %ecx,%eax
		call   _058bb4_func

	_05a6d4_jump:
		mov    $0x000002,%ebx
		mov    0x00002c(%ecx),%edx
		movw   $0x000000,0x000040(%ecx)
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    %ebx,%edx
		movw   $0x00fffc,0x000042(%ecx)
		call   _01d4a8_func
		mov    0x000032(%ecx),%edx
		mov    $0x00001c,%eax
		sar    $0x000010,%edx
		call   _06ac04_func

	_05a707_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05a70c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		cmp    $0x000001,%edx
		jne    _05a733_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x00000b,%edx
		jne    _05a733_jump
		mov    $0x00000e,%edx
		call   _01d498_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05a733_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		test   %edx,%edx
		jne    _05a743_jump
		mov    0x00006c(%ecx),%dl
		test   %edx,%edx
		je     _05a756_jump

	_05a743_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		cmp    $0x000001,%edx
		jne    _05a797_jump
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		test   %edx,%edx
		jne    _05a797_jump

	_05a756_jump:
		mov    $0x00000b,%ebx
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		mov    0x000081(%ecx),%ah
		and    $0x0000ef,%ah
		mov    $0x000001,%ebx
		mov    %ah,0x000081(%ecx)
		test   $0x000008,%ah
		setne  %dl
		and    $0x0000ff,%edx
		add    $0x000002,%edx
		and    $0x0000ff,%edx
		mov    %ecx,%eax
		call   _058bb4_func

	_05a797_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a79c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e92c_func
		mov    _0c1ec0_data,%edx
		mov    0x00003e(%edx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _05a7c1_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _05a7cd_jump

	_05a7c1_jump:
		jge    _05a7d4_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_05a7cd_jump:
		mov    %ecx,%eax
		call   _058bb4_func

	_05a7d4_jump:
		subl   $0x000002,0x00002c(%ecx)
		xor    %edx,%edx
		mov    0x000076(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		test   %edx,%edx
		je     _05a837_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		movw   $0x00fffc,0x000042(%ecx)
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%ecx),%dl
		testb  $0x000040,0x000007(%ebx,%edx,8)
		je     _05a80f_jump
		mov    $0x00000a,%edx
		jmp    _05a814_jump

	_05a80f_jump:
		mov    $0x000002,%edx

	_05a814_jump:
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %dl,%bl
		mov    $0x000002,%edx
		call   _01d4a8_func
		mov    0x000032(%ecx),%edx
		mov    $0x00001c,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		pop    %ecx
		pop    %ebx
		ret    

	_05a837_jump:
		xor    %ebx,%ebx
		mov    0x00006d(%ecx),%bl
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		movw   $0x00fff8,0x000042(%ecx)
		lea    0x000000(,%edx,8),%eax
		mov    (%ebx),%edx
		testb  $0x000040,0x000007(%edx,%eax,1)
		je     _05a866_jump
		mov    $0x000006,%edx
		jmp    _05a86b_jump

	_05a866_jump:
		mov    $0x000003,%edx

	_05a86b_jump:
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %dl,%bl
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %ecx
		pop    %ebx
		ret    



_05a87c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000081(%eax),%ah
		shl    $0x000004,%ah
		shr    $0x000007,%ah
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %ah,%al
		je     _05a918_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _05a8b3_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _05a8c3_jump

	_05a8b3_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _05a918_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _05a918_jump

	_05a8c3_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _05a918_jump
		mov    _0c1b88_data,%al
		cmp    $0x000012,%eax
		jne    _05a918_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		call   _01d4a8_func
		testb  $0x000008,0x000081(%ecx)
		je     _05a907_jump
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		jmp    _05a911_jump

	_05a907_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx

	_05a911_jump:
		mov    %ecx,%eax
		call   _058bb4_func

	_05a918_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a91c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000070(%eax),%al
		cmp    $0x000002,%al
		jb     _05a98a_jump
		jbe    _05a932_jump
		cmp    $0x00001e,%al
		je     _05a932_jump

	_05a92e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05a932_jump:
		mov    %edx,%eax
		call   _04d2c4_func
		mov    %edx,%eax
		call   _024ba8_func
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		test   %eax,%eax
		jne    _05a92e_jump
		mov    0x00006c(%edx),%al
		cmp    $0x000002,%eax
		jne    _05a92e_jump
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    0x000076(%edx),%al
		je     _05a92e_jump
		lea    0x000081(%edx),%eax
		testb  $0x000001,0x000076(%edx)
		setne  %dl
		and    $0x0000ff,%edx
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		or     %dl,%cl
		mov    %cl,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05a98a_jump:
		and    $0x0000ff,%eax
		jne    _05a99a_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _05a9a1_jump

	_05a99a_jump:
		orb    $0x000008,0x000081(%edx)

	_05a9a1_jump:
		mov    %edx,%eax
		call   _04d2c4_func
		mov    %edx,%eax
		call   _024ba8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a9b4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _05a9c9_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		je     _05aa27_jump

	_05a9c9_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d4a8_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _05aa07_jump
		mov    0x000081(%ecx),%dl
		mov    $0x000001,%ebx
		or     $0x000008,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    $0x000003,%edx
		jmp    _05aa22_jump

	_05aa07_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		and    $0x0000f7,%ah
		mov    $0x000002,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax

	_05aa22_jump:
		call   _058bb4_func

	_05aa27_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05aa2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _05aa75_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _05aa75_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		testb  $0x000008,0x000081(%ecx)
		je     _05aa64_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _05aa6e_jump

	_05aa64_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_05aa6e_jump:
		mov    %ecx,%eax
		call   _058bb4_func

	_05aa75_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05aa7c_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000004,%edx
		jne    _05aa97_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		call   _058bb4_func

	_05aa97_jump:
		pop    %edx
		pop    %ebx
		ret    



_05aa9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02f010_func
		cmpw   $0x000000,_0cd0be_data
		je     _05ab3c_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _05aad2_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _05aad2_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _058bb4_func

	_05aad2_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _05ab0a_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _05ab0a_jump
		mov    0x000004(%ecx),%eax
		mov    0x000016(%eax),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jl     _05ab0a_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _058bb4_func

	_05ab0a_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _05ab4a_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05ab4a_jump
		mov    0x000004(%ecx),%eax
		mov    0x000022(%eax),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jl     _05ab4a_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		jmp    _05ab45_jump

	_05ab3c_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_05ab45_jump:
		call   _058bb4_func

	_05ab4a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ab50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		cmpw   $0x000000,_0cd0c0_data
		je     _05abda_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _05ab7e_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000a,%eax
		jne    _05ab7e_jump
		movw   $0x000001,_0cd0c2_data

	_05ab7e_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _05abda_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _05abda_jump
		cmpw   $0x000000,_0cd0c2_data
		je     _05abbd_jump
		mov    $0x000001,%ah
		mov    _0c32ed_data,%dl
		movb   $0x000000,0x00007f(%ecx)
		xor    %edi,%edi
		mov    %ah,_0cd0df_data
		or     $0x000002,%dl
		mov    %di,_0cd0c2_data
		mov    %dl,_0c32ed_data

	_05abbd_jump:
		mov    0x00007f(%ecx),%dh
		xor    %eax,%eax
		inc    %dh
		mov    %dh,%al
		mov    %dh,0x00007f(%ecx)
		cmp    $0x000064,%eax
		jle    _05abda_jump
		call   _07387c_func
		orb    $0x000004,_0c32e5_data

	_05abda_jump:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jne    _05ac1c_jump
		cmpw   $0x000000,_0cd0be_data
		je     _05ac15_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _05ac1c_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _05ac1c_jump
		mov    $0x000003,%edx
		mov    %eax,%ebx
		mov    %ecx,%eax
		call   _058bb4_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ac15_jump:
		andb   $0x0000fb,0x000081(%ecx)

	_05ac1c_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ac24_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _05ac68_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _05ac68_jump
		mov    _0cd0c0_data,%dx
		test   %dx,%dx
		jne    _05ac68_jump
		mov    %dx,_0cd0c2_data
		mov    %eax,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		mov    $0x000001,%esi
		call   _058bb4_func
		mov    %si,_0cd0c0_data

	_05ac68_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _05ac8a_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05ac8a_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _058bb4_func

	_05ac8a_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ac90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		add    %ebx,%eax
		sub    $0x00000c,%eax
		cwtl   
		call   _0739f0_func
		mov    0x000054(%edx),%ebx
		cwtl   
		sar    $0x000010,%ebx
		sub    $0x00002b,%eax
		add    %ebx,%eax
		mov    0x000034(%edx),%cx
		mov    %eax,0x00002c(%edx)
		cmp    _0c1b66_data,%cx
		jne    _05acce_jump
		movw   $0x00000d,0x000050(%edx)
		jmp    _05acd4_jump

	_05acce_jump:
		movw   $0x000000,0x000050(%edx)

	_05acd4_jump:
		mov    0x000056(%edx),%ax
		mov    0x000050(%edx),%si
		cmp    %si,%ax
		jge    _05aced_jump
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,0x000056(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05aced_jump:
		jle    _05acf4_jump
		dec    %eax
		mov    %ax,0x000056(%edx)

	_05acf4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05acfc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		call   _02f010_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%dl
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		and    $0x00000f,%dl
		cmp    $0x000004,%eax
		jne    _05ad57_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x00000a,%eax
		jne    _05ad57_jump
		xor    %eax,%eax
		mov    %dl,%al
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _05ad57_jump
		mov    0x000032(%esi),%edx
		mov    $0x000028,%eax
		sar    $0x000010,%edx
		call   _06ac04_func

	_05ad57_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000001,%eax
		jne    _05ad7b_jump
		mov    0x00007f(%esi),%bl
		inc    %bl
		mov    %bl,0x00007f(%esi)
		jne    _05ae8a_jump
		mov    %bl,%cl
		inc    %cl
		mov    %cl,0x00007f(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ad7b_jump:
		cmpb   $0x000000,0x00007f(%esi)
		je     _05adab_jump
		mov    $0x000001,%ebx
		mov    $_0c1ed8_data,%edx
		mov    %ebx,_0c1b40_data
		call   _052080_func
		mov    %esi,%eax
		call   _06c56c_func
		call   _050f60_func
		movb   $0x000000,0x00007f(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05adab_jump:
		testb  $0x000002,_0c32e5_data
		jne    _05ae8a_jump
		mov    0x000081(%esi),%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _05ae8a_jump
		mov    %esi,%eax
		call   _01dc90_func
		test   %ax,%ax
		je     _05ae8a_jump
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05ae8a_jump
		mov    _0c2582_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _05ae8a_jump
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _05ae8a_jump
		mov    _0c1b88_data,%al
		test   %eax,%eax
		jne    _05ae8a_jump
		mov    _0c2578_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0c2576_data,%eax
		mov    $0x00000f,%ecx
		sar    $0x000010,%eax
		mov    0x000028(%esi),%bx
		push   %eax
		mov    _0c2574_data,%eax
		mov    0x00002c(%esi),%dx
		sar    $0x000010,%eax
		add    $0x00002a,%ebx
		push   %eax
		mov    _0c2572_data,%eax
		add    $0x000030,%edx
		sar    $0x000010,%eax
		movswl %dx,%edx
		push   %eax
		movswl %bx,%eax
		mov    $0x000005,%ebx
		call   _02aa7c_func
		test   %ax,%ax
		je     _05ae8a_jump
		xor    %edx,%edx
		mov    %dx,_0c1b5c_data
		mov    0x000081(%esi),%dh
		or     $0x000001,%dh
		mov    $0x000001,%ebx
		mov    %dh,0x000081(%esi)
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %edx,_0c1b40_data
		call   _058bb4_func

	_05ae8a_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ae90_func:
		jmp    _06a560_jump



_05ae98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x000073(%eax),%eax
		sar    $0x000018,%eax
		cmp    $0x000000,%eax
		je     _05aeb5_jump
		mov    $0x000001,%eax
		jg     _05aeb5_jump
		neg    %eax

	_05aeb5_jump:
		mov    %ax,0x000004(%esp)
		mov    0x000034(%esi),%dx
		cmp    _0c1b66_data,%dx
		je     _05aeef_jump
		cmpb   $0x000000,_0c24a2_data
		jne    _05af81_jump
		mov    0x000076(%esi),%bl
		test   %bl,%bl
		je     _05af81_jump
		mov    0x000004(%esp),%al
		mov    %bl,%bh
		sub    %al,%bh
		mov    %bh,0x000076(%esi)
		jmp    _05af81_jump

	_05aeef_jump:
		cmpb   $0x000000,_0c24a0_data
		jne    _05af81_jump
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d840_func
		xor    %eax,%eax
		mov    0x000010(%esp),%ebx
		mov    0x000074(%esi),%al
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0c1b84_data,%dl
		mov    %ebx,0x000010(%esp)
		add    _0c1b44_data,%edx
		mov    0x00000a(%esp),%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000011,%ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		sub    %eax,%edx
		mov    $0x000003,%cl
		mov    %edx,%eax
		mov    %edx,0x000008(%esp)
		test   %ax,%ax
		js     _05af59_jump
		sar    %cl,%ax
		jmp    _05af62_jump

	_05af59_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05af62_jump:
		sub    %al,0x000076(%esi)
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _05af71_jump
		neg    %eax

	_05af71_jump:
		cmp    $0x000010,%eax
		jl     _05af81_jump
		mov    0x000004(%esp),%al
		mov    $0x00000f,%ah
		mul    %ah
		mov    %al,0x000076(%esi)

	_05af81_jump:
		add    $0x000014,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05af90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000018,%esp
		mov    %eax,%edi
		call   _01d4b4_func
		mov    %eax,%edx
		mov    %ax,0x000010(%esp)
		mov    %edi,%eax
		call   _01d5dc_func
		movswl %dx,%esi
		mov    %ax,0x000008(%esp)
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %ecx,%ebx
		mov    %edi,%eax
		call   _01d754_func
		test   %ax,%ax
		je     _05b09f_jump
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x00000d,%edx
		je     _05b09f_jump
		cmp    $0x00001c,%edx
		je     _05b09f_jump
		cmp    $0x00000e,%edx
		je     _05b09f_jump
		cmp    $0x00001d,%edx
		je     _05b09f_jump
		mov    0x000040(%edi),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _05b03e_jump
		decw   0x000042(%edi)
		xor    %edx,%edx
		mov    0x000060(%edi),%dx
		cmp    $0x0000ae,%edx
		je     _05b019_jump
		cmp    $0x0000e1,%edx
		jne    _05b021_jump

	_05b019_jump:
		movw   $0x00ffdc,0x000040(%edi)
		jmp    _05b027_jump

	_05b021_jump:
		movw   $0x000024,0x000040(%edi)

	_05b027_jump:
		mov    0x000006(%esp),%ebx
		mov    0x00000e(%esp),%edx
		mov    %edi,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _02eb40_func
		jmp    _05b09f_jump

	_05b03e_jump:
		mov    %ecx,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _02eb40_func
		test   %ax,%ax
		je     _05b09f_jump
		xor    %edx,%edx
		mov    0x000060(%edi),%dx
		movw   $0x00ffff,0x000042(%edi)
		cmp    $0x0000ae,%edx
		je     _05b06a_jump
		cmp    $0x0000e1,%edx
		jne    _05b072_jump

	_05b06a_jump:
		movw   $0x00fff0,0x000040(%edi)
		jmp    _05b078_jump

	_05b072_jump:
		movw   $0x000010,0x000040(%edi)

	_05b078_jump:
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x000006,%edx
		jne    _05b089_jump
		mov    $0x000007,%ebx
		jmp    _05b093_jump

	_05b089_jump:
		cmp    $0x000015,%edx
		jne    _05b09f_jump
		mov    $0x000016,%ebx

	_05b093_jump:
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _01d4a8_func

	_05b09f_jump:
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x00000d,%edx
		je     _05b0b2_jump
		cmp    $0x00001c,%edx
		jne    _05b1f7_jump

	_05b0b2_jump:
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		cmp    $0x000006,%edx
		jne    _05b1f7_jump
		cmpb   $0x000000,_0c249a_data
		je     _05b1f7_jump
		mov    _0c1b04_data,%esi
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _05b0f6_jump
		jmp    _05b288_jump

	_05b0e6_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _05b288_jump

	_05b0f6_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x0000ba,%edx
		jne    _05b0e6_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _05b0e6_jump
		lea    0x00000c(%esp),%edx
		lea    0x000014(%esp),%ecx
		push   %edx
		lea    0x000008(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d840_func
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		cmp    $0x000001,%edx
		jne    _05b174_jump
		mov    -0x000002(%esp),%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000011,%edx
		add    %edx,%ebx
		movw   $0x00000d,0x000040(%esi)
		add    $0x00000d,%ebx
		mov    0x000081(%esi),%dh
		mov    %ebx,0x000028(%esi)
		or     $0x000008,%dh
		mov    0x000028(%esi),%ax
		mov    %dh,0x000081(%esi)
		jmp    _05b19b_jump

	_05b174_jump:
		mov    -0x000002(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000011,%edx
		add    %ebx,%edx
		movw   $0x00fff3,0x000040(%esi)
		sub    $0x00000d,%edx
		mov    %edx,0x000028(%esi)
		mov    0x000028(%esi),%ax

	_05b19b_jump:
		mov    %ax,0x00003c(%esi)
		mov    0x000012(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000069(%esi),%dl
		sub    %edx,%ebx
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		movw   $0x000002,0x000042(%esi)
		add    %ebx,%edx
		movl   $0x000001,0x000024(%esi)
		add    $0x000002,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x000081(%esi),%bl
		mov    0x00002c(%esi),%ax
		or     $0x000004,%bl
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f584_func
		andb   $0x0000ef,0x000081(%esi)
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b1f7_jump:
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x00000e,%edx
		je     _05b206_jump
		cmp    $0x00001d,%edx
		jne    _05b22a_jump

	_05b206_jump:
		movw   $0x00fff8,0x000042(%edi)
		mov    0x000081(%edi),%dl
		movw   $0x000000,0x000040(%edi)
		and    $0x0000ef,%dl
		mov    %dl,0x000081(%edi)
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b22a_jump:
		mov    0x000040(%edi),%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _05b288_jump
		cmp    $0x000006,%edx
		jne    _05b241_jump
		mov    $0x000007,%ebx
		jmp    _05b27c_jump

	_05b241_jump:
		cmp    $0x000015,%edx
		jne    _05b24d_jump
		mov    $0x000016,%ebx
		jmp    _05b27c_jump

	_05b24d_jump:
		cmp    $0x00000b,%edx
		jne    _05b263_jump
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		cmp    $0x000036,%edx
		jne    _05b263_jump
		mov    $0x000002,%ebx
		jmp    _05b27c_jump

	_05b263_jump:
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		cmp    $0x00001a,%edx
		jne    _05b288_jump
		xor    %edx,%edx
		mov    0x00006b(%edi),%dl
		cmp    $0x000036,%edx
		jne    _05b288_jump
		mov    $0x000013,%ebx

	_05b27c_jump:
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _01d4a8_func

	_05b288_jump:
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b294_func:
		push   %ebx
		push   %ecx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		je     _05b2a4_jump
		cmp    $0x000001,%edx
		jne    _05b2c8_jump

	_05b2a4_jump:
		mov    0x000076(%eax),%ch
		xor    %edx,%edx
		dec    %ch
		mov    %ch,%dl
		mov    %ch,0x000076(%eax)
		test   %edx,%edx
		jne    _05b2be_jump
		mov    $0x00000d,%ebx
		jmp    _05b3da_jump

	_05b2be_jump:
		mov    $0x00000a,%ebx
		jmp    _05b3d8_jump

	_05b2c8_jump:
		cmp    $0x000007,%edx
		je     _05b2dc_jump
		cmp    $0x000002,%edx
		je     _05b2dc_jump
		cmp    $0x000003,%edx
		je     _05b2dc_jump
		cmp    $0x000004,%edx
		jne    _05b308_jump

	_05b2dc_jump:
		mov    0x000076(%eax),%cl
		xor    %edx,%edx
		dec    %cl
		mov    %cl,%dl
		mov    %cl,0x000076(%eax)
		test   %edx,%edx
		jne    _05b2f9_jump
		mov    $0x00000d,%ebx
		call   _01d4a8_func
		pop    %ecx
		pop    %ebx
		ret    

	_05b2f9_jump:
		mov    $0x00000c,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %ecx
		pop    %ebx
		ret    

	_05b308_jump:
		cmp    $0x000005,%edx
		je     _05b312_jump
		cmp    $0x000006,%edx
		jne    _05b33e_jump

	_05b312_jump:
		mov    0x000076(%eax),%bh
		xor    %edx,%edx
		dec    %bh
		mov    %bh,%dl
		mov    %bh,0x000076(%eax)
		test   %edx,%edx
		jne    _05b32f_jump
		mov    $0x00000d,%ebx
		call   _01d4a8_func
		pop    %ecx
		pop    %ebx
		ret    

	_05b32f_jump:
		mov    $0x00000b,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %ecx
		pop    %ebx
		ret    

	_05b33e_jump:
		cmp    $0x00000f,%edx
		je     _05b348_jump
		cmp    $0x000010,%edx
		jne    _05b374_jump

	_05b348_jump:
		mov    0x000076(%eax),%bl
		xor    %edx,%edx
		dec    %bl
		mov    %bl,%dl
		mov    %bl,0x000076(%eax)
		test   %edx,%edx
		jne    _05b365_jump
		mov    $0x00001c,%ebx
		call   _01d4a8_func
		pop    %ecx
		pop    %ebx
		ret    

	_05b365_jump:
		mov    $0x000019,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %ecx
		pop    %ebx
		ret    

	_05b374_jump:
		cmp    $0x000016,%edx
		je     _05b388_jump
		cmp    $0x000011,%edx
		je     _05b388_jump
		cmp    $0x000012,%edx
		je     _05b388_jump
		cmp    $0x000013,%edx
		jne    _05b3b0_jump

	_05b388_jump:
		decb   0x000076(%eax)
		xor    %edx,%edx
		mov    0x000076(%eax),%dl
		test   %edx,%edx
		jne    _05b3a1_jump
		mov    $0x00001c,%ebx
		call   _01d4a8_func
		pop    %ecx
		pop    %ebx
		ret    

	_05b3a1_jump:
		mov    $0x00001b,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %ecx
		pop    %ebx
		ret    

	_05b3b0_jump:
		cmp    $0x000014,%edx
		je     _05b3ba_jump
		cmp    $0x000015,%edx
		jne    _05b3df_jump

	_05b3ba_jump:
		decb   0x000076(%eax)
		xor    %edx,%edx
		mov    0x000076(%eax),%dl
		test   %edx,%edx
		jne    _05b3d3_jump
		mov    $0x00001c,%ebx
		call   _01d4a8_func
		pop    %ecx
		pop    %ebx
		ret    

	_05b3d3_jump:
		mov    $0x00001a,%ebx

	_05b3d8_jump:
		xor    %edx,%edx

	_05b3da_jump:
		call   _01d4a8_func

	_05b3df_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05b3e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _05b49e_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _05b410_jump
		cmp    $0x000001,%eax
		je     _05b410_jump
		cmp    $0x00000f,%eax
		je     _05b410_jump
		cmp    $0x000010,%eax
		jne    _05b49e_jump

	_05b410_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _05b41e_jump
		cmp    $0x000001,%eax
		jne    _05b425_jump

	_05b41e_jump:
		mov    $0x000005,%ebx
		jmp    _05b434_jump

	_05b425_jump:
		cmp    $0x00000f,%eax
		je     _05b42f_jump
		cmp    $0x000010,%eax
		jne    _05b440_jump

	_05b42f_jump:
		mov    $0x000014,%ebx

	_05b434_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d4a8_func

	_05b440_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x0000ae,%eax
		je     _05b454_jump
		cmp    $0x0000b8,%eax
		jne    _05b47b_jump

	_05b454_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		movw   $0x000003,0x000042(%ecx)
		cmp    $0x0000ae,%eax
		jne    _05b471_jump
		movw   $0x00ffe8,0x000040(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b471_jump:
		movw   $0x000018,0x000040(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b47b_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		movw   $0x000002,0x000042(%ecx)
		cmp    $0x0000e1,%eax
		jne    _05b498_jump
		movw   $0x00ffdc,0x000040(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b498_jump:
		movw   $0x000024,0x000040(%ecx)

	_05b49e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b4b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		testb  $0x000002,_0c32e5_data
		je     _05b4cd_jump
		mov    $0x000100,%edx
		jmp    _05b4d2_jump

	_05b4cd_jump:
		mov    $0x000200,%edx

	_05b4d2_jump:
		mov    _0c2582_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		test   %eax,%eax
		jge    _05b4e3_jump
		neg    %eax

	_05b4e3_jump:
		cmp    %edx,%eax
		setg   %cl
		mov    0x000060(%esi),%ax
		cmp    $0x000022,%ax
		jb     _05c0ad_jump
		cmp    $0x000022,%ax
		jbe    _05b51e_jump
		cmp    $0x000098,%ax
		jb     _05c08a_jump
		jbe    _05b51e_jump
		cmp    $0x0000ed,%ax
		jb     _05c077_jump
		jbe    _05b51e_jump
		cmp    $0x0000f3,%ax
		jne    _05c127_jump

	_05b51e_jump:
		mov    _0c1b66_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _05b694_jump
		mov    0x000056(%esi),%bx
		test   %bx,%bx
		je     _05b53e_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,0x000056(%esi)

	_05b53e_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _05c127_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0c1b88_data,%al
		mov    $0x000001,%bh
		add    %edx,%eax
		mov    %bh,_0c24d3_data
		cmp    $0x00000b,%eax
		jb     _05b570_jump
		cmp    $0x00000c,%eax
		jbe    _05b5c5_jump

	_05b570_jump:
		mov    $_0c1b1c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		call   _0652ac_func
		movw   $0x002710,0x000054(%esi)
		mov    $0x00000c,%eax
		mov    _0c1b5e_data,%dx
		mov    %ax,_0c24c4_data
		xor    %eax,%eax
		sub    $0x000003,%edx
		mov    0x000060(%esi),%ax
		mov    %dx,_0c1b5e_data
		cmp    $0x0000f3,%eax
		jne    _05b5cc_jump
		mov    $0x000011,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _05b633_jump

	_05b5c5_jump:
		call   _05ebd4_func
		jmp    _05b570_jump

	_05b5cc_jump:
		cmp    $0x000098,%eax
		jne    _05b604_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _05b5e4_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		je     _05b5f4_jump

	_05b5e4_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _05b633_jump

	_05b5f4_jump:
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _05b633_jump

	_05b604_jump:
		cmp    $0x0000ed,%eax
		jne    _05b633_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _05b633_jump
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		jne    _05b633_jump
		mov    $_0c1b1c_data,%eax
		mov    $0x000001,%ebx
		call   _073b58_func
		mov    %ebx,%edx
		mov    %esi,%eax
		call   _058bb4_func

	_05b633_jump:
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d840_func
		xor    %eax,%eax
		mov    _0c1b44_data,%edx
		mov    _0c1b84_data,%al
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000011,%eax
		cmp    %eax,%edx
		jge    _05b682_jump
		movw   $0x00fe00,_0c2584_data
		jmp    _05c127_jump

	_05b682_jump:
		movw   $0x000200,_0c2584_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b694_jump:
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000056(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b6a5_jump:
		mov    _0c1b66_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _05b694_jump
		mov    0x000056(%esi),%cx
		test   %cx,%cx
		je     _05b6c1_jump
		mov    %ecx,%edi
		dec    %edi
		mov    %di,0x000056(%esi)

	_05b6c1_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _05c127_jump
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d840_func
		xor    %edx,%edx
		xor    %eax,%eax
		call   _02d3ac_func
		xor    %eax,%eax
		mov    _0c1b44_data,%edx
		mov    _0c1b84_data,%al
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000011,%eax
		cmp    %eax,%edx
		jge    _05b726_jump
		orb    $0x000008,_0c1b9d_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b726_jump:
		andb   $0x0000f7,_0c1b9d_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b736_jump:
		mov    _0c1b66_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _05b694_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _05b694_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000009,%eax
		jne    _05b694_jump
		mov    0x000056(%esi),%bx
		test   %bx,%bx
		je     _05b76f_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,0x000056(%esi)

	_05b76f_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _05c127_jump
		xor    %eax,%eax
		mov    $0x000001,%dl
		mov    _0c1b89_data,%al
		mov    %dl,_0c24d3_data
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0c1b88_data,%al
		add    %edx,%eax
		cmp    $0x00000b,%eax
		jb     _05b7a5_jump
		cmp    $0x00000c,%eax
		jbe    _05b83f_jump

	_05b7a5_jump:
		mov    $_0c1b1c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		call   _0652ac_func
		mov    $0x00000c,%eax
		movw   $0x002710,0x000054(%esi)
		mov    $0x00000a,%ebx
		mov    _0c1b5e_data,%dx
		mov    %ax,_0c24c4_data
		sub    $0x000004,%edx
		mov    %esi,%eax
		mov    %dx,_0c1b5e_data
		xor    %edx,%edx
		lea    0x000008(%esp),%ecx
		call   _01d4a8_func
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d840_func
		xor    %eax,%eax
		mov    _0c1b44_data,%edx
		mov    _0c1b84_data,%al
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000011,%eax
		cmp    %eax,%edx
		jge    _05b682_jump
		movw   $0x00fe00,_0c2584_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b83f_jump:
		call   _05ebd4_func
		jmp    _05b7a5_jump

	_05b849_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _05b8ec_jump
		mov    0x000050(%esi),%dx
		mov    _0c24f0_data,%eax
		dec    %edx
		sar    $0x000010,%eax
		mov    %dx,0x000050(%esi)
		cmp    $0x000001,%eax
		jne    _05b87d_jump
		cmpb   $0x000000,_0c249a_data
		je     _05b879_jump
		movb   $0x000000,0x00007e(%esi)
		jmp    _05b87d_jump

	_05b879_jump:
		movb   $0x000004,0x00007e(%esi)

	_05b87d_jump:
		mov    0x000050(%esi),%ax
		cmp    0x000056(%esi),%ax
		jg     _05c127_jump
		mov    _0c1b66_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _05b8dc_jump
		mov    $0xffffffff,%eax
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ax,_0c1b66_data
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %edx,%edx
		call   _065064_func
		mov    %dx,_0c1b6e_data
		movw   $0x002710,0x000054(%esi)
		mov    %dx,_0c24c4_data
		mov    %dx,_0c1b5e_data

	_05b8dc_jump:
		andb   $0x0000df,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b8ec_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _05b9fb_jump
		mov    _0c1b66_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _05b94d_jump
		mov    $0xffffffff,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		mov    %bx,_0c1b66_data
		mov    $0x000001,%ebx
		call   _01d4a8_func
		xor    %eax,%eax
		mov    %cl,%al
		call   _065064_func
		mov    %di,_0c24c4_data
		mov    %di,_0c1b6e_data
		mov    %di,_0c1b5e_data
		movw   $0x002710,0x000054(%esi)

	_05b94d_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000006,%eax
		jne    _05b9dd_jump
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%esi),%edx
		mov    (%edx,%ebx,1),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _05b97d_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		test   %eax,%eax
		jmp    _05b9a0_jump

	_05b97d_jump:
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx

	_05b9a0_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05b9dd_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _05b9dd_jump
		mov    %esi,%eax
		call   _05622c_func

	_05b9dd_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000014,%eax
		jne    _05c127_jump
		orb    $0x000020,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05b9fb_jump:
		movl   $0x000000,0x000024(%esi)
		movl   $0x000004,0x000030(%esi)
		mov    0x000081(%esi),%ch
		movb   $0x000004,0x00007e(%esi)
		or     $0x000020,%ch
		mov    %ch,0x000081(%esi)
		mov    0x000034(%esi),%dx
		cmp    _0c1b66_data,%dx
		jne    _05c127_jump
		mov    $0xffffffff,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		mov    %bx,_0c1b66_data
		mov    $0x000001,%ebx
		call   _01d4a8_func
		xor    %eax,%eax
		mov    %cl,%al
		call   _065064_func
		mov    %di,_0c24c4_data
		mov    %di,_0c1b6e_data
		mov    %di,_0c1b5e_data
		movw   $0x002710,0x000054(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ba7a_jump:
		mov    _0c1b66_data,%ax
		mov    0x000034(%esi),%dx
		xor    %cl,%cl
		cmp    %dx,%ax
		jne    _05bae8_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		je     _05bad5_jump
		mov    0x000048(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _05bad5_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		movw   $0x000000,0x000052(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00004a(%esi),%ax
		movb   $0x000000,0x000072(%esi)
		inc    %eax
		movw   $0x000000,0x00004a(%esi)
		mov    %ax,0x000056(%esi)
		mov    $0x000001,%cl
		mov    %ax,0x000042(%esi)
		jmp    _05bae8_jump

	_05bad5_jump:
		mov    0x000048(%esi),%eax
		mov    0x000054(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		jne    _05bae8_jump
		mov    $0x000001,%cl

	_05bae8_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _05c127_jump
		mov    0x000054(%esi),%eax
		mov    0x000040(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _05bbb8_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000056(%esi)
		mov    0x00003c(%esi),%eax
		movw   $0x000000,0x000042(%esi)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000034(%esi),%di
		cmp    _0c1b66_data,%di
		je     _05bb4c_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bb45_jump:
		call   _05ebd4_func
		jmp    _05bb84_jump

	_05bb4c_jump:
		mov    0x00003c(%esi),%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%eax
		mov    _0c1b48_data,%ebx
		sub    %edx,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0c1b88_data,%al
		add    %edx,%eax
		mov    %ebx,_0c1b48_data
		cmp    $0x00000b,%eax
		jb     _05bb84_jump
		cmp    $0x00000c,%eax
		jbe    _05bb45_jump

	_05bb84_jump:
		mov    $_0c1b1c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		movb   $0x000001,_0c24d3_data
		call   _0652ac_func
		mov    $0x00000c,%eax
		movw   $0x002710,0x000054(%esi)
		mov    %ax,_0c24c4_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bbb8_jump:
		test   %cl,%cl
		jne    _05c127_jump
		mov    _0c1b66_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _05c127_jump
		xor    %edx,%edx
		mov    _0c24d3_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _05c127_jump
		call   *_0cd00c_data
		test   %ax,%ax
		je     _05c127_jump
		call   _0652ac_func
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    %ebx,%eax
		jne    _05bc12_jump
		movw   $0x002710,0x000054(%esi)

	_05bc12_jump:
		mov    $0x000002,%ecx
		mov    0x000040(%esi),%eax
		mov    $0xfffffffe,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _05bc31_jump
		cmp    %ecx,%eax
		jg     _05bc31_jump
		mov    $0x000001,%eax
		jmp    _05bc33_jump

	_05bc31_jump:
		xor    %eax,%eax

	_05bc33_jump:
		test   %eax,%eax
		je     _05bc48_jump
		subw   $0x000002,_0c1b5e_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bc48_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _05c127_jump
		mov    0x000042(%esi),%ax
		mov    _0c1b5e_data,%cx
		sub    $0x000002,%eax
		add    %eax,%ecx
		mov    %cx,_0c1b5e_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bc77_jump:
		mov    _0c1b66_data,%ax
		mov    0x000034(%esi),%dx
		xor    %cl,%cl
		cmp    %dx,%ax
		jne    _05bce5_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		je     _05bcd2_jump
		mov    0x000048(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _05bcd2_jump
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		movw   $0x000000,0x000052(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00004a(%esi),%ax
		movb   $0x000000,0x000072(%esi)
		inc    %eax
		movw   $0x000000,0x00004a(%esi)
		mov    %ax,0x000056(%esi)
		mov    $0x000001,%cl
		mov    %ax,0x000042(%esi)
		jmp    _05bce5_jump

	_05bcd2_jump:
		mov    0x000048(%esi),%edx
		mov    0x000054(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		inc    %edx
		cmp    %edx,%eax
		jne    _05bce5_jump
		mov    $0x000001,%cl

	_05bce5_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _05c127_jump
		mov    0x000054(%esi),%eax
		mov    0x000040(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _05bdaf_jump
		mov    $0x000018,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000056(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000034(%esi),%dx
		cmp    _0c1b66_data,%dx
		je     _05bd39_jump
		jmp    _05bd9d_jump

	_05bd32_jump:
		call   _05ebd4_func
		jmp    _05bd70_jump

	_05bd39_jump:
		mov    _0c1b48_data,%edi
		mov    0x00003c(%esi),%eax
		mov    0x00002c(%esi),%ecx
		sar    $0x000010,%eax
		xor    %edx,%edx
		sub    %ecx,%eax
		mov    _0c1b89_data,%dl
		add    %eax,%edi
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0c1b88_data,%al
		add    %edx,%eax
		mov    %edi,_0c1b48_data
		cmp    $0x00000b,%eax
		jb     _05bd70_jump
		cmp    $0x00000c,%eax
		jbe    _05bd32_jump

	_05bd70_jump:
		mov    $_0c1b1c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    $0x000001,%cl
		call   _01d4a8_func
		mov    $0x00000c,%ebx
		mov    %cl,_0c24d3_data
		call   _0652ac_func
		mov    %bx,_0c24c4_data
		movw   $0x002710,0x000054(%esi)

	_05bd9d_jump:
		mov    0x00003c(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bdaf_jump:
		test   %cl,%cl
		jne    _05c127_jump
		mov    _0c1b66_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _05c127_jump
		xor    %edx,%edx
		mov    _0c24d3_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _05c127_jump
		call   *_0cd00c_data
		test   %ax,%ax
		je     _05c127_jump
		call   _0652ac_func
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    %ebx,%eax
		jne    _05be09_jump
		movw   $0x002710,0x000054(%esi)

	_05be09_jump:
		mov    $0x000002,%ecx
		mov    0x000040(%esi),%eax
		mov    $0xfffffffe,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _05be28_jump
		cmp    %ecx,%eax
		jg     _05be28_jump
		mov    $0x000001,%eax
		jmp    _05be2a_jump

	_05be28_jump:
		xor    %eax,%eax

	_05be2a_jump:
		test   %eax,%eax
		je     _05be3f_jump
		subw   $0x000002,_0c1b5e_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05be3f_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _05c127_jump
		mov    _0c1b5e_data,%cx
		mov    0x000042(%esi),%ax
		add    %eax,%ecx
		mov    %cx,_0c1b5e_data
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff9,%eax
		jge    _05c127_jump
		movw   $0x00fff9,_0c1b5e_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05be85_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000014,%eax
		jne    _05bed7_jump
		mov    0x000056(%esi),%di
		test   %di,%di
		jne    _05bed0_jump
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000056(%esi)
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _05bebb_jump
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d498_func
		jmp    _05bed7_jump

	_05bebb_jump:
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		test   %eax,%eax
		je     _05beca_jump
		movb   $0x000000,0x00007e(%esi)
		jmp    _05bed7_jump

	_05beca_jump:
		movb   $0x000003,0x00007e(%esi)
		jmp    _05bed7_jump

	_05bed0_jump:
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x000056(%esi)

	_05bed7_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _05beed_jump
		xor    %eax,%eax
		mov    0x00007e(%esi),%al
		test   %eax,%eax
		je     _05bf0c_jump

	_05beed_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _05c127_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000014,%eax
		je     _05c127_jump

	_05bf0c_jump:
		mov    _0c1b66_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _05bf52_jump
		movw   $0x00ffff,_0c1b66_data
		mov    $0x000002,%ebx
		mov    $_0c1b1c_data,%eax
		mov    %ebx,%edx
		call   _01d4a8_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %ecx,%ecx
		call   _065064_func
		mov    %cx,_0c24c4_data
		mov    %cx,_0c1b6e_data
		mov    %cx,_0c1b5e_data

	_05bf52_jump:
		movw   $0x0003e8,0x000054(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bf61_jump:
		xor    %edx,%edx
		mov    0x00006c(%esi),%dl
		cmp    $0x000007,%edx
		jne    _05c017_jump
		xor    %ebx,%ebx
		mov    0x00006a(%esi),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%esi),%ebx
		mov    0x00000a(%ebx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %ebx,%ebx
		dec    %eax
		mov    0x00006b(%esi),%bl
		cmp    %eax,%ebx
		jne    _05bfc9_jump
		xor    %eax,%eax
		mov    0x00000c(%esi),%ebx
		mov    0x00006d(%esi),%al
		mov    (%ebx,%eax,4),%eax
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _05bfc9_jump
		mov    0x000081(%esi),%dh
		mov    %eax,0x000024(%esi)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%esi)

	_05bfc9_jump:
		mov    _0c1b66_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _05c011_jump
		mov    $0xffffffff,%eax
		mov    $0x000002,%ebx
		mov    %ax,_0c1b66_data
		mov    %ebx,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %edx,%edx
		call   _065064_func
		mov    %dx,_0c24c4_data
		mov    %dx,_0c1b6e_data
		mov    %dx,_0c1b5e_data

	_05c011_jump:
		movw   $0x0003e8,0x000054(%esi)

	_05c017_jump:
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x000014,%eax
		jne    _05c127_jump
		mov    _0c1b66_data,%ax
		cmp    0x000034(%esi),%ax
		je     _05c03b_jump
		mov    0x000052(%esi),%ax
		cmp    0x000050(%esi),%ax
		je     _05c03f_jump

	_05c03b_jump:
		decw   0x000052(%esi)

	_05c03f_jump:
		mov    0x000056(%esi),%cx
		test   %cx,%cx
		je     _05c052_jump
		mov    0x000050(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _05c067_jump

	_05c052_jump:
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d498_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c067_jump:
		mov    %ecx,%edi
		dec    %edi
		mov    %di,0x000056(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c077_jump:
		cmp    $0x0000be,%ax
		je     _05b736_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c08a_jump:
		cmp    $0x000044,%ax
		jb     _05c127_jump
		jbe    _05ba7a_jump
		cmp    $0x000073,%ax
		je     _05bf61_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c0ad_jump:
		cmp    $0x00001b,%ax
		jb     _05c0d6_jump
		jbe    _05bc77_jump
		cmp    $0x00001c,%ax
		jbe    _05be85_jump
		cmp    $0x00001d,%ax
		je     _05b51e_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c0d6_jump:
		cmp    $0x000019,%ax
		jb     _05c127_jump
		jbe    _05b6a5_jump
		mov    0x000052(%esi),%di
		test   %di,%di
		je     _05b849_jump
		mov    _0c1b66_data,%ax
		cmp    0x000034(%esi),%ax
		je     _05c106_jump
		mov    0x000050(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000014,%eax
		je     _05c127_jump

	_05c106_jump:
		mov    0x000052(%esi),%ax
		dec    %ax
		mov    %ax,0x000052(%esi)
		jne    _05c127_jump
		mov    $0x00000b,%edx
		mov    %esi,%eax
		call   _01d498_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c127_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05c130_func:
		push   %ebx
		xor    %ebx,%ebx
		movswl %dx,%edx
		mov    0x000079(%eax),%bl
		cmp    %ebx,%edx
		jne    _05c160_jump
		mov    _0c1ec0_data,%edx
		mov    0x00003e(%edx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _05c154_jump
		mov    $0x000019,%edx
		jmp    _05c15b_jump

	_05c154_jump:
		jge    _05c160_jump
		mov    $0x00001a,%edx

	_05c15b_jump:
		call   _01d498_func

	_05c160_jump:
		pop    %ebx
		ret    



_05c170_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c519e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05c1ad_jump
		push   $0xffffffa2
		mov    %eax,%edx
		shl    $0x000005,%eax
		mov    $0xffffff5b,%ecx
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		mov    $0x000006,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01ce68_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c1ad_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05c1c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c1b04_data,%edx
		mov    _0c1b08_data,%di
		xor    %bl,%bl
		xor    %ecx,%ecx
		test   %di,%di
		jg     _05c1f0_jump
		jmp    _05c284_jump

	_05c1e0_jump:
		inc    %ecx
		add    $0x000084,%edx
		cmp    %di,%cx
		jge    _05c284_jump

	_05c1f0_jump:
		xor    %eax,%eax
		mov    %bl,%al
		cmp    $0x000005,%eax
		jge    _05c284_jump
		xor    %esi,%esi
		mov    0x000060(%edx),%si
		cmp    $0x0000be,%esi
		jne    _05c1e0_jump
		imul   $0x000014,%eax,%eax
		xor    %esi,%esi
		mov    %si,_0dbc24_data(%eax)
		xor    %bh,%bh
		mov    %si,_0dbc26_data(%eax)
		mov    %bh,_0dbc34_data(%eax)
		mov    %bh,_0dbc35_data(%eax)
		mov    %cx,_0dbc32_data(%eax)
		mov    $0x000001,%esi
		mov    %si,_0dbc28_data(%eax)
		mov    $0x000005,%bh
		mov    %si,_0dbc2a_data(%eax)
		mov    %bh,_0dbc36_data(%eax)
		movw   $0x00000f,_0dbc2c_data(%eax)
		xor    %esi,%esi
		mov    %si,_0dbc2e_data(%eax)
		mov    %si,_0dbc30_data(%eax)
		andb   $0x0000fb,0x000081(%edx)
		xor    %eax,%eax
		movl   $0x000000,0x000024(%edx)
		mov    %bl,%al
		inc    %bl
		mov    %ax,0x000050(%edx)
		jmp    _05c1e0_jump

	_05c284_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05c28c_func:
		push   %edx
		xor    %al,%al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000005,%edx
		jl     _05c29a_jump
		pop    %edx
		ret    

	_05c29a_jump:
		imul   $0x000014,%edx,%edx
		xor    %ah,%ah
		mov    %ah,_0dbc35_data(%edx)
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000005,%edx
		jl     _05c29a_jump
		pop    %edx
		ret    



_05c2b4_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		xor    %al,%al
		jmp    _05c2be_jump

	_05c2bc_jump:
		inc    %al

	_05c2be_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000005,%edx
		jge    _05c2df_jump
		imul   $0x000014,%edx,%edx
		mov    _0dbc35_data(%edx),%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		jne    _05c2bc_jump
		inc    %ah
		jmp    _05c2bc_jump

	_05c2df_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    _0dbc18_data,%dl
		mov    _0dbc19_data,%bl
		mov    _096984_data(%ebx,%edx,2),%dl
		and    $0x0000ff,%edx
		cmp    _09697c_data(%edx),%ah
		sete   %al
		pop    %edx
		pop    %ebx
		ret    



_05c308_func:
		push   %edx
		mov    0x000050(%eax),%al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000005,%edx
		jl     _05c317_jump
		mov    $0x0000ff,%al

	_05c317_jump:
		pop    %edx
		ret    



_05c31c_func:
		push   %ebx
		push   %ecx
		mov    %al,%bl
		xor    %eax,%eax
		mov    %dl,%al
		test   %eax,%eax
		jne    _05c32f_jump
		xor    %edx,%edx
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_05c32f_jump:
		lea    0x000000(,%eax,2),%ecx
		mov    $0x0000f0,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		and    $0x0000ff,%ebx
		add    %ebx,%ebx
		inc    %ebx
		imul   %ebx,%eax
		mov    _0c519c_data,%ebx
		sar    $0x000010,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%ebx
		mov    0x000081(%ebx,%eax,1),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _05c382_jump
		add    $0x000050,%edx

	_05c382_jump:
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_05c388_func:
		movswl %dx,%edx
		test   %edx,%edx
		jne    _05c395_jump
		mov    $0x00002c,%eax
		ret    

	_05c395_jump:
		shl    $0x000004,%eax
		add    $0x00002c,%eax
		ret    



_05c3a0_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%ebx
		movswl %dx,%edx
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx

	_05c3b4_jump:
		cwtl   
		call   _01e288_func
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		jne    _05c3dc_jump
		add    $0x000010,%ebx
		movswl %bx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %cx,%eax
		sar    $0x000004,%eax
		jmp    _05c3b4_jump

	_05c3dc_jump:
		xor    %ch,%ch
		and    $0x0000f0,%bl
		and    $0x00000f,%cl
		mov    %ebx,%esi
		movswl %cx,%edx
		xor    %ebx,%ebx
		call   _0241d4_func
		mov    %esi,%ebx
		add    %ebx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_05c3f8_switch:
		.long   _05c440_case
		.long   _05c440_case
		.long   _05c440_case
		.long   _05c488_case
		.long   _05c488_case
		.long   _05c440_case




_05c410_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000084,%esp
		call   _05c308_func
		mov    %al,%bl
		and    $0x0000ff,%eax
		cmp    $0x0000ff,%eax
		jne    _05c542_jump

	_05c433_jump:
		add    $0x000084,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c440_case:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    %cx,_0dbc24_data(,%eax,4)
		mov    $0x000001,%edi
		mov    %si,_0dbc26_data(,%eax,4)
		mov    %di,_0dbc28_data(,%eax,4)
		mov    $0x000002,%dh
		mov    %di,_0dbc2a_data(,%eax,4)
		mov    %dh,_0dbc36_data(,%eax,4)
		add    $0x000084,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c488_case:
		xor    %eax,%eax
		mov    _0dbc1a_data,%al
		cmp    $0x000003,%eax
		jne    _05c498_jump
		mov    $0x000004,%dl
		jmp    _05c49a_jump

	_05c498_jump:
		xor    %dl,%dl

	_05c49a_jump:
		xor    %ecx,%ecx
		mov    %bl,%cl
		lea    0x000000(,%ecx,4),%eax
		lea    (%ecx,%eax,1),%esi
		shl    $0x000002,%esi
		cmp    $0x000001,%ecx
		jne    _05c4bb_jump
		xor    %eax,%eax
		mov    %dl,%al
		mov    $0x000006,%edx
		jmp    _05c4c9_jump

	_05c4bb_jump:
		mov    $0x000004,%al
		sub    %dl,%al
		mov    $0x000006,%edx
		and    $0x0000ff,%eax

	_05c4c9_jump:
		call   _05c31c_func
		mov    %ax,_0dbc24_data(%esi)
		xor    %eax,%eax
		mov    $0x000009,%edx
		mov    %bl,%al
		sub    %eax,%edx
		xor    %ecx,%ecx
		movswl %dx,%eax
		mov    $0x000001,%edx
		mov    %bl,%cl
		call   _05c388_func
		mov    %eax,%esi
		mov    %ecx,%edx
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		add    $0x000008,%esi
		shl    $0x000002,%eax
		xor    %bl,%dl
		mov    %si,_0dbc26_data(%eax)
		mov    %dl,_0dbc36_data(%eax)
		test   %ecx,%ecx
		movw   $0x000032,_0dbc28_data(%eax)
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		movw   $0x000046,_0dbc2a_data(,%eax,4)
		add    $0x000084,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c542_jump:
		lea    0x000000(,%eax,4),%ebp
		add    %eax,%ebp
		shl    $0x000002,%ebp
		mov    _0dbc30_data(%ebp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %edx,%eax
		mov    _0c1b04_data,%esi
		shl    $0x000002,%eax
		mov    %esp,%edi
		add    %eax,%esi
		xor    %eax,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    0x000068(%esp),%al
		mov    0x000028(%esp),%ecx
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x00002c(%esp),%esi
		mov    0x000069(%esp),%al
		add    %eax,%esi
		xor    %ah,%ah
		mov    %ah,_0dbc35_data(%ebp)
		mov    _0dbc1a_data,%al
		cmp    $0x000005,%al
		ja     _05c433_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05c3f8_switch(,%eax,4)



_05c5ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %al,%cl
		cmp    _0dbc1b_data,%al
		jae    _05c867_jump
		movzbl %al,%ebp
		cmp    $0x000005,%ebp
		jge    _05c867_jump
		lea    0x000000(,%ebp,4),%edi
		add    %ebp,%edi
		shl    $0x000002,%edi
		mov    _0dbc30_data(%edi),%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0c1b04_data,%eax
		shl    $0x000002,%esi
		add    %eax,%esi
		cmpl   $0x000000,0x000024(%esi)
		jne    _05c867_jump
		movb   $0x000000,0x00007e(%esi)
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f584_func
		xor    %eax,%eax
		xor    %dh,%dh
		mov    _0dbc1a_data,%al
		mov    %dh,_0dbc35_data(%edi)
		test   %eax,%eax
		je     _05c641_jump
		cmp    $0x000003,%eax
		je     _05c641_jump
		cmp    $0x000004,%eax
		jne    _05c6c9_jump

	_05c641_jump:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		mov    0x00000c(%esi),%eax
		mov    0x000008(%eax),%eax
		mov    0x000052(%eax),%al
		mov    %al,0x00006a(%esi)
		xor    %eax,%eax
		mov    %cl,%al
		lea    0x000000(,%eax,4),%ebp
		add    %eax,%ebp
		shl    $0x000002,%ebp
		movb   $0x000004,_0dbc36_data(%ebp)
		xor    %edx,%edx
		mov    _0dbc1b_data,%dl
		call   _05c31c_func
		mov    %ax,_0dbc24_data(%ebp)
		mov    _0c519c_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0c1b04_data,%eax
		xor    %edx,%edx
		mov    0x000069(%eax,%edi,4),%dl
		mov    0x000038(%eax,%edi,4),%cx
		xor    %eax,%eax
		add    %ecx,%edx
		mov    0x000069(%esi),%al
		mov    $0x000001,%edi
		sub    %eax,%edx
		mov    %di,_0dbc28_data(%ebp)
		mov    %dx,_0dbc26_data(%ebp)
		jmp    _05c7c9_jump

	_05c6c9_jump:
		mov    $0x00000b,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		mov    0x00000c(%esi),%eax
		mov    0x000008(%eax),%eax
		mov    0x00005a(%eax),%al
		mov    %al,0x00006a(%esi)
		xor    %eax,%eax
		mov    _0dbc1a_data,%al
		cmp    $0x000005,%eax
		jne    _05c732_jump
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    _0dbc1b_data,%dl
		call   _05c31c_func
		xor    %edx,%edx
		mov    %ax,_0dbc24_data(%edi)
		xor    %eax,%eax
		mov    $0x000001,%ch
		call   _05c388_func
		mov    %ax,_0dbc26_data(%edi)
		mov    %ch,_0dbc36_data(%edi)
		mov    _0dbc20_data,%ax
		mov    %ax,_0dbc28_data(%edi)
		jmp    _05c7c9_jump

	_05c732_jump:
		xor    %edx,%edx
		mov    _0dbc22_data,%dl
		mov    _0dbc1b_data,%al
		mov    _09698c_data(%edx),%bl
		inc    %al
		cmp    %bl,%cl
		jb     _05c75a_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %cl,%al
		inc    %al
		and    $0x0000ff,%eax
		jmp    _05c760_jump

	_05c75a_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebp,%eax

	_05c760_jump:
		call   _05c31c_func
		mov    %ax,_0dbc24_data(%edi)
		xor    %ebx,%ebx
		mov    %cl,%bl
		mov    %ebx,%eax
		lea    0x000000(,%ebx,4),%edi
		xor    %ebx,%eax
		add    %ebx,%edi
		mov    %cl,%al
		shl    $0x000002,%edi
		shl    $0x000002,%eax
		mov    _0dbc24_data(%edi),%dx
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,_0dbc24_data(%edi)
		xor    %edx,%edx
		mov    $0x000003,%cl
		call   _05c388_func
		mov    %ax,_0dbc26_data(%edi)
		mov    %cl,_0dbc36_data(%edi)
		test   %ebx,%ebx
		jne    _05c7c0_jump
		mov    _0dbc20_data,%ax
		mov    %ax,_0dbc28_data(%edi)
		jmp    _05c7c9_jump

	_05c7c0_jump:
		movw   $0x000001,_0dbc28_data(%edi)

	_05c7c9_jump:
		lea    0x000008(%esp),%eax
		push   %eax
		lea    0x000004(%esp),%eax
		push   %eax
		mov    _0c519c_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		lea    0x00000c(%esp),%ecx
		shl    $0x000005,%edi
		lea    0x000014(%esp),%ebx
		add    %eax,%edi
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edi
		mov    $0x000006,%edx
		add    %edi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01d840_func
		mov    _0c519c_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0c1b04_data,%eax
		mov    0x000081(%eax,%edi,4),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _05c835_jump
		mov    (%esp),%eax
		add    %ax,0x00000c(%esp)

	_05c835_jump:
		mov    0x00000a(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x000002(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)

	_05c867_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05c874_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		cwtl   
		test   %eax,%eax
		jne    _05c894_jump
		movswl %dx,%eax
		test   %eax,%eax
		jl     _05c88b_jump
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05c88b_jump:
		mov    $0x000008,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05c894_jump:
		movswl %dx,%ebx
		test   %ebx,%ebx
		jne    _05c8b7_jump
		test   %eax,%eax
		je     _05c910_jump
		jle    _05c8ae_jump
		mov    $0x000004,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05c8ae_jump:
		mov    $0x00000c,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05c8b7_jump:
		test   %eax,%eax
		jge    _05c8bd_jump
		neg    %eax

	_05c8bd_jump:
		mov    %eax,%esi
		mov    %ebx,%eax
		test   %eax,%eax
		jge    _05c8c7_jump
		neg    %eax

	_05c8c7_jump:
		sub    %eax,%esi
		movswl %si,%eax
		test   %eax,%eax
		jne    _05c8d7_jump
		mov    $0x000006,%eax
		jmp    _05c8e5_jump

	_05c8d7_jump:
		jl     _05c8e0_jump
		mov    $0x000005,%eax
		jmp    _05c8e5_jump

	_05c8e0_jump:
		mov    $0x000007,%eax

	_05c8e5_jump:
		movswl %cx,%ebx
		test   %ebx,%ebx
		jle    _05c8fd_jump
		movswl %dx,%ebx
		test   %ebx,%ebx
		jle    _05c910_jump
		mov    $0x000008,%ah
		sub    %al,%ah
		mov    %ah,%al
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05c8fd_jump:
		movswl %dx,%ebx
		test   %ebx,%ebx
		jge    _05c90e_jump
		mov    $0x000010,%ah
		sub    %al,%ah
		mov    %ah,%al
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05c90e_jump:
		add    $0x000008,%al

	_05c910_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_05c914_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000040(%eax),%edx
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05c874_func
		mov    %al,0x00006b(%ebx)
		pop    %edx
		pop    %ebx
		ret    

_05c930_switch:
		.long   _05ca39_case
		.long   _05ca76_case
		.long   _05ca76_case
		.long   _05ca76_case
		.long   _05caab_case
		.long   _05cae8_case
		.long   _05cae8_case
		.long   _05cae8_case
		.long   _05ca0b_case
		.long   _05cb0c_case
		.long   _05cb0c_case
		.long   _05cb0c_case
		.long   _05cb27_case
		.long   _05cb60_case
		.long   _05cb60_case
		.long   _05cb60_case




_05c970_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,%ebp
		mov    %ecx,%edi
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d840_func
		mov    0x000024(%esp),%eax
		movw   $0x000006,(%edi)
		movw   $0x000006,(%eax)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _05c9cd_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%eax
		je     _05cbc7_jump
		cmp    $0x00000b,%eax
		je     _05cbc7_jump

	_05c9cd_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _05cbdb_jump
		xor    %ebx,%ebx
		mov    0x00006c(%esi),%bl
		cmp    $0x00000e,%ebx
		jne    _05cbdb_jump
		mov    0x00000c(%esi),%ecx
		mov    (%ecx,%eax,4),%eax
		mov    0x000005(%eax,%ebx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		jne    _05cbdb_jump
		mov    0x000024(%esp),%ebx
		mov    0x000010(%esp),%eax
		mov    %ax,(%ebx)

	_05ca0b_case:
		mov    0x000006(%esp),%ebx
		movswl (%edi),%eax
		sar    $0x000010,%ebx
		sub    %eax,%ebx
		mov    0x000002(%esp),%eax
		sar    %ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		mov    (%esp),%ebx
		mov    %ax,(%ebx)
		mov    0x00000c(%esp),%eax
		mov    %ax,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05ca39_case:
		mov    0x000006(%esp),%ebx
		movswl (%edi),%eax
		sar    $0x000010,%ebx
		sub    %eax,%ebx
		mov    0x000002(%esp),%eax
		sar    %ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		mov    (%esp),%ebx
		mov    %ax,(%ebx)
		mov    0x000024(%esp),%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000010(%esp),%edi
		mov    (%eax),%ax
		add    %edi,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05ca76_case:
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    (%edi),%ax
		add    %ecx,%ebx
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		mov    0x000024(%esp),%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000010(%esp),%esi
		mov    (%eax),%ax
		add    %esi,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05caab_case:
		mov    0x000008(%esp),%eax
		mov    %ax,(%edi)
		mov    0x000004(%esp),%ebx
		add    %eax,%ebx
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		mov    0x00000e(%esp),%ebx
		mov    0x000024(%esp),%eax
		sar    $0x000010,%ebx
		movswl (%eax),%eax
		sub    %eax,%ebx
		mov    0x00000a(%esp),%eax
		sar    %ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		mov    %ax,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05cae8_case:
		mov    0x000004(%esp),%ebx
		add    0x000008(%esp),%ebx
		mov    (%edi),%ax
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		mov    0x00000c(%esp),%eax
		mov    %ax,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05cb0c_case:
		mov    (%esp),%ebx
		mov    0x000004(%esp),%eax
		mov    %ax,(%ebx)
		mov    0x00000c(%esp),%eax
		mov    %ax,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05cb27_case:
		mov    0x000008(%esp),%eax
		mov    %ax,(%edi)
		mov    (%esp),%ebx
		mov    0x000004(%esp),%eax
		mov    %ax,(%ebx)
		mov    0x00000e(%esp),%ebx
		mov    0x000024(%esp),%eax
		sar    $0x000010,%ebx
		movswl (%eax),%eax
		sub    %eax,%ebx
		mov    0x00000a(%esp),%eax
		sar    %ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		mov    %ax,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05cb60_case:
		mov    (%esp),%ebx
		mov    0x000004(%esp),%eax
		mov    %ax,(%ebx)
		mov    0x000024(%esp),%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000010(%esp),%esi
		mov    (%eax),%ax
		add    %esi,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05cb8a_jump:
		mov    0x000006(%esp),%eax
		movswl (%edi),%ebx
		sar    $0x000010,%eax
		sub    %ebx,%eax
		mov    0x000002(%esp),%ebx
		sar    %eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    (%esp),%ebx
		mov    %ax,(%ebx)
		mov    0x000024(%esp),%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000010(%esp),%ecx
		mov    (%eax),%ax
		add    %ecx,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05cbc7_jump:
		mov    0x00006b(%esi),%al
		cmp    $0x00000f,%al
		ja     _05cb8a_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05c930_switch(,%eax,4)

	_05cbdb_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _05cbef_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000d,%eax
		je     _05cc16_jump

	_05cbef_jump:
		xor    %ebx,%ebx
		mov    0x00006d(%esi),%bl
		cmp    $0x000002,%ebx
		jne    _05cc4a_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000e,%eax
		jne    _05cc4a_jump
		mov    0x00000c(%esi),%ecx
		mov    (%ecx,%ebx,4),%ebx
		mov    0x000005(%ebx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		je     _05cc4a_jump

	_05cc16_jump:
		mov    0x000028(%esi),%ebx
		movswl (%edi),%eax
		add    $0x000080,%ebx
		sar    %eax
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		mov    0x000024(%esp),%eax
		mov    0x00002c(%esi),%ebx
		movswl (%eax),%eax
		add    $0x000060,%ebx
		sar    %eax
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05cc4a_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _05cc9b_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000c,%eax
		jne    _05cc9b_jump
		mov    0x000006(%esp),%ebx
		movswl (%edi),%eax
		sar    $0x000010,%ebx
		sub    %eax,%ebx
		mov    0x000002(%esp),%eax
		sar    %ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		mov    (%esp),%ebx
		mov    %ax,(%ebx)
		mov    0x000024(%esp),%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000010(%esp),%edx
		mov    (%eax),%ax
		add    %edx,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_05cc9b_jump:
		mov    (%edi),%ax
		mov    (%esp),%ebx
		neg    %eax
		mov    %ax,(%ebx)
		mov    0x000024(%esp),%eax
		mov    (%eax),%ax
		neg    %eax
		mov    %ax,0x000000(%ebp)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_05ccbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0dbc20_data,%si
		mov    _0dbc1e_data,%di
		xor    %edx,%edx
		mov    _0dbc1a_data,%dl
		cmp    $0x000001,%edx
		je     _05cce1_jump
		cmp    $0x000002,%edx
		jne    _05cd00_jump

	_05cce1_jump:
		mov    _0dbc22_data,%ah
		xor    %edx,%edx
		inc    %ah
		mov    %ah,%dl
		mov    %ah,_0dbc22_data
		cmp    $0x000005,%edx
		jl     _05cd00_jump
		xor    %ah,%dl
		mov    %dl,_0dbc22_data

	_05cd00_jump:
		mov    _0dbc18_data,%al
		mov    %esi,%edx
		xor    %ecx,%ecx
		mov    %edi,%ebx
		mov    _0dbc1d_data,%cl
		sub    $0x00000a,%edx
		sub    $0x00000a,%ebx
		inc    %al
		test   %ecx,%ecx
		jne    _05cd56_jump
		mov    _0dbc19_data,%ah
		inc    %ah
		mov    %ah,%cl
		mov    %ah,_0dbc19_data
		cmp    $0x000002,%ecx
		jne    _05cd77_jump
		xor    %ah,%cl
		mov    %cl,_0dbc19_data
		xor    %ecx,%ecx
		mov    %al,%cl
		mov    %al,_0dbc18_data
		cmp    $0x000004,%ecx
		jne    _05cd77_jump
		mov    %ebx,%edi
		xor    %ch,%ch
		mov    %edx,%esi
		mov    %ch,_0dbc18_data
		jmp    _05cd77_jump

	_05cd56_jump:
		xor    %cl,%cl
		mov    %al,_0dbc18_data
		mov    %cl,_0dbc19_data
		and    $0x0000ff,%eax
		cmp    $0x000004,%eax
		jne    _05cd77_jump
		mov    %cl,_0dbc18_data
		mov    %ebx,%edi
		mov    %edx,%esi

	_05cd77_jump:
		movswl %di,%eax
		cmp    $0x000064,%eax
		jge    _05cd84_jump
		mov    $0x000064,%edi

	_05cd84_jump:
		movswl %si,%edx
		cmp    $0x000032,%edx
		jge    _05cd91_jump
		mov    $0x000032,%esi

	_05cd91_jump:
		xor    %edx,%edx
		mov    _0dbc18_data,%dl
		lea    0x000000(,%edx,2),%ebx
		xor    %edx,%edx
		xor    %al,%al
		mov    _0dbc19_data,%dl
		mov    %al,_0dbc1c_data
		mov    _096984_data(%edx,%ebx,1),%al
		mov    %al,_0dbc1a_data
		xor    %eax,%eax
		mov    _0dbc1a_data,%al
		mov    _09697c_data(%eax),%al
		mov    %al,_0dbc1b_data
		xor    %ah,%ah
		mov    %ah,_0dbc1d_data
		xor    %al,%al
		jmp    _05ce1b_jump

	_05cdd9_jump:
		imul   $0x000014,%edx,%edx
		mov    _0dbc30_data(%edx),%ecx
		sar    $0x000010,%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0c1b04_data,%ebx
		movl   $0x000000,0x000024(%ecx,%ebx,1)
		mov    _0dbc30_data(%edx),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    0x000081(%edx,%ebx,1),%cl
		and    $0x0000fb,%cl
		inc    %al
		mov    %cl,0x000081(%edx,%ebx,1)

	_05ce1b_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000005,%edx
		jl     _05cdd9_jump
		mov    %di,_0dbc1e_data
		mov    %si,_0dbc20_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ce38_func:
		push   %ecx
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax
		pop    %ecx
		ret    



_05ce40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		call   _05c308_func
		and    $0x0000ff,%eax
		cmp    $0x0000ff,%eax
		je     _05cf66_jump
		mov    %eax,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    _0c247c_data,%dx
		mov    _0dbc24_data(%eax),%cx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    0x000028(%ebx),%si
		mov    0x000068(%ebx),%dl
		add    %esi,%edx
		mov    _0dbc26_data(%eax),%di
		sub    %edx,%ecx
		mov    _0c247e_data,%si
		mov    %ecx,%edx
		add    %edi,%esi
		xor    %ecx,%ecx
		mov    0x00002c(%ebx),%di
		mov    0x000069(%ebx),%cl
		add    %edi,%ecx
		sub    %ecx,%esi
		mov    _0dbc26_data(%eax),%ecx
		sar    $0x000010,%ecx
		test   %ecx,%ecx
		je     _05cf44_jump
		xor    %ecx,%ecx
		mov    %cx,_0dbc28_data(%eax)
		movswl %dx,%eax
		test   %eax,%eax
		jne    _05cedc_jump
		call   _05ce38_func
		mov    %ax,0x000040(%ebx)
		mov    $0xffffffff,%eax
		call   _05ce38_func
		mov    %ax,0x000042(%ebx)
		jmp    _05cf33_jump

	_05cedc_jump:
		jl     _05cee5_jump
		mov    $0x000002,%eax
		jmp    _05ceea_jump

	_05cee5_jump:
		mov    $0xfffffffe,%eax

	_05ceea_jump:
		mov    %eax,%ecx
		movswl %si,%eax
		mov    %eax,%esi
		movswl %cx,%ecx
		shl    $0x000004,%esi
		imul   %ecx,%esi
		movswl %dx,%eax
		lea    0x000000(,%eax,8),%edx
		imul   %eax,%edx
		imul   %ecx,%eax
		shl    $0x000003,%esi
		add    %esi,%edx
		neg    %edx
		lea    0x000000(,%eax,8),%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _05ce38_func
		sub    $0x00000a,%eax
		mov    %dx,0x000042(%ebx)
		mov    %ax,0x000040(%ebx)

	_05cf33_jump:
		mov    %ebx,%eax
		call   _05c914_func
		movb   $0x000003,0x00007e(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cf44_jump:
		addw   $0x000004,0x000042(%ebx)
		mov    0x00003e(%ebx),%eax
		movswl %dx,%edx
		sar    $0x000010,%eax
		imul   %edx,%eax
		test   %eax,%eax
		jge    _05cf5f_jump
		movw   $0x000000,0x000040(%ebx)

	_05cf5f_jump:
		mov    %ebx,%eax
		call   _05c914_func

	_05cf66_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05cf6c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		call   _05c308_func
		mov    %al,%dl
		mov    %al,%bl
		cmp    $0x0000ff,%edx
		je     _05d142_jump
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		mov    _0c247c_data,%ax
		mov    _0dbc24_data(%edx),%cx
		movzbw 0x000068(%esi),%di
		add    %ecx,%eax
		add    0x000028(%esi),%di
		sub    %edi,%eax
		mov    _0dbc26_data(%edx),%cx
		mov    %eax,%edi
		mov    _0c247e_data,%ax
		add    %ecx,%eax
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		mov    (%esp),%ecx
		sub    %eax,%ecx
		movswl %di,%eax
		mov    %cx,0x000004(%esp)
		test   %eax,%eax
		jge    _05cfe5_jump
		neg    %eax

	_05cfe5_jump:
		cmp    $0x000004,%eax
		jge    _05d000_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05cff7_jump
		neg    %eax

	_05cff7_jump:
		cmp    $0x000004,%eax
		jl     _05d091_jump

	_05d000_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %dh,%dh
		mov    %dh,_0dbc35_data(,%eax,4)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05d023_jump
		neg    %eax

	_05d023_jump:
		mov    %eax,%ebx
		movswl %di,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _05d030_jump
		neg    %eax

	_05d030_jump:
		cmp    %ebx,%eax
		jge    _05d036_jump
		mov    %ebx,%eax

	_05d036_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		mov    $0x000004,%cl
		call   _05ce38_func
		mov    %ax,0x000040(%esi)
		mov    0x000004(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _05ce38_func
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _05c914_func
		movb   $0x000003,0x00007e(%esi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05d091_jump:
		movb   $0x000001,_0dbc35_data(%edx)
		xor    %eax,%eax
		mov    _0dbc1a_data,%al
		cmp    $0x000001,%eax
		je     _05d0c7_jump
		cmp    $0x000002,%eax
		je     _05d0c7_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		cmp    $0x000002,%eax
		jne    _05d0bd_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		cmp    $0x00000d,%eax
		je     _05d0d6_jump

	_05d0bd_jump:
		movb   $0x000002,0x00006d(%esi)
		movb   $0x00000d,0x00006c(%esi)
		jmp    _05d0d6_jump

	_05d0c7_jump:
		mov    $0x000001,%edx
		xor    %eax,%eax
		call   _05c874_func
		mov    %al,0x00006b(%esi)

	_05d0d6_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		movw   $0x000000,0x000040(%esi)
		add    %edx,%eax
		movw   $0x000000,0x000042(%esi)
		mov    _0dbc22_data(,%eax,4),%ebx
		mov    _0c247a_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		mov    _0c247c_data,%edx
		mov    _0dbc24_data(,%eax,4),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		call   _05c2b4_func
		test   %al,%al
		je     _05d142_jump
		movb   $0x000003,_0dbc1c_data
		call   _05c28c_func

	_05d142_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d14c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		call   _05c308_func
		mov    %al,%dl
		and    $0x0000ff,%eax
		cmp    $0x0000ff,%eax
		je     _05d34f_jump
		test   %eax,%eax
		je     _05d195_jump
		je     _05d34f_jump
		lea    -0x000001(%eax),%ebx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		mov    _0dbc28_data(,%eax,4),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _05d34f_jump

	_05d195_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		mov    _0dbc28_data(%eax),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jne    _05d348_jump
		xor    %ebx,%ebx
		mov    %bx,(%esp)
		xor    %ebx,%ebx
		mov    _0dbc36_data(%eax),%bl
		xor    %edi,%edi
		cmp    $0x000002,%ebx
		je     _05d20b_jump
		mov    _0c247c_data,%di
		xor    %ebx,%ebx
		mov    _0dbc24_data(%eax),%cx
		mov    0x000068(%esi),%bl
		add    %ecx,%edi
		add    0x000028(%esi),%bx
		sub    %ebx,%edi
		mov    0x00002c(%esi),%cx
		mov    %di,(%esp)
		mov    _0c247e_data,%di
		mov    _0dbc26_data(%eax),%bx
		mov    %edi,%eax
		movzbw 0x000069(%esi),%di
		add    %ebx,%eax
		add    %ecx,%edi
		sub    %edi,%eax
		mov    %eax,%edi

	_05d20b_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05d218_jump
		neg    %eax

	_05d218_jump:
		cmp    $0x000002,%eax
		jge    _05d22f_jump
		movswl %di,%eax
		test   %eax,%eax
		jge    _05d226_jump
		neg    %eax

	_05d226_jump:
		cmp    $0x000002,%eax
		jl     _05d2b2_jump

	_05d22f_jump:
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %dh,%dh
		mov    %dh,_0dbc35_data(,%eax,4)
		movswl %di,%eax
		test   %eax,%eax
		jge    _05d250_jump
		neg    %eax

	_05d250_jump:
		mov    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _05d261_jump
		neg    %eax

	_05d261_jump:
		cmp    %ebx,%eax
		jge    _05d267_jump
		mov    %ebx,%eax

	_05d267_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    (%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		mov    $0x000004,%cl
		call   _05ce38_func
		mov    %ax,0x000040(%esi)
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _05ce38_func
		mov    %ax,0x000042(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05d2b2_jump:
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		movb   $0x000001,_0dbc35_data(%edx)
		xor    %eax,%eax
		call   _05ce38_func
		mov    %ax,0x000040(%esi)
		xor    %eax,%eax
		call   _05ce38_func
		mov    %ax,0x000042(%esi)
		xor    %eax,%eax
		mov    _0dbc36_data(%edx),%al
		cmp    $0x000002,%eax
		je     _05d32a_jump
		mov    _0dbc22_data(%edx),%eax
		mov    _0c247a_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		mov    _0dbc24_data(%edx),%eax
		mov    _0c247c_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)

	_05d32a_jump:
		call   _05c2b4_func
		test   %al,%al
		je     _05d34f_jump
		movb   $0x000003,_0dbc1c_data
		call   _05c28c_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05d348_jump:
		decw   _0dbc2a_data(%eax)

	_05d34f_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05d508_switch:
		.long   _05d8e9_case
		.long   _05d75f_case
		.long   _05d931_case
		.long   _05d8b7_case




_05d518_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		call   _05c308_func
		mov    %al,0x000014(%esp)
		and    $0x0000ff,%eax
		cmp    $0x0000ff,%eax
		je     _05db40_jump
		test   %eax,%eax
		je     _05d564_jump
		je     _05db40_jump
		lea    -0x000001(%eax),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		mov    _0dbc26_data(,%eax,4),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _05db40_jump

	_05d564_jump:
		movzbl 0x000014(%esp),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		shl    $0x000002,%eax
		mov    _0dbc26_data(%eax),%edi
		sar    $0x000010,%edi
		test   %edi,%edi
		jne    _05d6b1_jump
		xor    %edx,%edx
		mov    _0dbc35_data(%eax),%dl
		test   %edx,%edx
		jne    _05db40_jump
		mov    _0dbc30_data(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000069(%eax),%dl
		add    %ebx,%ecx
		mov    0x00002c(%eax),%bx
		movswl %cx,%eax
		add    %edx,%ebx
		cmp    $0xffffffec,%eax
		jl     _05d601_jump
		mov    _0c24f4_data,%edx
		sar    $0x000010,%edx
		add    $0x000154,%edx
		cmp    %edx,%eax
		jg     _05d601_jump
		movswl %bx,%eax
		cmp    $0xffffffec,%eax
		jl     _05d601_jump
		mov    _0c24f2_data,%edx
		sar    $0x000010,%edx
		add    $0x0000dc,%edx
		cmp    %edx,%eax
		jle    _05db40_jump

	_05d601_jump:
		xor    %edx,%edx
		mov    0x000014(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		mov    _0dbc30_data(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    $0x000001,%ch
		add    %ebx,%eax
		mov    _0c1b04_data,%ebx
		mov    %ch,_0dbc35_data(%edx)
		movl   $0x000000,0x000024(%ebx,%eax,4)
		mov    _0dbc30_data(%edx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		andb   $0x0000fb,0x000081(%ebx,%eax,4)
		call   _05c2b4_func
		test   %al,%al
		je     _05db40_jump
		movb   $0x000004,_0dbc1c_data
		mov    _0c519c_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		mov    0x000076(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		jne    _05db40_jump
		mov    _0c32ec_data,%bh
		mov    %ch,_0c2570_data
		or     $0x000010,%bh
		mov    %ch,_0c2571_data
		mov    %bh,_0c32ec_data
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05d6b1_jump:
		cmp    $0x000001,%edi
		jne    _05db0e_jump
		mov    _0dbc2a_data(%eax),%edi
		sar    $0x000010,%edi
		cmp    $0x00000f,%edi
		je     _05d966_jump
		test   %edi,%edi
		jne    _05dab6_jump
		mov    _0dbc2e_data(%eax),%dx
		mov    %dx,0x000040(%esi)
		mov    _0dbc30_data(%eax),%dx
		mov    %dx,0x000042(%esi)
		mov    _0dbc36_data(%eax),%al
		and    $0x0000ff,%eax
		cmp    $0x000002,%eax
		jne    _05d726_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%bl
		and    $0x0000f0,%bl
		mov    %bl,%bh
		or     $0x000002,%bh
		mov    %bh,0x000005(%eax,%edx,8)
		movb   $0x000000,0x000071(%esi)
		movb   $0x000008,0x000072(%esi)

	_05d726_jump:
		xor    %edx,%edx
		mov    0x000014(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x00000f,%esi
		xor    %edi,%edi
		mov    %si,_0dbc2c_data(,%eax,4)
		xor    %cl,%cl
		mov    %di,_0dbc28_data(,%eax,4)
		mov    %cl,_0dbc35_data(,%eax,4)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05d75f_case:
		mov    0x000002(%esp),%eax
		mov    $0x00000b,%ebx
		sar    $0x000010,%eax
		mov    %bx,0x00000c(%esp)
		test   %eax,%eax
		jge    _05d776_jump
		neg    %eax

	_05d776_jump:
		mov    %eax,%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _05d787_jump
		neg    %eax

	_05d787_jump:
		cmp    %ebx,%eax
		jge    _05d78d_jump
		mov    %ebx,%eax

	_05d78d_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    0x000008(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		cwtl   
		mov    $0x000004,%cl
		call   _05ce38_func
		mov    %eax,%edi
		mov    %eax,%ebx
		mov    0x000004(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		cwtl   
		call   _05ce38_func
		mov    %eax,%ecx
		movswl %ax,%edx
		movswl %di,%eax
		call   _05c874_func
		mov    %al,%dl

	_05d7e1_jump:
		movzbl 0x000014(%esp),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		shl    $0x000002,%eax
		movzbl _0dbc36_data(%eax),%edi
		cmp    $0x000002,%edi
		jne    _05da07_jump
		mov    0x00000c(%esp),%dh
		movzbl 0x00006d(%esi),%edi
		mov    0x00000c(%esi),%ebp
		shl    $0x000002,%edi
		mov    %dh,0x00006c(%esi)
		add    %edi,%ebp
		movzbl 0x00006c(%esi),%edi
		mov    %dl,0x00006b(%esi)
		shl    $0x000003,%edi
		mov    %edi,(%esp)
		mov    0x000000(%ebp),%edi
		add    (%esp),%edi
		andb   $0x0000f0,0x000005(%edi)
		mov    %dl,_0dbc34_data(%eax)
		mov    %cx,_0dbc30_data(%eax)
		mov    _0dbc2c_data(%eax),%cx
		mov    %bx,_0dbc2e_data(%eax)
		dec    %ecx
		mov    _0dbc2e_data(%eax),%dx
		mov    %cx,_0dbc2c_data(%eax)
		mov    %dx,0x000040(%esi)
		mov    _0dbc30_data(%eax),%dx
		mov    $0x00000f,%edi
		mov    %dx,0x000042(%esi)
		xor    %bl,%bl
		mov    %di,_0dbc2c_data(%eax)
		xor    %edx,%edx
		mov    %bl,_0dbc35_data(%eax)
		mov    %dx,_0dbc28_data(%eax)
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%bh
		and    $0x0000f0,%bh
		mov    %bh,%cl
		or     $0x000002,%cl
		mov    %cl,0x000005(%edx,%eax,8)
		movb   $0x000008,0x000072(%esi)
		mov    %bl,0x000071(%esi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05d8b7_case:
		movw   $0x00000b,0x00000c(%esp)
		xor    %eax,%eax
		call   _05ce38_func
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000003,%eax
		call   _05ce38_func
		mov    %eax,%ecx
		movswl %ax,%edi
		movswl %dx,%eax
		mov    %edi,%edx
		call   _05c874_func
		mov    %al,%dl
		jmp    _05d7e1_jump

	_05d8e9_case:
		mov    0x000006(%esp),%eax
		mov    $0x00000b,%ecx
		sar    $0x000010,%eax
		mov    %cx,0x00000c(%esp)
		test   %eax,%eax
		jl     _05d905_jump
		mov    $0x000003,%eax
		jmp    _05d90a_jump

	_05d905_jump:
		mov    $0xfffffffd,%eax

	_05d90a_jump:
		cwtl   
		call   _05ce38_func
		mov    %eax,%edx
		mov    %eax,%ebx
		xor    %eax,%eax
		call   _05ce38_func
		mov    %eax,%ecx
		movswl %ax,%edi
		movswl %dx,%eax
		mov    %edi,%edx
		call   _05c874_func
		mov    %al,%dl
		jmp    _05d7e1_jump

	_05d931_case:
		mov    $0xffffffff,%eax
		mov    $0x00000e,%edx
		call   _05ce38_func
		mov    %dx,0x00000c(%esp)
		mov    %eax,%ebx
		mov    $0x000005,%eax
		mov    $0x000001,%edx
		call   _05ce38_func
		mov    %eax,%ecx
		xor    %eax,%eax
		call   _05c874_func
		mov    %al,%dl
		jmp    _05d7e1_jump

	_05d966_jump:
		movzbw _0c1b84_data,%di
		mov    %edi,0x000010(%esp)
		mov    _0c1b44_data,%di
		add    0x000010(%esp),%edi
		mov    %di,_0dbc24_data(%eax)
		movzbw _0c1b85_data,%di
		mov    %edi,0x000010(%esp)
		mov    _0c1b48_data,%di
		add    0x000010(%esp),%edi
		mov    %di,_0dbc26_data(%eax)
		movzbw 0x000068(%esi),%di
		mov    %edi,0x000010(%esp)
		mov    0x000028(%esi),%di
		add    0x000010(%esp),%edi
		mov    %edi,0x000010(%esp)
		mov    _0dbc24_data(%eax),%di
		sub    0x000010(%esp),%edi
		mov    %di,0x000008(%esp)
		movzbw 0x000069(%esi),%di
		mov    %edi,0x000010(%esp)
		mov    0x00002c(%esi),%di
		add    0x000010(%esp),%edi
		mov    %edi,0x000010(%esp)
		mov    _0dbc26_data(%eax),%di
		sub    0x000010(%esp),%edi
		mov    _0dbc36_data(%eax),%al
		mov    %di,0x000004(%esp)
		cmp    $0x000003,%al
		ja     _05d7e1_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05d508_switch(,%eax,4)

	_05da07_jump:
		cmp    $0x000003,%edi
		jne    _05da76_jump
		mov    0x00000c(%esp),%dh
		mov    %dh,0x00006c(%esi)
		mov    %dl,0x00006b(%esi)
		mov    %dl,_0dbc34_data(%eax)
		mov    %bx,_0dbc2e_data(%eax)
		mov    _0dbc2c_data(%eax),%di
		mov    %cx,_0dbc30_data(%eax)
		dec    %edi
		mov    _0dbc2e_data(%eax),%dx
		mov    %di,_0dbc2c_data(%eax)
		mov    %dx,0x000040(%esi)
		mov    _0dbc30_data(%eax),%dx
		xor    %ebx,%ebx
		mov    %dx,0x000042(%esi)
		mov    $0x00000f,%edx
		mov    %bx,_0dbc28_data(%eax)
		xor    %bl,%bl
		mov    %dx,_0dbc2c_data(%eax)
		mov    %bl,_0dbc35_data(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05da76_jump:
		cmp    0x00006b(%esi),%dl
		jne    _05db40_jump
		mov    0x00000c(%esp),%dh
		mov    %dh,0x00006c(%esi)
		mov    %dl,0x00006b(%esi)
		mov    %dl,_0dbc34_data(%eax)
		mov    %bx,_0dbc2e_data(%eax)
		mov    _0dbc2c_data(%eax),%si
		mov    %cx,_0dbc30_data(%eax)
		dec    %esi
		mov    %si,_0dbc2c_data(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05dab6_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    _0dbc34_data(%eax),%dl
		mov    %dl,0x00006b(%esi)
		testb  $0x000001,_0dbc2c_data(%eax)
		je     _05dada_jump
		addl   $0x000002,0x00002c(%esi)
		jmp    _05dade_jump

	_05dada_jump:
		subl   $0x000002,0x00002c(%esi)

	_05dade_jump:
		xor    %edx,%edx
		mov    0x000014(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    _0dbc2a_data(%eax),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _05db40_jump
		decw   _0dbc2c_data(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05db0e_jump:
		jle    _05db17_jump
		decw   _0dbc28_data(%eax)

	_05db17_jump:
		xor    %edx,%edx
		mov    0x000014(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    _0dbc26_data(%eax),%edx
		sar    $0x000010,%edx
		cmp    $0x000001,%edx
		jne    _05db40_jump
		movw   $0x00000f,_0dbc2c_data(%eax)

	_05db40_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05db4c_switch:
		.long   _05dc08_case
		.long   _05dc23_case
		.long   _05dcdd_case
		.long   _05dcb0_case
		.long   _05dc4f_case




_05db60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x00006d(%eax),%al
		test   %al,%al
		jbe    _05dbf8_jump
		cmp    $0x000002,%al
		je     _05ddc0_jump

	_05db79_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05db7e_jump:
		mov    0x000081(%esi),%cl
		or     $0x000020,%cl
		mov    0x000040(%esi),%ax
		mov    %cl,0x000081(%esi)
		mov    $0x000001,%cl
		test   %ax,%ax
		js     _05db9d_jump
		sar    %cl,%ax
		jmp    _05dba6_jump

	_05db9d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05dba6_jump:
		mov    %ax,0x000040(%esi)
		mov    %esi,%eax
		call   _024ba8_func
		mov    _0c25c2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _05dbca_jump
		xor    %eax,%eax
		mov    _0dbc1c_data,%al
		cmp    $0x000002,%eax
		jne    _05db79_jump

	_05dbca_jump:
		xor    %eax,%eax
		mov    _0dbc1c_data,%al
		cmp    $0x000002,%eax
		je     _05dbe2_jump
		movb   $0x000002,_0dbc1c_data
		call   _05c28c_func

	_05dbe2_jump:
		mov    $0x00000c,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05dbf8_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000009,%al
		je     _05db7e_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05dc08_case:
		xor    %eax,%eax
		mov    _0dbc1c_data,%al
		test   %eax,%eax
		jne    _05db79_jump
		mov    %esi,%eax
		call   _05ce40_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05dc23_case:
		xor    %eax,%eax
		mov    _0dbc1c_data,%al
		cmp    $0x000003,%eax
		jne    _05dc3b_jump
		mov    %esi,%eax
		call   _05d518_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05dc3b_jump:
		test   %eax,%eax
		jne    _05db79_jump
		mov    %esi,%eax
		call   _05cf6c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05dc4f_case:
		xor    %eax,%eax
		mov    _0dbc1c_data,%al
		cmp    $0x000003,%eax
		jne    _05dc64_jump
		mov    %esi,%eax
		call   _05d518_func
		jmp    _05dc6f_jump

	_05dc64_jump:
		test   %eax,%eax
		jne    _05dc6f_jump
		mov    %esi,%eax
		call   _05cf6c_func

	_05dc6f_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _05db79_jump
		mov    $0xffffffff,%edx
		xor    %eax,%eax
		call   _05c874_func
		cmp    0x00006b(%esi),%al
		jne    _05db79_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		andb   $0x0000f0,0x000005(%edx,%eax,8)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05dcb0_case:
		xor    %eax,%eax
		mov    _0dbc1c_data,%al
		cmp    $0x000002,%eax
		jne    _05dcc8_jump
		mov    %esi,%eax
		call   _05d14c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05dcc8_jump:
		cmp    $0x000003,%eax
		jne    _05db79_jump
		mov    %esi,%eax
		call   _05d518_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05dcdd_case:
		xor    %eax,%eax
		call   _05ce38_func
		mov    %ax,0x000040(%esi)
		mov    $0xffffffff,%eax
		call   _05ce38_func
		mov    %ax,0x000042(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _05dd1a_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		test   %eax,%eax
		jmp    _05dd3d_jump

	_05dd1a_jump:
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx

	_05dd3d_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05db79_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _05db79_jump
		call   _05ce38_func
		mov    %ax,0x000042(%esi)
		xor    %eax,%eax
		mov    _0dbc1c_data,%al
		cmp    $0x000002,%eax
		jne    _05ddad_jump
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		mov    $0x000002,%edx
		call   _05c410_func
		mov    %esi,%eax
		call   _01d4a8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ddad_jump:
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ddc0_jump:
		andb   $0x0000df,0x000081(%esi)
		mov    0x00006c(%esi),%al
		sub    $0x00000a,%al
		cmp    $0x000004,%al
		ja     _05db79_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05db4c_switch(,%eax,4)



_05dde4_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000068(%eax),%dl
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    _0c1b44_data,%cx
		mov    _0c1b84_data,%bl
		add    %ecx,%ebx
		sub    %edx,%ebx
		movswl %bx,%edx
		test   %edx,%edx
		je     _05de2d_jump
		add    $0x000081,%eax
		test   %edx,%edx
		setg   %dl
		and    $0x0000ff,%edx
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)

	_05de2d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05de34_switch:
		.long   _05df31_case
		.long   _05deee_case
		.long   _05dea0_case
		.long   _05dea0_case
		.long   _05dfe3_case
		.long   _05dea6_case
		.long   _05e0f5_case

_05de50_switch:
		.long   _05e308_case
		.long   _05e321_case
		.long   _05e343_case
		.long   _05e3ac_case
		.long   _05e400_case
		.long   _05e2d8_case
		.long   _05dea0_case
		.long   _05e30f_case
		.long   _05e1fa_case




_05de74_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    $0x000001,%ah
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %ah,_0c25b1_data
		mov    0x00006d(%ecx),%bl
		mov    0x00006c(%ecx),%dl
		test   %bx,%bx
		jbe    _05e1e0_jump
		cmp    $0x000002,%bx
		je     _05e498_jump

	_05dea0_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05dea6_case:
		movw   $0x000001,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _024ba8_func
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		mov    _0c247a_data,%eax
		sar    $0x000010,%eax
		add    $0x000100,%eax
		cmp    %eax,%edx
		jle    _05dea0_case
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000040(%ecx)
		call   _01d4a8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05deee_case:
		mov    %ecx,%eax
		call   _05dde4_func
		mov    %ecx,%eax
		call   _024ba8_func
		xor    %eax,%eax
		mov    _0dbc1c_data,%al
		cmp    $0x000004,%eax
		jne    _05df12_jump
		call   _05c28c_func
		call   _05ccbc_func

	_05df12_jump:
		xor    %eax,%eax
		mov    _0dbc1c_data,%al
		test   %eax,%eax
		jne    _05dea0_case
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05df31_case:
		mov    %ecx,%eax
		call   _024ba8_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _05df5c_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _05df80_jump

	_05df5c_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%ecx),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		xor    %eax,%eax
		dec    %edx
		mov    0x00006b(%ecx),%al
		cmp    %edx,%eax

	_05df80_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05dea0_case
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		je     _05dfd4_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05dfc0_jump:
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05dfd4_jump:
		mov    _0dbc1c_data,%al
		test   %al,%al
		je     _05dfc0_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05dfe3_case:
		mov    %ecx,%eax
		call   _024ba8_func
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000023,%eax
		jne    _05e055_jump
		movswl %bx,%eax
		shl    $0x000002,%eax
		mov    0x00000c(%ecx),%ebx
		add    %eax,%ebx
		movswl %dx,%eax
		mov    (%ebx),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%bl
		test   %bl,%bl
		jne    _05e055_jump
		mov    0x000032(%ecx),%edx
		mov    $0x000099,%eax
		sar    $0x000010,%edx
		xor    %bh,%bh
		call   _06ac04_func
		jmp    _05e037_jump

	_05e02d_jump:
		xor    %eax,%eax
		mov    %bl,%al
		call   _05c5ac_func
		inc    %ebx

	_05e037_jump:
		xor    %ecx,%ecx
		movswl %bx,%eax
		mov    _0dbc1b_data,%cl
		cmp    %ecx,%eax
		jge    _05dea0_case
		cmp    $0x000005,%eax
		jl     _05e02d_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e055_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _05e079_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _05e09c_jump

	_05e079_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_05e09c_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05dea0_case
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _05dea0_case
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e0f5_case:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		movw   $0x000000,0x000040(%ecx)
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		movw   $0x00fffe,0x000042(%ecx)
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000010,0x000007(%ebx,%eax,1)
		je     _05e12c_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _05e14f_jump

	_05e12c_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%ecx),%bl
		lea    0x000000(,%ebx,4),%eax
		mov    0x000004(%ecx),%edx
		sub    %ebx,%eax
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_05e14f_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05dea0_case
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _05dea0_case
		mov    0x000081(%ecx),%dh
		mov    %eax,0x000024(%ecx)
		and    $0x0000fb,%dh
		xor    %ebx,%ebx
		mov    %dh,0x000081(%ecx)
		mov    $0x00000f,%edx
		jmp    _05e1cb_jump

	_05e1a8_jump:
		imul   $0x000014,%ecx,%ecx
		movb   $0x000002,_0dbc36_data(%ecx)
		mov    %dx,_0dbc2c_data(%ecx)
		movw   $0x000001,_0dbc28_data(%ecx)
		xor    %ah,%ah
		inc    %ebx
		mov    %ah,_0dbc35_data(%ecx)

	_05e1cb_jump:
		movswl %bx,%ecx
		cmp    $0x000005,%ecx
		jl     _05e1a8_jump
		movb   $0x000002,_0dbc1c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e1e0_jump:
		mov    %edx,%eax
		dec    %eax
		cmp    $0x000006,%ax
		ja     _05dea0_case
		and    $0x00ffff,%eax
		jmp    *%cs:_05de34_switch(,%eax,4)

	_05e1fa_case:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		movw   $0x000000,0x000040(%ecx)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _05e224_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _05e247_jump

	_05e224_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_05e247_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05e27d_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		je     _05e299_jump

	_05e27d_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		cmp    $0x000001,%eax
		jne    _05dea0_case
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _05dea0_case

	_05e299_jump:
		mov    $0x000001,%bh
		sub    %bh,0x000076(%ecx)
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		mov    %bh,_0dbc1d_data
		test   %eax,%eax
		jne    _05e2c1_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e2c1_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e2d8_case:
		andb   $0x0000f7,0x000081(%ecx)
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x000006,%eax
		jge    _05e2fc_jump
		mov    %ecx,%eax
		call   _05c170_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e2fc_jump:
		movw   $0x00fffe,0x000042(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e308_case:
		mov    %ecx,%eax
		call   _05dde4_func

	_05e30f_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e321_case:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		movw   $0x00fffe,0x000042(%ecx)
		cmp    $0x00000f,%eax
		jl     _05e337_jump
		movw   $0x000000,0x000042(%ecx)

	_05e337_jump:
		movw   $0x000000,0x000050(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e343_case:
		movw   $0x000000,0x000042(%ecx)
		call   _05c2b4_func
		test   %al,%al
		je     _05dea0_case
		xor    %eax,%eax
		mov    _0dbc1c_data,%al
		test   %eax,%eax
		jne    _05e368_jump
		movb   $0x000001,_0dbc1c_data

	_05e368_jump:
		mov    0x000050(%ecx),%si
		inc    %esi
		mov    _0dbc1e_data,%di
		mov    %si,0x000050(%ecx)
		cmp    %di,%si
		je     _05e38d_jump
		xor    %eax,%eax
		mov    _0dbc1a_data,%al
		cmp    $0x000005,%eax
		jne    _05dea0_case

	_05e38d_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movb   $0x000000,0x000071(%ecx)
		mov    %ecx,%eax
		movb   $0x000003,0x000072(%ecx)
		call   _01d4a8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e3ac_case:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%bx
		mov    0x000069(%ecx),%al
		mov    _0c247c_data,%dx
		add    %ebx,%eax
		add    $0x0000a0,%edx
		movswl %ax,%ebx
		movswl %dx,%eax
		mov    %ebx,%edx
		call   _05c3a0_func
		cwtl   
		sub    %ebx,%eax
		cmp    $0x000005,%eax
		jge    _05dea0_case
		mov    $0x000005,%ebx
		mov    $0x000002,%edx
		movw   $0x000001,0x000042(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d4a8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e400_case:
		xor    %eax,%eax
		mov    %bl,%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _05e423_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _05e446_jump

	_05e423_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%ecx),%bl
		lea    0x000000(,%ebx,4),%eax
		mov    0x000004(%ecx),%edx
		sub    %ebx,%eax
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_05e446_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05dea0_case
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _05dea0_case
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e498_jump:
		dec    %edx
		cmp    $0x000008,%dx
		ja     _05dea0_case
		xor    %eax,%eax
		mov    %dx,%ax
		jmp    *%cs:_05de50_switch(,%eax,4)



_05e4b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _05c1c0_func
		mov    $0x000096,%edx
		mov    $0x000046,%ebx
		movb   $0x000006,0x000076(%ecx)
		xor    %ah,%ah
		movb   $0x000006,0x000077(%ecx)
		mov    %ah,_0dbc18_data
		mov    %ah,_0dbc19_data
		mov    %ah,_0dbc1c_data
		mov    %ah,_0dbc22_data
		mov    _096984_data,%al
		mov    %dx,_0dbc1e_data
		mov    %al,_0dbc1a_data
		xor    %eax,%eax
		mov    %bx,_0dbc20_data
		mov    _0dbc1a_data,%al
		mov    $0x000002,%edx
		xor    %bh,%bh
		mov    _09697c_data(%eax),%al
		mov    %bh,_0dbc1d_data
		mov    %al,_0dbc1b_data
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000f7,%al
		mov    $0x000006,%ebx
		mov    %al,0x000081(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _01d4a8_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000008(%eax),%eax
		mov    0x000032(%eax),%al
		mov    %al,0x00006a(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e558_func:
		call   _05e4b0_func
		mov    _0c247c_data,%ax
		mov    %ax,_0c259c_data
		mov    %ax,_0c259a_data
		mov    _0c247e_data,%ax
		mov    %ax,_0c25a0_data
		mov    %ax,_0c259e_data
		ret    



_05e584_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		movswl %dx,%eax
		cmp    $0x000005,%eax
		jne    _05e5d2_jump
		xor    %eax,%eax
		mov    _0dbc1d_data,%al
		test   %eax,%eax
		jne    _05e5d2_jump
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05e5d2_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000003,%eax
		jne    _05e5d2_jump
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fffe,0x000042(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000008,0x000072(%ecx)

	_05e5d2_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05e5d8_func:
		push   %edx
		mov    $0x000028,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0c1b72_data
		pop    %edx
		ret    



_05e5ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05e642_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x00000a,%eax
		jne    _05e642_jump
		mov    %ecx,%eax
		call   _024ec4_func
		mov    0x00004e(%ecx),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x000001,%bl
		xor    %edx,%edx
		mov    %bl,_0dbc35_data(,%eax,4)
		mov    $0x000009,%ebx
		mov    %ecx,%eax
		call   _01d4a8_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e642_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05e6b7_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x00000b,%eax
		jne    _05e6b7_jump
		xor    %eax,%eax
		mov    _0dbc1a_data,%al
		cmp    $0x000001,%eax
		je     _05e66b_jump
		cmp    $0x000002,%eax
		jne    _05e70b_jump

	_05e66b_jump:
		mov    0x00004e(%ecx),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x000001,%dl
		mov    %dl,_0dbc35_data(,%eax,4)
		call   _05c2b4_func
		test   %al,%al
		je     _05e692_jump
		mov    %dl,_0dbc1c_data

	_05e692_jump:
		mov    %ecx,%eax
		mov    $0x000009,%ebx
		call   _024ec4_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e6b7_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05e70b_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x00000e,%eax
		jne    _05e70b_jump
		mov    0x000072(%ecx),%al
		mov    0x000042(%ecx),%dx
		mov    0x000071(%ecx),%ah
		neg    %edx
		sub    %ah,%al
		mov    %dx,0x000042(%ecx)
		mov    %al,0x000071(%ecx)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%bl
		and    $0x0000f0,%bl
		mov    %bl,%bh
		or     $0x000002,%bh
		mov    %bh,0x000005(%eax,%edx,8)
		mov    %ecx,%eax
		call   _024ec4_func

	_05e70b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e710_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05e766_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000007,%eax
		jne    _05e766_jump
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _024ec4_func
		mov    _0c25c2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _05e751_jump
		movw   $0x000001,_0c25c4_data

	_05e751_jump:
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05e766_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05e7d2_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000005,%eax
		jne    _05e7d2_jump
		mov    _0c25c2_data,%eax
		movw   $0x000000,0x000040(%ecx)
		sar    $0x000010,%eax
		movw   $0x000000,0x000042(%ecx)
		test   %eax,%eax
		jne    _05e7b9_jump
		mov    0x00004e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _05e7b0_jump
		mov    %ecx,%eax
		call   _024ec4_func
		mov    %ecx,%eax
		call   _04d170_func
		movw   $0x000001,0x000050(%ecx)

	_05e7b0_jump:
		movw   $0x000001,_0c25c4_data

	_05e7b9_jump:
		xor    %ecx,%ecx
		mov    _0dbc1c_data,%cl
		cmp    $0x000001,%ecx
		jne    _05e7d2_jump
		movb   $0x000002,_0dbc1c_data
		call   _05c28c_func

	_05e7d2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e7e0_func:
		push   $0x000024
		call   _078d9e_func
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x000004(%ebp)
		mov    %edx,-0x000008(%ebp)
		movl   $0x000100,_0dbc94_data
		xor    %edx,%edx
		mov    -0x000004(%ebp),%dx
		add    $0x00000f,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %eax,_0dbc98_data
		mov    $_0dbc94_data,%ebx
		mov    $_0dbc94_data,%edx
		mov    $0x000031,%eax
		call   _0796b6_func
		testb  $0x000001,_0dbcac_data
		je     _05e851_jump
		mov    -0x000008(%ebp),%eax
		movl   $0x000000,(%eax)
		movl   $0x000000,-0x00000c(%ebp)
		jmp    _05e86b_jump

	_05e851_jump:
		xor    %edx,%edx
		mov    _0dbc94_data,%dx
		mov    -0x000008(%ebp),%eax
		shl    $0x000010,%edx
		mov    %edx,(%eax)
		mov    _0dbca0_data,%ax
		mov    %eax,-0x00000c(%ebp)

	_05e86b_jump:
		mov    -0x00000c(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_05e878_func:
		push   $0x000024
		call   _078d9e_func
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		movw   $0x000101,_0dbc94_data
		mov    -0x000004(%ebp),%eax
		mov    %ax,_0dbca0_data
		mov    $_0dbc94_data,%ebx
		mov    $_0dbc94_data,%edx
		mov    $0x000031,%eax
		call   _0796b6_func
		testb  $0x000001,_0dbcac_data
		je     _05e8c8_jump
		movb   $0x000001,-0x000008(%ebp)
		jmp    _05e8cc_jump

	_05e8c8_jump:
		movb   $0x000000,-0x000008(%ebp)

	_05e8cc_jump:
		mov    -0x000008(%ebp),%al
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e8d8_func:
		push   $0x000020
		call   _078d9e_func
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %al,-0x000004(%ebp)
		mov    %edx,-0x000008(%ebp)
		mov    $0x00001c,%ebx
		xor    %edx,%edx
		mov    $_0dbc94_data,%eax
		call   _0787d0_func
		mov    $0x00000c,%ebx
		xor    %edx,%edx
		mov    $_0dbc88_data,%eax
		call   _0787d0_func
		mov    $0x000034,%ebx
		xor    %edx,%edx
		mov    $_0dbcb0_data,%eax
		call   _0787d0_func
		mov    -0x000008(%ebp),%edx
		xor    %eax,%eax
		mov    (%edx),%ax
		mov    %eax,_0dbccc_data
		mov    -0x000008(%ebp),%edx
		xor    %eax,%eax
		mov    0x000002(%edx),%ax
		mov    %eax,_0dbcc0_data
		mov    -0x000008(%ebp),%edx
		xor    %eax,%eax
		mov    0x000004(%edx),%ax
		mov    %eax,_0dbcc8_data
		mov    -0x000008(%ebp),%edx
		xor    %eax,%eax
		mov    0x000006(%edx),%ax
		mov    %eax,_0dbcc4_data
		mov    -0x000008(%ebp),%edx
		xor    %eax,%eax
		mov    0x000008(%edx),%ax
		mov    %eax,_0dbcb4_data
		mov    -0x000008(%ebp),%edx
		xor    %eax,%eax
		mov    0x00000a(%edx),%ax
		mov    %eax,_0dbcb0_data
		mov    -0x000008(%ebp),%eax
		mov    0x00000c(%eax),%ax
		mov    %ax,_0dbcd0_data
		mov    -0x000008(%ebp),%eax
		mov    0x00000e(%eax),%ax
		mov    %ax,_0dbcdc_data
		mov    -0x000008(%ebp),%eax
		mov    0x000010(%eax),%ax
		mov    %ax,_0dbcd4_data
		mov    -0x000008(%ebp),%eax
		mov    0x000012(%eax),%ax
		mov    %ax,_0dbcd2_data
		mov    -0x000008(%ebp),%eax
		mov    0x000014(%eax),%ax
		mov    %ax,_0dbce0_data
		movw   $0x000300,_0dbc94_data
		mov    -0x000004(%ebp),%al
		mov    %al,_0dbc98_data
		movb   $0x000000,_0dbc99_data
		movw   $0x000000,_0dbc9c_data
		mov    %ds,%ebx
		mov    $_0dbcb0_data,%edx
		mov    %ebx,%eax
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		mov    %dx,_0dbc88_data
		movl   $_0dbcb0_data,_0dbca8_data
		mov    $_0dbc88_data,%ecx
		mov    $_0dbc94_data,%ebx
		mov    $_0dbc94_data,%edx
		mov    $0x000031,%eax
		call   _07a0bb_func
		mov    _0dbccc_data,%ax
		mov    -0x000008(%ebp),%edx
		mov    %ax,(%edx)
		mov    _0dbcc0_data,%ax
		mov    -0x000008(%ebp),%edx
		mov    %ax,0x000002(%edx)
		mov    _0dbcc8_data,%ax
		mov    -0x000008(%ebp),%edx
		mov    %ax,0x000004(%edx)
		mov    _0dbcc4_data,%ax
		mov    -0x000008(%ebp),%edx
		mov    %ax,0x000006(%edx)
		mov    _0dbcb4_data,%ax
		mov    -0x000008(%ebp),%edx
		mov    %ax,0x000008(%edx)
		mov    _0dbcb0_data,%ax
		mov    -0x000008(%ebp),%edx
		mov    %ax,0x00000a(%edx)
		mov    _0dbcd0_data,%dx
		mov    -0x000008(%ebp),%eax
		mov    %dx,0x00000c(%eax)
		mov    _0dbcdc_data,%dx
		mov    -0x000008(%ebp),%eax
		mov    %dx,0x00000e(%eax)
		mov    _0dbcd4_data,%dx
		mov    -0x000008(%ebp),%eax
		mov    %dx,0x000010(%eax)
		mov    _0dbcd2_data,%dx
		mov    -0x000008(%ebp),%eax
		mov    %dx,0x000012(%eax)
		mov    _0dbce0_data,%dx
		mov    -0x000008(%ebp),%eax
		mov    %dx,0x000014(%eax)
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_05eac0_switch:
		.long   _05eb11_case
		.long   _05eb57_case
		.long   _05eb1d_case
		.long   _05eb57_case
		.long   _05eb29_case
		.long   _05eb57_case
		.long   _05eb57_case
		.long   _05eb35_case
		.long   _05eb57_case
		.long   _05eb41_case
		.long   _05eb57_case
		.long   _05eb4d_case




_05eaf0_func:
		push   %ebx
		push   %edx
		mov    %al,%bl
		mov    _0c1ec0_data,%eax
		mov    0x00006c(%eax),%dl
		dec    %dl
		cmp    $0x00000b,%dl
		ja     _05eb57_case
		and    $0x0000ff,%edx
		jmp    *%cs:_05eac0_switch(,%edx,4)

	_05eb11_case:
		mov    $0x000002,%edx
		call   _01d498_func
		jmp    _05eb57_case

	_05eb1d_case:
		mov    $0x000004,%edx
		call   _01d498_func
		jmp    _05eb57_case

	_05eb29_case:
		mov    $0x000006,%edx
		call   _01d498_func
		jmp    _05eb57_case

	_05eb35_case:
		mov    $0x000009,%edx
		call   _01d498_func
		jmp    _05eb57_case

	_05eb41_case:
		mov    $0x00000b,%edx
		call   _01d498_func
		jmp    _05eb57_case

	_05eb4d_case:
		mov    $0x00000d,%edx
		call   _01d498_func

	_05eb57_case:
		test   %bl,%bl
		je     _05eb64_jump
		mov    _0c1ec0_data,%eax
		movb   $0x000007,0x00006b(%eax)

	_05eb64_jump:
		pop    %edx
		pop    %ebx
		ret    



_05eb68_func:
		push   %ebx
		push   %edx
		mov    _0c1ec4_data,%eax
		mov    _0c247c_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		cwtl   
		sub    %edx,%eax
		mov    _0c1ec0_data,%edx
		mov    %ax,0x000038(%edx)
		mov    _0c247c_data,%bx
		mov    0x000028(%edx),%ax
		sub    %ebx,%eax
		add    $0x000008,%eax
		mov    %ax,0x000036(%edx)
		pop    %edx
		pop    %ebx
		ret    

_05eba4_switch:
		.long   _05ee17_case
		.long   _05ee20_case
		.long   _05ee07_case
		.long   _05ee20_case
		.long   _05edf7_case
		.long   _05ee20_case
		.long   _05ee20_case
		.long   _05ee12_case
		.long   _05ee20_case
		.long   _05ee02_case
		.long   _05ee20_case
		.long   _05edf2_case




_05ebd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _05ebfc_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000019,%eax
		je     _05ebf5_jump
		cmp    $0x00001a,%eax
		jne    _05ebfc_jump

	_05ebf5_jump:
		mov    $0x00001d,%edx
		jmp    _05ec47_jump

	_05ebfc_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _05ec20_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00001b,%eax
		je     _05ec19_jump
		cmp    $0x00001c,%eax
		jne    _05ec20_jump

	_05ec19_jump:
		mov    $0x00001e,%edx
		jmp    _05ec47_jump

	_05ec20_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _05ec42_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000011,%eax
		je     _05ec51_jump
		cmp    $0x000012,%eax
		je     _05ec51_jump
		cmp    $0x000013,%eax
		je     _05ec51_jump

	_05ec42_jump:
		mov    $0x00000d,%edx

	_05ec47_jump:
		mov    $_0c1b1c_data,%eax
		call   _01d498_func

	_05ec51_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _05ecb7_jump
		testb  $0x000008,_0c1b9d_data
		je     _05ec8c_jump
		mov    _0c1eca_data,%edx
		sar    $0x000010,%edx
		shl    $0x00000a,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    %eax,%edx
		mov    _0c2582_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		jmp    _05ecb1_jump

	_05ec8c_jump:
		mov    _0c1eca_data,%edx
		sar    $0x000010,%edx
		shl    $0x00000a,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    %eax,%edx
		mov    _0c2582_data,%eax
		sar    $0x000010,%eax
		add    %edx,%eax

	_05ecb1_jump:
		mov    %ax,_0c2584_data

	_05ecb7_jump:
		xor    %dl,%dl
		mov    _0c1ec0_data,%eax
		mov    %dl,_0c1ed4_data
		mov    $0x000001,%dh
		mov    0x000081(%eax),%cl
		mov    %dh,_0c1ed2_data
		mov    %dl,_0c1ed5_data
		mov    %dl,_0c1ed1_data
		mov    _0c1b9d_data,%dl
		and    $0x0000f7,%cl
		and    $0x000008,%dl
		mov    %cl,%ch
		or     %dl,%ch
		mov    %ch,0x000081(%eax)
		mov    0x000081(%eax),%dl
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%dl
		mov    %dl,0x000081(%eax)
		mov    _0c24e0_data,%eax
		sar    $0x000010,%eax
		call   _01f5b4_func
		mov    _0c1ec0_data,%eax
		call   _01f584_func
		mov    _0c1ec0_data,%eax
		xor    %bl,%bl
		movw   $0x000000,0x000042(%eax)
		xor    %edx,%edx
		mov    %bl,0x00006b(%eax)
		xor    %ebx,%ebx
		mov    0x00006f(%eax),%dl
		mov    0x00006e(%eax),%bl
		movw   $0x00ffff,0x00004a(%eax)
		call   _01d4a8_func
		mov    _0c1ec0_data,%eax
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%eax),%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		lea    0x000000(,%edx,8),%ecx
		mov    (%ebx),%edx
		mov    0x000002(%ecx,%edx,1),%dl
		mov    _0c2572_data,%ebx
		mov    %dl,0x00006a(%eax)
		mov    _0c2576_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000011,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%eax)
		mov    _0c1b9d_data,%bl
		lea    0x000028(%eax),%edx
		test   $0x000008,%bl
		je     _05eda4_jump
		mov    $0xfffffffb,%eax
		jmp    _05eda9_jump

	_05eda4_jump:
		mov    $0x000005,%eax

	_05eda9_jump:
		mov    (%edx),%ebx
		mov    $0x000004,%cl
		add    %eax,%ebx
		mov    _0c1ecc_data,%ax
		mov    %ebx,(%edx)
		test   %ax,%ax
		js     _05edc1_jump
		sar    %cl,%ax
		jmp    _05edca_jump

	_05edc1_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_05edca_jump:
		inc    %al
		mov    %al,_0c1ed3_data
		mov    _0c1ec0_data,%eax
		mov    0x00006e(%eax),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _05ee20_case
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0c1ed3_data,%al
		add    $0x000002,%al
		jmp    *%cs:_05eba4_switch(,%edx,4)

	_05edf2_case:
		mov    %al,_0c1ed3_data

	_05edf7_case:
		movw   $0x00000b,_0c1eca_data
		jmp    _05ee20_case

	_05ee02_case:
		mov    %al,_0c1ed3_data

	_05ee07_case:
		movw   $0x000008,_0c1eca_data
		jmp    _05ee20_case

	_05ee12_case:
		mov    %al,_0c1ed3_data

	_05ee17_case:
		movw   $0x000005,_0c1eca_data

	_05ee20_case:
		testb  $0x000008,_0c1b9d_data
		je     _05ee35_jump
		mov    _0c2582_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _05ee4a_jump

	_05ee35_jump:
		testb  $0x000008,_0c1b9d_data
		jne    _05ee6a_jump
		mov    _0c2582_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05ee6a_jump

	_05ee4a_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		test   %eax,%eax
		jge    _05ee5a_jump
		neg    %eax

	_05ee5a_jump:
		sub    $0x000005,%eax
		cmp    %ebx,%eax
		jge    _05ee63_jump
		mov    %ebx,%eax

	_05ee63_jump:
		add    %ax,_0c1eca_data

	_05ee6a_jump:
		mov    _0c1ec8_data,%eax
		mov    $0x000010,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _05ee7d_jump
		mov    %ebx,%eax

	_05ee7d_jump:
		mov    %eax,%edx
		mov    %ax,_0c1eca_data
		mov    _0c1ec0_data,%eax
		testb  $0x000008,0x000081(%eax)
		je     _05eea2_jump
		mov    0x000028(%eax),%esi
		mov    %dx,0x000040(%eax)
		add    $0x00000b,%esi
		mov    %esi,0x000028(%eax)
		jmp    _05eeb1_jump

	_05eea2_jump:
		mov    0x000028(%eax),%ecx
		neg    %edx
		sub    $0x00000b,%ecx
		mov    %dx,0x000040(%eax)
		mov    %ecx,0x000028(%eax)

	_05eeb1_jump:
		mov    _0c1eca_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000006,%eax
		add    %eax,%edx
		add    %edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    _0c1ec8_data,%edx
		sar    $0x000010,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    $0x000028,%ebx
		sub    %edx,%eax
		mov    $0x000008,%cl
		sub    %eax,%ebx
		mov    _0c1ecc_data,%ax
		mov    %bx,_0c1ece_data
		cwtl   
		shl    %cl,%eax
		mov    %ax,_0c1ec8_data
		mov    %ax,_0c1ecc_data
		mov    _0c1ec8_data,%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    _0c1ecc_data,%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,_0c1ece_data
		mov    _0c1ec0_data,%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%dl
		mov    0x000074(%eax),%bl
		lea    (%edx,%ebx,1),%ecx
		mov    _0c2578_data,%ebx
		mov    _0c2574_data,%edx
		sar    $0x000011,%ebx
		sar    $0x000010,%edx
		sar    %ecx
		add    %ebx,%edx
		sub    %ecx,%edx
		mov    %edx,0x00002c(%eax)
		mov    $0x000004,%cl
		mov    0x00002c(%eax),%ax
		cwtl   
		shl    %cl,%eax
		mov    %eax,_0c1ec4_data
		call   _05eb68_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ef70_jump:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0c1b89_data,%dl
		mov    _0c1b28_data,%eax
		lea    0x000000(,%edx,4),%ebx
		lea    (%eax,%ebx,1),%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    _0c1b88_data,%bl
		testb  $0x000002,0x000007(%ecx,%ebx,8)
		je     _05f038_jump
		cmp    $0x000002,%edx
		jne    _05f010_jump
		mov    _0c1b5c_data,%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _05efc9_jump
		mov    0x000008(%eax),%eax
		mov    0x00006d(%eax),%bh
		mov    0x000015(%eax),%dl
		and    $0x00000f,%bh
		and    $0x0000f0,%dl
		mov    %bh,%cl
		or     %dl,%cl
		mov    %cl,0x00006d(%eax)
		jmp    _05efdf_jump

	_05efc9_jump:
		mov    0x000008(%eax),%eax
		mov    0x000005(%eax),%dl
		and    $0x0000f0,%dl
		mov    0x00006d(%eax),%dh
		and    $0x00000f,%dh
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,0x00006d(%eax)

	_05efdf_jump:
		mov    $0x000020,%ebx
		mov    $0xffffffff,%ecx
		mov    %bx,_0c1ecc_data
		call   _05ebd4_func
		mov    %cx,_0c24d4_data
		testb  $0x000008,_0c32e4_data
		je     _05f038_jump
		xor    %al,%al
		mov    %al,_0c24d3_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f010_jump:
		call   _065cfc_func
		mov    $0x00000b,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		mov    $0x000001,%ah
		mov    $0x000005,%edx
		mov    %ah,_0c1ed4_data
		mov    %dx,_0c1ecc_data

	_05f038_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f03c_func:
		incw   _0c1ecc_data
		mov    _0c1eca_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000040,%eax
		jl     _05f059_jump
		movw   $0x00003f,_0c1ecc_data

	_05f059_jump:
		ret    



_05f05c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%bl
		mov    _0c1ec0_data,%edx
		mov    0x000048(%edx),%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _05f110_jump
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0c1b04_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		movw   $0x000000,0x000040(%eax)
		movw   $0x000000,0x000042(%eax)
		movw   $0x00ffff,0x00004a(%edx)
		test   %bl,%bl
		jne    _05f0b2_jump
		mov    0x000081(%edx),%dl
		shl    $0x000005,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		jne    _05f0f6_jump

	_05f0b2_jump:
		xor    %edx,%edx
		mov    _0c1b44_data,%ecx
		mov    _0c1b84_data,%dl
		add    %edx,%ecx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ecx
		xor    %edx,%edx
		mov    %ecx,0x000028(%eax)
		xor    %ecx,%ecx
		mov    0x000069(%eax),%dl
		mov    0x000074(%eax),%cl
		lea    (%edx,%ecx,1),%ebx
		mov    _0c2578_data,%ecx
		mov    _0c2574_data,%edx
		sar    $0x000011,%ecx
		sar    $0x000010,%edx
		add    %ecx,%edx
		sar    %ebx
		sub    $0x000005,%edx
		sub    %ebx,%edx
		jmp    _05f10d_jump

	_05f0f6_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		test   %edx,%edx
		jne    _05f110_jump
		mov    0x00003a(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%eax)
		mov    0x00003c(%eax),%edx
		sar    $0x000010,%edx

	_05f10d_jump:
		mov    %edx,0x00002c(%eax)

	_05f110_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f114_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000048(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000040(%edx),%bx
		mov    %bx,0x000040(%eax)
		mov    0x000042(%edx),%dx
		mov    %dx,0x000042(%eax)
		mov    _0c1b70_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _05f154_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _05f15b_jump

	_05f154_jump:
		xor    %eax,%eax
		call   _05f05c_func

	_05f15b_jump:
		pop    %edx
		pop    %ebx
		ret    



_05f160_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05f171_jump
		neg    %eax

	_05f171_jump:
		cmp    $0x00000b,%eax
		jl     _05f17a_jump
		mov    $0x000002,%al
		jmp    _05f19e_jump

	_05f17a_jump:
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05f186_jump
		neg    %eax

	_05f186_jump:
		cmp    $0x000008,%eax
		jl     _05f18f_jump
		mov    $0x000001,%al
		jmp    _05f19e_jump

	_05f18f_jump:
		cmpb   $0x000000,_0c249a_data
		je     _05f19c_jump
		mov    $0x000001,%al
		jmp    _05f19e_jump

	_05f19c_jump:
		xor    %al,%al

	_05f19e_jump:
		testb  $0x000008,0x000081(%edx)
		je     _05f1b7_jump
		mov    0x000040(%edx),%cx
		xor    %ah,%ah
		sub    %eax,%ecx
		mov    %cx,0x000040(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f1b7_jump:
		mov    0x000040(%edx),%bx
		xor    %ah,%ah
		add    %eax,%ebx
		mov    %bx,0x000040(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f1c8_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		mov    %ah,_0c1ed2_data
		mov    %ah,_0c1ed5_data
		mov    %ah,_0c1ed1_data
		mov    _0c1ec0_data,%eax
		mov    $0x000005,%edx
		movl   $0x000000,0x000024(%eax)
		mov    %dx,_0c1ecc_data
		mov    0x000081(%eax),%bl
		mov    0x00006e(%eax),%dl
		and    $0x0000fb,%bl
		mov    %dl,0x00006c(%eax)
		mov    %bl,0x000081(%eax)
		xor    %eax,%eax
		call   _05f05c_func
		pop    %edx
		pop    %ebx
		ret    



_05f218_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		cmpb   $0x000000,_0c1ed2_data
		je     _05f473_jump
		cmpw   $0x000000,0x000040(%esi)
		je     _05f410_jump
		call   _05eb68_func
		mov    _0c1ec4_data,%eax
		sar    $0x000004,%eax
		mov    %eax,0x00002c(%esi)
		mov    _0c1eca_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _05f295_jump
		mov    _0c1ecc_data,%ax
		mov    _0c1ece_data,%cx
		cmp    %cx,%ax
		jge    _05f270_jump
		xor    %eax,%eax
		mov    %ax,_0c1ecc_data
		jmp    _05f27b_jump

	_05f270_jump:
		mov    %eax,%edi
		sub    %ecx,%edi
		mov    %di,_0c1ecc_data

	_05f27b_jump:
		mov    _0c1eca_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _05f3f5_jump
		call   _05eaf0_func
		jmp    _05f3f5_jump

	_05f295_jump:
		xor    %eax,%eax
		mov    _0c1ed1_data,%al
		test   %eax,%eax
		jne    _05f2ac_jump
		mov    %esi,%eax
		call   _05f160_func
		jmp    _05f3f5_jump

	_05f2ac_jump:
		cmp    $0x000001,%eax
		jne    _05f3f5_jump
		mov    0x00003e(%esi),%eax
		mov    _0c1ec8_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		test   %eax,%eax
		jge    _05f2ca_jump
		neg    %eax

	_05f2ca_jump:
		cmp    %edx,%eax
		jge    _05f2d5_jump
		mov    %esi,%eax
		call   _05f160_func

	_05f2d5_jump:
		mov    _0c2576_data,%eax
		mov    _0c2572_data,%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000081(%esi),%cl
		mov    %edx,%eax
		test   $0x000008,%cl
		je     _05f301_jump
		lea    0x00000b(%edx),%eax
		jmp    _05f304_jump

	_05f301_jump:
		lea    -0x00000b(%edx),%eax

	_05f304_jump:
		xor    %edx,%edx
		mov    _0c1b89_data,%dl
		cmp    $0x000004,%edx
		jne    _05f322_jump
		testb  $0x000008,0x000081(%esi)
		je     _05f31f_jump
		add    $0x00000b,%eax
		jmp    _05f322_jump

	_05f31f_jump:
		sub    $0x00000b,%eax

	_05f322_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%dl
		lea    (%edx,%ebx,1),%ecx
		mov    _0c2578_data,%ebx
		mov    _0c2574_data,%edi
		sar    $0x000011,%ebx
		sar    $0x000010,%edi
		sar    %ecx
		add    %ebx,%edi
		sub    %ecx,%edi
		mov    0x000081(%esi),%dl
		shl    $0x000004,%edi
		test   $0x000008,%dl
		je     _05f35a_jump
		cmp    0x000028(%esi),%eax
		jge    _05f368_jump

	_05f35a_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _05f372_jump
		cmp    0x000028(%esi),%eax
		jg     _05f372_jump

	_05f368_jump:
		call   _05f1c8_func
		jmp    _05f3f5_jump

	_05f372_jump:
		mov    _0c1ec4_data,%ecx
		mov    %edi,%ebx
		mov    0x000028(%esi),%dx
		sub    %ecx,%ebx
		sub    %dx,%ax
		je     _05f393_jump
		movswl %ax,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%ebx

	_05f393_jump:
		mov    0x000040(%esi),%ax
		imul   %eax,%ebx
		mov    _0c1ec4_data,%ebp
		mov    %ebp,%eax
		mov    %bx,0x000042(%esi)
		mov    %edi,%ebx
		mov    0x000040(%esi),%edx
		cmp    %ebx,%eax
		jge    _05f3b1_jump
		mov    %ebx,%eax

	_05f3b1_jump:
		mov    %eax,%ecx
		mov    %edi,%ebx
		mov    _0c1ec4_data,%eax
		sar    $0x000010,%edx
		cmp    %ebx,%eax
		jle    _05f3c3_jump
		mov    %ebx,%eax

	_05f3c3_jump:
		add    %ebp,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _05f3d8_jump
		cmp    %ecx,%eax
		jg     _05f3d8_jump
		mov    $0x000001,%eax
		jmp    _05f3da_jump

	_05f3d8_jump:
		xor    %eax,%eax

	_05f3da_jump:
		test   %eax,%eax
		je     _05f3e5_jump
		sarw   $0x000004,0x000042(%esi)
		jmp    _05f3f5_jump

	_05f3e5_jump:
		mov    _0c1ec4_data,%eax
		sub    %eax,%edi
		mov    %edi,%eax
		sar    $0x000004,%eax
		mov    %ax,0x000042(%esi)

	_05f3f5_jump:
		xor    %eax,%eax
		mov    _0c1ed5_data,%al
		test   %eax,%eax
		jne    _05f461_jump
		cmpb   $0x000000,_0c1ed2_data
		je     _05f461_jump
		call   _02cd70_func
		jmp    _05f461_jump

	_05f410_jump:
		cmpb   $0x000000,_0c1ed5_data
		je     _05f447_jump
		cmpb   $0x000000,_0c1ed1_data
		jne    _05f447_jump
		mov    $0x000001,%eax
		call   _05eaf0_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000002(%edx,%eax,8),%al
		mov    %al,0x00006a(%esi)

	_05f447_jump:
		movb   $0x000001,_0c1ed1_data
		testb  $0x000008,0x000081(%esi)
		je     _05f45d_jump
		decw   0x000040(%esi)
		jmp    _05f461_jump

	_05f45d_jump:
		incw   0x000040(%esi)

	_05f461_jump:
		mov    0x000048(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05f473_jump
		mov    %esi,%eax
		call   _05f114_func

	_05f473_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f47c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000020,%esp
		mov    _0c1b04_data,%esi
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _05f4ac_jump
		jmp    _05f568_jump

	_05f49c_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _05f568_jump

	_05f4ac_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x00000b,%edx
		jne    _05f49c_jump
		mov    0x000024(%esi),%edx
		test   %edx,%edx
		jne    _05f49c_jump
		mov    %esi,%eax
		call   _01f584_func
		mov    %esp,%eax
		push   %eax
		lea    0x000020(%esp),%eax
		lea    0x00001c(%esp),%ecx
		push   %eax
		lea    0x00001c(%esp),%ebx
		mov    _0c1ec0_data,%eax
		call   _01d840_func
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01d3c0_func
		movb   $0x000000,0x00006b(%esi)
		xor    %eax,%eax
		mov    0x000012(%esp),%edx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    _0c1ec0_data,%eax
		mov    %edx,0x000028(%esi)
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _05f528_jump
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ebx
		mov    %ebx,0x000028(%esi)

	_05f528_jump:
		mov    -0x000002(%esp),%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%al
		mov    0x000074(%esi),%dl
		sar    $0x000011,%ebx
		add    %eax,%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		sar    %edx
		add    %ebx,%eax
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    %esi,%eax
		call   _01dcec_func
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)

	_05f568_jump:
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f570_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02f010_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		test   %edx,%edx
		jne    _05f5d2_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d754_func
		test   %ax,%ax
		je     _05f5d2_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02eb40_func
		test   %ax,%ax
		jne    _05f637_jump

	_05f5d2_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		cmp    $0x000001,%edx
		jne    _05f689_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d754_func
		test   %ax,%ax
		je     _05f689_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02eb40_func
		test   %ax,%ax
		je     _05f689_jump

	_05f637_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		cmp    $0x000001,%edx
		jne    _05f669_jump
		mov    0x000081(%ecx),%dl
		mov    $0x000001,%ebx
		and    $0x0000f7,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    $0x000007,%edx
		jmp    _05f684_jump

	_05f669_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		or     $0x000008,%ah
		mov    $0x000008,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax

	_05f684_jump:
		call   _058bb4_func

	_05f689_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _02e73c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f69c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02f010_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _05f6fd_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d754_func
		test   %ax,%ax
		je     _05f6fd_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02eb40_func
		test   %ax,%ax
		jne    _05f763_jump

	_05f6fd_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _05f7bc_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d754_func
		test   %ax,%ax
		je     _05f7bc_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02eb40_func
		test   %ax,%ax
		je     _05f7bc_jump

	_05f763_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _05f793_jump
		mov    0x000081(%ecx),%dl
		mov    %eax,%ebx
		and    $0x0000f7,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    $0x00000d,%edx
		jmp    _05f7ae_jump

	_05f793_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		or     $0x000008,%ah
		mov    $0x00000e,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax

	_05f7ae_jump:
		call   _058bb4_func
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)

	_05f7bc_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05f816_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000011,%eax
		jne    _05f816_jump
		mov    0x00003c(%ecx),%eax
		mov    0x00002c(%ecx),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _05f816_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _05f7fc_jump
		mov    $0x00000a,%edx
		mov    %eax,%ebx
		jmp    _05f806_jump

	_05f7fc_jump:
		mov    $0x000001,%ebx
		mov    $0x000009,%edx

	_05f806_jump:
		mov    %ecx,%eax
		call   _058bb4_func
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)

	_05f816_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		cmp    $0x000002,%edx
		jne    _05f8ea_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000012,%eax
		jne    _05f8ea_jump
		mov    0x00000c(%ecx),%ebx
		mov    (%ebx,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _05f848_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _05f872_jump

	_05f848_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ecx),%eax
		mov    0x00000a(%edx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_05f872_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _05f8ea_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _05f8ea_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _05f8cd_jump
		movl   $0x000000,0x000024(%ecx)
		movb   $0x000000,0x00007e(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f8cd_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000005,0x000042(%ecx)
		call   _058bb4_func

	_05f8ea_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f8f0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05f908_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000012,%eax
		je     _05f929_jump

	_05f908_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		movb   $0x000000,0x000076(%ecx)

	_05f929_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05f92c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    $0x000001,%ah
		mov    _0c1b08_data,%si
		xor    %edx,%edx
		mov    %ah,(%esp)
		mov    _0c1b04_data,%eax
		test   %si,%si
		jg     _05f95a_jump
		jmp    _05f984_jump

	_05f94f_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %si,%dx
		jge    _05f984_jump

	_05f95a_jump:
		xor    %ebx,%ebx
		mov    0x000060(%eax),%bx
		cmp    $0x00000a,%ebx
		jne    _05f94f_jump
		mov    0x00003c(%eax),%bx
		cmp    0x00003c(%ecx),%bx
		jne    _05f94f_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _05f94f_jump
		xor    %ebx,%ebx
		mov    0x00007f(%eax),%bl
		cmp    $0x000064,%ebx
		jge    _05f94f_jump
		xor    %dl,%dl
		mov    %dl,(%esp)

	_05f984_jump:
		mov    (%esp),%al
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f990_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    0x000032(%eax),%eax
		mov    _0c1b00_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,2),%ax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x00002c(%edx),%ecx
		cmp    0x00002c(%eax),%ecx
		jne    _05f9eb_jump
		mov    _0c247c_data,%ebx
		sar    $0x000010,%ebx
		add    $0x0000c8,%ebx
		mov    %ebx,0x00002c(%eax)
		mov    0x000081(%eax),%bl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%eax)

	_05f9eb_jump:
		mov    0x000032(%eax),%eax
		mov    _0c1b00_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,2),%ax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x00002c(%edx),%esi
		cmp    0x00002c(%eax),%esi
		jne    _05fa40_jump
		movl   $0x000000,0x000024(%eax)
		mov    _0c247c_data,%edx
		mov    0x000081(%eax),%bh
		sar    $0x000010,%edx
		and    $0x0000fb,%bh
		add    $0x0000c8,%edx
		mov    %bh,0x000081(%eax)
		mov    %edx,0x00002c(%eax)

	_05fa40_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05fa48_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		mov    %eax,%edx
		xor    %ebx,%ebx
		call   _02f010_func
		mov    0x00006d(%edx),%bl
		xor    %al,%al
		test   %ebx,%ebx
		jne    _05fb70_jump
		mov    0x000069(%edx),%bl
		add    0x00002c(%edx),%ebx
		mov    _0c247c_data,%ecx
		sar    $0x000010,%ecx
		add    $0x000014,%ebx
		add    $0x0000c8,%ecx
		cmp    %ecx,%ebx
		jge    _05fa82_jump
		incb   0x00007f(%edx)

	_05fa82_jump:
		xor    %ebx,%ebx
		mov    0x00006c(%edx),%bl
		cmp    $0x000003,%ebx
		jne    _05fa97_jump
		movw   $0x000000,0x000042(%edx)
		jmp    _05fb70_jump

	_05fa97_jump:
		cmp    $0x000009,%ebx
		jne    _05fb33_jump
		mov    _0c247c_data,%ecx
		mov    0x00002c(%edx),%esi
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    0x000074(%edx),%bl
		add    $0x0000c8,%ecx
		add    %esi,%ebx
		movw   $0x000006,0x000042(%edx)
		cmp    %ecx,%ebx
		jg     _05fae1_jump
		xor    %ecx,%ecx
		mov    _0c24b4_data,%ebx
		mov    0x000069(%edx),%cl
		sar    $0x000010,%ebx
		add    %esi,%ecx
		shl    $0x000004,%ebx
		add    $0x00000e,%ecx
		cmp    %ebx,%ecx
		jle    _05fb70_jump

	_05fae1_jump:
		mov    _0c24b4_data,%ebx
		xor    %eax,%eax
		mov    0x00002c(%edx),%ebp
		mov    0x000069(%edx),%al
		sar    $0x000010,%ebx
		add    %ebp,%eax
		shl    $0x000004,%ebx
		add    $0x00000e,%eax
		cmp    %ebx,%eax
		jle    _05fb05_jump
		mov    %edx,%eax
		call   _072610_func

	_05fb05_jump:
		movl   $0x000000,0x000024(%edx)
		mov    _0c247c_data,%eax
		movb   $0x000000,0x00007f(%edx)
		sar    $0x000010,%eax
		mov    0x000081(%edx),%bh
		add    $0x0000c8,%eax
		and    $0x0000fb,%bh
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		mov    %bh,0x000081(%edx)
		jmp    _05fb6b_jump

	_05fb33_jump:
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%ecx
		mov    0x000069(%edx),%bl
		add    %ebx,%ecx
		mov    _0c247c_data,%ebx
		sar    $0x000010,%ebx
		cmp    %ebx,%ecx
		jge    _05fb70_jump
		add    $0x0000c8,%ebx
		mov    %ebx,0x00002c(%edx)
		mov    0x000081(%edx),%bl
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%edx)

	_05fb6b_jump:
		call   _05f92c_func

	_05fb70_jump:
		xor    %ebx,%ebx
		mov    0x00007f(%edx),%bl
		cmp    $0x000064,%ebx
		jne    _05fb81_jump
		mov    %edx,%eax
		call   _05f92c_func

	_05fb81_jump:
		test   %al,%al
		je     _05fc55_jump
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%si
		xor    %eax,%eax
		test   %si,%si
		jg     _05fbb2_jump
		jmp    _05fc55_jump

	_05fba2_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %si,%ax
		jge    _05fc55_jump

	_05fbb2_jump:
		xor    %ebx,%ebx
		mov    0x000060(%ecx),%bx
		cmp    $0x00000a,%ebx
		jne    _05fba2_jump
		mov    0x00003c(%ecx),%bx
		cmp    0x00003c(%edx),%bx
		jne    _05fba2_jump
		mov    0x000024(%ecx),%ebx
		test   %ebx,%ebx
		jne    _05fba2_jump
		orb    $0x000004,0x000081(%ecx)
		mov    _0c247c_data,%eax
		sar    $0x000010,%eax
		movl   $0x000001,0x000024(%ecx)
		add    $0x0000c8,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0c24b4_data,%eax
		mov    0x000069(%ecx),%bl
		sar    $0x000010,%eax
		mov    0x00002c(%ecx),%esi
		shl    $0x000004,%eax
		add    %ebx,%esi
		sub    $0x000010,%eax
		cmp    %eax,%esi
		jle    _05fc1b_jump
		sub    %ebx,%eax
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _072610_func

	_05fc1b_jump:
		mov    0x00006f(%edx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%edx),%al
		mov    %al,0x00006c(%ecx)
		mov    0x000077(%edx),%al
		mov    %al,0x000076(%ecx)
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		or     $0x000010,%ah
		mov    %ebx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movb   $0x000000,0x00007f(%ecx)
		call   _01dcec_func
		mov    %ecx,%eax
		call   _058bb4_func

	_05fc55_jump:
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05fc5c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e92c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _05fc85_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		jmp    _05fc8e_jump

	_05fc85_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_05fc8e_jump:
		call   _01d4a8_func
		mov    %ecx,%eax
		call   _05f990_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		setne  %al
		mov    %al,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_05fcb4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05fcd3_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000010,%eax
		je     _05fdde_jump

	_05fcd3_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05fceb_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000011,%eax
		je     _05fdde_jump

	_05fceb_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _05fd03_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000012,%eax
		je     _05fdde_jump

	_05fd03_jump:
		xor    %eax,%eax
		mov    _0c1b44_data,%edx
		mov    _0c1b84_data,%al
		mov    0x000028(%ecx),%ebx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _05fd2e_jump
		mov    $0x000001,%eax
		jg     _05fd2e_jump
		neg    %eax

	_05fd2e_jump:
		test   %eax,%eax
		jl     _05fd48_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _05fd8b_jump

	_05fd48_jump:
		xor    %eax,%eax
		mov    _0c1b44_data,%esi
		mov    _0c1b84_data,%al
		lea    (%eax,%esi,1),%edx
		mov    0x000028(%ecx),%edi
		xor    %eax,%eax
		sub    %edi,%edx
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _05fd74_jump
		mov    $0x000001,%eax
		jg     _05fd74_jump
		neg    %eax

	_05fd74_jump:
		test   %eax,%eax
		jge    _05fdde_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _05fdde_jump

	_05fd8b_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _05fda9_jump
		movw   $0x000003,0x000040(%ecx)
		jmp    _05fdaf_jump

	_05fda9_jump:
		movw   $0x00fffd,0x000040(%ecx)

	_05fdaf_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		movw   $0x00fffb,0x000042(%ecx)
		call   _01d4a0_func
		mov    $0x000010,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d498_func
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _058bb4_func

	_05fdde_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ff34_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    $_094a20_data,%esi
		xor    %edx,%edx
		mov    $_0c25f4_data,%edi
		mov    %dx,(%esp)
		jmp    _05ff5f_jump

	_05ff4e_jump:
		mov    (%esp),%ebx
		add    $0x000014,%esi
		inc    %ebx
		add    $0x000084,%edi
		mov    %bx,(%esp)

	_05ff5f_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000018,%eax
		jge    _0600c8_jump
		testb  $0x000001,0x000008(%esi)
		jne    _05ff7a_jump
		cmp    $0x000011,%eax
		jne    _05ff4e_jump

	_05ff7a_jump:
		mov    0x000034(%edi),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000068(%edi),%dl
		add    %edx,%eax
		add    $0x000008,%eax
		cmp    $0xfffffff8,%eax
		jle    _05ffc2_jump
		mov    _0cdf7c_data,%edx
		add    $0x00000e,%edx
		cmp    %edx,%eax
		jge    _05ffc2_jump
		mov    0x000036(%edi),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000069(%edi),%dl
		add    %edx,%eax
		cmp    $0xfffffff6,%eax
		jle    _05ffc2_jump
		mov    _0cdf80_data,%edx
		add    $0x00000c,%edx
		cmp    %edx,%eax
		jge    _05ffc2_jump
		mov    %edi,%eax
		call   _018890_func

	_05ffc2_jump:
		cmpb   $0x000000,_0cd0d0_data
		je     _05ff4e_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000011,%eax
		je     _05ff4e_jump
		xor    %eax,%eax
		mov    0x000004(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094a28_data(%eax)
		je     _060014_jump
		mov    _094a20_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094a1e_data(%eax),%ebx
		mov    _0cd0d0_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _0193c8_func

	_060014_jump:
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094a28_data(%eax)
		je     _06004d_jump
		mov    _094a20_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094a1e_data(%eax),%ebx
		mov    _0cd0d0_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _0193c8_func

	_06004d_jump:
		xor    %eax,%eax
		mov    0x000006(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094a28_data(%eax)
		je     _060086_jump
		mov    _094a20_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094a1e_data(%eax),%ebx
		mov    _0cd0d0_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _0193c8_func

	_060086_jump:
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094a28_data(%eax)
		je     _05ff4e_jump
		mov    _094a20_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094a1e_data(%eax),%ebx
		mov    _0cd0d0_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _0193c8_func
		jmp    _05ff4e_jump

	_0600c8_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0600d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %ah,%ah
		mov    %ah,(%esp)
		xor    %eax,%eax
		mov    _0cd0d0_data,%al
		cmp    $0x000080,%eax
		jge    _060108_jump
		cmpb   $0x000000,_0c249a_data
		jne    _060102_jump
		cmpb   $0x000000,_0c25f2_data
		je     _060108_jump

	_060102_jump:
		incb   _0cd0d0_data

	_060108_jump:
		mov    $_0c25f4_data,%ebx
		mov    $_094a20_data,%ecx
		xor    %esi,%esi
		jmp    _060473_jump

	_060119_jump:
		movswl %si,%eax
		cmp    $0x000012,%eax
		je     _06013a_jump
		cmp    $0x000013,%eax
		je     _06013a_jump
		cmp    $0x000014,%eax
		je     _06013a_jump
		cmp    $0x000015,%eax
		je     _06013a_jump
		cmp    $0x000016,%eax
		je     _06013a_jump
		cmp    $0x000017,%eax
		jne    _060159_jump

	_06013a_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x00003a,%eax
		je     _060159_jump
		cmp    $0x00002e,%eax
		je     _060159_jump
		testb  $0x000001,0x000008(%ecx)
		je     _060159_jump
		mov    $0x00003a,%edx
		jmp    _06045b_jump

	_060159_jump:
		mov    0x000009(%ecx),%al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000005,%edx
		jle    _0601f8_jump
		xor    %edx,%edx
		mov    0x00006c(%ebx),%dl
		cmp    $0x000033,%edx
		jne    _0601f8_jump
		movzbl 0x00006d(%ebx),%edi
		mov    0x00000c(%ebx),%ebp
		shl    $0x000002,%edi
		add    %ebp,%edi
		mov    (%edi),%edi
		mov    0x000007(%edi,%edx,8),%ah
		test   $0x000010,%ah
		je     _060197_jump
		xor    %edx,%edx
		mov    0x00006b(%ebx),%dl
		test   %edx,%edx
		jmp    _0601b4_jump

	_060197_jump:
		xor    %edx,%edx
		mov    0x00006a(%ebx),%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000004(%ebx),%edi
		mov    0x00000a(%edx,%edi,1),%dx
		and    $0x00ffff,%edx
		movzbl 0x00006b(%ebx),%edi
		dec    %edx
		cmp    %edx,%edi

	_0601b4_jump:
		sete   %ah
		xor    %edx,%edx
		mov    %ah,%dl
		test   %edx,%edx
		je     _0601f8_jump
		xor    %edx,%edx
		mov    0x00006d(%ebx),%dl
		mov    0x00000c(%ebx),%edi
		shl    $0x000002,%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    (%edi),%edi
		mov    0x00006c(%ebx),%dl
		mov    0x000005(%edi,%edx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c2498_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _0601f8_jump
		mov    $0x000034,%edx
		jmp    _06045b_jump

	_0601f8_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000004,%edx
		jle    _060294_jump
		xor    %edx,%edx
		mov    0x00006c(%ebx),%dl
		cmp    $0x000032,%edx
		jne    _060294_jump
		movzbl 0x00006d(%ebx),%edi
		mov    0x00000c(%ebx),%ebp
		shl    $0x000002,%edi
		add    %ebp,%edi
		mov    (%edi),%edi
		mov    0x000007(%edi,%edx,8),%ah
		test   $0x000010,%ah
		je     _060233_jump
		xor    %edx,%edx
		mov    0x00006b(%ebx),%dl
		test   %edx,%edx
		jmp    _060250_jump

	_060233_jump:
		xor    %edx,%edx
		mov    0x00006a(%ebx),%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000004(%ebx),%edi
		mov    0x00000a(%edx,%edi,1),%dx
		and    $0x00ffff,%edx
		movzbl 0x00006b(%ebx),%edi
		dec    %edx
		cmp    %edx,%edi

	_060250_jump:
		sete   %ah
		xor    %edx,%edx
		mov    %ah,%dl
		test   %edx,%edx
		je     _060294_jump
		xor    %edx,%edx
		mov    0x00006d(%ebx),%dl
		mov    0x00000c(%ebx),%edi
		shl    $0x000002,%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    (%edi),%edi
		mov    0x00006c(%ebx),%dl
		mov    0x000005(%edi,%edx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c2498_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _060294_jump
		mov    $0x000033,%edx
		jmp    _06045b_jump

	_060294_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000003,%edx
		jle    _060330_jump
		xor    %edx,%edx
		mov    0x00006c(%ebx),%dl
		cmp    $0x000031,%edx
		jne    _060330_jump
		movzbl 0x00006d(%ebx),%edi
		mov    0x00000c(%ebx),%ebp
		shl    $0x000002,%edi
		add    %ebp,%edi
		mov    (%edi),%edi
		mov    0x000007(%edi,%edx,8),%ah
		test   $0x000010,%ah
		je     _0602cf_jump
		xor    %edx,%edx
		mov    0x00006b(%ebx),%dl
		test   %edx,%edx
		jmp    _0602ec_jump

	_0602cf_jump:
		xor    %edx,%edx
		mov    0x00006a(%ebx),%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000004(%ebx),%edi
		mov    0x00000a(%edx,%edi,1),%dx
		and    $0x00ffff,%edx
		movzbl 0x00006b(%ebx),%edi
		dec    %edx
		cmp    %edx,%edi

	_0602ec_jump:
		sete   %ah
		xor    %edx,%edx
		mov    %ah,%dl
		test   %edx,%edx
		je     _060330_jump
		xor    %edx,%edx
		mov    0x00006d(%ebx),%dl
		mov    0x00000c(%ebx),%edi
		shl    $0x000002,%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    (%edi),%edi
		mov    0x00006c(%ebx),%dl
		mov    0x000005(%edi,%edx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c2498_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _060330_jump
		mov    $0x000032,%edx
		jmp    _06045b_jump

	_060330_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x000002,%edx
		jle    _0603cc_jump
		xor    %edx,%edx
		mov    0x00006c(%ebx),%dl
		cmp    $0x000030,%edx
		jne    _0603cc_jump
		movzbl 0x00006d(%ebx),%edi
		mov    0x00000c(%ebx),%ebp
		shl    $0x000002,%edi
		add    %ebp,%edi
		mov    (%edi),%edi
		mov    0x000007(%edi,%edx,8),%ah
		test   $0x000010,%ah
		je     _06036b_jump
		xor    %edx,%edx
		mov    0x00006b(%ebx),%dl
		test   %edx,%edx
		jmp    _060388_jump

	_06036b_jump:
		xor    %edx,%edx
		mov    0x00006a(%ebx),%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000004(%ebx),%edi
		mov    0x00000a(%edx,%edi,1),%dx
		and    $0x00ffff,%edx
		movzbl 0x00006b(%ebx),%edi
		dec    %edx
		cmp    %edx,%edi

	_060388_jump:
		sete   %ah
		xor    %edx,%edx
		mov    %ah,%dl
		test   %edx,%edx
		je     _0603cc_jump
		xor    %edx,%edx
		mov    0x00006d(%ebx),%dl
		mov    0x00000c(%ebx),%edi
		shl    $0x000002,%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    (%edi),%edi
		mov    0x00006c(%ebx),%dl
		mov    0x000005(%edi,%edx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		mov    _0c2498_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _0603cc_jump
		mov    $0x000031,%edx
		jmp    _06045b_jump

	_0603cc_jump:
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jle    _060462_jump
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x00002f,%eax
		jne    _060462_jump
		xor    %edx,%edx
		mov    0x00000c(%ebx),%edi
		mov    0x00006d(%ebx),%dl
		mov    (%edi,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _060403_jump
		xor    %eax,%eax
		mov    0x00006b(%ebx),%al
		test   %eax,%eax
		jmp    _060420_jump

	_060403_jump:
		xor    %eax,%eax
		mov    0x00006a(%ebx),%al
		imul   $0x00000c,%eax,%eax
		mov    0x000004(%ebx),%edx
		mov    0x00000a(%edx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebx),%dl
		cmp    %eax,%edx

	_060420_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _060462_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _060462_jump
		mov    $0x000030,%edx

	_06045b_jump:
		mov    %ebx,%eax
		call   _01d498_func

	_060462_jump:
		mov    %ebx,%eax
		call   _04dbe4_func

	_060469_jump:
		add    $0x000084,%ebx
		add    $0x000014,%ecx
		inc    %esi

	_060473_jump:
		movswl %si,%eax
		cmp    $0x000018,%eax
		jge    _06053d_jump
		mov    0x000008(%ecx),%al
		test   $0x000004,%al
		jne    _06048a_jump
		test   $0x000002,%al
		je     _060469_jump

	_06048a_jump:
		mov    %ebx,%eax
		call   _0430ec_func
		xor    %eax,%eax
		mov    _0cd0d0_data,%al
		cmp    $0x000080,%eax
		jne    _060506_jump
		testb  $0x000004,0x000008(%ecx)
		je     _060506_jump
		xor    %eax,%eax
		mov    0x000006(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094a28_data(%eax)
		jne    _0604e9_jump
		xor    %eax,%eax
		mov    0x000007(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094a28_data(%eax)
		jne    _0604e9_jump
		xor    %eax,%eax
		mov    0x000004(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094a28_data(%eax)
		jne    _0604e9_jump
		xor    %eax,%eax
		mov    0x000005(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094a28_data(%eax)
		je     _060506_jump

	_0604e9_jump:
		mov    0x000008(%ecx),%dh
		or     $0x000001,%dh
		mov    %dh,%al
		and    $0x0000f9,%al
		mov    $0x00002e,%edx
		mov    %al,0x000008(%ecx)
		mov    %ebx,%eax
		call   _01d498_func
		movb   $0x000001,(%esp)

	_060506_jump:
		movswl %si,%eax
		cmp    $0x000011,%eax
		jne    _060119_jump
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x00003b,%eax
		je     _060119_jump
		cmp    $0x00002e,%eax
		je     _060119_jump
		testb  $0x000001,0x000008(%ecx)
		je     _060119_jump
		mov    $0x00003b,%edx
		jmp    _06045b_jump

	_06053d_jump:
		cmpb   $0x000000,(%esp)
		je     _06058c_jump
		mov    $_094a20_data,%eax
		xor    %cl,%cl
		xor    %edx,%edx
		mov    %cl,_0cd0d0_data
		mov    $0x000001,%ecx
		jmp    _06055d_jump

	_060559_jump:
		add    $0x000014,%eax
		inc    %edx

	_06055d_jump:
		movswl %dx,%ebx
		cmp    $0x000018,%ebx
		jge    _06058c_jump
		mov    0x000008(%eax),%bl
		shl    $0x000006,%bl
		shr    $0x000007,%bl
		and    $0x0000ff,%ebx
		jne    _060559_jump
		mov    0x000008(%eax),%bl
		and    %cl,%bl
		and    $0x0000ff,%ebx
		cmp    $0x000001,%ebx
		jne    _060559_jump
		orb    $0x000002,0x000008(%eax)
		jmp    _060559_jump

	_06058c_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060598_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c25ec_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		mov    $0x000030,%ecx
		add    %edx,%eax
		mov    $_0c32f6_data,%edi
		mov    $0x0000c1,%ebx
		mov    _094a30_data(,%eax,4),%esi
		mov    $0x0001c2,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000002,%ah
		mov    %dx,_0c33c6_data
		mov    %bx,_0c33c8_data
		xor    %dl,%dl
		mov    %ah,_0c33ca_data
		mov    %dl,_0c33cc_data
		mov    %edi,%eax
		mov    %dl,_0c33cb_data
		call   _01eeb0_func
		mov    _0c25ec_data,%edx
		mov    _0c33c0_data,%cx
		mov    _0c33c2_data,%si
		mov    _0c33c4_data,%di
		sar    $0x000010,%edx
		sub    $0x000006,%ecx
		add    $0x00000a,%esi
		lea    0x000000(,%edx,4),%eax
		add    $0x000006,%edi
		add    %edx,%eax
		mov    %cx,_0c33c0_data
		mov    %si,_0c33c2_data
		mov    _094a2c_data(,%eax,4),%al
		mov    %di,_0c33c4_data
		mov    %al,_0c33cd_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06065c_switch:
		.long   _0606cd_case
		.long   _0606f7_case
		.long   _060787_case
		.long   _060817_case

_06066c_switch:
		.long   _0608ca_case
		.long   _0608f6_case
		.long   _060922_case
		.long   _06094e_case
		.long   _060977_case
		.long   _0609a0_case
		.long   _0608a7_case




_060688_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x00004b,%eax
		call   _07755c_func
		mov    _0c25ec_data,%esi
		mov    %eax,%edx
		sar    $0x000010,%esi
		mov    %eax,%ebp
		lea    0x000000(,%esi,4),%eax
		add    %esi,%eax
		shl    $0x000002,%eax
		mov    _094a2a_data(%eax),%bh
		dec    %bh
		cmp    $0x000006,%bh
		ja     _0609c7_jump
		movzbl %bh,%esi
		jmp    *%cs:_06066c_switch(,%esi,4)

	_0606cd_case:
		mov    $_0c34a6_data,%edi
		mov    _0cd9d4_data,%esi
		push   %edi

	_0606d9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0606f1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0606d9_jump

	_0606f1_jump:
		pop    %edi
		jmp    _0609c7_jump

	_0606f7_case:
		mov    $_0c0700_data,%esi
		mov    %edx,%edi
		push   %edi

	_0606ff_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060717_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0606ff_jump

	_060717_jump:
		pop    %edi
		mov    $_0cd060_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_060726_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06073e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060726_jump

	_06073e_jump:
		pop    %edi
		mov    $_0c0702_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_06074d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060765_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06074d_jump

	_060765_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0c34a6_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _0609c7_jump

	_060787_case:
		mov    $_0c0704_data,%esi
		mov    %edx,%edi
		push   %edi

	_06078f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0607a7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06078f_jump

	_0607a7_jump:
		pop    %edi
		mov    $_0cd064_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0607b6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0607ce_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0607b6_jump

	_0607ce_jump:
		pop    %edi
		mov    $_0c0706_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0607dd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0607f5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0607dd_jump

	_0607f5_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0c34a6_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _0609c7_jump

	_060817_case:
		mov    $_0c0708_data,%esi
		mov    %edx,%edi
		push   %edi

	_06081f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060837_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06081f_jump

	_060837_jump:
		pop    %edi
		mov    $_0cd068_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_060846_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06085e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060846_jump

	_06085e_jump:
		pop    %edi
		mov    $_0c070a_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_06086d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060885_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06086d_jump

	_060885_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0c34a6_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _0609c7_jump

	_0608a7_case:
		mov    _094a2c_data(%eax),%bl
		mov    _0cd08e_data,%ax
		cmp    $0x000003,%ax
		ja     _0609c7_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_06065c_switch(,%eax,4)

	_0608ca_case:
		mov    $_0c34a6_data,%edi
		mov    _0cd7b0_data,%esi
		mov    $0x000005,%bl
		push   %edi

	_0608d8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0608f0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0608d8_jump

	_0608f0_jump:
		pop    %edi
		jmp    _0609c7_jump

	_0608f6_case:
		mov    $_0c34a6_data,%edi
		mov    _0cd7b4_data,%esi
		mov    $0x000003,%bl
		push   %edi

	_060904_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06091c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060904_jump

	_06091c_jump:
		pop    %edi
		jmp    _0609c7_jump

	_060922_case:
		mov    $_0c34a6_data,%edi
		mov    _0cd7b8_data,%esi
		push   %edi

	_06092e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060946_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06092e_jump

	_060946_jump:
		pop    %edi
		xor    %bl,%bl
		jmp    _0609c7_jump

	_06094e_case:
		mov    $_0c34a6_data,%edi
		mov    _0cd7bc_data,%esi
		mov    $0x000002,%bl
		push   %edi

	_06095c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060974_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06095c_jump

	_060974_jump:
		pop    %edi
		jmp    _0609c7_jump

	_060977_case:
		mov    $_0c34a6_data,%edi
		mov    _0cd7c0_data,%esi
		mov    $0x000001,%bl
		push   %edi

	_060985_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06099d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060985_jump

	_06099d_jump:
		pop    %edi
		jmp    _0609c7_jump

	_0609a0_case:
		mov    $_0c34a6_data,%edi
		mov    _0cd7c4_data,%esi
		mov    $0x000001,%bl
		push   %edi

	_0609ae_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0609c6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0609ae_jump

	_0609c6_jump:
		pop    %edi

	_0609c7_jump:
		mov    $0x000001,%ah
		mov    $0x0001c2,%edx
		mov    $0x00001e,%ecx
		mov    %bl,_0c357d_data
		mov    %ah,_0c357a_data
		mov    %dx,_0c3576_data
		mov    %cx,_0c3578_data
		xor    %dl,%dl
		mov    $_0c34a6_data,%eax
		mov    %dl,_0c357c_data
		mov    %dl,_0c357b_data
		call   _01eeb0_func
		mov    _0c3572_data,%si
		mov    _0c3574_data,%di
		mov    %ebp,%eax
		add    $0x00000a,%esi
		add    $0x000002,%edi
		mov    %si,_0c3572_data
		mov    %di,_0c3574_data
		call   _077708_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060a38_func:
		push   %ebx
		push   %edx
		push   %esi
		call   _01ed50_func
		call   _060598_func
		call   _060688_func
		mov    $0x0000a0,%edx
		mov    $0x0000fa,%ebx
		mov    $0xffffffce,%esi
		xor    %ah,%ah
		mov    %dx,_0c349e_data
		mov    %bx,_0c34a0_data
		mov    %ah,_0c34a3_data
		mov    %ah,_0c34a4_data
		mov    %dx,_0c364e_data
		mov    %si,_0c3650_data
		mov    %ah,_0c3653_data
		mov    %ah,_0c3654_data
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_060b20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		cmpb   $0x000000,_0cdf6d_data
		jne    _060c01_jump
		mov    _0c33c4_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000a0,%eax
		jle    _060b67_jump
		mov    _0c33c6_data,%dx
		mov    _0c33be_data,%bx
		sub    $0x000006,%edx
		sub    $0x000006,%ebx
		mov    %dx,_0c33c6_data
		mov    %bx,_0c33be_data

	_060b67_jump:
		mov    _0c3574_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000a0,%eax
		jle    _060b98_jump
		mov    _0c3576_data,%cx
		mov    _0c356e_data,%si
		sub    $0x000006,%ecx
		sub    $0x000006,%esi
		mov    %cx,_0c3576_data
		mov    %si,_0c356e_data

	_060b98_jump:
		mov    _0c349e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000125,%eax
		jge    _060bc9_jump
		mov    _0c34a0_data,%di
		mov    _0c3498_data,%ax
		add    $0x000002,%edi
		add    $0x000002,%eax
		mov    %di,_0c34a0_data
		mov    %ax,_0c3498_data

	_060bc9_jump:
		mov    _0c364e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffba,%eax
		jle    _060fe7_jump
		mov    _0c3650_data,%dx
		mov    _0c3648_data,%bx
		sub    $0x000002,%edx
		sub    $0x000002,%ebx
		mov    %dx,_0c3650_data
		mov    %bx,_0c3648_data
		jmp    _060fe7_jump

	_060c01_jump:
		cmpb   $0x000000,_0ce4ac_data
		jne    _060fe7_jump
		mov    $_0c32f6_data,%edx
		mov    $_0ce4d0_data,%edi
		mov    $0x000001,%ebx
		mov    %edx,%esi
		mov    %edx,0x00001c(%esp)
		push   %edi

	_060c24_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060c3c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060c24_jump

	_060c3c_jump:
		pop    %edi
		xor    %eax,%eax
		mov    %ebx,0x000008(%esp)
		mov    _0c33cd_data,%al
		mov    $0x000008,%esi
		mov    %eax,_0ce4a0_data
		xor    %eax,%eax
		mov    %edx,%edi
		mov    _0c33ca_data,%al
		mov    %esi,0x00000c(%esp)
		mov    %eax,_0ce4a8_data
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    _0c33c4_data,%eax
		mov    %ecx,_0cdf98_data
		sar    $0x000010,%eax
		xor    %edi,%edi
		mov    %eax,(%esp)
		test   %ecx,%ecx
		jle    _060db0_jump
		mov    %edx,0x000014(%esp)
		xor    %esi,%esi

	_060c8f_jump:
		mov    0x000014(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		call   _01eda4_func
		mov    (%edx),%bl
		cmp    $0x00002f,%bl
		jne    _060cd4_jump
		mov    0x00001c(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    0x00000a(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    0x0000d4(%edx),%al
		sar    $0x000010,%ebx
		push   %eax
		mov    %edi,%edx
		mov    $_0c32f6_data,%eax
		call   _01ee54_func
		cwtl   
		mov    (%esp),%ebp
		sar    %eax
		sub    %eax,%ebp
		jmp    _060cdc_jump

	_060cd4_jump:
		cmp    $0x000020,%bl
		jne    _060cde_jump
		add    $0x000008,%ebp

	_060cdc_jump:
		xor    %al,%al

	_060cde_jump:
		test   %al,%al
		je     _060d95_jump
		and    $0x0000ff,%eax
		imul   $0x00000c,%eax,%eax
		mov    _0c245c_data,%edx
		add    %eax,%edx
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,_0ce12c_data(%esi)
		mov    0x00001c(%esp),%eax
		mov    0x0000d0(%eax),%eax
		sar    $0x000010,%eax
		mov    %esi,%ecx
		shl    $0x000004,%eax
		mov    %edx,0x000024(%esp)
		mov    %eax,_0ce1f4_data(%esi)
		xor    %edx,%edx
		mov    %edx,_0ce3ac_data(%esi)
		jne    _060d61_jump

	_060d27_jump:
		mov    _0cdf98_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %edi,%edx
		sub    %eax,%edx
		shl    $0x000005,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    $0x000020,%eax
		call   _064360_func
		sub    $0x000010,%edx
		movswl %ax,%ebx
		add    %edx,%ebx
		mov    %ebx,_0ce3ac_data(%ecx)
		je     _060d27_jump

	_060d61_jump:
		mov    $0x000020,%eax
		mov    $0xfffffff0,%edx
		call   _064360_func
		cwtl   
		sub    %eax,%edx
		mov    0x000024(%esp),%eax
		mov    %edx,_0ce424_data(%ecx)
		mov    0x000009(%eax),%al
		and    $0x00000f,%al
		mov    0x000024(%esp),%ebx
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x000007(%ebx),%dl
		add    %edx,%eax
		dec    %eax
		add    %eax,%ebp

	_060d95_jump:
		mov    0x000014(%esp),%eax
		mov    _0cdf98_data,%edx
		add    $0x000004,%esi
		inc    %eax
		inc    %edi
		mov    %eax,0x000014(%esp)
		cmp    %edx,%edi
		jl     _060c8f_jump

	_060db0_jump:
		mov    $_0c34a6_data,%ebx
		mov    $_0ce4b0_data,%edi
		mov    %ebx,%esi
		push   %edi

	_060dbd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060dd5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060dbd_jump

	_060dd5_jump:
		pop    %edi
		xor    %eax,%eax
		mov    %ebx,0x000004(%esp)
		mov    _0c357d_data,%al
		mov    $0x000003,%esi
		mov    %eax,_0ce49c_data
		xor    %eax,%eax
		mov    %ebx,%edi
		mov    _0c357a_data,%al
		mov    %esi,0x000008(%esp)
		mov    %eax,_0ce4a4_data
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $0x00000a,%edi
		mov    _0c3574_data,%eax
		mov    %ecx,_0cdf94_data
		sar    $0x000010,%eax
		mov    %edi,0x00000c(%esp)
		mov    %eax,0x000018(%esp)
		xor    %edi,%edi
		test   %ecx,%ecx
		jle    _060f59_jump
		mov    %ebx,0x000010(%esp)
		xor    %esi,%esi

	_060e32_jump:
		mov    0x000010(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		call   _01eda4_func
		mov    (%edx),%ch
		cmp    $0x00002f,%ch
		jne    _060e78_jump
		mov    0x000004(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    0x00000a(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    0x0000d4(%edx),%al
		sar    $0x000010,%ebx
		push   %eax
		mov    %edi,%edx
		mov    $_0c34a6_data,%eax
		call   _01ee54_func
		cwtl   
		mov    0x000018(%esp),%ebp
		sar    %eax
		sub    %eax,%ebp
		jmp    _060e80_jump

	_060e78_jump:
		cmp    $0x000020,%ch
		jne    _060e82_jump
		add    $0x00000a,%ebp

	_060e80_jump:
		xor    %al,%al

	_060e82_jump:
		test   %al,%al
		je     _060f3e_jump
		and    $0x0000ff,%eax
		add    $0x000029,%eax
		imul   $0x00000c,%eax,%eax
		mov    _0c2468_data,%edx
		add    %eax,%edx
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,_0cdf9c_data(%esi)
		mov    0x000004(%esp),%eax
		mov    0x0000d0(%eax),%eax
		sar    $0x000010,%eax
		mov    %esi,%ecx
		shl    $0x000004,%eax
		mov    %edx,0x000020(%esp)
		mov    %eax,_0ce064_data(%esi)
		xor    %eax,%eax
		mov    %eax,_0ce2bc_data(%esi)
		jne    _060f08_jump

	_060ece_jump:
		mov    _0cdf94_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %edi,%edx
		sub    %eax,%edx
		shl    $0x000005,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    $0x000020,%eax
		call   _064360_func
		sub    $0x000010,%edx
		movswl %ax,%ebx
		add    %ebx,%edx
		mov    %edx,_0ce2bc_data(%ecx)
		je     _060ece_jump

	_060f08_jump:
		mov    $0x000020,%eax
		mov    $0xfffffff0,%edx
		call   _064360_func
		cwtl   
		sub    %eax,%edx
		mov    0x000020(%esp),%eax
		mov    %edx,_0ce334_data(%ecx)
		mov    0x000009(%eax),%al
		and    $0x00000f,%al
		mov    0x000020(%esp),%ebx
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x000007(%ebx),%dl
		add    %edx,%eax
		sub    $0x000003,%eax
		add    %eax,%ebp

	_060f3e_jump:
		mov    0x000010(%esp),%edx
		mov    _0cdf94_data,%ebx
		add    $0x000004,%esi
		inc    %edx
		inc    %edi
		mov    %edx,0x000010(%esp)
		cmp    %ebx,%edi
		jl     _060e32_jump

	_060f59_jump:
		mov    $0x000001,%cl
		mov    $_0c34a6_data,%esi
		mov    $_0c357e_data,%edi
		mov    %cl,_0ce4ac_data
		push   %edi

	_060f6c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060f84_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060f6c_jump

	_060f84_jump:
		pop    %edi
		mov    $0x0001c2,%ecx
		mov    $0x00001e,%esi
		mov    _0c357d_data,%al
		mov    $_0c33ce_data,%edi
		mov    %al,_0c3655_data
		mov    %si,_0c3578_data
		mov    $_0c32f6_data,%esi
		mov    %cx,_0c3576_data
		push   %edi

	_060fb2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _060fca_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _060fb2_jump

	_060fca_jump:
		pop    %edi
		mov    _0c33cd_data,%al
		mov    %al,_0c34a5_data
		mov    $0x0000c1,%eax
		mov    %cx,_0c33c6_data
		mov    %ax,_0c33c8_data

	_060fe7_jump:
		xor    %eax,%eax
		mov    _0ce4ac_data,%al
		cmp    $0x000001,%eax
		jne    _0611f9_jump
		mov    $0x000001,%cl
		mov    _0cdf94_data,%edi
		xor    %ebx,%ebx
		test   %edi,%edi
		jle    _0610f2_jump
		xor    %edx,%edx

	_06100b_jump:
		mov    _0ce4b0_data(%ebx),%ah
		cmp    $0x00002f,%ah
		je     _061066_jump
		cmp    $0x000020,%ah
		je     _061066_jump
		mov    _0ce334_data(%edx),%eax
		mov    _0ce064_data(%edx),%ebp
		add    %eax,%ebp
		mov    %ebp,_0ce064_data(%edx)
		cmp    $0x000c80,%ebp
		jl     _061088_jump
		movl   $0x000c80,_0ce064_data(%edx)
		test   %eax,%eax
		jge    _061047_jump
		neg    %eax

	_061047_jump:
		cmp    $0x000008,%eax
		jge    _06107a_jump
		mov    $0x000020,%eax
		mov    $0xffffffc0,%esi
		call   _064360_func
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0ce334_data(%edx)
		jmp    _061088_jump

	_061066_jump:
		mov    _0cdf94_data,%esi
		inc    %ebx
		add    $0x000004,%edx
		cmp    %esi,%ebx
		jge    _0610f2_jump
		jmp    _06100b_jump

	_06107a_jump:
		mov    _0ce334_data(%edx),%eax
		neg    %eax
		mov    %eax,_0ce334_data(%edx)

	_061088_jump:
		mov    _0ce334_data(%edx),%edi
		mov    _0ce2bc_data(%edx),%eax
		mov    _0cdf9c_data(%edx),%ebp
		inc    %edi
		add    %eax,%ebp
		xor    %eax,%eax
		mov    %edi,_0ce334_data(%edx)
		mov    _0ce4ac_data,%al
		mov    %ebp,_0cdf9c_data(%edx)
		cmp    $0x000001,%eax
		jne    _0610d1_jump
		test   %ebp,%ebp
		jle    _0610c1_jump
		cmp    $0x001310,%ebp
		jl     _0610d1_jump

	_0610c1_jump:
		mov    _0ce2bc_data(%edx),%eax
		neg    %eax
		mov    %eax,_0ce2bc_data(%edx)
		jmp    _061066_jump

	_0610d1_jump:
		mov    _0cdf9c_data(%edx),%edi
		cmp    $0xfffffec0,%edi
		jle    _061066_jump
		cmp    $0x001400,%edi
		jge    _061066_jump
		xor    %cl,%cl
		jmp    _061066_jump

	_0610f2_jump:
		mov    _0cdf98_data,%edi
		xor    %ebx,%ebx
		test   %edi,%edi
		jle    _0611e0_jump
		mov    $0x000c80,%ebp
		xor    %edx,%edx

	_061109_jump:
		mov    _0ce4d0_data(%ebx),%ah
		cmp    $0x00002f,%ah
		je     _061160_jump
		cmp    $0x000020,%ah
		je     _061160_jump
		mov    _0ce424_data(%edx),%eax
		mov    _0ce1f4_data(%edx),%esi
		add    %eax,%esi
		mov    %esi,_0ce1f4_data(%edx)
		cmp    $0x000c80,%esi
		jl     _061181_jump
		mov    %ebp,_0ce1f4_data(%edx)
		test   %eax,%eax
		jge    _061141_jump
		neg    %eax

	_061141_jump:
		cmp    $0x000008,%eax
		jge    _061173_jump
		mov    $0x000020,%eax
		mov    $0xffffffc0,%esi
		call   _064360_func
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0ce424_data(%edx)
		jmp    _061181_jump

	_061160_jump:
		mov    _0cdf98_data,%eax
		inc    %ebx
		add    $0x000004,%edx
		cmp    %eax,%ebx
		jge    _0611e0_jump
		jmp    _061109_jump

	_061173_jump:
		mov    _0ce424_data(%edx),%eax
		neg    %eax
		mov    %eax,_0ce424_data(%edx)

	_061181_jump:
		mov    _0ce424_data(%edx),%eax
		inc    %eax
		mov    _0ce12c_data(%edx),%esi
		mov    %eax,_0ce424_data(%edx)
		add    _0ce3ac_data(%edx),%esi
		xor    %eax,%eax
		mov    _0ce4ac_data,%al
		mov    %esi,_0ce12c_data(%edx)
		cmp    $0x000001,%eax
		jne    _0611c8_jump
		test   %esi,%esi
		jle    _0611b8_jump
		cmp    $0x001360,%esi
		jl     _0611c8_jump

	_0611b8_jump:
		mov    _0ce3ac_data(%edx),%eax
		neg    %eax
		mov    %eax,_0ce3ac_data(%edx)
		jmp    _061160_jump

	_0611c8_jump:
		mov    _0ce12c_data(%edx),%eax
		cmp    $0xfffffec0,%eax
		jle    _061160_jump
		cmp    $0x001400,%eax
		jge    _061160_jump
		xor    %cl,%cl
		jmp    _061160_jump

	_0611e0_jump:
		test   %cl,%cl
		je     _06149e_jump
		xor    %al,%al
		mov    %al,_0ce4ac_data
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0611f9_jump:
		cmp    $0x000002,%eax
		jne    _061398_jump
		mov    _0cdf94_data,%esi
		xor    %ecx,%ecx
		test   %esi,%esi
		jle    _0612c4_jump
		xor    %ebx,%ebx

	_061214_jump:
		mov    _0ce4b0_data(%ecx),%al
		cmp    $0x00002f,%al
		je     _061257_jump
		cmp    $0x000020,%al
		je     _061257_jump
		mov    _0ce064_data(%ebx),%eax
		sub    $0x000640,%eax
		test   %eax,%eax
		jge    _061233_jump
		neg    %eax

	_061233_jump:
		mov    %eax,%edx
		mov    _0cdf9c_data(%ebx),%eax
		sub    $0x000a00,%eax
		test   %eax,%eax
		jge    _061246_jump
		neg    %eax

	_061246_jump:
		cmp    %eax,%edx
		jle    _061267_jump
		mov    _0ce064_data(%ebx),%eax
		sub    $0x000640,%eax
		jmp    _061272_jump

	_061257_jump:
		mov    _0cdf94_data,%ebp
		inc    %ecx
		add    $0x000004,%ebx
		cmp    %ebp,%ecx
		jge    _0612c4_jump
		jmp    _061214_jump

	_061267_jump:
		mov    _0cdf9c_data(%ebx),%eax
		sub    $0x000a00,%eax

	_061272_jump:
		test   %eax,%eax
		jge    _061278_jump
		neg    %eax

	_061278_jump:
		mov    %eax,%esi
		mov    $0x000040,%eax
		call   _064360_func
		movswl %ax,%edi
		mov    _0cdf9c_data(%ebx),%edx
		add    $0x000020,%edi
		sub    $0x000a00,%edx
		imul   %edi,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0ce064_data(%ebx),%edx
		sub    $0x000640,%edx
		imul   %edi,%edx
		mov    %eax,_0ce2bc_data(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,_0ce334_data(%ebx)
		jmp    _061257_jump

	_0612c4_jump:
		mov    _0cdf98_data,%eax
		xor    %ecx,%ecx
		test   %eax,%eax
		jle    _061387_jump
		xor    %ebx,%ebx

	_0612d5_jump:
		mov    _0ce4d0_data(%ecx),%dh
		cmp    $0x00002f,%dh
		je     _06131a_jump
		cmp    $0x000020,%dh
		je     _06131a_jump
		mov    _0ce1f4_data(%ebx),%eax
		sub    $0x000640,%eax
		test   %eax,%eax
		jge    _0612f6_jump
		neg    %eax

	_0612f6_jump:
		mov    %eax,%edx
		mov    _0ce12c_data(%ebx),%eax
		sub    $0x000a00,%eax
		test   %eax,%eax
		jge    _061309_jump
		neg    %eax

	_061309_jump:
		cmp    %eax,%edx
		jle    _06132a_jump
		mov    _0ce1f4_data(%ebx),%eax
		sub    $0x000640,%eax
		jmp    _061335_jump

	_06131a_jump:
		mov    _0cdf98_data,%edx
		inc    %ecx
		add    $0x000004,%ebx
		cmp    %edx,%ecx
		jge    _061387_jump
		jmp    _0612d5_jump

	_06132a_jump:
		mov    _0ce12c_data(%ebx),%eax
		sub    $0x000a00,%eax

	_061335_jump:
		test   %eax,%eax
		jge    _06133b_jump
		neg    %eax

	_06133b_jump:
		mov    %eax,%esi
		mov    $0x000040,%eax
		call   _064360_func
		movswl %ax,%edi
		mov    _0ce12c_data(%ebx),%edx
		add    $0x000020,%edi
		sub    $0x000a00,%edx
		imul   %edi,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0ce1f4_data(%ebx),%edx
		sub    $0x000640,%edx
		imul   %edi,%edx
		mov    %eax,_0ce3ac_data(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,_0ce424_data(%ebx)
		jmp    _06131a_jump

	_061387_jump:
		movb   $0x000003,_0ce4ac_data
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061398_jump:
		cmp    $0x000003,%eax
		jne    _06149e_jump
		mov    $0x000001,%al
		mov    _0cdf94_data,%ecx
		xor    %ebx,%ebx
		test   %ecx,%ecx
		jle    _06141b_jump
		mov    _0cdf94_data,%ebp
		xor    %edx,%edx

	_0613bb_jump:
		mov    _0ce4b0_data(%ebx),%cl
		cmp    $0x00002f,%cl
		je     _061413_jump
		cmp    $0x000020,%cl
		je     _061413_jump
		mov    _0ce334_data(%edx),%ecx
		mov    _0ce064_data(%edx),%esi
		mov    _0cdf9c_data(%edx),%edi
		add    %ecx,%esi
		add    _0ce2bc_data(%edx),%edi
		mov    %esi,_0ce064_data(%edx)
		mov    %edi,_0cdf9c_data(%edx)
		cmp    $0xfffffec0,%edi
		jle    _061413_jump
		cmp    $0x001400,%edi
		jge    _061413_jump
		cmp    $0xfffffec0,%esi
		jle    _061413_jump
		cmp    $0x000c80,%esi
		jge    _061413_jump
		xor    %al,%al

	_061413_jump:
		inc    %ebx
		add    $0x000004,%edx
		cmp    %ebp,%ebx
		jl     _0613bb_jump

	_06141b_jump:
		mov    _0cdf98_data,%edx
		xor    %ebx,%ebx
		test   %edx,%edx
		jle    _061493_jump
		mov    _0cdf98_data,%ebp
		xor    %edx,%edx

	_061433_jump:
		mov    _0ce4d0_data(%ebx),%ah
		cmp    $0x00002f,%ah
		je     _06148b_jump
		cmp    $0x000020,%ah
		je     _06148b_jump
		mov    _0ce424_data(%edx),%ecx
		mov    _0ce1f4_data(%edx),%esi
		mov    _0ce12c_data(%edx),%edi
		add    %ecx,%esi
		add    _0ce3ac_data(%edx),%edi
		mov    %esi,_0ce1f4_data(%edx)
		mov    %edi,_0ce12c_data(%edx)
		cmp    $0xfffffec0,%edi
		jle    _06148b_jump
		cmp    $0x001400,%edi
		jge    _06148b_jump
		cmp    $0xfffffec0,%esi
		jle    _06148b_jump
		cmp    $0x000c80,%esi
		jge    _06148b_jump
		xor    %al,%al

	_06148b_jump:
		inc    %ebx
		add    $0x000004,%edx
		cmp    %ebp,%ebx
		jl     _061433_jump

	_061493_jump:
		test   %al,%al
		je     _06149e_jump
		xor    %al,%al
		mov    %al,_0ce4ac_data

	_06149e_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0614a8_func:
		push   %ecx
		push   %edx
		xor    %edx,%edx
		jmp    _0614bf_jump

	_0614ae_jump:
		imul   $0x000014,%eax,%ecx
		mov    _0cd750_data(,%eax,4),%eax
		inc    %edx
		mov    %eax,_094a30_data(%ecx)

	_0614bf_jump:
		movswl %dx,%eax
		cmp    $0x000018,%eax
		jl     _0614ae_jump
		mov    $0x000001,%ecx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0c24f2_data
		mov    %dx,_0c24f0_data
		mov    %cx,_0c24ee_data
		mov    %cx,_0c24ec_data
		mov    %ah,_0c25ec_data
		mov    %dx,_0c32dc_data
		xor    %al,%al
		mov    $0x000001,%dl
		mov    %ax,_0c32de_data
		mov    %dl,_0c32e0_data
		mov    %ah,_0cd0de_data
		mov    %ah,_0c2565_data
		xor    %dh,%dh
		call   _0619e4_func
		mov    %dh,_0cd745_data
		pop    %edx
		pop    %ecx
		ret    



_061528_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000084,%ecx
		mov    $_0c1b1c_data,%esi
		mov    $_0c1c24_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0c1ca8_data,%eax
		mov    $0x000100,%edx
		mov    %eax,_0c1b1c_data
		mov    _0c1cb0_data,%eax
		mov    %dx,_0c1b76_data
		mov    %eax,_0c1b24_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_061570_func:
		push   %edx
		mov    _0c1c24_data,%eax
		mov    %eax,_0c1b1c_data
		mov    _0c1c2c_data,%eax
		xor    %edx,%edx
		mov    %eax,_0c1b24_data
		mov    _0c1c68_data,%ax
		mov    %dx,_0c1b76_data
		mov    %ax,_0c1b60_data
		pop    %edx
		ret    



_06159c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		mov    $0x000001,%dl
		xor    %ah,%ah
		mov    _0cdae8_data,%bl
		mov    %ah,_0cd0d5_data
		mov    %dl,_0c5185_data
		mov    %ah,_0c25e2_data
		test   %bl,%bl
		jne    _0615d5_jump
		xor    %edx,%edx
		mov    _0c25ec_data,%al
		mov    %dx,_0c24ee_data
		mov    %ax,_0c25ee_data

	_0615d5_jump:
		mov    _0c25ee_data,%al
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %al,_0c25eb_data
		call   _061528_func
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		mov    _0c25ec_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _094a1e_data(,%eax,4),%ebx
		mov    _0c1b84_data,%dl
		sar    $0x000010,%ebx
		xor    %ecx,%ecx
		sub    %edx,%ebx
		xor    %esi,%esi
		add    $0x000004,%ebx
		mov    _094a20_data(,%eax,4),%edx
		mov    %ebx,_0c1b44_data
		sar    $0x000010,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0c1b85_data,%al
		mov    %bx,_0c1b5c_data
		sub    %eax,%edx
		mov    %bx,_0c1b5e_data
		add    $0x000008,%edx
		xor    %eax,%eax
		xor    %bh,%bh
		mov    %edx,_0c1b48_data
		call   _01d2dc_func
		xor    %bl,%cl
		mov    %bh,_0cd0d0_data
		mov    %bh,_0c32e1_data
		mov    $_0c25f4_data,%ebx
		jmp    _06170d_jump

	_061672_jump:
		xor    %edx,%edx
		mov    _094a29_data(%eax),%dl
		test   %edx,%edx
		je     _061695_jump
		add    %dl,_0c32e1_data
		cmp    $0x000006,%edx
		jne    _06168f_jump
		movb   $0x000034,0x00006e(%ebx)
		jmp    _0616a8_jump

	_06168f_jump:
		movb   $0x00002f,0x00006e(%ebx)
		jmp    _0616a8_jump

	_061695_jump:
		cmp    $0x000011,%ebp
		jne    _0616a4_jump
		movb   $0x00003b,0x00006c(%ebx)
		movb   $0x00003b,0x00006e(%ebx)
		jmp    _0616a8_jump

	_0616a4_jump:
		movb   $0x000027,0x00006e(%ebx)

	_0616a8_jump:
		movw   $0x000000,0x00005a(%ebx)
		movb   $0x000050,0x000068(%ebx)
		mov    %ebx,%eax
		movb   $0x000040,0x000069(%ebx)
		call   _05622c_func
		mov    %ebx,%eax
		call   _0430ec_func
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		mov    0x000002(%edx,%eax,8),%al
		and    $0x0000ff,%eax
		imul   $0x00000c,%eax,%eax
		mov    0x000004(%ebx),%edx
		movzwl 0x00000a(%edx,%eax,1),%ebp
		movswl %si,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		inc    %cl
		xor    %eax,%eax
		mov    %cl,%al
		mov    %dl,0x00006b(%ebx)
		cmp    $0x000018,%eax
		jle    _061706_jump
		mov    $0x000018,%cl

	_061706_jump:
		add    $0x000084,%ebx
		inc    %esi

	_06170d_jump:
		movswl %si,%ebp
		cmp    $0x000018,%ebp
		jge    _061758_jump
		xor    %eax,%eax
		mov    %cl,%al
		imul   $0x000014,%eax,%eax
		movw   $0x000036,0x000060(%ebx)
		mov    _094a20_data(%eax),%dx
		sub    $0x00004e,%edx
		mov    %dx,0x00003c(%ebx)
		mov    _094a22_data(%eax),%dx
		sub    $0x000040,%edx
		movb   $0x000005,0x00006f(%ebx)
		mov    %dx,0x00003e(%ebx)
		testb  $0x000004,_094a28_data(%eax)
		je     _061672_jump
		movb   $0x00002e,0x00006e(%ebx)
		jmp    _0616a8_jump

	_061758_jump:
		mov    _094b7c_data,%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _061777_jump
		mov    _0c32e1_data,%al
		cmp    $0x000066,%eax
		jl     _061777_jump
		orb    $0x000004,_094b7c_data

	_061777_jump:
		mov    _0c247c_data,%ax
		mov    %ax,_0c32d8_data
		mov    _0c247e_data,%ax
		mov    %ax,_0c32da_data
		mov    _0c32dc_data,%ax
		mov    %ax,_0c247c_data
		mov    _0c32de_data,%ax
		mov    %ax,_0c247e_data
		call   _042208_func
		mov    $0x00001e,%eax
		mov    %ax,_0c248e_data
		mov    %ax,_0c2490_data
		mov    _0c32e0_data,%al
		and    $0x000001,%al
		mov    _0c1b9d_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0c1b9d_data
		shl    $0x000003,%al
		mov    %ah,%dl
		mov    $0xffffffff,%esi
		or     %al,%dl
		mov    %si,_0c1af8_data
		mov    %dl,_0c1b9d_data
		mov    _0cd0d1_data,%dh
		mov    %si,_0c1afa_data
		test   %dh,%dh
		je     _06181c_jump
		xor    %eax,%eax
		mov    _0cd0d2_data,%al
		test   %eax,%eax
		je     _061814_jump
		xor    %eax,%eax
		mov    _0cd08e_data,%al
		call   _06cdd8_func

	_061814_jump:
		xor    %bl,%bl
		mov    %bl,_0cd0d1_data

	_06181c_jump:
		call   _0619e4_func
		call   _060a38_func
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06194c_func:
		ret    



_061950_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _04c6f4_func
		call   _0425cc_func
		mov    _0c24c0_data,%edx
		mov    _0c24be_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0429bc_func
		call   _04313c_func
		testb  $0x000008,_0c1b9d_data
		je     _0619a7_jump
		xor    %eax,%eax
		mov    _0c1b54_data,%cx
		mov    _0c1b85_data,%al
		add    %ecx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0c1b52_data,%si
		mov    _0c1b84_data,%al
		add    %esi,%eax
		jmp    _0619ca_jump

	_0619a7_jump:
		xor    %eax,%eax
		mov    _0c1b54_data,%dx
		mov    _0c1b85_data,%al
		add    %edx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0c1b52_data,%bx
		mov    _0c1b84_data,%al
		add    %ebx,%eax

	_0619ca_jump:
		cwtl   
		call   _01d1ec_func
		mov    $_0c1b1c_data,%eax
		call   _04dbe4_func
		call   _0600d4_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0619e4_func:
		xor    %eax,%eax
		mov    _0cd0d2_data,%al
		test   %eax,%eax
		je     _0619f6_jump
		mov    _0cd9a8_data,%eax
		jmp    _0619fb_jump

	_0619f6_jump:
		mov    _0cd9b0_data,%eax

	_0619fb_jump:
		mov    %eax,_094b98_data
		mov    %eax,_094bac_data
		mov    %eax,_094bc0_data
		mov    %eax,_094bd4_data
		mov    %eax,_094be8_data
		mov    %eax,_094bfc_data
		ret    



_061a40_func:
		push   %edx
		mov    _0c247c_data,%ax
		mov    %ax,_0c32dc_data
		mov    _0c247e_data,%ax
		mov    %ax,_0c32de_data
		mov    _0c32d8_data,%ax
		mov    %ax,_0c247c_data
		mov    _0c32da_data,%ax
		mov    %ax,_0c247e_data
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    %al,_0c32e0_data
		call   _061570_func
		call   _0619e4_func
		xor    %ah,%ah
		mov    %ah,_0cd0d5_data
		xor    %eax,%eax
		mov    _0c1b92_data,%al
		cmp    $0x0000ff,%eax
		jne    _061aa9_jump
		xor    %dl,%dl
		mov    %dl,_0c1b92_data

	_061aa9_jump:
		pop    %edx
		ret    



_061aac_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c25ee_data,%al
		mov    %al,_0c25ec_data
		cmpb   $0x000000,_0cdae8_data
		jne    _061af8_jump
		mov    _0c25ec_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _094a2b_data(,%eax,4),%dl
		mov    %dx,_0c25f0_data
		mov    _094a2a_data(,%eax,4),%al
		xor    %ah,%ah
		mov    %ax,_0c25ee_data
		call   _025df0_func

	_061af8_jump:
		mov    _0c32e5_data,%dl
		mov    _0c25ec_data,%eax
		and    $0x0000fb,%dl
		sar    $0x000010,%eax
		mov    %dl,_0c32e5_data
		cmp    $0x000005,%eax
		jne    _061b48_jump
		mov    _0c25ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _061b48_jump
		testb  $0x000002,_0c32ed_data
		je     _061b48_jump
		mov    %dl,%dh
		mov    _0c25f0_data,%bx
		or     $0x000004,%dh
		inc    %ebx
		mov    %dh,_0c32e5_data
		mov    %bx,_0c25f0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061b48_jump:
		mov    _0c25ec_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _061b7f_jump
		mov    _0c25ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _061b7f_jump
		testb  $0x000002,_0c32ed_data
		je     _061b7f_jump
		cmpb   $0x000000,_0cdae8_data
		je     _061b7f_jump
		orb    $0x000004,_0c32e5_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061b7f_jump:
		mov    _0c25ec_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _061bb5_jump
		testb  $0x000080,_0c32ec_data
		je     _061bb5_jump
		mov    $0x000001,%ch
		mov    $0x000001,%edx
		mov    %ch,_0cd0de_data
		mov    %ch,_0c2565_data
		mov    %dx,_0c24ee_data
		mov    %ch,_0cd0e9_data

	_061bb5_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061dd4_func:
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    $0x000001,%esi
		mov    %dx,_0cd0a8_data
		mov    %dx,_0cd0aa_data
		mov    %dx,_0cd08e_data
		mov    %dx,_0cd090_data
		mov    %dx,_0cd082_data
		mov    %dx,_0cd0bc_data
		mov    %dx,_0cd0c6_data
		mov    %dx,_0cd0b4_data
		mov    %dx,_0cd0b6_data
		mov    %si,_0cd084_data
		pop    %esi
		pop    %edx
		ret    



_061e28_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _040b24_func
		test   %ax,%ax
		je     _061ecf_jump
		call   _040c0c_func
		test   %ax,%ax
		jne    _061ecf_jump
		call   _040b98_func
		test   %ax,%ax
		jne    _061ecf_jump
		cmpw   $0x000000,_0cd090_data
		jne    _061ecf_jump
		cmpb   $0x000000,_0c24d3_data
		jne    _061e99_jump
		mov    _0cd094_data,%ax
		cmp    _0cd0ac_data,%ax
		jle    _061ecf_jump
		mov    _0cd092_data,%edx
		mov    _0cd0b0_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _061ecf_jump

	_061e99_jump:
		mov    _0cd088_data,%ax
		cmp    _0cd080_data,%ax
		jne    _061eb3_jump
		movw   $0x000001,_0cd088_data
		jmp    _061ebd_jump

	_061eb3_jump:
		mov    %eax,%esi
		inc    %esi
		mov    %si,_0cd088_data

	_061ebd_jump:
		xor    %edx,%edx
		mov    $0x000044,%eax
		mov    %edx,_0cdaf4_data
		call   _06b320_func

	_061ecf_jump:
		call   _040ab0_func
		test   %ax,%ax
		je     _061f6d_jump
		call   _040c0c_func
		test   %ax,%ax
		jne    _061f6d_jump
		call   _040b98_func
		test   %ax,%ax
		jne    _061f6d_jump
		cmpw   $0x000000,_0cd090_data
		jne    _061f6d_jump
		cmpb   $0x000000,_0c24d3_data
		jne    _061f38_jump
		mov    _0cd094_data,%ax
		cmp    _0cd0ac_data,%ax
		jle    _061f6d_jump
		mov    _0cd092_data,%edx
		mov    _0cd0b0_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _061f6d_jump

	_061f38_jump:
		mov    _0cd086_data,%edx
		sar    $0x000010,%edx
		cmp    $0x000001,%edx
		jne    _061f54_jump
		mov    _0cd080_data,%ax
		mov    %ax,_0cd088_data
		jmp    _061f5b_jump

	_061f54_jump:
		decw   _0cd088_data

	_061f5b_jump:
		xor    %ebx,%ebx
		mov    $0x000044,%eax
		mov    %ebx,_0cdaf4_data
		call   _06b320_func

	_061f6d_jump:
		call   _040c0c_func
		test   %ax,%ax
		je     _062002_jump
		call   _040ab0_func
		test   %ax,%ax
		jne    _062002_jump
		call   _040b24_func
		test   %ax,%ax
		jne    _062002_jump
		cmpb   $0x000000,_0c24d3_data
		jne    _061fcc_jump
		mov    _0cd094_data,%ax
		cmp    _0cd0ac_data,%ax
		jle    _062002_jump
		mov    _0cd092_data,%edx
		mov    _0cd0b0_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _062002_jump

	_061fcc_jump:
		mov    _0cd084_data,%edx
		sar    $0x000010,%edx
		cmp    $0x000001,%edx
		jg     _061fe9_jump
		xor    %eax,%eax
		mov    _0cd0d2_data,%al
		mov    %ax,_0cd086_data
		jmp    _061ff0_jump

	_061fe9_jump:
		decw   _0cd086_data

	_061ff0_jump:
		xor    %ecx,%ecx
		mov    $0x000044,%eax
		mov    %ecx,_0cdaf4_data
		call   _06b320_func

	_062002_jump:
		call   _040b98_func
		test   %ax,%ax
		je     _06209a_jump
		call   _040ab0_func
		test   %ax,%ax
		jne    _06209a_jump
		call   _040b24_func
		test   %ax,%ax
		jne    _06209a_jump
		cmpb   $0x000000,_0c24d3_data
		jne    _062061_jump
		mov    _0cd094_data,%ax
		cmp    _0cd0ac_data,%ax
		jle    _06209a_jump
		mov    _0cd092_data,%edx
		mov    _0cd0b0_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _06209a_jump

	_062061_jump:
		xor    %edx,%edx
		mov    _0cd084_data,%ebx
		mov    _0cd0d2_data,%dl
		sar    $0x000010,%ebx
		cmp    %edx,%ebx
		jne    _062081_jump
		movw   $0x000001,_0cd086_data
		jmp    _062088_jump

	_062081_jump:
		incw   _0cd086_data

	_062088_jump:
		xor    %esi,%esi
		mov    $0x000044,%eax
		mov    %esi,_0cdaf4_data
		call   _06b320_func

	_06209a_jump:
		call   _040b24_func
		test   %ax,%ax
		jne    _0620d2_jump
		call   _040ab0_func
		test   %ax,%ax
		jne    _0620d2_jump
		call   _040b98_func
		test   %ax,%ax
		jne    _0620d2_jump
		call   _040c0c_func
		test   %ax,%ax
		jne    _0620d2_jump
		mov    $0x000001,%bh
		mov    %ax,_0cd094_data
		mov    %bh,_0c24d3_data
		jmp    _0620da_jump

	_0620d2_jump:
		xor    %cl,%cl
		mov    %cl,_0c24d3_data

	_0620da_jump:
		call   _0370d0_func
		test   %al,%al
		je     _0620fd_jump
		cmpb   $0x000000,_0c24d3_data
		je     _0620fd_jump
		movb   $0x000001,_0cd745_data
		mov    $0x00004d,%eax
		call   _06b320_func

	_0620fd_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_062101_jump:
		ret    



_062104_func:
		mov    _0cd086_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _06213d_jump
		call   _036fac_func
		test   %al,%al
		je     _06213d_jump
		movw   $0x000001,_0cd082_data

	_062123_jump:
		call   _036fac_func
		test   %al,%al
		je     _062133_jump
		call   _040e8c_func
		jmp    _062123_jump

	_062133_jump:
		mov    $0x000045,%eax
		call   _06b320_func

	_06213d_jump:
		mov    _0cd086_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _062176_jump
		call   _036fac_func
		test   %al,%al
		je     _062176_jump
		movw   $0x000002,_0cd082_data

	_06215c_jump:
		call   _036fac_func
		test   %al,%al
		je     _06216c_jump
		call   _040e8c_func
		jmp    _06215c_jump

	_06216c_jump:
		mov    $0x000045,%eax
		call   _06b320_func

	_062176_jump:
		mov    _0cd086_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _062101_jump
		call   _036fac_func
		test   %al,%al
		je     _062101_jump
		movw   $0x000003,_0cd082_data

	_06219d_jump:
		call   _036fac_func
		test   %al,%al
		je     _062101_jump
		call   _040e8c_func
		jmp    _06219d_jump



_0621b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		movw   $0x00001a,_0cd070_data
		xor    %ebx,%ebx
		mov    _0cd0d2_data,%bl
		lea    0x000000(,%ebx,4),%eax
		mov    $0x000032,%edx
		sub    %ebx,%eax
		mov    %dx,_0cd0a6_data
		shl    $0x000003,%eax
		mov    $0x00005a,%edx
		sub    %ebx,%eax
		sub    %eax,%edx
		inc    %ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000015,%ecx
		mov    $0x00008d,%esi
		mov    %eax,%edx
		mov    %ax,_0cd07e_data
		cwtl   
		mov    %cx,_0cd07c_data
		add    $0x000035,%eax
		mov    %si,_0cd074_data
		mov    %ax,_0cd072_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062224_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpw   $0x000000,_0cd092_data
		jne    _06227f_jump
		mov    _0cd080_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _06227f_jump
		mov    _0cd084_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		lea    -0x000004(%eax),%edi
		mov    $_0c070c_data,%esi
		add    $_0cd060_data,%edi
		mov    $0x000001,%ebx
		push   %edi

	_06225f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _062277_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06225f_jump

	_062277_jump:
		pop    %edi
		mov    %bx,_0cd092_data

	_06227f_jump:
		cmpw   $0x000000,_0cd0c6_data
		je     _062292_jump
		movw   $0x000001,_0cd0bc_data

	_062292_jump:
		call   _036fac_func
		test   %al,%al
		je     _06234b_jump
		mov    _0cd084_data,%edx
		mov    _0cd082_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		cmpb   $0x00007e,_0cd05b_data(%edx)
		jne    _0622e5_jump
		cmp    $0x000001,%eax
		je     _062313_jump
		movb   $0x000061,_0cd05b_data(%edx)
		mov    _0cd084_data,%dx
		dec    %edx
		mov    $0x000044,%eax
		mov    %dx,_0cd084_data
		call   _06b320_func
		jmp    _062313_jump

	_0622e5_jump:
		cmp    $0x000003,%eax
		jge    _0622fd_jump
		incw   _0cd084_data
		mov    $0x000044,%eax
		call   _06b320_func
		jmp    _062313_jump

	_0622fd_jump:
		mov    $0x000045,%eax
		mov    $0x000001,%edi
		call   _06b320_func
		mov    %di,_0cd0c6_data

	_062313_jump:
		mov    $0x001000,%ecx
		xor    %ebx,%ebx
		mov    $0x000001,%edi
		mov    %bx,_0ccfd4_data
		mov    %cx,_0ccfd6_data
		mov    %cx,_0ccfd8_data
		mov    %di,_0ccfda_data

	_06233b_jump:
		call   _036fac_func
		test   %al,%al
		je     _06234b_jump
		call   _040e8c_func
		jmp    _06233b_jump

	_06234b_jump:
		call   _040c0c_func
		test   %ax,%ax
		je     _062430_jump
		call   _040b24_func
		test   %ax,%ax
		jne    _062430_jump
		call   _040ab0_func
		test   %ax,%ax
		jne    _062430_jump
		cmpb   $0x000000,_0c24d3_data
		jne    _0623ae_jump
		mov    _0cd094_data,%ax
		cmp    _0cd0ac_data,%ax
		jle    _062430_jump
		mov    _0cd092_data,%edx
		sar    $0x000010,%edx
		mov    $0x000003,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		test   %edx,%edx
		jne    _062430_jump

	_0623ae_jump:
		mov    _0cd084_data,%eax
		mov    _0cd082_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0cd05b_data(%eax),%ch
		cmp    $0x00007a,%ch
		jne    _0623d8_jump
		movb   $0x000020,_0cd05b_data(%eax)
		jmp    _0623fe_jump

	_0623d8_jump:
		cmp    $0x000020,%ch
		jne    _0623e6_jump
		movb   $0x00007e,_0cd05b_data(%eax)
		jmp    _0623fe_jump

	_0623e6_jump:
		cmp    $0x00007e,%ch
		jne    _0623f4_jump
		movb   $0x000061,_0cd05b_data(%eax)
		jmp    _0623fe_jump

	_0623f4_jump:
		mov    %ch,%bl
		inc    %bl
		mov    %bl,_0cd05b_data(%eax)

	_0623fe_jump:
		mov    $0x001000,%ecx
		mov    $0x000001,%edi
		xor    %ebx,%ebx
		mov    $0x000044,%eax
		mov    %bx,_0ccfd4_data
		mov    %cx,_0ccfd6_data
		mov    %cx,_0ccfd8_data
		mov    %di,_0ccfda_data
		call   _06b320_func

	_062430_jump:
		call   _040b98_func
		test   %ax,%ax
		je     _062515_jump
		call   _040b24_func
		test   %ax,%ax
		jne    _062515_jump
		call   _040ab0_func
		test   %ax,%ax
		jne    _062515_jump
		cmpb   $0x000000,_0c24d3_data
		jne    _062493_jump
		mov    _0cd094_data,%ax
		cmp    _0cd0ac_data,%ax
		jle    _062515_jump
		mov    _0cd092_data,%edx
		sar    $0x000010,%edx
		mov    $0x000003,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		test   %edx,%edx
		jne    _062515_jump

	_062493_jump:
		mov    _0cd084_data,%eax
		mov    _0cd082_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0cd05b_data(%eax),%dl
		cmp    $0x000061,%dl
		jne    _0624bd_jump
		movb   $0x00007e,_0cd05b_data(%eax)
		jmp    _0624e3_jump

	_0624bd_jump:
		cmp    $0x00007e,%dl
		jne    _0624cb_jump
		movb   $0x000020,_0cd05b_data(%eax)
		jmp    _0624e3_jump

	_0624cb_jump:
		cmp    $0x000020,%dl
		jne    _0624d9_jump
		movb   $0x00007a,_0cd05b_data(%eax)
		jmp    _0624e3_jump

	_0624d9_jump:
		mov    %dl,%bh
		dec    %bh
		mov    %bh,_0cd05b_data(%eax)

	_0624e3_jump:
		mov    $0x001000,%ecx
		mov    $0x000001,%edi
		xor    %ebx,%ebx
		mov    $0x000044,%eax
		mov    %bx,_0ccfd4_data
		mov    %cx,_0ccfd6_data
		mov    %cx,_0ccfd8_data
		mov    %di,_0ccfda_data
		call   _06b320_func

	_062515_jump:
		call   _040c0c_func
		test   %ax,%ax
		jne    _06256e_jump
		call   _040b98_func
		test   %ax,%ax
		jne    _06256e_jump
		call   _040b24_func
		test   %ax,%ax
		jne    _06256e_jump
		call   _040ab0_func
		test   %ax,%ax
		jne    _06256e_jump
		mov    _0cd0c6_data,%ax
		test   %ax,%ax
		jne    _06256e_jump
		cmpw   $0x000000,_0cd0bc_data
		jne    _06256e_jump
		mov    $0x000001,%dh
		mov    $0x000001,%ebx
		mov    %ax,_0cd094_data
		mov    %dh,_0c24d3_data
		mov    %bx,_0cd0b4_data
		jmp    _062576_jump

	_06256e_jump:
		xor    %bl,%bl
		mov    %bl,_0c24d3_data

	_062576_jump:
		call   _0370d0_func
		test   %al,%al
		je     _062591_jump
		mov    $0x000001,%bh
		mov    $0x00004d,%eax
		mov    %bh,_0cd745_data
		call   _06b320_func

	_062591_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		mov    %eax,%eax



_062598_func:
		ret    

_062604_switch:
		.long   _062646_case
		.long   _06266d_case
		.long   _062679_case
		.long   _062685_case

_062614_switch:
		.long   _062691_case
		.long   _0626b8_case
		.long   _0626c4_case
		.long   _0626d0_case

_062624_switch:
		.long   _0626dc_case
		.long   _0626ff_case
		.long   _06270b_case
		.long   _062717_case

_062634_switch:
		.long   _062723_case
		.long   _06272e_case
		.long   _062739_case
		.long   _062744_case


	_062646_case:
		movl   $_040c80_func,_0cd00c_data

	_062650_jump:
		mov    _0cd01e_data,%ax
		cmp    $0x000003,%ax
		ja     _06269b_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_062614_switch(,%eax,4)

	_06266d_case:
		movl   $_040ce8_func,_0cd00c_data
		jmp    _062650_jump

	_062679_case:
		movl   $_040d50_func,_0cd00c_data
		jmp    _062650_jump

	_062685_case:
		movl   $_040db8_func,_0cd00c_data
		jmp    _062650_jump

	_062691_case:
		movl   $_040c80_func,_0cd010_data

	_06269b_jump:
		mov    _0cd020_data,%ax
		cmp    $0x000003,%ax
		ja     _0626e6_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_062624_switch(,%eax,4)

	_0626b8_case:
		movl   $_040ce8_func,_0cd010_data
		jmp    _06269b_jump

	_0626c4_case:
		movl   $_040d50_func,_0cd010_data
		jmp    _06269b_jump

	_0626d0_case:
		movl   $_040db8_func,_0cd010_data
		jmp    _06269b_jump

	_0626dc_case:
		movl   $_040c80_func,_0cd014_data

	_0626e6_jump:
		mov    _0cd022_data,%ax
		cmp    $0x000003,%ax
		ja     _06272d_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_062634_switch(,%eax,4)

	_0626ff_case:
		movl   $_040ce8_func,_0cd014_data
		jmp    _0626e6_jump

	_06270b_case:
		movl   $_040d50_func,_0cd014_data
		jmp    _0626e6_jump

	_062717_case:
		movl   $_040db8_func,_0cd014_data
		jmp    _0626e6_jump

	_062723_case:
		movl   $_040c80_func,_0cd018_data

	_06272d_jump:
		ret    

	_06272e_case:
		movl   $_040ce8_func,_0cd018_data
		ret    

	_062739_case:
		movl   $_040d50_func,_0cd018_data
		ret    

	_062744_case:
		movl   $_040db8_func,_0cd018_data
		ret    

_062750_switch:
		.long   _062773_case
		.long   _06278e_case
		.long   _0627a9_case
		.long   _0627c4_case


	_062773_case:
		push   $0x000002
		mov    $_0c0710_data,%eax
		and    $0x0000ff,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		call   _01a168_func
		ret    $0x000004

	_06278e_case:
		push   $0x000001
		mov    $_0c0712_data,%eax
		and    $0x0000ff,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		call   _01a168_func
		ret    $0x000004

	_0627a9_case:
		push   $0x000005
		mov    $_0c0714_data,%eax
		and    $0x0000ff,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		call   _01a168_func
		ret    $0x000004

	_0627c4_case:
		push   $0x000001
		mov    $_0c0716_data,%eax
		and    $0x0000ff,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		call   _01a168_func
		ret    $0x000004



_0627e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x00000a,%ebx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0c4588_data
		mov    %ah,_0c458a_data
		mov    %ah,_0c24c6_data
		mov    %ah,_0cd0d7_data
		mov    _0c257e_data,%eax
		mov    %bx,_0c4586_data
		sar    $0x000010,%eax
		mov    %dx,_0cd094_data
		cmp    $0x000004,%eax
		je     _06282b_jump
		testb  $0x000002,_0c32e5_data
		je     _06285f_jump

	_06282b_jump:
		mov    $0x000021,%ecx
		mov    $_0c1b1c_data,%edi
		mov    $_0c1ba0_data,%esi
		mov    $0x000001,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %bh,_0c1afc_data
		mov    _0c32e5_data,%cl
		mov    $0x000001,%esi
		and    $0x0000fd,%cl
		mov    %si,_0c2580_data
		mov    %cl,_0c32e5_data

	_06285f_jump:
		xor    %eax,%eax
		mov    $0x000087,%edx
		mov    _0c1b85_data,%al
		xor    %ch,%ch
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %ch,_0c1b87_data
		mov    _0cd0d4_data,%al
		mov    %edx,_0c1b48_data
		test   %eax,%eax
		je     _0628b0_jump
		mov    $0x000018,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		xor    %eax,%eax
		mov    $0x0000e1,%edx
		mov    _0c1b84_data,%al
		sub    %eax,%edx
		mov    %edx,_0c1b44_data
		jmp    _0628ff_jump

	_0628b0_jump:
		mov    $0x000050,%edx
		mov    _0c1b84_data,%al
		sub    %eax,%edx
		mov    $_0c1b1c_data,%eax
		mov    %edx,_0c1b44_data
		mov    $0x000003,%edx
		call   _01d4a0_func
		xor    %eax,%eax
		mov    $0x0000ff,%edi
		mov    _0c24ac_data,%al
		mov    %di,_0c4586_data
		cmp    $0x00000a,%eax
		jle    _0628f0_jump
		mov    $0x000035,%edx
		jmp    _0628f5_jump

	_0628f0_jump:
		mov    $0x000034,%edx

	_0628f5_jump:
		mov    $_0c1b1c_data,%eax
		call   _01d498_func

	_0628ff_jump:
		mov    _0c1b9d_data,%al
		and    $0x0000f7,%al
		mov    $0x000050,%edx
		mov    %al,_0c1b9d_data
		xor    %eax,%eax
		mov    $0x000082,%ebx
		mov    %ax,_0c1b5c_data
		mov    %ax,_0c1b5e_data
		xor    %eax,%eax
		mov    $0x00006e,%ecx
		call   _01d2dc_func
		mov    $_0c1d2c_data,%eax
		mov    %edx,_0c1d54_data
		mov    %ebx,_0c1d58_data
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %esi,%esi
		call   _01d4a8_func
		mov    $0x000078,%ebx
		mov    $0x000050,%ah
		mov    $0x000040,%dl
		mov    %bx,_0c262a_data
		mov    %ah,_0c265c_data
		mov    %dl,_0c265d_data
		mov    $_0c25f4_data,%eax
		mov    _0c2675_data,%dh
		xor    %bl,%bl
		and    $0x0000fb,%dh
		mov    %bl,_0c2673_data
		mov    $0x000014,%ebx
		mov    %dh,_0c2675_data
		mov    $0x000005,%edx
		mov    %cx,_0c262c_data
		call   _01d4a8_func
		mov    _0c247c_data,%ax
		xor    %bh,%bh
		mov    %ax,_0c32d8_data
		mov    %si,_0c247c_data
		mov    _0c247e_data,%ax
		mov    %bh,_0cd0d5_data
		mov    %ax,_0c32da_data
		mov    %si,_0c247e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0629d0_switch:
		.long   _062a9f_case
		.long   _062ae1_case
		.long   _062b1b_case
		.long   _062b51_case




_0629e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c24c6_data,%dl
		movw   $0x000001,_0cd094_data
		call   _040c0c_func
		test   %ax,%ax
		je     _062a12_jump
		mov    _0c24c6_data,%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x000001,%ebx
		je     _062a12_jump
		inc    %dl
		jmp    _062a84_jump

	_062a12_jump:
		call   _040b98_func
		test   %ax,%ax
		je     _062a33_jump
		mov    _0c24c6_data,%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x000003,%ebx
		je     _062a33_jump
		add    $0x000002,%dl
		jmp    _062a84_jump

	_062a33_jump:
		call   _040b24_func
		test   %ax,%ax
		je     _062a54_jump
		mov    _0c24c6_data,%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x000007,%ebx
		je     _062a54_jump
		add    $0x000004,%dl
		jmp    _062a84_jump

	_062a54_jump:
		call   _040ab0_func
		test   %ax,%ax
		je     _062a75_jump
		mov    _0c24c6_data,%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x00000f,%ebx
		je     _062a75_jump
		add    $0x000008,%dl
		jmp    _062a84_jump

	_062a75_jump:
		xor    %ecx,%ecx
		mov    _0c24c6_data,%dl
		mov    %cx,_0cd094_data

	_062a84_jump:
		mov    _0cd0d7_data,%al
		cmp    $0x000003,%al
		ja     _062b91_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		inc    %al
		jmp    *%cs:_0629d0_switch(,%ebx,4)

	_062a9f_case:
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x000001,%ebx
		jne    _062abf_jump
		xor    %ebx,%ebx
		mov    _0cd0d4_data,%bl
		cmp    $0x000003,%ebx
		jg     _062abf_jump
		mov    %al,_0cd0d7_data
		jmp    _062b91_jump

	_062abf_jump:
		cmpw   $0x000000,_0cd094_data
		je     _062b91_jump
		xor    %ch,%ch
		xor    %dl,%dl
		mov    %ch,_0cd0d7_data
		mov    %dl,_0c24c6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062ae1_case:
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x000003,%ebx
		jne    _062af9_jump
		mov    %al,_0cd0d7_data
		mov    %dl,_0c24c6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062af9_jump:
		cmpw   $0x000000,_0cd094_data
		je     _062b91_jump
		xor    %cl,%cl
		xor    %dl,%dl
		mov    %cl,_0cd0d7_data
		mov    %dl,_0c24c6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062b1b_case:
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x000007,%ebx
		jne    _062b33_jump
		mov    %al,_0cd0d7_data
		mov    %dl,_0c24c6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062b33_jump:
		cmpw   $0x000000,_0cd094_data
		je     _062b91_jump
		xor    %bh,%bh
		xor    %dl,%dl
		mov    %bh,_0cd0d7_data
		mov    %dl,_0c24c6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062b51_case:
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x00000f,%ebx
		jne    _062b7d_jump
		orb    $0x000004,_0c2675_data
		xor    %dl,%dl
		mov    $0x00000a,%bl
		mov    $0x000080,%dh
		mov    %bl,_0cd0d4_data
		mov    %dh,_0c2673_data
		mov    %dl,_0c24c6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062b7d_jump:
		cmpw   $0x000000,_0cd094_data
		je     _062b91_jump
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,_0cd0d7_data

	_062b91_jump:
		mov    %dl,_0c24c6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_062b9c_switch:
		.long   _062cb1_case
		.long   _062cea_case
		.long   _062d07_case
		.long   _062fb2_case
		.long   _062de1_case
		.long   _062ee0_case
		.long   _062d3c_case




_062bb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _04c6f4_func
		call   _036fac_func
		test   %al,%al
		jne    _062be1_jump
		call   _036ff8_func
		test   %al,%al
		jne    _062be1_jump
		call   _0370d0_func
		test   %al,%al
		je     _062c75_jump

	_062be1_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000019,%eax
		je     _062bfb_jump
		cmp    $0x00001a,%eax
		je     _062bfb_jump
		cmp    $0x00001b,%eax
		jne    _062c75_jump

	_062bfb_jump:
		xor    %eax,%eax
		mov    _0c2673_data,%al
		cmp    $0x000080,%eax
		je     _062c10_jump
		orb    $0x000004,_0c2675_data

	_062c10_jump:
		call   _01ccfc_func
		mov    $0x0000d8,%eax
		call   _06b320_func
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00001b,%eax
		je     _062c41_jump
		mov    $0x00001f,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		jmp    _062c5c_jump

	_062c41_jump:
		mov    $0x00001d,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		orb    $0x000008,_0c1b9d_data

	_062c5c_jump:
		mov    $0x000001,%ebx
		xor    %dh,%dh
		mov    $_0c1d2c_data,%eax
		mov    %dh,_0c1b87_data
		xor    %edx,%edx
		call   _01d4a8_func

	_062c75_jump:
		mov    $_0c1b1c_data,%eax
		call   _04d2c4_func
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		call   _04d240_func
		mov    %ax,_0c1b5c_data
		mov    _0c1b88_data,%al
		mov    %al,%ah
		sub    $0x000019,%ah
		cmp    $0x000006,%ah
		ja     _062fda_jump
		xor    %edx,%edx
		mov    %ah,%dl
		jmp    *%cs:_062b9c_switch(,%edx,4)

	_062cb1_case:
		xor    %eax,%eax
		mov    _0c1b44_data,%esi
		mov    _0c1b84_data,%al
		add    %esi,%eax
		cmp    $0x000046,%eax
		jge    _062fda_jump
		mov    $0x00001a,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		xor    %ch,%ch
		call   _01d4a8_func
		mov    %ch,_0c1b87_data
		jmp    _062fda_jump

	_062cea_case:
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		cmp    $0x000006,%eax
		jle    _062fda_jump
		xor    %eax,%eax
		mov    %ax,_0c1b5c_data
		jmp    _062fda_jump

	_062d07_case:
		incw   _0c4588_data
		mov    _0c4586_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00003c,%eax
		jne    _062fda_jump
		mov    _0c4586_data,%di
		xor    %esi,%esi
		dec    %edi
		mov    %si,_0c4588_data
		mov    %di,_0c4586_data
		jmp    _062fda_jump

	_062d3c_case:
		xor    %edx,%edx
		mov    _0c1b28_data,%ebx
		mov    _0c1b89_data,%dl
		and    $0x0000ff,%eax
		mov    (%ebx,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _062d64_jump
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		test   %eax,%eax
		jmp    _062d90_jump

	_062d64_jump:
		xor    %edx,%edx
		mov    _0c1b86_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b20_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1b87_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_062d90_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _062fda_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _062fda_jump
		orb    $0x000008,_0c1b9d_data
		jmp    _062fda_jump

	_062de1_case:
		mov    _0c1b9d_data,%ah
		xor    %edx,%edx
		mov    _0c1b44_data,%ecx
		mov    _0c1b84_data,%dl
		or     $0x000008,%ah
		add    %ecx,%edx
		mov    %ah,_0c1b9d_data
		cmp    $0x0000b4,%edx
		jle    _062ec2_jump
		xor    %edx,%edx
		mov    _0c1b28_data,%ebx
		mov    _0c1b89_data,%dl
		and    $0x0000ff,%eax
		mov    (%ebx,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _062e34_jump
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		test   %eax,%eax
		jmp    _062e66_jump

	_062e34_jump:
		xor    %edx,%edx
		mov    _0c1b86_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b20_data,%eax
		mov    0x00000a(%edx,%eax,1),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1b87_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_062e66_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _062ec2_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b28_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _062ec2_jump
		mov    $0x00001c,%edx
		mov    $_0c1b1c_data,%eax
		xor    %bh,%bh
		call   _01d498_func
		mov    %bh,_0c1b87_data
		jmp    _062fda_jump

	_062ec2_jump:
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		cmp    $0x000040,%eax
		jge    _062fda_jump
		xor    %edx,%edx
		mov    %dx,_0c1b5c_data
		jmp    _062fda_jump

	_062ee0_case:
		xor    %edx,%edx
		mov    _0c1b44_data,%ebx
		mov    _0c1b84_data,%dl
		add    %ebx,%edx
		cmp    $0x0000af,%edx
		jle    _062fda_jump
		xor    %edx,%edx
		mov    _0c1b28_data,%ebx
		mov    _0c1b89_data,%dl
		and    $0x0000ff,%eax
		mov    (%ebx,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _062f24_jump
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		test   %eax,%eax
		jmp    _062f50_jump

	_062f24_jump:
		xor    %edx,%edx
		mov    _0c1b86_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b20_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1b87_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_062f50_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _062fda_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		lea    (%edx,%eax,1),%ebx
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		lea    0x000000(,%eax,8),%edx
		mov    (%ebx),%eax
		mov    0x000005(%edx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _062fda_jump
		mov    $0x00001c,%edx
		mov    $_0c1b1c_data,%eax
		xor    %ch,%ch
		call   _01d498_func
		mov    %ch,_0c1b87_data
		jmp    _062fda_jump

	_062fb2_case:
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		cmp    $0x000028,%eax
		jle    _062fc5_jump
		movb   $0x000001,_0c458a_data

	_062fc5_jump:
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		cmp    $0x000010,%eax
		jle    _062fda_jump
		xor    %ebx,%ebx
		mov    %bx,_0c1b5c_data

	_062fda_jump:
		cmpb   $0x000000,_0c249a_data
		jne    _062fef_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000019,%eax
		je     _063019_jump

	_062fef_jump:
		mov    _0c1b5a_data,%eax
		mov    _0c1b44_data,%edi
		sar    $0x000010,%eax
		add    %eax,%edi
		mov    $_0c1b1c_data,%eax
		mov    %edi,_0c1b44_data
		call   _01dcec_func
		mov    $_0c1b1c_data,%eax
		call   _04dbe4_func

	_063019_jump:
		mov    $_0c1d2c_data,%eax
		call   _01dcec_func
		mov    $_0c1d2c_data,%eax
		call   _04dbe4_func
		testb  $0x000004,_0c2675_data
		je     _063101_jump
		mov    $_0c25f4_data,%eax
		call   _04dbe4_func
		xor    %eax,%eax
		mov    _0c2661_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c2600_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c2660_data,%dl
		testb  $0x000010,0x000007(%eax,%edx,8)
		je     _063075_jump
		xor    %eax,%eax
		mov    _0c265f_data,%al
		test   %eax,%eax
		jmp    _0630a7_jump

	_063075_jump:
		xor    %edx,%edx
		mov    _0c265e_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c25f8_data,%eax
		mov    0x00000a(%edx,%eax,1),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c265f_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_0630a7_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _063101_jump
		xor    %eax,%eax
		mov    _0c2661_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c2600_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c2660_data,%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _063101_jump
		mov    _0c2673_data,%al
		cmp    $0x000080,%eax
		je     _0630fa_jump
		decb   _0cd0d4_data

	_0630fa_jump:
		andb   $0x0000fb,_0c2675_data

	_063101_jump:
		mov    _0c4584_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000ff,%eax
		je     _063117_jump
		call   _0629e0_func
		jmp    _06311c_jump

	_063117_jump:
		call   _063218_func

	_06311c_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063218_func:
		push   %ebx
		push   %edx
		call   _0370d0_func
		and    $0x0000ff,%eax
		setne  %al
		mov    %al,_0cd0d5_data
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _063259_jump
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		test   %eax,%eax
		jmp    _063285_jump

	_063259_jump:
		xor    %edx,%edx
		mov    _0c1b86_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b20_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1b87_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_063285_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _0632d1_jump
		xor    %edx,%edx
		mov    _0c1b89_data,%dl
		mov    _0c1b28_data,%eax
		shl    $0x000002,%edx
		lea    (%eax,%edx,1),%ebx
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		lea    0x000000(,%eax,8),%edx
		mov    (%ebx),%eax
		mov    0x000005(%edx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0632d1_jump
		movb   $0x000001,_0cd0d5_data

	_0632d1_jump:
		cmpb   $0x000000,_0cd0d5_data
		je     _0632e1_jump
		movb   $0x000001,_0c458a_data

	_0632e1_jump:
		pop    %edx
		pop    %ebx
		ret    

_0632e4_switch:
		.long   _063337_case
		.long   _063410_case
		.long   _063428_case
		.long   _0634ee_case
		.long   _06351d_case




_0632f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000005,%ebx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0c4588_data
		mov    %bx,_0c4586_data
		mov    %ah,_0c32f0_data
		call   _01ed50_func
		cmpb   $0x000000,_0cd0de_data
		je     _0635fd_jump
		call   _063674_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063337_case:
		mov    $_0c32f6_data,%edi
		mov    _0cd7c8_data,%esi
		push   %edi

	_063343_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06335b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _063343_jump

	_06335b_jump:
		pop    %edi
		mov    $_0c33ce_data,%edi
		mov    _0cd7cc_data,%esi
		push   %edi

	_063368_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _063380_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _063368_jump

	_063380_jump:
		pop    %edi
		mov    $_0c34a6_data,%edi
		mov    _0cd7d0_data,%esi
		push   %edi

	_06338d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0633a5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06338d_jump

	_0633a5_jump:
		pop    %edi
		mov    $_0c357e_data,%edi
		mov    _0cd7d4_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_0633b7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0633cf_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0633b7_jump

	_0633cf_jump:
		pop    %edi
		mov    _0cd020_data,%edx
		mov    $_0c33ce_data,%eax
		sar    $0x000010,%edx
		call   _01f130_func
		mov    $0x0000ff,%ebx
		mov    _0cd020_data,%edx
		mov    $_0c34a6_data,%eax
		sar    $0x000010,%edx
		call   _01f130_func
		mov    $0x0000ff,%ebx
		mov    _0cd020_data,%edx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01f130_func

	_063410_case:
		mov    $0x0000d8,%edx
		xor    %eax,%eax
		mov    $0x0000a0,%esi
		mov    $0x0000bc,%edi
		mov    $0x000002,%bh
		jmp    _063631_jump

	_063428_case:
		mov    $_0c32f6_data,%edi
		mov    _0cd7d8_data,%esi
		push   %edi

	_063434_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06344c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _063434_jump

	_06344c_jump:
		pop    %edi
		mov    $_0c33ce_data,%edi
		mov    _0cd7dc_data,%esi
		push   %edi

	_063459_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _063471_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _063459_jump

	_063471_jump:
		pop    %edi
		mov    $_0c34a6_data,%edi
		mov    _0cd7e0_data,%esi
		push   %edi

	_06347e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _063496_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06347e_jump

	_063496_jump:
		pop    %edi
		mov    $_0c357e_data,%edi
		mov    _0cd7e4_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_0634a8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0634c0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0634a8_jump

	_0634c0_jump:
		pop    %edi
		mov    _0cd01a_data,%edx
		mov    $_0c34a6_data,%eax
		sar    $0x000010,%edx
		call   _01f130_func
		mov    $0x0000ff,%ebx
		mov    _0cd01a_data,%edx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01f130_func
		jmp    _063410_case

	_0634ee_case:
		call   _01ccfc_func
		mov    $_0c32f6_data,%edi
		mov    _0cd7e8_data,%esi
		push   %edi

	_0634ff_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _063517_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0634ff_jump

	_063517_jump:
		pop    %edi
		jmp    _063410_case

	_06351d_case:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _0635c2_jump
		mov    $_0c32f6_data,%edi
		mov    _0cd7ec_data,%esi
		push   %edi

	_06353a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _063552_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06353a_jump

	_063552_jump:
		pop    %edi
		mov    $_0c33ce_data,%edi
		mov    _0cd7f0_data,%esi
		push   %edi

	_06355f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _063577_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06355f_jump

	_063577_jump:
		pop    %edi
		mov    $_0c34a6_data,%edi
		mov    _0cd7f4_data,%esi
		push   %edi

	_063584_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06359c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _063584_jump

	_06359c_jump:
		pop    %edi
		mov    $_0c357e_data,%edi
		mov    _0cd7f8_data,%esi
		push   %edi

	_0635a9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0635c1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0635a9_jump

	_0635c1_jump:
		pop    %edi

	_0635c2_jump:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000b,%eax
		jne    _063410_case
		mov    $_0c32f6_data,%edi
		mov    _0cd7fc_data,%esi
		push   %edi

	_0635df_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0635f7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0635df_jump

	_0635f7_jump:
		pop    %edi
		jmp    _063410_case

	_0635fd_jump:
		mov    _0c24f2_data,%ax
		dec    %eax
		cmp    $0x000004,%ax
		ja     _063410_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0632e4_switch(,%eax,4)

	_06361b_jump:
		add    $0x0001b0,%eax
		add    $0x0001b0,%edx
		cmp    $0x000870,%eax
		je     _06311c_jump

	_063631_jump:
		cmpb   $0x000000,_0c32f6_data(%eax)
		je     _063653_jump
		mov    %si,_0c33c6_data(%eax)
		mov    $0x0000ad,%ecx
		mov    %bh,_0c33ca_data(%eax)
		mov    %cx,_0c33c8_data(%eax)

	_063653_jump:
		cmpb   $0x000000,_0c32f6_data(%edx)
		je     _06361b_jump
		mov    %si,_0c33c6_data(%edx)
		mov    $0x000002,%ch
		mov    %di,_0c33c8_data(%edx)
		mov    %ch,_0c33ca_data(%edx)
		jmp    _06361b_jump



_063674_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %ah,%ah
		mov    %ah,_0c5185_data
		xor    %eax,%eax
		mov    _0cd08e_data,%al
		xor    %dl,%dl
		call   _06cdd8_func
		mov    %dl,_0cd747_data
		xor    %dh,%dh
		mov    $0xffffffff,%ebx
		mov    %dl,_0cd748_data
		mov    %dx,_0cd74a_data
		mov    %dl,_0cd0d5_data
		mov    %dl,_0cd0e0_data
		mov    %dl,_0cd746_data

	_0636bb_jump:
		inc    %ebx
		movswl %bx,%edx
		imul   $0x00000c,%edx,%edx
		mov    $_094eb4_data,%esi
		mov    $_0cd0f0_data,%edi
		mov    $0x00000c,%ecx
		add    %edx,%esi
		add    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cd0f4_data(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _0636ff_jump
		mov    _0cd750_data(,%eax,4),%eax
		mov    %eax,_0cd0f0_data(%edx)

	_0636ff_jump:
		movswl %bx,%edx
		imul   $0x00000c,%edx,%edx
		xor    %eax,%eax
		mov    $0x0000dc,%ecx
		mov    _0cd0f9_data(%edx),%al
		mov    %cx,_0cd0f6_data(%edx)
		cmp    $0x0000ff,%eax
		jne    _0636bb_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063728_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cd748_data,%cl
		cmpb   $0x000000,_0cd0de_data
		je     _06386b_jump
		call   _04c6f4_func
		xor    %eax,%eax
		mov    _0c249a_data,%al
		test   %eax,%eax
		jne    _06386b_jump
		mov    _0cd747_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0cd748_data,%cl
		shl    $0x000002,%edx
		jmp    _063780_jump

	_06376d_jump:
		mov    _0cd0f6_data(%edx),%di
		add    $0x00000c,%edx
		dec    %edi
		inc    %eax
		mov    %di,_0cd0ea_data(%edx)

	_063780_jump:
		xor    %ebx,%ebx
		mov    %cl,%bl
		cmp    %ebx,%eax
		jle    _06376d_jump
		lea    0x000000(,%ebx,4),%eax
		mov    _0cd74a_data,%di
		sub    %ebx,%eax
		xor    %edx,%edx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    _0cd0f9_data(%eax),%dl
		inc    %edi
		mov    %dl,%bl
		mov    %di,_0cd74a_data
		test   %ebx,%ebx
		je     _0637ca_jump
		jmp    _0637e2_jump

	_0637b5_jump:
		mov    $0x000024,%esi
		jmp    _063802_jump

	_0637bc_jump:
		mov    $0x000017,%esi
		jmp    _063802_jump

	_0637c3_jump:
		mov    $0x00000f,%esi
		jmp    _063802_jump

	_0637ca_jump:
		mov    _0cd0f8_data(%eax),%al
		cmp    $0x000001,%al
		jb     _0637dc_jump
		jbe    _0637bc_jump
		cmp    $0x000002,%al
		je     _0637c3_jump
		jmp    _063802_jump

	_0637dc_jump:
		test   %al,%al
		je     _0637b5_jump
		jmp    _063802_jump

	_0637e2_jump:
		movswl %dx,%eax
		cmp    $0x0000ff,%eax
		jne    _0637f3_jump
		mov    $0x0000a0,%esi
		jmp    _063802_jump

	_0637f3_jump:
		cmp    $0x000064,%eax
		jle    _0637ff_jump
		mov    %edx,%esi
		sub    $0x000055,%esi
		jmp    _063802_jump

	_0637ff_jump:
		imul   $0x00000f,%edx,%esi

	_063802_jump:
		cmp    _0cd74a_data,%si
		jg     _06383b_jump
		xor    %ebx,%ebx
		movswl %dx,%eax
		mov    %bx,_0cd74a_data
		cmp    $0x0000ff,%eax
		je     _063834_jump
		inc    %cl
		xor    %edx,%edx
		mov    %cl,%dl
		mov    $0x00000f,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _06383b_jump

	_063834_jump:
		movb   $0x000001,_0cd0d5_data

	_06383b_jump:
		xor    %edx,%edx
		mov    _0cd747_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cd0f4_data(,%eax,4),%eax
		sar    $0x000010,%eax
		mov    %cl,_0cd748_data
		cmp    $0xfffffffc,%eax
		jge    _06386b_jump
		mov    %dl,%bl
		inc    %bl
		mov    %bl,_0cd747_data

	_06386b_jump:
		mov    _0cd748_data,%cl
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0638b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   $0x000000
		xor    %ebx,%ebx
		mov    _0c1b54_data,%dx
		mov    _0c1b90_data,%bl
		mov    $0x000002,%ecx
		add    %edx,%ebx
		mov    $_0c0718_data,%eax
		sub    $0x00003c,%ebx
		mov    $0x0000a0,%edx
		movswl %bx,%ebx
		call   _01a168_func
		push   $0x000000
		xor    %ebx,%ebx
		mov    _0c1b54_data,%cx
		mov    _0c1b90_data,%bl
		mov    $0x0000a0,%edx
		add    %ecx,%ebx
		mov    $_0c072d_data,%eax
		sub    $0x00001e,%ebx
		mov    $0x000002,%ecx
		movswl %bx,%ebx
		call   _01a168_func
		xor    %ebx,%ebx
		mov    _0c1b87_data,%bl
		cmp    $0x000080,%ebx
		jle    _06392c_jump
		movb   $0x000001,_0cd0d5_data

	_06392c_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063930_func:
		push   %ebx
		push   %edx
		mov    $0x0000c8,%ah
		mov    $0x0000f0,%dl
		mov    $0xffffffb8,%ebx
		mov    %ah,_0c1e9c_data
		mov    %dl,_0c1e9d_data
		mov    %bx,_0c1e6c_data
		mov    $0x000078,%edx
		mov    $0x000001,%bl
		mov    %dx,_0c1e6a_data
		mov    %bl,_0c1ea1_data
		mov    _0c1eb5_data,%dh
		xor    %bh,%bh
		and    $0x0000f7,%dh
		mov    %bh,_0c1ea0_data
		mov    %bh,_0c1ea4_data
		mov    %dh,_0c1eb5_data
		pop    %edx
		pop    %ebx
		ret    

_063984_switch:
		.long   _063a7b_case
		.long   _063ad4_case
		.long   _063b42_case
		.long   _063b73_case
		.long   _063c66_case
		.long   _063cd1_case




_06399c_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0c1ea1_data,%al
		mov    _0c1e40_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1ea0_data,%al
		mov    0x000005(%edx,%eax,8),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %dx,_0c1e74_data
		test   %al,%al
		je     _0639e9_jump
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0639e9_jump
		mov    $_0c1e34_data,%eax
		call   _04d2c4_func

	_0639e9_jump:
		mov    _0c1e74_data,%ax
		mov    _0c1e6a_data,%bx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0cd0d5_data,%al
		mov    %bx,_0c1e6a_data
		cmp    $0x000001,%eax
		jne    _063a60_jump
		mov    $0x000005,%ah
		mov    $0x000002,%ebx
		xor    %edx,%edx
		mov    %ah,_0c1ea4_data
		mov    $_0c1e34_data,%eax
		call   _01d4a8_func
		xor    %eax,%eax
		mov    $0x000002,%dl
		mov    _0c1e9c_data,%al
		mov    %dl,_0c1eb3_data
		mov    $0x0000a0,%edx
		xor    %bl,%bl
		sub    %eax,%edx
		mov    %bl,_0cd0d5_data
		mov    %edx,%eax
		mov    _0c1eb5_data,%dh
		sub    $0x000010,%eax
		and    $0x0000f7,%dh
		mov    %ax,_0c1e6a_data
		mov    %dh,_0c1eb5_data

	_063a60_jump:
		mov    _0c1ea4_data,%al
		cmp    $0x000005,%al
		ja     _063d10_jump
		xor    %edx,%edx
		mov    %al,%dl
		inc    %al
		jmp    *%cs:_063984_switch(,%edx,4)

	_063a7b_case:
		xor    %edx,%edx
		mov    _0c1e68_data,%ebx
		mov    _0c1e9c_data,%dl
		sar    $0x000010,%ebx
		add    %ebx,%edx
		cmp    $0xffffff9c,%edx
		jge    _063d10_jump
		mov    $0x000001,%ebx
		mov    %al,_0c1ea4_data
		mov    $_0c1e34_data,%eax
		mov    %ebx,%edx
		call   _01d4a8_func
		xor    %eax,%eax
		mov    _0c1e9c_data,%al
		neg    %eax
		sub    $0x00003c,%eax
		mov    %ax,_0c1e6a_data
		orb    $0x000008,_0c1eb5_data
		mov    $_0c1e34_data,%eax
		call   _04dbe4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063ad4_case:
		xor    %edx,%edx
		mov    _0c1e68_data,%ebx
		mov    _0c1e9c_data,%dl
		sar    $0x000010,%ebx
		add    %ebx,%edx
		cmp    $0x000190,%edx
		jle    _063d10_jump
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %al,_0c1ea4_data
		mov    $_0c1e34_data,%eax
		call   _01d4a8_func
		xor    %eax,%eax
		mov    _0c1e9c_data,%al
		neg    %eax
		add    $0x00015e,%eax
		mov    %ax,_0c1e6a_data
		mov    _0c1eb5_data,%al
		xor    %ch,%ch
		and    $0x0000f7,%al
		mov    %ch,_0c1e9f_data
		mov    %al,_0c1eb5_data
		mov    $_0c1e34_data,%eax
		call   _04dbe4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063b42_case:
		xor    %edx,%edx
		mov    _0c1ea1_data,%dl
		test   %edx,%edx
		jne    _063d10_jump
		mov    _0c1ea0_data,%dl
		test   %edx,%edx
		jne    _063d10_jump
		mov    %al,_0c1ea4_data
		mov    $_0c1e34_data,%eax
		call   _04dbe4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063b73_case:
		xor    %eax,%eax
		mov    _0c1ea1_data,%al
		mov    _0c1e40_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1ea0_data,%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _063ba0_jump
		xor    %eax,%eax
		mov    _0c1e9f_data,%al
		test   %eax,%eax
		jmp    _063bcc_jump

	_063ba0_jump:
		xor    %edx,%edx
		mov    _0c1e9e_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1e38_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1e9f_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_063bcc_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _063d10_jump
		xor    %eax,%eax
		mov    _0c1ea1_data,%al
		mov    _0c1e40_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c1ea0_data,%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _063d10_jump
		mov    _0c1ea4_data,%bh
		mov    $0x000001,%edx
		inc    %bh
		mov    $_0c1e34_data,%eax
		mov    %bh,_0c1ea4_data
		mov    $0x000003,%ebx
		call   _01d4a8_func
		mov    $0xffffffc4,%edx
		xor    %eax,%eax
		mov    _0c1eb5_data,%cl
		mov    _0c1e9c_data,%al
		or     $0x000008,%cl
		sub    %eax,%edx
		mov    %cl,_0c1eb5_data
		mov    %dx,_0c1e6a_data
		mov    $_0c1e34_data,%eax
		call   _04dbe4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063c66_case:
		xor    %edx,%edx
		mov    _0c1e68_data,%ebx
		mov    _0c1e9c_data,%dl
		sar    $0x000010,%ebx
		add    %ebx,%edx
		cmp    $0x000190,%edx
		jle    _063d10_jump
		mov    $0x000001,%ebx
		mov    %al,_0c1ea4_data
		xor    %edx,%edx
		mov    $_0c1e34_data,%eax
		call   _01d4a8_func
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0c1e9c_data,%al
		sub    %eax,%edx
		mov    _0c1eb5_data,%ch
		mov    %edx,%eax
		and    $0x0000f7,%ch
		sub    $0x000010,%eax
		mov    %ch,_0c1eb5_data
		mov    %ax,_0c1e6a_data
		mov    $_0c1e34_data,%eax
		call   _04dbe4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063cd1_case:
		xor    %eax,%eax
		mov    _0c1ea1_data,%al
		test   %eax,%eax
		jne    _063d10_jump
		mov    _0c1ea0_data,%al
		cmp    $0x000002,%eax
		jne    _063d10_jump
		xor    %eax,%eax
		mov    _0c1eb3_data,%al
		test   %eax,%eax
		jne    _063d06_jump
		movb   $0x000001,_0cd0d5_data
		mov    $_0c1e34_data,%eax
		call   _04dbe4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063d06_jump:
		mov    %al,%bh
		dec    %bh
		mov    %bh,_0c1eb3_data

	_063d10_jump:
		mov    $_0c1e34_data,%eax
		call   _04dbe4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063d20_func:
		push   %edx
		push   %esi
		push   %edi
		xor    %ah,%ah
		mov    %ah,_0c1ada_data
		xor    %eax,%eax
		mov    _0c5184_data,%al
		cmp    $0x000001,%eax
		jne    _063d4c_jump
		mov    $_0c32e4_data,%edi
		xor    %dl,%dl
		mov    $_0c32e8_data,%esi
		mov    %dl,_0c5184_data
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)

	_063d4c_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		ret    

_063d50_switch:
		.long   _063d90_case
		.long   _063e22_case
		.long   _063e49_case
		.long   _063e69_case
		.long   _063e92_case




_063d64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c24f0_data,%bx
		mov    _0c24f2_data,%ax
		dec    %eax
		xor    %edx,%edx
		cmp    $0x000004,%ax
		ja     _063eb9_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_063d50_switch(,%eax,4)

	_063d90_case:
		movswl %bx,%eax
		cmp    $0x000010,%eax
		jne    _063db7_jump
		mov    _0c24ea_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _063db2_jump
		mov    _0c24ec_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _063db7_jump

	_063db2_jump:
		mov    $_096a04_data,%edx

	_063db7_jump:
		movswl %bx,%eax
		cmp    $0x000007,%eax
		jne    _063dea_jump
		mov    _0c24ea_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _063dd9_jump
		mov    _0c24ec_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _063dea_jump

	_063dd9_jump:
		xor    %al,%al
		mov    $_0969c0_data,%edx
		mov    %al,_0cd0e8_data
		jmp    _063eb9_jump

	_063dea_jump:
		movswl %bx,%eax
		cmp    $0x000007,%eax
		jne    _063eb9_jump
		cmpb   $0x000000,_0cd0e8_data
		jne    _063eb9_jump
		mov    _0c2565_data,%cl
		mov    $_0969ae_data,%edx
		test   %cl,%cl
		jne    _063eb9_jump
		movb   $0x000001,_0cd0e8_data
		jmp    _063eb9_jump

	_063e22_case:
		movswl %bx,%eax
		cmp    $0x000010,%eax
		jne    _063eb9_jump
		mov    _0c24ec_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _063eb9_jump
		mov    $_0969d2_data,%edx
		jmp    _063eb9_jump

	_063e49_case:
		movswl %bx,%eax
		cmp    $0x00000a,%eax
		jne    _063eb9_jump
		mov    _0c24ea_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _063eb9_jump
		mov    $_0969d2_data,%edx
		jmp    _063eb9_jump

	_063e69_case:
		movswl %bx,%eax
		cmp    $0x00000b,%eax
		jne    _063eb9_jump
		mov    _0c24ea_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _063e8b_jump
		mov    _0c24ec_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _063eb9_jump

	_063e8b_jump:
		mov    $_096994_data,%edx
		jmp    _063eb9_jump

	_063e92_case:
		movswl %bx,%eax
		cmp    $0x00000b,%eax
		jne    _063eb9_jump
		mov    _0c24ea_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _063eb4_jump
		mov    _0c24ec_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _063eb9_jump

	_063eb4_jump:
		mov    $_0969ec_data,%edx

	_063eb9_jump:
		mov    %edx,_0dbce4_data
		xor    %ah,%ah
		mov    %bx,_0c24f0_data
		mov    %ah,_0cd0d5_data
		test   %edx,%edx
		je     _063edb_jump
		cmpb   $0x000000,_0c2565_data
		je     _063ee4_jump

	_063edb_jump:
		movb   $0x000001,_0cd0d5_data
		jmp    _063f33_jump

	_063ee4_jump:
		mov    $0x000084,%ecx
		mov    $_0c1b1c_data,%esi
		mov    $_0c1c24_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %ch,%ch
		xor    %eax,%eax
		mov    %ch,_0c1b8c_data
		xor    %cl,%cl
		mov    _0c1b85_data,%al
		mov    %cx,_0c1b5c_data
		mov    $0x0000a8,%ecx
		sub    %eax,%ecx
		mov    %cx,_0c1b54_data
		movl   $_063f40_func,_0cd0e4_data

	_063f33_jump:
		mov    _0dbce4_data,%edx
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063f40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_0c1b1c_data,%ebp
		mov    _0c1b28_data,%ecx
		xor    %edi,%edi

	_063f53_jump:
		xor    %eax,%eax
		mov    _0c1b8c_data,%al
		mov    _0dbce4_data,%edx
		add    %eax,%eax
		lea    (%edx,%eax,1),%ebx
		mov    (%ebx),%ax
		movzbw _0c1b8c_data,%si
		cmp    $0x000011,%ax
		jb     _064237_jump
		jbe    _06417e_jump
		cmp    $0x000013,%ax
		jb     _06419f_jump
		jbe    _0640b7_jump
		cmp    $0x000014,%ax
		jbe    _0641ff_jump
		cmp    $0x000015,%ax
		je     _06408d_jump
		jmp    _064260_jump

	_063fa9_jump:
		mov    _0c1b9d_data,%dh
		mov    _0c1b8c_data,%bl
		or     $0x000008,%dh
		inc    %bl
		mov    %dh,_0c1b9d_data
		mov    %bl,_0c1b8c_data
		jmp    _064260_jump

	_063fcb_jump:
		mov    _0c1b9d_data,%bh
		mov    _0c1b8c_data,%al
		and    $0x0000f7,%bh
		inc    %al
		mov    %bh,_0c1b9d_data
		mov    %al,_0c1b8c_data
		jmp    _064260_jump

	_063feb_jump:
		incb   _0c1b8c_data
		xor    %ebx,%ebx
		mov    _0c1b8c_data,%bl
		mov    (%edx,%ebx,2),%dl
		and    $0x0000ff,%edx
		mov    %ebp,%eax
		call   _01d4a0_func
		mov    _0c1b8c_data,%al
		xor    %edx,%edx
		inc    %al
		mov    _0dbce4_data,%ebx
		mov    %al,%dl
		mov    %al,_0c1b8c_data
		mov    (%ebx,%edx,2),%dl
		and    $0x0000ff,%edx
		mov    %ebp,%eax
		call   _01d498_func
		testb  $0x000008,_0c1b9d_data
		je     _06405e_jump
		xor    %edx,%edx
		mov    _0c1b89_data,%dl
		shl    $0x000002,%edx
		lea    (%ecx,%edx,1),%ebx
		xor    %edx,%edx
		mov    _0c1b88_data,%dl
		lea    0x000000(,%edx,8),%eax
		mov    (%ebx),%edx
		movsbw (%edx,%eax,1),%ax
		jmp    _06407c_jump

	_06405e_jump:
		xor    %edx,%edx
		mov    _0c1b89_data,%dl
		shl    $0x000002,%edx
		lea    (%ecx,%edx,1),%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0c1b88_data,%dl
		movsbw 0x000001(%ebx,%edx,8),%ax

	_06407c_jump:
		mov    %ax,_0c1b5c_data
		incb   _0c1b8c_data
		jmp    _064260_jump

	_06408d_jump:
		incb   _0c1b8c_data
		xor    %eax,%eax
		mov    _0c1b8c_data,%al
		mov    (%edx,%eax,2),%ax
		mov    _0c1b8c_data,%dl
		inc    %dl
		mov    %ax,_0c1b52_data
		mov    %dl,_0c1b8c_data
		jmp    _064260_jump

	_0640b7_jump:
		xor    %edx,%edx
		mov    _0c1b89_data,%dl
		lea    0x000000(,%edx,4),%ebx
		mov    _0c1b28_data,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    _0c1b88_data,%bl
		testb  $0x000010,0x000007(%edx,%ebx,8)
		je     _0640f5_jump
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		test   %eax,%eax
		sete   %al
		mov    %eax,%edx
		and    $0x0000ff,%edx
		jmp    _064122_jump

	_0640f5_jump:
		xor    %eax,%eax
		mov    _0c1b86_data,%al
		imul   $0x00000c,%eax,%eax
		mov    _0c1b20_data,%edx
		mov    0x00000a(%edx,%eax,1),%dx
		xor    %ebx,%ebx
		and    $0x00ffff,%edx
		mov    _0c1b87_data,%bl
		dec    %edx
		cmp    %edx,%ebx
		sete   %al
		xor    %edx,%edx
		mov    %al,%dl

	_064122_jump:
		test   %edx,%edx
		je     _064260_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    0x000005(%edx),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _064260_jump
		mov    _0c1b86_data,%al
		cmp    0x000002(%edx),%al
		jne    _064260_jump
		incb   _0c1b8c_data
		jmp    _064260_jump

	_06417e_jump:
		mov    (%ebx),%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    _0c1b87_data,%bl
		cmp    %edx,%ebx
		jne    _064260_jump
		addb   $0x000002,_0c1b8c_data
		jmp    _064260_jump

	_06419f_jump:
		mov    _0c1b52_data,%ax
		cmp    0x000002(%ebx),%ax
		jl     _0641c0_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _0641f6_jump

	_0641c0_jump:
		xor    %edx,%edx
		mov    _0dbce4_data,%ebx
		mov    _0c1b8c_data,%dl
		mov    _0c1b52_data,%ax
		cmp    0x000002(%ebx,%edx,2),%ax
		jg     _064260_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		test   %edx,%edx
		jne    _064260_jump

	_0641f6_jump:
		addb   $0x000002,_0c1b8c_data
		jmp    _064260_jump

	_0641ff_jump:
		incb   _0c1b8c_data
		xor    %ebx,%ebx
		mov    _0c1b8c_data,%bl
		mov    (%edx,%ebx,2),%ax
		mov    %bl,%bh
		inc    %bh
		mov    %ax,_0c1b5c_data
		mov    %bh,_0c1b8c_data
		jmp    _064260_jump

	_064223_jump:
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _01d4a0_func
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _01d498_func
		jmp    _064260_jump

	_064237_jump:
		cmp    $0x000001,%ax
		jb     _064257_jump
		jbe    _063fa9_jump
		cmp    $0x000008,%ax
		jb     _064260_jump
		jbe    _063feb_jump
		cmp    $0x00000e,%ax
		je     _064223_jump
		jmp    _064260_jump

	_064257_jump:
		test   %ax,%ax
		je     _063fcb_jump

	_064260_jump:
		xor    %edx,%edx
		movswl %si,%ebx
		mov    _0c1b8c_data,%dl
		cmp    %edx,%ebx
		jne    _063f53_jump
		xor    %edx,%edx
		mov    _0c1b86_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b20_data,%edx
		mov    0x000008(%edx,%eax,4),%ax
		xor    %al,%al
		and    $0x0000c0,%ah
		and    $0x00ffff,%eax
		sar    $0x00000e,%eax
		inc    %eax
		mov    %al,%dl
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		call   _04d240_func
		and    $0x0000ff,%edx
		mov    _0c2498_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _0642c7_jump
		add    %ax,_0c1b52_data

	_0642c7_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _0642e2_jump
		mov    _0c1b88_data,%al
		test   %eax,%eax
		jne    _0642e2_jump
		movb   $0x000001,_0cd0d5_data

	_0642e2_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0642ec_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000084,%ecx
		mov    $_0c1c24_data,%esi
		xor    %ah,%ah
		mov    $_0c1b1c_data,%edi
		mov    %ah,_0cd0d5_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_064360_func:
		push   $0x000024
		call   _078d9e_func
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		incl   _0dbce8_data
		cmpl   $0x000100,_0dbce8_data
		jl     _064397_jump
		movl   $0x000000,_0dbce8_data

	_064397_jump:
		mov    _0dbce8_data,%edx
		add    %edx,%edx
		mov    _096a46_data(%edx),%edx
		sar    $0x000010,%edx
		movswl -0x000004(%ebp),%eax
		lea    0x000001(%eax),%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %edx,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0643c8_func:
		push   $0x000020
		call   _078d9e_func
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		xor    %eax,%eax
		call   _07a0d4_func
		call   _0796a6_func
		movl   $0x000000,-0x000004(%ebp)
		jmp    _0643fb_jump

	_0643f5_jump:
		mov    -0x000004(%ebp),%eax
		incl   -0x000004(%ebp)

	_0643fb_jump:
		cmpl   $0x000100,-0x000004(%ebp)
		jge    _064417_jump
		call   _079682_func
		mov    -0x000004(%ebp),%edx
		add    %edx,%edx
		mov    %ax,_096a48_data(%edx)
		jmp    _0643f5_jump

	_064417_jump:
		movl   $0x000000,_0dbce8_data
		mov    %ebp,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064430_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0c2573_data
		jne    _06445f_jump
		mov    $_0c1b1c_data,%eax
		call   _072b98_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _06445f_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		mov    %ecx,%eax
		call   _01dcec_func

	_06445f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064464_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0c24d6_data,%dl
		cmp    $0x00000c,%edx
		jne    _064488_jump
		xor    %eax,%eax
		mov    _0c1b44_data,%cx
		mov    _0c1b84_data,%al
		add    %ecx,%eax
		and    $0x0000f0,%al
		jmp    _0644e2_jump

	_064488_jump:
		xor    %edx,%edx
		mov    _0c24d7_data,%dl
		cmp    $0x00000c,%edx
		jne    _0644b2_jump
		xor    %eax,%eax
		mov    _0c1b44_data,%bx
		mov    _0c1b84_data,%al
		add    %ebx,%eax
		sub    $0x00000f,%eax
		mov    %dl,_0c24d6_data
		and    $0x0000f0,%al
		jmp    _0644e2_jump

	_0644b2_jump:
		xor    %edx,%edx
		mov    _0c24d8_data,%dl
		cmp    $0x00000c,%edx
		jne    _0644e2_jump
		xor    %eax,%eax
		mov    _0c1b44_data,%dx
		mov    _0c1b84_data,%al
		add    %edx,%eax
		add    $0x00000f,%eax
		mov    _0c24d8_data,%dl
		and    $0x0000f0,%al
		mov    %dl,_0c24d6_data

	_0644e2_jump:
		xor    %edx,%edx
		cwtl   
		mov    _0c1b84_data,%dl
		add    $0x000008,%eax
		sub    %edx,%eax
		mov    %eax,_0c1b44_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0644fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0c1b44_data,%cx
		mov    _0c1b84_data,%al
		add    %eax,%ecx
		mov    _0c1b90_data,%al
		add    $0x000016,%al
		mov    _0c1b5e_data,%ah
		mov    _0c32e5_data,%dl
		add    %ah,%al
		test   $0x000002,%dl
		je     _064542_jump
		mov    $0x000050,%ebx
		and    $0x0000ff,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		mov    $0x000050,%ebx
		sar    %eax
		sub    %eax,%ebx
		mov    %ebx,%eax

	_064542_jump:
		mov    _0c1b48_data,%dx
		xor    %ah,%ah
		add    %edx,%eax
		cwtl   
		sar    $0x000004,%eax
		movswl %cx,%ecx
		movswl %ax,%ebx
		mov    %ecx,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e288_func
		mov    %al,_0c24d6_data
		and    $0x0000ff,%eax
		cmp    $0x00000c,%eax
		je     _06459d_jump
		lea    -0x000008(%ecx),%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e288_func
		mov    %al,_0c24d7_data
		lea    0x000008(%ecx),%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e288_func
		mov    %al,_0c24d8_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06459d_jump:
		mov    $0x00000f,%dh
		mov    %dh,_0c24d8_data
		mov    %dh,_0c24d7_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0645b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _0645ce_jump
		mov    _0c1b9b_data,%ah
		test   %ah,%ah
		jne    _0646a4_jump

	_0645ce_jump:
		mov    _0c24c2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jle    _0646b0_jump
		xor    %ebx,%ebx
		mov    _0c1b5e_data,%dx
		mov    %bx,_0c1b5e_data
		call   _0644fc_func
		xor    %eax,%eax
		mov    _0c24d6_data,%al
		mov    %dx,_0c1b5e_data
		cmp    $0x00000c,%eax
		je     _064623_jump
		xor    %eax,%eax
		mov    _0c24d7_data,%al
		cmp    $0x00000c,%eax
		je     _064623_jump
		xor    %eax,%eax
		mov    _0c24d8_data,%al
		cmp    $0x00000c,%eax
		jne    _064698_jump

	_064623_jump:
		testb  $0x000018,_0c32e5_data
		jne    _064698_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _06464d_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000008,%eax
		jne    _06464d_jump
		movw   $0x00005a,_0c1b72_data

	_06464d_jump:
		call   _064464_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		xor    %esi,%esi
		mov    $0xffffffff,%edx
		mov    $0x000009,%eax
		mov    %si,_0c1b5c_data
		mov    %si,_0c1b5e_data
		mov    %si,_0c1b6e_data
		mov    %si,_0c2584_data
		call   _06ac04_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064698_jump:
		mov    %dx,_0c1b5e_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0646a4_jump:
		je     _0646b0_jump
		mov    %ah,%cl
		dec    %cl
		mov    %cl,_0c1b9b_data

	_0646b0_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0646b8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,(%esp)
		mov    %dx,0x000014(%esp)
		testb  $0x000002,_0c32e5_data
		je     _0646d8_jump
		mov    $0x000008,%esi
		jmp    _0646dd_jump

	_0646d8_jump:
		mov    $0x000004,%esi

	_0646dd_jump:
		movw   $0x00ffff,_0c1b66_data
		mov    _0c2390_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c1b04_data,%ebp
		add    %edx,%eax
		mov    _0c245a_data,%bx
		shl    $0x000002,%eax
		xor    %ecx,%ecx
		add    %eax,%ebp
		test   %bx,%bx
		jg     _06473f_jump
		jmp    _064f94_jump

	_064714_jump:
		inc    %ecx
		movswl %cx,%ebp
		mov    _0c2390_data(,%ebp,2),%ebp
		sar    $0x000010,%ebp
		imul   $0x000084,%ebp,%ebp
		mov    _0c1b04_data,%eax
		mov    _0c245a_data,%di
		add    %eax,%ebp
		cmp    %di,%cx
		jge    _064f94_jump

	_06473f_jump:
		testb  $0x000020,0x000081(%ebp)
		je     _064714_jump
		mov    0x000014(%esp),%edx
		cmp    0x000034(%ebp),%dx
		je     _064714_jump
		xor    %eax,%eax
		mov    0x000060(%ebp),%ax
		testb  $0x000020,_092245_data(,%eax,4)
		je     _064771_jump
		mov    0x000040(%ebp),%eax
		sar    $0x000010,%eax
		call   _04d240_func
		mov    %eax,%ebx
		jmp    _064775_jump

	_064771_jump:
		mov    0x000042(%ebp),%bx

	_064775_jump:
		mov    _0c1b5e_data,%di
		mov    0x00004c(%ebp),%ax
		sub    %edi,%eax
		add    %eax,%ebx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _06478d_jump
		neg    %eax

	_06478d_jump:
		mov    %eax,%ebx
		add    $0x000002,%ebx
		movswl %si,%edx
		movswl %bx,%eax
		mov    %edx,%ebx
		cmp    %ebx,%eax
		jge    _0647a0_jump
		mov    %ebx,%eax

	_0647a0_jump:
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x000060(%ebp),%ax
		cmp    $0x00006d,%eax
		je     _0647bb_jump
		cmp    $0x0000f1,%eax
		je     _0647bb_jump
		cmp    $0x0000b3,%eax
		jne    _0647be_jump

	_0647bb_jump:
		add    $0x000008,%ebx

	_0647be_jump:
		mov    0x000052(%ebp),%eax
		sar    $0x000010,%eax
		movswl %bx,%edx
		test   %eax,%eax
		jge    _0647cd_jump
		neg    %eax

	_0647cd_jump:
		cmp    %edx,%eax
		jge    _064714_jump
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		call   _024288_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092204_data(%eax)
		jne    _064714_jump
		movswl %cx,%eax
		mov    _0c2392_data(,%eax,2),%ax
		mov    _0c4738_data,%edx
		mov    %ax,_0c1b66_data
		cmp    $0xfffffffe,%edx
		jne    _06482d_jump
		mov    _0c4734_data,%eax
		mov    %eax,%edx
		mov    $0x000002,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     _06482d_jump
		incl   _0c4734_data

	_06482d_jump:
		movw   $0x00ffff,_0c1b6c_data
		xor    %eax,%eax
		mov    $0x000001,%bh
		mov    _0c1b89_data,%al
		mov    %bh,_0c256c_data
		cmp    $0x000002,%eax
		je     _06493d_jump

	_06484e_jump:
		mov    0x000060(%ebp),%ax
		mov    %eax,%edx
		cmp    $0x000057,%ax
		jb     _064dcb_jump
		jbe    _064af6_jump
		cmp    $0x00009a,%ax
		jb     _064d91_jump
		jbe    _064be5_jump
		cmp    $0x0000a7,%ax
		jb     _064d78_jump
		jbe    _064a75_jump
		cmp    $0x0000a9,%ax
		jb     _064e39_jump
		jbe    _064b94_jump
		cmp    $0x0000cf,%ax
		je     _064ca9_jump
		jmp    _064e39_jump

	_0648a3_jump:
		mov    0x000032(%ebp),%edx
		mov    $0x00006e,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		jmp    _06484e_jump

	_0648b5_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		je     _0648db_jump
		cmp    $0x000004,%eax
		je     _0648db_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		call   _06ac04_func
		jmp    _06484e_jump

	_0648db_jump:
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		call   _06ac04_func
		jmp    _06484e_jump

	_0648ef_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		je     _0648db_jump
		cmp    $0x000005,%eax
		je     _0648db_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		call   _06ac04_func
		jmp    _06484e_jump

	_064915_jump:
		mov    $0xffffffff,%edx
		mov    $0x0000f8,%eax
		call   _06ac04_func
		jmp    _06484e_jump

	_064929_jump:
		mov    $0xffffffff,%edx
		mov    $0x000034,%eax
		call   _06ac04_func
		jmp    _06484e_jump

	_06493d_jump:
		mov    0x000060(%ebp),%ax
		cmp    $0x000054,%ax
		jb     _0649d9_jump
		jbe    _06484e_jump
		cmp    $0x0000a0,%ax
		jb     _0649a7_jump
		jbe    _0648a3_jump
		cmp    $0x0000ed,%ax
		jb     _06497f_jump
		jbe    _064915_jump
		cmp    $0x0000f3,%ax
		je     _064929_jump
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		call   _06ac04_func
		jmp    _06484e_jump

	_06497f_jump:
		cmp    $0x0000b2,%ax
		jb     _0648db_jump
		cmp    $0x0000b3,%ax
		jbe    _06484e_jump
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		call   _06ac04_func
		jmp    _06484e_jump

	_0649a7_jump:
		cmp    $0x000056,%ax
		jb     _0648db_jump
		cmp    $0x000058,%ax
		jbe    _06484e_jump
		cmp    $0x00009f,%ax
		je     _06484e_jump
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		call   _06ac04_func
		jmp    _06484e_jump

	_0649d9_jump:
		cmp    $0x000016,%ax
		jb     _064a32_jump
		jbe    _064a0d_jump
		cmp    $0x00001c,%ax
		jb     _064a03_jump
		jbe    _064a0d_jump
		cmp    $0x00003f,%ax
		je     _064a0d_jump
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		call   _06ac04_func
		jmp    _06484e_jump

	_064a03_jump:
		cmp    $0x00001a,%ax
		jb     _0648db_jump

	_064a0d_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		je     _0648db_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		call   _06ac04_func
		jmp    _06484e_jump

	_064a32_jump:
		cmp    $0x000001,%ax
		jb     _0648db_jump
		jbe    _0648b5_jump
		cmp    $0x000010,%ax
		jb     _0648db_jump
		cmp    $0x000011,%ax
		jbe    _0648ef_jump
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		call   _06ac04_func
		jmp    _06484e_jump

	_064a6a_jump:
		movw   $0x000000,0x000052(%ebp)
		jmp    _064e39_jump

	_064a75_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _064e39_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x00000d,%eax
		jne    _064e39_jump
		mov    $0x00000f,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _064e39_jump

	_064aa1_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebp),%al
		cmp    $0x000003,%eax
		jne    _064e39_jump

	_064aaf_jump:
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _058bb4_func
		jmp    _064e39_jump

	_064ac2_jump:
		xor    %eax,%eax
		mov    0x00006c(%ebp),%al
		cmp    $0x000004,%eax
		jne    _064e39_jump
		xor    %eax,%eax
		mov    0x000076(%ebp),%al
		test   %eax,%eax
		jne    _064aea_jump
		mov    $0x000005,%edx
		mov    %ebp,%eax
		call   _01d498_func
		jmp    _064e39_jump

	_064aea_jump:
		mov    %ebp,%eax
		call   _072c80_func
		jmp    _064e39_jump

	_064af6_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		movb   $0x000010,0x00007d(%ebp)
		test   %eax,%eax
		jne    _064b2e_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x000007,%eax
		jne    _064b2e_jump
		mov    $0x000002,%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		mov    0x000032(%ebp),%edx
		mov    $0x00006e,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		jmp    _064e39_jump

	_064b2e_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _064e39_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x000009,%eax
		jne    _064e39_jump
		mov    $0x000002,%ebx
		mov    %ebp,%eax
		mov    %ebx,%edx
		call   _01d4a8_func
		mov    0x000032(%ebp),%edx
		mov    $0x000070,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		jmp    _064e39_jump

	_064b6a_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ebp,%eax
		movb   $0x000010,0x00007d(%ebp)
		call   _01d4a8_func
		mov    0x000032(%ebp),%edx
		mov    $0x00006f,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		jmp    _064e39_jump

	_064b94_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _064e39_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x00000d,%eax
		jne    _064e39_jump
		mov    %ebp,%eax
		call   _07380c_func
		jmp    _064e39_jump

	_064bb9_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _064e39_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x00000a,%eax
		jne    _064e39_jump
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		mov    %ebx,%edx
		call   _058bb4_func
		jmp    _064e39_jump

	_064be5_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _064e39_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x00000d,%eax
		jne    _064e39_jump
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		mov    %ebx,%edx
		call   _058bb4_func
		jmp    _064e39_jump

	_064c11_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _064e39_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x00000f,%eax
		jne    _064e39_jump
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		mov    %ebx,%edx
		call   _058bb4_func
		jmp    _064e39_jump

	_064c3d_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _064e39_jump
		mov    0x00006c(%ebp),%al
		test   %eax,%eax
		jne    _064e39_jump
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _058bb4_func
		jmp    _064e39_jump

	_064c68_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _064c7d_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x00000a,%eax
		je     _064e39_jump

	_064c7d_jump:
		mov    $0x000001,%ebx
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _058bb4_func
		jmp    _064e39_jump

	_064c90_jump:
		testb  $0x000004,_0c32ed_data
		je     _064e39_jump
		mov    %ebp,%eax
		call   _076914_func
		jmp    _064e39_jump

	_064ca9_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _064cbe_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x000001,%eax
		je     _064e39_jump

	_064cbe_jump:
		mov    $0x000001,%ebx
		mov    $_0c32e8_data,%edi
		mov    %ebp,%eax
		xor    %edx,%edx
		mov    $_0c32e4_data,%esi
		call   _01d4a8_func
		mov    $0xffffffff,%edx
		mov    0x000081(%ebp),%cl
		mov    $0x000001,%ebx
		and    $0x0000df,%cl
		mov    _0c32e4_data,%al
		mov    %cl,0x000081(%ebp)
		mov    $0x000001,%ch
		mov    %dx,_0c1b66_data
		mov    %bx,_0c1b5c_data
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    _0c32e5_data,%dl
		or     %ch,%al
		mov    %ch,_0c5184_data
		mov    %al,_0c32e4_data
		mov    %al,%ah
		and    $0x000000,%dl
		and    $0x000001,%ah
		mov    %dl,_0c32e5_data
		mov    %ah,_0c32e4_data
		jmp    _064e39_jump

	_064d33_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		test   %eax,%eax
		jne    _064e39_jump
		mov    0x00006c(%ebp),%al
		cmp    $0x000002,%eax
		jne    _064e39_jump
		mov    $0x000009,%edx
		mov    %ebp,%eax
		call   _01d498_func
		jmp    _064e39_jump

	_064d5d_jump:
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jg     _064d6f_jump
		mov    $0x000002,%eax

	_064d6f_jump:
		mov    %ax,0x00004a(%ebp)
		jmp    _064e39_jump

	_064d78_jump:
		cmp    $0x00009b,%ax
		jbe    _064c11_jump
		cmp    $0x0000a2,%ax
		je     _064c90_jump
		jmp    _064e39_jump

	_064d91_jump:
		cmp    $0x000083,%ax
		jb     _064dbc_jump
		jbe    _064aa1_jump
		cmp    $0x000086,%ax
		jb     _064e39_jump
		jbe    _064a75_jump
		cmp    $0x00008a,%ax
		je     _064bb9_jump
		jmp    _064e39_jump

	_064dbc_jump:
		cmp    $0x000058,%ax
		je     _064b6a_jump
		jmp    _064e39_jump

	_064dcb_jump:
		cmp    $0x00003f,%ax
		jb     _064e07_jump
		jbe    _064c68_jump
		cmp    $0x000044,%ax
		jb     _064dfb_jump
		jbe    _064d5d_jump
		cmp    $0x000051,%ax
		jb     _064e39_jump
		jbe    _064a6a_jump
		cmp    $0x000056,%ax
		je     _064ac2_jump
		jmp    _064e39_jump

	_064dfb_jump:
		cmp    $0x000043,%ax
		je     _064d33_jump
		jmp    _064e39_jump

	_064e07_jump:
		cmp    $0x000010,%ax
		jb     _064e2f_jump
		cmp    $0x000011,%ax
		jbe    _064aaf_jump
		cmp    $0x00001b,%ax
		jb     _064e39_jump
		jbe    _064d5d_jump
		cmp    $0x000031,%ax
		je     _064c3d_jump
		jmp    _064e39_jump

	_064e2f_jump:
		cmp    $0x000008,%ax
		je     _064a75_jump

	_064e39_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _064ed3_jump
		mov    _0c1b28_data,%eax
		mov    0x000004(%eax),%eax
		mov    $0x000004,%cl
		movsbw 0x000018(%eax),%ax
		test   %ax,%ax
		js     _064e62_jump
		sar    %cl,%ax
		jmp    _064e6b_jump

	_064e62_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_064e6b_jump:
		movswl %ax,%edx
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _064e7c_jump
		neg    %eax

	_064e7c_jump:
		cmp    %edx,%eax
		jl     _064ea4_jump
		mov    _0c32e5_data,%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _064ea4_jump
		mov    $0x000003,%ebx
		mov    %eax,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		jmp    _064ed3_jump

	_064ea4_jump:
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		call   _01d4a0_func
		mov    $0x000008,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		mov    _0c1b6c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000c8,%eax
		jle    _064ed3_jump
		call   _064430_func

	_064ed3_jump:
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%ebp),%dl
		mov    %ebp,%eax
		call   _01d840_func
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x000074(%ebp),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b85_data,%al
		sub    %eax,%edx
		mov    _0c1b48_data,%ax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%ebp),%ax
		mov    %dx,_0c1b5e_data
		cmp    $0x0000fe,%eax
		jne    _064f7b_jump
		xor    %eax,%eax
		mov    _0c1b44_data,%ebx
		mov    _0c1b84_data,%al
		mov    0x00000e(%esp),%edx
		add    %eax,%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000011,%eax
		add    %edx,%eax
		sub    %eax,%ebx
		mov    %ebx,0x00000c(%esp)
		movsbw 0x000076(%ebp),%ax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _064f5a_jump
		sar    %cl,%ax
		jmp    _064f63_jump

	_064f5a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_064f63_jump:
		mov    _0c1b5e_data,%si
		xor    %bl,%bl
		sub    %eax,%esi
		mov    %bl,_0c256c_data
		mov    %si,_0c1b5e_data

	_064f7b_jump:
		mov    (%esp),%eax
		mov    $0xffffffff,%edi
		movb   $0x000000,(%eax)
		mov    %di,_0c24d4_data
		mov    %di,_0c1b6e_data

	_064f94_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _064fb9_jump
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _064fb9_jump
		mov    0x000014(%esp),%eax
		mov    %ax,_0c1b66_data
		jmp    _064fdb_jump

	_064fb9_jump:
		mov    _0c1b64_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _064fdb_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		movw   $0x000000,0x000054(%edx,%eax,4)

	_064fdb_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_064fe4_func:
		push   %esi
		and    $0x0000ff,%eax
		mov    _0c1b28_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    %dl,%al
		shl    $0x000003,%eax
		mov    (%esi),%edx
		add    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _065009_jump
		neg    %eax

	_065009_jump:
		sar    $0x000004,%eax
		mov    $0x000070,%ebx
		movsbl %al,%eax
		lea    0x000001(%edx),%esi
		cmp    %ebx,%eax
		jle    _06501d_jump
		mov    %ebx,%eax

	_06501d_jump:
		mov    _0c1b5a_data,%ebx
		mov    %al,%ch
		sar    $0x000010,%ebx
		neg    %ch
		test   %ebx,%ebx
		jle    _065042_jump
		movsbl %al,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		movb   $0x0000f0,(%esi)
		cmp    %ebx,%eax
		jge    _06503e_jump
		mov    %ebx,%eax

	_06503e_jump:
		mov    %al,(%edx)
		pop    %esi
		ret    

	_065042_jump:
		jge    _06505a_jump
		xor    %eax,%eax
		mov    %cl,%al
		movsbl %ch,%ebx
		neg    %eax
		cmp    %ebx,%eax
		jle    _065053_jump
		mov    %ebx,%eax

	_065053_jump:
		mov    %al,(%esi)
		movb   $0x000010,(%edx)
		pop    %esi
		ret    

	_06505a_jump:
		mov    %cl,%al
		neg    %al
		mov    %al,(%esi)
		mov    %cl,(%edx)
		pop    %esi
		ret    



_065064_func:
		push   %ebx
		push   %ecx
		push   %edx
		test   %al,%al
		je     _06512c_jump
		mov    $0x000030,%ecx
		mov    $0x000011,%edx
		mov    _0c2582_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _064fe4_func
		mov    $0x000030,%ecx
		mov    $0x000012,%edx
		mov    _0c2582_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _064fe4_func
		mov    $0x000030,%ecx
		mov    $0x000013,%edx
		mov    _0c2582_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _064fe4_func
		mov    $0x000030,%ecx
		mov    $0x000003,%edx
		mov    _0c2582_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _064fe4_func
		mov    $0x000030,%ecx
		mov    $0x000005,%edx
		mov    _0c2582_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _064fe4_func
		mov    $0x000030,%ecx
		mov    $0x000004,%edx
		mov    _0c2582_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _064fe4_func
		mov    $0x000030,%ecx
		mov    $0x000020,%edx
		jmp    _065235_jump

	_06512c_jump:
		mov    $0x000020,%ecx
		mov    $0x000002,%eax
		mov    _0c2582_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		call   _064fe4_func
		mov    $0x000020,%ecx
		mov    $0x000001,%edx
		mov    _0c2582_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _064fe4_func
		mov    $0x000020,%ecx
		mov    _0c2582_data,%ebx
		mov    $0x000002,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		call   _064fe4_func
		mov    $0x000020,%ecx
		mov    $0x000018,%edx
		mov    _0c2582_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _064fe4_func
		mov    $0x000020,%ecx
		mov    $0x00000b,%edx
		mov    _0c2582_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _064fe4_func
		mov    $0x000020,%ecx
		mov    $0x00000c,%edx
		mov    _0c2582_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _064fe4_func
		mov    $0x000020,%ecx
		mov    $0x00000d,%edx
		mov    _0c2582_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _064fe4_func
		mov    $0x000020,%ecx
		mov    $0x000003,%edx
		mov    _0c2582_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _064fe4_func
		mov    $0x000020,%ecx
		mov    $0x000005,%edx
		mov    _0c2582_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _064fe4_func
		mov    $0x000020,%ecx
		mov    $0x000004,%edx

	_065235_jump:
		mov    _0c2582_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _064fe4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06524c_func:
		push   %edx
		mov    _0c2568_data,%dx
		test   %dx,%dx
		je     _065264_jump
		movw   $0x000001,_0c1b64_data
		pop    %edx
		ret    

	_065264_jump:
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06529a_jump

	_065271_jump:
		mov    %dx,_0c1b64_data
		pop    %edx
		ret    

	_06527a_jump:
		mov    _0c2582_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _065288_jump
		neg    %eax

	_065288_jump:
		cmp    $0x000100,%eax
		jle    _065271_jump
		movw   $0x000001,_0c1b64_data
		pop    %edx
		ret    

	_06529a_jump:
		mov    _0c256c_data,%al
		test   %al,%al
		jbe    _06527a_jump
		cmp    $0x000001,%al
		je     _065271_jump
		pop    %edx
		ret    



_0652ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %ebx,%ebx
		mov    _0c1b89_data,%bl
		mov    _0c1b28_data,%edx
		lea    0x000000(,%ebx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c1b88_data,%dl
		testb  $0x000001,0x000007(%eax,%edx,8)
		je     _065595_jump
		xor    %edx,%edx
		mov    _0c24d3_data,%dl
		mov    $0x000002,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		cmp    $0x000001,%edx
		jne    _065595_jump
		cmp    $0x000007,%ebx
		jne    _065323_jump
		mov    $0x000007,%cl
		mov    _0c1b5c_data,%ax
		cwtl   
		shl    %cl,%eax
		mov    _0c1b5e_data,%cx
		sub    $0x000002,%ecx
		mov    %ax,_0c2584_data
		mov    %cx,_0c1b5e_data
		jmp    _06533c_jump

	_065323_jump:
		cmp    $0x000004,%ebx
		jne    _065333_jump
		movw   $0x00fffd,_0c1b5e_data
		jmp    _06533c_jump

	_065333_jump:
		movw   $0x00fffb,_0c1b5e_data

	_06533c_jump:
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		mov    _0c1b5e_data,%cx
		cmp    $0xffffffff,%eax
		je     _065410_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		mov    0x00004a(%edx,%eax,4),%ebx
		sar    $0x000010,%ebx
		movswl %cx,%eax
		cmp    %ebx,%eax
		jle    _065371_jump
		mov    %ebx,%eax

	_065371_jump:
		mov    %eax,%ecx

	_065373_jump:
		mov    %cx,_0c1b5e_data
		call   _06524c_func
		testb  $0x000002,_0c32e5_data
		je     _065481_jump
		mov    $0x000100,%edx
		jmp    _065486_jump

	_065396_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jle    _065373_jump
		mov    _0c1b5c_data,%cx
		neg    %ecx
		dec    %ecx
		jmp    _065373_jump

	_0653af_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jle    _065373_jump
		mov    $0x000001,%cl
		mov    _0c1b5c_data,%ax
		test   %ax,%ax
		js     _0653ce_jump
		sar    %cl,%ax
		jmp    _0653d7_jump

	_0653ce_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0653d7_jump:
		mov    %eax,%ecx
		neg    %ecx
		dec    %ecx
		jmp    _065373_jump

	_0653de_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff6,%eax
		jge    _065373_jump
		mov    $0x000001,%cl
		mov    _0c1b5c_data,%ax
		test   %ax,%ax
		js     _0653fd_jump
		sar    %cl,%ax
		jmp    _065406_jump

	_0653fd_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_065406_jump:
		mov    %eax,%ecx
		neg    %ecx
		dec    %ecx
		jmp    _065373_jump

	_065410_jump:
		mov    _0c1b7e_data,%al
		cmp    $0x00000c,%al
		jb     _065440_jump
		jbe    _065373_jump
		cmp    $0x000014,%al
		jb     _065430_jump
		cmp    $0x000015,%al
		jbe    _0653af_jump
		cmp    $0x000018,%al
		jb     _0653de_jump
		jmp    _065373_jump

	_065430_jump:
		cmp    $0x000012,%al
		jb     _065373_jump
		jbe    _065396_jump
		jmp    _065463_jump

	_065440_jump:
		cmp    $0x000004,%al
		jb     _065455_jump
		cmp    $0x000005,%al
		jbe    _0653af_jump
		cmp    $0x000008,%al
		jb     _0653de_jump
		jmp    _065373_jump

	_065455_jump:
		cmp    $0x000002,%al
		jb     _065373_jump
		jbe    _065396_jump

	_065463_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffb,%eax
		jge    _065373_jump
		mov    _0c1b5c_data,%cx
		dec    %ecx
		jmp    _065373_jump

	_065481_jump:
		mov    $0x000200,%edx

	_065486_jump:
		cmpb   $0x000000,_0c5184_data
		je     _0654cd_jump
		xor    %eax,%eax
		call   _065064_func
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _0654bc_jump
		mov    _0c1b88_data,%al
		cmp    $0x000028,%eax
		jne    _0654bc_jump
		mov    $0x000019,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		jmp    _06550f_jump

	_0654bc_jump:
		mov    $0x00001b,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		jmp    _06550f_jump

	_0654cd_jump:
		mov    _0c2582_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		test   %eax,%eax
		jge    _0654de_jump
		neg    %eax

	_0654de_jump:
		cmp    %edx,%eax
		setg   %al
		mov    %al,%dl
		xor    %eax,%eax
		mov    %dl,%al
		call   _065064_func
		test   %dl,%dl
		je     _065503_jump
		mov    $0x000011,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		jmp    _06550f_jump

	_065503_jump:
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		xor    %ebx,%ebx

	_06550f_jump:
		call   _01d4a8_func
		mov    $0xffffffff,%edi
		mov    _0c32e5_data,%cl
		xor    %ah,%ah
		xor    %esi,%esi
		mov    %ah,_0c1aee_data
		mov    %si,_0c24c4_data
		mov    %ah,_0c1b8d_data
		mov    %ah,_0c1b8e_data
		mov    %ah,_0c24d3_data
		mov    %ah,_0c1ed4_data
		mov    _0c1b44_data,%ax
		mov    %di,_0c24d4_data
		mov    %ax,_0c2492_data
		mov    _0c1b48_data,%ax
		mov    %di,_0c1b66_data
		mov    %ax,_0c2494_data
		test   $0x000002,%cl
		je     _065595_jump
		mov    $0x000001,%cl
		mov    _0c1b5e_data,%ax
		test   %ax,%ax
		js     _065585_jump
		sar    %cl,%ax
		jmp    _06558e_jump

	_065585_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06558e_jump:
		dec    %eax
		mov    %ax,_0c1b5e_data

	_065595_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06559c_switch:
		.long   _06565f_case
		.long   _06565f_case
		.long   _065669_case
		.long   _06565f_case
		.long   _065671_case
		.long   _06565f_case




_0655b4_func:
		push   %esi
		push   %edi
		sub    $0x000018,%esp
		mov    %al,0x000014(%esp)
		mov    %ebx,%edi
		mov    %ecx,%esi
		xor    %eax,%eax
		mov    0x000014(%esp),%al
		test   %eax,%eax
		jne    _0655d9_jump
		mov    %bx,_0c2584_data
		xor    %ebx,%ebx
		jmp    _06577e_jump

	_0655d9_jump:
		movswl %bx,%ebx
		imul   %ebx,%eax
		mov    $0x000008,%cl
		test   %eax,%eax
		je     _0655e9_jump
		sar    %cl,%eax
		jmp    _0655ef_jump

	_0655e9_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_0655ef_jump:
		mov    %ax,0x000008(%esp)
		xor    %eax,%eax
		mov    $0x000003,%cl
		mov    0x000014(%esp),%al
		test   %ax,%ax
		js     _065606_jump
		sar    %cl,%ax
		jmp    _06560f_jump

	_065606_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06560f_jump:
		test   %ax,%ax
		je     _065619_jump
		movswl %ax,%ebx
		jmp    _06561e_jump

	_065619_jump:
		mov    $0x000001,%ebx

	_06561e_jump:
		mov    $0x000002,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    $0x000003,%cl
		mov    %ax,0x000004(%esp)
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    0x000008(%esp),%ecx
		add    (%esp),%ecx
		add    %eax,%ecx
		mov    _0c24f2_data,%ax
		dec    %eax
		mov    %cx,0x00000c(%esp)
		cmp    $0x000005,%ax
		ja     _065671_case
		and    $0x00ffff,%eax
		jmp    *%cs:_06559c_switch(,%eax,4)

	_06565f_case:
		movl   $0x000006,0x000010(%esp)
		jmp    _065671_case

	_065669_case:
		movl   $0x000003,0x000010(%esp)

	_065671_case:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0656cd_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06569e_jump
		mov    0x000010(%esp),%eax
		mov    $0x000008,%cl
		add    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		jmp    _0656a0_jump

	_06569e_jump:
		xor    %eax,%eax

	_0656a0_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _0656b0_jump
		movswl %di,%edx
		jmp    _0656b2_jump

	_0656b0_jump:
		xor    %edx,%edx

	_0656b2_jump:
		mov    $0x000008,%cl
		add    %eax,%edx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    _0c2584_data,%di
		add    %edx,%eax
		cmp    %di,%ax
		jge    _065728_jump
		mov    %edi,%eax
		jmp    _065728_jump

	_0656cd_jump:
		jge    _065722_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0656f3_jump
		mov    0x000010(%esp),%ecx
		mov    %edx,%eax
		sub    %ecx,%eax
		mov    $0x000008,%cl
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		jmp    _0656f5_jump

	_0656f3_jump:
		xor    %eax,%eax

	_0656f5_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jge    _065705_jump
		movswl %di,%edx
		jmp    _065707_jump

	_065705_jump:
		xor    %edx,%edx

	_065707_jump:
		mov    $0x000008,%cl
		add    %eax,%edx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    _0c2584_data,%si
		add    %edx,%eax
		cmp    %si,%ax
		jle    _065728_jump
		mov    %esi,%eax
		jmp    _065728_jump

	_065722_jump:
		mov    _0c2584_data,%ax

	_065728_jump:
		cmpw   $0x000000,0x00000c(%esp)
		je     _06577e_jump
		mov    0x00000c(%esp),%esi
		mov    _0c2584_data,%dx
		movswl %ax,%ecx
		add    %esi,%edx
		test   %ecx,%ecx
		jle    _06575f_jump
		cmp    _0c2584_data,%ax
		jle    _065754_jump
		mov    %dx,_0c2584_data

	_065754_jump:
		cmp    _0c2584_data,%ax
		jge    _06577e_jump
		jmp    _065778_jump

	_06575f_jump:
		cmp    _0c2584_data,%ax
		jge    _06576f_jump
		mov    %dx,_0c2584_data

	_06576f_jump:
		cmp    _0c2584_data,%ax
		jle    _06577e_jump

	_065778_jump:
		mov    %ax,_0c2584_data

	_06577e_jump:
		mov    _0c2584_data,%di
		test   %di,%di
		je     _0657ec_jump
		mov    $0x000004,%cl
		mov    %edi,%eax
		test   %ax,%ax
		js     _065798_jump
		sar    %cl,%ax
		jmp    _0657a1_jump

	_065798_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0657a1_jump:
		cwtl   
		xor    %edx,%edx
		call   _04d240_func
		mov    %ax,_0c1b5c_data
		mov    $_0c1b1c_data,%eax
		call   _024568_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092204_data(%eax)
		je     _0657f3_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		je     _0657f3_jump
		xor    %edx,%edx
		mov    %dx,_0c1b5c_data
		mov    %dx,_0c2584_data
		mov    %dx,_0c1b64_data
		jmp    _0657f3_jump

	_0657ec_jump:
		mov    %di,_0c1b5c_data

	_0657f3_jump:
		xor    %edx,%edx
		mov    _0c1b89_data,%dl
		test   %edx,%edx
		je     _065809_jump
		cmp    $0x000001,%edx
		je     _065809_jump
		cmp    $0x000003,%edx
		jne    _065820_jump

	_065809_jump:
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _065820_jump
		mov    $_0c1b1c_data,%eax
		call   _024ba8_func

	_065820_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _06583b_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000f,%eax
		jne    _06583b_jump
		add    $0x000002,%ebx

	_06583b_jump:
		mov    _0c2584_data,%di
		cmp    %di,%bx
		jg     _065854_jump
		mov    %edi,%ecx
		sub    %ebx,%ecx
		mov    %cx,_0c2584_data
		jmp    _06587f_jump

	_065854_jump:
		movswl %bx,%eax
		mov    _0c2582_data,%edx
		neg    %eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _065877_jump
		mov    %edi,%edx
		add    %ebx,%edx
		mov    %dx,_0c2584_data
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		ret    

	_065877_jump:
		xor    %eax,%eax
		mov    %ax,_0c2584_data

	_06587f_jump:
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		ret    

_065888_switch:
		.long   _065bf4_case
		.long   _065c46_case
		.long   _065be2_case
		.long   _065be2_case
		.long   _065beb_case
		.long   _065beb_case




_0658a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0c24f2_data,%ax
		xor    %esi,%esi
		cmp    $0x000003,%ax
		jne    _0658ba_jump
		mov    $0x000020,%bh
		jmp    _0658bc_jump

	_0658ba_jump:
		mov    $0x000010,%bh

	_0658bc_jump:
		mov    _0c1b64_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _065a3c_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		testb  $0x000020,0x000081(%ecx)
		jne    _0658f2_jump
		movw   $0x00ffff,_0c1b66_data

	_0658f2_jump:
		mov    0x000052(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0658fe_jump
		neg    %eax

	_0658fe_jump:
		cmp    $0x000008,%eax
		jg     _06591e_jump
		mov    0x000052(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _06591e_jump
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _065a3c_jump

	_06591e_jump:
		mov    _0c1b64_data,%edx
		mov    %esp,%eax
		sar    $0x000010,%edx
		call   _0646b8_func
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _065a3c_jump
		mov    0x000052(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06594b_jump
		neg    %eax

	_06594b_jump:
		cmp    $0x000008,%eax
		jle    _065a3c_jump
		xor    %eax,%eax
		mov    $0xffffffff,%edi
		mov    0x000060(%ecx),%ax
		mov    %di,_0c1b66_data
		cmp    $0x0000fe,%eax
		jne    _065976_jump
		movw   $0x000001,_0c1b64_data

	_065976_jump:
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		mov    _0c1b89_data,%cl
		call   _01d4a0_func
		cmpb   $0x000000,_0c5184_data
		je     _0659ba_jump
		xor    %eax,%eax
		mov    %cl,%al
		test   %eax,%eax
		jne    _0659b0_jump
		mov    _0c1b88_data,%al
		cmp    $0x000028,%eax
		jne    _0659b0_jump
		mov    $0x00001a,%edx
		jmp    _065a22_jump

	_0659b0_jump:
		mov    $0x00001c,%edx
		jmp    _065a22_jump

	_0659ba_jump:
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x000001,%eax
		jne    _0659fa_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000009,%eax
		je     _0659d4_jump
		cmp    $0x00000b,%eax
		jne    _0659fa_jump

	_0659d4_jump:
		mov    _0c1b9d_data,%dh
		test   $0x000008,%dh
		sete   %al
		mov    %dh,%ch
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		mov    %ch,%ah
		mov    %ch,_0c1b9d_data
		or     %al,%ah
		mov    %ah,_0c1b9d_data

	_0659fa_jump:
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x000001,%eax
		jne    _065a1d_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000003,%eax
		jne    _065a16_jump
		mov    $0x000020,%edx
		jmp    _065a22_jump

	_065a16_jump:
		mov    $0x000018,%edx
		jmp    _065a22_jump

	_065a1d_jump:
		mov    $0x000001,%edx

	_065a22_jump:
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		xor    %edx,%edx
		mov    %dx,_0c1b6e_data
		mov    %dx,_0c24c4_data

	_065a3c_jump:
		cmpb   $0x000000,_0c256e_data
		jne    _065a4f_jump
		mov    $_0c1b1c_data,%eax
		call   _04d2c4_func

	_065a4f_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000001,%eax
		jne    _065a78_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000009,%eax
		je     _065a71_jump
		cmp    $0x000030,%eax
		je     _065a71_jump
		cmp    $0x00000b,%eax
		jne    _065a78_jump

	_065a71_jump:
		negw   _0c1b5c_data

	_065a78_jump:
		mov    $0x000004,%cl
		mov    _0c1b5c_data,%ax
		cwtl   
		shl    %cl,%eax
		mov    _0c1b5c_data,%dx
		mov    %eax,%edi
		test   %dx,%dx
		je     _065ac8_jump
		cwtl   
		test   %eax,%eax
		jge    _065a98_jump
		neg    %eax

	_065a98_jump:
		cmp    $0x000100,%eax
		jg     _065aa3_jump
		mov    $0x0000ff,%al
		jmp    _065aa5_jump

	_065aa3_jump:
		xor    %al,%al

	_065aa5_jump:
		mov    _0c2566_data,%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _065abc_jump
		addw   $0x00000a,_0c1b5c_data
		jmp    _065aca_jump

	_065abc_jump:
		jge    _065aca_jump
		subw   $0x00000a,_0c1b5c_data
		jmp    _065aca_jump

	_065ac8_jump:
		xor    %al,%al

	_065aca_jump:
		xor    %ecx,%ecx
		mov    _0c1b89_data,%cl
		cmp    $0x000002,%ecx
		jne    _065b29_jump
		xor    %edx,%edx
		mov    _0c1b88_data,%dl
		cmp    $0x00000f,%edx
		je     _065aee_jump
		cmpw   $0x000000,_0c1b64_data
		je     _065b20_jump

	_065aee_jump:
		testb  $0x000008,_0c1b9d_data
		je     _065b03_jump
		mov    _0c2582_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _065b18_jump

	_065b03_jump:
		testb  $0x000008,_0c1b9d_data
		jne    _065b1c_jump
		mov    _0c2582_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _065b1c_jump

	_065b18_jump:
		mov    $0x00000c,%bl
		jmp    _065b22_jump

	_065b1c_jump:
		mov    $0x000008,%bl
		jmp    _065b22_jump

	_065b20_jump:
		mov    %al,%bl

	_065b22_jump:
		xor    %esi,%esi
		jmp    _065bb0_jump

	_065b29_jump:
		test   %ecx,%ecx
		je     _065b3b_jump
		cmp    $0x000001,%ecx
		je     _065b3b_jump
		cmp    $0x000003,%ecx
		jne    _065bb0_jump

	_065b3b_jump:
		mov    _0c1b64_data,%esi
		sar    $0x000010,%esi
		cmp    $0xffffffff,%esi
		je     _065c21_jump
		mov    %esi,%eax
		shl    $0x000005,%eax
		add    %esi,%eax
		mov    _0c1b04_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x0000fe,%eax
		jne    _065bac_jump
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _065b78_jump
		neg    %eax

	_065b78_jump:
		lea    0x000001(%eax),%ecx
		mov    $0x0000ff,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000001,%cl
		mov    %al,%bl
		movsbw 0x000076(%esi),%ax
		test   %ax,%ax
		js     _065b9a_jump
		sar    %cl,%ax
		jmp    _065ba3_jump

	_065b9a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_065ba3_jump:
		mov    %eax,%esi
		neg    %esi
		jmp    _065bb0_jump

	_065bac_jump:
		xor    %bl,%bl
		xor    %esi,%esi

	_065bb0_jump:
		xor    %eax,%eax
		mov    _0c5184_data,%al
		cmp    $0x000001,%eax
		jne    _065bbe_jump
		shr    %bl

	_065bbe_jump:
		mov    _0c2566_data,%ecx
		movswl %di,%eax
		movswl %si,%edx
		sar    $0x000010,%ecx
		movzbl %bl,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _0655b4_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065be2_case:
		mov    $0xfffffffc,%esi
		mov    %bh,%bl
		jmp    _065bb0_jump

	_065beb_case:
		mov    $0x000004,%esi
		mov    %bh,%bl
		jmp    _065bb0_jump

	_065bf4_case:
		mov    $0xfffffffa,%esi
		mov    %bh,%bl
		jmp    _065bb0_jump

	_065bfd_jump:
		mov    _0c1b81_data,%ah
		sub    $0x000012,%ah
		cmp    $0x000005,%ah
		ja     _065b20_jump
		xor    %edx,%edx
		mov    %ah,%dl
		jmp    *%cs:_065888_switch(,%edx,4)

	_065c1b_jump:
		mov    %al,%bl
		xor    %esi,%esi
		jmp    _065bb0_jump

	_065c21_jump:
		mov    _0c1b7e_data,%bl
		cmp    $0x00000f,%bl
		jb     _065c52_jump
		jbe    _065bfd_jump
		cmp    $0x000014,%bl
		jb     _065c3f_jump
		cmp    $0x000015,%bl
		jbe    _065be2_case
		cmp    $0x000018,%bl
		jb     _065beb_case
		jmp    _065c74_jump

	_065c3f_jump:
		cmp    $0x000012,%bl
		jb     _065c74_jump
		jbe    _065bf4_case

	_065c46_case:
		mov    $0x000006,%esi
		mov    %bh,%bl
		jmp    _065bb0_jump

	_065c52_jump:
		cmp    $0x000002,%bl
		jb     _065c74_jump
		cmp    $0x000007,%bl
		jbe    _065b20_jump
		cmp    $0x00000c,%bl
		jb     _065c74_jump
		jbe    _065b20_jump
		cmp    $0x00000e,%bl
		je     _065b20_jump

	_065c74_jump:
		xor    %edx,%edx
		mov    _0c1b7e_data,%dl
		testb  $0x000001,_092204_data(%edx)
		jne    _065ca1_jump
		xor    %edx,%edx
		mov    _0c1b82_data,%dl
		mov    _092204_data(%edx),%cl
		test   $0x000008,%cl
		jne    _065ca1_jump
		test   $0x000002,%cl
		jne    _065c1b_jump

	_065ca1_jump:
		cmpw   $0x000000,_0c1b5c_data
		jne    _065cc3_jump
		cmpw   $0x000000,_0c2584_data
		jne    _065cc3_jump
		cmpw   $0x000000,_0c2568_data
		je     _065c1b_jump

	_065cc3_jump:
		mov    %bh,%bl
		xor    %esi,%esi
		jmp    _065bb0_jump

_065ccc_switch:
		.long   _065d43_case
		.long   _065d7a_case
		.long   _065d7a_case
		.long   _065d43_case
		.long   _065d43_case
		.long   _065d43_case
		.long   _065d7a_case
		.long   _065d43_case
		.long   _065d1d_case
		.long   _065d30_case
		.long   _065d1d_case
		.long   _065d30_case




_065cfc_func:
		push   %ebx
		push   %edx
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000001,%eax
		je     _065d53_jump
		mov    _0c1b64_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _065d53_jump
		jmp    _065d97_jump

	_065d1d_case:
		mov    $0x00002f,%ebx
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _065d7a_case

	_065d30_case:
		mov    $0x000030,%ebx
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _065d7a_case

	_065d43_case:
		mov    $_0c1b1c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _065d7a_case

	_065d53_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0c1b88_data,%al
		add    %edx,%eax
		sub    $0x000100,%eax
		cmp    $0x00000b,%eax
		ja     _065d7a_case
		jmp    *%cs:_065ccc_switch(,%eax,4)

	_065d7a_case:
		mov    _0c2584_data,%bx
		test   %bx,%bx
		jne    _065dba_jump
		mov    %bx,_0c1b5e_data
		mov    %bx,_0c1b5c_data
		pop    %edx
		pop    %ebx
		ret    

	_065d97_jump:
		cmp    $0x000004,%eax
		jne    _065dba_jump
		cmpb   $0x000000,_0c1ed4_data
		jne    _065dba_jump
		xor    %edx,%edx
		mov    $_0c1b1c_data,%eax
		mov    %dx,_0c1b5e_data
		xor    %edx,%edx
		call   _01d498_func

	_065dba_jump:
		pop    %edx
		pop    %ebx
		ret    



_065dc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%ebx
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _065ef2_jump
		xor    %eax,%eax
		mov    _0c24d3_data,%al
		cmp    $0x000001,%eax
		jne    _065ef2_jump
		call   *_0cd00c_data
		cwtl   
		test   %eax,%eax
		je     _065ef2_jump
		testb  $0x000008,_0c32e4_data
		je     _065eaa_jump
		testb  $0x000018,_0c32e5_data
		jne    _065eaa_jump
		mov    $0x000002,%ah
		mov    $0x00000e,%edx
		mov    %ah,_0c24d3_data
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		mov    0x000005(%edx,%eax,8),%cl
		and    $0x00000f,%cl
		mov    %cl,%ch
		or     $0x000030,%ch
		mov    %ch,0x000005(%edx,%eax,8)
		mov    0x000008(%ebx),%eax
		mov    0x00007d(%eax),%dl
		xor    %esi,%esi
		and    $0x00000f,%dl
		mov    %si,_0c25d4_data
		mov    %dl,%dh
		xor    %cl,%cl
		or     $0x000020,%dh
		mov    %cl,_0c2572_data
		mov    %dh,0x00007d(%eax)
		mov    $0xffffffff,%edx
		xor    %al,%al
		mov    %dx,_0c24d4_data
		mov    %edx,%ecx
		mov    %dx,_0c1b6e_data
		xor    %dh,%ch
		mov    %al,_0c25d6_data
		mov    %ch,_0c1b9b_data
		jmp    _065ef2_jump

	_065eaa_jump:
		testb  $0x000004,_0c32e4_data
		je     _065ef2_jump
		testb  $0x000018,_0c32e5_data
		jne    _065ef2_jump
		mov    $0x000002,%dh
		mov    $_0c1b1c_data,%eax
		mov    $0x000032,%edi
		mov    %dh,_0c24d3_data
		mov    $0x000003,%edx
		xor    %cl,%cl
		call   _01d498_func
		mov    $0xffffffff,%eax
		mov    %cl,_0c1b87_data
		mov    %di,_0c24d4_data
		mov    %ax,_0c1b6e_data

	_065ef2_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000f,%eax
		jne    _065f3c_jump
		xor    %edx,%edx
		mov    _0c1b89_data,%dl
		lea    0x000000(,%eax,8),%ecx
		mov    (%ebx,%edx,4),%eax
		add    %ecx,%eax
		mov    0x000005(%eax),%dl
		mov    %dl,%dh
		xor    %ecx,%ecx
		shr    $0x000004,%dh
		mov    %dh,%cl
		cmp    $0x000002,%ecx
		jne    _065f3c_jump
		and    $0x00000f,%dl
		mov    %dl,%ch
		or     $0x0000a0,%ch
		mov    %ch,0x000005(%eax)
		xor    %al,%al
		mov    %al,_0c1b8d_data
		movb   $0x000014,_0c1b8e_data

	_065f3c_jump:
		xor    %eax,%eax
		mov    _0c24d3_data,%al
		cmp    $0x000003,%eax
		jne    _065f53_jump
		call   *_0cd00c_data
		cwtl   
		test   %eax,%eax
		jne    _065f63_jump

	_065f53_jump:
		mov    _0c24d2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _066123_jump

	_065f63_jump:
		testb  $0x000008,_0c32e4_data
		je     _0660f7_jump
		testb  $0x000018,_0c32e5_data
		jne    _0660f7_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000f,%eax
		jne    _066123_jump
		mov    _0c24d2_data,%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		je     _066123_jump
		xor    %cl,%cl
		mov    $0x000001,%dl
		mov    %cl,_0c1b8d_data
		mov    %dl,_0c2572_data
		xor    %edx,%edx
		mov    $0x000002,%ch
		mov    _0c1b89_data,%dl
		mov    %ch,_0c24d3_data
		mov    (%ebx,%edx,4),%edx
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %bl,%bh
		or     $0x0000a0,%bh
		mov    $0x000014,%cl
		mov    %bh,0x000005(%edx,%eax,8)
		mov    $0xffffffff,%edx
		mov    %cl,_0c1b8e_data
		mov    _0c25d6_data,%ch
		xor    %eax,%eax
		inc    %ch
		mov    %dx,_0c1b5e_data
		mov    %ch,%al
		mov    %ch,_0c25d6_data
		cmp    $0x000002,%eax
		jl     _0660e8_jump
		mov    _0c25d6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _0660cf_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _066044_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jg     _066044_jump
		call   _040ab0_func
		test   %ax,%ax
		je     _066044_jump
		movw   $0x00ffd0,_0c1b5c_data
		jmp    _066090_jump

	_066044_jump:
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06607b_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jl     _06607b_jump
		call   _040b24_func
		test   %ax,%ax
		je     _06607b_jump
		movw   $0x000030,_0c1b5c_data
		jmp    _066090_jump

	_06607b_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _066090_jump
		movw   $0x00fffe,_0c1b5e_data

	_066090_jump:
		mov    $0x000046,%edx
		mov    $0x000004,%cl
		mov    _0c2566_data,%ebx
		xor    %ah,%ah
		mov    %dx,_0c24d4_data
		mov    %ah,_0c25d6_data
		mov    _0c1b5c_data,%ax
		sar    $0x000010,%ebx
		cwtl   
		shl    %cl,%eax
		xor    %edx,%edx
		cwtl   
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    $0x0000ff,%eax
		call   _0655b4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0660cf_jump:
		mov    $0x000001,%al
		mov    $0x000014,%ecx
		mov    %al,_0c25d6_data
		mov    %cx,_0c25d8_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0660e8_jump:
		movw   $0x000014,_0c25d8_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0660f7_jump:
		mov    $0x000004,%dl
		mov    $_0c1b1c_data,%eax
		mov    $0xffffffff,%ebx
		mov    %dl,_0c24d3_data
		mov    $0x000005,%edx
		xor    %ecx,%ecx
		call   _01d498_func
		mov    %bx,_0c24d4_data
		mov    %cx,_0c1b6e_data

	_066123_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06612c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%ecx
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _066155_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000008,%eax
		jne    _066155_jump
		movw   $0x00005a,_0c1b72_data

	_066155_jump:
		mov    $0x000005,%edx
		mov    $_0c1b1c_data,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		mov    _0c1b74_data,%eax
		mov    $0x000020,%edx
		sar    $0x000010,%eax
		call   _01d23c_func
		testb  $0x000002,_0c32e5_data
		je     _066188_jump
		mov    $0x000003,%edx
		jmp    _06618d_jump

	_066188_jump:
		mov    $0x000007,%edx

	_06618d_jump:
		testb  $0x000008,_0c1b9d_data
		je     _0661a5_jump
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    $0x000010,%edx
		sub    %ebx,%edx
		mov    %edx,%ebx
		jmp    _0661a9_jump

	_0661a5_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl

	_0661a9_jump:
		testb  $0x000002,_0c32e5_data
		je     _0661b7_jump
		add    $0x000025,%eax

	_0661b7_jump:
		movswl %cx,%edx
		sar    $0x000004,%edx
		cwtl   
		shl    $0x000004,%edx
		mov    $0xffffffff,%edi
		sub    %eax,%edx
		mov    %di,_0c1b66_data
		mov    %edx,_0c1b48_data
		movswl %si,%eax
		xor    %edx,%edx
		sar    $0x000004,%eax
		mov    _0c1b84_data,%dl
		shl    $0x000004,%eax
		xor    %ecx,%ecx
		sub    %edx,%eax
		movswl %bx,%edx
		dec    %eax
		mov    %cx,_0c2584_data
		add    %edx,%eax
		xor    %ebx,%ebx
		mov    %eax,_0c1b44_data
		mov    %bx,_0c1b5e_data
		mov    %bx,_0c1b5c_data
		xor    %dh,%dh
		mov    %bx,_0c1b6e_data
		mov    %dh,_0c1b8d_data
		xor    %bl,%bl
		xor    %dl,%dl
		mov    %bl,_0c1b8e_data
		mov    %dx,_0c24c4_data
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_066234_func:
		push   %edx
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c24bc_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		sete   %al
		xor    %ah,%ah
		pop    %edx
		ret    



_06625c_func:
		push   %edx
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c24bc_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    _092204_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		xor    %ah,%ah

	_066283_case:
		pop    %edx
		ret    



_066288_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		testb  $0x000002,_0c32e4_data
		je     _066540_jump
		testb  $0x000018,_0c32e5_data
		jne    _066540_jump
		xor    %eax,%eax
		mov    _0c1b44_data,%dx
		mov    _0c1b84_data,%al
		add    %eax,%edx
		mov    %dx,0x000010(%esp)
		mov    0x00000e(%esp),%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		mov    $0x000001,%ebx
		sar    $0x000004,%eax
		mov    _0c24b2_data,%ecx
		mov    %ax,0x000018(%esp)
		sar    $0x000010,%ecx
		mov    0x000016(%esp),%eax
		sub    $0x000002,%ecx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _0662f8_jump
		cmp    %ecx,%eax
		jg     _0662f8_jump
		mov    $0x000001,%eax
		jmp    _0662fa_jump

	_0662f8_jump:
		xor    %eax,%eax

	_0662fa_jump:
		test   %eax,%eax
		je     _066540_jump
		xor    %eax,%eax
		mov    _0c1b90_data,%al
		mov    _0c1b48_data,%dx
		mov    %eax,%edi
		add    %edx,%edi
		mov    _0c1b76_data,%bx
		add    $0x000020,%edi
		test   %bx,%bx
		je     _066348_jump
		xor    %eax,%eax
		mov    _0c1b85_data,%al
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01d1ec_func
		mov    _0c1b74_data,%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		call   _01d2a0_func
		mov    %eax,%edi

	_066348_jump:
		testb  $0x000008,_0c1b9d_data
		je     _066358_jump
		mov    $0x000001,%eax
		jmp    _06635d_jump

	_066358_jump:
		mov    $0xffffffff,%eax

	_06635d_jump:
		mov    _0c24b2_data,%edx
		mov    %ax,0x000014(%esp)
		movswl %di,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		mov    0x000016(%esp),%ecx
		sar    $0x000010,%ecx
		add    %eax,%ecx
		mov    0x000012(%esp),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		sub    %edx,%ebx
		add    %eax,%ebx
		mov    %ebx,(%esp)
		test   %ebx,%ebx
		jl     _066540_jump
		lea    (%ecx,%edx,1),%esi
		lea    (%esi,%edx,1),%ebx
		lea    (%ebx,%edx,1),%ebp
		lea    (%ebx,%eax,1),%edx
		mov    %ebp,0x000008(%esp)
		mov    %edx,0x00000c(%esp)
		lea    (%ecx,%eax,1),%ebp
		lea    (%esi,%eax,1),%edx
		mov    _0c1b76_data,%ax
		mov    %edx,0x000004(%esp)
		test   %ax,%ax
		je     _0663c2_jump
		mov    %ebx,0x000008(%esp)

	_0663c2_jump:
		mov    %ebp,%eax
		call   _06625c_func
		test   %ax,%ax
		jne    _0663ee_jump
		mov    0x000004(%esp),%eax
		call   _06625c_func
		test   %ax,%ax
		jne    _0663ee_jump
		mov    0x00000c(%esp),%eax
		call   _06625c_func
		test   %ax,%ax
		je     _066540_jump

	_0663ee_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _066540_jump
		mov    _0c24c2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jle    _066540_jump
		mov    %ecx,%eax
		call   _066234_func
		test   %ax,%ax
		je     _066469_jump
		mov    %ebx,%eax
		call   _066234_func
		test   %ax,%ax
		je     _066469_jump
		mov    %esi,%eax
		call   _066234_func
		test   %ax,%ax
		je     _066469_jump
		mov    (%esp),%eax
		call   _066234_func
		test   %ax,%ax
		je     _066469_jump
		mov    0x000008(%esp),%eax
		call   _066234_func
		test   %ax,%ax
		je     _066469_jump
		mov    %ebp,%eax
		call   _06625c_func
		test   %ax,%ax
		je     _066469_jump
		mov    0x00000e(%esp),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		jmp    _06653b_jump

	_066469_jump:
		mov    _0c1b74_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _066540_jump
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jge    _06649e_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _066540_jump

	_06649e_jump:
		mov    _0c24b2_data,%eax
		mov    0x000016(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    $0x000003,%eax
		cmp    %edx,%eax
		jge    _0664ca_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		je     _066540_jump

	_0664ca_jump:
		mov    0x000012(%esp),%edx
		mov    %ecx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		call   _066234_func
		test   %ax,%ax
		je     _066540_jump
		mov    %ebx,%eax
		sub    %edx,%eax
		call   _066234_func
		test   %ax,%ax
		je     _066540_jump
		mov    %esi,%eax
		sub    %edx,%eax
		call   _066234_func
		test   %ax,%ax
		je     _066540_jump
		mov    (%esp),%eax
		sub    %edx,%eax
		call   _066234_func
		test   %ax,%ax
		je     _066540_jump
		mov    0x000008(%esp),%eax
		sub    %edx,%eax
		call   _066234_func
		test   %ax,%ax
		je     _066540_jump
		mov    %ebp,%eax
		sub    %edx,%eax
		call   _06625c_func
		test   %ax,%ax
		je     _066540_jump
		mov    0x000014(%esp),%eax
		mov    0x000010(%esp),%ebx
		shl    $0x000004,%eax
		sub    %eax,%ebx
		movswl %di,%edx
		movswl %bx,%eax

	_06653b_jump:
		call   _06612c_func

	_066540_jump:
		add    $0x00001c,%esp
		pop    %ebp

	_066544_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06654c_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0c5184_data
		je     _066581_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _066577_jump
		mov    _0c1b88_data,%al
		cmp    $0x000028,%eax
		jne    _066577_jump
		mov    $0x00001a,%ebx
		jmp    _0665f1_jump

	_066577_jump:
		mov    $0x00001c,%ebx
		jmp    _0665f1_jump

	_066581_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000001,%eax
		jne    _0665bf_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000b,%eax
		jne    _0665bf_jump
		mov    _0c1b9d_data,%dl
		test   $0x000008,%dl
		sete   %al
		mov    %dl,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0c1b9d_data
		or     %al,%bl
		mov    %bl,_0c1b9d_data

	_0665bf_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000005,%eax
		jne    _0665d2_jump
		mov    $0x000001,%ebx
		jmp    _0665f1_jump

	_0665d2_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0665e0_jump
		neg    %eax

	_0665e0_jump:
		cmp    $0x000002,%eax
		jg     _0665ec_jump
		mov    $0x000018,%ebx
		jmp    _0665f1_jump

	_0665ec_jump:
		mov    $0x000020,%ebx

	_0665f1_jump:
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		mov    $0xffffffff,%ebx
		xor    %edx,%edx
		mov    $0xffffffff,%ecx
		mov    %dx,_0c24c4_data
		mov    %bx,_0c24d4_data
		xor    %bh,%bh
		mov    %cx,_0c1b66_data
		mov    %bh,_0c1b8d_data
		mov    %bh,_0c1b8e_data
		mov    %bh,_0c24d3_data
		mov    %bh,_0c1ed4_data
		call   _06524c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_066644_switch:
		.long   _06670f_case
		.long   _066967_case
		.long   _066544_jump
		.long   _066544_jump
		.long   _06667f_case
		.long   _066a05_case
		.long   _066a17_case




_066660_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c1b89_data,%al
		cmp    $0x000006,%al
		ja     _066544_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_066644_switch(,%eax,4)

	_06667f_case:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000b,%eax
		je     _066700_jump
		cmp    $0x00000c,%eax
		je     _066700_jump
		mov    _0c1b74_data,%eax
		mov    $0x000001,%ecx
		sar    $0x000010,%eax
		mov    %cx,_0c1b5e_data
		test   %eax,%eax
		je     _0666bf_jump
		cmpb   $0x000000,_0c249a_data
		je     _0666bf_jump
		mov    $_0c1b1c_data,%eax
		call   _04dbe4_func

	_0666bf_jump:
		call   _0644fc_func
		xor    %eax,%eax
		mov    _0c24d6_data,%al
		cmp    $0x00000c,%eax
		je     _0666db_jump
		call   _06654c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0666db_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000003,%eax
		je     _066544_jump
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066700_jump:
		xor    %esi,%esi
		mov    %si,_0c1b5e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06670f_case:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		test   %eax,%eax
		je     _0667c0_jump
		cmp    $0x000001,%eax
		je     _0667c0_jump
		cmp    $0x000002,%eax
		je     _0667c0_jump
		cmp    $0x000003,%eax
		je     _0667c0_jump
		cmp    $0x000031,%eax
		je     _0667c0_jump
		cmp    $0x000008,%eax
		je     _0667c0_jump
		cmp    $0x00002b,%eax
		je     _0667c0_jump
		cmp    $0x000024,%eax
		je     _0667c0_jump
		cmp    $0x000025,%eax
		je     _0667c0_jump
		cmp    $0x000026,%eax
		je     _0667c0_jump
		cmp    $0x000027,%eax
		je     _0667c0_jump
		cmp    $0x000028,%eax
		je     _0667c0_jump
		cmp    $0x000029,%eax
		je     _0667c0_jump
		cmp    $0x00002a,%eax
		je     _0667c0_jump
		cmp    $0x00000d,%eax
		je     _0667c0_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00003b,%eax
		je     _0667c0_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00003e,%eax
		je     _0667c0_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00003f,%eax
		je     _0667c0_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000040,%eax
		je     _0667c0_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000041,%eax
		jne    _0667cf_jump

	_0667c0_jump:
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		jmp    _066952_jump

	_0667cf_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000014,%eax
		jne    _0668f8_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b28_data,%eax
		lea    (%eax,%edx,1),%ebx
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		lea    0x000000(,%eax,8),%edx
		mov    (%ebx),%eax
		testb  $0x000010,0x000007(%edx,%eax,1)
		je     _066817_jump
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		test   %eax,%eax
		jmp    _066849_jump

	_066817_jump:
		xor    %edx,%edx
		mov    _0c1b86_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b20_data,%eax
		mov    0x00000a(%edx,%eax,1),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1b87_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_066849_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _0668f8_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    0x000005(%edx),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0668f8_jump
		lea    0x000007(%edx),%eax
		testb  $0x000010,0x000007(%edx)
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000ef,%bh
		shl    $0x000004,%dl
		mov    %bh,%cl
		or     %dl,%cl
		mov    $0x000001,%edx
		mov    %cl,(%eax)
		mov    $_0c1b1c_data,%eax
		call   _04db6c_func
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b28_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		lea    0x000007(%edx),%eax
		testb  $0x000010,0x000007(%edx)
		sete   %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		shl    $0x000004,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)
		jmp    _06695c_jump

	_0668f8_jump:
		call   *_0cd00c_data
		test   %ax,%ax
		je     _06695c_jump
		cmpb   $0x000000,_0c5184_data
		jne    _06695c_jump
		cmpb   $0x000000,_0c1ed2_data
		jne    _066948_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000b,%eax
		je     _066926_jump
		cmp    $0x00000c,%eax
		jne    _066948_jump

	_066926_jump:
		mov    $0x000006,%ebx
		mov    $_0c1b1c_data,%eax
		xor    %dl,%dl
		xor    %edi,%edi
		mov    %dl,_0c1ed4_data
		mov    $0x000003,%edx
		mov    %di,_0c1ecc_data
		jmp    _066957_jump

	_066948_jump:
		mov    $0x000008,%ebx
		mov    $0x000001,%edx

	_066952_jump:
		mov    $_0c1b1c_data,%eax

	_066957_jump:
		call   _01d4a8_func

	_06695c_jump:
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066967_case:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		test   %eax,%eax
		jne    _06699f_jump
		call   *_0cd00c_data
		test   %ax,%ax
		je     _06699f_jump
		cmpb   $0x000000,_0c5184_data
		jne    _06699f_jump
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		jmp    _0669fa_jump

	_06699f_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000008,%eax
		je     _0669ba_jump
		cmp    $0x00000a,%eax
		je     _0669ba_jump
		cmp    $0x000009,%eax
		je     _0669ba_jump
		cmp    $0x00000b,%eax
		jne    _0669ec_jump

	_0669ba_jump:
		call   *_0cd00c_data
		test   %ax,%ax
		je     _0669ce_jump
		cmpb   $0x000000,_0c5184_data
		je     _0669fa_jump

	_0669ce_jump:
		call   _040ab0_func
		test   %ax,%ax
		je     _0669ec_jump
		call   *_0cd00c_data
		test   %ax,%ax
		je     _0669ec_jump
		cmpb   $0x000000,_0c5184_data
		je     _0669fa_jump

	_0669ec_jump:
		testb  $0x000018,_0c32e5_data
		jne    _0669fa_jump
		call   _065cfc_func

	_0669fa_jump:
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066a05_case:
		addl   $0x00000e,_0c1b48_data
		call   _06654c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066a17_case:
		orb    $0x000008,_0c1b9d_data
		mov    _0c1b5c_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    %dx,_0c2584_data
		cmp    $0x000003,%eax
		jge    _066544_jump
		xor    %eax,%eax
		mov    _0c1b8d_data,%al
		test   %eax,%eax
		jne    _066544_jump
		incw   _0c1b5e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_066a54_switch:
		.long   _066b63_case
		.long   _066b3e_case
		.long   _066c25_case
		.long   _066c25_case
		.long   _066a8e_case
		.long   _066b55_case
		.long   _066bf6_case




_066a70_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c1b89_data,%al
		cmp    $0x000006,%al
		ja     _066c25_case
		and    $0x0000ff,%eax
		jmp    *%cs:_066a54_switch(,%eax,4)

	_066a8e_case:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000b,%eax
		je     _066b30_jump
		cmp    $0x00000c,%eax
		je     _066b30_jump
		call   _0644fc_func
		xor    %eax,%eax
		mov    _0c24d6_data,%al
		test   %eax,%eax
		jne    _066ad1_jump
		call   _06654c_func
		mov    $0x00000a,%dh
		mov    $0x000001,%eax
		mov    %dh,_0c1b9b_data
		mov    %ax,_0c1b5e_data
		jmp    _066b0c_jump

	_066ad1_jump:
		cmp    $0x00000c,%eax
		je     _066ae1_jump
		xor    %edi,%edi
		mov    %di,_0c1b5e_data
		jmp    _066b0c_jump

	_066ae1_jump:
		mov    _0c1b74_data,%eax
		mov    $0xffffffff,%esi
		sar    $0x000010,%eax
		mov    %si,_0c1b5e_data
		test   %eax,%eax
		je     _066b0c_jump
		cmpb   $0x000000,_0c249a_data
		je     _066b0c_jump
		mov    $_0c1b1c_data,%eax
		call   _04dbe4_func

	_066b0c_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000002,%eax
		je     _066c25_case
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_066b30_jump:
		xor    %edx,%edx
		mov    %dx,_0c1b5e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_066b3e_case:
		testb  $0x000018,_0c32e5_data
		jne    _066c25_case
		call   _065cfc_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_066b55_case:
		movw   $0x0000ff,_0c24c2_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_066b63_case:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000025,%eax
		jne    _066b93_jump
		mov    _0c2582_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _066b7d_jump
		neg    %eax

	_066b7d_jump:
		cmp    $0x000080,%eax
		jg     _066b93_jump
		mov    $0x000026,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func

	_066b93_jump:
		call   _0658a0_func
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _066bae_jump
		movw   $0x0000ff,_0c24c2_data

	_066bae_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _066c25_case
		mov    _0c1b88_data,%al
		cmp    $0x00000f,%eax
		jne    _066c25_case
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		call   _024288_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092204_data(%eax)
		jne    _066c25_case
		mov    $0x00003c,%ebx
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_066bf6_case:
		orb    $0x000008,_0c1b9d_data
		mov    _0c1b5c_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    %dx,_0c2584_data
		cmp    $0xfffffffd,%eax
		jle    _066c25_case
		xor    %eax,%eax
		mov    _0c1b8d_data,%al
		test   %eax,%eax
		jne    _066c25_case
		decw   _0c1b5e_data

	_066c25_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		lea    0x000000(%eax),%eax
		ret    

_066c30_switch:
		.long   _066df1_case
		.long   _066c7a_case
		.long   _066fd6_case
		.long   _066544_jump
		.long   _067032_case
		.long   _06717f_case
		.long   _0671aa_case




_066c4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0c1b89_data,%al
		cmp    $0x000006,%al
		ja     _066544_jump
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0c24c6_data,%al
		inc    %al
		jmp    *%cs:_066c30_switch(%edx)

	_066c7a_case:
		xor    %edx,%edx
		mov    _0c1b88_data,%dl
		mov    %al,_0c24c6_data
		cmp    $0x000008,%edx
		je     _066c91_jump
		cmp    $0x00000a,%edx
		jne    _066cc0_jump

	_066c91_jump:
		call   *_0cd00c_data
		test   %ax,%ax
		je     _066caf_jump
		cmpb   $0x000000,_0c5184_data
		jne    _066caf_jump
		call   _040b98_func
		test   %ax,%ax
		jne    _066cc0_jump

	_066caf_jump:
		mov    $0x00002f,%ebx
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		jmp    _066d35_jump

	_066cc0_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000009,%eax
		je     _066cd1_jump
		cmp    $0x00000b,%eax
		jne    _066cfd_jump

	_066cd1_jump:
		call   _040b98_func
		test   %ax,%ax
		je     _066cef_jump
		call   *_0cd00c_data
		test   %ax,%ax
		je     _066cef_jump
		cmpb   $0x000000,_0c5184_data
		je     _066cfd_jump

	_066cef_jump:
		mov    $0x000030,%ebx
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		jmp    _066d35_jump

	_066cfd_jump:
		call   _040b98_func
		test   %ax,%ax
		je     _066d3a_jump
		call   *_0cd00c_data
		test   %ax,%ax
		je     _066d3a_jump
		cmpb   $0x000000,_0c5184_data
		jne    _066d3a_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		test   %eax,%eax
		jne    _066d3a_jump
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax

	_066d35_jump:
		call   _01d4a8_func

	_066d3a_jump:
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		movswl %cx,%edx
		cmp    %edx,%eax
		je     _066da6_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000008,%eax
		je     _066d62_jump
		cmp    $0x00000a,%eax
		jne    _066d75_jump

	_066d62_jump:
		mov    $0x000032,%ebx
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _066dc6_jump

	_066d75_jump:
		cmp    $0x00000b,%eax
		je     _066dc6_jump
		cmp    $0x000032,%eax
		je     _066dc6_jump
		cmp    $0x000033,%eax
		je     _066dc6_jump
		xor    %eax,%eax
		mov    _0c256c_data,%al
		cmp    $0x000001,%eax
		je     _066dc6_jump
		mov    $0x000004,%ebx
		mov    $0x000001,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		jmp    _066dc6_jump

	_066da6_jump:
		xor    %edx,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000009,%eax
		je     _066db7_jump
		cmp    $0x00000b,%eax
		jne    _066dc6_jump

	_066db7_jump:
		mov    $0x00000a,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func

	_066dc6_jump:
		mov    %cl,%al
		mov    _0c1b9d_data,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0c1b9d_data
		or     %al,%bl
		mov    %bl,_0c1b9d_data
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066df1_case:
		xor    %edx,%edx
		mov    _0c1b88_data,%dl
		mov    %al,_0c24c6_data
		cmp    $0x00000f,%edx
		je     _066e11_jump
		cmp    $0x00002f,%edx
		je     _066e11_jump
		cmp    $0x000030,%edx
		jne    _066e99_jump

	_066e11_jump:
		call   *_0cd00c_data
		test   %ax,%ax
		je     _066e99_jump
		cmpb   $0x000000,_0c5184_data
		jne    _066e99_jump
		call   _040b98_func
		test   %ax,%ax
		je     _066e99_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		movswl %cx,%edx
		cmp    %edx,%eax
		jne    _066e63_jump
		mov    $0x000008,%ebx
		mov    $0x000001,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		jmp    _066fcb_jump

	_066e63_jump:
		mov    $0x000033,%ebx
		mov    %cl,%al
		mov    _0c1b9d_data,%cl
		and    $0x000001,%al
		and    $0x0000f7,%cl
		shl    $0x000003,%al
		mov    %cl,_0c1b9d_data
		mov    %cl,%ch
		xor    %edx,%edx
		or     %al,%ch
		mov    $_0c1b1c_data,%eax
		mov    %ch,_0c1b9d_data
		call   _01d4a8_func
		jmp    _066fcb_jump

	_066e99_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000f,%eax
		jne    _066ee8_jump
		call   _040b98_func
		test   %ax,%ax
		jne    _066ee8_jump
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		call   _024288_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092204_data(%eax)
		jne    _066ee8_jump
		mov    $0x000001,%edx
		mov    $_0c1b1c_data,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066ee8_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000c,%eax
		je     _066fcb_jump
		cmp    $0x00000b,%eax
		je     _066fcb_jump
		cmp    $0x000012,%eax
		je     _066fcb_jump
		cmp    $0x000014,%eax
		je     _066fcb_jump
		cmp    $0x00000f,%eax
		je     _066fcb_jump
		cmp    $0x00002f,%eax
		je     _066fcb_jump
		cmp    $0x000030,%eax
		je     _066fcb_jump
		cmp    $0x000032,%eax
		je     _066fcb_jump
		cmp    $0x000033,%eax
		je     _066fcb_jump
		cmp    $0x00003d,%eax
		je     _066fcb_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		movswl %cx,%eax
		cmp    %eax,%edx
		je     _066fb0_jump
		xor    %eax,%eax
		mov    _0c256c_data,%al
		cmp    $0x000001,%eax
		je     _066f77_jump
		mov    $0x000004,%ebx
		mov    $0x000001,%edx
		jmp    _066f7b_jump

	_066f77_jump:
		mov    %eax,%edx
		xor    %ebx,%ebx

	_066f7b_jump:
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		mov    %cl,%al
		mov    _0c1b9d_data,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0c1b9d_data
		or     %al,%bl
		mov    %bl,_0c1b9d_data
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066fb0_jump:
		mov    $0x000001,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a0_func
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		call   _01d498_func

	_066fcb_jump:
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066fd6_case:
		xor    %edx,%edx
		mov    _0c1b88_data,%dl
		mov    %al,_0c24c6_data
		cmp    $0x00000f,%edx
		je     _066ff9_jump
		mov    _0c1b64_data,%ax
		test   %ax,%ax
		jne    _066ff9_jump
		mov    %ax,_0c2584_data

	_066ff9_jump:
		call   _0658a0_func
		cmpb   $0x000000,_0c5184_data
		jne    _067027_jump
		mov    %cl,%al
		mov    _0c1b9d_data,%cl
		and    $0x000001,%al
		and    $0x0000f7,%cl
		shl    $0x000003,%al
		mov    %cl,_0c1b9d_data
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,_0c1b9d_data

	_067027_jump:
		call   _066288_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067032_case:
		xor    %edx,%edx
		mov    _0c1b88_data,%dl
		mov    %al,_0c24c6_data
		cmp    $0x000002,%edx
		jne    _06704e_jump
		call   _040c0c_func
		test   %ax,%ax
		jne    _067064_jump

	_06704e_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000003,%eax
		jne    _0670a7_jump
		call   _040b98_func
		test   %ax,%ax
		je     _0670a7_jump

	_067064_jump:
		call   _0644fc_func
		xor    %eax,%eax
		mov    _0c24d6_data,%al
		test   %eax,%eax
		jne    _0670a0_jump
		mov    _0c1b88_data,%al
		cmp    $0x000002,%eax
		jne    _067099_jump
		call   _06654c_func
		mov    $0x00000a,%dl
		mov    $0x000001,%esi
		mov    %dl,_0c1b9b_data
		mov    %si,_0c1b5e_data
		jmp    _0670bd_jump

	_067099_jump:
		call   _06654c_func
		jmp    _0670bd_jump

	_0670a0_jump:
		cmp    $0x00000c,%eax
		je     _0670bd_jump
		jmp    _0670b8_jump

	_0670a7_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000002,%eax
		je     _0670b8_jump
		cmp    $0x000003,%eax
		jne    _0670bd_jump

	_0670b8_jump:
		call   _065cfc_func

	_0670bd_jump:
		call   *_0cd00c_data
		cwtl   
		test   %eax,%eax
		je     _06710e_jump
		xor    %edx,%edx
		mov    _0c24d3_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _06710e_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000b,%eax
		je     _06710e_jump
		cmp    $0x00000c,%eax
		je     _06710e_jump
		cmp    $0x00000d,%eax
		je     _06710e_jump
		mov    $0x000100,%edi
		call   _0652ac_func
		mov    %di,_0c2584_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06710e_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000d,%eax
		jne    _067140_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		movswl %cx,%edx
		cmp    %edx,%eax
		je     _067140_jump
		mov    $0x000001,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func

	_067140_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000b,%eax
		je     _066544_jump
		cmp    $0x00000c,%eax
		je     _066544_jump
		mov    %cl,%al
		mov    _0c1b9d_data,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0c1b9d_data
		or     %al,%bl
		mov    %bl,_0c1b9d_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06717f_case:
		mov    _0c1b9d_data,%ah
		shl    $0x000004,%ah
		xor    %ebx,%ebx
		shr    $0x000007,%ah
		movswl %cx,%edx
		mov    %ah,%bl
		mov    %al,_0c24c6_data
		cmp    %edx,%ebx
		je     _066544_jump
		call   _06654c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0671aa_case:
		mov    _0c1b9d_data,%ah
		xor    %edx,%edx
		or     $0x000008,%ah
		mov    %dx,_0c2584_data
		mov    %ah,_0c1b9d_data
		mov    %al,_0c24c6_data
		test   %cx,%cx
		je     _0671d1_jump
		movswl %cx,%eax
		jmp    _0671d6_jump

	_0671d1_jump:
		mov    $0xffffffff,%eax

	_0671d6_jump:
		mov    _0c1b5a_data,%edx
		mov    %eax,%ecx
		sar    $0x000010,%edx
		cwtl   
		imul   %edx,%eax
		cmp    $0x000003,%eax
		jge    _066544_jump
		xor    %eax,%eax
		mov    _0c1b8d_data,%al
		test   %eax,%eax
		jne    _066544_jump
		add    %cx,_0c1b5c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06720c_switch:
		.long   _0672f5_case
		.long   _067247_case
		.long   _0677bf_case
		.long   _066544_jump
		.long   _067790_case
		.long   _066544_jump
		.long   _06782f_case




_067228_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c1b89_data,%al
		cmp    $0x000006,%al
		ja     _066544_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_06720c_switch(,%eax,4)

	_067247_case:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000004,%eax
		je     _0672ea_jump
		cmp    $0x000005,%eax
		je     _0672ea_jump
		testb  $0x000018,_0c32e5_data
		jne    _0672ea_jump
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		call   _01d4a0_func
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000008,%eax
		je     _06728a_jump
		cmp    $0x00000a,%eax
		jne    _067296_jump

	_06728a_jump:
		mov    $0x00002f,%edx
		mov    $_0c1b1c_data,%eax
		jmp    _0672e5_jump

	_067296_jump:
		cmp    $0x000009,%eax
		je     _0672a0_jump
		cmp    $0x00000b,%eax
		jne    _0672ba_jump

	_0672a0_jump:
		mov    $0x000030,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0672ba_jump:
		cmp    $0x000003,%eax
		je     _0672c4_jump
		cmp    $0x000007,%eax
		jne    _0672de_jump

	_0672c4_jump:
		mov    $0x000024,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0672de_jump:
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx

	_0672e5_jump:
		call   _01d498_func

	_0672ea_jump:
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0672f5_case:
		mov    _0c1b6a_data,%eax
		xor    %edi,%edi
		sar    $0x000010,%eax
		mov    %di,_0c1b5c_data
		cmp    $0xffffffff,%eax
		je     _067332_jump
		xor    %edx,%edx
		mov    _0c1b88_data,%dl
		test   %edx,%edx
		jne    _067332_jump
		cmp    $0x000001,%eax
		jne    _067323_jump
		mov    $0x000031,%edx
		jmp    _067328_jump

	_067323_jump:
		mov    $0x000003,%edx

	_067328_jump:
		mov    $_0c1b1c_data,%eax
		call   _01d498_func

	_067332_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _067418_jump
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		call   _024288_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092204_data(%eax)
		jne    _0673a4_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _06738e_jump
		mov    _0c1b88_data,%al
		cmp    $0x00003c,%eax
		je     _067785_jump

	_06738e_jump:
		mov    $0x00003c,%ebx
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _067785_jump

	_0673a4_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _0673bd_jump
		mov    _0c1b88_data,%al
		cmp    $0x00000f,%eax
		je     _067785_jump

	_0673bd_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _0673d6_jump
		mov    _0c1b88_data,%al
		cmp    $0x00003d,%eax
		je     _067785_jump

	_0673d6_jump:
		xor    %edx,%edx
		mov    _0c1b86_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $0x00000f,%ebx
		sub    %edx,%eax
		mov    _0c1b20_data,%ecx
		shl    $0x000002,%eax
		xor    %edx,%edx
		add    %eax,%ecx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		mov    0x00000a(%ecx),%al
		dec    %al
		mov    %al,_0c1b87_data
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067418_jump:
		cmp    $0x000025,%eax
		jne    _06744c_jump
		mov    _0c2582_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06742b_jump
		neg    %eax

	_06742b_jump:
		cmp    $0x000080,%eax
		jg     _06744c_jump
		mov    $0x000026,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06744c_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000014,%eax
		jne    _0675a5_jump
		xor    %edx,%edx
		mov    _0c1b28_data,%ecx
		mov    _0c1b89_data,%dl
		mov    (%ecx,%edx,4),%edx
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _06747f_jump
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		test   %eax,%eax
		jmp    _0674ab_jump

	_06747f_jump:
		xor    %edx,%edx
		mov    _0c1b86_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b20_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1b87_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_0674ab_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _0675a5_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0675a5_jump
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		call   _024288_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092204_data(%eax)
		je     _067785_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b28_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0c1b88_data,%dl
		mov    (%eax),%eax
		shl    $0x000003,%edx
		add    %eax,%edx
		lea    0x000007(%edx),%eax
		testb  $0x000010,0x000007(%edx)
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000ef,%bh
		shl    $0x000004,%dl
		mov    %bh,%cl
		or     %dl,%cl
		mov    $0x000001,%edx
		mov    %cl,(%eax)
		mov    $_0c1b1c_data,%eax
		call   _04db6c_func
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		lea    0x000007(%edx),%eax
		testb  $0x000010,0x000007(%edx)
		sete   %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		shl    $0x000004,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0675a5_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00003b,%eax
		je     _0675c9_jump
		cmp    $0x00003e,%eax
		je     _0675c9_jump
		cmp    $0x00003f,%eax
		je     _0675c9_jump
		cmp    $0x000040,%eax
		je     _0675c9_jump
		cmp    $0x000041,%eax
		jne    _067689_jump

	_0675c9_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0c1b28_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _0675f9_jump
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		test   %eax,%eax
		jmp    _067625_jump

	_0675f9_jump:
		xor    %edx,%edx
		mov    _0c1b86_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b20_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1b87_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_067625_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _067785_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _067785_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %ax,_0cd0c4_data
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067689_jump:
		test   %eax,%eax
		je     _06769b_jump
		cmp    $0x000001,%eax
		je     _06769b_jump
		cmp    $0x000002,%eax
		jne    _067785_jump

	_06769b_jump:
		incw   _0cd0c4_data
		mov    _0cd0c2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0001f4,%eax
		jl     _067785_jump
		mov    _0cd0cc_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _0676e7_jump
		mov    $0x00003b,%edx
		mov    $_0c1b1c_data,%eax
		mov    $0x000001,%edi
		call   _01d498_func
		mov    %di,_0cd0ce_data
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0676e7_jump:
		cmp    $0x000001,%eax
		jne    _067712_jump
		mov    $0x000040,%edx
		mov    $_0c1b1c_data,%eax
		mov    $0x000002,%esi
		call   _01d498_func
		mov    %si,_0cd0ce_data
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067712_jump:
		cmp    $0x000002,%eax
		jne    _06773d_jump
		mov    $0x00003e,%edx
		mov    $_0c1b1c_data,%eax
		mov    $0x000003,%ecx
		call   _01d498_func
		mov    %cx,_0cd0ce_data
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06773d_jump:
		cmp    $0x000003,%eax
		jne    _067768_jump
		mov    $0x00003f,%edx
		mov    $_0c1b1c_data,%eax
		mov    $0x000004,%ebx
		call   _01d498_func
		mov    %bx,_0cd0ce_data
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067768_jump:
		cmp    $0x000004,%eax
		jne    _067785_jump
		mov    $0x000041,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		xor    %edx,%edx
		mov    %dx,_0cd0ce_data

	_067785_jump:
		call   _0658a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067790_case:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000002,%eax
		je     _0677a5_jump
		cmp    $0x000003,%eax
		jne    _066544_jump

	_0677a5_jump:
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		call   _01d498_func
		xor    %eax,%eax
		mov    %ax,_0c1b5e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0677bf_case:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0c1b88_data,%al
		mov    %dx,_0cd0c4_data
		mov    %dx,_0cd0ce_data
		cmp    $0x000008,%eax
		je     _0677e2_jump
		mov    %dx,_0c1b5c_data

	_0677e2_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000f,%eax
		je     _0677f8_jump
		cmpw   $0x000000,_0c1b64_data
		je     _067815_jump

	_0677f8_jump:
		mov    $0x000008,%eax
		mov    _0c2566_data,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ecx
		call   _0655b4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067815_jump:
		mov    _0c2566_data,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		call   _0655b4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06782f_case:
		mov    _0c1b9d_data,%ah
		xor    %edx,%edx
		or     $0x000008,%ah
		mov    %dx,_0c2584_data
		mov    _0c24c6_data,%dl
		mov    %ah,_0c1b9d_data
		xor    %eax,%eax
		inc    %dl
		mov    _0c1b8d_data,%al
		mov    %dl,_0c24c6_data
		test   %eax,%eax
		jne    _066544_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _067879_jump
		decw   _0c1b5c_data
		jmp    _067882_jump

	_067879_jump:
		jge    _067882_jump
		incw   _0c1b5c_data

	_067882_jump:
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06789b_jump
		decw   _0c1b5e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06789b_jump:
		jge    _066544_jump
		incw   _0c1b5e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0678b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		je     _0679be_jump
		cmp    $0x000001,%eax
		je     _067990_jump
		call   _065cfc_func
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _0679be_jump
		mov    _0c1b88_data,%al
		test   %eax,%eax
		je     _067910_jump
		cmp    $0x000001,%eax
		je     _067910_jump
		cmp    $0x000002,%eax
		je     _067910_jump
		cmp    $0x00003f,%eax
		je     _067910_jump
		cmp    $0x00003e,%eax
		je     _067910_jump
		cmp    $0x00003b,%eax
		je     _067910_jump
		cmp    $0x000003,%eax
		je     _067910_jump
		cmp    $0x000008,%eax
		jne    _0679be_jump

	_067910_jump:
		testb  $0x000040,_0c32e4_data
		je     _067952_jump
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0679be_jump
		mov    $0x000010,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		xor    %edx,%edx
		mov    %dx,_0c1b5c_data
		mov    %dx,_0c1b5e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067952_jump:
		cmpb   $0x000000,_0c5184_data
		jne    _0679be_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000012,%eax
		je     _0679be_jump
		mov    _0c32e5_data,%dh
		test   $0x000018,%dh
		jne    _0679be_jump
		test   $0x000001,%dh
		jne    _0679be_jump
		cmp    $0x000008,%eax
		je     _0679be_jump
		testb  $0x000001,_0c32e6_data
		jne    _0679be_jump
		mov    $0x000012,%edx
		jmp    _0679b4_jump

	_067990_jump:
		cmp    %eax,%eax
		jne    _0679be_jump
		mov    _0c32e5_data,%cl
		test   $0x000018,%cl
		jne    _0679be_jump
		test   $0x000001,%cl
		je     _0679be_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		test   %eax,%eax
		jne    _0679be_jump
		mov    $0x000003,%edx

	_0679b4_jump:
		mov    $_0c1b1c_data,%eax
		call   _01d498_func

	_0679be_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx

	_0679c1_jump:
		ret    



_0679c4_func:
		xor    %eax,%eax
		mov    _0c1ed2_data,%al
		test   %eax,%eax
		jne    _0679c1_jump
		testb  $0x000001,_0c32e4_data
		je     _0679c1_jump
		testb  $0x000018,_0c32e5_data
		jne    _0679c1_jump
		jmp    _05ef70_jump

_0679e8_switch:
		.long   _067a3a_case
		.long   _067a30_case
		.long   _067a3a_case
		.long   _066283_case
		.long   _066283_case
		.long   _067a3a_case
		.long   _066283_case
		.long   _067a3a_case




_067a08_func:
		push   %edx
		cmpb   $0x000000,_0c2570_data
		jne    _066283_case
		mov    _0c1b89_data,%al
		cmp    $0x000007,%al
		ja     _066283_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0679e8_switch(,%eax,4)

	_067a30_case:
		call   _040b98_func
		test   %ax,%ax
		jne    _067a41_jump

	_067a3a_case:
		call   _0652ac_func
		pop    %edx
		ret    

	_067a41_jump:
		xor    %dl,%dl
		mov    %dl,_0c24d3_data
		pop    %edx
		ret    



_067a4c_func:
		push   %ebx
		push   %edx
		movswl %ax,%edx
		test   %edx,%edx
		jne    _067a56_jump
		inc    %eax

	_067a56_jump:
		cwtl   
		dec    %eax
		mov    _0c1b9d_data,%bl
		sar    $0x000003,%eax
		shl    $0x000004,%bl
		movswl %ax,%edx
		shr    $0x000007,%bl
		cmp    $0x00001f,%edx
		jg     _067a86_jump
		and    $0x0000ff,%ebx
		jne    _067a7f_jump
		add    $0x00001f,%eax
		pop    %edx
		pop    %ebx
		ret    

	_067a7f_jump:
		mov    $0x000020,%eax
		jmp    _067a99_jump

	_067a86_jump:
		and    $0x0000ff,%ebx
		jne    _067a94_jump
		sub    $0x00001f,%eax
		pop    %edx
		pop    %ebx
		ret    

	_067a94_jump:
		mov    $0x00005f,%eax

	_067a99_jump:
		sub    %edx,%eax
		test   %eax,%eax
		jge    _067aa1_jump
		neg    %eax

	_067aa1_jump:
		pop    %edx
		pop    %ebx
		ret    



_067aa4_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _067ac8_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000008,%eax
		jne    _067ac8_jump
		movw   $0x00005a,_0c1b72_data

	_067ac8_jump:
		mov    $0x000007,%edx
		mov    $_0c1b1c_data,%eax
		xor    %ebx,%ebx
		mov    $0xffffffff,%ecx
		call   _01d4a8_func
		mov    $0xffffffff,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		call   _06ac04_func
		mov    %bx,_0c1b6e_data
		mov    %cx,_0c1b66_data
		mov    %bx,_0c2584_data
		mov    %bx,_0c1b5e_data
		xor    %dl,%dl
		xor    %ah,%ah
		mov    %dl,_0c1b8e_data
		mov    $0x000001,%dh
		mov    %ah,_0c1b8d_data
		mov    %dh,_0c24d3_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067b24_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    _0c1b44_data,%dx
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    _0c1b84_data,%al
		xor    %ecx,%ecx
		add    %edx,%eax
		mov    0x000068(%esi),%cl
		sub    %ebx,%eax
		sub    %ecx,%eax
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    _0c1b48_data,%di
		mov    _0c1b85_data,%al
		mov    0x00002c(%esi),%dx
		add    %edi,%eax
		sub    %edx,%eax
		movswl %cx,%edx
		imul   %edx,%edx
		movzbw 0x000069(%esi),%di
		sub    %edi,%eax
		mov    %eax,%edi
		cwtl   
		imul   %eax,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0c1b88_data,%dl
		test   %edx,%edx
		jne    _067d16_jump
		cmp    $0x0011a0,%eax
		jbe    _067c86_jump
		mov    $0x000001,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		movb   $0x000000,0x00007f(%esi)
		xor    %eax,%eax
		mov    %ax,_0c1b5e_data
		mov    %ax,_0c1b5c_data
		mov    %ax,_0c2584_data
		mov    %esi,%eax
		call   _072d5c_func
		mov    %eax,%edx
		mov    %ax,0x00004e(%esi)
		cwtl   
		cmp    $0x000100,%eax
		jg     _067be3_jump
		jne    _067beb_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _067beb_jump

	_067be3_jump:
		movw   $0x00ffff,0x000052(%esi)
		jmp    _067bf1_jump

	_067beb_jump:
		movw   $0x000001,0x000052(%esi)

	_067bf1_jump:
		movswl %cx,%eax
		test   %eax,%eax
		jge    _067bfa_jump
		neg    %ecx

	_067bfa_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _067c03_jump
		neg    %edi

	_067c03_jump:
		mov    %edx,%eax
		mov    %esp,%ebx
		add    $0x000080,%eax
		lea    0x000004(%esp),%edx
		cwtl   
		call   _05594c_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jle    _067c60_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jle    _067c60_jump
		movswl %cx,%eax
		mov    $0x000009,%cl
		shl    %cl,%eax
		mov    -0x000002(%esp),%ebx
		mov    %eax,%edx
		sar    $0x000010,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000009,%cl
		mov    %eax,%ebx
		movswl %di,%eax
		shl    %cl,%eax
		mov    0x000002(%esp),%ecx
		mov    %eax,%edx
		sar    $0x000010,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		sar    %eax
		jmp    _067c79_jump

	_067c60_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jg     _067c77_jump
		mov    %ecx,%eax
		mov    %ax,0x00004c(%esi)
		jmp    _067d16_jump

	_067c77_jump:
		mov    %edi,%eax

	_067c79_jump:
		mov    %ax,0x00004c(%esi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067c86_jump:
		ja     _067cde_jump
		mov    _0c1b8d_data,%dl
		xor    %eax,%eax
		inc    %dl
		mov    %ax,_0c1b5c_data
		mov    %dl,_0c1b8d_data
		mov    0x000042(%esi),%ax
		mov    _0c1b5e_data,%dx
		sub    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b8d_data,%al
		mov    %dx,_0c1b5e_data
		cmp    $0x000003,%eax
		jl     _067d16_jump
		mov    _0c1b5e_data,%bx
		xor    %dh,%dh
		inc    %ebx
		mov    %dh,_0c1b8d_data
		mov    %bx,_0c1b5e_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067cde_jump:
		mov    $0x000001,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		xor    %ebx,%ebx
		mov    $0x000001,%ah
		mov    %bx,_0c1b5e_data
		mov    %bx,_0c1b5c_data
		mov    %bx,_0c2584_data
		movb   $0x000000,0x00007f(%esi)
		mov    %ah,_0c24d3_data
		movw   $0x00005f,0x00004c(%esi)

	_067d16_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067d20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0c1b28_data,%eax
		mov    %eax,(%esp)
		mov    _0c25d8_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		mov    $0x000080,%edi
		add    %eax,%ecx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%ecx
		mov    $0x000180,%edx
		add    %eax,%ecx
		xor    %eax,%eax
		mov    %edx,0x00000c(%esp)
		mov    _0c1b88_data,%al
		mov    0x00004e(%ecx),%si
		test   %eax,%eax
		jne    _067d73_jump
		mov    %ecx,%eax
		call   _067b24_func
		jmp    _067e9f_jump

	_067d73_jump:
		cmp    $0x000001,%eax
		jne    _067e9f_jump
		xor    %eax,%eax
		mov    0x00007f(%ecx),%al
		test   %eax,%eax
		jne    _067e81_jump
		mov    0x00004a(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0x000064,%eax
		jle    _067d9b_jump
		subw   $0x000002,0x00004c(%ecx)
		jmp    _067da4_jump

	_067d9b_jump:
		cmp    $0x00005f,%eax
		jge    _067da4_jump
		incw   0x00004c(%ecx)

	_067da4_jump:
		mov    %esi,%eax
		lea    0x000010(%esp),%ebx
		add    $0x000080,%eax
		lea    0x000008(%esp),%edx
		cwtl   
		call   _055868_func
		cmp    0x00000c(%esp),%si
		jl     _067dd6_jump
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _067dce_jump
		movb   $0x000005,0x00007f(%ecx)

	_067dce_jump:
		movw   $0x00ffff,0x000052(%ecx)
		jmp    _067def_jump

	_067dd6_jump:
		cmp    %di,%si
		jg     _067def_jump
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _067de9_jump
		movb   $0x000005,0x00007f(%ecx)

	_067de9_jump:
		movw   $0x000001,0x000052(%ecx)

	_067def_jump:
		movswl %si,%eax
		call   _055928_func
		cwtl   
		mov    0x000050(%ecx),%edx
		sar    $0x000007,%eax
		sar    $0x000010,%edx
		inc    %eax
		test   %edx,%edx
		jge    _067e08_jump
		neg    %eax

	_067e08_jump:
		add    %ax,0x00004e(%ecx)
		mov    _0c1b48_data,%ax
		mov    %eax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		mov    0x00000e(%esp),%edx
		add    %eax,%ebx
		mov    0x00004a(%ecx),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		sar    $0x000009,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0c1b84_data,%dl
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebp
		mov    0x000069(%ecx),%dl
		add    %ebp,%edx
		mov    0x000006(%esp),%ebp
		sar    $0x000010,%ebp
		imul   %ebp,%eax
		sar    $0x000009,%eax
		mov    _0c1b44_data,%di
		sub    %eax,%edx
		xor    %eax,%eax
		sub    %edi,%ebx
		mov    _0c1b85_data,%al
		mov    %bx,_0c1b5c_data
		sub    %eax,%edx
		mov    0x000004(%esp),%ebx
		mov    %edx,%eax
		sub    %ebx,%eax
		mov    %ax,_0c1b5e_data
		jmp    _067e9f_jump

	_067e81_jump:
		mov    %al,%ah
		dec    %ah
		xor    %ebx,%ebx
		mov    %ah,0x00007f(%ecx)
		mov    %bx,_0c2584_data
		mov    %bx,_0c1b5c_data
		mov    %bx,_0c1b5e_data

	_067e9f_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    (%esp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000002(%ebx,%eax,1),%al
		mov    %al,_0c1b86_data
		movswl %si,%eax
		call   _067a4c_func
		mov    _0c1b5c_data,%si
		mov    %al,_0c1b87_data
		mov    0x000040(%ecx),%ax
		mov    _0c1b5e_data,%di
		add    %eax,%esi
		add    0x000042(%ecx),%di
		xor    %eax,%eax
		mov    _0c1b7e_data,%al
		mov    %si,_0c1b5c_data
		mov    _092204_data(%eax),%dl
		mov    %di,_0c1b5e_data
		test   $0x000002,%dl
		je     _067fdd_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _067f30_jump
		mov    _0c1b7f_data,%al
		testb  $0x000002,_092204_data(%eax)
		jne    _067f5d_jump

	_067f30_jump:
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _067fdd_jump
		xor    %eax,%eax
		mov    _0c1b80_data,%al
		testb  $0x000002,_092204_data(%eax)
		je     _067fdd_jump

	_067f5d_jump:
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jg     _067f73_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _067fdd_jump

	_067f73_jump:
		mov    $_0c1b1c_data,%eax
		call   _024ec4_func
		mov    _0c1b5c_data,%eax
		mov    _0c1b48_data,%edx
		sar    $0x000010,%eax
		mov    $0x000008,%ebx
		add    %eax,%edx
		xor    %ch,%ch
		mov    %edx,_0c1b48_data
		xor    %eax,%eax
		mov    $0xffffffff,%edx
		mov    %ax,_0c1b5e_data
		mov    $_0c1b1c_data,%eax
		mov    %dx,_0c24d4_data
		xor    %edx,%edx
		mov    %ch,_0c1b9b_data
		call   _01d4a8_func
		mov    $0xffffffff,%ebx
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		mov    %bx,_0c1b6e_data
		call   _06ac04_func
		jmp    _068002_jump

	_067fdd_jump:
		xor    %eax,%eax
		mov    _0c1b80_data,%al
		testb  $0x000010,_092204_data(%eax)
		jne    _067ffd_jump
		xor    %eax,%eax
		mov    _0c1b7f_data,%al
		testb  $0x000010,_092204_data(%eax)
		je     _068002_jump

	_067ffd_jump:
		call   _06800c_func

	_068002_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06800c_func:
		push   %ebx
		push   %edx
		mov    _0c25d8_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		mov    0x00004c(%edx,%eax,4),%eax
		sar    $0x000010,%eax
		cmp    $0x000100,%eax
		setl   %al
		and    $0x0000ff,%eax
		and    $0x000001,%al
		mov    _0c1b9d_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0c1b9d_data
		shl    $0x000003,%al
		mov    %ah,%dl
		mov    $0x000002,%ebx
		or     %al,%dl
		mov    $_0c1b1c_data,%eax
		mov    %dl,_0c1b9d_data
		mov    %ebx,%edx
		call   _01d4a8_func
		mov    $0xffffffff,%ebx
		xor    %edx,%edx
		mov    _0c1b5a_data,%eax
		mov    %dx,_0c1b5e_data
		xor    %dh,%dh
		sar    $0x000010,%eax
		mov    %dh,_0c1b8d_data
		mov    %dh,_0c1b8e_data
		mov    _0c1b44_data,%edx
		mov    %bx,_0c24d4_data
		sub    %eax,%edx
		mov    %bx,_0c1b6e_data
		mov    %edx,_0c1b44_data
		pop    %edx
		pop    %ebx
		ret    



_0680ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c1b44_data,%dx
		mov    _0c1b48_data,%bx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0c1b84_data,%al
		mov    _0c1b90_data,%cl
		add    %edx,%eax
		add    %ebx,%ecx
		mov    _0c2582_data,%edx
		mov    %eax,%esi
		mov    %al,%bl
		sar    $0x000010,%edx
		and    $0x00000f,%bl
		test   %edx,%edx
		jg     _0680ff_jump
		jne    _068113_jump
		mov    _0c1b9d_data,%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		jne    _068113_jump

	_0680ff_jump:
		mov    $0x000010,%edx
		and    $0x0000ff,%ebx
		cmp    $0x00000d,%ebx
		jle    _068126_jump
		add    %edx,%eax
		jmp    _068126_jump

	_068113_jump:
		mov    $0xfffffff0,%edx
		and    $0x0000ff,%ebx
		cmp    $0x000004,%ebx
		jge    _068126_jump
		sub    $0x000010,%eax

	_068126_jump:
		mov    _0c2584_data,%di
		add    %edx,%eax
		test   %di,%di
		je     _068185_jump
		mov    %ecx,%edx
		movswl %ax,%ebx
		add    $0x000010,%edx
		mov    %ebx,%eax
		movswl %dx,%edx
		call   _0241b0_func
		test   %ax,%ax
		jne    _068177_jump
		mov    %ecx,%eax
		add    $0x000020,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _0241b0_func
		test   %ax,%ax
		jne    _068177_jump
		mov    %ecx,%eax
		add    $0x000030,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _0241b0_func
		test   %ax,%ax
		je     _068185_jump

	_068177_jump:
		xor    %eax,%eax
		mov    %ax,_0c1b5c_data
		mov    %ax,_0c2584_data

	_068185_jump:
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0681ad_jump
		add    $0x000010,%ecx
		movswl %si,%eax
		movswl %cx,%edx
		call   _0241b0_func
		test   %ax,%ax
		je     _0681ad_jump
		xor    %ebx,%ebx
		mov    %bx,_0c1b5e_data

	_0681ad_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0681b4_func:
		push   %ebx
		push   %edx
		mov    _0c1b44_data,%ax
		sub    _0c257c_data,%ax
		cwtl   
		cmp    $0x000001,%eax
		jle    _0681ea_jump
		mov    _0c1b9d_data,%dl
		and    $0x0000f7,%dl
		mov    $_0c1b1c_data,%eax
		mov    %dl,_0c1b9d_data
		mov    $0x000015,%edx
		call   _01d498_func
		pop    %edx
		pop    %ebx
		ret    

	_0681ea_jump:
		cmp    $0xffffffff,%eax
		jge    _068210_jump
		mov    _0c1b9d_data,%ah
		or     $0x000008,%ah
		mov    $0x000015,%edx
		mov    %ah,_0c1b9d_data
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		pop    %edx
		pop    %ebx
		ret    

	_068210_jump:
		mov    $0x000014,%edx
		xor    %ebx,%ebx
		mov    $_0c1b1c_data,%eax
		mov    %bx,_0c1b5c_data
		call   _01d498_func
		mov    _0c1b44_data,%ax
		mov    %ax,_0c257c_data
		pop    %edx
		pop    %ebx
		ret    



_068238_func:
		push   %edx
		mov    _0c257e_data,%edx
		sar    $0x000010,%edx
		cmp    $0x000003,%edx
		je     _06829f_jump
		and    $0x0000ff,%eax
		testb  $0x000010,_092204_data(%eax)
		je     _06829f_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000007,%eax
		je     _06829f_jump
		cmp    $0x000009,%eax
		je     _06829f_jump
		mov    _0c1b5c_data,%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jg     _06829f_jump
		cmp    $0x000008,%eax
		je     _06828f_jump
		mov    $0x000001,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		xor    %dh,%dh
		mov    %dh,_0c24d3_data

	_06828f_jump:
		xor    %edx,%edx
		mov    %dx,_0c1b6e_data
		mov    %dx,_0c1b5e_data

	_06829f_jump:
		pop    %edx
		ret    



_0682a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0c2568_data,%dx
		mov    _0c1b28_data,%esi
		test   %dx,%dx
		je     _0682c7_jump
		movw   $0x000001,_0c1b64_data

	_0682c7_jump:
		mov    $0x000012,%ebx
		mov    $_0c2586_data,%edx
		mov    $_0c2588_data,%eax
		call   _07a101_func
		mov    _0c1b44_data,%ax
		mov    %ax,_0c2586_data
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000007,%eax
		jne    _0682fc_jump
		movw   $0x00ffff,_0c1b66_data

	_0682fc_jump:
		movb   $0x000001,(%esp)
		mov    _0c24d2_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _068314_jump
		decw   _0c24d4_data

	_068314_jump:
		mov    _0c25d6_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _068328_jump
		decw   _0c25d8_data

	_068328_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		mov    _0c24c4_data,%bx
		add    %eax,%edx
		inc    %ebx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		mov    %bx,_0c24c4_data
		mov    0x000005(%edx,%eax,8),%al
		xor    %ebx,%ebx
		shr    $0x000004,%al
		mov    %al,%bl
		and    $0x0000ff,%eax
		cmp    $0x00000b,%eax
		je     _0683ad_jump
		movswl %bx,%eax
		cmp    $0x00000a,%eax
		je     _0683ad_jump
		mov    _0c1b8d_data,%dl
		xor    %eax,%eax
		inc    %dl
		mov    %dl,%al
		mov    %dl,_0c1b8d_data
		cmp    $0x000003,%eax
		jl     _06838e_jump
		xor    %dh,%dh
		mov    %dh,_0c1b8d_data

	_06838e_jump:
		mov    _0c1b8e_data,%cl
		xor    %eax,%eax
		inc    %cl
		mov    %cl,%al
		mov    %cl,_0c1b8e_data
		cmp    $0x000004,%eax
		jl     _0683ad_jump
		xor    %ch,%ch
		mov    %ch,_0c1b8e_data

	_0683ad_jump:
		mov    _0c24c2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000017,%eax
		jne    _0683c1_jump
		incw   _0c1b5e_data

	_0683c1_jump:
		call   *_0cd00c_data
		cwtl   
		test   %eax,%eax
		je     _0683f7_jump
		mov    _0c24c2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000c,%eax
		jg     _0683f7_jump
		cmpb   $0x000000,_0c1aee_data
		jne    _0683f7_jump
		xor    %eax,%eax
		mov    _0c1b9b_data,%al
		test   %eax,%eax
		jne    _0683f7_jump
		mov    _0c1b88_data,%al
		cmp    $0x000002,%eax
		jne    _06842a_jump

	_0683f7_jump:
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		call   _04d9e0_func
		mov    _0c24d3_data,%dl
		mov    $0x000002,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    _06842a_jump
		call   *_0cd00c_data
		cwtl   
		test   %eax,%eax
		jne    _06842a_jump
		incb   _0c24d3_data

	_06842a_jump:
		mov    _0c24c2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _068464_jump
		xor    %edx,%edx
		mov    _0c1b88_data,%dl
		cmp    $0x000018,%edx
		je     _068449_jump
		cmp    $0x000021,%edx
		jne    _068450_jump

	_068449_jump:
		mov    $0x000002,%edx
		jmp    _06845a_jump

	_068450_jump:
		cmp    $0x000020,%edx
		jne    _068464_jump
		mov    $0x000011,%edx

	_06845a_jump:
		mov    $_0c1b1c_data,%eax
		call   _01d498_func

	_068464_jump:
		mov    _0c1b6c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06847e_jump
		mov    _0c1b5e_data,%ax
		add    %ax,_0c1b6e_data

	_06847e_jump:
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		call   _024288_func
		mov    %al,%dl
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000008,%eax
		je     _0684b6_jump
		cmp    $0x00001f,%eax
		je     _0684b6_jump
		call   _065dc0_func
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000f,%eax
		jne    _0684b6_jump
		call   _0680ac_func

	_0684b6_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _068238_func
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _068509_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000f,%eax
		jne    _068509_jump
		movswl %bx,%edx
		cmp    $0x00000b,%edx
		jne    _068509_jump
		xor    %edx,%edx
		mov    _0c1b89_data,%dl
		mov    (%esi,%edx,4),%edx
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %bl,%bh
		or     $0x000010,%bh
		xor    %cl,%cl
		mov    %bh,0x000005(%edx,%eax,8)
		mov    %cl,_0c1b8d_data
		mov    %cl,_0c1b8e_data

	_068509_jump:
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _06855c_jump
		xor    %edx,%edx
		mov    _0c1b88_data,%dl
		test   %edx,%edx
		jne    _06853b_jump
		mov    $0x000001,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		xor    %edx,%edx
		mov    %dx,_0c1b6e_data
		jmp    _06855c_jump

	_06853b_jump:
		cmp    $0x000011,%edx
		je     _068545_jump
		cmp    $0x000012,%edx
		jne    _06855c_jump

	_068545_jump:
		mov    $0x000013,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func
		xor    %eax,%eax
		mov    %ax,_0c1b6e_data

	_06855c_jump:
		xor    %edx,%edx
		mov    _0c1b88_data,%dl
		cmp    $0x000011,%edx
		je     _068864_jump
		test   %edx,%edx
		je     _068864_jump
		cmp    $0x000009,%edx
		je     _068864_jump
		cmp    $0x00001f,%edx
		je     _068864_jump
		cmp    $0x00000d,%edx
		jne    _06859c_jump
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _068864_jump

	_06859c_jump:
		mov    _0c24c2_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jl     _068864_jump
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _068864_jump
		xor    %eax,%eax
		mov    _0c1b7e_data,%al
		mov    _092204_data(%eax),%dl
		test   $0x000002,%dl
		je     _06880c_jump
		test   $0x000040,%dl
		je     _0685fe_jump
		mov    _0c1b5e_data,%dx
		mov    _092204_data(%eax),%bl
		shl    $0x000004,%edx
		test   $0x000080,%bl
		je     _0685f7_jump
		add    %dx,_0c2584_data
		jmp    _0685fe_jump

	_0685f7_jump:
		sub    %dx,_0c2584_data

	_0685fe_jump:
		mov    $_0c1b1c_data,%eax
		call   _024ec4_func
		xor    %edi,%edi
		xor    %bh,%bh
		mov    _0c1b5c_data,%eax
		mov    _0c1b48_data,%edx
		mov    %bh,_0c1b9b_data
		mov    %bh,_0c1aee_data
		sar    $0x000010,%eax
		mov    %di,_0c1b5e_data
		add    %eax,%edx
		mov    $_0c1b1c_data,%eax
		mov    %edx,_0c1b48_data
		call   _024a60_func
		test   %al,%al
		jne    _068678_jump
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		jne    _068669_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _068669_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _068673_jump

	_068669_jump:
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax

	_068673_jump:
		call   _06ac04_func

	_068678_jump:
		cmpw   $0x000000,_0c1b64_data
		jne    _068704_jump
		mov    $0x000001,%al
		jmp    _06868c_jump

	_06868a_jump:
		inc    %al

	_06868c_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x00000a,%edx
		jge    _0686a7_jump
		mov    _0c2584_data(,%edx,2),%bx
		cmp    _0c2586_data(,%edx,2),%bx
		je     _06868a_jump

	_0686a7_jump:
		and    $0x0000ff,%eax
		cmp    $0x00000a,%eax
		je     _0686fb_jump
		mov    _0c2584_data(,%eax,2),%dx
		cmp    _0c2586_data(,%eax,2),%dx
		jge    _0686df_jump
		mov    _0c2582_data,%ebx
		mov    $0xffffff00,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _0686d7_jump
		mov    %ebx,%eax

	_0686d7_jump:
		mov    %ax,_0c2584_data
		jmp    _068704_jump

	_0686df_jump:
		mov    _0c2582_data,%ebx
		mov    $0x000100,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _0686f3_jump
		mov    %ebx,%eax

	_0686f3_jump:
		mov    %ax,_0c2584_data
		jmp    _068704_jump

	_0686fb_jump:
		xor    %esi,%esi
		mov    %si,_0c2584_data

	_068704_jump:
		movw   $0x00ffff,_0c24d4_data
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000003,%eax
		jne    _06872d_jump
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		test   %eax,%eax
		jne    _06874b_jump
		movb   $0x000001,_0c24d3_data
		jmp    _06874b_jump

	_06872d_jump:
		cmp    $0x000008,%eax
		jne    _06874b_jump
		mov    _0c1b70_data,%eax
		mov    $0x00005a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _068745_jump
		mov    %ebx,%eax

	_068745_jump:
		mov    %ax,_0c1b72_data

	_06874b_jump:
		xor    %edx,%edx
		mov    _0c1b88_data,%dl
		cmp    $0x000011,%edx
		je     _068762_jump
		cmp    $0x000012,%edx
		je     _068762_jump
		cmp    $0x000013,%edx
		jne    _0687ba_jump

	_068762_jump:
		testb  $0x000001,_0c32e5_data
		je     _0687b3_jump
		mov    _0c1b28_data,%eax
		mov    0x000004(%eax),%eax
		mov    $0x000004,%cl
		movsbw 0x000018(%eax),%ax
		test   %ax,%ax
		js     _068784_jump
		sar    %cl,%ax
		jmp    _06878d_jump

	_068784_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06878d_jump:
		movswl %ax,%edx
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06879e_jump
		neg    %eax

	_06879e_jump:
		cmp    %edx,%eax
		jl     _0687b3_jump
		mov    $0x000007,%ebx
		mov    $0x000001,%edx
		mov    $_0c1b1c_data,%eax
		jmp    _0687e8_jump

	_0687b3_jump:
		mov    $0x00002b,%ebx
		jmp    _0687e1_jump

	_0687ba_jump:
		cmp    $0x000019,%edx
		je     _0687c4_jump
		cmp    $0x00001a,%edx
		jne    _0687cb_jump

	_0687c4_jump:
		mov    $0x000034,%ebx
		jmp    _0687e1_jump

	_0687cb_jump:
		cmp    $0x00001b,%edx
		je     _0687d5_jump
		cmp    $0x00001c,%edx
		jne    _0687dc_jump

	_0687d5_jump:
		mov    $0x000035,%ebx
		jmp    _0687e1_jump

	_0687dc_jump:
		mov    $0x000008,%ebx

	_0687e1_jump:
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx

	_0687e8_jump:
		call   _01d4a8_func
		mov    _0c1b6c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000c8,%eax
		jl     _068801_jump
		call   _064430_func

	_068801_jump:
		movw   $0x00ffff,_0c1b6e_data
		jmp    _068864_jump

	_06880c_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000007,%eax
		je     _068864_jump
		cmp    $0x000008,%eax
		jne    _068858_jump
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jl     _068835_jump
		mov    $0xffffffff,%edx
		mov    %esp,%eax
		call   _0646b8_func

	_068835_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _06884d_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000008,%eax
		je     _068864_jump

	_06884d_jump:
		movw   $0x00005a,_0c1b72_data
		jmp    _068864_jump

	_068858_jump:
		mov    $0xffffffff,%edx
		mov    %esp,%eax
		call   _0646b8_func

	_068864_jump:
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _068893_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _068893_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00001f,%eax
		je     _068893_jump
		call   _0645b0_func
		call   _066288_func

	_068893_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x000001,%eax
		jne    _0688c9_jump
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jle    _0688b3_jump
		movw   $0x000004,_0c1b5e_data

	_0688b3_jump:
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff6,%eax
		jge    _0688c9_jump
		movw   $0x00fff6,_0c1b5e_data

	_0688c9_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _068925_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000f,%eax
		jne    _068925_jump
		mov    _0c1b44_data,%eax
		mov    _0c24f4_data,%edx
		add    $0x000096,%eax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jle    _068925_jump
		mov    _0c24b4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    _0c1b48_data,%ebx
		sub    $0x000064,%eax
		cmp    %ebx,%eax
		jge    _068925_jump
		xor    %eax,%eax
		mov    _0c1b92_data,%al
		cmp    $0x0000ff,%eax
		je     _068925_jump
		call   _07387c_func

	_068925_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_06892d_jump:
		ret    



_068930_func:
		cmpb   $0x000000,_0c1ed2_data
		je     _06892d_jump
		mov    _0c1ec0_data,%eax
		call   _072f20_func
		jmp    _05f1c8_func



_068948_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %dl,%dl
		mov    %dl,_0c24ce_data
		andb   $0x0000f7,_0c32e4_data
		mov    _0c24c8_data,%dx
		dec    %edx
		mov    _0c256d_data,%bl
		mov    %dx,_0c24c8_data
		test   %bl,%bl
		jne    _0689aa_jump
		xor    %edx,%edx
		mov    _0c1b89_data,%dl
		cmp    $0x000003,%edx
		jne    _06898d_jump
		xor    %edx,%edx
		mov    _0c1b88_data,%dl
		cmp    $0x000020,%edx
		je     _0689aa_jump

	_06898d_jump:
		testb  $0x000080,_0c32e5_data
		jne    _0689aa_jump
		movb   $0x000005,_0c25ca_data
		mov    $0x000001,%ch
		mov    %eax,_0c25cc_data
		mov    %ch,_0c2564_data

	_0689aa_jump:
		call   _068930_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0689b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000016,%ebx
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		xor    %ecx,%ecx
		call   _01d4a8_func
		mov    %cx,_0c2584_data
		xor    %ah,%ah
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %ah,_0c1b87_data
		mov    %dx,_0c1b5e_data
		mov    _0c5184_data,%dl
		mov    %bx,_0c1b5c_data
		test   %dl,%dl
		je     _068a10_jump
		mov    _0c24be_data,%eax
		mov    _0c1b44_data,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,_0c1b44_data

	_068a10_jump:
		mov    $0x000001,%dh
		mov    $0x000078,%edi
		xor    %esi,%esi
		mov    $_0c1b1c_data,%eax
		mov    %si,_0c24c0_data
		mov    %dh,_0c24d2_data
		mov    %di,_0c1b72_data
		mov    %dh,_0c256d_data
		call   _072610_func
		call   _068930_func
		call   _01cd00_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068a50_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ce570_data,%eax
		sar    $0x000010,%eax
		mov    _0c1b44_data,%edx
		sub    $0x00000a,%eax
		cmp    %edx,%eax
		jg     _068aa1_jump
		xor    %eax,%eax
		mov    _0c1b52_data,%edx
		mov    _0c1b85_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0xffffffec,%eax
		jge    _068a8c_jump
		mov    _0c1af8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _068aa1_jump

	_068a8c_jump:
		mov    _0ce56e_data,%eax
		sar    $0x000010,%eax
		mov    _0c1b44_data,%ebx
		add    $0x00000a,%eax
		cmp    %ebx,%eax
		jge    _068aba_jump

	_068aa1_jump:
		xor    %dh,%dh
		mov    $0x000001,%eax
		mov    %dh,_0c1b92_data
		xor    %edx,%edx
		call   _02d3ac_func
		jmp    _068d27_jump

	_068aba_jump:
		mov    _0c1b52_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000b4,%eax
		jle    _068ae2_jump
		xor    %dl,%dl
		mov    $0x000001,%eax
		mov    %dl,_0c1b92_data
		xor    %edx,%edx
		call   _02d3ac_func
		jmp    _068d27_jump

	_068ae2_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _068afe_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000009,%eax
		je     _068b9d_jump

	_068afe_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _068b1a_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000016,%eax
		je     _068b9d_jump

	_068b1a_jump:
		testb  $0x000004,_0c1b9d_data
		je     _068b9d_jump
		xor    %eax,%eax
		mov    _0c1b7e_data,%al
		cmp    $0x00000a,%eax
		jne    _068b53_jump
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _068b53_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000006,%eax
		je     _068b53_jump
		call   _0689b4_func
		jmp    _068b9d_jump

	_068b53_jump:
		xor    %eax,%eax
		mov    _0c1b48_data,%edx
		mov    _0c1b85_data,%al
		add    %eax,%edx
		mov    _0c24b4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		add    $0x000010,%eax
		cmp    %eax,%edx
		jle    _068b9d_jump
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _068b9d_jump
		xor    %edx,%edx
		mov    %dx,_0c1b5e_data

	_068b9d_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _068bb9_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000009,%eax
		je     _068c88_jump

	_068bb9_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _068d27_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000016,%eax
		je     _068be3_jump
		cmp    $0x000020,%eax
		je     _068be3_jump
		cmp    $0x000026,%eax
		jne    _068d27_jump

	_068be3_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000010,0x000007(%ebx,%eax,1)
		je     _068c17_jump
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		test   %eax,%eax
		jmp    _068c43_jump

	_068c17_jump:
		xor    %edx,%edx
		mov    _0c1b86_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b20_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1b87_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_068c43_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _068d27_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _068d27_jump

	_068c88_jump:
		mov    _0c24d2_data,%dh
		xor    %eax,%eax
		dec    %dh
		mov    %dh,%al
		mov    %dh,_0c24d2_data
		test   %eax,%eax
		jne    _068d1e_jump
		mov    _0c2565_data,%bl
		test   %bl,%bl
		jne    _068d1e_jump
		mov    $0x000002,%bh
		mov    _0c1b40_data,%ecx
		mov    %bh,_0c1b92_data
		test   %ecx,%ecx
		je     _068d06_jump
		mov    _0c1b9d_data,%cl
		and    $0x0000fb,%cl
		mov    %eax,_0c1b40_data
		mov    %cl,_0c1b9d_data
		mov    $0x000040,%ch
		mov    $_0c1b1c_data,%eax
		mov    %ch,_0c24d2_data
		call   _068948_func
		mov    _0c24c6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _068d06_jump
		mov    $0x000001,%al
		xor    %bh,%bh
		mov    %al,_0c2565_data
		mov    %bx,_0c24c8_data
		mov    %bl,_0c1b92_data

	_068d06_jump:
		mov    _0c1b92_data,%al
		mov    $0x00005a,%ecx
		mov    %al,_0c24d1_data
		mov    %cx,_0c1b72_data
		jmp    _068d27_jump

	_068d1e_jump:
		movw   $0x00ffff,_0c1b66_data

	_068d27_jump:
		cmpl   $0x000000,_0c1b40_data
		je     _068d51_jump
		testb  $0x000004,_0c1b9d_data
		je     _068d51_jump
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _068d51_jump
		cmp    $0x000004,%eax
		je     _068d51_jump
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068d51_jump:
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068d58_func:
		push   %ecx
		push   %edx
		call   _073c10_func
		mov    _0c1b92_data,%dl
		mov    _0c1b70_data,%eax
		dec    %dl
		sar    $0x000010,%eax
		mov    %dl,_0c1b92_data
		cmp    $0xffffffff,%eax
		jne    _068dcd_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _068dc4_jump
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		call   _024288_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092204_data(%eax)
		je     _068dc4_jump
		movw   $0x00003c,_0c1b72_data
		jmp    _068dcd_jump

	_068dc4_jump:
		movw   $0x000078,_0c1b72_data

	_068dcd_jump:
		xor    %eax,%eax
		mov    _0c1b92_data,%al
		cmp    $0x0000ff,%eax
		jne    _068e04_jump
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		sete   %al
		xor    %ah,%ah
		add    $0x000003,%eax
		xor    %ecx,%ecx
		mov    %ax,_0c2580_data
		call   _01cd00_func
		mov    %cx,_0c24c4_data

	_068e04_jump:
		pop    %edx
		pop    %ecx
		ret    



_068e08_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %ebp
		mov    _0c24de_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		cmpl   $0x000000,0x000024(%ecx)
		je     _068eea_jump
		mov    0x000028(%ecx),%eax
		mov    _0c1b44_data,%ebx
		sub    $0x000052,%eax
		cmp    %ebx,%eax
		jge    _068ecf_jump
		mov    0x000028(%ecx),%eax
		add    $0x000096,%eax
		cmp    %ebx,%eax
		jle    _068ecf_jump
		mov    0x00002c(%ecx),%eax
		mov    _0c1b48_data,%edi
		add    $0x000060,%eax
		cmp    %edi,%eax
		jle    _068ecf_jump
		mov    %eax,_0c1b48_data
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		je     _068ec5_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		mov    0x000040(%ecx),%eax
		mov    $0xffffffff,%ebx
		sar    $0x000010,%eax
		xor    %edx,%edx
		call   _04d240_func
		mov    %ax,_0c1b5e_data
		mov    %dx,_0c24c4_data
		xor    %ah,%ah
		mov    %bx,_0c24d4_data
		mov    %ah,_0c1b8d_data
		mov    %ah,_0c1b8e_data
		mov    %ah,_0c24d3_data
		jmp    _068ecf_jump

	_068ec5_jump:
		mov    0x000042(%ecx),%ax
		mov    %ax,_0c1b5e_data

	_068ecf_jump:
		mov    _0c247c_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%ecx),%ebp
		add    $0x0000a8,%eax
		cmp    %ebp,%eax
		jge    _068eea_jump
		andb   $0x0000fb,0x000081(%ecx)

	_068eea_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068ef0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		xor    %edx,%edx
		mov    _0c1b5c_data,%bx
		mov    %edx,0x000024(%esp)
		test   %bx,%bx
		je     _0691e0_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _068f24_jump
		mov    _0c2576_data,%eax
		sar    $0x000010,%eax
		jmp    _068f26_jump

	_068f24_jump:
		xor    %eax,%eax

	_068f26_jump:
		mov    _0c2572_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    _0c2578_data,%eax
		mov    _0c2390_data,%edx
		sar    $0x000012,%eax
		sar    $0x000010,%edx
		mov    %eax,0x000020(%esp)
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0c1b04_data,%esi
		add    %edx,%eax
		mov    _0c245a_data,%cx
		shl    $0x000002,%eax
		xor    %edi,%edi
		add    %eax,%esi
		test   %cx,%cx
		jg     _068f98_jump
		jmp    _0691e0_jump

	_068f70_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0c2390_data(,%eax,2),%esi
		sar    $0x000010,%esi
		imul   $0x000084,%esi,%esi
		mov    _0c1b04_data,%eax
		add    %eax,%esi
		cmp    _0c245a_data,%di
		jge    _0691e0_jump

	_068f98_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000004,_092246_data(,%eax,4)
		je     _068f70_jump
		lea    0x000008(%esp),%eax
		lea    0x000014(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01d3c0_func
		mov    0x000012(%esp),%ecx
		sar    $0x000010,%ecx
		mov    0x000002(%esp),%edx
		mov    %ecx,%eax
		sar    $0x000010,%edx
		sar    $0x000003,%eax
		add    %eax,%edx
		mov    %ecx,%eax
		sar    $0x000002,%eax
		sub    %eax,%ecx
		mov    %dx,0x000004(%esp)
		mov    %cx,0x000014(%esp)
		testb  $0x000020,0x000081(%esi)
		je     _069036_jump
		lea    0x00001c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000028(%esp),%ebx
		push   %eax
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d840_func
		mov    _0c1b66_data,%ax
		mov    0x000034(%esi),%dx
		xor    %ebx,%ebx
		cmp    %dx,%ax
		sete   %al
		mov    -0x000002(%esp),%edx
		mov    %al,%bl
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000074(%esi),%al
		add    %edx,%eax
		add    %ebx,%eax
		mov    %ax,0x000010(%esp)
		jmp    _069046_jump

	_069036_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000010(%esp)

	_069046_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		mov    0x000010(%esp),%ecx
		add    %ebx,%eax
		sub    %ecx,%eax
		mov    %eax,0x000008(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000010,_092247_data(,%eax,4)
		je     _06908f_jump
		mov    0x000004(%esp),%eax
		mov    %ecx,%esi
		mov    0x000014(%esp),%edx
		add    $0x000002,%esi
		add    $0x000006,%eax
		sub    $0x00000c,%edx
		mov    %si,0x000010(%esp)
		mov    %ax,0x000004(%esp)
		mov    %dx,0x000014(%esp)

	_06908f_jump:
		mov    0x000004(%esp),%edx
		add    0x000014(%esp),%edx
		mov    _0c1b5a_data,%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		jle    _0690cd_jump
		mov    0x000002(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _0690c7_jump
		cmp    %ecx,%eax
		jg     _0690c7_jump
		mov    $0x000001,%eax
		jmp    _0690c9_jump

	_0690c7_jump:
		xor    %eax,%eax

	_0690c9_jump:
		test   %eax,%eax
		jne    _0690fb_jump

	_0690cd_jump:
		mov    0x00000a(%esp),%eax
		mov    _0c1b5a_data,%ebx
		movswl %dx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _0690f1_jump
		cmp    %ecx,%eax
		jg     _0690f1_jump
		mov    $0x000001,%eax
		jmp    _0690f3_jump

	_0690f1_jump:
		xor    %eax,%eax

	_0690f3_jump:
		test   %eax,%eax
		je     _068f70_jump

	_0690fb_jump:
		mov    0x000010(%esp),%eax
		mov    0x000008(%esp),%ecx
		mov    0x00000e(%esp),%ebx
		mov    _0c2576_data,%si
		add    %ecx,%eax
		sar    $0x000010,%ebx
		movswl %ax,%edx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _06912a_jump
		cmp    %ecx,%eax
		jg     _06912a_jump
		mov    $0x000001,%eax
		jmp    _06912c_jump

	_06912a_jump:
		xor    %eax,%eax

	_06912c_jump:
		test   %eax,%eax
		jne    _0691d8_jump
		mov    0x000020(%esp),%eax
		mov    0x00000e(%esp),%ebx
		mov    %edx,%ecx
		add    %eax,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		cmp    %ebx,%eax
		jl     _069155_jump
		cmp    %ecx,%eax
		jg     _069155_jump
		mov    $0x000001,%eax
		jmp    _069157_jump

	_069155_jump:
		xor    %eax,%eax

	_069157_jump:
		test   %eax,%eax
		jne    _0691d8_jump
		mov    0x000020(%esp),%ebx
		mov    %edx,%ecx
		add    %ebx,%esi
		mov    0x00000e(%esp),%ebx
		movswl %si,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jl     _069180_jump
		cmp    %ecx,%eax
		jg     _069180_jump
		mov    $0x000001,%eax
		jmp    _069182_jump

	_069180_jump:
		xor    %eax,%eax

	_069182_jump:
		test   %eax,%eax
		jne    _0691d8_jump
		mov    0x000020(%esp),%ecx
		mov    0x00000e(%esp),%ebx
		add    %ecx,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _0691a7_jump
		cmp    %ecx,%eax
		jg     _0691a7_jump
		mov    $0x000001,%eax
		jmp    _0691a9_jump

	_0691a7_jump:
		xor    %eax,%eax

	_0691a9_jump:
		test   %eax,%eax
		jne    _0691d8_jump
		mov    0x000020(%esp),%eax
		mov    0x00000e(%esp),%ebx
		mov    %edx,%ecx
		add    %eax,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		cmp    %ebx,%eax
		jl     _0691ce_jump
		cmp    %ecx,%eax
		jg     _0691ce_jump
		mov    $0x000001,%eax
		jmp    _0691d0_jump

	_0691ce_jump:
		xor    %eax,%eax

	_0691d0_jump:
		test   %eax,%eax
		je     _068f70_jump

	_0691d8_jump:
		movl   $0x000001,0x000024(%esp)

	_0691e0_jump:
		mov    0x000024(%esp),%eax
		add    $0x00002c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0691f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1ace_data,%bl
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,8),%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $_0c13b4_data,%eax
		mov    _0c1b44_data,%dx
		mov    %dx,(%eax)
		mov    _0c1b48_data,%dx
		mov    %dx,0x000002(%eax)
		mov    _0c1b89_data,%dl
		mov    %dl,0x000008(%eax)
		mov    _0c1b88_data,%dl
		mov    %dl,0x000009(%eax)
		mov    _0c1b86_data,%dl
		mov    %dl,0x00000a(%eax)
		mov    _0c1b87_data,%dl
		mov    %dl,0x00000b(%eax)
		mov    _0c1b9d_data,%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    %dl,0x00000c(%eax)
		mov    _0c1b76_data,%dl
		mov    %dl,0x000011(%eax)
		mov    _0c1ed2_data,%dl
		mov    %dl,0x000010(%eax)
		xor    %edx,%edx
		mov    0x000010(%eax),%dl
		test   %edx,%edx
		je     _0692a1_jump
		mov    _0c1ec0_data,%edx
		mov    0x000028(%edx),%cx
		mov    %cx,0x000004(%eax)
		mov    0x00002c(%edx),%cx
		mov    %cx,0x000006(%eax)
		mov    0x00006a(%edx),%cl
		mov    %cl,0x00000d(%eax)
		mov    0x00006b(%edx),%cl
		mov    %cl,0x00000e(%eax)
		mov    0x000081(%edx),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    %dl,0x00000f(%eax)

	_0692a1_jump:
		inc    %bl
		xor    %eax,%eax
		mov    %bl,%al
		cmp    $0x000064,%eax
		jle    _0692b6_jump
		mov    $0x000001,%ah
		xor    %bl,%bl
		mov    %ah,_0c1ad0_data

	_0692b6_jump:
		mov    %bl,_0c1ace_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0692c0_func:
		push   %ebx
		push   %edx
		mov    _0c1b64_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _0692ff_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		mov    0x000060(%edx,%eax,1),%ax
		and    $0x00ffff,%eax
		cmp    $0x0000a0,%eax
		je     _0693cc_jump
		cmp    $0x00009f,%eax
		je     _0693cc_jump

	_0692ff_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _0693cc_jump
		mov    _0c1b88_data,%al
		cmp    $0x00000d,%eax
		je     _0693cc_jump
		cmp    $0x00000b,%eax
		je     _0693cc_jump
		cmp    $0x00000c,%eax
		je     _0693cc_jump
		cmp    $0x000012,%eax
		je     _0693cc_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _069345_jump
		neg    %eax

	_069345_jump:
		cmp    $0x000003,%eax
		jle    _069384_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000028,%eax
		je     _069384_jump
		xor    %edx,%edx
		mov    _0c1b28_data,%ebx
		mov    _0c1b89_data,%dl
		mov    (%ebx,%edx,4),%edx
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _0693cc_jump
		cmp    $0x000008,%eax
		je     _0693cc_jump
		cmp    $0x000034,%eax
		je     _0693cc_jump
		cmp    $0x000035,%eax
		je     _0693cc_jump
		mov    $0x000029,%ebx
		jmp    _0693c0_jump

	_069384_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _069392_jump
		neg    %eax

	_069392_jump:
		cmp    $0x000002,%eax
		jg     _0693cc_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000028,%eax
		jne    _0693cc_jump
		xor    %edx,%edx
		mov    _0c1b28_data,%ebx
		mov    _0c1b89_data,%dl
		mov    (%ebx,%edx,4),%edx
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _0693cc_jump
		mov    $0x00002a,%ebx

	_0693c0_jump:
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		call   _01d4a8_func

	_0693cc_jump:
		pop    %edx
		pop    %ebx
		ret    



_0693d0_func:
		push   %edx
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		test   %eax,%eax
		jne    _06942f_jump
		mov    _0c1b88_data,%al
		cmp    $0x000028,%eax
		jne    _06942f_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		je     _069400_jump
		mov    $0xffffffff,%eax

	_069400_jump:
		mov    %eax,%edx
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		cmp    $0x000000,%eax
		je     _06941b_jump
		mov    $0x000001,%eax
		jg     _06941b_jump
		neg    %eax

	_06941b_jump:
		cmp    %edx,%eax
		jne    _069428_jump
		movb   $0x00004f,_0c1b86_data
		pop    %edx
		ret    

	_069428_jump:
		movb   $0x000050,_0c1b86_data

	_06942f_jump:
		pop    %edx
		ret    



_069434_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xffffffff,%edx
		mov    $_0c1b1c_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0c1b72_data
		mov    %bx,_0c24c2_data
		mov    %bx,_0c24c0_data
		call   _01dcec_func
		mov    $_0c1b1c_data,%eax
		call   _01e494_func
		call   _0682a4_func
		call   _0658a0_func
		call   _0515a8_func
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06948b_jump
		call   _050720_func
		jmp    _069492_jump

	_06948b_jump:
		jge    _069492_jump
		call   _050644_func

	_069492_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0694a5_jump
		call   _050d28_func
		jmp    _0694ac_jump

	_0694a5_jump:
		jle    _0694ac_jump
		call   _050ca4_func

	_0694ac_jump:
		xor    %eax,%eax
		call   _05f05c_func
		xor    %eax,%eax
		mov    _0c5184_data,%al
		cmp    $0x000001,%eax
		jne    _0694d4_jump
		mov    $_0c32e4_data,%edi
		xor    %ah,%ah
		mov    $_0c32e8_data,%esi
		mov    %ah,_0c5184_data
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)

	_0694d4_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _069501_jump
		xor    %eax,%eax
		mov    _0c1b87_data,%al
		test   %eax,%eax
		jmp    _06952d_jump

	_069501_jump:
		xor    %edx,%edx
		mov    _0c1b86_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c1b20_data,%edx
		mov    0x00000a(%edx,%eax,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1b87_data,%dl
		dec    %eax
		cmp    %eax,%edx

	_06952d_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _06956b_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c1b88_data,%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		je     _069583_jump

	_06956b_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _069583_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000008,%eax
		je     _0695de_jump

	_069583_jump:
		mov    $_0c1b1c_data,%eax
		mov    $0x000080,%cl
		call   _068948_func
		mov    _0c1b9d_data,%bh
		mov    _0c24c6_data,%eax
		mov    %cl,_0c24d2_data
		mov    $0x000001,%ch
		and    $0x0000fb,%bh
		sar    $0x000010,%eax
		mov    %bh,_0c1b9d_data
		mov    %ch,_0c2564_data
		test   %eax,%eax
		jl     _0695c8_jump
		mov    $0x000002,%dl
		mov    %dl,_0c1b92_data
		mov    %dl,_0c24d1_data
		jmp    _0695de_jump

	_0695c8_jump:
		mov    %ch,_0c2565_data
		xor    %al,%al
		xor    %esi,%esi
		mov    %al,_0c1b92_data
		mov    %si,_0c24c8_data

	_0695de_jump:
		mov    $_0c1b1c_data,%eax
		call   _04dbe4_func
		call   _0691f0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0695f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_0c1b1c_data,%eax
		xor    %edx,%edx
		call   _024568_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _06961d_jump
		xor    %edx,%edx
		mov    %dx,_0c1b5c_data

	_06961d_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c1b88_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _069644_jump
		xor    %dl,%dl
		jmp    _069646_jump

	_069644_jump:
		mov    $0x000002,%dl

	_069646_jump:
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0696a2_jump
		mov    _0c1b48_data,%edx
		sub    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b85_data,%al
		add    %edx,%eax
		sar    $0x000004,%eax
		mov    %edx,_0c1b48_data
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0c1b44_data,%ecx
		mov    _0c1b84_data,%al
		add    %ecx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e288_func
		mov    _0c1b5c_data,%edx
		mov    _0c1b48_data,%esi
		sar    $0x000010,%edx
		add    %edx,%esi
		xor    %ah,%ah
		mov    %esi,_0c1b48_data
		jmp    _0696b4_jump

	_0696a2_jump:
		mov    $_0c1b1c_data,%eax
		and    $0x0000ff,%edx
		call   _024288_func
		xor    %ah,%ah

	_0696b4_jump:
		cwtl   
		testb  $0x000002,_092204_data(%eax)
		je     _06971e_jump
		mov    _0c1b5c_data,%eax
		mov    _0c1b48_data,%edi
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0c1b82_data,%dl
		sub    %eax,%edi
		mov    _092204_data(%edx),%cl
		mov    %edi,_0c1b48_data
		test   $0x000002,%cl
		jne    _0696ff_jump
		test   %eax,%eax
		jge    _0696ff_jump
		xor    %ebx,%ebx
		lea    0x000004(%edi),%ebp
		mov    %bx,_0c1b5e_data
		mov    %ebp,_0c1b48_data
		jmp    _069709_jump

	_0696ff_jump:
		mov    $_0c1b1c_data,%eax
		call   _024ec4_func

	_069709_jump:
		xor    %ecx,%ecx
		mov    $0xffffffff,%esi
		mov    %cx,_0c1b5c_data
		mov    %si,_0c1b66_data

	_06971e_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069728_func:
		push   %ebx
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _06977f_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000004,%eax
		je     _069770_jump
		pop    %ebx
		ret    

	_069744_jump:
		xor    %eax,%eax
		mov    _0c24a0_data,%al
		test   %eax,%eax
		jne    _06975a_jump

	_06974f_jump:
		movw   $0x000001,_0c1b5e_data
		pop    %ebx
		ret    

	_06975a_jump:
		xor    %ebx,%ebx
		mov    %bx,_0c1b5e_data
		pop    %ebx
		ret    

	_069765_jump:
		movw   $0x000002,_0c1b5e_data
		pop    %ebx
		ret    

	_069770_jump:
		mov    _0c1b88_data,%al
		cmp    $0x000002,%al
		jb     _06974f_jump
		jbe    _069744_jump
		cmp    $0x000003,%al
		je     _069765_jump

	_06977f_jump:
		pop    %ebx
		ret    



_069784_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000010,_092245_data(,%eax,4)
		je     _0697c2_jump
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		call   _04d240_func
		mov    %eax,%ebx
		jmp    _0697c6_jump

	_0697c2_jump:
		mov    0x000040(%edx),%bx

	_0697c6_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000020,_092245_data(,%eax,4)
		je     _0697e3_jump
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		call   _04d240_func
		jmp    _0697e7_jump

	_0697e3_jump:
		mov    0x000042(%edx),%ax

	_0697e7_jump:
		mov    _0c1b5c_data,%cx
		add    %ebx,%ecx
		mov    %ecx,%esi
		mov    0x00004e(%edx),%bx
		mov    _0c1b5e_data,%di
		add    %ebx,%esi
		add    0x00004c(%edx),%di
		mov    %cx,_0c1b5c_data
		mov    %edi,%ebx
		mov    %di,_0c1b5e_data
		add    %eax,%ebx
		mov    %si,_0c1b5c_data
		mov    %bx,_0c1b5e_data
		call   _0695f4_func
		cmpl   $0x000000,0x000024(%edx)
		jne    _069837_jump
		movw   $0x00ffff,_0c1b66_data

	_069837_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069840_func:
		push   %ecx
		push   %edx
		push   %edi
		xor    %eax,%eax
		mov    _0c5184_data,%al
		cmp    $0x000001,%eax
		jne    _069929_jump
		mov    _0c2582_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _0698b6_jump
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _0698b6_jump
		call   _040b24_func
		test   %ax,%ax
		je     _069891_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _069891_jump
		mov    $0x000001,%eax
		jmp    _0698fe_jump

	_069891_jump:
		call   _040ab0_func
		test   %ax,%ax
		je     _069903_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _069903_jump
		jmp    _0698fc_jump

	_0698b6_jump:
		mov    _0c2582_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0698db_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _0698db_jump
		mov    $0x000001,%eax
		jmp    _0698fe_jump

	_0698db_jump:
		mov    _0c2582_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _069903_jump
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _069903_jump

	_0698fc_jump:
		xor    %eax,%eax

	_0698fe_jump:
		call   _066c4c_func

	_069903_jump:
		cmpb   $0x000000,_0c24c6_data
		jne    _069915_jump
		call   _067228_func
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_069915_jump:
		xor    %edi,%edi
		mov    %di,_0cd0c4_data
		mov    %di,_0cd0ce_data
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_069929_jump:
		testb  $0x000060,_0c32e5_data
		jne    _0699ee_jump
		call   _040b24_func
		test   %ax,%ax
		jne    _069949_jump
		testb  $0x000018,_0c32e5_data
		je     _069953_jump

	_069949_jump:
		mov    $0x000001,%eax
		call   _066c4c_func

	_069953_jump:
		call   _040ab0_func
		test   %ax,%ax
		je     _06996d_jump
		testb  $0x000018,_0c32e5_data
		jne    _06996d_jump
		xor    %eax,%eax
		call   _066c4c_func

	_06996d_jump:
		call   _040b98_func
		test   %ax,%ax
		je     _069996_jump
		xor    %eax,%eax
		mov    _0c24c6_data,%al
		test   %eax,%eax
		jne    _069996_jump
		testb  $0x000018,_0c32e5_data
		jne    _069996_jump
		call   _066660_func
		incb   _0c24c6_data

	_069996_jump:
		call   _040c0c_func
		test   %ax,%ax
		je     _0699bf_jump
		xor    %eax,%eax
		mov    _0c24c6_data,%al
		test   %eax,%eax
		jne    _0699bf_jump
		testb  $0x000018,_0c32e5_data
		jne    _0699bf_jump
		call   _066a70_func
		incb   _0c24c6_data

	_0699bf_jump:
		cmpb   $0x000000,_0c24c6_data
		jne    _0699da_jump
		testb  $0x000018,_0c32e5_data
		jne    _0699da_jump
		call   _067228_func
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_0699da_jump:
		xor    %edx,%edx
		mov    %dx,_0cd0c4_data
		mov    %dx,_0cd0ce_data
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_0699ee_jump:
		call   _040b24_func
		test   %ax,%ax
		je     _0699ff_jump
		xor    %eax,%eax
		call   _066c4c_func

	_0699ff_jump:
		call   _040ab0_func
		test   %ax,%ax
		je     _069a13_jump
		mov    $0x000001,%eax
		call   _066c4c_func

	_069a13_jump:
		call   _040b98_func
		test   %ax,%ax
		je     _069a33_jump
		xor    %eax,%eax
		mov    _0c24c6_data,%al
		test   %eax,%eax
		jne    _069a33_jump
		call   _066660_func
		incb   _0c24c6_data

	_069a33_jump:
		call   _040c0c_func
		test   %ax,%ax
		je     _069a53_jump
		xor    %eax,%eax
		mov    _0c24c6_data,%al
		test   %eax,%eax
		jne    _069a53_jump
		call   _066a70_func
		incb   _0c24c6_data

	_069a53_jump:
		cmpb   $0x000000,_0c24c6_data
		jne    _069a65_jump
		call   _067228_func
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_069a65_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cd0c4_data
		mov    %cx,_0cd0ce_data
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    



_069a7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %edx,%edx
		mov    %dx,_0c24c2_data
		mov    %dx,_0c24c0_data
		call   _068a50_func
		test   %al,%al
		je     _069dbd_jump
		incb   _0c1b8d_data
		xor    %eax,%eax
		mov    _0c1b8d_data,%al
		cmp    $0x000003,%eax
		jle    _069ab8_jump
		xor    %dl,%dl
		mov    %dl,_0c1b8d_data

	_069ab8_jump:
		xor    %eax,%eax
		mov    _0c1b44_data,%bx
		mov    _0c1b84_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b48_data,%cx
		mov    _0c1b85_data,%al
		add    %ecx,%eax
		cwtl   
		mov    %eax,%edx
		mov    _0c24b2_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		mov    %ax,_0c1b70_data
		xor    %edx,%edx
		mov    _0c1b50_data,%eax
		mov    _0c1b84_data,%dl
		sar    $0x000010,%eax
		add    %eax,%edx
		add    $0x00001e,%edx
		test   %edx,%edx
		jl     _069b39_jump
		xor    %ebx,%ebx
		mov    _0c1b52_data,%edx
		mov    _0c1b85_data,%bl
		sar    $0x000010,%edx
		add    %edx,%ebx
		add    $0x000014,%ebx
		test   %ebx,%ebx
		jl     _069b39_jump
		cmp    $0x000122,%eax
		jg     _069b39_jump
		cmp    $0x0000c8,%edx
		jle    _069b46_jump

	_069b39_jump:
		xor    %dh,%dh
		mov    %dh,_0c1b92_data
		call   _068d58_func

	_069b46_jump:
		mov    _0c1b70_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _069b8c_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0c1b88_data,%dl
		testb  $0x000008,0x000007(%eax,%edx,8)
		je     _069b8c_jump
		call   _02d068_func
		test   %ax,%ax
		je     _069b8c_jump
		mov    $0x000001,%eax
		xor    %edx,%edx
		call   _02d3ac_func

	_069b8c_jump:
		xor    %bh,%bh
		mov    $_0c1b1c_data,%eax
		mov    %bh,_0c24c6_data
		call   _01dcec_func
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _069bb5_jump
		mov    $_0c1b1c_data,%eax
		call   _01e494_func

	_069bb5_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		je     _069d3f_jump
		cmp    $0x000006,%eax
		jne    _069bda_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000e,%eax
		je     _069d3f_jump

	_069bda_jump:
		call   *_0cd010_data
		cwtl   
		test   %eax,%eax
		je     _069c0a_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000004,%eax
		je     _069c0a_jump
		cmp    $0x000002,%eax
		je     _069c0a_jump
		cmp    $0x000008,%eax
		je     _069c0a_jump
		cmp    $0x000005,%eax
		je     _069c0a_jump
		cmp    $0x000003,%eax
		je     _069c0a_jump
		call   _0679c4_func

	_069c0a_jump:
		call   *_0cd018_data
		cwtl   
		test   %eax,%eax
		je     _069c1a_jump
		call   _0678b0_func

	_069c1a_jump:
		call   *_0cd014_data
		cwtl   
		test   %eax,%eax
		cmpb   $0x000000,_0c1ed4_data
		je     _069c4d_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000c,%eax
		jne    _069c3d_jump
		call   _05f03c_func

	_069c3d_jump:
		call   *_0cd010_data
		cwtl   
		test   %eax,%eax
		jne    _069c4d_jump
		call   _05ebd4_func

	_069c4d_jump:
		call   _040b24_func
		test   %ax,%ax
		je     _069c61_jump
		mov    $0x000001,%eax
		call   _066c4c_func

	_069c61_jump:
		call   _040ab0_func
		test   %ax,%ax
		je     _069c72_jump
		xor    %eax,%eax
		call   _066c4c_func

	_069c72_jump:
		call   _040b98_func
		test   %ax,%ax
		je     _069c87_jump
		call   _066660_func
		incb   _0c24c6_data

	_069c87_jump:
		call   _040c0c_func
		test   %ax,%ax
		je     _069c9c_jump
		call   _066a70_func
		incb   _0c24c6_data

	_069c9c_jump:
		cmpb   $0x000000,_0c24c6_data
		jne    _069caa_jump
		call   _067228_func

	_069caa_jump:
		mov    _0c1b50_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffec,%eax
		jge    _069ccc_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _069ccc_jump
		xor    %esi,%esi
		mov    %si,_0c1b5c_data

	_069ccc_jump:
		mov    _0c1b50_data,%eax
		sar    $0x000010,%eax
		cmp    $0x0000d2,%eax
		jle    _069cf0_jump
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _069cf0_jump
		xor    %edi,%edi
		mov    %di,_0c1b5c_data

	_069cf0_jump:
		mov    _0c1b52_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jge    _069d11_jump
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _069d11_jump
		xor    %eax,%eax
		mov    %ax,_0c1b5e_data

	_069d11_jump:
		xor    %eax,%eax
		mov    _0c1b52_data,%edx
		mov    _0c1b85_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0x0000be,%eax
		jle    _069d3f_jump
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _069d3f_jump
		xor    %edx,%edx
		mov    %dx,_0c1b5e_data

	_069d3f_jump:
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _069d52_jump
		call   _050720_func
		jmp    _069d59_jump

	_069d52_jump:
		jge    _069d59_jump
		call   _050644_func

	_069d59_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _069d6c_jump
		call   _050d28_func
		jmp    _069d73_jump

	_069d6c_jump:
		jle    _069d73_jump
		call   _050ca4_func

	_069d73_jump:
		testb  $0x000004,_0c1b9d_data
		je     _069d86_jump
		mov    $_0c1b1c_data,%eax
		call   _04dbe4_func

	_069d86_jump:
		cmpw   $0x000000,_0c24ee_data
		jne    _069dbd_jump
		cmpw   $0x000000,_0c24ec_data
		jne    _069dbd_jump
		push   $_0c257a_data
		mov    $_0c2578_data,%ecx
		mov    $_0c2576_data,%ebx
		mov    $_0c2574_data,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d988_func
		call   _02e3f0_func

	_069dbd_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069dc4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		xor    %edx,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0c24c2_data
		mov    %dx,_0c24c0_data
		xor    %edx,%edx
		call   _06b3dc_func
		call   _068a50_func
		test   %al,%al
		je     _06a3a3_jump
		xor    %eax,%eax
		mov    _0c1b44_data,%bx
		mov    _0c1b84_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b48_data,%cx
		mov    _0c1b85_data,%al
		add    %ecx,%eax
		cwtl   
		mov    %eax,%edx
		mov    _0c24b2_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		mov    %ax,_0c1b70_data
		call   _02d218_func
		mov    _0c1af8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _069e65_jump
		xor    %eax,%eax
		mov    _0c1b52_data,%edx
		mov    _0c1b85_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		test   %eax,%eax
		jge    _069e65_jump
		xor    %esi,%esi
		mov    %si,_0c1b5e_data

	_069e65_jump:
		mov    _0c1b70_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _069eaa_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    _0c1b28_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0c1b88_data,%al
		testb  $0x000008,0x000007(%edx,%eax,8)
		je     _069eaa_jump
		call   _02d068_func
		test   %ax,%ax
		je     _069eaa_jump
		mov    $0x000001,%eax
		xor    %edx,%edx
		call   _02d3ac_func

	_069eaa_jump:
		testb  $0x000001,_0c32e6_data
		je     _069ed1_jump
		mov    _0c1b70_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _069ed1_jump
		mov    _0c1b74_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _069ed1_jump
		call   _052c60_jump

	_069ed1_jump:
		xor    %cl,%cl
		mov    $_0c1b1c_data,%eax
		mov    %cl,_0c24c6_data
		call   _01dcec_func
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _069efc_jump
		mov    $_0c1b1c_data,%eax
		call   _01e494_func
		jmp    _069f0c_jump

	_069efc_jump:
		xor    %edi,%edi
		mov    %di,_0c1b5e_data
		mov    %di,_0c1b5c_data

	_069f0c_jump:
		mov    _0c257a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _069fcf_jump
		xor    %edx,%edx
		mov    _0c1b89_data,%dl
		mov    _0c1b28_data,%eax
		lea    0x000000(,%edx,4),%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    _0c1b88_data,%al
		testb  $0x000040,0x000007(%ebx,%eax,8)
		jne    _069fcf_jump
		test   %edx,%edx
		jne    _069f6b_jump
		cmp    $0x000004,%eax
		je     _069f6b_jump
		cmp    $0x000005,%eax
		je     _069f6b_jump
		cmp    $0x000006,%eax
		je     _069f6b_jump
		cmp    $0x000007,%eax
		je     _069f6b_jump
		cmp    $0x000009,%eax
		je     _069f6b_jump
		cmp    $0x00000a,%eax
		jne    _069faa_jump

	_069f6b_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000001,%eax
		jne    _069f83_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000001,%eax
		jne    _069faa_jump

	_069f83_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _069fcf_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000001,%eax
		je     _069fcf_jump
		cmp    $0x000003,%eax
		je     _069fcf_jump
		cmp    $0x000002,%eax
		je     _069fcf_jump
		cmp    $0x000004,%eax
		je     _069fcf_jump

	_069faa_jump:
		cmpw   $0x000000,_0c257c_data
		je     _069fbb_jump
		mov    $0x000015,%ebx
		jmp    _069fc0_jump

	_069fbb_jump:
		mov    $0x000014,%ebx

	_069fc0_jump:
		mov    $0x000003,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func

	_069fcf_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _069fe7_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000008,%eax
		je     _069fff_jump

	_069fe7_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _06a009_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00001f,%eax
		jne    _06a009_jump

	_069fff_jump:
		call   _0682a4_func
		jmp    _06a157_jump

	_06a009_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _06a09c_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000010,%eax
		jne    _06a061_jump
		call   _072a9c_func
		mov    _0c2560_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _06a070_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		mov    _0cd0ec_data,%bx
		movw   $0x000001,0x000056(%edx,%eax,1)
		test   %bx,%bx
		jne    _06a070_jump
		call   _01ccfc_func
		jmp    _06a070_jump

	_06a061_jump:
		cmp    $0x000015,%eax
		je     _06a06b_jump
		cmp    $0x000014,%eax
		jne    _06a070_jump

	_06a06b_jump:
		call   _0681b4_func

	_06a070_jump:
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000016,%eax
		je     _06a157_jump
		cmp    $0x000017,%eax
		je     _06a157_jump
		cmp    $0x000020,%eax
		je     _06a157_jump
		call   _0658a0_func
		jmp    _06a157_jump

	_06a09c_jump:
		call   *_0cd00c_data
		cwtl   
		test   %eax,%eax
		je     _06a0ac_jump
		call   _067a08_func

	_06a0ac_jump:
		call   *_0cd010_data
		cwtl   
		test   %eax,%eax
		je     _06a0bc_jump
		call   _0679c4_func

	_06a0bc_jump:
		call   *_0cd018_data
		cwtl   
		test   %eax,%eax
		je     _06a0cc_jump
		call   _0678b0_func

	_06a0cc_jump:
		call   *_0cd014_data
		cwtl   
		test   %eax,%eax
		cmpb   $0x000000,_0c6941_data
		je     _06a0f7_jump
		call   _040e60_func
		test   %ax,%ax
		je     _06a0f7_jump
		call   _040e20_func
		test   %ax,%ax
		je     _06a0f7_jump
		call   _07387c_func

	_06a0f7_jump:
		cmpb   $0x000000,_0c1ed4_data
		je     _06a121_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x00000c,%eax
		jne    _06a111_jump
		call   _05f03c_func

	_06a111_jump:
		call   *_0cd010_data
		cwtl   
		test   %eax,%eax
		jne    _06a121_jump
		call   _05ebd4_func

	_06a121_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000007,%eax
		jne    _06a134_jump
		call   _067d20_func
		jmp    _06a152_jump

	_06a134_jump:
		cmp    $0x000002,%eax
		jne    _06a140_jump
		call   _0682a4_func
		jmp    _06a152_jump

	_06a140_jump:
		call   *_0cd00c_data
		cwtl   
		test   %eax,%eax
		jne    _06a152_jump
		movb   $0x000001,_0c24d3_data

	_06a152_jump:
		call   _069840_func

	_06a157_jump:
		mov    _0c32e5_data,%dh
		test   $0x000060,%dh
		je     _06a1ed_jump
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		mov    $0x000005,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d840_func
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000011,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    _0c1eb8_data,%eax
		xor    %ebx,%ebx
		mov    0x000068(%eax),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%eax)
		mov    _0c1ebc_data,%edx
		mov    0x000028(%eax),%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x000002(%esp),%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    0x000074(%eax),%bl
		sub    %ebx,%ecx
		mov    %ecx,0x00002c(%eax)
		mov    0x000024(%edx),%ebx
		mov    %ecx,0x00002c(%edx)
		test   %ebx,%ebx
		jne    _06a1d4_jump
		mov    %edx,%eax
		call   _01f584_func

	_06a1d4_jump:
		mov    _0c1eb8_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _06a2b5_jump
		call   _01f584_func
		jmp    _06a2b5_jump

	_06a1ed_jump:
		test   $0x000018,%dh
		je     _06a2b5_jump
		mov    %dh,%al
		shl    $0x000003,%al
		shr    $0x000006,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06a23f_jump
		mov    %dh,%ch
		and    $0x0000e6,%ch
		mov    %ch,%al
		mov    %ch,_0c32e5_data
		or     $0x000011,%al
		mov    $0x000003,%ebx
		mov    %al,_0c32e5_data
		mov    $_0c1b1c_data,%eax
		mov    $0x000001,%edx
		call   _072f20_func
		mov    $_0c1b1c_data,%eax
		call   _01d4a8_func
		jmp    _06a2b5_jump

	_06a23f_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000001,%eax
		jne    _06a25c_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000003,%eax
		je     _06a28d_jump
		cmp    $0x000007,%eax
		je     _06a28d_jump

	_06a25c_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		je     _06a28d_jump
		mov    _0c32e5_data,%bh
		mov    $0x000001,%edx
		or     $0x000001,%bh
		mov    $_0c1b1c_data,%eax
		mov    %bh,_0c32e5_data
		mov    $0x000003,%ebx
		call   _01d4a8_func
		jmp    _06a2b5_jump

	_06a28d_jump:
		mov    _0c32e5_data,%al
		shl    $0x000003,%al
		shr    $0x000006,%al
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _06a2b5_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		je     _06a2b5_jump
		andb   $0x0000e7,_0c32e5_data

	_06a2b5_jump:
		mov    _0c1b64_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06a2c7_jump
		call   _069784_func

	_06a2c7_jump:
		call   _069728_func
		call   _068ef0_func
		test   %ax,%ax
		je     _06a2fe_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000007,%eax
		jne    _06a2e7_jump
		call   _06800c_func

	_06a2e7_jump:
		xor    %ecx,%ecx
		mov    %cx,_0c1b5c_data
		mov    %cx,_0c2584_data
		mov    %cx,_0c1b64_data

	_06a2fe_jump:
		mov    _0c24de_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06a310_jump
		call   _068e08_func

	_06a310_jump:
		call   _0692c0_func
		call   _0515a8_func
		mov    _0c1b5c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06a32d_jump
		call   _050720_func
		jmp    _06a334_jump

	_06a32d_jump:
		jge    _06a334_jump
		call   _050644_func

	_06a334_jump:
		mov    _0c1b5a_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06a347_jump
		call   _050d28_func
		jmp    _06a34e_jump

	_06a347_jump:
		jle    _06a34e_jump
		call   _050ca4_func

	_06a34e_jump:
		testb  $0x000004,_0c1b9d_data
		je     _06a372_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000007,%eax
		je     _06a372_jump
		mov    $_0c1b1c_data,%eax
		call   _04dbe4_func
		call   _0693d0_func

	_06a372_jump:
		push   $_0c257a_data
		mov    $_0c2578_data,%ecx
		mov    $_0c2576_data,%ebx
		mov    $_0c2574_data,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d988_func
		call   _02e3f0_func
		cmpb   $0x000000,_0c2570_data
		je     _06a3a3_jump
		call   _059b3c_func

	_06a3a3_jump:
		call   _0691f0_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a3c0_func:
		push   %edx
		mov    $0x01f400,%edx
		mov    $_0c6af0_data,%eax
		call   _077450_func
		pop    %edx
		ret    



_06a3d4_func:
		mov    $_0c6af0_data,%eax
		jmp    _077768_func



_06a3e0_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,0x000008(%esp)
		mov    %dx,0x000004(%esp)
		mov    %bx,(%esp)
		xor    %eax,%eax
		mov    _0c7968_data,%al
		mov    $_0c856c_data,%edx
		call   _03cddc_func
		call   _03a930_func
		mov    $0x000002,%eax
		mov    $0x00fa00,%ecx
		call   _03ba38_func
		call   _016fd8_func
		mov    _0c94c0_data,%esi
		mov    _0cdefc_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0ccfcc_data,%edi
		mov    _0cdefc_data,%esi
		xor    %ebx,%ebx
		call   _014d9d_func
		mov    $_0c796c_data,%esi
		mov    $_0c856c_data,%edi

	_06a456_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06a48d_jump
		call   _016fe8_func
		call   _016fd8_func
		mov    %esi,%edx
		mov    %edi,%eax
		call   _03bab8_func
		inc    %ebx
		mov    0x000008(%esp),%edx
		cmp    %dx,%bx
		jne    _06a456_jump
		mov    0x000004(%esp),%ecx
		dec    %ecx
		xor    %edx,%ebx
		mov    %cx,0x000004(%esp)
		jmp    _06a456_jump

	_06a48d_jump:
		call   _040e8c_func
		xor    %ebx,%ebx
		mov    $_0c856c_data,%edi
		xor    %esi,%esi

	_06a49b_jump:
		call   _040c80_func
		test   %ax,%ax
		jne    _06a4ea_jump
		call   _040ce8_func
		test   %ax,%ax
		jne    _06a4ea_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06a4ea_jump
		call   _016fe8_func
		call   _016fd8_func
		mov    $_0c796c_data,%edx
		mov    %edi,%eax
		call   _03bab8_func
		call   _040e8c_func
		inc    %ebx
		cmp    0x000008(%esp),%bx
		jne    _06a49b_jump
		mov    (%esp),%edx
		dec    %edx
		mov    %esi,%ebx
		mov    %dx,(%esp)
		jmp    _06a49b_jump

	_06a4ea_jump:
		mov    $_0c856c_data,%edx
		mov    $0x000002,%eax
		call   _03bbc0_func
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_06a500_func:
		push   %edx
		mov    $0x000005,%edx
		mov    $_0c6af0_data,%eax
		call   _045fd0_func
		pop    %edx
		ret    



_06a514_func:
		push   %ebx
		push   %edx
		call   _06a3c0_func
		mov    $0x000008,%ebx
		xor    %ah,%ah
		mov    $0xffffffff,%edx
		mov    %ah,_0c247a_data
		call   _06a500_func
		call   _01ccd4_func
		call   _03bfc4_func
		mov    $0x00003c,%eax
		call   _06a3e0_func
		call   _06a3d4_func
		call   _01cd14_func
		pop    %edx
		pop    %ebx
		ret    

	_06a560_jump:
		ret    



_06a564_func:
		mov    %ax,_097648_data
		mov    %eax,%eax
		ret    



_06a570_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0ce841_data
		je     _06a599_jump
		xor    %esi,%esi
		xor    %edi,%edi
		jmp    _06a591_jump

	_06a584_jump:
		push   %edi
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		call   _077e1c_func
		inc    %esi

	_06a591_jump:
		movswl %si,%eax
		cmp    $0x000020,%eax
		jle    _06a584_jump

	_06a599_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a608_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    0x000036(%eax),%ax
		add    %edx,%eax
		cwtl   
		cmp    $0xffffffa0,%eax
		jge    _06a61e_jump
		xor    %eax,%eax
		jmp    _06a63f_jump

	_06a61e_jump:
		cmp    $0x0001a0,%eax
		jle    _06a639_jump
		mov    $0x00007f,%eax
		movswl %ax,%edx
		cmp    $0x00007f,%edx
		jle    _06a64c_jump
		mov    $0x00007f,%eax
		pop    %edx
		ret    

	_06a639_jump:
		add    $0x000060,%eax
		sar    $0x000002,%eax

	_06a63f_jump:
		movswl %ax,%edx
		cmp    $0x00007f,%edx
		jle    _06a64c_jump
		mov    $0x00007f,%eax

	_06a64c_jump:
		pop    %edx
		ret    



_06a650_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x00000c(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x00000c(%esp),%ebx
		lea    0x000008(%esp),%edx
		call   _01d3c0_func
		mov    -0x000002(%esp),%ebx
		xor    %eax,%eax
		mov    _0c1b44_data,%edx
		mov    _0c1b84_data,%al
		sar    $0x000011,%ebx
		add    %edx,%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		add    %ebx,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		cltd   
		xor    %edx,%eax
		sub    %edx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b48_data,%edx
		mov    _0c1b85_data,%al
		mov    0x000006(%esp),%ecx
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000011,%eax
		add    %eax,%ecx
		lea    -0x000028(%edx),%eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		cltd   
		xor    %edx,%eax
		sub    %edx,%eax
		movswl %bx,%edx
		cwtl   
		add    %edx,%eax
		mov    $0x00007f,%edx
		sar    $0x000002,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %dx,%edx
		test   %edx,%edx
		jge    _06a6da_jump
		xor    %eax,%eax

	_06a6da_jump:
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a6e4_func:
		push   %ebx
		push   %edx
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000007,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x000014,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _06a564_func
		pop    %edx
		pop    %ebx
		ret    



_06a708_func:
		test   %ax,%ax
		ret    



_06a70c_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0ce841_data
		je     _06a7a1_jump
		mov    $0xfffffffe,%ebx
		xor    %eax,%eax

	_06a722_jump:
		add    $0x000002,%eax
		xor    %edx,%edx
		mov    %bx,_0dbe28_data(%eax)
		mov    %dx,_0dbe50_data(%eax)
		cmp    $0x000028,%eax
		jne    _06a722_jump
		mov    $0x000002,%eax
		mov    %dx,_0dbf78_data
		mov    %dx,_0dbe7e_data
		mov    %dx,_0dbe80_data
		mov    $0xfffffffe,%edx
		mov    %ax,_0dbe82_data
		xor    %eax,%eax

	_06a761_jump:
		add    $0x00000c,%eax
		mov    %dx,_0dbce0_data(%eax)
		cmp    $0x000120,%eax
		jne    _06a761_jump
		xor    %edx,%edx
		mov    _0cd026_data,%dx
		mov    %edx,%eax
		shl    $0x000007,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x000014,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _06a564_func
		mov    _0cd026_data,%eax
		sar    $0x000010,%eax
		call   _06a708_func

	_06a7a1_jump:
		pop    %edx
		pop    %ebx
		nop
		ret    



_06a7a8_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %eax,%eax

	_06a7ae_jump:
		movswl %ax,%edx
		cmp    $0x000014,%edx
		je     _06a7c3_jump
		cmp    _0dbe2a_data(,%edx,2),%bx
		je     _06a7c3_jump
		inc    %eax
		jmp    _06a7ae_jump

	_06a7c3_jump:
		movswl %ax,%edx
		cmp    $0x000014,%edx
		jne    _06a7ec_jump

	_06a7cb_jump:
		dec    %eax
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _06a7e2_jump
		mov    _0dbe50_data(,%edx,2),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _06a7cb_jump

	_06a7e2_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _06a7ec_jump
		xor    %eax,%eax

	_06a7ec_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _06a7fc_jump
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

	_06a7fc_jump:
		mov    _0dbe52_data(,%edx,2),%ax
		pop    %edx
		pop    %ebx
		ret    



_06a808_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0dbf78_data,%cx
		mov    %eax,%ebx
		movswl %cx,%edx
		mov    $0xffffffff,%eax
		test   %edx,%edx
		je     _06a851_jump
		mov    $_0dbe88_data,%edx
		mov    _0dbe88_data,%si
		xor    %eax,%eax
		cmp    %si,%bx
		je     _06a847_jump

	_06a835_jump:
		cmp    %cx,%ax
		jge    _06a847_jump
		inc    %eax
		mov    0x000018(%edx),%di
		add    $0x000018,%edx
		cmp    %di,%bx
		jne    _06a835_jump

	_06a847_jump:
		cmp    %cx,%ax
		jne    _06a851_jump
		mov    $0xffffffff,%eax

	_06a851_jump:
		mov    %cx,_0dbf78_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a860_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    $_0dbcec_data,%edx
		mov    _0dbcec_data,%bx
		xor    %eax,%eax
		cmp    %bx,%cx
		je     _06a88e_jump

	_06a879_jump:
		movswl %ax,%ebx
		cmp    $0x000018,%ebx
		jge    _06a88e_jump
		inc    %eax
		mov    0x00000c(%edx),%si
		add    $0x00000c,%edx
		cmp    %si,%cx
		jne    _06a879_jump

	_06a88e_jump:
		movswl %ax,%edx
		cmp    $0x000018,%edx
		jne    _06a89b_jump
		mov    $0xffffffff,%eax

	_06a89b_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06a8e0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%esi
		mov    $_0dbcf2_data,%edx
		mov    $_0dbcec_data,%ebx
		mov    _0dbcf2_data,%cx
		xor    %eax,%eax
		cmp    %cx,%si
		je     _06a91d_jump

	_06a900_jump:
		cmp    (%ebx),%di
		je     _06a91d_jump
		movswl %ax,%ecx
		cmp    $0x000018,%ecx
		jge    _06a91d_jump
		inc    %eax
		mov    0x00000c(%edx),%cx
		add    $0x00000c,%edx
		add    $0x00000c,%ebx
		cmp    %cx,%si
		jne    _06a900_jump

	_06a91d_jump:
		movswl %ax,%edx
		cmp    $0x000018,%edx
		jne    _06a92a_jump
		mov    $0xffffffff,%eax

	_06a92a_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06a930_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0dbf78_data,%si
		cwtl   
		call   _06a808_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _06aa15_jump
		mov    _0dbf78_data,%si
		mov    %eax,%ebx
		cmp    %si,%ax
		jge    _06a9ff_jump

	_06a95f_jump:
		movswl %bx,%edx
		lea    0x000001(%edx),%eax
		imul   $0x000018,%eax,%eax
		imul   $0x000018,%edx,%edx
		mov    _0dbe88_data(%eax),%cx
		mov    %cx,_0dbe88_data(%edx)
		mov    _0dbe8a_data(%eax),%cx
		mov    %cx,_0dbe8a_data(%edx)
		mov    _0dbe8c_data(%eax),%cx
		mov    %cx,_0dbe8c_data(%edx)
		mov    _0dbe8e_data(%eax),%cx
		mov    %cx,_0dbe8e_data(%edx)
		mov    _0dbe90_data(%eax),%cx
		mov    %cx,_0dbe90_data(%edx)
		mov    _0dbe92_data(%eax),%cx
		mov    %cx,_0dbe92_data(%edx)
		mov    _0dbe94_data(%eax),%cx
		mov    %cx,_0dbe94_data(%edx)
		mov    _0dbe96_data(%eax),%cx
		mov    %cx,_0dbe96_data(%edx)
		mov    _0dbe98_data(%eax),%ecx
		mov    %ecx,_0dbe98_data(%edx)
		mov    _0dbe9c_data(%eax),%ax
		inc    %ebx
		mov    %ax,_0dbe9c_data(%edx)
		cmp    %si,%bx
		jl     _06a95f_jump

	_06a9ff_jump:
		movswl %si,%eax
		mov    %si,_0dbf78_data
		test   %eax,%eax
		jle    _06aa15_jump
		dec    %esi
		mov    %si,_0dbf78_data

	_06aa15_jump:
		mov    _0dbf78_data,%si
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06aa24_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0dbf78_data,%si
		mov    _0c4734_data,%ebp
		xor    %ebx,%ebx
		test   %si,%si
		jle    _06ab1d_jump

	_06aa42_jump:
		movswl %bx,%eax
		imul   $0x000018,%eax,%eax
		mov    _0dbe98_data(%eax),%edx
		cmp    %ebp,%edx
		jae    _06ab13_jump
		test   %edx,%edx
		je     _06ab13_jump
		mov    %ebx,%ecx
		cmp    %si,%bx
		jge    _06ab09_jump

	_06aa69_jump:
		movswl %cx,%edx
		lea    0x000001(%edx),%eax
		imul   $0x000018,%eax,%eax
		imul   $0x000018,%edx,%edx
		mov    _0dbe88_data(%eax),%di
		mov    %di,_0dbe88_data(%edx)
		mov    _0dbe8a_data(%eax),%di
		mov    %di,_0dbe8a_data(%edx)
		mov    _0dbe8c_data(%eax),%di
		mov    %di,_0dbe8c_data(%edx)
		mov    _0dbe8e_data(%eax),%di
		mov    %di,_0dbe8e_data(%edx)
		mov    _0dbe90_data(%eax),%di
		mov    %di,_0dbe90_data(%edx)
		mov    _0dbe92_data(%eax),%di
		mov    %di,_0dbe92_data(%edx)
		mov    _0dbe94_data(%eax),%di
		mov    %di,_0dbe94_data(%edx)
		mov    _0dbe96_data(%eax),%di
		mov    %di,_0dbe96_data(%edx)
		mov    _0dbe98_data(%eax),%edi
		mov    %edi,_0dbe98_data(%edx)
		mov    _0dbe9c_data(%eax),%ax
		inc    %ecx
		mov    %ax,_0dbe9c_data(%edx)
		cmp    %si,%cx
		jl     _06aa69_jump

	_06ab09_jump:
		movswl %si,%eax
		test   %eax,%eax
		jle    _06ab14_jump
		dec    %esi
		jmp    _06ab14_jump

	_06ab13_jump:
		inc    %ebx

	_06ab14_jump:
		cmp    %si,%bx
		jl     _06aa42_jump

	_06ab1d_jump:
		mov    %ebp,_0c4734_data
		mov    %si,_0dbf78_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06ab34_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    $_0dbcec_data,%edx
		mov    _0dbcec_data,%bx
		xor    %eax,%eax
		cmp    %bx,%cx
		je     _06ab62_jump

	_06ab4d_jump:
		movswl %ax,%ebx
		cmp    $0x000018,%ebx
		jge    _06ab62_jump
		inc    %eax
		mov    0x00000c(%edx),%si
		add    $0x00000c,%edx
		cmp    %si,%cx
		jne    _06ab4d_jump

	_06ab62_jump:
		movswl %ax,%ebx
		cmp    $0x000018,%ebx
		je     _06ab6f_jump
		movw   $0x00fffe,(%edx)

	_06ab6f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06abcc_func:
		movswl %dx,%edx
		mov    _097654_data(%edx),%dl
		and    $0x0000ff,%edx
		cwtl   
		imul   %edx,%eax
		sar    $0x000008,%eax
		ret    



_06abe4_func:
		push   %ebx
		mov    $0x00007f,%ebx
		movswl %dx,%edx
		sub    %edx,%ebx
		mov    _097654_data(%ebx),%dl
		and    $0x0000ff,%edx
		cwtl   
		imul   %edx,%eax
		sar    $0x000008,%eax
		pop    %ebx
		ret    



_06ac04_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		cmpb   $0x000000,_0ce841_data
		je     _06b315_jump
		cmpw   $0x000000,_0c1b76_data
		je     _06ac30_jump
		cmp    _0c24de_data,%si
		je     _06ac39_jump

	_06ac30_jump:
		cmp    _0c24dc_data,%si
		jne    _06ac3e_jump

	_06ac39_jump:
		mov    $0xffffffff,%esi

	_06ac3e_jump:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		jne    _06ac56_jump
		movswl %di,%eax
		cmp    $0x00000f,%eax
		je     _06ac56_jump
		xor    %eax,%eax
		mov    %ax,_0dbe80_data

	_06ac56_jump:
		movswl %si,%ebx
		mov    %ebx,%eax
		call   _06a7a8_func
		mov    %eax,0x000018(%esp)
		cmp    %ax,%di
		je     _06ad06_jump
		movswl %ax,%edx
		testb  $0x000008,_096c48_data(%edx)
		je     _06ad06_jump
		mov    %ebx,%eax
		call   _06a930_func
		mov    %ebx,%eax
		call   _06a8e0_func
		movswl %ax,%ebp
		test   %ebp,%ebp
		jl     _06ad06_jump
		lea    0x000000(,%ebp,4),%edx
		sub    %ebp,%edx
		shl    $0x000002,%edx
		xor    %ebx,%ebx
		mov    _0dbcf0_data(%edx),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    %edx,0x00000c(%esp)
		mov    _097148_data(,%eax,4),%bl
		mov    _09714a_data(,%eax,4),%cl
		mov    _097149_data(,%eax,4),%dl
		push   %ebx
		mov    %edx,%ebx
		mov    _097548_data(%eax),%al
		and    $0x0000ff,%ebx
		mov    %eax,%edx
		and    $0x0000ff,%edx
		mov    %ebp,%eax
		call   _077e1c_func
		mov    0x00000c(%esp),%eax
		mov    $0xfffffffe,%edx
		mov    $0xffffffff,%ebx
		mov    %dx,_0dbcec_data(%eax)
		xor    %ch,%ch
		mov    %bx,_0dbcf2_data(%eax)
		mov    %ch,_0dbe0c_data(%ebp)

	_06ad06_jump:
		cmpb   $0x000000,_0c5185_data
		jne    _06b28d_jump
		movswl %di,%eax
		test   %eax,%eax
		je     _06b28d_jump
		cmp    0x000018(%esp),%di
		jne    _06ad32_jump
		testb  $0x000004,_096c48_data(%eax)
		je     _06b28d_jump

	_06ad32_jump:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _06ad50_jump
		cmp    _0c24dc_data,%si
		jne    _06ad69_jump
		mov    _0c24da_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06ad69_jump

	_06ad50_jump:
		mov    $_0c1b1c_data,%eax
		mov    $0x00007f,%cl
		call   _06a608_func
		mov    %al,0x000020(%esp)
		mov    %cl,0x000024(%esp)
		jmp    _06adac_jump

	_06ad69_jump:
		movswl %si,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		call   _06a608_func
		mov    %al,0x000020(%esp)
		movswl %di,%eax
		testb  $0x000001,_096c48_data(%eax)
		jne    _06ad9c_jump
		movb   $0x00007f,0x000024(%esp)
		jmp    _06adac_jump

	_06ad9c_jump:
		mov    _0c1b04_data,%eax
		add    %edx,%eax
		call   _06a650_func
		mov    %al,0x000024(%esp)

	_06adac_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _097149_data,%bl
		mov    _09714a_data,%cl
		cmp    $0x000035,%di
		jb     _06b134_jump
		jbe    _06adf8_jump
		cmp    $0x000050,%di
		jb     _06b124_jump
		jbe    _06b051_jump
		cmp    $0x000067,%di
		jb     _06b15e_jump
		jbe    _06b11a_jump
		cmp    $0x0000f5,%di
		je     _06b0f9_jump
		jmp    _06b15e_jump

	_06adf8_jump:
		movswl %si,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		mov    0x000060(%eax,%edx,4),%ax
		and    $0x00ffff,%eax
		cmp    $0x0000ee,%eax
		je     _06ae39_jump
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _09721d_data,%bl
		mov    _09721c_data,%al
		mov    _09721e_data,%cl
		mov    %ax,0x00001c(%esp)
		jmp    _06ae45_jump

	_06ae39_jump:
		xor    %eax,%eax
		mov    _097148_data,%al
		mov    %ax,0x00001c(%esp)

	_06ae45_jump:
		movswl %bx,%eax
		mov    %eax,0x000010(%esp)
		cmp    $0xffffffff,%eax
		je     _06b24a_jump
		cmp    $0x0000ff,%eax
		je     _06b24a_jump
		movswl %si,%ebp
		mov    %ebp,%eax
		call   _06a930_func
		xor    %eax,%eax
		mov    0x000020(%esp),%al
		mov    %eax,0x000004(%esp)
		movswl %di,%eax
		mov    %eax,0x000008(%esp)
		shl    $0x000002,%eax
		mov    %eax,0x000014(%esp)
		mov    0x000014(%esp),%edx
		xor    %eax,%eax
		mov    _09714b_data(%edx),%al
		mov    %eax,0x00000c(%esp)
		xor    %edx,%edx
		mov    _097646_data,%eax
		mov    0x000024(%esp),%dl
		sar    $0x000010,%eax
		imul   %edx,%eax
		mov    %edx,(%esp)
		imul   0x00000c(%esp),%eax
		sar    $0x00000e,%eax
		mov    0x000004(%esp),%edx
		cwtl   
		call   _06abe4_func
		mov    0x000014(%esp),%edx
		xor    %eax,%eax
		mov    _09714b_data(%edx),%al
		mov    %eax,0x00000c(%esp)
		mov    _097646_data,%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		imul   %edx,%eax
		imul   0x00000c(%esp),%eax
		sar    $0x00000e,%eax
		mov    0x000004(%esp),%edx
		cwtl   
		call   _06abcc_func
		mov    0x000008(%esp),%edx
		xor    %eax,%eax
		mov    _096d48_data(%edx),%al
		test   %eax,%eax
		jne    _06b186_jump
		mov    0x000004(%esp),%eax
		push   %eax
		mov    0x000018(%esp),%eax
		xor    %edx,%edx
		mov    _09714b_data(%eax),%dl
		mov    _097646_data,%eax
		mov    0x000004(%esp),%ebx
		sar    $0x000010,%eax
		imul   %ebx,%eax
		imul   %eax,%edx
		movswl %cx,%ebx
		sar    $0x00000e,%edx
		mov    0x00000c(%esp),%ecx
		movswl %dx,%eax
		mov    0x00001e(%esp),%edx
		push   %eax
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _097548_data(%ecx),%al
		mov    %edx,%ecx
		mov    0x000018(%esp),%edx
		call   _077ccc_func
		movswl %ax,%ebx
		cmp    $0xffffffff,%ebx
		je     _06b24a_jump
		mov    %ebp,%eax
		call   _06ab34_func
		mov    %ebx,%eax
		lea    0x000000(,%ebx,4),%edx
		xor    %ebx,%eax
		sub    %ebx,%edx
		mov    0x000024(%esp),%al
		mov    %ax,_0dbcee_data(,%edx,4)
		xor    %eax,%eax
		mov    %si,_0dbcec_data(,%edx,4)
		mov    0x000020(%esp),%al
		mov    %ax,_0dbcf0_data(,%edx,4)
		mov    0x000008(%esp),%eax
		mov    %di,_0dbcf2_data(,%edx,4)
		testb  $0x000010,_096c48_data(%eax)
		je     _06b24a_jump
		movb   $0x000001,_0dbe0c_data(%ebx)
		jmp    _06b24a_jump

	_06afae_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		je     _06afe2_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _097204_data,%al
		mov    _097205_data,%bl
		mov    %ax,0x00001c(%esp)
		mov    $0x00007f,%ah
		mov    _097206_data,%cl
		mov    %ah,0x000024(%esp)
		jmp    _06ae45_jump

	_06afe2_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0973f0_data,%al
		mov    _0973f1_data,%bl
		mov    %ax,0x00001c(%esp)
		mov    $0x00007f,%al
		mov    _0973f2_data,%cl
		mov    %al,0x000024(%esp)
		jmp    _06ae45_jump

	_06b009_jump:
		mov    _0dbe80_data,%ax
		movswl %ax,%ebp
		inc    %eax
		mov    %ax,_0dbe80_data
		cmp    $0x000002,%ebp
		jle    _06b042_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _097184_data,%al
		mov    _097185_data,%bl
		mov    %ax,0x00001c(%esp)
		xor    %eax,%eax
		mov    _097186_data,%cl
		mov    %ax,_0dbe80_data

	_06b042_jump:
		mov    $0xffffffff,%eax
		call   _06a930_func
		jmp    _06ae45_jump

	_06b051_jump:
		mov    _0dbe82_data,%ax
		movswl %ax,%ebp
		inc    %eax
		mov    %ax,_0dbe82_data
		cmp    $0x000001,%ebp
		jle    _06ae45_jump
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _097289_data,%bl
		mov    _09728a_data,%cl
		mov    _097288_data,%al
		mov    %dx,_0dbe82_data
		mov    %ax,0x00001c(%esp)
		jmp    _06ae45_jump

	_06b094_jump:
		movswl %si,%eax
		mov    %eax,%edx
		xor    %ebx,%ebx
		shl    $0x000005,%edx
		xor    %ecx,%ecx
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		mov    _097181_data,%bl
		mov    _097182_data,%cl
		mov    0x00006c(%eax,%edx,4),%al
		and    $0x0000ff,%eax
		mov    _097634_data(%eax),%al
		xor    %edx,%edx
		mov    _097180_data,%dl
		xor    %ah,%ah
		add    %eax,%edx
		mov    %dx,0x00001c(%esp)
		jmp    _06ae45_jump

	_06b0d8_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097195_data,%bl
		mov    _097194_data,%al
		mov    _097196_data,%cl
		mov    %ax,0x00001c(%esp)
		jmp    _06ae45_jump

	_06b0f9_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _09751d_data,%bl
		mov    _09751c_data,%al
		mov    _09751e_data,%cl
		mov    %ax,0x00001c(%esp)
		jmp    _06ae45_jump

	_06b11a_jump:
		mov    $0xffffffff,%ebx
		jmp    _06ae45_jump

	_06b124_jump:
		cmp    $0x000037,%di
		jb     _06b15e_jump
		jbe    _06b11a_jump
		cmp    $0x000039,%di
		je     _06b11a_jump
		jmp    _06b15e_jump

	_06b134_jump:
		cmp    $0x00000f,%di
		jb     _06b154_jump
		jbe    _06b009_jump
		cmp    $0x000013,%di
		jb     _06b15e_jump
		jbe    _06b0d8_jump
		cmp    $0x00002f,%di
		je     _06afae_jump
		jmp    _06b15e_jump

	_06b154_jump:
		cmp    $0x00000e,%di
		je     _06b094_jump

	_06b15e_jump:
		movswl %di,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097149_data(,%edx,4),%bl
		mov    _097148_data(,%edx,4),%al
		mov    _09714a_data(,%edx,4),%cl
		mov    %ax,0x00001c(%esp)
		jmp    _06ae45_jump

	_06b186_jump:
		call   _06aa24_func
		mov    %ebp,%eax
		call   _06a930_func
		mov    _0dbf76_data,%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    0x00001c(%esp),%eax
		mov    %bx,_0dbe8c_data(,%edx,8)
		mov    0x000014(%esp),%ebx
		mov    %ax,_0dbe90_data(,%edx,8)
		xor    %eax,%eax
		mov    _09714b_data(%ebx),%al
		mov    %ax,_0dbe92_data(,%edx,8)
		xor    %eax,%eax
		mov    0x000024(%esp),%al
		mov    %ax,_0dbe94_data(,%edx,8)
		xor    %eax,%eax
		mov    0x000020(%esp),%al
		mov    0x000008(%esp),%ebx
		mov    %ax,_0dbe96_data(,%edx,8)
		xor    %eax,%eax
		mov    _096d48_data(%ebx),%al
		mov    _0c4734_data,%ebx
		mov    %si,_0dbe88_data(,%edx,8)
		add    %ebx,%eax
		mov    %eax,_0dbe98_data(,%edx,8)
		mov    0x000008(%esp),%eax
		mov    %di,_0dbe8a_data(,%edx,8)
		mov    _096f48_data(,%eax,2),%bx
		mov    %cx,_0dbe8e_data(,%edx,8)
		test   %bx,%bx
		setne  %al
		xor    %ah,%ah
		mov    %ax,_0dbe9c_data(,%edx,8)
		mov    _0dbf76_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jge    _06b24a_jump
		incw   _0dbf78_data

	_06b24a_jump:
		movswl %di,%edx
		cmp    $0x0000cb,%edx
		je     _06b275_jump
		cmp    $0x0000ed,%edx
		je     _06b275_jump
		cmp    $0x0000d1,%edx
		je     _06b275_jump
		cmp    $0x0000e1,%edx
		je     _06b275_jump
		cmp    $0x0000ec,%edx
		jne    _06b28d_jump

	_06b275_jump:
		xor    %eax,%eax
		mov    _0c24d2_data,%al
		cmp    $0x000040,%eax
		je     _06b288_jump
		cmp    $0x000080,%eax
		jne    _06b28d_jump

	_06b288_jump:
		call   _01ccfc_func

	_06b28d_jump:
		xor    %eax,%eax

	_06b28f_jump:
		movswl %ax,%edx
		cmp    $0x000014,%edx
		je     _06b2b3_jump
		add    %edx,%edx
		cmp    _0dbe2a_data(%edx),%si
		je     _06b2b3_jump
		mov    _0dbe28_data(%edx),%edx
		sar    $0x000010,%edx
		cmp    $0xfffffffe,%edx
		je     _06b2b3_jump
		inc    %eax
		jmp    _06b28f_jump

	_06b2b3_jump:
		movswl %ax,%edx
		cmp    $0x000014,%edx
		jne    _06b305_jump
		movswl %di,%edx
		test   %edx,%edx
		je     _06b315_jump

	_06b2c2_jump:
		dec    %eax
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _06b2e8_jump
		mov    _0dbe28_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%ebx
		mov    _0c1b04_data,%edx
		cmpl   $0x000000,0x000024(%edx,%ebx,1)
		jne    _06b2c2_jump

	_06b2e8_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _06b2f2_jump
		xor    %eax,%eax

	_06b2f2_jump:
		cwtl   
		mov    %si,_0dbe2a_data(,%eax,2)
		mov    %di,_0dbe52_data(,%eax,2)
		jmp    _06b315_jump

	_06b305_jump:
		mov    %si,_0dbe2a_data(,%edx,2)
		mov    %di,_0dbe52_data(,%edx,2)

	_06b315_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06b320_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0ce841_data
		je     _06b3d7_jump
		movswl %ax,%esi
		lea    0x000000(,%esi,4),%eax
		xor    %edx,%edx
		mov    _097149_data(%eax),%dl
		cmp    $0xffffffff,%edx
		je     _06b3d7_jump
		cmp    $0x0000ff,%edx
		je     _06b3d7_jump
		mov    _097646_data,%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    _09714b_data(%eax),%bl
		imul   %ecx,%ebx
		sar    $0x000007,%ebx
		push   $0x000040
		movswl %bx,%ebx
		xor    %ecx,%ecx
		push   %ebx
		xor    %ebx,%ebx
		mov    _097148_data(%eax),%cl
		mov    _09714a_data(%eax),%bl
		xor    %eax,%eax
		mov    _097548_data(%esi),%al
		call   _077ccc_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _06b3d7_jump
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $0xfffffffe,%ebx
		mov    $0x000040,%ecx
		mov    %bx,_0dbcec_data(,%eax,4)
		mov    %cx,_0dbcee_data(,%eax,4)
		mov    _096c48_data(%esi),%bl
		mov    %cx,_0dbcf0_data(,%eax,4)
		test   $0x000010,%bl
		je     _06b3d7_jump
		movb   $0x000001,_0dbe0c_data(%edx)

	_06b3d7_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b3dc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		cmpb   $0x000000,_0ce841_data
		je     _06b815_jump
		cmpw   $0x000000,_0c1b76_data
		je     _06b406_jump
		cmp    _0c24de_data,%si
		je     _06b40f_jump

	_06b406_jump:
		cmp    _0c24dc_data,%si
		jne    _06b414_jump

	_06b40f_jump:
		mov    $0xffffffff,%esi

	_06b414_jump:
		movswl %si,%edx
		mov    %edx,%eax
		call   _06a808_func
		mov    %ax,0x000004(%esp)
		cwtl   
		cmp    $0xffffffff,%eax
		je     _06b741_jump
		cmp    $0xffffffff,%edx
		je     _06b448_jump
		cmp    _0c24dc_data,%si
		jne    _06b44c_jump
		mov    _0c24da_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06b44c_jump

	_06b448_jump:
		mov    $0x00007f,%al
		jmp    _06b494_jump

	_06b44c_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0dbe88_data(,%eax,8),%eax
		sar    $0x000010,%eax
		mov    _096c48_data(%eax),%dl
		test   $0x000001,%dl
		je     _06b476_jump
		test   $0x000002,%dl
		jne    _06b47a_jump

	_06b476_jump:
		mov    $0x00007f,%al
		jmp    _06b494_jump

	_06b47a_jump:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		call   _06a650_func

	_06b494_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,0x000008(%esp)
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%edi
		sub    %edx,%edi
		shl    $0x000003,%edi
		mov    0x000008(%esp),%edx
		mov    %dx,_0dbe94_data(%edi)
		mov    _0c4734_data,%ebp
		cmp    _0dbe98_data(%edi),%ebp
		jne    _06b741_jump
		mov    _0dbe94_data(%edi),%edx
		sar    $0x000010,%edx
		mov    _0dbe90_data(%edi),%ebx
		push   %edx
		mov    _097646_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		imul   %eax,%edx
		imul   %ebx,%edx
		sar    $0x00000e,%edx
		movswl %dx,%eax
		push   %eax
		mov    _0dbe8a_data(%edi),%eax
		mov    _0dbe8e_data(%edi),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		mov    %eax,0x000008(%esp)
		mov    _0dbe88_data(%edi),%eax
		mov    _0dbe8c_data(%edi),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    _097548_data(%eax),%al
		and    $0x0000ff,%eax
		mov    0x000008(%esp),%edx
		call   _077ccc_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _06b59a_jump
		movswl %si,%eax
		call   _06ab34_func
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000008(%esp),%ebx
		mov    %si,_0dbcec_data(,%eax,4)
		mov    %bx,_0dbcee_data(,%eax,4)
		mov    _0dbe96_data(%edi),%bx
		mov    %bx,_0dbcf0_data(,%eax,4)
		mov    _0dbe8a_data(%edi),%bx
		mov    %bx,_0dbcf2_data(,%eax,4)
		mov    _0dbe88_data(%edi),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_096c48_data(%eax)
		je     _06b59a_jump
		movb   $0x000001,_0dbe0c_data(%edx)

	_06b59a_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		shl    $0x000003,%ebx
		cmpw   $0x000000,_0dbe9c_data(%ebx)
		je     _06b676_jump
		mov    _0dbe88_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _096e48_data(%eax),%al
		and    $0x0000ff,%eax
		add    %ebp,%eax
		mov    %eax,_0dbe98_data(%ebx)
		mov    _0dbe88_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _096f48_data(,%eax,2),%ax
		mov    %ax,_0dbe8a_data(%ebx)
		mov    _0dbe88_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _097149_data(,%eax,4),%al
		xor    %ah,%ah
		mov    %ax,_0dbe8c_data(%ebx)
		mov    _0dbf76_data,%edx
		mov    _0dbe88_data(%ebx),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    _09714a_data(,%eax,4),%cl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %cx,_0dbe8e_data(,%eax,8)
		mov    _0dbe88_data(%ebx),%edx
		sar    $0x000010,%edx
		mov    _097148_data(,%edx,4),%dl
		xor    %dh,%dh
		mov    %dx,_0dbe90_data(,%eax,8)
		mov    _0dbe88_data(%ebx),%edx
		sar    $0x000010,%edx
		mov    _09714b_data(,%edx,4),%dl
		xor    %dh,%dh
		xor    %ecx,%ecx
		mov    %dx,_0dbe92_data(,%eax,8)
		mov    %cx,_0dbe9c_data(%ebx)
		jmp    _06b741_jump

	_06b676_jump:
		mov    0x000004(%esp),%ebx
		cmp    _0dbf78_data,%bx
		jge    _06b72e_jump
		mov    _0dbf78_data,%di

	_06b68e_jump:
		movswl %bx,%eax
		lea    0x000001(%eax),%edx
		imul   $0x000018,%edx,%edx
		imul   $0x000018,%eax,%eax
		mov    _0dbe88_data(%edx),%cx
		mov    %cx,_0dbe88_data(%eax)
		mov    _0dbe8a_data(%edx),%cx
		mov    %cx,_0dbe8a_data(%eax)
		mov    _0dbe8c_data(%edx),%cx
		mov    %cx,_0dbe8c_data(%eax)
		mov    _0dbe8e_data(%edx),%cx
		mov    %cx,_0dbe8e_data(%eax)
		mov    _0dbe90_data(%edx),%cx
		mov    %cx,_0dbe90_data(%eax)
		mov    _0dbe92_data(%edx),%cx
		mov    %cx,_0dbe92_data(%eax)
		mov    _0dbe94_data(%edx),%cx
		mov    %cx,_0dbe94_data(%eax)
		mov    _0dbe96_data(%edx),%cx
		mov    %cx,_0dbe96_data(%eax)
		mov    _0dbe98_data(%edx),%ecx
		mov    %ecx,_0dbe98_data(%eax)
		mov    _0dbe9c_data(%edx),%dx
		inc    %ebx
		mov    %dx,_0dbe9c_data(%eax)
		cmp    %di,%bx
		jl     _06b68e_jump

	_06b72e_jump:
		mov    _0dbf76_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06b741_jump
		decw   _0dbf78_data

	_06b741_jump:
		movswl %si,%edx
		mov    %edx,%eax
		call   _06a860_func
		mov    %eax,%ebx
		cwtl   
		cmp    $0xffffffff,%eax
		je     _06b815_jump
		cmp    $0xffffffff,%edx
		je     _06b772_jump
		cmp    _0c24dc_data,%si
		jne    _06b776_jump
		mov    _0c24da_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06b776_jump

	_06b772_jump:
		mov    $0x00007f,%dl
		jmp    _06b7b3_jump

	_06b776_jump:
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0dbcf0_data(,%eax,4),%eax
		sar    $0x000010,%eax
		cmp    $0x0000cc,%eax
		jne    _06b797_jump
		mov    $0x00007f,%dl
		jmp    _06b7b3_jump

	_06b797_jump:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		call   _06a650_func
		mov    %al,%dl

	_06b7b3_jump:
		movswl %bx,%ecx
		mov    %ecx,%ebx
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		xor    %ecx,%ebx
		shl    $0x000002,%eax
		mov    %dl,%bl
		mov    _0dbcf0_data(%eax),%si
		mov    _0dbe0c_data(%ecx),%dh
		mov    %bx,_0dbcee_data(%eax)
		test   %dh,%dh
		je     _06b815_jump
		mov    _0dbcf0_data(%eax),%eax
		sar    $0x000010,%eax
		movzbl _09714b_data(,%eax,4),%edi
		mov    _097646_data,%eax
		movswl %si,%ebx
		sar    $0x000010,%eax
		and    $0x0000ff,%edx
		imul   %edx,%eax
		imul   %edi,%eax
		sar    $0x00000e,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _077e2c_func

	_06b815_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06b820_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000000,_0ce841_data
		je     _06b8de_jump
		cmpw   $0x000000,_0c1b76_data
		je     _06b84b_jump
		cmp    _0c24de_data,%bx
		jne    _06b84b_jump
		mov    $0xffffffff,%ebx

	_06b84b_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		call   _06a860_func
		mov    %eax,%esi
		movswl %ax,%edi
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		cmp    $0xffffffff,%edi
		je     _06b89f_jump
		cmp    $0xffffffff,%edx
		jne    _06b875_jump
		mov    $_0c1b1c_data,%eax
		jmp    _06b87d_jump

	_06b875_jump:
		mov    _0c1b04_data,%edx
		add    %edx,%eax

	_06b87d_jump:
		call   _06a608_func
		xor    %ebx,%ebx
		movswl %si,%edx
		mov    %al,%bl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %bx,_0dbcf0_data(,%eax,4)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_06b89f_jump:
		cmp    %edi,%edx
		jne    _06b8aa_jump
		mov    $_0c1b1c_data,%eax
		jmp    _06b8b2_jump

	_06b8aa_jump:
		mov    _0c1b04_data,%edx
		add    %edx,%eax

	_06b8b2_jump:
		call   _06a608_func
		mov    %al,%cl
		movswl %bx,%eax
		call   _06a808_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _06b8de_jump
		lea    0x000000(,%edx,4),%eax
		xor    %ebx,%ebx
		sub    %edx,%eax
		mov    %cl,%bl
		mov    %bx,_0dbe96_data(,%eax,8)

	_06b8de_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06b8e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		cmpb   $0x000000,_0ce841_data
		je     _06ba76_jump
		mov    $_0dbcf2_data,%ebp
		xor    %edi,%edi
		mov    $_0dbcec_data,%esi
		mov    %edi,(%esp)
		jmp    _06b924_jump

	_06b90b_jump:
		mov    (%esp),%eax
		inc    %edi
		add    $0x00000c,%ebp
		add    $0x00000c,%eax
		add    $0x00000c,%esi
		mov    %eax,(%esp)
		cmp    $0x000018,%edi
		jg     _06ba1a_jump

	_06b924_jump:
		movswl (%esi),%eax
		test   %eax,%eax
		jl     _06b93d_jump
		imul   $0x000084,%eax,%edx
		mov    _0c1b04_data,%eax
		cmpl   $0x000000,0x000024(%edx,%eax,1)
		je     _06b95e_jump

	_06b93d_jump:
		movswl (%esi),%eax
		cmp    $0xfffffffe,%eax
		jne    _06b94e_jump
		movswl 0x000000(%ebp),%eax
		cmp    $0xffffffff,%eax
		jne    _06b95e_jump

	_06b94e_jump:
		mov    _0c1b08_data,%dx
		cmp    (%esi),%dx
		jg     _06b9e2_jump

	_06b95e_jump:
		mov    (%esp),%eax
		mov    _0dbcf0_data(%eax),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_096c48_data(%eax)
		je     _06b9d7_jump
		movswl 0x000000(%ebp),%edx
		xor    %ebx,%ebx
		mov    _097148_data(,%edx,4),%bl
		xor    %ecx,%ecx
		push   %ebx
		xor    %ebx,%ebx
		mov    _09714a_data(,%edx,4),%cl
		mov    _097149_data(,%edx,4),%bl
		mov    _097548_data(%edx),%dl
		and    $0x0000ff,%edx
		movswl %di,%eax
		call   _077e1c_func
		xor    %dh,%dh
		xor    %eax,%eax
		mov    %dh,_0dbe0c_data(%edi)
		xor    %edx,%edx

	_06b9b3_jump:
		mov    _0dbe2a_data(%eax),%bx
		cmp    (%esi),%bx
		je     _06b9c8_jump
		add    $0x000002,%eax
		inc    %edx
		cmp    $0x000028,%eax
		jne    _06b9b3_jump

	_06b9c8_jump:
		cmp    $0x000014,%edx
		jge    _06b9d7_jump
		movw   $0x00ffff,_0dbe52_data(,%edx,2)

	_06b9d7_jump:
		movw   $0x00fffe,(%esi)
		movw   $0x00ffff,0x000000(%ebp)

	_06b9e2_jump:
		movswl (%esi),%eax
		test   %eax,%eax
		jl     _06b90b_jump
		imul   $0x000084,%eax,%edx
		mov    _0c1b04_data,%ebx
		cmpl   $0x000000,0x000024(%edx,%ebx,1)
		je     _06b90b_jump
		xor    %edx,%edx
		call   _06b3dc_func
		movswl (%esi),%eax
		xor    %edx,%edx
		call   _06b820_func
		jmp    _06b90b_jump

	_06ba1a_jump:
		xor    %edi,%edi
		xor    %esi,%esi
		xor    %ecx,%ecx
		jmp    _06ba26_jump

	_06ba22_jump:
		add    $0x000018,%esi
		inc    %edi

	_06ba26_jump:
		mov    _0dbf76_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jge    _06ba76_jump
		mov    _0c1b08_data,%dx
		cmp    _0dbe88_data(%esi),%dx
		jle    _06ba22_jump
		mov    _0dbe86_data(%esi),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%edx
		mov    _0c1b04_data,%ebx
		cmp    0x000024(%edx,%ebx,1),%ecx
		je     _06ba22_jump
		mov    %ecx,%edx
		call   _06b3dc_func
		mov    _0dbe86_data(%esi),%eax
		mov    %ecx,%edx
		sar    $0x000010,%eax
		call   _06b820_func
		jmp    _06ba22_jump

	_06ba76_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi

	_06ba7b_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06ba80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0ce841_data
		je     _06ba7b_jump
		xor    %ecx,%ecx
		xor    %esi,%esi
		jmp    _06ba94_jump

	_06ba93_jump:
		inc    %ecx

	_06ba94_jump:
		movswl %cx,%eax
		cmp    $0x000018,%eax
		jge    _06ba7b_jump
		imul   $0x00000c,%eax,%eax
		mov    _0dbcf0_data(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000006,%eax
		je     _06bac2_jump
		cmp    $0x0000f5,%eax
		je     _06bac2_jump
		cmp    $0x000002,%eax
		je     _06bac2_jump
		testb  $0x000010,_096c48_data(%eax)
		je     _06ba93_jump

	_06bac2_jump:
		movswl %cx,%eax
		mov    %esi,%ebx
		mov    %esi,%edx
		call   _077e2c_func
		jmp    _06ba93_jump



_06bad0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0ce841_data
		je     _06baf5_jump
		xor    %ecx,%ecx
		xor    %esi,%esi
		jmp    _06baed_jump

	_06bae3_jump:
		mov    %esi,%ebx
		mov    %esi,%edx
		call   _077e2c_func
		inc    %ecx

	_06baed_jump:
		movswl %cx,%eax
		cmp    $0x000018,%eax
		jl     _06bae3_jump

	_06baf5_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06bafc_func:
		push   %edx
		mov    $0x000001,%edx
		call   _06bad0_func
		mov    %dx,_0dbe86_data
		pop    %edx
		ret    



_06bb10_func:
		push   %edx
		xor    %edx,%edx
		mov    %dx,_0dbe86_data
		pop    %edx
		ret    

_06bb1c_switch:
		.long   _06bb44_case
		.long   _06bb83_case
		.long   _06bb4b_case
		.long   _06bb52_case
		.long   _06bb59_case
		.long   _06bb60_case


	_06bb34_jump:
		push   %edx
		cmpb   $0x000000,_0ce841_data
		je     _06bb91_jump
		test   %eax,%eax
		je     _06bb67_jump
		jmp    _06bb83_case

	_06bb44_case:
		mov    $0x000001,%eax
		jmp    _06bb83_case

	_06bb4b_case:
		mov    $0x000002,%eax
		jmp    _06bb83_case

	_06bb52_case:
		mov    $0x000004,%eax
		jmp    _06bb83_case

	_06bb59_case:
		mov    $0x000003,%eax
		jmp    _06bb83_case

	_06bb60_case:
		mov    $0x000007,%eax
		jmp    _06bb83_case

	_06bb67_jump:
		mov    _0c25ee_data,%dx
		dec    %edx
		cmp    $0x000005,%dx
		ja     _06bb83_case
		and    $0x00ffff,%edx
		jmp    *%cs:_06bb1c_switch(,%edx,4)

	_06bb83_case:
		mov    _097646_data,%edx
		sar    $0x000010,%edx
		call   _077ed4_func

	_06bb91_jump:
		pop    %edx
		ret    



_06bb94_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0c6950_data,%edx
		test   %edx,%edx
		jne    _06bbf9_jump
		mov    $_0c6954_data,%esi
		call   _012748_func
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		mov    _094bff_data(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _029dcc_func
		xor    %dh,%dh
		mov    $0x000001,%eax
		mov    %dh,_0dbf7d_data
		mov    %eax,_0c6950_data
		jmp    _06bd0a_jump

	_06bbf9_jump:
		cmp    $0xffffffff,%edx
		je     _06bd0a_jump
		mov    $_0c6958_data,%esi
		call   _012748_func
		mov    _0c6958_data,%edx
		sub    _0c6954_data,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x0000b6,%ebx
		add    %eax,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %eax,_0c6950_data
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,8),%edx
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		mov    _0c6950_data,%esi
		add    %eax,%edx
		add    $0x000002,%esi
		mov    _094c80_data(%edx),%edi
		mov    %esi,_0c6950_data
		cmp    %edi,%esi
		jb     _06bd0a_jump
		xor    %edx,%edx
		mov    _0dbf7c_data,%dl
		mov    %dl,%al
		inc    %al
		test   %edx,%edx
		jne    _06bc9b_jump
		mov    %al,_0dbf7c_data
		call   _029d80_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06bc9b_jump:
		cmp    $0x000004,%edx
		jge    _06bcab_jump
		mov    %al,_0dbf7c_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06bcab_jump:
		mov    $_0c6954_data,%esi
		call   _012748_func
		mov    _0c24f0_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0c24ee_data,%edx
		sar    $0x000010,%edx
		mov    _094bff_data(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		mov    $0x000001,%ebp
		call   _029d10_func
		xor    %dl,%dl
		mov    _0dbf7d_data,%ah
		mov    %dl,_0dbf7c_data
		test   %ah,%ah
		sete   %al
		mov    %ebp,_0c6950_data
		mov    %al,_0dbf7d_data

	_06bd0a_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_06bd10_func:
		call   _028d30_func
		test   %al,%al
		je     _06bd40_jump
		call   _028930_func
		and    $0x0000ff,%eax
		call   _029850_func
		test   %al,%al
		je     _06bd40_jump
		call   _029d78_func
		call   _028930_func
		and    $0x0000ff,%eax
		jmp    _0298a8_jump

	_06bd40_jump:
		mov    %al,_0c694c_data
		ret    



_06bd48_func:
		call   _029d78_func
		call   _028930_func
		and    $0x0000ff,%eax
		call   _029878_func
		jmp    _028d04_jump



_06bd70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0dbf80_data,%ebp
		movswl %ax,%ebx
		movw   $0x000000,0x000000(%ebp)
		test   %ebx,%ebx
		jl     _06bd9b_jump
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _06bd97_jump
		mov    %ebx,%eax

	_06bd97_jump:
		neg    %eax
		jmp    _06bda8_jump

	_06bd9b_jump:
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _06bda8_jump
		mov    %ebx,%eax

	_06bda8_jump:
		mov    %ax,0x000002(%ebp)
		mov    0x000000(%ebp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06bdba_jump
		xor    %eax,%eax
		jmp    _06bdbf_jump

	_06bdba_jump:
		mov    $0x000003,%eax

	_06bdbf_jump:
		mov    %al,0x000018(%ebp)
		mov    0x00001c(%ebp),%ax
		neg    %eax
		movb   $0x000000,0x000019(%ebp)
		mov    %ax,0x000004(%esp)
		jmp    _06be27_jump

	_06bdd3_jump:
		xor    %eax,%eax
		mov    0x00001c(%ebp),%ax
		call   _07806f_func
		mov    %eax,%esi
		mov    %edx,%edi
		mov    0x000002(%esp),%eax
		mov    %esi,%ebx
		sar    $0x000010,%eax
		mov    %edi,%ecx
		call   _078062_func
		call   _07885a_func
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07a15f_func
		call   _07825f_func
		call   _078d1c_func
		xor    %edx,%edx
		mov    (%esp),%ebx
		mov    0x00001c(%ebp),%dx
		add    %ebx,%edx
		lea    0x000000(,%edx,4),%esi
		mov    0x000024(%ebp),%edx
		mov    %eax,(%edx,%esi,1)
		incw   0x000004(%esp)

	_06be27_jump:
		mov    0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00001c(%ebp),%ax
		mov    %edx,(%esp)
		cmp    %edx,%eax
		jg     _06bdd3_jump
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_06be44_jump:
		ret    

	_06be48_case:
		mov    _0dbf80_data,%eax
		test   %eax,%eax
		je     _06be44_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _06be5f_jump
		add    $0x000024,%eax
		call   _077858_func

	_06be5f_jump:
		cmpl   $0x000000,_0dbf80_data
		je     _06be44_jump
		mov    $_0dbf80_data,%eax
		jmp    _077858_func



_06be74_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %dx,0x000004(%esp)
		mov    %ebx,%esi
		mov    %ecx,(%esp)
		xor    %ah,%ah
		mov    %ah,0x000008(%esp)
		test   %ebx,%ebx
		je     _06bf72_jump
		test   %ecx,%ecx
		je     _06bf72_jump
		mov    $0x000030,%eax
		call   _077840_func
		mov    %eax,%ebp
		mov    %eax,_0dbf80_data
		test   %eax,%eax
		je     _06bf72_jump
		xor    %eax,%eax
		mov    $0x000028,%ebx
		mov    %di,%ax
		cmp    %ebx,%eax
		jle    _06bec5_jump
		mov    %ebx,%eax

	_06bec5_jump:
		mov    %eax,%ebx
		mov    $0x000008,%eax
		cmp    %ebx,%eax
		jge    _06bed2_jump
		mov    %ebx,%eax

	_06bed2_jump:
		mov    %ax,0x00001c(%ebp)
		add    %eax,%eax
		mov    %ax,0x00001e(%ebp)
		xor    %eax,%eax
		mov    $0x400921fb,%ecx
		mov    0x00001c(%ebp),%ax
		mov    $0x54442eea,%ebx
		call   _07806f_func
		call   _07825f_func
		call   _078d20_func
		mov    %ax,0x000020(%ebp)
		xor    %eax,%eax
		mov    $0x54442eea,%ebx
		mov    0x00001c(%ebp),%ax
		mov    $0x400921fb,%ecx
		call   _07806f_func
		call   _07825f_func
		mov    $0x3fe00000,%ecx
		xor    %ebx,%ebx
		call   _07825f_func
		call   _078d20_func
		mov    $0x00fa00,%ecx
		mov    _0cdf00_data,%edi
		mov    %ax,0x000022(%ebp)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _06bf43_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_06bf43_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0cdf00_data,%eax
		mov    %eax,0x000028(%ebp)
		mov    (%esp),%eax
		mov    %eax,0x00002c(%ebp)
		xor    %eax,%eax
		mov    0x00001e(%ebp),%ax
		shl    $0x000002,%eax
		call   _077840_func
		mov    %eax,0x000024(%ebp)
		test   %eax,%eax
		je     _06bf72_jump
		movb   $0x000001,0x000008(%esp)

	_06bf72_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _06bf87_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		call   _06bd70_func
		jmp    _06bf8c_jump

	_06bf87_jump:
		call   _06be48_case

	_06bf8c_jump:
		mov    0x000008(%esp),%al
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_06bf98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0dbf80_data,%esi
		mov    0x000018(%esi),%al
		cmp    $0x000001,%al
		jb     _06c170_jump
		jbe    _06c05b_jump
		cmp    $0x000002,%al
		je     _06c11a_jump
		jmp    _06c178_jump

	_06bfc5_jump:
		xor    %eax,%eax
		mov    0x000019(%esi),%al
		test   %eax,%eax
		jne    _06c007_jump
		mov    (%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06bff6_jump
		movl   $0x00013f,0x000004(%esi)
		mov    0x000004(%esi),%eax
		mov    %eax,0x000014(%esi)
		xor    %eax,%eax
		mov    $0x00013f,%edx
		mov    0x000022(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x000008(%esi)
		jmp    _06c003_jump

	_06bff6_jump:
		mov    0x000014(%esi),%eax
		movl   $0x00013f,0x000004(%esi)
		mov    %eax,0x000008(%esi)

	_06c003_jump:
		movb   $0x000001,0x000019(%esi)

	_06c007_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		call   _078062_func
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %edx,%ecx
		call   _07806f_func
		mov    %eax,%ebp
		mov    %edx,%edi
		mov    %ebx,%eax
		mov    %ecx,%edx
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _07885a_func
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _078c99_func
		call   _07825f_func
		call   _078d1c_func
		xor    %edx,%edx
		mov    %eax,0x00000c(%esi)
		mov    0x000022(%esi),%dx
		mov    0x000014(%esi),%eax
		sub    %edx,%eax
		mov    %eax,0x000010(%esi)
		jmp    _06c178_jump

	_06c05b_jump:
		xor    %eax,%eax
		mov    0x000019(%esi),%al
		test   %eax,%eax
		jne    _06c098_jump
		mov    (%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06c07e_jump
		mov    0x000014(%esi),%eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,0x000008(%esi)
		jmp    _06c094_jump

	_06c07e_jump:
		mov    0x000014(%esi),%eax
		mov    %eax,0x000008(%esi)
		xor    %eax,%eax
		mov    $0x00013f,%edx
		mov    0x000022(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x000004(%esi)

	_06c094_jump:
		movb   $0x000001,0x000019(%esi)

	_06c098_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		call   _078062_func
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    0x000020(%esi),%ax
		mov    %edx,0x000004(%esp)
		call   _07806f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		call   _07a1e6_func
		jg     _06c0fb_jump
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		call   _07806f_func
		mov    %eax,%edi
		mov    %edx,%ebp
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		mov    %edi,%ebx
		mov    %ebp,%ecx
		call   _07885a_func
		mov    %edi,%ebx
		mov    %ebp,%ecx
		call   _078cc0_func
		call   _07825f_func
		call   _078d1c_func
		jmp    _06c103_jump

	_06c0fb_jump:
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		neg    %eax

	_06c103_jump:
		mov    %eax,0x00000c(%esi)
		mov    0x000004(%esi),%eax
		mov    0x000014(%esi),%ebx
		mov    $0x00013f,%edx
		sub    %ebx,%eax
		sub    %eax,%edx
		mov    %edx,0x000010(%esi)
		jmp    _06c178_jump

	_06c11a_jump:
		xor    %eax,%eax
		mov    0x000019(%esi),%al
		test   %eax,%eax
		jne    _06c158_jump
		mov    (%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06c13c_jump
		mov    0x000014(%esi),%eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		neg    %eax
		jmp    _06c151_jump

	_06c13c_jump:
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		dec    %eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		neg    %eax
		mov    %eax,0x000014(%esi)

	_06c151_jump:
		mov    %eax,0x000008(%esi)
		movb   $0x000001,0x000019(%esi)

	_06c158_jump:
		mov    0x000014(%esi),%eax
		neg    %eax
		xor    %edx,%edx
		mov    %eax,0x00000c(%esi)
		mov    0x000022(%esi),%dx
		mov    0x000014(%esi),%eax
		add    %edx,%eax
		mov    %eax,0x000010(%esi)
		jmp    _06c178_jump

	_06c170_jump:
		test   %al,%al
		je     _06bfc5_jump

	_06c178_jump:
		mov    (%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06c183_jump
		neg    %eax

	_06c183_jump:
		add    %ax,(%esi)
		mov    (%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06c19c_jump
		mov    0x000015(%esi),%eax
		sar    $0x000018,%eax
		cmp    $0x000004,%eax
		jne    _06c1ac_jump
		jmp    _06c1a7_jump

	_06c19c_jump:
		mov    0x000015(%esi),%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _06c1ac_jump

	_06c1a7_jump:
		movw   $0x000000,(%esi)

	_06c1ac_jump:
		mov    (%esi),%ax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06c1bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0dbf80_data,%edx
		mov    0x000015(%edx),%eax
		sar    $0x000018,%eax
		cmp    $0x000003,%eax
		jne    _06c4e2_jump
		mov    $0x003e80,%ecx
		mov    0x00002c(%edx),%edi
		cld    
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06c1f7_jump
		mov    0x000018(%edx),%al
		inc    %al
		jmp    _06c1fc_jump

	_06c1f7_jump:
		mov    0x000018(%edx),%al
		dec    %al

	_06c1fc_jump:
		movb   $0x000000,0x000019(%edx)
		mov    %al,0x000018(%edx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c20d_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06c231_jump
		xor    %eax,%eax
		mov    0x000019(%edx),%al
		cmp    $0x000001,%eax
		jne    _06c231_jump
		mov    $0x003e80,%ecx
		mov    (%esp),%esi
		mov    %ebp,%edi
		cld    
		rep movsl %ds:(%esi),%es:(%edi)
		movb   $0x000002,0x000019(%edx)

	_06c231_jump:
		xor    %edi,%edi
		mov    %edi,0x000010(%esp)
		mov    $0x000140,%edi
		jmp    _06c261_jump

	_06c23e_jump:
		mov    (%esp),%ecx
		mov    0x000010(%esp),%esi
		add    $0x000140,%ebp
		add    %edi,%ecx
		inc    %esi
		mov    %ecx,(%esp)
		mov    %esi,0x000010(%esp)
		cmp    $0x0000c8,%esi
		jge    _06c50a_jump

	_06c261_jump:
		mov    0x00000c(%edx),%ebx
		xor    %ecx,%ecx
		test   %ebx,%ebx
		jle    _06c294_jump

	_06c26a_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		sub    %ecx,%eax
		mov    0x000024(%edx),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    0x000010(%edx),%eax
		add    (%esi),%eax
		mov    (%esp),%esi
		mov    0x000014(%edx),%ebx
		add    %esi,%eax
		add    %ecx,%ebx
		mov    (%eax),%al
		mov    %al,(%ebx,%ebp,1)
		inc    %ecx
		cmp    0x00000c(%edx),%ecx
		jl     _06c26a_jump

	_06c294_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06c2c7_jump
		mov    0x00000c(%edx),%ebx
		jmp    _06c2a3_jump

	_06c2a2_jump:
		inc    %ebx

	_06c2a3_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06c2ae_jump
		neg    %eax

	_06c2ae_jump:
		add    0x00000c(%edx),%eax
		cmp    %eax,%ebx
		jge    _06c23e_jump
		mov    0x000014(%edx),%eax
		add    %ebx,%eax
		cmp    $0x000140,%eax
		jge    _06c2a2_jump
		movb   $0x000000,(%eax,%ebp,1)
		jmp    _06c2a2_jump

	_06c2c7_jump:
		mov    $0xffffffff,%ebx
		mov    (%esp),%ecx
		jmp    _06c2df_jump

	_06c2d1_jump:
		mov    0x000014(%edx),%eax
		sub    %ebx,%eax
		lea    (%eax,%ebp,1),%esi
		mov    (%ecx,%eax,1),%al
		inc    %ebx
		mov    %al,(%esi)

	_06c2df_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06c2ea_jump
		neg    %eax

	_06c2ea_jump:
		dec    %eax
		cmp    %eax,%ebx
		jge    _06c23e_jump
		jmp    _06c2d1_jump

	_06c2f5_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06c3af_jump
		xor    %esi,%esi
		mov    $0x00013f,%edi
		mov    %esi,0x00000c(%esp)
		mov    0x00000c(%edx),%ecx
		xor    %ebx,%ebx
		mov    0x00001c(%edx),%bx
		cmp    %ebx,%ecx
		jl     _06c354_jump
		jmp    _06c392_jump

	_06c31f_jump:
		mov    (%esp),%esi
		mov    0x00000c(%esp),%eax
		add    $0x000140,%ebp
		add    $0x000140,%esi
		inc    %eax
		mov    %esi,(%esp)
		mov    %eax,0x00000c(%esp)
		cmp    $0x0000c8,%eax
		jge    _06c50a_jump
		mov    0x00000c(%edx),%ecx
		xor    %ebx,%ebx
		mov    0x00001c(%edx),%bx
		cmp    %ebx,%ecx
		jl     _06c354_jump
		jmp    _06c392_jump

	_06c354_jump:
		lea    (%ebx,%ecx,1),%eax
		shl    $0x000002,%eax
		mov    0x000024(%edx),%ebx
		add    %eax,%ebx
		mov    0x000010(%edx),%eax
		add    (%ebx),%eax
		mov    %eax,%ebx
		mov    %edi,%eax
		mov    0x000014(%edx),%esi
		cmp    %ebx,%eax
		jle    _06c371_jump
		mov    %ebx,%eax

	_06c371_jump:
		add    (%esp),%eax
		add    %ecx,%esi
		mov    (%eax),%al
		inc    %ecx
		mov    %al,(%esi,%ebp,1)
		xor    %ebx,%ebx
		mov    0x00001c(%edx),%bx
		cmp    %ebx,%ecx
		jl     _06c354_jump
		jmp    _06c392_jump

	_06c388_jump:
		mov    0x000014(%edx),%eax
		add    %ebx,%eax
		inc    %ebx
		movb   $0x000000,(%eax,%ebp,1)

	_06c392_jump:
		mov    (%edx),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    0x00001c(%edx),%cx
		test   %eax,%eax
		jge    _06c3a3_jump
		neg    %eax

	_06c3a3_jump:
		add    %ecx,%eax
		cmp    %eax,%ebx
		jge    _06c31f_jump
		jmp    _06c388_jump

	_06c3af_jump:
		xor    %ecx,%ecx
		mov    $0x00013f,%edi
		mov    %ecx,0x000008(%esp)
		mov    0x00000c(%edx),%ecx
		jmp    _06c415_jump

	_06c3bf_jump:
		mov    (%esp),%esi
		mov    0x000008(%esp),%eax
		add    $0x000140,%ebp
		add    $0x000140,%esi
		inc    %eax
		mov    %esi,(%esp)
		mov    %eax,0x000008(%esp)
		cmp    $0x0000c8,%eax
		jge    _06c50a_jump
		mov    0x00000c(%edx),%ecx
		jmp    _06c415_jump

	_06c3ea_jump:
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%ebx
		mov    0x000024(%edx),%eax
		add    %eax,%ebx
		mov    0x000010(%edx),%eax
		add    (%ebx),%eax
		mov    %eax,%ebx
		mov    %edi,%eax
		mov    0x000014(%edx),%esi
		cmp    %ebx,%eax
		jle    _06c40a_jump
		mov    %ebx,%eax

	_06c40a_jump:
		add    (%esp),%eax
		add    %ecx,%esi
		mov    (%eax),%al
		inc    %ecx
		mov    %al,(%esi,%ebp,1)

	_06c415_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		cmp    %eax,%ecx
		jl     _06c3ea_jump
		cmp    0x000014(%edx),%eax
		jge    _06c3bf_jump
		mov    %eax,%ebx
		mov    (%edx),%eax
		sar    $0x000010,%eax
		neg    %ebx
		test   %eax,%eax
		jge    _06c433_jump
		neg    %eax

	_06c433_jump:
		sub    %eax,%ebx
		mov    0x00000c(%edx),%esi
		mov    %ebx,%eax
		cmp    %esi,%ebx

	_06c43c_jump:
		jge    _06c3bf_jump
		mov    0x000014(%edx),%ebx
		add    %eax,%ebx
		mov    (%esp),%ecx
		lea    (%ebx,%ebp,1),%esi
		mov    (%ecx,%ebx,1),%bl
		mov    %bl,(%esi)
		inc    %eax
		cmp    0x00000c(%edx),%eax
		jmp    _06c43c_jump

	_06c454_jump:
		xor    %ebx,%ebx
		mov    $0x000140,%edi
		mov    %ebx,0x000004(%esp)
		mov    0x00000c(%edx),%ecx
		jmp    _06c4aa_jump

	_06c464_jump:
		mov    (%esp),%eax
		mov    0x000004(%esp),%ebx
		add    $0x000140,%ebp
		add    %edi,%eax
		inc    %ebx
		mov    %eax,(%esp)
		mov    %ebx,0x000004(%esp)
		cmp    $0x0000c8,%ebx
		jge    _06c50a_jump
		mov    0x00000c(%edx),%ecx
		jmp    _06c4aa_jump

	_06c48c_jump:
		add    %ecx,%ebx
		mov    0x000024(%edx),%eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		mov    0x000010(%edx),%eax
		mov    0x000014(%edx),%esi
		add    (%ebx),%eax
		mov    (%esp),%ebx
		add    %ecx,%esi
		mov    (%ebx,%eax,1),%bl
		inc    %ecx
		mov    %bl,(%esi,%ebp,1)

	_06c4aa_jump:
		xor    %ebx,%ebx
		mov    0x00001c(%edx),%bx
		cmp    %ebx,%ecx
		jl     _06c48c_jump
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06c464_jump
		jmp    _06c4c9_jump

	_06c4bf_jump:
		mov    0x000014(%edx),%eax
		add    %ebx,%eax
		inc    %ebx
		movb   $0x000000,(%eax,%ebp,1)

	_06c4c9_jump:
		mov    (%edx),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    0x00001c(%edx),%cx
		test   %eax,%eax
		jge    _06c4da_jump
		neg    %eax

	_06c4da_jump:
		add    %ecx,%eax
		cmp    %eax,%ebx
		jge    _06c464_jump
		jmp    _06c4bf_jump

	_06c4e2_jump:
		mov    0x000028(%edx),%eax
		mov    %eax,(%esp)
		mov    0x000018(%edx),%al
		mov    0x00002c(%edx),%ebp
		cmp    $0x000001,%al
		jb     _06c502_jump
		jbe    _06c2f5_jump
		cmp    $0x000002,%al
		je     _06c454_jump
		jmp    _06c50a_jump

	_06c502_jump:
		test   %al,%al
		je     _06c20d_jump

	_06c50a_jump:
		mov    (%edx),%eax
		mov    0x000014(%edx),%esi
		sar    $0x000010,%eax
		sub    %eax,%esi
		mov    (%edx),%eax
		sar    $0x000010,%eax
		mov    %esi,0x000014(%edx)
		test   %eax,%eax
		jle    _06c53b_jump
		cmp    0x000008(%edx),%esi
		jge    _06c54c_jump
		mov    0x000018(%edx),%bl
		movb   $0x000000,0x000019(%edx)
		inc    %bl
		mov    %bl,0x000018(%edx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c53b_jump:
		cmp    0x000004(%edx),%esi
		jle    _06c54c_jump
		mov    0x000018(%edx),%ah
		movb   $0x000000,0x000019(%edx)
		dec    %ah
		mov    %ah,0x000018(%edx)

	_06c54c_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06c560_func:
		xor    %ah,%ah
		mov    %ah,_0c2131_data
		ret    



_06c56c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    _0c24ce_data,%al
		mov    %al,0x00025a(%edx)
		mov    _0c247c_data,%ax
		mov    %ax,0x000034(%edx)
		mov    _0c247e_data,%ax
		mov    %ax,0x000036(%edx)
		mov    _0c1b44_data,%ax
		mov    %ax,0x000038(%edx)
		mov    _0c1b48_data,%ax
		mov    %ax,0x00003a(%edx)
		mov    _0c1b52_data,%ax
		mov    %ax,0x00003c(%edx)
		mov    _0c1b54_data,%ax
		mov    %ax,0x00003e(%edx)
		mov    _0c1b9d_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,0x000040(%edx)
		mov    _0c32e5_data,%al
		add    %al,%al
		shr    $0x000006,%al
		mov    %al,0x000254(%edx)
		mov    _0c32e4_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    %al,0x000255(%edx)
		mov    _0c32e4_data,%al
		and    $0x000001,%al
		mov    %al,0x000256(%edx)
		test   %ebx,%ebx
		je     _06c630_jump
		mov    0x000034(%ebx),%ax
		mov    %ax,0x000046(%edx)
		mov    0x000028(%ebx),%ax
		mov    %ax,0x000042(%edx)
		mov    0x00002c(%ebx),%ax
		mov    %ax,0x000044(%edx)
		mov    0x00007b(%ebx),%al
		mov    %al,0x000248(%edx)
		mov    0x000081(%ebx),%al
		and    $0x000001,%al
		mov    %al,0x000249(%edx)
		jmp    _06c636_jump

	_06c630_jump:
		movw   $0x00ffff,0x000046(%edx)

	_06c636_jump:
		mov    _0c1b06_data,%ecx
		mov    _0c1b00_data,%esi
		sar    $0x000010,%ecx
		lea    0x000048(%edx),%edi
		add    %ecx,%ecx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %al,%al
		jmp    _06c671_jump

	_06c65e_jump:
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    _0c1b7e_data(%ebx),%ah
		mov    %ah,0x00024a(%edx,%ebx,1)
		inc    %al

	_06c671_jump:
		xor    %ebx,%ebx
		mov    %al,%bl
		cmp    $0x000005,%ebx
		jb     _06c65e_jump
		mov    _0c1b86_data,%al
		mov    %al,0x00024f(%edx)
		mov    _0c1b87_data,%al
		mov    %al,0x000250(%edx)
		mov    _0c1b89_data,%al
		mov    %al,0x000251(%edx)
		mov    _0c1b88_data,%al
		mov    %al,0x000252(%edx)
		xor    %al,%al
		jmp    _06c6b9_jump

	_06c6aa_jump:
		mov    _0c51b8_data(,%esi,2),%bx
		inc    %al
		mov    %bx,0x000020(%edx,%esi,2)

	_06c6b9_jump:
		movzbl %al,%esi
		cmp    $0x000008,%esi
		jl     _06c6aa_jump
		mov    _0c458c_data,%ax
		mov    _0c1b04_data,%esi
		mov    %ax,0x000030(%edx)
		mov    _0c458e_data,%ax
		mov    _0c1b08_data,%bx
		mov    %ax,0x000032(%edx)
		mov    _0c1ed0_data,%al
		mov    %ebx,(%esp)
		mov    %al,0x000253(%edx)
		xor    %eax,%eax
		test   %bx,%bx
		jle    _06c764_jump
		jmp    _06c714_jump

	_06c6fd_jump:
		movswl %di,%ecx
		not    %ebx
		and    %ebx,(%edx,%ecx,4)

	_06c705_jump:
		mov    (%esp),%ecx
		inc    %eax
		add    $0x000084,%esi
		cmp    %cx,%ax
		jge    _06c764_jump

	_06c714_jump:
		xor    %ebx,%ebx
		mov    0x000060(%esi),%bx
		cmp    $0x00008d,%ebx
		je     _06c73a_jump
		cmp    $0x0000a4,%ebx
		je     _06c73a_jump
		cmp    $0x0000b3,%ebx
		je     _06c73a_jump
		cmp    $0x0000f2,%ebx
		jne    _06c705_jump

	_06c73a_jump:
		movswl %ax,%ebx
		sar    $0x000005,%ebx
		mov    %ebx,%edi
		mov    %eax,%ebx
		xor    %ah,%bh
		and    $0x00001f,%bl
		movswl %bx,%ecx
		mov    $0x000001,%ebx
		shl    %cl,%ebx
		testb  $0x000004,0x000081(%esi)
		je     _06c6fd_jump
		movswl %di,%ecx
		or     %ebx,(%edx,%ecx,4)
		jmp    _06c705_jump

	_06c764_jump:
		mov    _0c24d2_data,%al
		movb   $0x000001,0x000259(%edx)
		mov    %al,0x000258(%edx)
		mov    _0c247a_data,%al
		mov    %al,0x000257(%edx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_06c78c_switch:
		.long   _06c9fa_case
		.long   _06ca1c_case
		.long   _06c9fa_case
		.long   _06ca1c_case
		.long   _06c9f1_case
		.long   _06ca1c_case
		.long   _06ca1c_case
		.long   _06c9fa_case
		.long   _06ca1c_case
		.long   _06c9fa_case
		.long   _06ca1c_case
		.long   _06c9f1_case




_06c7bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		cmpb   $0x000000,0x000259(%eax)
		je     _06cba0_jump
		mov    _0c32e5_data,%dl
		test   $0x000002,%dl
		je     _06c7fa_jump
		mov    $0x000021,%ecx
		mov    $_0c1b1c_data,%edi
		mov    %dl,%dh
		mov    $_0c1ba0_data,%esi
		and    $0x0000fd,%dh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %dh,_0c32e5_data

	_06c7fa_jump:
		mov    0x00025a(%ebx),%al
		mov    %al,_0c24ce_data
		mov    0x000034(%ebx),%ax
		mov    %ax,_0c247c_data
		mov    0x000036(%ebx),%ax
		mov    %ax,_0c247e_data
		mov    0x000036(%ebx),%eax
		sar    $0x000010,%eax
		mov    %eax,_0c1b44_data
		mov    0x000038(%ebx),%eax
		sar    $0x000010,%eax
		mov    %eax,_0c1b48_data
		mov    0x00003c(%ebx),%ax
		mov    _0c1b9d_data,%cl
		mov    %ax,_0c1b52_data
		mov    0x00003e(%ebx),%ax
		and    $0x0000f7,%cl
		mov    %ax,_0c1b54_data
		mov    0x000040(%ebx),%al
		mov    %cl,_0c1b9d_data
		and    $0x000001,%al
		mov    %cl,%ch
		shl    $0x000003,%al
		or     %al,%ch
		mov    0x000255(%ebx),%al
		and    $0x000001,%al
		mov    _0c32e4_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0c32e4_data
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    _0c24f0_data,%eax
		mov    %ch,_0c1b9d_data
		sar    $0x000010,%eax
		mov    %dl,_0c32e4_data
		cmp    $0x000006,%eax
		jne    _06c8e3_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _06c8e3_jump
		mov    %dl,%dh
		mov    0x000256(%ebx),%al
		and    $0x0000fe,%dh
		and    $0x000001,%al
		mov    %dh,%cl
		mov    %dh,_0c32e4_data
		or     %al,%cl
		mov    %cl,_0c32e4_data
		mov    0x000254(%ebx),%al
		mov    _0c32e5_data,%ch
		and    $0x000003,%al
		and    $0x00009f,%ch
		shl    $0x000005,%al
		mov    %ch,%ah
		mov    %ch,_0c32e5_data
		or     %al,%ah
		mov    %ah,_0c32e5_data

	_06c8e3_jump:
		mov    0x000044(%ebx),%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _06c937_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x000040(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%eax)
		mov    0x000042(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%eax)
		mov    0x000248(%ebx),%dl
		mov    %dl,0x00007b(%eax)
		mov    0x000249(%ebx),%dl
		and    $0x000001,%dl
		mov    0x000081(%eax),%dh
		and    $0x0000fe,%dh
		mov    %dh,%cl
		or     %dl,%cl
		mov    %cl,0x000081(%eax)

	_06c937_jump:
		cmp    $_0c1ed8_data,%ebx
		jne    _06c99e_jump
		mov    _0c1b08_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _06c99e_jump
		jmp    _06c96a_jump

	_06c94f_jump:
		mov    _0c1b04_data,%ecx
		movl   $0x000000,0x000020(%ecx,%edx,1)

	_06c95d_jump:
		mov    _0c1b08_data,%cx
		inc    %eax
		cmp    %cx,%ax
		jge    _06c99e_jump

	_06c96a_jump:
		movswl %ax,%edx
		lea    0x000000(,%edx,2),%ecx
		imul   $0x000084,%edx,%edx
		mov    _0c1b00_data,%edi
		mov    0x000048(%ecx,%ebx,1),%si
		mov    %si,(%ecx,%edi,1)
		cmp    %si,%ax
		je     _06c94f_jump
		mov    _0c1b04_data,%ecx
		movl   $0x000001,0x000020(%ecx,%edx,1)
		jmp    _06c95d_jump

	_06c99e_jump:
		xor    %eax,%eax
		jmp    _06c9b3_jump

	_06c9a2_jump:
		movswl %ax,%edx
		mov    0x00024a(%edx,%ebx,1),%cl
		inc    %eax
		mov    %cl,_0c1b7e_data(%edx)

	_06c9b3_jump:
		movswl %ax,%edx
		cmp    $0x000005,%edx
		jb     _06c9a2_jump
		mov    0x00024f(%ebx),%al
		mov    %al,_0c1b86_data
		mov    0x000250(%ebx),%al
		mov    %al,_0c1b87_data
		mov    0x000251(%ebx),%al
		mov    %al,_0c1b89_data
		mov    0x000252(%ebx),%al
		mov    %al,_0c1b88_data
		cmp    $_0c1ed8_data,%ebx
		je     _06ca03_jump
		jmp    _06ca1c_case

	_06c9f1_case:
		movb   $0x000003,0x000253(%ebx)
		jmp    _06ca1c_case

	_06c9fa_case:
		movb   $0x000001,0x000253(%ebx)
		jmp    _06ca1c_case

	_06ca03_jump:
		mov    0x000253(%ebx),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _06ca1c_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06c78c_switch(,%eax,4)

	_06ca1c_case:
		mov    _0c1ec0_data,%edx
		mov    0x000253(%ebx),%al
		xor    %edi,%edi
		mov    %al,_0c1ed0_data
		mov    %di,_0c2584_data
		mov    %al,0x00006e(%edx)
		mov    %di,_0c2568_data
		mov    0x000258(%ebx),%al
		xor    %edx,%edx
		mov    %al,_0c24d2_data
		jmp    _06ca5d_jump

	_06ca4f_jump:
		mov    0x000020(%ebx,%eax,2),%cx
		inc    %edx
		mov    %cx,_0c51b8_data(,%eax,2)

	_06ca5d_jump:
		movswl %dx,%eax
		cmp    $0x000008,%eax
		jl     _06ca4f_jump
		mov    $0xffffffff,%esi
		mov    _0c1b9d_data,%ch
		mov    0x000030(%ebx),%ax
		xor    %edx,%edx
		xor    %edi,%edi
		mov    %ax,_0c458c_data
		mov    %dx,_0c1b5c_data
		mov    %dx,_0c1b5e_data
		mov    %si,_0c1b72_data
		or     $0x000004,%ch
		mov    %di,_0c24c0_data
		mov    %di,_0c24c2_data
		mov    $0x000001,%edx
		mov    %ch,_0c1b9d_data
		mov    0x000032(%ebx),%ax
		xor    %esi,%esi
		mov    %ax,_0c458e_data
		mov    %edx,_0c1b40_data
		mov    _0c1b08_data,%ax
		mov    _0c1b04_data,%edx
		mov    %eax,(%esp)
		test   %ax,%ax
		jle    _06cb7f_jump
		jmp    _06cb44_jump

	_06cade_jump:
		cmp    $0x00008d,%eax
		je     _06cb0c_jump
		cmp    $0x0000a4,%eax
		je     _06cb0c_jump
		cmp    $0x0000b3,%eax
		je     _06cafa_jump
		cmp    $0x0000f2,%eax
		jne    _06cb06_jump

	_06cafa_jump:
		movl   $0x000001,0x00001c(%edx)
		mov    0x00001c(%edx),%eax
		jmp    _06cb08_jump

	_06cb06_jump:
		xor    %eax,%eax

	_06cb08_jump:
		test   %eax,%eax
		je     _06cb35_jump

	_06cb0c_jump:
		movswl %si,%eax
		sar    $0x000005,%eax
		mov    %eax,%edi
		mov    %esi,%eax
		xor    %ah,%ah
		and    $0x00001f,%al
		movswl %ax,%ecx
		mov    $0x000001,%eax
		shl    %cl,%eax
		mov    %eax,%ecx
		movswl %di,%eax
		test   %ecx,(%ebx,%eax,4)
		je     _06cb76_jump
		orb    $0x000004,0x000081(%edx)

	_06cb35_jump:
		mov    (%esp),%edi
		inc    %esi
		add    $0x000084,%edx
		cmp    %di,%si
		jge    _06cb7f_jump

	_06cb44_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x000003,%eax
		je     _06cb76_jump
		cmp    $0x00000d,%eax
		je     _06cb76_jump
		cmp    $0x00000f,%eax
		je     _06cb76_jump
		cmp    $0x00003b,%eax
		je     _06cb76_jump
		cmp    $0x000024,%eax
		je     _06cb76_jump
		cmp    $0x000042,%eax
		je     _06cb76_jump
		cmp    $0x00003e,%eax
		je     _06cb76_jump
		cmp    $0x000063,%eax
		jne    _06cade_jump

	_06cb76_jump:
		andb   $0x0000fb,0x000081(%edx)
		jmp    _06cb35_jump

	_06cb7f_jump:
		xor    %al,%al
		mov    %al,_0c2564_data
		mov    0x000257(%ebx),%al
		inc    %al
		mov    %al,_0c247a_data
		xor    %eax,%eax
		mov    0x000257(%ebx),%al
		call   _03bbfc_func

	_06cba0_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06cbac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0c24f2_data,%si
		mov    _0c24f0_data,%di
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		xor    %edx,%edx
		cmp    %ax,%si
		jle    _06cbe7_jump

	_06cbd1_jump:
		movswl %ax,%ebx
		mov    _094738_data(%ebx),%bl
		xor    %bh,%bh
		shl    $0x000005,%ebx
		inc    %eax
		add    %ebx,%edx
		cmp    %si,%ax
		jl     _06cbd1_jump

	_06cbe7_jump:
		mov    $0x000001,%eax
		cmp    %ax,%di
		jle    _06cbfa_jump

	_06cbf1_jump:
		inc    %eax
		add    $0x000020,%edx
		cmp    %di,%ax
		jl     _06cbf1_jump

	_06cbfa_jump:
		mov    $0x000003,%cl
		mov    (%esp),%eax
		mov    %si,_0c24f2_data
		mov    %di,_0c24f0_data
		test   %ax,%ax
		js     _06cc17_jump
		sar    %cl,%ax
		jmp    _06cc20_jump

	_06cc17_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06cc20_jump:
		mov    _0c24f2_data,%si
		add    %edx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06cc54_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cwtl   
		call   _06cbac_func
		mov    %dl,%cl
		movswl %ax,%ebx
		and    $0x000007,%cl
		mov    $0x000080,%eax
		test   %ax,%ax
		js     _06cc76_jump
		sar    %cl,%ax
		jmp    _06cc7f_jump

	_06cc76_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06cc7f_jump:
		or     %al,_0c4740_data(%ebx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06cc8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cwtl   
		call   _06cbac_func
		mov    %dl,%cl
		movswl %ax,%ebx
		and    $0x000007,%cl
		mov    $0x000080,%eax
		test   %ax,%ax
		js     _06ccae_jump
		sar    %cl,%ax
		jmp    _06ccb7_jump

	_06ccae_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06ccb7_jump:
		and    _0c4740_data(%ebx),%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06cdd8_func:
		xor    %al,%al
		ret    



_06cde0_func:
		push   %edx
		xor    %edx,%edx
		mov    %dx,_0c25a2_data
		mov    %dx,_0c25a4_data
		call   _0186d4_func
		mov    %eax,%edx
		mov    %ax,_0c4598_data
		sub    $0x0000d8,%edx
		sub    $0x000088,%eax
		mov    %dx,_0c25a6_data
		mov    %ax,_0c25a8_data
		call   _018750_func
		pop    %edx
		ret    



_06ce20_func:
		push   %ebx
		push   %ecx
		cmpb   $0x000000,_0c25b1_data
		jne    _06cee8_jump
		mov    _0c25a2_data,%ecx
		mov    _0c24be_data,%ebx
		mov    _0c25a0_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sub    %ebx,%eax
		add    %ebx,%ecx
		mov    %eax,%ebx
		mov    _0c247a_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _06ce66_jump
		cmp    %ecx,%eax
		jg     _06ce66_jump
		mov    $0x000001,%eax
		jmp    _06ce68_jump

	_06ce66_jump:
		xor    %eax,%eax

	_06ce68_jump:
		test   %eax,%eax
		je     _06cead_jump
		mov    _0c25a6_data,%ecx
		mov    _0c24c0_data,%ebx
		mov    _0c25a4_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sub    %ebx,%eax
		add    %ebx,%ecx
		mov    %eax,%ebx
		mov    _0c247c_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _06cea3_jump
		cmp    %ecx,%eax
		jg     _06cea3_jump
		mov    $0x000001,%eax
		jmp    _06cea5_jump

	_06cea3_jump:
		xor    %eax,%eax

	_06cea5_jump:
		test   %eax,%eax
		je     _06cead_jump
		mov    $0x000001,%al
		jmp    _06ceaf_jump

	_06cead_jump:
		xor    %al,%al

	_06ceaf_jump:
		mov    %al,_0c25b1_data
		test   %al,%al
		je     _06cee8_jump
		mov    _0c25a2_data,%ax
		mov    %ax,_0c259a_data
		mov    _0c25a4_data,%ax
		mov    %ax,_0c259c_data
		mov    _0c25a6_data,%ax
		mov    %ax,_0c259e_data
		mov    _0c25a8_data,%ax
		mov    %ax,_0c25a0_data

	_06cee8_jump:
		mov    _0c25b1_data,%al
		pop    %ecx
		pop    %ebx
		ret    



_06cef0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%bl
		call   _0186d4_func
		cwtl   
		sub    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01dcec_func
		movl   $0x000000,0x000024(%edx)
		xor    %bl,%bl
		movw   $0x000000,0x000040(%edx)
		mov    %bl,_0c13af_data
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000042(%edx)
		or     $0x000004,%ah
		xor    %bh,%bh
		mov    %ah,0x000081(%edx)
		xor    %eax,%eax
		mov    %bl,_0c13b2_data
		mov    0x000060(%edx),%ax
		mov    %bx,_0dbf88_data
		cmp    $0x00004a,%eax
		jne    _06cf60_jump
		mov    _0dbf9b_data,%al
		mov    %al,0x000076(%edx)
		mov    %edx,%eax
		call   _06cde0_func

	_06cf60_jump:
		xor    %cl,%cl
		xor    %esi,%esi
		mov    %cl,_0dbf9a_data
		xor    %ch,%ch
		mov    %si,_0dbf9e_data
		mov    %cx,_0dbf8c_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06cf80_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %dx,(%esp)
		mov    0x000054(%eax),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _06d089_jump
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _06cfc3_jump
		jmp    _06d089_jump

	_06cfb3_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _06d089_jump

	_06cfc3_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x00005c,%edx
		jne    _06cfb3_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _06cfb3_jump
		movw   $0x000000,0x000042(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%ecx)
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    (%esp),%edx
		sar    %eax
		test   %dx,%dx
		je     _06d000_jump
		neg    %eax

	_06d000_jump:
		cwtl   
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    (%esp),%al
		mov    $0x000001,%ebx
		add    $0x000002,%al
		mov    %ebx,%edx
		mov    %al,0x00006c(%ecx)
		mov    %ecx,%eax
		movb   $0x000000,0x00006d(%ecx)
		call   _058bb4_func
		mov    %ecx,%eax
		call   _01dcec_func
		mov    0x000081(%ecx),%dl
		or     $0x000004,%dl
		mov    %dl,0x000081(%ecx)
		mov    %dl,%dh
		movl   $0x000001,0x000024(%ecx)
		and    $0x0000bf,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f584_func
		movb   $0x000000,0x000071(%ecx)
		mov    0x000056(%esi),%ax
		dec    %eax
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		call   _01dcec_func
		mov    %ecx,%eax
		movw   $0x00000a,0x000050(%ecx)
		call   _072b98_func

	_06d089_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06d090_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movw   $0x000000,0x000040(%eax)
		mov    $0x000001,%ebx
		movw   $0x000000,0x000042(%eax)
		call   _01dcec_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		mov    0x000032(%ecx),%edx
		mov    $0x0000f6,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		mov    %ecx,%eax
		call   _072b98_func
		movw   $0x00000a,0x000050(%ecx)
		movw   $0x000003,0x000056(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06d0dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    0x000060(%eax),%ax
		cmp    $0x00005d,%ax
		jb     _06d2d6_jump
		jbe    _06d24b_jump
		cmp    $0x0000b6,%ax
		jne    _06d2e0_jump
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _06d2e0_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		mov    _0dbf92_data,%bx
		add    %eax,%edx
		sub    %ebx,%edx
		movswl %dx,%eax
		cmp    $0x000014,%eax
		jge    _06d153_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		mov    0x000081(%esi),%ah
		movw   $0x000003,0x000040(%esi)
		or     $0x000008,%ah
		mov    %ah,0x000081(%esi)
		jmp    _06d2e0_jump

	_06d153_jump:
		cmp    $0x0000c8,%eax
		jge    _06d2e0_jump
		sar    $0x000003,%eax
		xor    %ebx,%ebx
		sub    $0x000002,%eax
		mov    %al,%bl
		cmp    $0x000002,%ebx
		jge    _06d16f_jump
		mov    $0x000002,%al

	_06d16f_jump:
		movswl %dx,%edx
		cmp    $0x000032,%edx
		setl   %ah
		xor    %edx,%edx
		mov    %ah,%dl
		inc    %edx
		and    $0x0000ff,%eax
		xor    %ebx,%ebx
		mov    _0c2498_data(%eax),%bl
		sar    %eax
		cmp    %eax,%ebx
		jge    _06d1a5_jump
		mov    0x00003a(%esi),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    %dl,%al
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d1a5_jump:
		mov    0x00003a(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d1b4_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _06d2e0_jump
		decw   0x000050(%esi)
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _06d22e_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d1d5_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _06cf80_func

	_06d1e1_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _06cf80_func
		mov    0x000081(%esi),%bh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d206_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _06cf80_func
		mov    0x000081(%esi),%bl
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d22e_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%al
		jb     _06d241_jump
		jbe    _06d1e1_jump
		cmp    $0x000003,%al
		je     _06d206_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d241_jump:
		cmp    $0x000001,%al
		je     _06d1d5_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d24b_jump:
		push   $0x00008c
		mov    _0dbf92_data,%eax
		push   $0x000014
		sar    $0x000010,%eax
		push   %eax
		mov    _0dbf90_data,%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		sub    $0x000018,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%di
		mov    0x000068(%esi),%al
		add    %edi,%eax
		mov    $0x000010,%ecx
		sub    $0x000008,%eax
		mov    %ecx,%ebx
		cwtl   
		call   _02aa7c_func
		test   %ax,%ax
		je     _06d2e0_jump
		xor    %eax,%eax
		mov    _0dbf9a_data,%al
		test   %eax,%eax
		jne    _06d2a7_jump
		movb   $0x000001,_0dbf9a_data

	_06d2a7_jump:
		andb   $0x0000fb,0x000081(%esi)
		addl   $0x00001e,0x00002c(%esi)
		mov    0x000032(%esi),%edx
		mov    $0x0000f3,%eax
		sar    $0x000010,%edx
		movl   $0x000000,0x000024(%esi)
		call   _06ac04_func
		mov    %esi,%eax
		call   _072b98_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d2d6_jump:
		cmp    $0x00005c,%ax
		je     _06d1b4_jump

	_06d2e0_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06d2e8_switch:
		.long   _06d3df_case
		.long   _06d3ed_case
		.long   _06d3fb_case
		.long   _06d409_case




_06d2f8_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    %ebx,%edi

	_06d302_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x000066,%eax
		jne    _06d31b_jump
		cmpl   $0x000000,0x000024(%ecx)
		je     _06d31b_jump
		add    $0x000084,%ecx
		jmp    _06d302_jump

	_06d31b_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x000066,%eax
		jne    _06d3da_jump
		movswl %di,%ebx
		mov    $0x000002,%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		cmp    $0x000004,%ebx
		jge    _06d41a_jump
		mov    %dl,%al
		mov    0x000081(%ecx),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%ah
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		cmp    %ebp,%ebx
		jge    _06d369_jump
		mov    $0xffffffff,%eax
		jmp    _06d36e_jump

	_06d369_jump:
		mov    $0x000001,%eax

	_06d36e_jump:
		mov    0x000081(%ecx),%dl
		mov    %ax,0x000042(%ecx)
		test   $0x000008,%dl
		je     _06d384_jump
		mov    $0x000001,%eax
		jmp    _06d389_jump

	_06d384_jump:
		mov    $0xffffffff,%eax

	_06d389_jump:
		mov    %ax,0x000040(%ecx)

	_06d38d_jump:
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ecx)
		mov    $0x000001,%ebx
		mov    0x00002c(%esi),%eax
		movb   $0x000002,0x00006d(%ecx)
		mov    %ebx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		movb   $0x000005,0x00006c(%ecx)
		call   _058bb4_func
		mov    %ecx,%eax
		call   _01dcec_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f584_func
		mov    %ecx,%eax
		call   _01dcec_func

	_06d3da_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_06d3df_case:
		movw   $0x000000,0x000042(%ecx)
		movw   $0x00fffe,0x000040(%ecx)
		jmp    _06d38d_jump

	_06d3ed_case:
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _06d38d_jump

	_06d3fb_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fffe,0x000042(%ecx)
		jmp    _06d38d_jump

	_06d409_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000002,0x000042(%ecx)
		jmp    _06d38d_jump

	_06d41a_jump:
		mov    %dl,%al
		and    $0x000001,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		sub    $0x000004,%edi
		mov    %dl,0x000081(%ecx)
		cmp    $0x000003,%di
		ja     _06d38d_jump
		xor    %eax,%eax
		mov    %di,%ax
		jmp    *%cs:_06d2e8_switch(,%eax,4)



_06d450_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _06d47f_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d46f_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _06d552_jump

	_06d47f_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x000066,%edx
		jne    _06d46f_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _06d46f_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000f4,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _072b98_func
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _06d2f8_func
		mov    $0x000001,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _06d2f8_func
		mov    $0x000002,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _06d2f8_func
		mov    $0x000003,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _06d2f8_func
		mov    $0x000004,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _06d2f8_func
		mov    $0x000005,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _06d2f8_func
		mov    $0x000006,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _06d2f8_func
		mov    $0x000007,%ebx
		lea    0x000084(%ecx),%eax
		mov    %esi,%edx
		call   _06d2f8_func
		mov    0x000081(%esi),%ah
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%esi)

	_06d552_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06d558_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _06d587_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d577_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _06d688_jump

	_06d587_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x00005d,%edx
		jne    _06d577_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _06d577_jump
		mov    0x00003e(%esi),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _06d5c9_jump
		movw   $0x00ffff,0x000040(%ecx)
		movw   $0x00fffc,0x000042(%ecx)
		movb   $0x00000a,0x000072(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x000002,0x000050(%ecx)
		and    $0x0000f7,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _06d613_jump

	_06d5c9_jump:
		mov    _0c1ec0_data,%edx
		mov    0x00003e(%edx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jge    _06d5e0_jump
		mov    $0xfffffffc,%edx
		jmp    _06d5e5_jump

	_06d5e0_jump:
		mov    $0x000004,%edx

	_06d5e5_jump:
		mov    %dx,0x000040(%ecx)
		mov    0x00003e(%ecx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jge    _06d5fc_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _06d603_jump

	_06d5fc_jump:
		orb    $0x000008,0x000081(%ecx)

	_06d603_jump:
		movb   $0x0000ff,0x000072(%ecx)
		movw   $0x000001,0x000050(%ecx)
		movw   $0x00ffff,0x000042(%ecx)

	_06d613_jump:
		mov    0x000028(%esi),%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%edx
		movb   $0x000002,0x00006d(%ecx)
		mov    0x000028(%ecx),%ax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000001,%ebx
		mov    %ax,0x00003c(%ecx)
		mov    %ebx,%edx
		mov    %ecx,%eax
		movb   $0x000003,0x00006c(%ecx)
		call   _058bb4_func
		mov    %ecx,%eax
		call   _01dcec_func
		mov    0x000081(%ecx),%bl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _01f584_func
		movb   $0x000000,0x000071(%ecx)
		movw   $0x0000c8,0x000056(%ecx)
		mov    0x000081(%esi),%bh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bh
		mov    %ecx,%eax
		mov    %bh,0x000081(%esi)
		call   _01dcec_func

	_06d688_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06d690_func:
		push   %ebx
		mov    0x000060(%eax),%dx
		cmp    $0x00005b,%dx
		jb     _06d6e0_jump
		jbe    _06d6b3_jump
		cmp    $0x00005d,%dx
		jb     _06d6e6_jump
		jbe    _06d6ba_jump
		cmp    $0x0000b6,%dx
		jmp    _06d6e4_jump

	_06d6ac_jump:
		call   _06d558_func
		pop    %ebx
		ret    

	_06d6b3_jump:
		call   _06d450_func
		pop    %ebx
		ret    

	_06d6ba_jump:
		mov    _0c1ec0_data,%edx
		mov    0x000040(%edx),%dx
		movw   $0x00ffff,0x000042(%eax)
		movb   $0x0000ff,0x000072(%eax)
		mov    0x000040(%eax),%bx
		movw   $0x000001,0x000050(%eax)
		add    %edx,%ebx
		mov    %bx,0x000040(%eax)
		pop    %ebx
		ret    

	_06d6e0_jump:
		cmp    $0x00005a,%dx

	_06d6e4_jump:
		je     _06d6ac_jump

	_06d6e6_jump:
		pop    %ebx
		ret    



_06d6e8_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x00005c,%ax
		jb     _06d740_jump
		jbe    _06d703_jump
		cmp    $0x00005d,%ax
		jbe    _06d70c_jump
		cmp    $0x0000b6,%ax
		jmp    _06d744_jump

	_06d703_jump:
		mov    %edx,%eax
		call   _06d090_func
		pop    %edx
		ret    

	_06d70c_jump:
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06d718_jump
		neg    %eax

	_06d718_jump:
		neg    %eax
		mov    %ax,0x000042(%edx)
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jle    _06d72d_jump
		decw   0x000042(%edx)

	_06d72d_jump:
		mov    $0x00000a,%al
		mov    0x000071(%edx),%ah
		sub    %ah,%al
		mov    %al,0x000071(%edx)
		mov    %edx,%eax
		call   _01dcec_func
		pop    %edx
		ret    

	_06d740_jump:
		cmp    $0x00005a,%ax

	_06d744_jump:
		je     _06d70c_jump
		pop    %edx
		ret    



_06d748_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%di
		xor    %eax,%eax
		test   %di,%di
		jg     _06d779_jump
		jmp    _06d8a4_jump

	_06d769_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %di,%ax
		jge    _06d8a4_jump

	_06d779_jump:
		xor    %edx,%edx
		mov    _0dbfa0_data,%dl
		imul   $0x00000a,%edx,%edx
		xor    %ebx,%ebx
		xor    %esi,%esi
		mov    _0976d4_data(%edx),%bl
		mov    0x000060(%ecx),%si
		add    $0x00005a,%ebx
		cmp    %ebx,%esi
		jne    _06d769_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _06d769_jump
		mov    0x000081(%ebp),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%bl
		or     %al,%bl
		mov    %bl,0x000081(%ecx)
		mov    _0976d8_data(%edx),%ax
		mov    0x000081(%ecx),%bh
		mov    %ax,0x000042(%ecx)
		test   $0x000008,%bh
		je     _06d7ea_jump
		mov    _0976d6_data(%edx),%ax
		mov    _0dbf94_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%bl
		add    $0x000017,%edx
		jmp    _06d804_jump

	_06d7ea_jump:
		mov    _0976d6_data(%edx),%ax
		xor    %ebx,%ebx
		mov    _0dbf94_data,%edx
		neg    %eax
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%bl
		add    $0x000009,%edx

	_06d804_jump:
		mov    %ax,0x000040(%ecx)
		sub    %ebx,%edx
		mov    %edx,0x000028(%ecx)
		mov    _0dbf96_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000069(%ecx),%dl
		sub    %edx,%ebx
		add    $0x000019,%ebx
		mov    %ebx,0x00002c(%ecx)
		xor    %ebx,%ebx
		mov    _0dbfa0_data,%bl
		lea    0x000000(,%ebx,4),%edx
		add    %ebx,%edx
		movb   $0x000002,0x00006d(%ecx)
		mov    $0x000001,%ebx
		mov    _0976d4_data(,%edx,2),%al
		mov    %ebx,%edx
		mov    %al,0x00006c(%ecx)
		mov    %ecx,%eax
		call   _058bb4_func
		mov    %ecx,%eax
		call   _01dcec_func
		mov    0x000081(%ecx),%al
		or     $0x000004,%al
		mov    %al,%ah
		and    $0x0000bf,%ah
		xor    %ebx,%ebx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f584_func
		mov    _0dbfa0_data,%bl
		lea    0x000000(,%ebx,4),%edx
		movb   $0x000000,0x000071(%ecx)
		add    %ebx,%edx
		movb   $0x00000a,0x000072(%ecx)
		mov    _0976da_data(,%edx,2),%ax
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		call   _01dcec_func

	_06d8a4_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06d8ac_func:
		push   %ebx
		push   %edx
		mov    _0dbf8a_data,%bx
		mov    _0dbf86_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		movswl %bx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _09771a_data(%eax),%dl
		mov    %dl,_0dbf84_data
		mov    _09771b_data(%eax),%dl
		mov    _09771c_data(%eax),%ax
		mov    %dl,_0dbf85_data
		mov    %ax,_0dbf86_data
		test   %ax,%ax
		je     _06d909_jump
		xor    %ebx,%ebx
		jmp    _06d90a_jump

	_06d909_jump:
		inc    %ebx

	_06d90a_jump:
		mov    _0dbf84_data,%al
		mov    %bx,_0dbf8a_data
		pop    %edx
		pop    %ebx
		ret    



_06d91c_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		cmp    $0x00004a,%edx
		jne    _06d95c_jump
		xor    %edx,%edx
		mov    _0dbfa0_data,%dl
		cmp    $0x000006,%edx
		jle    _06d93f_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0dbfa0_data

	_06d93f_jump:
		call   _06d748_func
		mov    _0dbf85_data,%al
		inc    %al
		mov    %al,_0c13b1_data
		call   _06d8ac_func
		mov    %al,_0dbfa0_data
		pop    %edx
		ret    

	_06d95c_jump:
		xor    %dl,%dl
		mov    %dl,_0dbfa0_data
		call   _06d748_func
		pop    %edx
		ret    



_06d96c_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0c13af_data,%dl
		cmp    $0x000064,%edx
		je     _06d9fe_jump
		decb   0x000076(%eax)
		xor    %edx,%edx
		mov    0x000076(%eax),%dl
		test   %edx,%edx
		jle    _06d9f6_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		cmp    $0x000002,%edx
		je     _06d9b9_jump
		mov    %dl,_0dbf9c_data
		mov    0x00006c(%eax),%dl
		mov    $0x000003,%ebx
		mov    %dl,_0dbf9d_data
		xor    %edx,%edx
		call   _01d4a8_func
		movb   $0x000002,_0dbf9a_data
		jmp    _06d9c1_jump

	_06d9b9_jump:
		xor    %bh,%bh
		mov    %bh,_0dbf9a_data

	_06d9c1_jump:
		incw   _0dbf88_data
		mov    _0dbf86_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jle    _06d9e0_jump
		movw   $0x000003,_0dbf88_data
		jmp    _06d9e9_jump

	_06d9e0_jump:
		xor    %ebx,%ebx
		mov    %bx,_0dbf8a_data

	_06d9e9_jump:
		call   _06d8ac_func
		mov    %al,_0dbfa0_data
		pop    %edx
		pop    %ebx
		ret    

	_06d9f6_jump:
		xor    %dh,%dh
		mov    %dh,_0dbf9a_data

	_06d9fe_jump:
		pop    %edx
		pop    %ebx
		ret    



_06da04_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0c13af_data,%al
		cmp    $0x000002,%al
		jb     _06da9e_jump
		jbe    _06da5f_jump
		cmp    $0x000003,%al
		je     _06da6e_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06da20_jump:
		mov    0x000076(%ecx),%al
		dec    %al
		xor    %edx,%edx
		mov    %al,0x000076(%ecx)
		xor    %eax,%eax
		mov    0x000076(%ecx),%dl
		mov    0x000077(%ecx),%al
		sub    %edx,%eax
		cmp    $0x000003,%eax
		jl     _06da40_jump
		movb   $0x000002,_0c13af_data

	_06da40_jump:
		xor    %dl,%dl
		mov    %ecx,%eax
		mov    %dl,_0c13ad_data
		mov    $0x000003,%edx
		call   _01d498_func
		movb   $0x000002,_0dbf9a_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06da5f_jump:
		xor    %bl,%bl
		mov    %bl,_0dbf9a_data
		decb   0x000076(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06da6e_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    0x000076(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		dec    %dl
		xor    %ah,%ah
		mov    %dl,0x000076(%ecx)
		mov    $0x000002,%dh
		mov    %ah,_0c13ad_data
		mov    %dh,_0dbf9a_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06da9e_jump:
		cmp    $0x000001,%al
		je     _06da20_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06daac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000008,%esp
		mov    %eax,%esi
		lea    0x000004(%esp),%eax
		mov    $_0dbf98_data,%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		mov    $_0dbf96_data,%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d840_func
		testb  $0x000008,0x000081(%esi)
		je     _06daf4_jump
		mov    (%esp),%esi
		mov    _0dbf96_data,%dx
		sub    $0x000020,%esi
		add    %esi,%edx
		mov    %dx,_0dbf96_data

	_06daf4_jump:
		mov    _0dbf96_data,%bx
		mov    _0dbf98_data,%cx
		add    $0x00000c,%ebx
		add    $0x00000c,%ecx
		mov    %bx,_0dbf96_data
		mov    %cx,_0dbf98_data
		add    $0x000008,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06db20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000020,%esp
		mov    %eax,%esi
		mov    %esp,%ebx
		push   %ebx
		lea    0x00000c(%esp),%ebx
		lea    0x000018(%esp),%ecx
		push   %ebx
		mov    $0x000002,%edx
		lea    0x00000c(%esp),%ebx
		call   _01d840_func
		lea    0x000010(%esp),%ebx
		lea    0x00001c(%esp),%ecx
		push   %ebx
		lea    0x000010(%esp),%ebx
		mov    $0x000005,%edx
		push   %ebx
		mov    %esi,%eax
		lea    0x000020(%esp),%ebx
		call   _01d840_func
		mov    0x000006(%esp),%ebx
		mov    0x00001c(%esp),%eax
		sar    $0x000010,%ebx
		mov    0x000002(%esp),%ecx
		sub    $0x000014,%ebx
		sar    $0x000010,%ecx
		sar    %ebx
		add    $0x000014,%eax
		add    %ecx,%ebx
		mov    %ax,_0dbf94_data
		mov    %bx,_0dbf92_data
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06db94_switch:
		.long   _06dee3_case
		.long   _06dee3_case
		.long   _06dee3_case
		.long   _06dee3_case
		.long   _06dee3_case
		.long   _06dee3_case
		.long   _06dee3_case
		.long   _06def4_case
		.long   _06df1a_case
		.long   _06df41_case

_06dbbc_switch:
		.long   _06df81_case
		.long   _06de34_case
		.long   _06dec5_case
		.long   _06deab_case




_06dbcc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		call   _06ce20_func
		mov    %esi,%eax
		call   _06daac_func
		mov    %esi,%eax
		call   _06db20_func
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    $0x000001,%eax
		jge    _06dc9e_jump
		xor    %eax,%eax
		mov    _0c13af_data,%al
		cmp    $0x000064,%eax
		je     _06dc9e_jump
		xor    %ah,%ah
		mov    %ah,_0dbf9a_data
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		mov    _0c24b2_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		cwtl   
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0c24bc_data,%eax
		mov    0x000002(%eax,%edx,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		je     _06dc9e_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		movb   $0x0000ff,0x00006b(%esi)
		call   _01d4a8_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _058bb4_func
		mov    $0x000064,%dh
		movw   $0x000000,0x000040(%esi)
		mov    $0x000001,%bl
		movw   $0x000000,0x000042(%esi)
		mov    %dh,_0c13af_data
		mov    $0x0001a4,%edx
		mov    %bl,_0c2571_data
		mov    %dx,_0dbf9e_data

	_06dc9e_jump:
		xor    %eax,%eax
		mov    _0dbf9a_data,%al
		cmp    $0x000001,%eax
		jne    _06dcbd_jump
		mov    %esi,%eax
		call   _06d96c_func
		xor    %al,%al
		mov    %al,_0c13ad_data
		jmp    _06dd2a_jump

	_06dcbd_jump:
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    0x000004(%esi),%eax
		mov    0x00000a(%eax,%edx,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _06dd22_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _06dd22_jump
		movb   $0x000001,_0c13ad_data
		xor    %ch,%ch
		mov    %ch,_0c13ae_data
		jmp    _06dd2a_jump

	_06dd22_jump:
		xor    %bh,%bh
		mov    %bh,_0c13ad_data

	_06dd2a_jump:
		mov    _0c13af_data,%dl
		mov    0x000028(%esi),%bx
		cmp    $0x000002,%dl
		jb     _06e784_jump
		jbe    _06dfa9_jump
		cmp    $0x000004,%dl
		jb     _06e1b6_jump
		jbe    _06e3e3_jump
		cmp    $0x000064,%dl
		je     _06e744_jump

	_06dd5b_jump:
		mov    _0c24f4_data,%ecx
		mov    0x000028(%esi),%ebp
		mov    0x00003e(%esi),%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		add    %ebp,%eax
		add    $0x00012f,%ecx
		add    %edx,%eax
		cmp    %ebx,%eax
		jl     _06dd8d_jump
		cmp    %ecx,%eax
		jg     _06dd8d_jump
		mov    $0x000001,%eax
		jmp    _06dd8f_jump

	_06dd8d_jump:
		xor    %eax,%eax

	_06dd8f_jump:
		test   %eax,%eax
		jne    _06dd99_jump
		movw   $0x000000,0x000040(%esi)

	_06dd99_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06dda0_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _06ddb0_jump
		mov    0x00006c(%esi),%al
		test   %eax,%eax
		je     _06dd5b_jump

	_06ddb0_jump:
		movswl %bx,%eax
		mov    _0c1b44_data,%edi
		lea    0x0000dc(%eax),%edx
		cmp    %edi,%edx
		jle    _06ddd3_jump
		lea    0x00006e(%edi),%edx
		cmp    %eax,%edx
		jle    _06ddd3_jump
		movb   $0x000001,_0c13ae_data
		jmp    _06dde1_jump

	_06ddd3_jump:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func

	_06dde1_jump:
		cmpb   $0x000000,_0c13ae_data
		je     _06dd5b_jump
		cmpb   $0x000000,_0c13ad_data
		je     _06dd5b_jump
		mov    $0x000001,%al
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %al,_0c13af_data
		mov    %al,_0c13b0_data
		mov    %dx,_0dbf8a_data
		mov    %dx,_0dbf88_data
		call   _06d8ac_func
		mov    %al,_0dbfa0_data
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		jmp    _06dd5b_jump

	_06de34_case:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    %dl,%al
		lea    0x000000(,%eax,8),%edx
		mov    (%ebx),%eax
		mov    0x000005(%edx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _06dd5b_jump
		mov    0x00006b(%esi),%al
		cmp    $0x000018,%eax
		je     _06de9f_jump
		cmp    $0x00001c,%eax
		jne    _06de82_jump
		xor    %eax,%eax
		mov    _0c13b1_data,%al
		test   %eax,%eax
		je     _06de9f_jump

	_06de82_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000020,%eax
		jne    _06dd5b_jump
		xor    %eax,%eax
		mov    _0c13b1_data,%al
		test   %eax,%eax
		jne    _06dd5b_jump

	_06de9f_jump:
		mov    %esi,%eax
		call   _06d91c_func
		jmp    _06dd5b_jump

	_06deab_case:
		cmpb   $0x000000,_0c13ad_data
		je     _06dd5b_jump
		xor    %cl,%cl
		mov    %cl,_0dbf9a_data
		jmp    _06dd5b_jump

	_06dec5_case:
		cmpb   $0x000000,_0c13ad_data
		je     _06dd5b_jump
		xor    %eax,%eax
		mov    _0c13b1_data,%al
		cmp    $0x000001,%eax
		jle    _06df5b_jump
		jmp    _06df75_jump

	_06dee3_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d498_func
		jmp    _06dd5b_jump

	_06def4_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    $0x000002,%dh
		mov    $0x000003,%eax
		mov    %dh,_0c13af_data
		mov    %ax,_0dbf9e_data
		jmp    _06dd5b_jump

	_06df1a_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000002,%edi
		call   _01d4a8_func
		mov    $0x000003,%dl
		mov    %di,_0dbf9e_data
		mov    %dl,_0c13af_data
		jmp    _06dd5b_jump

	_06df41_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movb   $0x000004,_0c13af_data
		jmp    _06dd5b_jump

	_06df5b_jump:
		mov    _0dbf84_data,%al
		cmp    $0x000009,%al
		ja     _06dd5b_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_06db94_switch(,%eax,4)

	_06df75_jump:
		dec    %al
		mov    %al,_0c13b1_data
		jmp    _06dd5b_jump

	_06df81_case:
		cmpb   $0x000000,_0c13ad_data
		je     _06dd5b_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d498_func
		call   _06d8ac_func
		mov    %al,_0dbfa0_data
		jmp    _06dd5b_jump

	_06dfa9_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _06dfe8_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _06dfe8_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _06dfe8_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0dbf9d_data,%bl
		mov    _0dbf9c_data,%dl
		call   _01d4a8_func
		xor    %bl,%bl
		mov    %bl,_0dbf9a_data
		mov    %bl,_0c13ad_data

	_06dfe8_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _06e108_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _06e012_jump
		mov    0x000068(%esi),%al
		add    0x000028(%esi),%eax
		test   %eax,%eax
		jl     _06e045_jump

	_06e012_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06e04b_jump
		mov    _0c24f4_data,%edx
		mov    0x000028(%esi),%ebx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		add    $0x000140,%edx
		add    %ebx,%eax
		cmp    %edx,%eax
		jle    _06e04b_jump

	_06e045_jump:
		movw   $0x000000,0x000040(%esi)

	_06e04b_jump:
		cmpb   $0x000000,_0c13ad_data
		jne    _06e0ec_jump
		jmp    _06dd5b_jump

	_06e05d_jump:
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ecx
		movw   $0x00fffa,0x000042(%esi)
		sub    $0x000006,%ecx
		mov    0x000081(%esi),%dh
		mov    %ecx,0x00002c(%esi)
		test   $0x000008,%dh
		je     _06e086_jump
		mov    $0x000001,%eax
		jmp    _06e08b_jump

	_06e086_jump:
		mov    $0xffffffff,%eax

	_06e08b_jump:
		mov    %ax,0x000040(%esi)
		jmp    _06dd5b_jump

	_06e094_jump:
		decw   _0dbf9e_data
		mov    _0dbf9c_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06e0c0_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000040(%esi)
		jmp    _06dd5b_jump

	_06e0c0_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		testb  $0x000008,0x000081(%esi)
		je     _06e0de_jump
		mov    $0x000002,%eax
		jmp    _06e0e3_jump

	_06e0de_jump:
		mov    $0xfffffffe,%eax

	_06e0e3_jump:
		mov    %ax,0x000040(%esi)
		jmp    _06dd5b_jump

	_06e0ec_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x00000a,%dl
		jb     _06dd5b_jump
		jbe    _06e05d_jump
		cmp    $0x00000b,%dl
		je     _06e094_jump
		jmp    _06dd5b_jump

	_06e108_jump:
		cmp    $0x000001,%eax
		jne    _06dd5b_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _06e12e_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _06e167_jump

	_06e12e_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06dd5b_jump
		mov    _0c24f4_data,%edx
		mov    0x000028(%esi),%eax
		sar    $0x000010,%edx
		add    $0x0000c0,%eax
		add    $0x000140,%edx
		cmp    %edx,%eax
		jle    _06dd5b_jump

	_06e167_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%cl
		xor    %ebx,%ebx
		sub    %eax,%edx
		and    $0x0000f7,%cl
		mov    %edx,%eax
		and    $0x000001,%al
		mov    %cl,%ch
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%ch
		mov    %esi,%eax
		mov    %ch,0x000081(%esi)
		call   _01d4a8_func
		mov    $0x000001,%al
		movw   $0x000000,0x000040(%esi)
		mov    %al,_0c13af_data
		jmp    _06dd5b_jump

	_06e1b6_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _06e1f5_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _06e1f5_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _06e1f5_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0dbf9d_data,%bl
		mov    _0dbf9c_data,%dl
		call   _01d4a8_func
		xor    %dh,%dh
		mov    %dh,_0dbf9a_data
		mov    %dh,_0c13ad_data

	_06e1f5_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _06e2fc_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _06e21f_jump
		mov    0x000068(%esi),%al
		add    0x000028(%esi),%eax
		test   %eax,%eax
		jl     _06e250_jump

	_06e21f_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06e256_jump
		mov    _0c24f4_data,%eax
		mov    0x000028(%esi),%edi
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000068(%esi),%dl
		add    $0x000140,%eax
		add    %edi,%edx
		cmp    %eax,%edx
		jle    _06e256_jump

	_06e250_jump:
		movw   $0x000000,0x000040(%esi)

	_06e256_jump:
		cmpb   $0x000000,_0c13ad_data
		jne    _06e2e0_jump
		jmp    _06dd5b_jump

	_06e268_jump:
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ebp
		movw   $0x00fffa,0x000042(%esi)
		sub    $0x000006,%ebp
		mov    0x000081(%esi),%dl
		mov    %ebp,0x00002c(%esi)
		test   $0x000008,%dl
		je     _06e291_jump
		mov    $0x000001,%eax
		jmp    _06e296_jump

	_06e291_jump:
		mov    $0xffffffff,%eax

	_06e296_jump:
		mov    %ax,0x000040(%esi)
		jmp    _06dd5b_jump

	_06e29f_jump:
		mov    _0dbf9e_data,%bx
		mov    $0x000001,%edx
		dec    %ebx
		mov    %esi,%eax
		mov    %bx,_0dbf9e_data
		xor    %ebx,%ebx
		call   _01d4a8_func
		testb  $0x000008,0x000081(%esi)
		je     _06e2cc_jump
		mov    $0x000002,%eax
		jmp    _06e2d1_jump

	_06e2cc_jump:
		mov    $0xfffffffe,%eax

	_06e2d1_jump:
		movw   $0x00001e,0x000056(%esi)
		mov    %ax,0x000040(%esi)
		jmp    _06dd5b_jump

	_06e2e0_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x00000a,%dl
		jb     _06dd5b_jump
		jbe    _06e268_jump
		cmp    $0x00000b,%dl
		je     _06e29f_jump
		jmp    _06dd5b_jump

	_06e2fc_jump:
		cmp    $0x000001,%eax
		jne    _06dd5b_jump
		mov    _0dbf9c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _06e33e_jump
		decw   0x000056(%esi)
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jge    _06dd5b_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000040(%esi)
		jmp    _06dd5b_jump

	_06e33e_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _06e35b_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _06e393_jump

	_06e35b_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06dd5b_jump
		mov    _0c24f4_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _06dd5b_jump

	_06e393_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%bh
		sub    %eax,%edx
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,%cl
		and    $0x000001,%al
		xor    %ebx,%ebx
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%cl
		mov    %esi,%eax
		mov    %cl,0x000081(%esi)
		call   _01d4a8_func
		mov    $0x000001,%ch
		movw   $0x000000,0x000040(%esi)
		mov    %ch,_0c13af_data
		jmp    _06dd5b_jump

	_06e3e3_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _06e422_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _06e422_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%eax
		jne    _06e422_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0dbf9d_data,%bl
		mov    _0dbf9c_data,%dl
		call   _01d4a8_func
		xor    %bl,%bl
		mov    %bl,_0dbf9a_data
		mov    %bl,_0c13ad_data

	_06e422_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _06e697_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _06e44c_jump
		mov    0x000068(%esi),%al
		add    0x000028(%esi),%eax
		test   %eax,%eax
		jl     _06e47f_jump

	_06e44c_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06e485_jump
		mov    _0c24f4_data,%edx
		mov    0x000028(%esi),%edi
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		add    $0x000140,%edx
		add    %edi,%eax
		cmp    %edx,%eax
		jle    _06e485_jump

	_06e47f_jump:
		movw   $0x000000,0x000040(%esi)

	_06e485_jump:
		cmpb   $0x000000,_0c13ad_data
		jne    _06e677_jump
		jmp    _06dd5b_jump

	_06e497_jump:
		mov    0x000028(%esi),%dx
		mov    _0c1b44_data,%di
		add    $0x000030,%edx
		sub    %edi,%edx
		movb   $0x000005,0x000072(%esi)
		movswl %dx,%eax
		movb   $0x000000,0x000071(%esi)
		test   %eax,%eax
		jge    _06e4b8_jump
		neg    %edx

	_06e4b8_jump:
		movswl %dx,%edx
		cmp    $0x000064,%edx
		jle    _06e505_jump
		mov    $0x000014,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jle    _06e4e3_jump
		movw   $0x000009,0x000042(%esi)
		jmp    _06e4ee_jump

	_06e4e3_jump:
		cmp    $0x000004,%eax
		jge    _06e4ee_jump
		movw   $0x000004,0x000042(%esi)

	_06e4ee_jump:
		testb  $0x000008,0x000081(%esi)
		je     _06e4fe_jump
		mov    $0x000002,%eax
		jmp    _06e548_jump

	_06e4fe_jump:
		mov    $0xfffffffe,%eax
		jmp    _06e548_jump

	_06e505_jump:
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jle    _06e528_jump
		movw   $0x000009,0x000042(%esi)
		jmp    _06e533_jump

	_06e528_jump:
		cmp    $0x000004,%eax
		jge    _06e533_jump
		movw   $0x000004,0x000042(%esi)

	_06e533_jump:
		testb  $0x000008,0x000081(%esi)
		je     _06e543_jump
		mov    $0x000001,%eax
		jmp    _06e548_jump

	_06e543_jump:
		mov    $0xffffffff,%eax

	_06e548_jump:
		mov    %ax,0x000040(%esi)
		mov    0x000040(%esi),%eax
		mov    0x00002c(%esi),%ebx
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    0x000042(%esi),%ax
		mov    %ebx,0x00002c(%esi)
		neg    %eax
		mov    %ax,0x000042(%esi)
		jmp    _06dd5b_jump

	_06e569_jump:
		testb  $0x000008,0x000081(%esi)
		je     _06e582_jump
		mov    0x000028(%esi),%eax
		mov    _0c1b44_data,%ebp
		add    $0x000030,%eax
		cmp    %ebp,%eax
		jl     _06e59b_jump

	_06e582_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _06e5ae_jump
		mov    0x000028(%esi),%eax
		mov    _0c1b44_data,%edx
		add    $0x000030,%eax
		cmp    %edx,%eax
		jle    _06e5ae_jump

	_06e59b_jump:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _06dd5b_jump

	_06e5ae_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _06e5cb_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _06e5fb_jump

	_06e5cb_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06e64b_jump
		mov    _0c24f4_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _06e64b_jump

	_06e5fb_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%bh
		sub    %eax,%edx
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,%cl
		and    $0x000001,%al
		xor    %ebx,%ebx
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%cl
		mov    %esi,%eax
		mov    %cl,0x000081(%esi)
		call   _01d4a8_func
		mov    $0x000001,%ch
		movw   $0x000000,0x000040(%esi)
		mov    %ch,_0c13af_data
		jmp    _06dd5b_jump

	_06e64b_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		testb  $0x000008,0x000081(%esi)
		je     _06e669_jump
		mov    $0x000002,%eax
		jmp    _06e66e_jump

	_06e669_jump:
		mov    $0xfffffffe,%eax

	_06e66e_jump:
		mov    %ax,0x000040(%esi)
		jmp    _06dd5b_jump

	_06e677_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x00000a,%dl
		jb     _06dd5b_jump
		jbe    _06e497_jump
		cmp    $0x00000b,%dl
		je     _06e569_jump
		jmp    _06dd5b_jump

	_06e697_jump:
		cmp    $0x000001,%eax
		jne    _06dd5b_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _06e6bd_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _06e6f5_jump

	_06e6bd_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _06dd5b_jump
		mov    _0c24f4_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _06dd5b_jump

	_06e6f5_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%cl
		xor    %ebx,%ebx
		sub    %eax,%edx
		and    $0x0000f7,%cl
		mov    %edx,%eax
		and    $0x000001,%al
		mov    %cl,%ch
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%ch
		mov    %esi,%eax
		mov    %ch,0x000081(%esi)
		call   _01d4a8_func
		mov    $0x000001,%al
		movw   $0x000000,0x000040(%esi)
		mov    %al,_0c13af_data
		jmp    _06dd5b_jump

	_06e744_jump:
		decw   _0dbf9e_data
		mov    _0dbf9c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jge    _06dd5b_jump
		mov    $0x0003e7,%ecx
		mov    $0x000001,%ah
		mov    _0c32ec_data,%dl
		mov    %cx,_0dbf9e_data
		or     $0x000004,%dl
		mov    %ah,_0c2570_data
		mov    %dl,_0c32ec_data
		jmp    _06dd5b_jump

	_06e784_jump:
		test   %dl,%dl
		jbe    _06dda0_jump
		mov    %esi,%eax
		mov    0x000081(%esi),%dl
		call   _01dc54_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _06e7c8_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d4a8_func
		xor    %bl,%bl
		movw   $0x000000,0x000040(%esi)
		mov    %bl,_0c13ad_data

	_06e7c8_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x000003,%dl
		ja     _06dd5b_jump
		xor    %eax,%eax
		mov    %dl,%al
		jmp    *%cs:_06dbbc_switch(,%eax,4)



_06e7e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000040(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06e823_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x00000b,%ebx
		call   _024ba8_func
		mov    %dx,_0c25c4_data
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _04d170_func

	_06e823_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06e828_switch:
		.long   _06ebe2_case
		.long   _06ed38_case
		.long   _06ebe2_case
		.long   _06ebe2_case
		.long   _06ed38_case
		.long   _06ed38_case
		.long   _06ed38_case
		.long   _06ed38_case
		.long   _06ed38_case
		.long   _06ed38_case
		.long   _06ec07_case
		.long   _06ebe2_case

_06e858_switch:
		.long   _06e975_case
		.long   _06eab4_case
		.long   _06ebad_case
		.long   _06ed21_case




_06e868_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		movb   $0x000001,_0c25b1_data
		mov    %esi,%eax
		call   _06daac_func
		mov    0x000028(%esi),%ax
		mov    %ax,_0dbf8e_data
		mov    0x00002c(%esi),%ax
		mov    %ax,_0dbf90_data
		mov    %esi,%eax
		call   _06db20_func
		xor    %eax,%eax
		mov    _0dbf9a_data,%al
		cmp    $0x000001,%eax
		jne    _06e8ac_jump
		mov    %esi,%eax
		call   _06da04_func

	_06e8ac_jump:
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _06e90f_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _06e90f_jump
		mov    $0x000001,%dh
		xor    %bl,%bl
		mov    %dh,_0c13ad_data
		mov    %bl,_0c13ae_data
		jmp    _06e917_jump

	_06e90f_jump:
		xor    %dl,%dl
		mov    %dl,_0c13ad_data

	_06e917_jump:
		mov    _0c1b44_data,%ebx
		mov    _0c24f4_data,%eax
		add    $0x000096,%ebx
		sar    $0x000010,%eax
		mov    0x000028(%esi),%dx
		cmp    %eax,%ebx
		jle    _06e95b_jump
		mov    _0c24b4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    _0c1b48_data,%ebx
		sub    $0x00006e,%eax
		cmp    %ebx,%eax
		jge    _06e95b_jump
		mov    0x000076(%esi),%al
		mov    %al,_0dbf9b_data

	_06e95b_jump:
		mov    _0c13af_data,%al
		cmp    $0x000003,%al
		ja     _06ed38_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06e858_switch(,%eax,4)

	_06e975_case:
		mov    %esi,%eax
		call   _024ba8_func
		movswl %dx,%eax
		mov    _0c1b44_data,%ebx
		add    $0x0000dc,%eax
		cmp    %ebx,%eax
		jle    _06e9a2_jump
		add    $0x0000dc,%ebx
		movswl %dx,%eax
		cmp    %eax,%ebx
		jle    _06e9a2_jump
		movb   $0x000001,_0c13ae_data

	_06e9a2_jump:
		cmpb   $0x000000,_0c13ae_data
		je     _06ed38_case
		cmpb   $0x000000,_0c13ad_data
		je     _06ed38_case
		mov    $0x000001,%dh
		mov    $0x000002,%bl
		mov    %esi,%eax
		mov    %dh,_0c13af_data
		mov    %bl,_0c13b1_data
		xor    %bh,%bh
		xor    %edx,%edx
		mov    %bh,_0c13b0_data
		mov    $0x000001,%ebx
		call   _01d4a8_func
		jmp    _06ed38_case

	_06e9e7_jump:
		xor    %edx,%edx
		mov    0x00000c(%esi),%ebx
		mov    0x00006d(%esi),%dl
		and    $0x0000ff,%eax
		mov    (%ebx,%edx,4),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _06ed38_case
		mov    0x00006b(%esi),%al
		cmp    $0x000018,%eax
		je     _06ea4f_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x00001c,%eax
		jne    _06ea31_jump
		xor    %eax,%eax
		mov    _0c13b0_data,%al
		cmp    $0x000001,%eax
		jg     _06ea4f_jump

	_06ea31_jump:
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000020,%eax
		jne    _06ed38_case
		xor    %eax,%eax
		mov    _0c13b0_data,%al
		cmp    $0x000003,%eax
		jle    _06ed38_case

	_06ea4f_jump:
		mov    %esi,%eax
		call   _06d91c_func
		incb   _0c13b0_data
		jmp    _06ed38_case

	_06ea61_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _06ed38_case
		xor    %eax,%eax
		mov    _0c13b1_data,%al
		cmp    $0x000001,%eax
		jg     _06ea8b_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d498_func
		jmp    _06ed38_case

	_06ea8b_jump:
		mov    %al,%cl
		dec    %cl
		mov    %cl,_0c13b1_data
		jmp    _06ed38_case

	_06ea9a_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _06ed38_case
		xor    %bl,%bl
		mov    %bl,_0dbf9a_data
		jmp    _06ed38_case

	_06eab4_case:
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%al
		jb     _06eac6_jump
		jbe    _06ea61_jump
		cmp    $0x000003,%al
		je     _06ea9a_jump
		jmp    _06ed38_case

	_06eac6_jump:
		cmp    $0x000001,%al
		je     _06e9e7_jump
		jmp    _06ed38_case

	_06ead3_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _06ed38_case
		mov    $0x00000a,%ebx
		xor    %dl,%dl
		mov    %esi,%eax
		mov    %dl,_0dbf9a_data
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _06ed38_case

	_06eafb_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _06ed38_case
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fffa,0x000042(%esi)
		mov    $0x000002,%edx
		mov    0x00002c(%esi),%eax
		movw   $0x00ffff,0x000040(%esi)
		sub    $0x000006,%eax
		mov    %dx,_0dbf9e_data
		mov    %eax,0x00002c(%esi)
		jmp    _06ed38_case

	_06eb36_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _06ed38_case
		mov    _0c1b44_data,%eax
		mov    0x000028(%esi),%ebp
		sub    $0x000032,%eax
		cmp    %ebp,%eax
		jle    _06eb9a_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%bh
		sub    %eax,%edx
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,%cl
		and    $0x000001,%al
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%cl
		mov    %esi,%eax
		mov    %cl,0x000081(%esi)
		mov    $0x000003,%ch
		call   _01d498_func
		mov    %ch,_0c13af_data
		jmp    _06ed38_case

	_06eb9a_jump:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		jmp    _06ed38_case

	_06ebad_case:
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _06ebc7_jump
		jbe    _06eafb_jump
		cmp    $0x00000b,%al
		je     _06eb36_jump
		jmp    _06ed38_case

	_06ebc7_jump:
		cmp    $0x000003,%al
		je     _06ead3_jump
		jmp    _06ed38_case

	_06ebd4_jump:
		cmpb   $0x000000,_0c13ad_data
		jne    _06ec40_jump
		jmp    _06ed38_case

	_06ebe2_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		xor    %dh,%dh
		mov    _0dbf9e_data,%ax
		mov    %dh,_0dbf9a_data
		mov    %ax,0x000040(%esi)
		jmp    _06ed38_case

	_06ec07_case:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d4a8_func
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fff9,0x000042(%esi)
		movw   $0x000002,0x000040(%esi)
		mov    0x000072(%esi),%al
		mov    0x00002c(%esi),%edi
		movb   $0x000005,0x000072(%esi)
		sub    $0x000007,%edi
		mov    %al,0x00006b(%esi)
		mov    %edi,0x00002c(%esi)
		jmp    _06ed38_case

	_06ec40_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x00000b,%al
		ja     _06ed38_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06e828_switch(,%eax,4)

	_06ec58_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		mov    _0c24b2_data,%ebx
		add    $0x000008,%eax
		sar    $0x000010,%ebx
		sar    $0x000004,%eax
		imul   %eax,%ebx
		mov    0x000028(%esi),%edx
		xor    %eax,%eax
		add    $0x000032,%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		add    %eax,%ebx
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092204_data(%eax)
		jne    _06ecc3_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000040(%esi)
		jmp    _06ed38_case

	_06ecc3_jump:
		mov    0x000028(%esi),%eax
		mov    _0c247a_data,%edx
		add    $0x000096,%eax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jle    _06ed05_jump
		mov    _0dbf9c_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _06ed0d_jump
		cmpb   $0x000000,_0c249a_data
		je     _06ed05_jump
		movw   $0x000001,0x000040(%esi)
		xor    %eax,%eax
		mov    _0c249c_data,%al
		cmp    $0x000002,%eax
		jge    _06ed38_case
		decb   0x00006b(%esi)
		jmp    _06ed38_case

	_06ed05_jump:
		movw   $0x000002,0x000040(%esi)
		jmp    _06ed38_case

	_06ed0d_jump:
		movw   $0x000001,0x000040(%esi)
		cmpb   $0x000000,_0c249a_data
		je     _06ed38_case
		decb   0x00006b(%esi)
		jmp    _06ed38_case

	_06ed21_case:
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%al
		jb     _06ed30_jump
		jbe    _06ec58_jump
		jmp    _06ed38_case

	_06ed30_jump:
		test   %al,%al
		je     _06ebd4_jump

	_06ed38_case:
		mov    _0c24f4_data,%ecx
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		xor    %ebx,%ebx
		add    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		add    $0x00012f,%ecx
		add    %edx,%eax
		cmp    %ebx,%eax
		jl     _06ed6a_jump
		cmp    %ecx,%eax
		jg     _06ed6a_jump
		mov    $0x000001,%eax
		jmp    _06ed6c_jump

	_06ed6a_jump:
		xor    %eax,%eax

	_06ed6c_jump:
		test   %eax,%eax
		jne    _06ed76_jump
		movw   $0x000000,0x000040(%esi)

	_06ed76_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06ed80_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0c13af_data,%al
		cmp    $0x000002,%al
		jb     _06ed92_jump
		cmp    $0x000003,%al
		jbe    _06ed96_jump

	_06ed92_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ed96_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _06ed92_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x00000b,%ebx
		call   _024ba8_func
		mov    %dx,_0c25c8_data
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _04d170_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06edd8_func:
		mov    0x000076(%eax),%al
		xor    %ah,%ah
		inc    %eax
		mov    %ax,_0dbf9e_data
		ret    



_06ede8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _06daac_func
		mov    0x000028(%ecx),%ax
		mov    %ax,_0dbf8e_data
		mov    0x00002c(%ecx),%ax
		mov    %ax,_0dbf90_data
		mov    %ecx,%eax
		call   _06db20_func
		xor    %eax,%eax
		mov    _0c13af_data,%al
		cmp    $0x000002,%eax
		jne    _06ee31_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _06ee31_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _06ee31_jump
		xor    %ah,%ah
		mov    %ah,_0c13af_data

	_06ee31_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jne    _06ee9b_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _06ee9b_jump
		mov    $0x000001,%dh
		xor    %bl,%bl
		mov    %dh,_0c13ad_data
		mov    %bl,_0c13ae_data
		jmp    _06eea3_jump

	_06ee9b_jump:
		xor    %dl,%dl
		mov    %dl,_0c13ad_data

	_06eea3_jump:
		mov    _0c13af_data,%al
		cmp    $0x000001,%al
		jb     _06eeba_jump
		jbe    _06ef65_jump
		cmp    $0x000002,%al
		je     _06ef7e_jump

	_06eeba_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06eebe_jump:
		xor    %edx,%edx
		mov    0x00006b(%ecx),%dl
		cmp    $0x000018,%edx
		jne    _06eefe_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%ecx),%edx
		and    $0x0000ff,%eax
		mov    (%edx,%ebx,1),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _06eefe_jump
		mov    %ecx,%eax
		call   _06d91c_func

	_06eefe_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _06eeba_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		and    $0x000001,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		xor    %edx,%edx
		call   _01d498_func
		incb   _0c13af_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ef4c_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _06eeba_jump
		xor    %ch,%ch
		mov    %ch,_0dbf9a_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ef65_jump:
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%al
		jb     _06eeba_jump
		jbe    _06eebe_jump
		cmp    $0x000003,%al
		je     _06ef4c_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ef7e_jump:
		cmpb   $0x000000,_0c13ad_data
		je     _06eeba_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _06eeba_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		movw   $0x000002,0x000040(%ecx)
		call   _01d4a8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06efb0_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0c13af_data,%dl
		test   %edx,%edx
		jne    _06efd8_jump
		mov    $0x000001,%dl
		mov    $0x000001,%ebx
		mov    %dl,_0c13af_data
		mov    %dl,_0c13b1_data
		xor    %edx,%edx
		call   _01d4a8_func

	_06efd8_jump:
		pop    %edx
		pop    %ebx
		ret    



_06efdc_func:
		xor    %eax,%eax
		mov    _0c13af_data,%al
		cmp    $0x000002,%eax
		jge    _06efee_jump
		mov    $0xffffffff,%eax
		ret    

	_06efee_jump:
		mov    $0x000001,%eax
		ret    



_06f000_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %edx,0x00000c(%esp)
		mov    %ecx,0x000008(%esp)
		xor    %ah,%ah
		mov    %ax,_0ddc6c_data
		xor    %eax,%eax
		mov    %bx,%ax
		cmp    $0x0000c8,%eax
		jle    _06f049_jump
		mov    _0c24b4_data,%edx
		sar    $0x000010,%edx
		shl    $0x000004,%edx
		lea    -0x0000c8(%eax),%esi
		sub    $0x0000c8,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ax,_0ddc6e_data
		jmp    _06f052_jump

	_06f049_jump:
		movw   $0x000001,_0ddc6e_data

	_06f052_jump:
		xor    %eax,%eax
		mov    _0ddc6e_data,%ax
		test   %eax,%eax
		jne    _06f069_jump
		movw   $0x000002,_0ddc6e_data
		jmp    _06f073_jump

	_06f069_jump:
		mov    %eax,%ecx
		inc    %ecx
		mov    %cx,_0ddc6e_data

	_06f073_jump:
		mov    _0c24b4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		xor    %esi,%esi
		lea    -0x0000c8(%eax),%edx
		mov    _0ddc6e_data,%si
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    %bx,%ax
		lea    -0x0000c8(%eax),%esi
		sub    %edx,%esi
		lea    -0x000001(%esi),%edx
		mov    %dx,_0ddc70_data
		mov    _0c24f0_data,%edx
		sar    $0x000010,%edx
		cmp    $0x000005,%edx
		jne    _06f0e6_jump
		mov    _0c24ee_data,%edx
		sar    $0x000010,%edx
		cmp    $0x00000a,%edx
		jne    _06f0e6_jump
		mov    0x000020(%esp),%ecx
		xor    %esi,%esi
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%si
		mov    %eax,%edx
		mov    %esi,%eax
		call   _070434_func
		jmp    _06f2b2_jump

	_06f0e6_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0ddc6c_data,%dx
		mov    _097818_data(%edx,%eax,2),%al
		xor    %ah,%ah
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %ax,_0ddc68_data
		jmp    _06f143_jump

	_06f118_jump:
		mov    0x000008(%esp),%edi
		movswl %dx,%esi
		add    %esi,%edi
		mov    %edi,_0dbfb4_data(%eax)
		mov    0x000020(%esp),%edi
		add    %edi,%esi
		mov    %esi,_0dbfb8_data(%eax)

	_06f133_jump:
		movswl %bx,%eax
		imul   $0x000018,%eax,%eax
		mov    _0dbfa8_data(%eax),%di
		inc    %ebx
		add    %edi,%edx

	_06f143_jump:
		xor    %eax,%eax
		movswl %bx,%esi
		mov    _0ddc68_data,%ax
		cmp    %eax,%esi
		jge    _06f220_jump
		imul   $0x000018,%esi,%eax
		mov    _0c24f0_data,%ebp
		sar    $0x000010,%ebp
		dec    %ebp
		imul   $0x005dc0,%ebp,%edi
		mov    %edi,(%esp)
		xor    %edi,%edi
		mov    _0ddc6c_data,%di
		imul   $0x000960,%edi,%ecx
		mov    %ecx,0x000004(%esp)
		mov    (%esp),%ecx
		shl    $0x000003,%esi
		add    0x000004(%esp),%ecx
		add    %ecx,%esi
		mov    _097854_data(%esi),%cx
		mov    %cx,_0dbfa8_data(%eax)
		mov    _097856_data(%esi),%cl
		mov    %cl,_0dbfb0_data(%eax)
		mov    _097858_data(%esi),%cl
		mov    %cl,_0dbfb1_data(%eax)
		mov    _09785a_data(%esi),%cl
		imul   $0x00000a,%ebp,%esi
		mov    %dx,_0dbfaa_data(%eax)
		mov    %cl,_0dbfac_data(%eax)
		xor    %ecx,%ecx
		mov    %cx,_0dbfae_data(%eax)
		movzbl _0977dc_data(%edi,%esi,1),%esi
		mov    %cx,_0dbfbc_data(%eax)
		test   %esi,%esi
		je     _06f1ec_jump
		cmp    $0x000002,%esi
		jne    _06f118_jump

	_06f1ec_jump:
		xor    %esi,%esi
		movswl %dx,%eax
		mov    0x00000c(%esp),%si
		imul   %eax,%esi
		imul   $0x000140,%eax,%eax
		mov    0x000008(%esp),%edi
		add    %esi,%edi
		movswl %bx,%esi
		imul   $0x000018,%esi,%esi
		add    0x000020(%esp),%eax
		mov    %edi,_0dbfb4_data(%esi)
		mov    %eax,_0dbfb8_data(%esi)
		jmp    _06f133_jump

	_06f220_jump:
		mov    _0c24f0_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0ddc6c_data,%ax
		mov    _0baad4_data(%edx,%eax,1),%al
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ax,_0ddc6a_data
		jmp    _06f2a2_jump

	_06f250_jump:
		xor    %edi,%edi
		mov    _0ddc6c_data,%di
		imul   $0x0000a0,%edi,%edi
		mov    _0c24f0_data,%esi
		sar    $0x000010,%esi
		dec    %esi
		imul   $0x000640,%esi,%esi
		add    %edi,%esi
		mov    _0bab10_data(%esi,%eax,8),%bx
		mov    %bx,_0ddbc8_data(,%eax,8)
		mov    _0bab12_data(%esi,%eax,8),%bx
		mov    %bx,_0ddbca_data(,%eax,8)
		mov    _0bab14_data(%esi,%eax,8),%bx
		inc    %edx
		mov    %bx,_0ddbcc_data(,%eax,8)

	_06f2a2_jump:
		xor    %esi,%esi
		movswl %dx,%eax
		mov    _0ddc6a_data,%si
		cmp    %esi,%eax
		jl     _06f250_jump

	_06f2b2_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_06f2bc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000068,%esp
		mov    %eax,0x00002c(%esp)
		mov    %edx,0x000054(%esp)
		mov    %ebx,0x000060(%esp)
		mov    %ecx,0x000040(%esp)
		mov    _0c24f0_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0ddc6c_data,%ax
		mov    _0977dc_data(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		je     _06f306_jump
		cmp    $0x000002,%eax
		jne    _06f7a6_jump

	_06f306_jump:
		mov    0x000078(%esp),%eax
		mov    0x000060(%esp),%ecx
		sub    %ecx,%eax
		mov    %ax,0x00003c(%esp)
		mov    _0c24f0_data,%eax
		mov    0x000054(%esp),%ebx
		sar    $0x000010,%eax
		sub    $0x0000c8,%ebx
		cmp    $0x000004,%eax
		jne    _06f3c5_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		je     _06f346_jump
		cmp    $0x00000b,%eax
		jne    _06f3c5_jump

	_06f346_jump:
		mov    _0c1ad6_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _06f3c5_jump
		xor    %edx,%edx
		mov    $0x0000c8,%esi
		mov    0x00007c(%esp),%dx
		sub    %edx,%esi
		mov    0x00002c(%eax),%ecx
		mov    %esi,%edx
		sub    $0x00006e,%ecx
		xor    %esi,%edx
		sub    %esi,%ecx
		mov    0x000040(%esp),%dx
		cmp    %ecx,%edx
		jge    _06f3b1_jump
		mov    0x00007c(%esp),%esi
		mov    0x00002c(%eax),%dx
		mov    $0x0000c8,%eax
		sub    $0x00006e,%edx
		sub    %esi,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,%ax
		mov    %edx,0x000040(%esp)
		test   %eax,%eax
		jge    _06f3b1_jump
		xor    %edi,%edi
		mov    %edi,0x000040(%esp)

	_06f3b1_jump:
		mov    0x000040(%esp),%eax
		mov    0x00007c(%esp),%edx
		cmp    %dx,%ax
		jb     _06f3c5_jump
		mov    %edx,%eax
		dec    %eax
		mov    %eax,0x000040(%esp)

	_06f3c5_jump:
		mov    _0c24f0_data,%edx
		sar    $0x000010,%edx
		lea    -0x000001(%edx),%ecx
		lea    0x000000(,%ecx,4),%eax
		add    %eax,%ecx
		xor    %eax,%eax
		add    %ecx,%ecx
		mov    _0ddc6c_data,%ax
		mov    _0977dc_data(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		jne    _06f441_jump
		cmp    $0x000003,%edx
		jne    _06f416_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jne    _06f416_jump
		mov    _0c247c_data,%eax
		sar    $0x000011,%eax
		add    $0x00000b,%eax
		mov    %ax,0x000028(%esp)
		jmp    _06f455_jump

	_06f416_jump:
		mov    _0c247c_data,%edx
		xor    %ecx,%ecx
		sar    $0x000010,%edx
		mov    _0ddc6e_data,%cx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		xor    %edx,%edx
		mov    _0ddc70_data,%dx
		add    %edx,%eax
		mov    %ax,0x000028(%esp)
		jmp    _06f455_jump

	_06f441_jump:
		mov    $0x0000c8,%eax
		mov    0x00007c(%esp),%ecx
		mov    %ebx,%edx
		sub    %ecx,%eax
		add    %eax,%edx
		mov    %dx,0x000028(%esp)

	_06f455_jump:
		xor    %eax,%eax
		mov    $0x0000c8,%edx
		mov    0x00007c(%esp),%ax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %bx,%edx
		add    %eax,%edx
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jle    _06f485_jump
		mov    $0x0000c8,%eax
		sub    0x00007c(%esp),%eax
		add    %eax,%ebx
		mov    %bx,0x000028(%esp)

	_06f485_jump:
		xor    %edi,%edi
		mov    _0ddc68_data,%ax
		mov    %edi,0x000050(%esp)
		test   %ax,%ax
		jbe    _06f611_jump
		mov    0x00007c(%esp),%eax
		mov    0x000040(%esp),%edx
		sub    %edx,%eax
		mov    %eax,0x000038(%esp)

	_06f4a8_jump:
		movzwl 0x000050(%esp),%ebp
		imul   $0x000018,%ebp,%ebp
		xor    %eax,%eax
		mov    _0dbfae_data(%ebp),%ax
		mov    _0dbfb4_data(%ebp),%esi
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esp),%ax
		mov    _0dbfb8_data(%ebp),%edi
		add    %eax,%esi
		add    %eax,%edi
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000008,%edx
		shl    $0x000006,%eax
		add    %eax,%edx
		mov    0x000028(%esp),%ebx
		sub    %edx,%edi
		mov    _0dbfaa_data(%ebp),%dx
		sub    %ebx,%edx
		mov    _0dbfa8_data(%ebp),%ax
		mov    %edx,%ebx
		movswl %dx,%ecx
		add    %eax,%ebx
		test   %ecx,%ecx
		jge    _06f532_jump
		movswl %bx,%ebp
		test   %ebp,%ebp
		jle    _06f532_jump
		movswl %ax,%ebp
		test   %ebp,%ebp
		je     _06f532_jump
		neg    %ecx
		mov    %ecx,%eax
		mov    %eax,%edx
		shl    $0x000008,%ecx
		shl    $0x000006,%edx
		add    %ecx,%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    0x00002c(%esp),%dx
		imul   %edx,%eax
		add    %eax,%esi
		xor    %edx,%edx
		mov    %ebx,%eax

	_06f532_jump:
		movswl %bx,%ecx
		mov    %ecx,0x000014(%esp)
		xor    %ecx,%ecx
		mov    0x000040(%esp),%cx
		mov    %ecx,0x000010(%esp)
		mov    0x000014(%esp),%ecx
		cmp    0x000010(%esp),%ecx
		jle    _06f594_jump
		xor    %ecx,%ecx
		mov    0x00007c(%esp),%cx
		movswl %dx,%ebp
		mov    %ecx,0x00000c(%esp)
		cmp    %ecx,%ebp
		jge    _06f594_jump
		cmp    0x000010(%esp),%ebp
		jge    _06f5ae_jump
		mov    0x000014(%esp),%ecx
		cmp    0x00000c(%esp),%ecx
		jle    _06f5ae_jump
		xor    %edx,%edx
		mov    0x000010(%esp),%eax
		mov    0x00002c(%esp),%dx
		sub    %ebp,%eax
		imul   %eax,%edx
		add    %edx,%esi
		mov    %eax,%edx
		shl    $0x000008,%edx
		shl    $0x000006,%eax
		add    %edx,%eax
		add    %eax,%edi
		mov    0x000038(%esp),%eax
		jmp    _06f5f2_jump

	_06f594_jump:
		mov    0x000050(%esp),%edi
		inc    %edi
		mov    _0ddc68_data,%dx
		mov    %edi,0x000050(%esp)
		cmp    %dx,%di
		jae    _06f611_jump
		jmp    _06f4a8_jump

	_06f5ae_jump:
		movzwl 0x000040(%esp),%ebp
		movswl %dx,%ecx
		cmp    %ebp,%ecx
		jge    _06f5e0_jump
		mov    %ebp,%ebx
		sub    %ecx,%ebx
		xor    %ecx,%ecx
		mov    0x00002c(%esp),%cx
		imul   %ebx,%ecx
		add    %ecx,%esi
		mov    %ebx,%ecx
		shl    $0x000008,%ecx
		shl    $0x000006,%ebx
		add    %ecx,%ebx
		add    %ebx,%edi
		mov    0x000040(%esp),%ebx
		sub    %edx,%ebx
		sub    %ebx,%eax
		jmp    _06f5f2_jump

	_06f5e0_jump:
		movswl %bx,%ecx
		xor    %ebx,%ebx
		mov    0x00007c(%esp),%bx
		cmp    %ebx,%ecx
		jle    _06f5f2_jump
		mov    %ebx,%eax
		sub    %edx,%eax

	_06f5f2_jump:
		mov    0x00003a(%esp),%ecx
		xor    %edx,%edx
		movswl %ax,%ebx
		mov    0x00002c(%esp),%dx
		mov    _0cdf08_data,%eax
		sar    $0x000010,%ecx
		sub    %eax,%esi
		call   _014fe0_func
		jmp    _06f594_jump

	_06f611_jump:
		mov    0x00002c(%esp),%ebx
		mov    $0x000001,%esi
		mov    _0ddc6a_data,%di
		xor    %ecx,%ecx
		shr    %bx
		mov    %ecx,0x00005c(%esp)
		mov    %esi,0x00004c(%esp)
		mov    %ebx,0x00002c(%esp)
		test   %di,%di
		jbe    _06fbd2_jump
		jmp    _06f65f_jump

	_06f63d_jump:
		mov    0x00005c(%esp),%ecx
		mov    0x00004c(%esp),%esi
		mov    _0ddc6a_data,%di
		inc    %ecx
		inc    %esi
		mov    %ecx,0x00005c(%esp)
		mov    %esi,0x00004c(%esp)
		cmp    %di,%cx
		jae    _06fbd2_jump

	_06f65f_jump:
		xor    %eax,%eax
		mov    0x00005c(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0ddbcc_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		mov    _0dbfa8_data(%edx),%bx
		test   %ebx,%ebx
		je     _06f63d_jump
		movzwl 0x00004c(%esp),%ebp
		imul   $0x00000c,%ebp,%ebp
		mov    _0c2474_data,%ebx
		mov    (%ebx),%ebx
		mov    _0ddbc8_data(%eax),%ax
		add    %ebx,%ebp
		mov    _0dbfae_data(%edx),%bx
		sub    %ebx,%eax
		mov    %ax,0x000064(%esp)
		mov    0x000062(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000140,%eax
		jle    _06f6c0_jump
		mov    0x00002c(%esp),%eax
		sub    %ax,0x000064(%esp)

	_06f6c0_jump:
		mov    0x000062(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000005(%ebp),%dl
		lea    (%eax,%edx,1),%ebx
		xor    %edx,%edx
		mov    0x000060(%esp),%dx
		cmp    %edx,%ebx
		jle    _06f72c_jump
		xor    %edx,%edx
		mov    0x00005c(%esp),%dx
		mov    0x000028(%esp),%esi
		mov    %edx,(%esp)
		mov    _0ddbca_data(,%edx,8),%dx
		sub    %esi,%edx
		movswl %dx,%ebx
		xor    %dh,%dh
		xor    %ch,%ch
		mov    0x000006(%ebp),%dl
		mov    0x000005(%ebp),%cl
		shl    $0x000008,%edx
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0c2474_data,%edx
		mov    0x000008(%edx),%esi
		add    0x000000(%ebp),%esi
		mov    (%esp),%edx
		shl    $0x000002,%edx
		mov    _0ccfd0_data,%edi
		mov    _0ce580_data(%edx),%edx
		call   _016f5b_func

	_06f72c_jump:
		mov    0x00002c(%esp),%eax
		add    %ax,0x000064(%esp)
		xor    %edx,%edx
		mov    0x000062(%esp),%eax
		mov    0x000078(%esp),%dx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _06f63d_jump
		xor    %ebx,%ebx
		mov    0x00005c(%esp),%bx
		mov    0x000028(%esp),%ecx
		mov    _0ddbca_data(,%ebx,8),%dx
		sub    %ecx,%edx
		movswl %dx,%esi
		xor    %dh,%dh
		xor    %ch,%ch
		mov    0x000006(%ebp),%dl
		mov    0x000005(%ebp),%cl
		shl    $0x000008,%edx
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0ccfd0_data,%edx
		mov    %edx,(%esp)
		mov    _0c2474_data,%edx
		mov    0x000000(%ebp),%ebp
		mov    0x000008(%edx),%edx
		mov    (%esp),%edi
		add    %edx,%ebp
		mov    _0ce580_data(,%ebx,4),%edx
		mov    %esi,%ebx
		mov    %ebp,%esi
		call   _016f5b_func
		jmp    _06f63d_jump

	_06f7a6_jump:
		xor    %edx,%edx
		mov    _0ddc68_data,%bx
		mov    %edx,0x000020(%esp)
		test   %bx,%bx
		jbe    _06fa4a_jump
		mov    0x00007c(%esp),%eax
		sub    %ecx,%eax
		mov    0x000060(%esp),%ebx
		mov    %eax,0x000058(%esp)
		mov    0x000078(%esp),%eax
		sub    %ebx,%eax
		mov    %eax,0x000024(%esp)

	_06f7d4_jump:
		xor    %edi,%edi
		mov    0x000020(%esp),%di
		imul   $0x000018,%edi,%edi
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x00002c(%esp),%ax
		mov    _0dbfae_data(%edi),%dx
		imul   %eax,%edx
		mov    _0dbfb4_data(%edi),%esi
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x000040(%esp),%dx
		imul   %edx,%eax
		add    %eax,%esi
		imul   $0x000140,%edx,%eax
		mov    _0dbfb8_data(%edi),%ebx
		mov    _0dbfae_data(%edi),%cx
		mov    _0dbfa8_data(%edi),%dx
		add    %ebx,%eax
		mov    %dx,0x000018(%esp)
		mov    0x000054(%esp),%edx
		mov    0x000040(%esp),%ebx
		sub    %ecx,%edx
		sub    %ebx,%edx
		mov    %dx,0x000044(%esp)
		mov    _0dbfaa_data(%edi),%dx
		mov    0x000018(%esp),%ecx
		mov    %dx,0x000030(%esp)
		add    %ecx,%edx
		movswl %dx,%ebx
		mov    %ebx,0x000008(%esp)
		xor    %ebx,%ebx
		mov    0x000008(%esp),%ecx
		mov    0x000060(%esp),%bx
		cmp    %ecx,%ebx
		jge    _06f897_jump
		xor    %ecx,%ecx
		mov    0x00002e(%esp),%edi
		mov    0x000078(%esp),%cx
		sar    $0x000010,%edi
		cmp    %ecx,%edi
		jge    _06f897_jump
		mov    0x000016(%esp),%ebp
		sar    $0x000010,%ebp
		test   %ebp,%ebp
		je     _06f897_jump
		cmp    %ebx,%edi
		jge    _06f8b5_jump
		cmp    0x000008(%esp),%ecx
		jge    _06f8b5_jump
		mov    0x000024(%esp),%edx
		sub    %edi,%ebx
		mov    %dx,0x000018(%esp)
		add    %ebx,%esi
		add    %ebx,%eax
		jmp    _06f8f9_jump

	_06f897_jump:
		mov    0x000020(%esp),%edx
		inc    %edx
		mov    _0ddc68_data,%bx
		mov    %edx,0x000020(%esp)
		cmp    %bx,%dx
		jae    _06fa4a_jump
		jmp    _06f7d4_jump

	_06f8b5_jump:
		xor    %ecx,%ecx
		mov    0x00002e(%esp),%ebx
		mov    0x000060(%esp),%cx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jge    _06f8e4_jump
		sub    %ebx,%ecx
		mov    0x000060(%esp),%edx
		add    %ecx,%esi
		add    %ecx,%eax
		mov    0x000030(%esp),%ecx
		mov    0x000018(%esp),%edi
		sub    %ecx,%edx
		sub    %edx,%edi
		mov    %di,0x000018(%esp)
		jmp    _06f8f9_jump

	_06f8e4_jump:
		xor    %ebx,%ebx
		movswl %dx,%ecx
		mov    0x000078(%esp),%bx
		cmp    %ebx,%ecx
		jle    _06f8f9_jump
		sub    %ebx,%edx
		sub    %dx,0x000018(%esp)

	_06f8f9_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x00007c(%esp),%dx
		mov    0x000040(%esp),%bx
		sub    %ebx,%edx
		mov    0x000042(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    %edx,%ebx
		jle    _06f91d_jump
		mov    0x000058(%esp),%edx
		mov    %dx,0x000044(%esp)

	_06f91d_jump:
		mov    0x000042(%esp),%ebp
		sar    $0x000010,%ebp
		test   %ebp,%ebp
		jle    _06f988_jump
		mov    0x000016(%esp),%ecx
		mov    0x000042(%esp),%ebx
		xor    %edx,%edx
		mov    _0cdf08_data,%edi
		mov    0x00002c(%esp),%dx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		add    %eax,%edi
		call   _014fe0_func
		xor    %eax,%eax
		mov    0x000020(%esp),%ax
		imul   $0x000018,%eax,%eax
		imul   $0x000140,%ebp,%ebp
		mov    _0dbfb4_data(%eax),%esi
		mov    _0dbfb8_data(%eax),%edx
		xor    %eax,%eax
		mov    0x000040(%esp),%ax
		imul   $0x000140,%eax,%eax
		mov    0x000044(%esp),%ebx
		add    %edx,%ebp
		mov    0x000058(%esp),%edx
		sub    %ebx,%edx
		mov    %dx,0x000044(%esp)
		add    %ebp,%eax
		jmp    _06f9d8_jump

	_06f988_jump:
		xor    %eax,%eax
		mov    0x000020(%esp),%ax
		imul   $0x000018,%eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000054(%esp),%bx
		mov    _0dbfae_data(%eax),%dx
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    0x000040(%esp),%dx
		mov    %edx,%ecx
		imul   $0x000140,%edx,%edx
		sub    %ebx,%ecx
		xor    %ebx,%ebx
		mov    0x00002c(%esp),%bx
		imul   %ecx,%ebx
		mov    _0dbfb4_data(%eax),%esi
		mov    _0dbfb8_data(%eax),%eax
		add    %edx,%eax
		mov    0x000058(%esp),%edx
		mov    %dx,0x000044(%esp)
		add    %ebx,%esi

	_06f9d8_jump:
		xor    %ebx,%ebx
		mov    0x00002e(%esp),%edx
		mov    0x000060(%esp),%bx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jge    _06f9f0_jump
		sub    %edx,%ebx
		add    %ebx,%esi
		add    %ebx,%eax

	_06f9f0_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00007c(%esp),%bx
		mov    0x000040(%esp),%dx
		sub    %edx,%ebx
		mov    0x000042(%esp),%edx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jle    _06fa14_jump
		mov    0x000058(%esp),%edx
		mov    %dx,0x000044(%esp)

	_06fa14_jump:
		mov    0x000042(%esp),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jle    _06f897_jump
		mov    0x000016(%esp),%ecx
		mov    0x000042(%esp),%ebx
		xor    %edx,%edx
		mov    _0cdf08_data,%edi
		mov    0x00002c(%esp),%dx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		add    %eax,%edi
		call   _014fe0_func
		jmp    _06f897_jump

	_06fa4a_jump:
		mov    $0x000001,%esi
		xor    %ecx,%ecx
		mov    _0ddc6a_data,%di
		mov    %ecx,0x000034(%esp)
		mov    %esi,0x000048(%esp)
		test   %di,%di
		jbe    _06fbd2_jump
		jmp    _06fa8d_jump

	_06fa6b_jump:
		mov    0x000034(%esp),%ecx
		mov    0x000048(%esp),%esi
		mov    _0ddc6a_data,%di
		inc    %ecx
		inc    %esi
		mov    %ecx,0x000034(%esp)
		mov    %esi,0x000048(%esp)
		cmp    %di,%cx
		jae    _06fbd2_jump

	_06fa8d_jump:
		xor    %eax,%eax
		mov    0x000034(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0ddbcc_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		mov    _0dbfa8_data(%edx),%bx
		test   %ebx,%ebx
		je     _06fa6b_jump
		xor    %ebx,%ebx
		mov    0x000048(%esp),%bx
		imul   $0x00000c,%ebx,%ebp
		mov    _0c2474_data,%ebx
		mov    (%ebx),%ebx
		mov    _0ddbca_data(%eax),%ax
		add    %ebx,%ebp
		mov    _0dbfae_data(%edx),%bx
		sub    %ebx,%eax
		mov    %ax,0x00001c(%esp)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x0000c8,%eax
		jle    _06faf0_jump
		mov    0x000054(%esp),%eax
		sub    %ax,0x00001c(%esp)

	_06faf0_jump:
		mov    0x00001a(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000006(%ebp),%al
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    0x000040(%esp),%ax
		cmp    %eax,%edx
		jle    _06fb60_jump
		xor    %ch,%ch
		xor    %eax,%eax
		mov    0x000006(%ebp),%cl
		mov    0x000034(%esp),%ax
		mov    %ecx,%esi
		mov    _0ddbc6_data(,%eax,8),%edx
		shl    $0x000008,%esi
		mov    0x000005(%ebp),%cl
		sar    $0x000010,%edx
		add    %esi,%ecx
		mov    _0ccfd0_data,%esi
		and    $0x00ffff,%ecx
		mov    0x000000(%ebp),%edi
		mov    _0ce580_data(,%eax,4),%eax
		mov    %esi,(%esp)
		mov    _0c2474_data,%esi
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		mov    0x000008(%esi),%esi
		mov    0x000004(%esp),%edx
		add    %edi,%esi
		mov    (%esp),%edi
		call   _016f5b_func

	_06fb60_jump:
		mov    0x000054(%esp),%eax
		add    %ax,0x00001c(%esp)
		xor    %eax,%eax
		mov    0x00001a(%esp),%ebx
		mov    0x00007c(%esp),%ax
		sar    $0x000010,%ebx
		cmp    %eax,%ebx
		jge    _06fa6b_jump
		xor    %dh,%dh
		xor    %eax,%eax
		mov    0x000006(%ebp),%dl
		mov    0x000034(%esp),%ax
		mov    %edx,%esi
		mov    _0ddbc6_data(,%eax,8),%ecx
		shl    $0x000008,%esi
		mov    0x000005(%ebp),%dl
		sar    $0x000010,%ecx
		add    %esi,%edx
		and    $0x00ffff,%edx
		mov    %edx,(%esp)
		mov    _0c2474_data,%edx
		mov    0x000008(%edx),%esi
		mov    0x000000(%ebp),%edx
		mov    _0ccfd0_data,%edi
		add    %edx,%esi
		mov    _0ce580_data(,%eax,4),%edx
		mov    %ecx,%eax
		mov    (%esp),%ecx
		call   _016f5b_func
		jmp    _06fa6b_jump

	_06fbd2_jump:
		add    $0x000068,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_06fbdc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		mov    %eax,0x000014(%esp)
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %ecx,0x000018(%esp)
		mov    _0c24f0_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0ddc6c_data,%dx
		mov    _0977dc_data(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		je     _06fc25_jump
		cmp    $0x000002,%eax
		jne    _06fdbb_jump

	_06fc25_jump:
		mov    0x000014(%esp),%esi
		mov    _0c24f4_data,%dx
		mov    _0c247e_data,%ax
		xor    %edi,%edi
		shr    %si
		add    %edx,%edx
		add    %eax,%eax
		mov    %edi,0x00001c(%esp)
		sub    %eax,%edx
		mov    %esi,0x000014(%esp)
		add    $0x0000c8,%edx
		mov    $0x000001,%eax
		mov    %edx,0x000008(%esp)
		mov    _0ddc6a_data,%dx
		mov    %eax,0x000024(%esp)
		test   %dx,%dx
		jbe    _06ff32_jump
		jmp    _06fc90_jump

	_06fc6e_jump:
		mov    0x00001c(%esp),%ecx
		mov    0x000024(%esp),%esi
		mov    _0ddc6a_data,%di
		inc    %ecx
		inc    %esi
		mov    %ecx,0x00001c(%esp)
		mov    %esi,0x000024(%esp)
		cmp    %di,%cx
		jae    _06ff32_jump

	_06fc90_jump:
		xor    %eax,%eax
		mov    0x00001c(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0ddbcc_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		mov    _0dbfa8_data(%edx),%bx
		test   %ebx,%ebx
		jne    _06fc6e_jump
		mov    0x000024(%esp),%bx
		imul   $0x00000c,%ebx,%ebx
		mov    _0c2474_data,%ebp
		mov    0x000000(%ebp),%ebp
		mov    _0ddbc8_data(%eax),%ax
		add    %ebx,%ebp
		mov    _0dbfae_data(%edx),%bx
		sub    %ebx,%eax
		mov    %ax,0x000020(%esp)
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000140,%eax
		jle    _06fcf2_jump
		mov    0x000014(%esp),%eax
		sub    %ax,0x000020(%esp)

	_06fcf2_jump:
		mov    0x00001e(%esp),%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000005(%ebp),%dl
		mov    0x00000c(%esp),%bx
		add    %eax,%edx
		cmp    %ebx,%edx
		jle    _06fd53_jump
		xor    %edx,%edx
		xor    %ch,%ch
		mov    0x000006(%ebp),%dl
		mov    0x000008(%esp),%ebx
		mov    %dl,%cl
		sub    %edx,%ebx
		xor    %dh,%dh
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0c2474_data,%edx
		mov    0x000008(%edx),%esi
		add    0x000000(%ebp),%esi
		xor    %edx,%edx
		mov    0x00001c(%esp),%dx
		mov    _0ccfd0_data,%edi
		shl    $0x000002,%edx
		movswl %bx,%ebx
		mov    _0ce580_data(%edx),%edx
		call   _016f5b_func

	_06fd53_jump:
		mov    0x000014(%esp),%eax
		add    %ax,0x000020(%esp)
		xor    %edx,%edx
		mov    0x00001e(%esp),%eax
		mov    0x000040(%esp),%dx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _06fc6e_jump
		xor    %edx,%edx
		mov    0x000008(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		xor    %dh,%dh
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0c2474_data,%edx
		mov    0x000008(%edx),%esi
		add    0x000000(%ebp),%esi
		xor    %edx,%edx
		mov    _0ccfd0_data,%edi
		mov    0x00001c(%esp),%dx
		movswl %bx,%ebx
		mov    _0ce580_data(,%edx,4),%edx
		call   _016f5b_func
		jmp    _06fc6e_jump

	_06fdbb_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    _0ddc6a_data,%cx
		mov    %edx,0x000028(%esp)
		mov    %ebx,0x000010(%esp)
		test   %cx,%cx
		jbe    _06ff32_jump
		jmp    _06fdfe_jump

	_06fddc_jump:
		mov    0x000028(%esp),%ebx
		mov    0x000010(%esp),%ecx
		mov    _0ddc6a_data,%si
		inc    %ebx
		inc    %ecx
		mov    %ebx,0x000028(%esp)
		mov    %ecx,0x000010(%esp)
		cmp    %si,%bx
		jae    _06ff32_jump

	_06fdfe_jump:
		xor    %eax,%eax
		mov    0x000028(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0ddbcc_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		mov    _0dbfa8_data(%edx),%bx
		test   %ebx,%ebx
		jne    _06fddc_jump
		mov    0x000010(%esp),%bx
		imul   $0x00000c,%ebx,%ebp
		mov    _0ddbca_data(%eax),%ax
		mov    _0dbfae_data(%edx),%di
		sub    %edi,%eax
		mov    %ax,0x00002c(%esp)
		mov    _0c2474_data,%ebx
		mov    0x00002a(%esp),%eax
		mov    (%ebx),%ebx
		sar    $0x000010,%eax
		add    %ebx,%ebp
		cmp    $0x0000c8,%eax
		jle    _06fe5f_jump
		mov    0x000004(%esp),%eax
		sub    %ax,0x00002c(%esp)

	_06fe5f_jump:
		mov    0x00002a(%esp),%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000006(%ebp),%dl
		mov    0x000018(%esp),%ax
		add    %ebx,%edx
		cmp    %eax,%edx
		jle    _06fec3_jump
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		mov    _0ccfd0_data,%edi
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		xor    %eax,%eax
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000028(%esp),%ax
		mov    %dx,%cx
		mov    _0c2474_data,%edx
		mov    0x000000(%ebp),%esi
		mov    %eax,(%esp)
		mov    0x000008(%edx),%edx
		mov    _0ddbc6_data(,%eax,8),%eax
		add    %edx,%esi
		mov    (%esp),%edx
		sar    $0x000010,%eax
		mov    _0ce580_data(,%edx,4),%edx
		call   _016f5b_func

	_06fec3_jump:
		mov    0x000004(%esp),%eax
		add    %ax,0x00002c(%esp)
		xor    %eax,%eax
		mov    0x00002a(%esp),%ebx
		mov    0x000044(%esp),%ax
		sar    $0x000010,%ebx
		cmp    %eax,%ebx
		jge    _06fddc_jump
		xor    %eax,%eax
		mov    0x000028(%esp),%ax
		mov    _0ddbc6_data(,%eax,8),%edx
		sar    $0x000010,%edx
		mov    %edx,(%esp)
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		mov    _0c2474_data,%esi
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000008(%esi),%esi
		mov    %dx,%cx
		mov    0x000000(%ebp),%edx
		mov    _0ccfd0_data,%edi
		add    %edx,%esi
		mov    _0ce580_data(,%eax,4),%edx
		mov    (%esp),%eax
		call   _016f5b_func
		jmp    _06fddc_jump

	_06ff32_jump:
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_06ff3c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %ax,0x00000c(%esp)
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    _0c24f0_data,%ebx
		sar    $0x000010,%ebx
		dec    %ebx
		lea    0x000000(,%ebx,4),%edx
		xor    %eax,%eax
		add    %ebx,%edx
		mov    _0ddc6c_data,%ax
		add    %edx,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0977dc_data(%eax),%dl
		test   %edx,%edx
		jne    _0701f2_jump
		mov    _0ddc68_data,%bx
		shr    %si
		xor    %ecx,%ecx
		test   %bx,%bx
		jbe    _0701b9_jump
		mov    %esi,%eax
		shl    $0x000004,%eax
		mov    %eax,0x000004(%esp)

	_06ff99_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %edx,%edx
		mov    _0dbfa8_data(%ebx),%dx
		test   %edx,%edx
		jne    _06ffda_jump
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		add    %edx,%edx
		movzwl %si,%ebp
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %dx,_0dbfae_data(%ebx)

	_06ffc8_jump:
		mov    _0ddc68_data,%ax
		inc    %ecx
		cmp    %ax,%cx
		jae    _0701b9_jump
		jmp    _06ff99_jump

	_06ffda_jump:
		xor    %edx,%edx
		mov    _0dbfac_data(%ebx),%dl
		test   %edx,%edx
		jne    _070018_jump
		xor    %eax,%eax
		mov    _0dbfb0_data(%ebx),%al
		movzwl %si,%ebp
		mov    %eax,(%esp)
		imul   %ebp,%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %dx,_0dbfae_data(%ebx)
		jmp    _06ffc8_jump

	_070018_jump:
		cmp    $0x000001,%edx
		je     _070026_jump
		cmp    $0x000004,%edx
		jne    _0700e0_jump

	_070026_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %edx,%edx
		mov    _0dbfbc_data(%ebx),%dx
		movzbl _0dbfb1_data(%ebx),%ebp
		add    %ebp,%edx
		movzwl %si,%ebp
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %dx,_0dbfbc_data(%ebx)
		xor    %edx,%edx
		mov    _0dbfac_data(%ebx),%dl
		cmp    $0x000001,%edx
		jne    _07007f_jump
		xor    %edx,%edx
		mov    _0dbfbc_data(%ebx),%dx
		sar    $0x000004,%edx
		mov    %dx,_0dbfae_data(%ebx)
		jmp    _06ffc8_jump

	_07007f_jump:
		xor    %eax,%eax
		mov    _0dbfb0_data(%ebx),%al
		mov    %eax,(%esp)
		imul   %ebp,%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		movzwl _0dbfbc_data(%ebx),%ebp
		mov    %dx,_0dbfae_data(%ebx)
		xor    %edx,%edx
		sar    $0x000004,%ebp
		mov    _0dbfae_data(%ebx),%dx
		add    %ebp,%edx
		mov    %dx,_0dbfae_data(%ebx)
		mov    _0dbfae_data(%ebx),%ax
		xor    %edx,%edx
		div    %si
		mov    %dx,_0dbfae_data(%ebx)
		jmp    _06ffc8_jump

	_0700e0_jump:
		cmp    $0x000002,%edx
		je     _0700ee_jump
		cmp    $0x000005,%edx
		jne    _06ffc8_jump

	_0700ee_jump:
		xor    %edx,%edx
		mov    %cx,%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		mov    _0dbfb1_data(%edx),%bl
		movzwl _0dbfbc_data(%edx),%ebp
		cmp    %ebp,%ebx
		jle    _070114_jump
		mov    0x000004(%esp),%eax
		add    %ax,_0dbfbc_data(%edx)

	_070114_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %dh,%dh
		mov    _0dbfb1_data(%ebx),%dl
		mov    _0dbfbc_data(%ebx),%ax
		sub    %edx,%eax
		xor    %edx,%edx
		mov    _0dbfac_data(%ebx),%dl
		mov    %ax,_0dbfbc_data(%ebx)
		cmp    $0x000002,%edx
		jne    _070155_jump
		xor    %edx,%edx
		mov    %ax,%dx
		sar    $0x000004,%edx
		mov    %dx,_0dbfae_data(%ebx)
		jmp    _06ffc8_jump

	_070155_jump:
		xor    %eax,%eax
		mov    _0dbfb0_data(%ebx),%al
		movzwl %si,%ebp
		mov    %eax,(%esp)
		imul   %ebp,%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		movzwl _0dbfbc_data(%ebx),%ebp
		mov    %dx,_0dbfae_data(%ebx)
		xor    %edx,%edx
		sar    $0x000004,%ebp
		mov    _0dbfae_data(%ebx),%dx
		add    %ebp,%edx
		mov    %dx,_0dbfae_data(%ebx)
		mov    _0dbfae_data(%ebx),%ax
		xor    %edx,%edx
		div    %si
		mov    %dx,_0dbfae_data(%ebx)
		jmp    _06ffc8_jump

	_0701b9_jump:
		mov    _0c24f0_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _0701ea_jump
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jne    _0701ea_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %di,%dx
		mov    %si,%ax
		call   _0704c8_func

	_0701ea_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0701f2_jump:
		cmp    $0x000001,%edx
		jne    _0701ea_jump
		mov    _0ddc68_data,%dx
		xor    %ecx,%ecx
		test   %dx,%dx
		jbe    _0701ea_jump
		mov    %edi,%eax
		shl    $0x000004,%eax
		mov    %eax,0x000008(%esp)

	_07020e_jump:
		xor    %esi,%esi
		mov    %cx,%si
		imul   $0x000018,%esi,%esi
		xor    %edx,%edx
		mov    _0dbfa8_data(%esi),%dx
		test   %edx,%edx
		jne    _070250_jump
		mov    _0c247c_data,%edx
		sar    $0x000010,%edx
		xor    %ebx,%ebx
		add    %edx,%edx
		mov    %di,%bx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %dx,_0dbfae_data(%esi)

	_070241_jump:
		mov    _0ddc68_data,%si
		inc    %ecx
		cmp    %si,%cx
		jae    _0701ea_jump
		jmp    _07020e_jump

	_070250_jump:
		xor    %ebx,%ebx
		mov    _0dbfac_data(%esi),%bl
		test   %ebx,%ebx
		jne    _07028b_jump
		movzwl %di,%ebp
		mov    _0dbfb0_data(%esi),%bl
		mov    %ebp,%edx
		imul   %ebx,%edx
		mov    _0c247c_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %dx,_0dbfae_data(%esi)
		jmp    _070241_jump

	_07028b_jump:
		cmp    $0x000001,%ebx
		je     _070299_jump
		cmp    $0x000004,%ebx
		jne    _070355_jump

	_070299_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %esi,%esi
		xor    %edx,%edx
		mov    _0dbfbc_data(%ebx),%si
		mov    _0dbfb1_data(%ebx),%dl
		add    %esi,%edx
		xor    %esi,%esi
		mov    %di,%si
		mov    %edx,%eax
		mov    %esi,%ebp
		sar    $0x00001f,%edx
		shl    $0x000004,%ebp
		idiv   %ebp
		mov    %dx,_0dbfbc_data(%ebx)
		xor    %edx,%edx
		mov    _0dbfac_data(%ebx),%dl
		cmp    $0x000001,%edx
		jne    _0702f1_jump
		xor    %edx,%edx
		mov    _0dbfbc_data(%ebx),%dx
		sar    $0x000004,%edx
		mov    %dx,_0dbfae_data(%ebx)
		jmp    _070241_jump

	_0702f1_jump:
		mov    %esi,%eax
		movzbl _0dbfb0_data(%ebx),%ebp
		imul   %ebp,%eax
		mov    _0c247c_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %dx,_0dbfae_data(%ebx)
		xor    %edx,%edx
		mov    _0dbfbc_data(%ebx),%dx
		mov    %edx,%esi
		xor    %edx,%edx
		sar    $0x000004,%esi
		mov    _0dbfae_data(%ebx),%dx
		add    %esi,%edx
		mov    %dx,_0dbfae_data(%ebx)
		mov    _0dbfae_data(%ebx),%ax
		xor    %edx,%edx
		div    %di
		mov    %dx,_0dbfae_data(%ebx)
		jmp    _070241_jump

	_070355_jump:
		cmp    $0x000002,%ebx
		je     _070363_jump
		cmp    $0x000005,%ebx
		jne    _070241_jump

	_070363_jump:
		xor    %edx,%edx
		mov    %cx,%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		movzbl _0dbfb1_data(%edx),%esi
		mov    _0dbfbc_data(%edx),%bx
		cmp    %ebx,%esi
		jle    _07038c_jump
		mov    0x000008(%esp),%eax
		add    %eax,%ebx
		mov    %bx,_0dbfbc_data(%edx)

	_07038c_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %dh,%dh
		mov    _0dbfb1_data(%ebx),%dl
		mov    _0dbfbc_data(%ebx),%si
		sub    %edx,%esi
		xor    %edx,%edx
		mov    _0dbfac_data(%ebx),%dl
		mov    %si,_0dbfbc_data(%ebx)
		cmp    $0x000002,%edx
		jne    _0703cd_jump
		xor    %edx,%edx
		mov    %si,%dx
		sar    $0x000004,%edx
		mov    %dx,_0dbfae_data(%ebx)
		jmp    _070241_jump

	_0703cd_jump:
		movzwl %di,%ebp
		movzbl _0dbfb0_data(%ebx),%esi
		mov    %ebp,%eax
		imul   %esi,%eax
		mov    _0c247c_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %dx,_0dbfae_data(%ebx)
		xor    %edx,%edx
		mov    _0dbfbc_data(%ebx),%dx
		mov    %edx,%esi
		xor    %edx,%edx
		sar    $0x000004,%esi
		mov    _0dbfae_data(%ebx),%dx
		add    %esi,%edx
		mov    %dx,_0dbfae_data(%ebx)
		mov    _0dbfae_data(%ebx),%ax
		xor    %edx,%edx
		div    %di
		mov    %dx,_0dbfae_data(%ebx)
		jmp    _070241_jump



_070434_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %ebx,(%esp)
		mov    %ecx,%edi
		mov    (%esp),%ebp
		mov    %dx,_0ddc68_data
		xor    %ebx,%ebx
		jmp    _0704a6_jump

	_07044f_jump:
		imul   $0x000018,%edx,%eax
		movw   $0x000001,_0dbfa8_data(%eax)
		movb   $0x000002,_0dbfb0_data(%eax)
		xor    %ch,%ch
		mov    %ch,_0dbfb1_data(%eax)
		xor    %cl,%cl
		mov    %ch,_0dbfac_data(%eax)
		mov    %cx,_0dbfae_data(%eax)
		mov    %cx,_0dbfbc_data(%eax)
		xor    %ecx,%ecx
		mov    %si,%cx
		imul   %edx,%ecx
		imul   $0x000140,%edx,%edx
		mov    %bx,_0dbfaa_data(%eax)
		add    %ebp,%ecx
		mov    %ecx,_0dbfb4_data(%eax)
		add    %edi,%edx
		inc    %ebx
		mov    %edx,_0dbfb8_data(%eax)

	_0704a6_jump:
		xor    %eax,%eax
		movswl %bx,%edx
		mov    _0ddc68_data,%ax
		cmp    %eax,%edx
		jl     _07044f_jump
		xor    %esi,%esi
		mov    %si,_0ddc6a_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0704c8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,0x00000c(%esp)
		mov    %edx,(%esp)
		mov    %edx,%eax
		mov    _0c247c_data,%edx
		sub    $0x0000c9,%eax
		sar    $0x000012,%edx
		cmp    %ax,%dx
		jle    _0704ef_jump
		mov    %eax,%edx

	_0704ef_jump:
		call   _071c54_func
		sub    _0c247e_data,%ax
		add    %edx,%eax
		sub    $0x000014,%eax
		mov    %ax,0x000004(%esp)
		cmpb   $0x000000,_0c25e2_data
		jne    _070514_jump
		incb   _0dbfa4_data

	_070514_jump:
		xor    %eax,%eax
		mov    _0dbfa4_data,%al
		cmp    $0x000010,%eax
		jne    _070528_jump
		xor    %dh,%dh
		mov    %dh,_0dbfa4_data

	_070528_jump:
		mov    0x000004(%esp),%esi
		mov    $0x00005a,%ecx
		mov    _0dbfa4_data,%bl
		jmp    _07053a_jump

	_070539_jump:
		inc    %esi

	_07053a_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		movswl %si,%eax
		add    $0x00005a,%edx
		cmp    %edx,%eax
		jge    _0705d6_jump
		xor    %edx,%edx
		mov    (%esp),%dx
		cmp    %edx,%eax
		jge    _0705d6_jump
		dec    %ecx
		movswl %cx,%eax
		cmp    $0x000010,%eax
		jge    _07056b_jump
		mov    $0x000010,%ecx

	_07056b_jump:
		movswl %si,%ebp
		test   %ebp,%ebp
		jle    _0705c0_jump
		xor    %edx,%edx
		mov    %bl,%dl
		mov    _0bd090_data(%edx),%dl
		and    $0x0000ff,%edx
		shl    $0x000004,%edx
		movswl %cx,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		imul   $0x000018,%ebp,%ebp
		xor    %edi,%edi
		mov    %ax,0x000008(%esp)
		mov    0x00000c(%esp),%di
		xor    %eax,%eax
		mov    0x000006(%esp),%edx
		mov    _0dbfae_data(%ebp),%ax
		sar    $0x000010,%edx
		add    %edi,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %dx,_0dbfae_data(%ebp)

	_0705c0_jump:
		inc    %bl
		xor    %eax,%eax
		mov    %bl,%al
		cmp    $0x000010,%eax
		jne    _070539_jump
		xor    %bl,%bl
		jmp    _070539_jump

	_0705d6_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0705e0_func:
		push   %ebx
		push   %ecx
		mov    _0c1388_data(%edx),%bl
		mov    _0c1388_data(%eax),%cl
		mov    %bl,_0c1388_data(%eax)
		mov    %cl,_0c1388_data(%edx)
		pop    %ecx
		pop    %ebx
		ret    



_070600_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x000001,%edx
		mov    _0c1b06_data,%esi
		xor    %ecx,%ecx
		xor    %ah,%ah
		mov    %dx,_0c1372_data
		mov    %ah,_0c1394_data
		sar    $0x000010,%esi
		mov    _0c1b04_data,%edx
		xor    %eax,%eax
		test   %esi,%esi
		jle    _070686_jump
		jmp    _07066c_jump

	_070633_jump:
		cmp    $0x0000f8,%ebx
		jne    _070643_jump
		mov    %ax,_0c1392_data
		jmp    _070661_jump

	_070643_jump:
		cmp    $0x0000ea,%ebx
		jne    _070661_jump
		xor    %ebx,%ebx
		mov    _0c1394_data,%bl
		mov    %al,_0c1398_data(%ebx)
		inc    %bl
		mov    %bl,_0c1394_data

	_070661_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %esi,%eax
		jge    _070686_jump

	_07066c_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x0000bc,%ebx
		jne    _070633_jump
		inc    %ecx
		mov    0x000034(%edx),%bl
		mov    %bl,_0c1387_data(%ecx)
		jmp    _070661_jump

	_070686_jump:
		mov    $0x000001,%edi

	_07068b_jump:
		xor    %esi,%esi
		xor    %ebx,%ebx
		jmp    _070697_jump

	_070691_jump:
		inc    %ebx
		cmp    $0x000007,%ebx
		jge    _0706d2_jump

	_070697_jump:
		xor    %edx,%edx
		mov    _0c1389_data(%ebx),%dl
		imul   $0x000084,%edx,%edx
		mov    _0c1b04_data,%eax
		lea    (%eax,%edx,1),%ecx
		xor    %edx,%edx
		mov    _0c1388_data(%ebx),%dl
		imul   $0x000084,%edx,%edx
		mov    0x000028(%ecx),%ebp
		cmp    0x000028(%edx,%eax,1),%ebp
		jge    _070691_jump
		lea    0x000001(%ebx),%edx
		mov    %ebx,%eax
		mov    %edi,%esi
		call   _0705e0_func
		jmp    _070691_jump

	_0706d2_jump:
		test   %esi,%esi
		jne    _07068b_jump
		cmpb   $0x000000,_0cdae8_data
		jne    _0706e8_jump
		cmpb   $0x000000,_0c6940_data
		je     _0706f1_jump

	_0706e8_jump:
		movb   $0x000008,_0c1390_data
		jmp    _070713_jump

	_0706f1_jump:
		mov    $0x0000b1,%eax
		call   _064360_func
		movswl %ax,%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		shl    $0x000003,%edx
		mov    %dl,_0c1390_data

	_070713_jump:
		xor    %eax,%eax
		mov    _0c1390_data,%al
		mov    _0921ec_data(%eax),%al
		and    $0x0000ff,%eax
		mov    _0c1388_data(%eax),%al
		mov    $0x000020,%ebx
		mov    $0x000138,%ecx
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ax,_0c5192_data
		mov    %ah,_0c1376_data
		mov    %bx,_0c24b6_data
		mov    %cx,_0c25a0_data
		mov    %cx,_0c24f4_data
		mov    %edx,_0ddc78_data
		xor    %eax,%eax
		jmp    _0707be_jump

	_070764_jump:
		xor    %ecx,%ecx
		mov    _0c1398_data(%eax),%cl
		imul   $0x000084,%ecx,%ecx
		mov    _0c24b6_data,%bx
		shl    $0x000004,%ebx
		mov    _0c1b04_data,%edx
		sub    $0x00003c,%ebx
		mov    %bx,0x00003e(%ecx,%edx,1)
		xor    %ebx,%ebx
		mov    _0c1398_data(%eax),%bl
		imul   $0x000084,%ebx,%ebx
		mov    0x00003c(%edx,%ebx,1),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,0x00002c(%edx,%ebx,1)
		xor    %ebx,%ebx
		mov    _0c1398_data(%eax),%bl
		imul   $0x000084,%ebx,%ebx
		mov    0x00003e(%edx,%ebx,1),%dx
		inc    %eax
		mov    %dx,_0ddc74_data

	_0707be_jump:
		xor    %edx,%edx
		mov    _0c1394_data,%dl
		cmp    %edx,%eax
		jl     _070764_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0707d4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %dx,(%esp)
		mov    _0c1b04_data,%ebx
		mov    _0c1b08_data,%si
		xor    %edx,%edx
		xor    %eax,%eax

	_0707f2_jump:
		xor    %ecx,%ecx
		mov    0x000060(%ebx),%cx
		cmp    $0x0000aa,%ecx
		jne    _07080b_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _07080b_jump
		mov    $0x000001,%edx

	_07080b_jump:
		movswl %dx,%ecx
		add    $0x000084,%ebx
		inc    %eax
		test   %ecx,%ecx
		jne    _07081e_jump
		cmp    %si,%ax
		jl     _0707f2_jump

	_07081e_jump:
		sub    $0x000084,%ebx
		test   %dx,%dx
		je     _07087e_jump
		orb    $0x000004,0x000081(%ebx)
		mov    %ebx,%eax
		movl   $0x000001,0x000024(%ebx)
		call   _01f584_func
		movswl %di,%eax
		mov    0x000081(%ebx),%dl
		movw   $0x000000,0x000040(%ebx)
		and    $0x0000bf,%dl
		mov    %eax,0x000028(%ebx)
		mov    -0x000002(%esp),%eax
		mov    %dl,0x000081(%ebx)
		sar    $0x000010,%eax
		mov    $0x000003,%edx
		mov    %eax,0x00002c(%ebx)
		mov    %ebx,%eax
		movw   $0x000000,0x000042(%ebx)
		call   _01d4a0_func
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _01d498_func

	_07087e_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_070888_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%ecx
		call   _072e5c_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _0708cc_jump
		movswl %di,%eax
		add    $0x000040,%eax
		mov    %eax,0x000028(%edx)
		movswl %cx,%eax
		add    $0x000040,%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f584_func
		movb   $0x000001,0x00007e(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000050(%edx)
		call   _01dcec_func

	_0708cc_jump:
		mov    %ecx,%eax
		add    $0x000020,%eax
		movswl %ax,%edx
		mov    %edi,%eax
		add    $0x00008c,%eax
		cwtl   
		call   _073614_func
		mov    $0x0000aa,%eax
		xor    %ebx,%ebx
		call   _01d148_func
		lea    0x000528(%eax),%edx

	_0708f5_jump:
		cmpl   $0x000000,0x000024(%edx)
		jne    _070902_jump
		mov    %edx,%eax
		call   _01f584_func

	_070902_jump:
		mov    0x000081(%edx),%ah
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		movswl %di,%eax
		movb   $0x000003,0x00006d(%edx)
		add    $0x000008,%eax
		mov    %eax,0x000028(%edx)
		movswl %cx,%eax
		mov    %eax,0x00002c(%edx)
		movswl %bx,%eax
		movb   $0x000002,0x00006c(%edx)
		mov    _0bd0a0_data(,%eax,2),%si
		mov    %si,0x000040(%edx)
		add    $0x000084,%edx
		mov    _0bd0b0_data(,%eax,2),%ax
		inc    %ebx
		mov    %ax,-0x000042(%edx)
		movswl %bx,%eax
		movb   $0x000002,-0x000019(%edx)
		cmp    $0x000008,%eax
		jl     _0708f5_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_070964_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpw   $0x000000,_0c1370_data
		je     _070afd_jump
		mov    $0x000003,%ebx
		mov    _0c5190_data,%edx
		mov    _0c1b04_data,%ecx
		sar    $0x000010,%edx
		mov    _0c1370_data,%si
		mov    %edx,%eax
		mov    _0c137e_data,%di
		shl    $0x000005,%eax
		dec    %esi
		add    %edx,%eax
		mov    %si,_0c1370_data
		shl    $0x000002,%eax
		mov    _0c1384_data,%si
		add    %eax,%ecx
		mov    _0c137c_data,%ax
		mov    %bx,_0c137a_data
		sub    %eax,%esi
		mov    _0c1386_data,%bx
		movswl %si,%eax
		sub    %edi,%ebx
		test   %eax,%eax
		jge    _0709d6_jump
		neg    %eax

	_0709d6_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		mov    %edx,%edi
		test   %eax,%eax
		jge    _0709e3_jump
		neg    %eax

	_0709e3_jump:
		add    %eax,%edi
		movswl %di,%eax
		cmp    $0x000008,%eax
		jge    _070a05_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d4a0_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d498_func

	_070a05_jump:
		movswl %di,%ebp
		test   %ebp,%ebp
		jle    _070a34_jump
		mov    _0c137a_data,%cl
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    _0c137a_data,%cl
		mov    %eax,%esi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_070a34_jump:
		xor    %eax,%eax
		mov    _0c249c_data,%al
		test   %eax,%eax
		jne    _070a53_jump
		mov    _0c136e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000032,%eax
		jge    _070a53_jump
		mov    $0x000001,%eax
		jmp    _070a55_jump

	_070a53_jump:
		xor    %eax,%eax

	_070a55_jump:
		test   %ax,%ax
		je     _070aaa_jump
		mov    _0c137e_data,%edx
		movswl %si,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _070a76_jump
		mov    $0x000001,%eax
		jg     _070a76_jump
		neg    %eax

	_070a76_jump:
		mov    _0c1380_data,%dx
		add    %eax,%edx
		mov    _0c1380_data,%eax
		mov    %dx,_0c1380_data
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _070aa3_jump
		mov    $0x000001,%eax
		jg     _070aa3_jump
		neg    %eax

	_070aa3_jump:
		add    %ax,_0c1382_data

	_070aaa_jump:
		mov    _0c1380_data,%ax
		mov    _0c137c_data,%cx
		mov    _0c137e_data,%si
		add    %eax,%ecx
		add    _0c1382_data,%si
		xor    %eax,%eax
		mov    %cx,_0c137c_data
		mov    _0c249b_data,%al
		mov    %si,_0c137e_data
		test   %eax,%eax
		jne    _070afd_jump
		movswl %di,%eax
		test   %eax,%eax
		je     _070afd_jump
		mov    _0c137c_data,%edx
		mov    _0c137a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0707d4_func

	_070afd_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070b04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    _0c1370_data,%dx
		test   %dx,%dx
		je     _070d29_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    _0c1ed2_data,%ah
		mov    %bx,_0c1370_data
		test   %ah,%ah
		je     _070b72_jump
		mov    $0x000003,%eax
		mov    _0c1ec0_data,%edx
		mov    %ax,_0c137a_data
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		add    %ebx,%eax
		sub    $0x000068,%eax
		mov    %ax,_0c1384_data
		xor    %eax,%eax
		mov    0x00002c(%edx),%cx
		mov    0x000074(%edx),%al
		add    %ecx,%eax
		sub    $0x000078,%eax
		mov    %ax,_0c1386_data
		xor    %eax,%eax
		mov    _0c249a_data,%al
		jmp    _070bb6_jump

	_070b72_jump:
		mov    _0c1b84_data,%al
		add    _0c1b44_data,%ax
		sub    $0x000078,%eax
		mov    %ax,_0c1384_data
		xor    %eax,%eax
		mov    _0c1b48_data,%di
		mov    _0c1b85_data,%al
		add    %edi,%eax
		sub    $0x00008c,%eax
		mov    %ax,_0c1386_data
		xor    %eax,%eax
		mov    $0x000003,%ecx
		mov    _0c24a0_data,%al
		mov    %cx,_0c137a_data

	_070bb6_jump:
		test   %eax,%eax
		sete   %al
		xor    %ah,%ah
		mov    %eax,0x000004(%esp)
		mov    _0c1386_data,%bx
		mov    _0c137e_data,%si
		mov    _0c137c_data,%di
		sub    %esi,%ebx
		mov    _0c1384_data,%si
		sub    %edi,%esi
		movswl %si,%eax
		test   %eax,%eax
		jge    _070bea_jump
		neg    %eax

	_070bea_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _070bf5_jump
		neg    %eax

	_070bf5_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		mov    -0x000002(%esp),%edi
		sar    $0x000010,%edi
		test   %edi,%edi
		jle    _070c2e_jump
		mov    _0c137a_data,%cl
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %edi
		mov    _0c137a_data,%cl
		mov    %eax,%esi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx

	_070c2e_jump:
		cmpw   $0x000000,0x000004(%esp)
		je     _070c7d_jump
		mov    _0c137e_data,%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _070c53_jump
		mov    $0x000001,%eax
		jg     _070c53_jump
		neg    %eax

	_070c53_jump:
		add    %ax,_0c1380_data
		mov    _0c1380_data,%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _070c76_jump
		mov    $0x000001,%eax
		jg     _070c76_jump
		neg    %eax

	_070c76_jump:
		add    %ax,_0c1382_data

	_070c7d_jump:
		mov    _0c1380_data,%ax
		mov    _0c137c_data,%cx
		mov    _0c137e_data,%si
		add    %eax,%ecx
		mov    _0c1382_data,%ax
		mov    %cx,_0c137c_data
		add    %eax,%esi
		mov    _0c137a_data,%eax
		sar    $0x000010,%eax
		mov    %si,_0c137e_data
		cmp    $0xffffff6a,%eax
		jge    _070cde_jump
		mov    _0c1380_data,%di
		mov    %ecx,%edx
		neg    %edi
		add    %edi,%edx
		mov    %edx,%ebx
		mov    %dx,_0c137c_data
		add    %edi,%ebx
		mov    %di,_0c1380_data
		mov    %bx,_0c137c_data

	_070cde_jump:
		xor    %eax,%eax
		mov    _0c249b_data,%al
		test   %eax,%eax
		jne    _070d0a_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _070d0a_jump
		mov    _0c137c_data,%edx
		mov    _0c137a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0707d4_func

	_070d0a_jump:
		mov    _0c136e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _070d29_jump
		mov    $0xffff8300,%ecx
		mov    %cx,_0c137c_data
		mov    %cx,_0c137e_data

	_070d29_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070d34_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%ebx
		incb   _0c1390_data
		xor    %eax,%eax
		mov    _0c1390_data,%al
		mov    _0921ec_data(%eax),%al
		and    $0x0000ff,%eax
		xor    %edx,%edx
		mov    _0c1388_data(%eax),%dl
		mov    %dx,_0c5192_data
		xor    %edx,%edx
		mov    _0c1388_data(%eax),%dl
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0c136e_data,%edx
		sar    $0x000010,%edx
		cmp    $0x0000ff,%edx
		je     _070d97_jump
		movw   $0x00003c,_0c1370_data

	_070d97_jump:
		mov    $0x000004,%esi
		xor    %edx,%edx
		mov    0x000028(%eax),%di
		mov    0x000068(%eax),%dl
		sub    $0x000050,%ecx
		add    %edi,%edx
		sub    $0x00000a,%ebx
		sub    $0x000078,%edx
		mov    %cx,_0c137c_data
		mov    %dx,_0c1384_data
		xor    %edx,%edx
		mov    %bx,_0c137e_data
		mov    0x000074(%eax),%dl
		mov    0x00002c(%eax),%ax
		mov    %si,_0c1382_data
		add    %edx,%eax
		mov    $0xfffffffc,%ecx
		sub    $0x000078,%eax
		mov    _0c137c_data,%edx
		mov    %ax,_0c1386_data
		mov    _0c137a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %cx,_0c1380_data
		call   _0707d4_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_070e08_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000000,_0c1ed2_data
		je     _070e1e_jump
		mov    _0c1ec0_data,%eax
		jmp    _070e23_jump

	_070e1e_jump:
		mov    $_0c1b1c_data,%eax

	_070e23_jump:
		sub    $0x000050,%ebx
		sub    $0x00000a,%edx
		mov    %bx,_0c137c_data
		mov    %dx,_0c137e_data
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000068(%eax),%dl
		mov    $0x000078,%ecx
		add    %ebx,%edx
		sub    %ecx,%edx
		mov    $0xfffffffc,%esi
		mov    %dx,_0c1384_data
		xor    %edx,%edx
		mov    $0x000002,%edi
		mov    0x000074(%eax),%dl
		mov    0x00002c(%eax),%ax
		mov    %cx,_0c1370_data
		add    %edx,%eax
		mov    %si,_0c1380_data
		sub    %ecx,%eax
		mov    _0c137c_data,%edx
		mov    %ax,_0c1386_data
		mov    _0c137a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %di,_0c1382_data
		call   _0707d4_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_070ea0_func:
		push   %ebx
		push   %edx
		mov    _0c1390_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0c1b04_data,%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		orb    $0x000004,0x000081(%edx)
		mov    0x000028(%eax),%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%eax),%eax
		movw   $0x00ff80,0x000040(%edx)
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000042(%edx)
		call   _01dcec_func
		mov    %edx,%eax
		call   _01f584_func
		pop    %edx
		pop    %ebx
		ret    



_070ef0_func:
		push   %edx
		mov    $0x000028,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0c1b72_data
		pop    %edx
		ret    



_070f04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0c24f4_data,%di
		mov    _0ddc78_data,%ebp
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _070f59_jump
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _070f3c_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000009,%eax
		je     _070f59_jump

	_070f3c_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000003,%eax
		jne    _070f69_jump
		xor    %eax,%eax
		mov    _0c1b88_data,%al
		cmp    $0x000017,%eax
		je     _070f59_jump
		cmp    $0x000036,%eax
		jne    _070f69_jump

	_070f59_jump:
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ah,_0c1376_data
		mov    %edx,_0c136c_data

	_070f69_jump:
		test   %ebp,%ebp
		je     _070f8c_jump
		xor    %eax,%eax
		mov    _0c249c_data,%al
		dec    %ebp
		cmp    $0x000002,%eax
		jl     _070f84_jump
		addw   $0x000002,_0c247c_data
		jmp    _070f8c_jump

	_070f84_jump:
		subw   $0x000002,_0c247c_data

	_070f8c_jump:
		cmpl   $0x000060,_0c136c_data
		jge    _070fa1_jump
		xor    %eax,%eax
		mov    _0c1376_data,%al
		cmp    $0x000001,%eax
		je     _070fc1_jump

	_070fa1_jump:
		cmpl   $0x0000c4,_0c136c_data
		jge    _07111f_jump
		xor    %eax,%eax
		mov    _0c1376_data,%al
		cmp    $0x000002,%eax
		jne    _07111f_jump

	_070fc1_jump:
		xor    %eax,%eax
		mov    _0c1376_data,%al
		cmp    $0x000001,%eax
		jne    _070fd8_jump
		xor    %eax,%eax
		mov    _0c249a_data,%al
		test   %eax,%eax
		je     _070ff7_jump

	_070fd8_jump:
		xor    %eax,%eax
		mov    _0c1376_data,%al
		cmp    $0x000002,%eax
		jne    _07111f_jump
		xor    %eax,%eax
		mov    _0c249c_data,%al
		test   %eax,%eax
		jne    _07111f_jump

	_070ff7_jump:
		xor    %eax,%eax
		mov    _0c249c_data,%al
		cmp    $0x000002,%eax
		jl     _07100d_jump
		addw   $0x000003,_0c247c_data
		jmp    _071015_jump

	_07100d_jump:
		subw   $0x000003,_0c247c_data

	_071015_jump:
		mov    _0c25a0_data,%ax
		mov    _0c259e_data,%dx
		dec    %edi
		cmp    %dx,%ax
		jle    _071032_jump
		mov    %eax,%ebx
		dec    %ebx
		mov    %bx,_0c25a0_data

	_071032_jump:
		incl   _0c136c_data
		testb  $0x00000f,_0c136c_data
		jne    _071048_jump
		decw   _0c24b6_data

	_071048_jump:
		xor    %edx,%edx
		jmp    _07106e_jump

	_07104c_jump:
		movswl %dx,%eax
		xor    %ebx,%ebx
		mov    _0c1398_data(%eax),%bl
		imul   $0x000084,%ebx,%ebx
		mov    _0c1b04_data,%eax
		mov    0x00002c(%ebx,%eax,1),%ax
		inc    %edx
		mov    %ax,_0ddc74_data

	_07106e_jump:
		xor    %ebx,%ebx
		movswl %dx,%eax
		mov    _0c1394_data,%bl
		cmp    %ebx,%eax
		jge    _07111f_jump
		xor    %ecx,%ecx
		mov    _0c1398_data(%eax),%cl
		imul   $0x000084,%ecx,%ecx
		mov    _0c1b04_data,%ebx
		decl   0x00002c(%ecx,%ebx,1)
		xor    %ecx,%ecx
		mov    _0c1398_data(%eax),%cl
		imul   $0x000084,%ecx,%ecx
		movzbl _0c1376_data,%esi
		decw   0x00003e(%ecx,%ebx,1)
		cmp    $0x000001,%esi
		jne    _0710ea_jump
		xor    %ecx,%ecx
		mov    _0c24a2_data,%cl
		test   %ecx,%ecx
		jne    _0710ea_jump
		mov    _0c1398_data(%eax),%cl
		imul   $0x000084,%ecx,%ecx
		decl   0x00002c(%ecx,%ebx,1)
		mov    _0c1398_data(%eax),%al
		and    $0x0000ff,%eax
		imul   $0x000084,%eax,%eax
		decw   0x00003e(%ebx,%eax,1)

	_0710ea_jump:
		movswl %dx,%eax
		mov    _0c1398_data(%eax),%al
		and    $0x0000ff,%eax
		imul   $0x000084,%eax,%eax
		mov    _0c1b04_data,%ebx
		add    %eax,%ebx
		movswl %di,%eax
		mov    0x00002c(%ebx),%ecx
		add    $0x000078,%eax
		cmp    %ecx,%eax
		jle    _07104c_jump
		mov    %eax,0x00002c(%ebx)
		jmp    _07104c_jump

	_07111f_jump:
		cmpl   $0x000060,_0c136c_data
		jne    _071149_jump
		xor    %eax,%eax
		mov    _0c1376_data,%al
		cmp    $0x000001,%eax
		jne    _071149_jump
		xor    %ebp,%ebp
		xor    %dh,%dh
		mov    %ebp,_0c136c_data
		mov    %dh,_0c1376_data
		mov    $0x00003c,%ebp

	_071149_jump:
		cmpl   $0x0000c4,_0c136c_data
		jne    _071176_jump
		xor    %eax,%eax
		mov    _0c1376_data,%al
		cmp    $0x000002,%eax
		jne    _071176_jump
		mov    $0x00003c,%ebp
		xor    %edx,%edx
		xor    %bl,%bl
		mov    %edx,_0c136c_data
		mov    %bl,_0c1376_data

	_071176_jump:
		mov    %ebp,_0ddc78_data
		mov    %di,_0c24f4_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07118c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0c5190_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x00006c(%eax),%dl
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0c1b04_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		je     _071300_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0711c6_jump:
		mov    0x00006b(%ecx),%al
		cmp    $0x00001b,%eax
		jne    _071316_jump
		mov    _0c25c2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _071316_jump
		mov    $0x000001,%edx
		mov    _0c5194_data,%si
		mov    0x00006c(%ebx),%al
		add    %edx,%esi
		mov    %dx,_0c25c4_data
		mov    %si,_0c5194_data
		cmp    $0x000007,%eax
		jne    _071244_jump
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d4a0_func
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d498_func
		incb   _0c1390_data
		xor    %eax,%eax
		mov    _0c1390_data,%al
		mov    _0921ec_data(%eax),%al
		and    $0x0000ff,%eax
		mov    _0c1388_data(%eax),%al
		xor    %ah,%ah
		mov    %ax,_0c5192_data

	_071244_jump:
		mov    _0c5192_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _07125f_jump
		mov    $0x000001,%ebx
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _058bb4_func

	_07125f_jump:
		mov    _0c5192_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _071316_jump
		mov    $0x000001,%ebx
		mov    _0c5196_data,%dx
		xor    %edi,%edi
		inc    %edx
		mov    %di,_0c5194_data
		mov    %dx,_0c5196_data
		mov    %eax,%edx
		mov    %ecx,%eax
		mov    %di,_0c5198_data
		call   _058bb4_func
		decb   _0c1390_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0712a9_jump:
		mov    _0c1372_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jne    _0712d4_jump
		mov    $0x000008,%edx
		mov    %ecx,%eax
		mov    $0x000008,%ecx
		call   _01d498_func
		mov    %cx,_0c1374_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0712d4_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d498_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		movw   $0x000004,_0c1374_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071300_jump:
		cmp    $0x000002,%dx
		jb     _071316_jump
		cmp    $0x000003,%dx
		jbe    _0712a9_jump
		cmp    $0x000004,%dx
		je     _0711c6_jump

	_071316_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07131c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%dl
		mov    0x00006c(%ecx),%al
		test   %edx,%edx
		je     _0713e4_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07133b_jump:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x00001b,%eax
		jne    _0713f0_jump
		mov    _0c25c2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _0713f0_jump
		mov    $0x000001,%edx
		mov    _0c5194_data,%bx
		mov    _0c1b89_data,%al
		add    %edx,%ebx
		mov    %dx,_0c25c4_data
		mov    %bx,_0c5194_data
		cmp    $0x000005,%eax
		jne    _07139d_jump
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d4a0_func
		mov    $0x000002,%edx
		mov    $_0c1b1c_data,%eax
		call   _01d498_func

	_07139d_jump:
		mov    _0c5192_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _0713f0_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    _0c5196_data,%di
		mov    %ecx,%eax
		xor    %esi,%esi
		inc    %edi
		mov    %si,_0c1370_data
		mov    %di,_0c5196_data
		call   _058bb4_func
		mov    %si,_0c5194_data
		movb   $0x000000,0x00006b(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0713e4_jump:
		cmp    $0x000004,%ax
		jb     _0713f0_jump
		jbe    _07133b_jump

	_0713f0_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0713f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006d(%eax),%bl
		mov    0x00006c(%eax),%dl
		call   _070964_func
		movswl %bx,%eax
		test   %eax,%eax
		je     _071506_jump
		cmp    $0x000001,%eax
		jne    _071439_jump
		movswl %dx,%eax
		cmp    $0x00000f,%eax
		jne    _071439_jump
		mov    _0c5198_data,%dx
		cmp    0x000048(%ecx),%dx
		jne    _071439_jump
		movw   $0x000000,0x000048(%ecx)

	_071439_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07143f_jump:
		xor    %edx,%edx
		mov    0x00006b(%ecx),%dl
		cmp    $0x00001b,%edx
		jne    _071439_jump
		mov    $0x000001,%dl
		mov    %ax,_0c5194_data
		mov    %dl,_0c1376_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07145d_jump:
		xor    %edx,%edx
		mov    0x00006b(%ecx),%dl
		cmp    $0x00001b,%edx
		jne    _071439_jump
		mov    $0x000001,%edi
		mov    %ax,_0c5194_data
		mov    %di,_0c25c4_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07147f_jump:
		mov    _0c5194_data,%dx
		mov    %edx,%eax
		inc    %eax
		test   %dx,%dx
		jbe    _07143f_jump
		cmp    $0x000001,%dx
		je     _07145d_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07149a_jump:
		mov    0x00006b(%ecx),%al
		cmp    $0x000009,%eax
		jne    _071439_jump
		mov    _0c136e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _071439_jump
		mov    0x00002a(%ecx),%edx
		mov    0x000026(%ecx),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _070d34_func
		incw   _0c5194_data
		mov    _0c5192_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _071439_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		mov    _0c5196_data,%si
		xor    %ecx,%ecx
		inc    %esi
		mov    %cx,_0c5194_data
		mov    %si,_0c5196_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071506_jump:
		cmp    $0x000004,%dx
		jb     _07151e_jump
		jbe    _07147f_jump
		cmp    $0x000007,%dx
		je     _07149a_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07151e_jump:
		cmp    $0x000002,%dx
		jb     _071439_jump
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d498_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07153c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006d(%eax),%bl
		mov    0x00006c(%eax),%dl
		call   _070964_func
		movswl %bx,%eax
		test   %eax,%eax
		je     _0715e0_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07155f_jump:
		xor    %edx,%edx
		mov    0x00006b(%ecx),%dl
		cmp    $0x00001b,%edx
		jne    _0715fd_jump
		mov    _0c5192_data,%edx
		sar    $0x000010,%edx
		cmp    $0x000001,%edx
		jne    _0715fd_jump
		mov    $0x000002,%dl
		mov    %ax,_0c5194_data
		mov    %dl,_0c1376_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071591_jump:
		mov    _0c5192_data,%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _0715b9_jump
		mov    $0x000001,%ebx
		mov    $0x00000b,%edx
		mov    %ax,_0c5194_data
		mov    %ecx,%eax
		call   _058bb4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0715b9_jump:
		cmp    $0x000002,%edx
		jne    _0715fd_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d4a0_func
		mov    $0x00000f,%edx
		mov    %ecx,%eax
		call   _01d498_func
		movw   $0x000003,0x000040(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0715e0_jump:
		cmp    $0x000002,%dx
		jb     _0715fd_jump
		mov    _0c5194_data,%ax
		inc    %eax
		cmp    $0x000002,%dx
		jbe    _071591_jump
		cmp    $0x000004,%dx
		je     _07155f_jump

	_0715fd_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071604_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _0716d9_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000008,%eax
		jne    _071654_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000041,%eax
		jne    _0716d9_jump
		mov    %ecx,%eax
		mov    $0x000009,%edx
		call   _070ea0_func
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d498_func
		mov    $0x000009,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071654_jump:
		cmp    $0x000009,%eax
		jne    _071695_jump
		mov    _0c1390_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		addw   $0x000002,0x000040(%edx,%eax,1)
		mov    0x00003e(%edx,%eax,1),%eax
		sar    $0x000010,%eax
		neg    %eax
		cmp    $0xffffff92,%eax
		jne    _0716d9_jump
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d498_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071695_jump:
		cmp    $0x00000a,%eax
		jne    _0716d9_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000007,%eax
		jne    _0716d9_jump
		mov    _0c1390_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0c1b04_data,%eax
		movl   $0xffff8300,0x000028(%eax,%ecx,4)
		mov    0x000081(%eax,%ecx,4),%dl
		movl   $0xffff8300,0x00002c(%eax,%ecx,4)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax,%ecx,4)

	_0716d9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0716e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    $0x000010,%ecx
		mov    $0xffffffff,%eax
		mov    _0c137c_data,%di
		mov    _0c137e_data,%bx
		xor    %edx,%edx
		add    $0x000078,%edi
		add    $0x000078,%ebx
		mov    0x00006d(%esi),%dl
		mov    %cx,(%esp)
		test   %edx,%edx
		jne    _07171d_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x00000b,%edx
		je     _07174a_jump

	_07171d_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		test   %edx,%edx
		jne    _07172e_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x00000c,%edx
		je     _07174a_jump

	_07172e_jump:
		mov    -0x000002(%esp),%eax
		push   %esi
		movswl %cx,%ecx
		sar    $0x000010,%eax
		movswl %bx,%ebx
		push   %eax
		movswl %di,%edx
		mov    $0x000096,%eax
		call   _02bd7c_func

	_07174a_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		je     _0717ce_jump
		mov    $0x00000b,%edx
		mov    %esi,%eax
		call   _01d498_func
		mov    _0c137c_data,%edx
		mov    _0c137a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    $0xffff8300,%ebx
		call   _070888_func
		mov    0x000076(%esi),%ah
		xor    %edi,%edi
		dec    %ah
		mov    %bx,_0c137c_data
		mov    %ah,0x000076(%esi)
		xor    %eax,%eax
		mov    %bx,_0c137e_data
		mov    0x000076(%esi),%al
		mov    %di,_0c1370_data
		cmp    $0x000001,%eax
		jne    _0717b2_jump
		mov    $0x00000d,%edx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _058bb4_func

	_0717b2_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		test   %eax,%eax
		jne    _0717ce_jump
		mov    $0x00000c,%edx
		mov    %esi,%eax
		call   _01d498_func
		movb   $0x000001,_0c2571_data

	_0717ce_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0717d8_func:
		push   %edx
		orb    $0x000040,_0c32ec_data
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _07180c_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x00000c,%edx
		jne    _07180c_jump
		xor    %edx,%edx
		mov    0x00006b(%eax),%dl
		cmp    $0x00007f,%edx
		jl     _07180c_jump
		mov    $0x000001,%dh
		movb   $0x000081,0x00006b(%eax)
		mov    %dh,_0c2570_data
		call   _059b3c_func

	_07180c_jump:
		pop    %edx
		ret    

_071810_switch:
		.long   _071914_case
		.long   _071924_case
		.long   _071934_case
		.long   _071944_case




_071820_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		movzbw 0x00006c(%ecx),%di
		test   %eax,%eax
		jne    _071896_jump
		movswl %di,%eax
		cmp    $0x000001,%eax
		jne    _071896_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jne    _071862_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000ac,%eax
		sar    $0x000010,%edx
		call   _06ac04_func

	_071862_jump:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000032,%eax
		jne    _07187c_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000ad,%eax
		sar    $0x000010,%edx
		call   _06ac04_func

	_07187c_jump:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000064,%eax
		jne    _071896_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000b1,%eax
		sar    $0x000010,%edx
		call   _06ac04_func

	_071896_jump:
		mov    _0c24ee_data,%edx
		sar    $0x000010,%edx
		cmp    $0x00000a,%edx
		jne    _071954_jump
		mov    %ecx,%eax
		call   _02f010_func
		cmpw   $0x000000,_0c1372_data
		jne    _0718be_jump
		call   _070600_func

	_0718be_jump:
		mov    %ecx,%eax
		call   _071604_func
		call   _070f04_func
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		mov    _0c1b44_data,%ebx
		add    %edx,%eax
		cmp    %ebx,%eax
		jge    _0718f7_jump
		mov    _0c257e_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		je     _0718f7_jump
		mov    $0x000001,%eax
		mov    %ecx,%edx
		call   _02d3ac_func

	_0718f7_jump:
		mov    _0c5196_data,%ax
		cmp    $0x000003,%ax
		ja     _071acc_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_071810_switch(,%eax,4)

	_071914_case:
		mov    %ecx,%eax
		call   _07118c_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071924_case:
		mov    %ecx,%eax
		call   _07131c_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071934_case:
		mov    %ecx,%eax
		call   _0713f8_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071944_case:
		mov    %ecx,%eax
		call   _07153c_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071954_jump:
		cmp    $0x00000b,%edx
		jne    _071acc_jump
		cmpw   $0x000000,_0c1372_data
		jne    _0719ec_jump
		mov    $0x000001,%ah
		mov    _0c1b04_data,%edx
		mov    %ah,_0c25b1_data
		mov    0x000077(%ecx),%al
		mov    _0c1b08_data,%si
		mov    %al,0x000076(%ecx)
		xor    %eax,%eax
		test   %si,%si
		jg     _07199b_jump
		jmp    _0719af_jump

	_07198f_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %si,%ax
		jge    _0719af_jump

	_07199b_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x0000f8,%ebx
		jne    _07198f_jump
		mov    %ax,_0c1392_data

	_0719af_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a0_func
		mov    $0x000005,%edx
		mov    %ecx,%eax
		mov    $0x000001,%esi
		call   _01d498_func
		mov    $0x000004,%eax
		mov    %si,_0c1372_data
		mov    %ax,_0c5196_data

	_0719ec_jump:
		mov    %ecx,%eax
		call   _02f010_func
		call   _070b04_func
		mov    %ecx,%eax
		call   _071604_func
		mov    %ecx,%eax
		call   _0716e0_func
		mov    %ecx,%eax
		call   _0717d8_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		je     _071ab6_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071a25_jump:
		mov    0x00006b(%ecx),%al
		cmp    $0x000009,%eax
		jne    _071acc_jump
		mov    _0c136e_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _071acc_jump
		mov    $0x0000ff,%edx
		mov    0x000026(%ecx),%eax
		mov    %dx,_0c1370_data
		mov    0x00002a(%ecx),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		call   _070e08_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071a67_jump:
		mov    _0c1372_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _071a95_jump
		mov    $0x000008,%edx
		mov    %ecx,%eax
		mov    $0x000008,%ecx
		call   _01d498_func
		mov    %cx,_0c1374_data
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071a95_jump:
		mov    $0x000005,%edx
		mov    %ecx,%eax
		mov    $0x000005,%ebx
		call   _01d498_func
		mov    %bx,_0c1374_data
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071ab6_jump:
		cmp    $0x000002,%di
		jb     _071acc_jump
		cmp    $0x000003,%di
		jbe    _071a67_jump
		cmp    $0x000007,%di
		je     _071a25_jump

	_071acc_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071ad8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		xor    %eax,%eax
		mov    _0c5196_data,%dx
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%dx
		jae    _071af9_jump
		test   %dx,%dx
		je     _071afd_jump

	_071af9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071afd_jump:
		movswl %bx,%edx
		test   %edx,%edx
		je     _071b53_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071b08_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d498_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		xor    %edx,%edx
		mov    %dx,_0c5194_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071b32_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d498_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071b53_jump:
		test   %ax,%ax
		jbe    _071b08_jump
		cmp    $0x000002,%ax
		jb     _071af9_jump
		cmp    $0x000003,%ax
		jbe    _071b32_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071b68_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		xor    %eax,%eax
		mov    _0c5196_data,%dx
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%dx
		jb     _071c46_jump
		jbe    _071c19_jump
		pop    %ecx
		pop    %ebx
		ret    

	_071b90_jump:
		movswl %bx,%edx
		test   %edx,%edx
		je     _071c00_jump
		pop    %ecx
		pop    %ebx
		ret    

	_071b9a_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d498_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		movb   $0x000000,0x000073(%ecx)
		xor    %ebx,%ebx
		movb   $0x000051,0x00006b(%ecx)
		mov    %bx,_0c5194_data
		pop    %ecx
		pop    %ebx
		ret    

	_071bcb_jump:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000051,%eax
		jge    _071c4f_jump
		movb   $0x000051,0x00006b(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_071be0_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d498_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		pop    %ecx
		pop    %ebx
		ret    

	_071c00_jump:
		cmp    $0x000001,%ax
		jb     _071c11_jump
		jbe    _071bcb_jump
		cmp    $0x000003,%ax
		jbe    _071be0_jump
		pop    %ecx
		pop    %ebx
		ret    

	_071c11_jump:
		test   %ax,%ax
		je     _071b9a_jump
		pop    %ecx
		pop    %ebx
		ret    

	_071c19_jump:
		movswl %bx,%edx
		test   %edx,%edx
		je     _071c2c_jump
		pop    %ecx
		pop    %ebx
		ret    

	_071c23_jump:
		movw   $0x000000,0x000048(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_071c2c_jump:
		addl   $0x000002,0x000028(%ecx)
		incw   _0c5198_data
		cmp    $0x000002,%ax
		jb     _071c4f_jump
		cmp    $0x000003,%ax
		jbe    _071c23_jump
		pop    %ecx
		pop    %ebx
		ret    

	_071c46_jump:
		test   %dx,%dx
		je     _071b90_jump

	_071c4f_jump:
		pop    %ecx
		pop    %ebx
		ret    



_071c54_func:
		mov    _0ddc74_data,%ax
		ret    



_071c60_func:
		push   %edx
		mov    _0c1b44_data,%ax
		mov    %ax,_0c248a_data
		mov    _0c1b48_data,%ax
		mov    %ax,_0c248c_data
		mov    _0c247c_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0c2484_data
		mov    _0c247e_data,%ax
		mov    %dx,_0c2488_data
		mov    %ax,_0c2486_data
		pop    %edx
		ret    

_071ca0_switch:
		.long   _071e0c_case
		.long   _071ec4_case
		.long   _071f52_case
		.long   _071fc5_case
		.long   _07201d_case
		.long   _07204c_case

_071cb8_switch:
		.long   _072256_case
		.long   _0725c1_case
		.long   _072274_case
		.long   _0725c1_case
		.long   _0725c1_case
		.long   _07229e_case
		.long   _0725c1_case
		.long   _0722bc_case
		.long   _0725c1_case
		.long   _0722f4_case
		.long   _0725c1_case
		.long   _0725c1_case
		.long   _0721ac_case
		.long   _0721b6_case
		.long   _07231e_case

_071cf4_switch:
		.long   _07234d_case
		.long   _0725c1_case
		.long   _072370_case
		.long   _07238e_case
		.long   _0725c1_case
		.long   _0725c1_case
		.long   _0725c1_case
		.long   _0723b8_case
		.long   _0725c1_case
		.long   _0723d6_case
		.long   _0721b6_case
		.long   _07231e_case

_071d24_switch:
		.long   _072419_case
		.long   _072437_case
		.long   _0725c1_case
		.long   _0725c1_case
		.long   _07245a_case
		.long   _0725c1_case
		.long   _07247d_case
		.long   _0725c1_case
		.long   _07249b_case
		.long   _0724cc_case
		.long   _07231e_case

_071d50_switch:
		.long   _072502_case
		.long   _0725c1_case
		.long   _0725c1_case
		.long   _0725c1_case
		.long   _0725c1_case
		.long   _0725c1_case
		.long   _07254a_case
		.long   _0725c1_case
		.long   _0725c1_case
		.long   _07256d_case
		.long   _0721c5_case

_071d7c_switch:
		.long   _0721d4_case
		.long   _07232d_case
		.long   _0723f9_case
		.long   _0724db_case
		.long   _07257c_case
		.long   _0725b5_case




_071d94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    _0c25f0_data,%bx
		mov    _0c24ee_data,%cx
		mov    %eax,%esi
		mov    _0c2486_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		test   %eax,%eax
		je     _071dd2_jump
		call   _071c60_func
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000005,%eax
		jne    _07207b_jump

	_071dd2_jump:
		mov    _0c24f2_data,%di
		mov    _0c24ee_data,%cx
		dec    %edi
		mov    _0c25f0_data,%bx
		cmp    $0x000005,%di
		ja     _0725c1_case
		xor    %eax,%eax
		mov    %di,%ax
		lea    0x000000(,%eax,4),%edi
		mov    _094be0_data,%al
		or     $0x000004,%al
		jmp    *%cs:_071d7c_switch(%edi)

	_071e0c_case:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		jne    _071e23_jump
		testb  $0x000001,_0c32e4_data
		je     _071e23_jump
		inc    %ebx

	_071e23_jump:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _071e3a_jump
		testb  $0x000001,_0c32ec_data
		je     _071e3a_jump
		inc    %ebx

	_071e3a_jump:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000007,%eax
		jne    _071e55_jump
		testb  $0x000002,_0c32e4_data
		je     _071e55_jump
		mov    $0x000001,%ecx

	_071e55_jump:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000d,%eax
		jne    _071e6c_jump
		testb  $0x000002,_0c32ec_data
		je     _071e6c_jump
		inc    %ebx

	_071e6c_jump:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000f,%eax
		jne    _071e87_jump
		testb  $0x000002,_0c32ec_data
		je     _071e87_jump
		mov    $0x000001,%ecx

	_071e87_jump:
		mov    _0c24ee_data,%eax
		mov    %bx,_0c25f0_data
		sar    $0x000010,%eax
		mov    %cx,_0c24ee_data
		cmp    $0x000010,%eax
		jne    _071dd2_jump
		testb  $0x000080,_0c32e4_data
		je     _071dd2_jump
		mov    $0x000001,%ecx
		mov    %cx,_0c24ee_data
		jmp    _071dd2_jump

	_071ec4_case:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jne    _071edf_jump
		testb  $0x000001,_0c32ed_data
		je     _071edf_jump
		mov    $0x000001,%ecx

	_071edf_jump:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jne    _071efa_jump
		testb  $0x000004,_0c32ec_data
		je     _071efa_jump
		mov    $0x000001,%ecx

	_071efa_jump:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x00000a,%eax
		jne    _071f15_jump
		testb  $0x000004,_0c32e4_data
		je     _071f15_jump
		mov    $0x000001,%ecx

	_071f15_jump:
		mov    _0c24ee_data,%eax
		mov    %bx,_0c25f0_data
		sar    $0x000010,%eax
		mov    %cx,_0c24ee_data
		cmp    $0x00000e,%eax
		jne    _071dd2_jump
		testb  $0x000004,_0c32ec_data
		je     _071dd2_jump
		mov    $0x000001,%ecx
		mov    %cx,_0c24ee_data
		jmp    _071dd2_jump

	_071f52_case:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000001,%eax
		jne    _071f6d_jump
		testb  $0x000008,_0c32ec_data
		je     _071f6d_jump
		mov    $0x000001,%ecx

	_071f6d_jump:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jne    _071f88_jump
		testb  $0x000008,_0c32ec_data
		je     _071f88_jump
		mov    $0x000001,%ecx

	_071f88_jump:
		mov    _0c24ee_data,%eax
		mov    %bx,_0c25f0_data
		sar    $0x000010,%eax
		mov    %cx,_0c24ee_data
		cmp    $0x00000a,%eax
		jne    _071dd2_jump
		testb  $0x000001,_0c32e5_data
		je     _071dd2_jump
		mov    $0x000001,%ecx
		mov    %cx,_0c24ee_data
		jmp    _071dd2_jump

	_071fc5_case:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _071fe0_jump
		testb  $0x000010,_0c32ec_data
		je     _071fe0_jump
		mov    $0x000001,%ecx

	_071fe0_jump:
		mov    _0c24ee_data,%eax
		mov    %bx,_0c25f0_data
		sar    $0x000010,%eax
		mov    %cx,_0c24ee_data
		cmp    $0x00000a,%eax
		jne    _071dd2_jump
		testb  $0x000020,_0c32ec_data
		je     _071dd2_jump
		mov    $0x000001,%ecx
		mov    %cx,_0c24ee_data
		jmp    _071dd2_jump

	_07201d_case:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000009,%eax
		jne    _071dd2_jump
		testb  $0x000040,_0c32ec_data
		je     _071dd2_jump
		mov    $0x000001,%ecx
		mov    %cx,_0c24ee_data
		jmp    _071dd2_jump

	_07204c_case:
		mov    _0c24ee_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000003,%eax
		jne    _071dd2_jump
		testb  $0x000080,_0c32ec_data
		je     _071dd2_jump
		mov    $0x000001,%ecx
		mov    %cx,_0c24ee_data
		jmp    _071dd2_jump

	_07207b_jump:
		mov    _0c24f2_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _071dd2_jump
		mov    _0c24ee_data,%cx
		mov    _0c25f0_data,%bx
		and    $0x00ffff,%eax
		jmp    *%cs:_071ca0_switch(,%eax,4)

	_0720a7_jump:
		mov    0x000060(%esi),%si
		and    $0x00ffff,%esi
		cmp    $0x000005,%esi
		jne    _0725c1_case
		mov    $0x000015,%ebx
		mov    $0x000001,%edx
		jmp    _0725c1_case

	_0720c9_jump:
		mov    0x000060(%esi),%si
		and    $0x00ffff,%esi
		cmp    $0x000005,%esi
		jne    _0720e7_jump
		mov    $0x000014,%ebx
		mov    $0x000001,%edx
		jmp    _0725c1_case

	_0720e7_jump:
		mov    _094a3c_data,%al
		and    $0x000001,%al
		movzbl %al,%esi
		mov    $0x000001,%ecx
		test   %esi,%esi
		jne    _0725c1_case
		orb    $0x000004,_094a3c_data
		orb    $0x000004,_094b90_data
		jmp    _0725c1_case

	_072111_jump:
		mov    _094a50_data,%al
		and    $0x000001,%al
		movzbl %al,%esi
		mov    $0x000001,%ecx
		test   %esi,%esi
		jne    _07212b_jump
		orb    $0x000004,_094a50_data

	_07212b_jump:
		mov    _094a78_data,%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _0725c1_case
		orb    $0x000004,_094a78_data
		jmp    _0725c1_case

	_072149_jump:
		mov    0x000060(%esi),%si
		and    $0x00ffff,%esi
		cmp    $0x000005,%esi
		jne    _072167_jump
		mov    $0x000012,%ebx
		mov    $0x000001,%edx
		jmp    _0725c1_case

	_072167_jump:
		mov    _094a64_data,%al
		and    $0x000001,%al
		movzbl %al,%esi
		mov    $0x000001,%ecx
		test   %esi,%esi
		jne    _0725c1_case
		orb    $0x000004,_094a64_data
		jmp    _0725c1_case

	_07218a_jump:
		mov    0x000060(%esi),%si
		and    $0x00ffff,%esi
		cmp    $0x000005,%esi
		jne    _0725c1_case
		mov    $0x000013,%ebx
		mov    $0x000001,%edx
		jmp    _0725c1_case

	_0721ac_case:
		mov    $0x000001,%ecx
		jmp    _0725c1_case

	_0721b6_case:
		mov    $0x000004,%ebx
		mov    $0x000001,%edx
		jmp    _0725c1_case

	_0721c5_case:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		jmp    _0725c1_case

	_0721d4_case:
		mov    _0c24f0_data,%ax
		mov    %eax,%edi
		cmp    $0x00000c,%ax
		jb     _07221c_jump
		jbe    _07218a_jump
		cmp    $0x000013,%ax
		jb     _072201_jump
		jbe    _072511_jump
		cmp    $0x000014,%ax
		jbe    _0721b6_case
		cmp    $0x000015,%ax
		je     _0721c5_case
		jmp    _0725c1_case

	_072201_jump:
		cmp    $0x000011,%ax
		jb     _0725c1_case
		jbe    _0721ac_case
		mov    $0x00000b,%ebx
		mov    $0x000001,%edx
		jmp    _0725c1_case

	_07221c_jump:
		cmp    $0x000004,%ax
		jb     _072247_jump
		jbe    _0720c9_jump
		cmp    $0x000008,%ax
		jb     _0725c1_case
		jbe    _072111_jump
		cmp    $0x00000b,%ax
		je     _072149_jump
		jmp    _0725c1_case

	_072247_jump:
		cmp    $0x000002,%ax
		je     _0720a7_jump
		jmp    _0725c1_case

	_072256_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000005,%eax
		jne    _0725c1_case
		mov    $0x000011,%ebx
		mov    $0x000001,%edx
		jmp    _0725c1_case

	_072274_case:
		mov    _094a8c_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _0725c1_case
		orb    $0x000004,_094a8c_data
		orb    $0x000004,_094ba4_data
		jmp    _0725c1_case

	_07229e_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000005,%eax
		jne    _0725c1_case
		mov    $0x000012,%ebx
		mov    $0x000001,%edx
		jmp    _0725c1_case

	_0722bc_case:
		mov    _094aa0_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _0722d6_jump
		orb    $0x000004,_094aa0_data

	_0722d6_jump:
		mov    _094ac8_data,%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _0725c1_case
		orb    $0x000004,_094ac8_data
		jmp    _0725c1_case

	_0722f4_case:
		mov    _094ab4_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _0725c1_case
		orb    $0x000004,_094ab4_data
		orb    $0x000004,_094bb8_data
		jmp    _0725c1_case

	_07231e_case:
		mov    $0x000009,%ebx
		mov    $0x000001,%edx
		jmp    _0725c1_case

	_07232d_case:
		mov    _0c24f0_data,%ax
		sub    $0x000004,%eax
		cmp    $0x00000e,%ax
		ja     _0725c1_case
		and    $0x00ffff,%eax
		jmp    *%cs:_071cb8_switch(,%eax,4)

	_07234d_case:
		mov    _094adc_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _0725c1_case
		orb    $0x000004,_094adc_data
		jmp    _0725c1_case

	_072370_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000005,%eax
		jne    _0725c1_case
		mov    $0x00000c,%ebx
		mov    $0x000001,%edx
		jmp    _0725c1_case

	_07238e_case:
		mov    _094af0_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _0725c1_case
		orb    $0x000004,_094af0_data
		orb    $0x000004,_094bcc_data
		jmp    _0725c1_case

	_0723b8_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000005,%eax
		jne    _0725c1_case
		mov    $0x00000d,%ebx
		mov    $0x000001,%edx
		jmp    _0725c1_case

	_0723d6_case:
		mov    _094b04_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _0725c1_case
		orb    $0x000004,_094b04_data
		jmp    _0725c1_case

	_0723f9_case:
		mov    _0c24f0_data,%ax
		sub    $0x000002,%eax
		cmp    $0x00000b,%ax
		ja     _0725c1_case
		and    $0x00ffff,%eax
		jmp    *%cs:_071cf4_switch(,%eax,4)

	_072419_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000005,%eax
		jne    _0725c1_case
		mov    $0x00000c,%ebx
		mov    $0x000001,%edx
		jmp    _0725c1_case

	_072437_case:
		mov    _094b18_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _0725c1_case
		orb    $0x000004,_094b18_data
		jmp    _0725c1_case

	_07245a_case:
		mov    _094b2c_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _0725c1_case
		orb    $0x000004,_094b2c_data
		jmp    _0725c1_case

	_07247d_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x000005,%eax
		jne    _0725c1_case
		mov    $0x00000d,%ebx
		mov    $0x000001,%edx
		jmp    _0725c1_case

	_07249b_case:
		mov    _094b40_data,%ah
		and    $0x000001,%ah
		mov    $0x000001,%ecx
		movzbl %ah,%esi
		test   %esi,%esi
		jne    _0725c1_case
		movb   $0x000001,_0cd0df_data
		orb    $0x000004,_094b40_data
		mov    %al,_094be0_data
		jmp    _0725c1_case

	_0724cc_case:
		mov    $0x000003,%ebx
		mov    $0x000001,%edx
		jmp    _0725c1_case

	_0724db_case:
		mov    _0c24f0_data,%di
		sub    $0x000003,%edi
		mov    %edi,0x000004(%esp)
		cmp    $0x00000a,%di
		ja     _0725c1_case
		xor    %edi,%edi
		mov    0x000004(%esp),%di
		jmp    *%cs:_071d24_switch(,%edi,4)

	_072502_case:
		mov    0x000060(%esi),%si
		and    $0x00ffff,%esi
		cmp    $0x000005,%esi
		jne    _072520_jump

	_072511_jump:
		mov    $0x00000c,%ebx
		mov    $0x000001,%edx
		jmp    _0725c1_case

	_072520_jump:
		mov    _094b54_data,%ah
		and    $0x000001,%ah
		mov    $0x000001,%ecx
		movzbl %ah,%esi
		test   %esi,%esi
		jne    _0725c1_case
		orb    $0x000004,_094b54_data
		mov    %al,_094be0_data
		jmp    _0725c1_case

	_07254a_case:
		mov    _094b68_data,%al
		mov    $0x000001,%ecx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		jne    _0725c1_case
		orb    $0x000004,_094b68_data
		orb    $0x000004,_094bf4_data
		jmp    _0725c1_case

	_07256d_case:
		mov    $0x000001,%ah
		mov    $0x000001,%ecx
		mov    %ah,_0cd0df_data
		jmp    _0725c1_case

	_07257c_case:
		mov    _0c24f0_data,%di
		sub    $0x000002,%edi
		mov    %edi,(%esp)
		cmp    $0x00000a,%di
		ja     _0725c1_case
		xor    %edi,%edi
		mov    (%esp),%di
		jmp    *%cs:_071d50_switch(,%edi,4)

	_07259d_jump:
		mov    $0x000001,%al
		mov    $0x000001,%ecx
		mov    %al,_0cd0de_data
		mov    %al,_0cd0e9_data
		mov    %al,_0c2565_data
		jmp    _0725c1_case

	_0725b5_case:
		mov    _0c24f0_data,%ax
		cmp    $0x000004,%ax
		je     _07259d_jump

	_0725c1_case:
		mov    _094b7c_data,%al
		and    $0x000001,%al
		movzbl %al,%esi
		test   %esi,%esi
		jne    _0725e2_jump
		movzbl _0c32e1_data,%esi
		cmp    $0x000066,%esi
		jl     _0725e2_jump
		orb    $0x000004,_094b7c_data

	_0725e2_jump:
		test   %cx,%cx
		jne    _0725ed_jump
		test   %dx,%dx
		jne    _0725ed_jump
		inc    %ebx

	_0725ed_jump:
		movw   $0x000001,_0c24ec_data
		mov    %cx,_0c24ee_data
		mov    %bx,_0c25f0_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072610_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _072640_jump
		jmp    _0726ef_jump

	_072630_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _0726ef_jump

	_072640_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x000013,%edx
		jne    _072630_jump
		mov    0x000024(%ecx),%edx
		test   %edx,%edx
		jne    _072630_jump
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		call   _04d3a8_func
		cmpl   $0x000000,0x000024(%ecx)
		je     _07266d_jump
		mov    %ecx,%eax
		call   _01f584_func

	_07266d_jump:
		mov    0x000028(%esi),%edi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%dl
		mov    0x000068(%ecx),%al
		add    %edi,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)
		xor    %edx,%edx
		mov    0x000062(%esi),%dl
		cmp    $0x00000a,%edx
		jne    _07269c_jump
		xor    %edx,%edx
		mov    0x00002c(%esi),%eax
		mov    0x000069(%esi),%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%ecx),%dl
		jmp    _0726cd_jump

	_07269c_jump:
		testb  $0x000002,_092204_data(%edx)
		jne    _0726ba_jump
		mov    _0c24b4_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		shl    $0x000004,%eax
		mov    0x000069(%ecx),%dl
		sub    $0x000010,%eax
		jmp    _0726cd_jump

	_0726ba_jump:
		mov    _0c24b4_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		shl    $0x000004,%eax
		mov    0x000069(%ecx),%dl
		sub    $0x000006,%eax

	_0726cd_jump:
		sub    %edx,%eax
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01dcec_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		movb   $0x000000,0x00006b(%ecx)
		orb    $0x000040,0x000081(%esi)

	_0726ef_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0726f8_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		mov    (%ebx),%ebx
		shl    $0x000003,%eax
		mov    0x000060(%edx),%dx
		add    %ebx,%eax
		and    $0x00ffff,%edx
		cmp    $0x00000f,%edx
		jne    _07273c_jump
		mov    0x000005(%eax),%dh
		movb   $0x0000ff,0x000001(%eax)
		and    $0x00000f,%dh
		movb   $0x000001,(%eax)
		mov    %dh,%bl
		or     $0x0000a0,%bl
		mov    %bl,0x000005(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_07273c_jump:
		cmp    $0x00000d,%edx
		jne    _072751_jump
		movb   $0x0000fe,0x000001(%eax)
		mov    0x000005(%eax),%dl
		movb   $0x000002,(%eax)
		and    $0x00000f,%dl
		mov    %dl,0x000005(%eax)

	_072751_jump:
		pop    %edx
		pop    %ebx
		ret    



_072754_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _07291e_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000b,%eax
		jne    _07291e_jump
		mov    0x000050(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _072935_jump
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _0727ac_jump
		jmp    _072911_jump

	_07279c_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _072911_jump

	_0727ac_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x00000d,%edx
		je     _0727bc_jump
		cmp    $0x00000f,%edx
		jne    _07279c_jump

	_0727bc_jump:
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07279c_jump
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    $0x000002,%ebx
		mov    %dl,0x000081(%ecx)
		mov    %dl,%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f584_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000008(%eax),%eax
		mov    0x000012(%eax),%al
		mov    %al,0x00006a(%ecx)
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		mov    0x000081(%ecx),%bl
		sub    %eax,%edx
		test   $0x000008,%bl
		je     _072837_jump
		mov    $0x000040,%eax
		jmp    _07283c_jump

	_072837_jump:
		mov    $0xffffffc0,%eax

	_07283c_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    %ecx,%eax
		call   _01dcec_func
		mov    0x000032(%ecx),%edx
		mov    $0x000018,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		jne    _07288f_jump
		mov    $0x000003,%edx
		mov    %eax,%ebx
		mov    %ecx,%eax
		jmp    _072898_jump

	_07288f_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_072898_jump:
		call   _058bb4_func
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		cmp    $0x00000e,%eax
		jne    _0728fe_jump
		mov    _0c1b44_data,%ebx
		mov    0x000028(%esi),%eax
		sub    %ebx,%eax
		test   %eax,%eax
		jge    _0728b9_jump
		neg    %eax

	_0728b9_jump:
		sar    $0x000005,%eax
		movw   $0x00000f,0x000060(%ecx)
		mov    %eax,%edi
		mov    0x00002c(%esi),%ebp
		mov    _0c1b48_data,%eax
		sub    %ebp,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0c1b44_data,%ebx
		mov    0x000028(%esi),%eax
		sub    %ebx,%eax
		test   %eax,%eax
		jge    _0728e6_jump
		neg    %eax

	_0728e6_jump:
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %di,%edx
		movb   $0x00000a,0x000072(%ecx)
		sub    %edx,%eax
		mov    %ax,0x000042(%ecx)
		jmp    _07290a_jump

	_0728fe_jump:
		movw   $0x00000d,0x000060(%ecx)
		movw   $0x000000,0x000042(%ecx)

	_07290a_jump:
		mov    %ecx,%eax
		call   _01dcec_func

	_072911_jump:
		movw   $0x000001,0x000052(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07291e_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		test   %eax,%eax
		jne    _072935_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%eax
		jne    _072935_jump
		movw   $0x000000,0x000052(%esi)

	_072935_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07293c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    0x000032(%eax),%eax
		mov    _0c1b00_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%ebx),%ax
		je     _0729bb_jump
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    0x000081(%edx),%ah
		movw   $0x000018,0x000060(%edx)
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%edx)
		xor    %eax,%eax
		mov    0x00002c(%edx),%cx
		mov    0x000069(%edx),%al
		mov    0x00002c(%ebx),%si
		add    %eax,%ecx
		xor    %eax,%eax
		sub    %esi,%ecx
		mov    0x000069(%ebx),%al
		sub    %eax,%ecx
		movswl %cx,%ebx
		test   %ebx,%ebx
		setle  %bl
		and    $0x0000ff,%ebx
		add    $0x000003,%ebx
		movswl %cx,%eax
		mov    %bl,0x000070(%edx)
		test   %eax,%eax
		jge    _0729b7_jump
		neg    %eax

	_0729b7_jump:
		mov    %ax,0x000048(%edx)

	_0729bb_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0729c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0c1b04_data,%eax
		mov    _0c1b08_data,%si
		xor    %dl,%dl
		xor    %ebx,%ebx
		test   %si,%si
		jg     _0729eb_jump
		jmp    _072a27_jump

	_0729e0_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jge    _072a27_jump

	_0729eb_jump:
		xor    %ecx,%ecx
		mov    0x000060(%eax),%cx
		cmp    $0x000027,%ecx
		jne    _0729e0_jump
		xor    %ecx,%ecx
		mov    %dl,%cl
		lea    0x000000(,%ecx,2),%edi
		mov    0x000034(%eax),%cx
		mov    %cx,(%esp,%edi,1)
		mov    0x000024(%eax),%ecx
		inc    %dl
		test   %ecx,%ecx
		jne    _072a1a_jump
		movw   $0x00000a,0x000056(%eax)
		jmp    _072a1e_jump

	_072a1a_jump:
		incw   0x000056(%eax)

	_072a1e_jump:
		xor    %ecx,%ecx
		mov    %dl,%cl
		cmp    $0x000002,%ecx
		jl     _0729e0_jump

	_072a27_jump:
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%ebx
		mov    (%esp),%esi
		lea    (%eax,%ebx,1),%ebp
		mov    %esi,%edx
		xor    %al,%al
		jmp    _072a53_jump

	_072a49_jump:
		inc    %al
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    (%esp,%ebx,2),%dx

	_072a53_jump:
		xor    %ebx,%ebx
		mov    %al,%bl
		cmp    $0x000002,%ebx
		jge    _072a88_jump
		movswl %dx,%ecx
		imul   $0x000084,%ecx,%ecx
		movswl %si,%edi
		imul   $0x000084,%edi,%edi
		mov    _0c1b04_data,%ebx
		add    %ebx,%ecx
		add    %ebx,%edi
		mov    0x000056(%ecx),%bx
		cmp    0x000056(%edi),%bx
		jle    _072a49_jump
		mov    %edx,%esi
		mov    %ecx,%ebp
		jmp    _072a49_jump

	_072a88_jump:
		mov    %ebp,%eax
		movw   $0x000001,0x000056(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072a9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %ebp
		cmpl   $0x000001,_0ddc7c_data
		je     _072ab2_jump
		xor    %ebx,%ebx
		mov    %ebx,_0ddc7c_data

	_072ab2_jump:
		xor    %eax,%eax
		mov    _0c1b86_data,%al
		lea    0x000000(,%eax,4),%ecx
		sub    %eax,%ecx
		mov    _0c1b20_data,%eax
		mov    0x00000a(%eax,%ecx,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0c1b87_data,%dl
		dec    %eax
		cmp    %eax,%edx
		jne    _072b88_jump
		cmpl   $0x000000,_0ddc7c_data
		jne    _072b90_jump
		call   _0729c0_func
		mov    0x000024(%eax),%edi
		mov    %eax,%ecx
		test   %edi,%edi
		je     _072b04_jump
		call   _072f20_func
		jmp    _072b09_jump

	_072b04_jump:
		call   _01f584_func

	_072b09_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000026,%ebx
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01d4a8_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    (%eax),%eax
		mov    0x000132(%eax),%al
		mov    _0c1b44_data,%ebp
		mov    %al,0x00006a(%ecx)
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0c1b84_data,%al
		mov    0x000068(%ecx),%dl
		add    %ebp,%eax
		sub    %edx,%eax
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		mov    _0c1b48_data,%edx
		mov    _0c1b85_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    %eax,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01dcec_func
		movl   $0x000001,_0ddc7c_data
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_072b88_jump:
		xor    %ecx,%ecx
		mov    %ecx,_0ddc7c_data

	_072b90_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072b98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%bx
		xor    %edi,%edi
		xor    %eax,%eax
		test   %bx,%bx
		jg     _072bca_jump
		jmp    _072c57_jump

	_072bba_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _072c57_jump

	_072bca_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x000053,%edx
		jne    _072bba_jump
		mov    0x000024(%ecx),%edx
		test   %edx,%edx
		jne    _072bba_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		mov    0x000081(%ecx),%ah
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01f584_func
		mov    0x000068(%esi),%dl
		mov    0x000028(%esi),%edi
		add    %edx,%edi
		xor    %edx,%edx
		mov    0x000068(%ecx),%dl
		sub    %edx,%edi
		xor    %edx,%edx
		mov    %edi,0x000028(%ecx)
		mov    0x000069(%esi),%dl
		mov    0x00002c(%esi),%ebx
		movzbl 0x000069(%ecx),%esi
		add    %ebx,%edx
		sub    %esi,%edx
		add    $0x00000a,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01dcec_func
		movzbl 0x00006d(%ecx),%esi
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%esi
		add    %edx,%esi
		xor    %edx,%edx
		mov    (%esi),%esi
		mov    0x00006c(%ecx),%dl
		mov    0x000002(%esi,%edx,8),%al
		movb   $0x000000,0x00006b(%ecx)
		movb   $0x000002,0x000073(%ecx)
		mov    %ecx,%edi
		mov    %al,0x00006a(%ecx)

	_072c57_jump:
		mov    %edi,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072c60_func:
		push   %edx
		mov    %eax,%edx
		call   _072b98_func
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%edx)
		pop    %edx
		ret    



_072c80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _072cab_jump
		jmp    _072d1e_jump

	_072c9f_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _072d1e_jump

	_072cab_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x00008b,%edx
		jne    _072c9f_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _072c9f_jump
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000042(%ecx)
		and    $0x0000f7,%ah
		movw   $0x000000,0x000040(%ecx)
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000028(%esi),%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01dcec_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f584_func
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000007,0x000072(%ecx)

	_072d1e_jump:
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _058bb4_func
		xor    %edx,%edx
		mov    0x000070(%esi),%dl
		cmp    $0x000014,%edx
		jne    _072d49_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%esi)

	_072d49_jump:
		mov    $0x00000c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072d5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    _0c1b44_data,%ax
		mov    0x000028(%edx),%bx
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		mov    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0c1b84_data,%bl
		mov    0x00002c(%edx),%cx
		add    %ebx,%eax
		mov    _0c1b48_data,%bx
		mov    0x000069(%edx),%dl
		sub    %ecx,%ebx
		xor    %dh,%dh
		sub    %edx,%ebx
		mov    _0c1b85_data,%dl
		movswl %ax,%ecx
		add    %ebx,%edx
		test   %ecx,%ecx
		setg   %bl
		movswl %dx,%ecx
		test   %ecx,%ecx
		setg   %bh
		test   %bl,%bl
		jne    _072db4_jump
		neg    %eax

	_072db4_jump:
		test   %bh,%bh
		jne    _072dba_jump
		neg    %edx

	_072dba_jump:
		movswl %ax,%ecx
		cmp    $0x0000c8,%ecx
		jle    _072dce_jump
		mov    %ecx,%eax
		movswl %dx,%edx
		sar    %eax
		sar    %edx

	_072dce_jump:
		movswl %dx,%ecx
		test   %ecx,%ecx
		jne    _072deb_jump
		test   %bl,%bl
		je     _072de2_jump
		mov    $0x000180,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_072de2_jump:
		mov    $0x000080,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_072deb_jump:
		cmp    %ax,%dx
		jle    _072e06_jump
		movswl %ax,%edx
		shl    $0x000006,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		cwtl   
		mov    _0949dc_data(%eax),%al
		jmp    _072e22_jump

	_072e06_jump:
		mov    %ecx,%edx
		shl    $0x000006,%edx
		movswl %ax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		cwtl   
		mov    $0x000080,%dl
		mov    _0949dc_data(%eax),%dh
		mov    %dl,%al
		sub    %dh,%al

	_072e22_jump:
		test   %bl,%bl
		je     _072e3c_jump
		test   %bh,%bh
		je     _072e31_jump
		mov    $0x000180,%edx
		jmp    _072e50_jump

	_072e31_jump:
		xor    %ah,%ah
		add    $0x000180,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_072e3c_jump:
		test   %bh,%bh
		je     _072e4b_jump
		xor    %ah,%ah
		add    $0x000080,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_072e4b_jump:
		mov    $0x000080,%edx

	_072e50_jump:
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072e5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0c1b14_data,%edx
		movswl (%edx),%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0c1b04_data,%ecx
		shl    $0x000002,%edx
		xor    %ebx,%ebx
		add    %edx,%ecx
		mov    _0c1b18_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jg     _072eb3_jump
		jmp    _072f16_jump

	_072e90_jump:
		inc    %eax
		mov    _0c1b14_data,%edx
		movswl %ax,%ecx
		movswl (%edx,%ecx,2),%ecx
		imul   $0x000084,%ecx,%edx
		mov    _0c1b04_data,%ecx
		add    %edx,%ecx
		cmp    %si,%ax
		jl     _072eba_jump
		jmp    _072f16_jump

	_072eb3_jump:
		mov    _0c1b18_data,%si

	_072eba_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x00008f,%edx
		jne    _072e90_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _072e90_jump
		mov    $0x000014,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01f584_func
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		lea    (%ebx,%edx,1),%eax
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		lea    0x000000(,%edx,8),%ebx
		mov    (%eax),%edx
		mov    0x000002(%edx,%ebx,1),%al
		movb   $0x000000,0x00006b(%ecx)
		mov    %ecx,%ebx
		mov    %al,0x00006a(%ecx)

	_072f16_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072f20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%edi
		call   _072e5c_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _072fd9_jump
		mov    0x000028(%edi),%edx
		mov    %edx,0x000028(%eax)
		mov    0x00002c(%edi),%edx
		mov    %edx,0x00002c(%eax)
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %edx
		lea    0x000008(%esp),%ebx
		lea    0x00001c(%esp),%edx
		call   _01d3c0_func
		lea    0x000014(%esp),%edx
		lea    0x000010(%esp),%ecx
		mov    %esp,%ebx
		push   %edx
		mov    %edi,%eax
		lea    0x000020(%esp),%edx
		call   _01d3c0_func
		movl   $0x000001,0x000024(%esi)
		mov    0x00000e(%esp),%edx
		mov    0x00001a(%esp),%ebx
		mov    0x000006(%esp),%ecx
		sar    $0x000011,%edx
		sar    $0x000010,%ebx
		sar    $0x000011,%ecx
		add    %edx,%ebx
		mov    0x000016(%esp),%edx
		sar    $0x000010,%edx
		add    %ecx,%edx
		sub    %edx,%ebx
		add    %ebx,0x000028(%esi)
		mov    0x000012(%esp),%edx
		mov    -0x000002(%esp),%ebx
		sar    $0x000011,%edx
		sar    $0x000010,%ebx
		lea    (%ebx,%edx,1),%ecx
		mov    0x00000a(%esp),%edx
		mov    0x000002(%esp),%ebx
		sar    $0x000011,%edx
		sar    $0x000010,%ebx
		movb   $0x000001,0x00007e(%esi)
		add    %ebx,%edx
		mov    0x00002c(%esi),%ebx
		sub    %edx,%ecx
		movw   $0x000000,0x000050(%esi)
		add    %ecx,%ebx
		mov    %esi,%eax
		mov    %ebx,0x00002c(%esi)
		call   _01dcec_func

	_072fd9_jump:
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_072fe4_switch:
		.long   _073011_case
		.long   _07300f_case
		.long   _07305d_case
		.long   _07305f_case
		.long   _073063_case




_072ff8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		xor    %edx,%edx
		mov    %dx,0x000018(%esp)
		jmp    _07303e_jump

	_07300f_case:
		mov    %ebx,%eax

	_073011_case:
		cwtl   
		mov    0x000028(%edi),%ebx
		mov    0x00002c(%edi),%ecx
		add    %eax,%ebx
		movswl %dx,%eax
		add    %eax,%ecx
		mov    %ecx,0x00002c(%edi)
		imul   $0x000005,0x000018(%esp),%eax
		movb   $0x000000,0x00007e(%edi)
		mov    %ax,0x000050(%edi)
		mov    %edi,%eax
		mov    %ebx,0x000028(%edi)
		call   _01dcec_func

	_073039_jump:
		incw   0x000018(%esp)

	_07303e_jump:
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000004,%eax
		jg     _07311f_jump
		call   _072e5c_func
		mov    %eax,%esi
		mov    %eax,%edi
		test   %eax,%eax
		jne    _07307b_jump
		jmp    _073039_jump

	_07305d_case:
		mov    %ebx,%eax

	_07305f_case:
		mov    %ecx,%edx
		jmp    _073011_case

	_073063_case:
		mov    0x00001e(%esp),%ebx
		cwtl   
		sar    $0x000011,%ebx
		add    %ebx,%eax
		mov    0x00000e(%esp),%ebx
		movswl %dx,%edx
		sar    $0x000011,%ebx
		add    %ebx,%edx
		jmp    _073011_case

	_07307b_jump:
		mov    0x000028(%ebp),%eax
		mov    %eax,0x000028(%esi)
		mov    0x00002c(%ebp),%eax
		lea    0x000014(%esp),%ecx
		mov    %eax,0x00002c(%esi)
		mov    %esp,%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d3c0_func
		lea    0x000010(%esp),%eax
		lea    0x000020(%esp),%ecx
		lea    0x00001c(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%edx
		mov    %ebp,%eax
		call   _01d3c0_func
		mov    0x000012(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000011,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000002(%esp),%ebx
		mov    %edx,%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000011,%edx
		add    %edx,%ebx
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		sub    %ebx,%edx
		mov    0x000018(%esp),%ebx
		movl   $0x000001,0x000024(%esi)
		cmp    $0x000004,%bx
		ja     _073011_case
		xor    %ebx,%ebx
		mov    0x000018(%esp),%bx
		lea    0x000000(,%ebx,4),%esi
		mov    0x000010(%esp),%ecx
		mov    0x000020(%esp),%ebx
		add    %edx,%ecx
		add    %eax,%ebx
		jmp    *%cs:_072fe4_switch(%esi)

	_07311f_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07312c_func:
		push   %ebx
		push   %edx
		call   _072e5c_func
		test   %eax,%eax
		je     _073179_jump
		movb   $0x000000,0x00007e(%eax)
		mov    _0c247a_data,%edx
		movb   $0x00000a,0x00007f(%eax)
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%eax),%bl
		movw   $0x0000ff,0x000050(%eax)
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x000028(%eax)
		mov    _0c247c_data,%edx
		mov    0x000069(%eax),%bl
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%eax)
		add    %ebx,%edx
		mov    %edx,0x00002c(%eax)
		mov    0x000034(%eax),%ax
		pop    %edx
		pop    %ebx
		ret    

	_073179_jump:
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

_073184_switch:
		.long   _073287_case
		.long   _073298_case
		.long   _0732a9_case
		.long   _0732ba_case
		.long   _0732cb_case
		.long   _0732dc_case
		.long   _0732ed_case
		.long   _0732fe_case
		.long   _07330f_case
		.long   _073320_case
		.long   _073331_case
		.long   _073342_case
		.long   _073353_case
		.long   _073364_case
		.long   _073375_case
		.long   _073386_case
		.long   _073397_case
		.long   _0733a8_case
		.long   _0733b9_case
		.long   _0733ca_case
		.long   _0733db_case
		.long   _0733ec_case
		.long   _0733fd_case
		.long   _07340e_case
		.long   _07341f_case
		.long   _073430_case
		.long   _073441_case
		.long   _073452_case
		.long   _073463_case
		.long   _073471_case
		.long   _07347f_case
		.long   _07348d_case
		.long   _07349b_case
		.long   _0734a9_case
		.long   _0734b7_case
		.long   _0734c5_case




_073214_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bx,(%esp)
		mov    _0c1b04_data,%edx
		mov    _0c1b08_data,%cx
		xor    %ebx,%ebx
		test   %cx,%cx
		jg     _07324b_jump
		jmp    _073530_jump

	_07323b_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %cx,%bx
		jge    _073530_jump

	_07324b_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		cmp    $0x000092,%eax
		jne    _07323b_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _07323b_jump
		mov    0x000081(%edx),%ah
		and    $0x0000f7,%ah
		mov    (%esp),%ecx
		mov    %ah,0x000081(%edx)
		cmp    $0x000023,%cx
		ja     _0734d1_jump
		xor    %eax,%eax
		mov    %cx,%ax
		jmp    *%cs:_073184_switch(,%eax,4)

	_073287_case:
		movw   $0x000100,0x000056(%edx)
		movw   $0x000000,0x00004a(%edx)
		jmp    _0734d1_jump

	_073298_case:
		movw   $0x0000fc,0x000056(%edx)
		movw   $0x00ffd4,0x00004a(%edx)
		jmp    _0734d1_jump

	_0732a9_case:
		movw   $0x0000f0,0x000056(%edx)
		movw   $0x00ffa9,0x00004a(%edx)
		jmp    _0734d1_jump

	_0732ba_case:
		movw   $0x0000dd,0x000056(%edx)
		movw   $0x00ff80,0x00004a(%edx)
		jmp    _0734d1_jump

	_0732cb_case:
		movw   $0x0000c4,0x000056(%edx)
		movw   $0x00ff5c,0x00004a(%edx)
		jmp    _0734d1_jump

	_0732dc_case:
		movw   $0x0000a4,0x000056(%edx)
		movw   $0x00ff3c,0x00004a(%edx)
		jmp    _0734d1_jump

	_0732ed_case:
		movw   $0x000080,0x000056(%edx)
		movw   $0x00ff23,0x00004a(%edx)
		jmp    _0734d1_jump

	_0732fe_case:
		movw   $0x000057,0x000056(%edx)
		movw   $0x00ff10,0x00004a(%edx)
		jmp    _0734d1_jump

	_07330f_case:
		movw   $0x00002c,0x000056(%edx)
		movw   $0x00ff04,0x00004a(%edx)
		jmp    _0734d1_jump

	_073320_case:
		movw   $0x00ff04,0x000056(%edx)
		movw   $0x00ffd4,0x00004a(%edx)
		jmp    _0734d1_jump

	_073331_case:
		movw   $0x00ff10,0x000056(%edx)
		movw   $0x00ffa9,0x00004a(%edx)
		jmp    _0734d1_jump

	_073342_case:
		movw   $0x00ff23,0x000056(%edx)
		movw   $0x00ff80,0x00004a(%edx)
		jmp    _0734d1_jump

	_073353_case:
		movw   $0x00ff3c,0x000056(%edx)
		movw   $0x00ff5c,0x00004a(%edx)
		jmp    _0734d1_jump

	_073364_case:
		movw   $0x00ff5c,0x000056(%edx)
		movw   $0x00ff3c,0x00004a(%edx)
		jmp    _0734d1_jump

	_073375_case:
		movw   $0x00ff80,0x000056(%edx)
		movw   $0x00ff23,0x00004a(%edx)
		jmp    _0734d1_jump

	_073386_case:
		movw   $0x00ffa9,0x000056(%edx)
		movw   $0x00ff10,0x00004a(%edx)
		jmp    _0734d1_jump

	_073397_case:
		movw   $0x00ffd4,0x000056(%edx)
		movw   $0x00ff04,0x00004a(%edx)
		jmp    _0734d1_jump

	_0733a8_case:
		movw   $0x000000,0x000056(%edx)
		movw   $0x00ff00,0x00004a(%edx)
		jmp    _0734d1_jump

	_0733b9_case:
		movw   $0x00ff00,0x000056(%edx)
		movw   $0x000000,0x00004a(%edx)
		jmp    _0734d1_jump

	_0733ca_case:
		movw   $0x00ff04,0x000056(%edx)
		movw   $0x00002c,0x00004a(%edx)
		jmp    _0734d1_jump

	_0733db_case:
		movw   $0x00ff10,0x000056(%edx)
		movw   $0x000057,0x00004a(%edx)
		jmp    _0734d1_jump

	_0733ec_case:
		movw   $0x00ff23,0x000056(%edx)
		movw   $0x000080,0x00004a(%edx)
		jmp    _0734d1_jump

	_0733fd_case:
		movw   $0x00ff3c,0x000056(%edx)
		movw   $0x0000a4,0x00004a(%edx)
		jmp    _0734d1_jump

	_07340e_case:
		movw   $0x00ff5c,0x000056(%edx)
		movw   $0x0000c4,0x00004a(%edx)
		jmp    _0734d1_jump

	_07341f_case:
		movw   $0x00ff80,0x000056(%edx)
		movw   $0x0000dd,0x00004a(%edx)
		jmp    _0734d1_jump

	_073430_case:
		movw   $0x00ffa9,0x000056(%edx)
		movw   $0x0000f0,0x00004a(%edx)
		jmp    _0734d1_jump

	_073441_case:
		movw   $0x00ffd4,0x000056(%edx)
		movw   $0x0000fc,0x00004a(%edx)
		jmp    _0734d1_jump

	_073452_case:
		movw   $0x0000fc,0x000056(%edx)
		movw   $0x00002c,0x00004a(%edx)
		jmp    _0734d1_jump

	_073463_case:
		movw   $0x0000f0,0x000056(%edx)
		movw   $0x000057,0x00004a(%edx)
		jmp    _0734d1_jump

	_073471_case:
		movw   $0x0000dd,0x000056(%edx)
		movw   $0x000080,0x00004a(%edx)
		jmp    _0734d1_jump

	_07347f_case:
		movw   $0x0000c4,0x000056(%edx)
		movw   $0x0000a4,0x00004a(%edx)
		jmp    _0734d1_jump

	_07348d_case:
		movw   $0x0000a4,0x000056(%edx)
		movw   $0x0000c4,0x00004a(%edx)
		jmp    _0734d1_jump

	_07349b_case:
		movw   $0x000080,0x000056(%edx)
		movw   $0x0000dd,0x00004a(%edx)
		jmp    _0734d1_jump

	_0734a9_case:
		movw   $0x000057,0x000056(%edx)
		movw   $0x0000f0,0x00004a(%edx)
		jmp    _0734d1_jump

	_0734b7_case:
		movw   $0x00002c,0x000056(%edx)
		movw   $0x0000fc,0x00004a(%edx)
		jmp    _0734d1_jump

	_0734c5_case:
		movw   $0x000000,0x000056(%edx)
		movw   $0x000100,0x00004a(%edx)

	_0734d1_jump:
		mov    (%esp),%al
		movw   $0x000000,0x000040(%edx)
		mov    %al,0x000076(%edx)
		movswl %di,%eax
		mov    %eax,0x000028(%edx)
		movswl %si,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000056(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000042(%edx)
		call   _01dcec_func
		mov    0x000081(%edx),%cl
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%cl
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _01f584_func
		mov    $0x0000cd,%eax
		movswl %bx,%edx
		call   _06ac04_func

	_073530_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_073538_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    _0c1ec0_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _073575_jump
		mov    _0c2576_data,%edx
		mov    _0c2572_data,%eax
		sar    $0x000011,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    _0c2574_data,%edi
		mov    %eax,%edx
		mov    _0c2578_data,%eax
		sar    $0x000010,%edi
		sar    $0x000011,%eax
		jmp    _07358b_jump

	_073575_jump:
		xor    %edx,%edx
		mov    0x000028(%eax),%di
		mov    0x000068(%eax),%dl
		add    %edi,%edx
		movzbl 0x000069(%eax),%edi
		add    %edi,%edi
		mov    0x00002c(%eax),%eax
		sar    %edi

	_07358b_jump:
		add    %edi,%eax
		mov    0x000028(%esi),%di
		sub    %edi,%edx
		mov    %edx,(%esp)
		xor    %edx,%edx
		mov    (%esp),%edi
		mov    0x000068(%esi),%dl
		sub    %edx,%edi
		mov    %di,0x000000(%ebp)
		xor    %edx,%edx
		movzbl 0x000074(%esi),%edi
		mov    0x000069(%esi),%dl
		add    %edx,%edi
		mov    0x00002c(%esi),%ebp
		sar    %edi
		cwtl   
		add    %ebp,%edi
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _0735c1_jump
		neg    %eax

	_0735c1_jump:
		mov    %ax,(%ebx)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		shl    $0x000002,%eax
		mov    %ax,(%ecx)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0735d8_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    $0xffffffff,%ebx
		xor    %eax,%eax
		jmp    _0735e5_jump

	_0735e4_jump:
		inc    %eax

	_0735e5_jump:
		movswl %ax,%edx
		cmp    $0x000008,%edx
		jge    _07360b_jump
		imul   $0x000282,%edx,%edx
		cmpw   $0x000000,_0c571e_data(%edx)
		jne    _0735e4_jump
		mov    $0x000001,%esi
		mov    %eax,%ebx
		mov    %si,_0c571e_data(%edx)

	_07360b_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_073614_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _0735d8_func
		movswl %ax,%edx
		mov    %ax,0x000004(%esp)
		cmp    $0xffffffff,%edx
		je     _073703_jump
		mov    $0x000100,%edi
		lea    0x000000(,%edx,4),%eax
		shl    $0x000006,%ebx
		xor    %esi,%esi
		shl    $0x000006,%ecx
		mov    %si,0x00000c(%esp)
		mov    %ebx,0x000014(%esp)
		mov    %ecx,0x000008(%esp)
		add    %edx,%eax
		mov    $0x000040,%esi
		shl    $0x000006,%eax
		mov    $0x000020,%ecx
		add    %edx,%eax
		mov    $_0c549e_data,%edx
		add    %eax,%eax
		mov    $0x000080,%ebx
		add    %eax,%edx
		jmp    _0736e1_jump

	_073678_jump:
		mov    0x000014(%esp),%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    %ax,0x000002(%edx)
		movswl %bx,%eax
		add    $0x000008,%edx
		call   _064360_func
		sub    %edi,%eax
		mov    %eax,0x000010(%esp)
		movswl %si,%eax
		call   _064360_func
		sub    %ecx,%eax
		mov    %ax,-0x000004(%edx)
		mov    0x000010(%esp),%eax
		mov    %ax,-0x000002(%edx)
		mov    $0x000008,%eax
		add    $0x000002,%edx
		call   _064360_func
		mov    %ax,(%esp)
		add    $0x000004,%ebx
		mov    (%esp),%al
		add    $0x000002,%edi
		add    $0x000008,%al
		add    $0x000004,%esi
		mov    %al,-0x000002(%edx)
		mov    0x00000c(%esp),%eax
		add    $0x000002,%ecx
		inc    %eax
		movb   $0x000080,-0x000001(%edx)
		mov    %ax,0x00000c(%esp)

	_0736e1_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000040,%ebp
		shl    $0x000003,%eax
		sub    %eax,%ebp
		mov    %ebp,%eax
		mov    0x00000a(%esp),%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%eax
		jg     _073678_jump

	_073703_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07370c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0ce52c_data,%ebp
		mov    _0c24c0_data,%di
		mov    _0c24c2_data,%ax
		xor    %edx,%edx
		shl    $0x000006,%edi
		shl    $0x000006,%eax
		mov    %dx,(%esp)
		mov    %eax,0x000004(%esp)
		jmp    _0737cd_jump

	_07373d_jump:
		mov    $0x000001,%esi

	_073742_jump:
		xor    %ebx,%ebx
		mov    0x000006(%eax),%cx
		mov    0x000008(%eax),%bl
		add    %ebx,%ecx
		mov    %cx,0x000006(%eax)

	_073751_jump:
		add    $0x00000a,%eax
		inc    %edx

	_073755_jump:
		movswl %dx,%ebx
		cmp    $0x000040,%ebx
		jge    _0737b5_jump
		xor    %ebx,%ebx
		mov    0x000009(%eax),%bl
		cmp    $0x000080,%ebx
		jl     _073751_jump
		mov    0x000004(%eax),%bx
		mov    (%eax),%cx
		sub    %edi,%ebx
		add    %ebx,%ecx
		mov    0x000006(%eax),%bx
		mov    %cx,(%eax)
		sub    0x000004(%esp),%ebx
		add    %bx,0x000002(%eax)
		mov    _0ce530_data,%ecx
		movswl (%eax),%ebx
		shl    $0x000006,%ecx
		cmp    %ecx,%ebx
		jg     _0737af_jump
		mov    %ebp,%ecx
		shl    $0x000006,%ecx
		cmp    %ecx,%ebx
		jl     _0737af_jump
		mov    (%eax),%ecx
		mov    _0ce528_data,%ebx
		sar    $0x000010,%ecx
		shl    $0x000006,%ebx
		cmp    %ebx,%ecx
		jle    _07373d_jump

	_0737af_jump:
		movb   $0x000000,0x000009(%eax)
		jmp    _073742_jump

	_0737b5_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000282,%eax,%eax
		mov    %si,_0c571e_data(%eax)

	_0737c9_jump:
		incw   (%esp)

	_0737cd_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000008,%eax
		jge    _0737fb_jump
		imul   $0x000282,%eax,%eax
		mov    _0c571c_data(%eax),%ebx
		sar    $0x000010,%ebx
		cmp    $0x000001,%ebx
		jne    _0737c9_jump
		add    $_0c549e_data,%eax
		xor    %esi,%esi
		xor    %edx,%edx
		jmp    _073755_jump

	_0737fb_jump:
		mov    %ebp,_0ce52c_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07380c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		call   _058bb4_func
		mov    0x000032(%ecx),%eax
		mov    _0c1b00_data,%edx
		sar    $0x000010,%eax
		movw   $0x000001,0x000052(%ecx)
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%ecx),%ax
		je     _073875_jump
		movswl %ax,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0c1b04_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x0000a8,%eax
		jne    _073875_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		movw   $0x000001,0x000052(%ecx)

	_073875_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07387c_func:
		push   %edx
		mov    $_0c1b1c_data,%eax
		mov    $0x000001,%edx
		call   _071d94_func
		mov    %dx,_0c24ec_data
		pop    %edx
		ret    



_073898_func:
		push   %edx
		cmpb   $0x000000,_0c2565_data
		jne    _0738bd_jump
		mov    _0c24da_data,%eax
		sar    $0x000010,%eax
		xor    %dl,%dl
		cmp    $0xffffffff,%eax
		setne  %al
		mov    %dl,_0c9474_data
		mov    %al,_0c1afc_data

	_0738bd_jump:
		pop    %edx
		ret    



_0738c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    $0x000015,%edx
		call   _01d498_func
		mov    _0c24de_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000076(%eax),%dl
		cmp    $0x00000a,%edx
		jne    _0738f9_jump
		movb   $0x000005,0x000076(%eax)
		jmp    _073909_jump

	_0738f9_jump:
		mov    $0x000017,%ebx
		xor    %edx,%edx
		movb   $0x000001,0x000076(%eax)
		call   _01d4a8_func

	_073909_jump:
		mov    _0c1b04_data,%edx
		mov    _0c1b08_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _07392e_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_073922_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _073975_jump

	_07392e_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x0000de,%ebx
		jne    _073922_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _073922_jump
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000001,0x000042(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f584_func
		movb   $0x000004,0x000072(%edx)

	_073975_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07397c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%esi
		mov    _0c1b04_data,%edx
		mov    _0c1b08_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jg     _0739a9_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07399d_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jge    _0739ea_jump

	_0739a9_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x0000dd,%ebx
		jne    _07399d_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _07399d_jump
		movswl %di,%ebx
		sub    $0x00008e,%ebx
		mov    %ebx,0x000028(%edx)
		movswl %si,%ebx
		movl   $0x000001,0x000024(%edx)
		sub    $0x000080,%ebx
		mov    %edx,%eax
		mov    %ebx,0x00002c(%edx)
		call   _01f584_func
		orb    $0x000004,0x000081(%edx)

	_0739ea_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0739f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0c2560_data,%esi
		sar    $0x000010,%esi
		cmp    $0xffffffff,%esi
		jne    _073a0a_jump
		xor    %eax,%eax
		jmp    _073aa0_jump

	_073a0a_jump:
		movswl %ax,%ecx
		lea    0x000032(%ecx),%edx
		mov    $0x000065,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %ax,%ebx
		mov    $0x000005,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		imul   $0x000065,%ebx,%eax
		add    %esi,%edx
		sub    %eax,%ecx
		movswl %dx,%edx
		mov    %ecx,%eax
		mov    $0x000033,%ecx
		test   %eax,%eax
		jge    _073a44_jump
		neg    %eax

	_073a44_jump:
		sub    %eax,%ecx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006a(%ebx),%al
		mov    _0949d2_data(,%eax,2),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00006b(%ebx),%al
		add    %eax,%edx
		mov    $0x00000e,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %dx,%eax
		mov    _0949b6_data(,%eax,2),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    $0x000032,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    0x00002c(%ebx),%edx
		sub    %eax,%edx
		mov    %edx,%eax

	_073aa0_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073aa8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _073ad7_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_073ac7_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _073b52_jump

	_073ad7_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x000085,%edx
		jne    _073ac7_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _073ac7_jump
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f584_func
		mov    0x000028(%esi),%edx
		mov    %edx,0x000028(%ecx)
		mov    $0x000012,%ebx
		mov    0x00002c(%esi),%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000002,%edx
		call   _01d4a8_func
		mov    _0c247c_data,%dx
		mov    0x000028(%ecx),%ax
		sub    %edx,%eax
		mov    %ax,0x000036(%ecx)
		mov    _0c247e_data,%bx
		mov    0x00002c(%ecx),%ax
		movw   $0x00fffe,0x000042(%ecx)
		sub    %ebx,%eax
		mov    %ax,0x000038(%ecx)
		mov    %ecx,%eax
		movw   $0x000001,0x000040(%ecx)
		call   _01dcec_func

	_073b52_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073b58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    _0c1b04_data,%eax
		mov    _0c1b08_data,%cx
		xor    %esi,%esi
		xor    %edx,%edx
		test   %cx,%cx
		jg     _073b81_jump
		jmp    _073b94_jump

	_073b76_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %cx,%dx
		jge    _073b94_jump

	_073b81_jump:
		xor    %ebx,%ebx
		mov    0x000060(%eax),%bx
		cmp    $0x00004b,%ebx
		jne    _073b76_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _073b76_jump
		mov    %eax,%esi

	_073b94_jump:
		test   %esi,%esi
		jne    _073ba6_jump
		mov    $0x00004b,%eax
		call   _01d148_func
		mov    %eax,%esi
		jmp    _073bad_jump

	_073ba6_jump:
		mov    %esi,%eax
		call   _01f584_func

	_073bad_jump:
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		mov    0x000081(%esi),%dl
		movw   $0x000000,0x00005e(%esi)
		and    $0x0000bf,%dl
		mov    %dl,0x000081(%esi)
		mov    0x000028(%edi),%eax
		sub    $0x000028,%eax
		mov    %eax,0x000028(%esi)
		mov    0x00002c(%edi),%eax
		movb   $0x000000,0x00006a(%esi)
		movb   $0x000001,0x00006b(%esi)
		movb   $0x000000,0x00006d(%esi)
		movb   $0x000000,0x00006f(%esi)
		sub    $0x000014,%eax
		movb   $0x000000,0x00006e(%esi)
		mov    %eax,0x00002c(%esi)
		mov    %esi,%eax
		movb   $0x000000,0x00006c(%esi)
		call   _01dcec_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073c10_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c25da_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _073c4c_jump
		movw   $0x00ffff,_0c25dc_data
		call   _04fd90_func
		mov    _0c25da_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,4)

	_073c4c_jump:
		mov    _0c25dc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _073c89_jump
		mov    $0xffffffff,%ebx
		mov    _0c1b04_data,%eax
		mov    %bx,_0c25de_data
		mov    -0x000003(%eax),%ch
		sub    $0x000084,%eax
		mov    $0x000004,%bh
		and    $0x0000fb,%ch
		mov    %bh,_0c1b92_data
		mov    %bh,_0c24d1_data
		mov    %ch,0x000081(%eax)

	_073c89_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073c90_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000050,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		mov    _0ddc80_data,%eax
		mov    %eax,(%esp)
		mov    0x000014(%eax),%eax
		xor    %ebx,%ebx
		mov    %eax,0x000044(%esp)
		mov    (%esp),%eax
		mov    %cx,%bx
		movw   $0x000000,(%eax)
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _073cc1_jump
		mov    %ebx,%eax

	_073cc1_jump:
		mov    (%esp),%ebx
		mov    %ax,0x000002(%ebx)
		movswl %di,%ebx
		test   %ebx,%ebx
		jl     _073cdc_jump
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _073cda_jump
		mov    %ebx,%eax

	_073cda_jump:
		jmp    _073ceb_jump

	_073cdc_jump:
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _073ce9_jump
		mov    %ebx,%eax

	_073ce9_jump:
		neg    %eax

	_073ceb_jump:
		mov    (%esp),%ebx
		mov    %ax,0x00000c(%ebx)
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _073cfe_jump
		mov    %si,0x000004(%ebx)

	_073cfe_jump:
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _073d0d_jump
		mov    (%esp),%eax
		mov    %dx,0x000006(%eax)

	_073d0d_jump:
		mov    (%esp),%eax
		xor    %ebx,%ebx
		mov    0x00000e(%eax),%bx
		mov    $0x00013f,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    (%esp),%eax
		mov    0x000002(%eax),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _073d2e_jump
		mov    %ebx,%eax

	_073d2e_jump:
		mov    (%esp),%ebx
		xor    %ecx,%ecx
		mov    0x00000e(%ebx),%cx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _073d41_jump
		mov    %ebx,%eax

	_073d41_jump:
		mov    (%esp),%ebx
		mov    %ax,0x000004(%ebx)
		mov    (%esp),%eax
		xor    %ebx,%ebx
		mov    0x00000e(%eax),%bx
		mov    $0x0000c7,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    (%esp),%eax
		mov    0x000004(%eax),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _073d69_jump
		mov    %ebx,%eax

	_073d69_jump:
		mov    (%esp),%ebx
		xor    %ecx,%ecx
		mov    0x00000e(%ebx),%cx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _073d7c_jump
		mov    %ebx,%eax

	_073d7c_jump:
		mov    (%esp),%ebx
		mov    %ax,0x000006(%ebx)
		call   _079682_func
		and    $0x000007,%eax
		cmp    $0x000004,%eax
		jge    _073d96_jump
		mov    0x00000c(%ebx),%ax
		jmp    _073d9c_jump

	_073d96_jump:
		mov    0x00000c(%ebx),%ax
		neg    %eax

	_073d9c_jump:
		mov    (%esp),%ebx
		mov    %ax,0x000008(%ebx)
		call   _079682_func
		and    $0x000007,%eax
		cmp    $0x000004,%eax
		jge    _073db6_jump
		mov    0x00000c(%ebx),%ax
		jmp    _073dbc_jump

	_073db6_jump:
		mov    0x00000c(%ebx),%ax
		neg    %eax

	_073dbc_jump:
		mov    (%esp),%ebx
		mov    %ax,0x00000a(%ebx)
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _074074_jump
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _074074_jump
		xor    %esi,%esi
		mov    0x00000e(%ebx),%si
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		add    %eax,%eax
		call   _078062_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x40590000,%edx
		xor    %eax,%eax
		call   _07885a_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07825f_func
		mov    %eax,0x000018(%esp)
		mov    %esi,%eax
		neg    %eax
		mov    %edx,0x00001c(%esp)
		call   _078062_func
		jmp    _073e36_jump

	_073e22_jump:
		mov    0x000048(%esp),%eax
		mov    0x00004c(%esp),%edx
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		call   _0780a8_func

	_073e36_jump:
		mov    %eax,0x000048(%esp)
		mov    %edx,0x00004c(%esp)
		mov    (%esp),%edx
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		call   _07806f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000048(%esp),%eax
		mov    0x00004c(%esp),%edx
		call   _07a1e6_func
		jg     _074074_jump
		mov    0x000048(%esp),%eax
		mov    0x00004c(%esp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07825f_func
		mov    %edx,0x000024(%esp)
		mov    (%esp),%edx
		mov    %eax,0x000020(%esp)
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		neg    %eax
		call   _078062_func
		jmp    _073fa0_jump

	_073e91_jump:
		mov    0x000048(%esp),%eax
		mov    0x00004c(%esp),%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07a273_func
		mov    %eax,%ebx
		mov    %edx,%ebp
		call   _078cc0_func
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000008(%esp)
		mov    %ebx,%eax
		mov    %ebp,%edx
		mov    0x000008(%esp),%ecx
		call   _078c99_func
		mov    0x000004(%esp),%ebx
		mov    %eax,0x00000c(%esp)
		mov    %edx,%ebp
		mov    0x000028(%esp),%eax
		mov    0x00002c(%esp),%edx
		call   _07825f_func
		mov    0x00000c(%esp),%ebx
		mov    %eax,0x000010(%esp)
		mov    %edx,0x000014(%esp)
		mov    %ebp,%ecx
		mov    0x000034(%esp),%eax
		mov    0x000040(%esp),%edx
		call   _07825f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000010(%esp),%eax
		mov    0x000014(%esp),%edx
		call   _0780a2_func
		mov    0x00000c(%esp),%ebx
		mov    %eax,0x000030(%esp)
		mov    %edx,0x00003c(%esp)
		mov    %ebp,%ecx
		mov    0x000028(%esp),%eax
		mov    0x00002c(%esp),%edx
		call   _07825f_func
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    %eax,%ebp
		mov    %edx,0x000014(%esp)
		mov    0x000034(%esp),%eax
		mov    0x000040(%esp),%edx
		call   _07825f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000014(%esp),%edx
		mov    %ebp,%eax
		call   _0780a8_func
		mov    %eax,%ebp
		mov    %edx,0x000038(%esp)

	_073f4e_jump:
		mov    0x000030(%esp),%eax
		mov    0x00003c(%esp),%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _0780a2_func
		call   _078d1c_func
		mov    0x000044(%esp),%edx
		mov    0x000048(%esp),%ebx
		mov    0x00004c(%esp),%ecx
		mov    %eax,(%edx)
		mov    0x000038(%esp),%edx
		mov    %ebp,%eax
		call   _0780a2_func
		call   _078d1c_func
		mov    0x000044(%esp),%edx
		add    $0x000008,%edx
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		mov    %eax,-0x000004(%edx)
		mov    %edx,0x000044(%esp)
		mov    %esi,%eax
		mov    %edi,%edx
		call   _0780a8_func

	_073fa0_jump:
		mov    %eax,%esi
		mov    %edx,%edi
		mov    (%esp),%edx
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		call   _07806f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %esi,%eax
		mov    %edi,%edx
		call   _07a1e6_func
		jg     _073e22_jump
		mov    %esi,%eax
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07825f_func
		mov    0x000020(%esp),%ebx
		mov    0x000024(%esp),%ecx
		call   _0780a8_func
		call   _07a37e_func
		mov    %eax,0x000004(%esp)
		mov    %edx,%ebp
		mov    %eax,0x000028(%esp)
		mov    %edx,0x00002c(%esp)
		mov    0x000018(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    0x000004(%esp),%ebx
		mov    %ebp,%ecx
		call   _078d08_func
		call   _07825f_func
		mov    0x000004(%esp),%ebx
		mov    %ebp,%ecx
		call   _07825f_func
		call   _079b16_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000004(%esp),%eax
		mov    %ebp,%edx
		call   _07825f_func
		mov    %eax,0x000034(%esp)
		mov    %edx,0x000040(%esp)
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %esi,%eax
		mov    %edi,%edx
		call   _07a1e6_func
		jne    _073e91_jump
		mov    0x000048(%esp),%eax
		mov    0x00004c(%esp),%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		call   _07a1e6_func
		jne    _073e91_jump
		mov    0x000048(%esp),%ebp
		mov    0x00004c(%esp),%eax
		mov    %esi,0x000030(%esp)
		mov    %edi,0x00003c(%esp)
		mov    %eax,0x000038(%esp)
		jmp    _073f4e_jump

	_074074_jump:
		add    $0x000050,%esp
		pop    %ebp
		pop    %edi
		pop    %esi

	_07407a_jump:
		ret    

	_07407c_case:
		mov    _0ddc80_data,%eax
		test   %eax,%eax
		je     _07407a_jump
		cmpl   $0x000000,0x000014(%eax)
		je     _074093_jump
		add    $0x000014,%eax
		call   _077858_func

	_074093_jump:
		cmpl   $0x000000,_0ddc80_data
		je     _07407a_jump
		mov    $_0ddc80_data,%eax
		jmp    _077858_func



_0740a8_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    0x000020(%esp),%esi
		mov    %ax,0x000004(%esp)
		mov    %dx,0x000008(%esp)
		mov    %cx,(%esp)
		xor    %ah,%ah
		mov    %ah,0x00000c(%esp)
		test   %esi,%esi
		je     _074174_jump
		cmpl   $0x000000,0x000024(%esp)
		je     _074174_jump
		mov    $0x000020,%eax
		call   _077840_func
		mov    %eax,%edx
		mov    %eax,_0ddc80_data
		test   %eax,%eax
		je     _074174_jump
		xor    %eax,%eax
		mov    %bx,%ax
		mov    $0x000030,%ebx
		cmp    %ebx,%eax
		jle    _074101_jump
		mov    %ebx,%eax

	_074101_jump:
		mov    %eax,%ebx
		mov    $0x000008,%eax
		cmp    %ebx,%eax
		jge    _07410e_jump
		mov    %ebx,%eax

	_07410e_jump:
		mov    %ax,0x00000e(%edx)
		add    %eax,%eax
		inc    %eax
		mov    %ax,0x000010(%edx)
		mov    0x00000e(%edx),%ax
		add    %eax,%eax
		mov    $0x00fa00,%ecx
		inc    %eax
		mov    _0cdf00_data,%edi
		mov    %ax,0x000012(%edx)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _074139_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_074139_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _074142_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_074142_jump:
		mov    _0cdf00_data,%eax
		mov    %eax,0x000018(%edx)
		mov    0x000024(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x00001c(%edx)
		xor    %eax,%eax
		mov    0x000010(%edx),%bx
		mov    0x000012(%edx),%ax
		imul   %ebx,%eax
		shl    $0x000003,%eax
		call   _077840_func
		mov    %eax,0x000014(%edx)
		test   %eax,%eax
		je     _074174_jump
		movb   $0x000001,0x00000c(%esp)

	_074174_jump:
		cmpb   $0x000000,0x00000c(%esp)
		je     _07419e_jump
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%edx
		xor    %ecx,%ecx
		mov    0x000002(%esp),%eax
		mov    0x00001c(%esp),%cx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _073c90_func
		jmp    _0741a3_jump

	_07419e_jump:
		call   _07407c_case

	_0741a3_jump:
		mov    0x00000c(%esp),%al
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_0741b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ddc80_data,%edx
		mov    0x000008(%edx),%ax
		add    %ax,0x000004(%edx)
		mov    0x000006(%edx),%cx
		mov    0x00000a(%edx),%ax
		mov    0x000002(%edx),%ebx
		add    %eax,%ecx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		add    %ebx,%eax
		mov    %cx,0x000006(%edx)
		cmp    $0x000140,%eax
		jl     _0741ff_jump
		mov    $0x00013f,%ebx
		mov    0x00000e(%edx),%ax
		mov    0x000008(%edx),%si
		sub    %eax,%ebx
		neg    %esi
		mov    %bx,0x000004(%edx)
		mov    %si,0x000008(%edx)

	_0741ff_jump:
		mov    0x000002(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jge    _07421f_jump
		mov    0x000008(%edx),%di
		mov    %ax,0x000004(%edx)
		neg    %edi
		mov    %di,0x000008(%edx)

	_07421f_jump:
		mov    0x000004(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		add    %ebx,%eax
		cmp    $0x0000c8,%eax
		jl     _07424d_jump
		mov    $0x0000c7,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		mov    0x00000a(%edx),%ax
		mov    %bx,0x000006(%edx)
		neg    %eax
		mov    %ax,0x00000a(%edx)

	_07424d_jump:
		mov    0x000004(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jge    _07426d_jump
		mov    0x00000a(%edx),%bx
		mov    %ax,0x000006(%edx)
		neg    %ebx
		mov    %bx,0x00000a(%edx)

	_07426d_jump:
		mov    0x00000a(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _074279_jump
		neg    %eax

	_074279_jump:
		mov    (%edx),%cx
		add    %eax,%ecx
		mov    0x000002(%edx),%si
		mov    %cx,(%edx)
		cmp    %si,%cx
		jbe    _07428f_jump
		movw   $0x000000,(%edx)

	_07428f_jump:
		mov    (%edx),%ax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074298_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0ddc80_data,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000008(%esp)
		mov    0x000014(%eax),%edx
		mov    0x000004(%eax),%ecx
		mov    0x00000e(%eax),%bx
		mov    0x000008(%esp),%ebp
		mov    0x000008(%esp),%esi
		mov    0x000008(%esp),%edi
		sar    $0x000010,%ecx
		mov    0x000002(%ebp),%ebp
		sub    %ebx,%ecx
		mov    0x000018(%esi),%esi
		lea    0x000000(,%ecx,4),%eax
		sar    $0x000010,%ebp
		add    %ecx,%eax
		sub    %ebx,%ebp
		shl    $0x000006,%eax
		mov    0x000008(%esp),%ecx
		add    %eax,%ebp
		xor    %eax,%eax
		mov    0x00001c(%edi),%edi
		mov    0x000010(%ecx),%ax
		lea    (%esi,%ebp,1),%ebx
		mov    %eax,(%esp)
		mov    $0x000140,%eax
		mov    (%esp),%ecx
		add    %edi,%ebp
		sub    %ecx,%eax
		mov    $0x00fa00,%ecx
		mov    %eax,0x000004(%esp)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _074312_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_074312_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _07431b_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_07431b_jump:
		xor    %esi,%esi
		jmp    _074328_jump

	_07431f_jump:
		mov    0x000004(%esp),%edi
		inc    %esi
		add    %edi,%ebx
		add    %edi,%ebp

	_074328_jump:
		mov    0x000008(%esp),%ecx
		xor    %eax,%eax
		mov    0x000012(%ecx),%ax
		cmp    %eax,%esi
		jge    _074362_jump
		xor    %eax,%eax
		jmp    _074352_jump

	_07433a_jump:
		imul   $0x000140,0x000004(%edx),%ecx
		mov    (%edx),%edi
		inc    %ebx
		add    %edi,%ecx
		inc    %ebp
		add    $0x000008,%edx
		mov    -0x000001(%ecx,%ebx,1),%cl
		inc    %eax
		mov    %cl,-0x000001(%ebp)

	_074352_jump:
		mov    0x000008(%esp),%edi
		xor    %ecx,%ecx
		mov    0x000010(%edi),%cx
		cmp    %ecx,%eax
		jge    _07431f_jump
		jmp    _07433a_jump

	_074362_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074370_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		cmp    $0x000001,%al
		jbe    _074380_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074380_jump:
		and    $0x0000ff,%eax
		jne    _074390_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _074397_jump

	_074390_jump:
		orb    $0x000008,0x000081(%ecx)

	_074397_jump:
		mov    %ecx,%eax
		call   _04d2c4_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _0743b5_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func

	_0743b5_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024568_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _07441b_jump
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _0743ed_jump
		mov    0x000081(%ecx),%bh
		mov    $0x000005,%edx
		or     $0x000008,%bh
		mov    %ecx,%eax
		mov    %bh,0x000081(%ecx)
		jmp    _074403_jump

	_0743ed_jump:
		mov    0x000081(%ecx),%bl
		mov    $0x000004,%edx
		and    $0x0000f7,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)

	_074403_jump:
		mov    $0x000001,%ebx
		call   _058bb4_func
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)

	_07441b_jump:
		mov    %ecx,%eax
		call   _04d2c4_func
		mov    %ecx,%eax
		call   _024ba8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074430_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000003,%eax
		jne    _0745ea_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%al
		mov    %al,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074461_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_074475_jump:
		and    $0x0000ff,%eax
		jne    _074485_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _07448c_jump

	_074485_jump:
		orb    $0x000008,0x000081(%ecx)

	_07448c_jump:
		mov    %ecx,%eax
		call   _04d2c4_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _0744aa_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func

	_0744aa_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024568_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		je     _0744e9_jump
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _0744d3_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _0744da_jump

	_0744d3_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_0744da_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _074569_jump

	_0744e9_jump:
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01d754_func
		test   %ax,%ax
		je     _074578_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _02eb40_func
		test   %ax,%ax
		je     _074578_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x000028,%eax
		jne    _074578_jump
		xor    %eax,%eax
		mov    0x000070(%ecx),%al
		test   %eax,%eax
		jne    _074542_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _074549_jump

	_074542_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_074549_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		jne    _07455f_jump
		mov    $0x000001,%ebx
		mov    $0x000009,%edx
		jmp    _074569_jump

	_07455f_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_074569_jump:
		mov    %ecx,%eax
		call   _058bb4_func
		movb   $0x000005,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)

	_074578_jump:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000074(%ecx),%al
		add    %edx,%eax
		test   %eax,%eax
		jl     _074594_jump
		xor    %eax,%eax
		mov    0x000065(%ecx),%al
		testb  $0x000010,_092204_data(%eax)
		je     _074598_jump

	_074594_jump:
		incw   0x000042(%ecx)

	_074598_jump:
		mov    %ecx,%eax
		call   _04d2c4_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		je     _0745b4_jump
		mov    %ecx,%eax
		call   _024ba8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0745b4_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _0745c3_jump
		cmp    $0x000003,%eax
		jne    _0745fd_jump

	_0745c3_jump:
		mov    0x000081(%ecx),%dh
		lea    0x000081(%ecx),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0745ea_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000001,%al
		jbe    _074475_jump
		cmp    $0x000014,%al
		je     _074461_jump

	_0745fd_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074604_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e92c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _07462e_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		andb   $0x0000ef,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_07462e_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		movb   $0x000007,0x000072(%ecx)
		mov    _0c1ec0_data,%eax
		movb   $0x000002,0x000073(%ecx)
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _074660_jump
		andb   $0x0000f7,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_074660_jump:
		jge    _074669_jump
		orb    $0x000008,0x000081(%ecx)

	_074669_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07466c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		xor    %al,%al
		cmp    $0x000024,%edx
		jne    _0746a7_jump
		mov    0x00007f(%esi),%ah
		test   %ah,%ah
		je     _074696_jump
		cmpb   $0x000000,_0c249b_data
		jne    _074696_jump
		mov    %ah,%dh
		dec    %dh
		mov    %dh,0x00007f(%esi)

	_074696_jump:
		cmpb   $0x000000,0x00007f(%esi)
		jne    _0746a7_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _074e10_func
		mov    $0x000001,%al

	_0746a7_jump:
		test   %al,%al
		jne    _0746fa_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _024568_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000001,_092204_data(%edx)
		je     _0746d2_jump
		mov    $0xffffffff,%edx
		mov    %esi,%eax
		call   _074e10_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0746d2_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		cmp    $0x000002,%edx
		jne    _0746fa_jump
		xor    %edx,%edx
		mov    0x00006c(%esi),%dl
		cmp    $0x000001,%edx
		jne    _0746fa_jump
		lea    0x000042(%esi),%ebx
		push   $0x000003
		lea    0x000040(%esi),%edx
		mov    $0x00001e,%ecx
		mov    %esi,%eax
		call   _01e94c_func

	_0746fa_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074700_func:
		push   %ebx
		push   %edx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		xor    %dl,%dl
		test   %ebx,%ebx
		jne    _074723_jump
		mov    0x00006c(%eax),%al
		and    $0x0000ff,%eax
		je     _074721_jump
		cmp    $0x00000e,%eax
		je     _074721_jump
		cmp    $0x000008,%eax
		jne    _074723_jump

	_074721_jump:
		mov    $0x000001,%dl

	_074723_jump:
		mov    %dl,%al
		pop    %edx
		pop    %ebx
		ret    



_074728_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ecx
		call   _074700_func
		test   %al,%al
		je     _074773_jump
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01dc54_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _074773_jump
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _058bb4_func

	_074773_jump:
		xor    %eax,%eax
		mov    _0c1b44_data,%edx
		mov    _0c1b84_data,%al
		mov    0x000028(%ecx),%ebx
		add    %eax,%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _074796_jump
		neg    %eax

	_074796_jump:
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0c1b48_data,%edi
		mov    _0c1b85_data,%al
		lea    (%eax,%edi,1),%edx
		mov    0x00002c(%ecx),%ebp
		xor    %eax,%eax
		sub    %ebp,%edx
		mov    0x000069(%ecx),%al
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _0747bc_jump
		neg    %eax

	_0747bc_jump:
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		je     _07490c_jump
		cmp    $0x000001,%eax
		je     _07490c_jump
		test   %eax,%eax
		jne    _074891_jump
		movzbl 0x00006c(%ecx),%edi
		cmp    $0x00000b,%edi
		jne    _074891_jump
		shl    $0x000002,%eax
		mov    0x00000c(%ecx),%ebp
		add    %ebp,%eax
		mov    (%eax),%eax
		testb  $0x000010,0x000007(%eax,%edi,8)
		je     _074804_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _074825_jump

	_074804_jump:
		movzbl 0x00006a(%ecx),%edi
		lea    0x000000(,%edi,4),%eax
		sub    %edi,%eax
		mov    0x000004(%ecx),%edi
		mov    0x00000a(%edi,%eax,4),%ax
		and    $0x00ffff,%eax
		movzbl 0x00006b(%ecx),%edi
		dec    %eax
		cmp    %eax,%edi

	_074825_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _074891_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edi
		shl    $0x000002,%eax
		add    %eax,%edi
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%edi),%eax
		mov    (%esp),%edi
		mov    0x000005(%edi,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _074891_jump
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		movw   $0x00fff9,0x000042(%ecx)
		movb   $0x000000,0x000071(%ecx)
		mov    0x00002c(%ecx),%eax
		movb   $0x000004,0x000072(%ecx)
		sub    $0x00000e,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _07490c_jump

	_074891_jump:
		mov    0x00007b(%ecx),%ah
		xor    %esi,%esi
		test   %ah,%ah
		je     _0748fb_jump
		movswl %bx,%eax
		cmp    $0x0000aa,%eax
		jge    _0748b4_jump
		movswl %dx,%eax
		cmp    $0x000026,%eax
		jge    _0748b4_jump
		movb   $0x000001,0x00007d(%ecx)

	_0748b4_jump:
		mov    %ecx,%eax
		call   _074700_func
		test   %al,%al
		je     _0748fb_jump
		movswl %bx,%eax
		cmp    $0x00005f,%eax
		jge    _0748e3_jump
		movswl %dx,%eax
		cmp    $0x000032,%eax
		jge    _0748e3_jump
		xor    %eax,%eax
		mov    0x00007f(%ecx),%al
		test   %eax,%eax
		jne    _0748e3_jump
		mov    $0x000001,%esi
		movb   $0x000064,0x00007f(%ecx)
		jmp    _0748fb_jump

	_0748e3_jump:
		cmpb   $0x000000,0x00007d(%ecx)
		je     _0748fb_jump
		xor    %eax,%eax
		mov    0x00007f(%ecx),%al
		test   %eax,%eax
		jne    _0748fb_jump
		mov    $0xffffffff,%esi
		movb   $0x000000,0x00007d(%ecx)

	_0748fb_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _07490c_jump
		mov    %ecx,%eax
		call   _075788_func

	_07490c_jump:
		xor    %eax,%eax
		mov    0x00007f(%ecx),%al
		test   %eax,%eax
		je     _07491c_jump
		mov    %al,%dh
		dec    %dh
		mov    %dh,0x00007f(%ecx)

	_07491c_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _074931_jump
		movswl %si,%eax
		test   %eax,%eax
		je     _074a16_jump

	_074931_jump:
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01d754_func
		test   %ax,%ax
		je     _07495c_jump
		mov    $0x000001,%ebx
		mov    $0x00000e,%edx
		jmp    _074a0f_jump

	_07495c_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024568_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092204_data(%eax)
		jne    _074995_jump
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %edx,%eax
		cmp    $0x000020,%eax
		jl     _074995_jump
		mov    _0c24f4_data,%edx
		sar    $0x000010,%edx
		add    $0x00010c,%edx
		cmp    %edx,%eax
		jle    _0749e3_jump

	_074995_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		je     _0749e3_jump
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%ebx
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    %ebx,0x000028(%ecx)
		cmpb   $0x000000,0x00007b(%ecx)
		je     _0749ca_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		movb   $0x000000,0x00006b(%ecx)
		jmp    _0749db_jump

	_0749ca_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _058bb4_func

	_0749db_jump:
		movw   $0x000000,0x000040(%ecx)
		jmp    _074a16_jump

	_0749e3_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		je     _074a16_jump
		cmp    $0x000002,%eax
		je     _074a16_jump
		movswl %si,%eax
		test   %eax,%eax
		jge    _074a05_jump
		mov    $0x000001,%ebx
		mov    $0x00000d,%edx
		jmp    _074a0f_jump

	_074a05_jump:
		mov    $0x000001,%ebx
		mov    $0x000011,%edx

	_074a0f_jump:
		mov    %ecx,%eax
		call   _058bb4_func

	_074a16_jump:
		mov    %ecx,%eax
		call   _04d2c4_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000002,%eax
		je     _074a2e_jump
		mov    %ecx,%eax
		call   _024ba8_func

	_074a2e_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074a38_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _074700_func
		test   %al,%al
		je     _074a98_jump
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01dc54_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _074a7d_jump
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _058bb4_func

	_074a7d_jump:
		xor    %eax,%eax
		mov    0x00007f(%ecx),%al
		test   %eax,%eax
		jne    _074a8f_jump
		mov    %ecx,%eax
		call   _075788_func
		jmp    _074ab4_jump

	_074a8f_jump:
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x00007f(%ecx)
		jmp    _074ab4_jump

	_074a98_jump:
		mov    %ecx,%eax
		call   _075788_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _074ab4_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000009,%eax
		jne    _074ab4_jump
		movb   $0x0000fa,0x00007f(%ecx)

	_074ab4_jump:
		mov    %ecx,%eax
		call   _024ba8_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074ac0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000070(%eax),%al
		test   %al,%al
		jbe    _074aec_jump
		cmp    $0x000001,%al
		je     _074b19_jump
		jmp    _074b4d_jump

	_074ad4_jump:
		mov    0x000040(%edx),%ax
		mov    %ax,0x000042(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_074adf_jump:
		mov    0x000040(%edx),%ax
		neg    %eax
		mov    %ax,0x000042(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_074aec_jump:
		mov    0x000081(%edx),%bh
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%edx)
		call   _04d2c4_func
		mov    0x00006c(%edx),%al
		cmp    $0x00000b,%al
		jb     _074b12_jump
		jbe    _074b53_jump
		cmp    $0x00000d,%al
		je     _074adf_jump
		pop    %edx
		pop    %ebx
		ret    

	_074b12_jump:
		cmp    $0x000009,%al
		je     _074ad4_jump
		pop    %edx
		pop    %ebx
		ret    

	_074b19_jump:
		orb    $0x000008,0x000081(%edx)
		mov    %edx,%eax
		call   _04d2c4_func
		mov    0x000081(%edx),%bl
		and    $0x0000f7,%bl
		mov    0x00006c(%edx),%al
		mov    %bl,0x000081(%edx)
		cmp    $0x00000c,%al
		jb     _074b46_jump
		jbe    _074b53_jump
		cmp    $0x00000e,%al
		je     _074ad4_jump
		pop    %edx
		pop    %ebx
		ret    

	_074b46_jump:
		cmp    $0x00000a,%al
		je     _074adf_jump
		pop    %edx
		pop    %ebx
		ret    

	_074b4d_jump:
		movw   $0x000000,0x000040(%edx)

	_074b53_jump:
		movw   $0x000000,0x000042(%edx)
		pop    %edx
		pop    %ebx
		ret    

_074b5c_switch:
		.long   _074bc7_case
		.long   _074c03_case
		.long   _074c3a_case
		.long   _074c66_case
		.long   _074c8f_case
		.long   _074cc8_case




_074b74_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%ecx
		mov    %ebx,%esi
		cmpb   $0x000000,(%ebx)
		jne    _074d28_jump
		xor    %ebx,%ebx
		mov    0x000028(%eax),%edi
		mov    0x000068(%eax),%bl
		add    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		sub    %ebx,%edi
		xor    %ebx,%ebx
		mov    %edi,0x000028(%ecx)
		mov    0x000069(%eax),%bl
		mov    0x00002c(%eax),%edx
		xor    %eax,%eax
		add    %edx,%ebx
		mov    0x000069(%ecx),%al
		sub    %eax,%ebx
		mov    0x00006c(%ecx),%al
		sub    $0x000009,%al
		mov    %ebx,0x00002c(%ecx)
		cmp    $0x000005,%al
		ja     _074cfa_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_074b5c_switch(,%eax,4)

	_074bc7_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000003,%edi
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%ebp
		mov    0x000069(%ecx),%bl
		sub    %eax,%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edx
		add    %ebx,%eax
		mov    %ebp,0x000028(%ecx)
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _074cfa_jump

	_074c03_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		add    %eax,0x000028(%ecx)
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		mov    $0x000003,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edi
		add    %ebx,%eax
		sub    %eax,%edi
		mov    %edi,0x00002c(%ecx)
		jmp    _074cfa_jump

	_074c3a_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000028(%ecx),%ebp
		sub    %ebx,%eax
		sub    %eax,%ebp
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		mov    %ebp,0x000028(%ecx)
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _074cfa_jump

	_074c66_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		mov    0x000028(%ecx),%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edi
		mov    0x000069(%ecx),%al
		mov    %ebx,0x000028(%ecx)
		sub    %eax,%edi
		mov    %edi,0x00002c(%ecx)
		jmp    _074cfa_jump

	_074c8f_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000003,%edi
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%ebp
		mov    0x000069(%ecx),%bl
		sub    %eax,%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edx
		sub    %ebx,%eax
		mov    %ebp,0x000028(%ecx)
		add    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _074cfa_jump

	_074cc8_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		add    %eax,0x000028(%ecx)
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		mov    $0x000003,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edi
		sub    %ebx,%eax
		add    %eax,%edi
		mov    %edi,0x00002c(%ecx)

	_074cfa_jump:
		mov    %ecx,%eax
		call   _01dcec_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f584_func
		andb   $0x0000bf,0x000081(%ecx)
		movb   $0x000001,(%esi)

	_074d28_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_074d30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,0x000018(%esp)
		mov    %ah,0x000014(%esp)
		mov    %ah,0x000004(%esp)
		mov    0x00003e(%esi),%ebx
		sar    $0x000010,%ebx
		test   %ebx,%ebx
		setg   %bl
		test   %bl,%bl
		jbe    _074d79_jump
		cmp    $0x000001,%bl
		je     _074d8d_jump

	_074d5c_jump:
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%bx
		xor    %edi,%edi
		mov    %ebx,(%esp)
		test   %bx,%bx
		jle    _074e05_jump
		jmp    _074db0_jump

	_074d79_jump:
		mov    $0x00000c,%al
		mov    $0x00000a,%ch
		mov    %al,0x00000c(%esp)
		mov    $0x00000e,%ah
		mov    %ch,0x000008(%esp)
		mov    %ah,0x000010(%esp)
		jmp    _074d5c_jump

	_074d8d_jump:
		mov    $0x000009,%bl
		mov    $0x00000d,%cl
		mov    %bl,0x000008(%esp)
		mov    $0x00000b,%bh
		mov    %cl,0x000010(%esp)
		mov    %bh,0x00000c(%esp)
		jmp    _074d5c_jump

	_074da1_jump:
		mov    (%esp),%ebx
		inc    %edi
		add    $0x000084,%ecx
		cmp    %bx,%di
		jge    _074e05_jump

	_074db0_jump:
		xor    %ebx,%ebx
		mov    0x000060(%ecx),%bx
		cmp    $0x00004f,%ebx
		jne    _074da1_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _074da1_jump
		mov    0x000008(%esp),%dl
		mov    0x00006c(%ecx),%bl
		cmp    %dl,%bl
		jne    _074ddb_jump
		lea    0x000004(%esp),%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _074b74_func
		jmp    _074da1_jump

	_074ddb_jump:
		cmp    0x00000c(%esp),%bl
		jne    _074df0_jump
		lea    0x000014(%esp),%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _074b74_func
		jmp    _074da1_jump

	_074df0_jump:
		cmp    0x000010(%esp),%bl
		jne    _074da1_jump
		lea    0x000018(%esp),%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _074b74_func
		jmp    _074da1_jump

	_074e05_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074e10_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _074e29_jump
		mov    $0x000001,%edx
		mov    %ebx,%eax
		call   _01d498_func

	_074e29_jump:
		mov    $0x000054,%eax
		call   _06b320_func
		cmpl   $0x000000,0x000024(%ebx)
		je     _074ebc_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		cmp    $0x000002,%eax
		jne    _074e83_jump
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		cmp    $0x000001,%eax
		jne    _074e83_jump
		mov    0x000028(%ebx),%ecx
		movw   $0x00ffff,0x000040(%ebx)
		add    $0x000014,%ecx
		mov    %ebx,%eax
		mov    %ecx,0x000028(%ebx)
		call   _074d30_func
		mov    0x000028(%ebx),%esi
		movw   $0x000001,0x000040(%ebx)
		sub    $0x000014,%esi
		mov    %ebx,%eax
		mov    %esi,0x000028(%ebx)
		call   _074d30_func
		addl   $0x00000a,0x000028(%ebx)
		jmp    _074e8a_jump

	_074e83_jump:
		mov    %ebx,%eax
		call   _074d30_func

	_074e8a_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		movl   $0x000000,0x000024(%ebx)
		cmp    $0x000024,%eax
		jne    _074ea5_jump
		andb   $0x0000fb,0x000081(%ebx)
		jmp    _074eb5_jump

	_074ea5_jump:
		mov    _0c247c_data,%eax
		sar    $0x000010,%eax
		add    $0x0001e4,%eax
		mov    %eax,0x00002c(%ebx)

	_074eb5_jump:
		mov    %ebx,%eax
		call   _072b98_func

	_074ebc_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_074ec0_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%ecx
		mov    %bl,0x000010(%esp)
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		cmp    $0x000023,%eax
		jne    _0750b5_jump
		mov    _0c1b04_data,%esi
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _074f06_jump
		jmp    _07522f_jump

	_074ef6_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _07522f_jump

	_074f06_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000024,%edx
		jne    _074ef6_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _074ef6_jump
		mov    0x000010(%esp),%bh
		movb   $0x0000c8,0x00007f(%esi)
		test   %bh,%bh
		je     _074f40_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _074f62_jump

	_074f40_jump:
		mov    0x000081(%edi),%ah
		lea    0x000081(%esi),%edx
		test   $0x000008,%ah
		sete   %al
		mov    (%edx),%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,(%edx)

	_074f62_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		mov    %cx,0x000042(%esi)
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _074f93_jump
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbw 0x000001(%edx,%eax,8),%ax
		jmp    _074fac_jump

	_074f93_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		movsbw (%eax,%edx,8),%ax

	_074fac_jump:
		mov    %ax,0x000040(%esi)
		mov    $0x00007a,%ecx
		xor    %eax,%eax
		mov    $0x000035,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _074fce_jump
		cmp    %ecx,%eax
		jg     _074fce_jump
		mov    $0x000001,%eax
		jmp    _074fd0_jump

	_074fce_jump:
		xor    %eax,%eax

	_074fd0_jump:
		test   %eax,%eax
		je     _074fdb_jump
		mov    $0x000003,%eax
		jmp    _075006_jump

	_074fdb_jump:
		mov    $0x000090,%ecx
		mov    $0x00007b,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _074ff7_jump
		cmp    %ecx,%eax
		jg     _074ff7_jump
		mov    $0x000001,%eax
		jmp    _074ff9_jump

	_074ff7_jump:
		xor    %eax,%eax

	_074ff9_jump:
		test   %eax,%eax
		je     _075001_jump
		xor    %eax,%eax
		jmp    _075006_jump

	_075001_jump:
		mov    $0xffffffff,%eax

	_075006_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _07522f_jump
		lea    0x000008(%esp),%eax
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000014(%esp),%ebx
		mov    %edi,%eax
		call   _01d840_func
		mov    0x00000a(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000011,%eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000074(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    $0x000002,%ebx
		mov    0x00002c(%esi),%ax
		mov    %ebx,%edx
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		call   _01d4a8_func
		mov    %esi,%eax
		call   _04d2c4_func
		mov    %esi,%eax
		call   _01dcec_func
		movb   $0x000000,0x000071(%esi)
		movb   $0x000007,0x000072(%esi)
		mov    0x000081(%esi),%dh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dh
		mov    %esi,%eax
		mov    %dh,0x000081(%esi)
		call   _01f584_func
		andb   $0x0000bf,0x000081(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0750b5_jump:
		mov    _0c1b04_data,%esi
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _0750e0_jump
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0750d0_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _07522f_jump

	_0750e0_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x00002c,%edx
		jne    _0750d0_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _0750d0_jump
		mov    0x000032(%esi),%edx
		mov    $0x00005a,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		cmpb   $0x000000,0x000010(%esp)
		je     _075125_jump
		mov    0x000081(%esi),%dl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%dl
		and    $0x000008,%al
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,0x000081(%esi)
		jmp    _075147_jump

	_075125_jump:
		mov    0x000081(%edi),%bl
		lea    0x000081(%esi),%edx
		test   $0x000008,%bl
		sete   %al
		mov    (%edx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%ah
		or     %al,%ah
		mov    %ah,(%edx)

	_075147_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		mov    %cx,0x000042(%esi)
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _075178_jump
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		movsbw 0x000001(%eax,%edx,8),%ax
		jmp    _075198_jump

	_075178_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		movsbw (%ebx,%eax,1),%ax

	_075198_jump:
		mov    %ax,0x000040(%esi)
		lea    0x000008(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000007,%edx
		mov    %edi,%eax
		call   _01d840_func
		mov    0x00000a(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000006,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _058bb4_func
		mov    %esi,%eax
		call   _01dcec_func
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f584_func

	_07522f_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_075238_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _074370_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _075380_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		jne    _075263_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000090,%eax
		jge    _075269_jump

	_075263_jump:
		movw   $0x000000,0x000052(%ecx)

	_075269_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _07527c_jump
		cmp    $0x000002,%eax
		jne    _07531c_jump

	_07527c_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _0752a0_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _0752c3_jump

	_0752a0_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_0752c3_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _07531c_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _07531c_jump
		cmpb   $0x000000,0x00007b(%ecx)
		je     _07530b_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _075315_jump

	_07530b_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_075315_jump:
		mov    %ecx,%eax
		call   _058bb4_func

	_07531c_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000002,%eax
		jne    _075386_jump
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _075386_jump
		mov    0x00006b(%ecx),%dl
		cmp    $0x000090,%edx
		jne    _075386_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%ecx),%edx
		mov    (%edx,%ebx,1),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _075386_jump
		mov    $0x000001,%ebx
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		call   _074ec0_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075380_jump:
		movw   $0x000000,0x000052(%ecx)

	_075386_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07538c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _074370_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _0754bc_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000006,%eax
		je     _0753b1_jump
		movw   $0x000000,0x000052(%ecx)

	_0753b1_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _0753c4_jump
		cmp    $0x000006,%eax
		jne    _075464_jump

	_0753c4_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%edx,%eax,8)
		je     _0753e8_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		test   %eax,%eax
		jmp    _07540b_jump

	_0753e8_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx

	_07540b_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _075464_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _075464_jump
		cmpb   $0x000000,0x00007b(%ecx)
		je     _075453_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _07545d_jump

	_075453_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_07545d_jump:
		mov    %ecx,%eax
		call   _058bb4_func

	_075464_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000006,%eax
		jne    _0754c2_jump
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jne    _0754c2_jump
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		dec    %eax
		xor    %edx,%edx
		mov    _0c2499_data(%eax),%dl
		cmp    %eax,%edx
		jne    _0754c2_jump
		mov    $0x000001,%ebx
		xor    %eax,%edx
		mov    %ecx,%eax
		call   _074ec0_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0754bc_jump:
		movw   $0x000000,0x000052(%ecx)

	_0754c2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0754c8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    %eax,%edi
		mov    %dx,0x00000c(%esp)
		mov    _0c1b04_data,%esi
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _0754ff_jump
		jmp    _07577f_jump

	_0754ef_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jge    _07577f_jump

	_0754ff_jump:
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		cmp    $0x000024,%edx
		jne    _0754ef_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _0754ef_jump
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		movb   $0x0000c8,0x00007f(%esi)
		test   %eax,%eax
		je     _07553c_jump
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _07555e_jump

	_07553c_jump:
		mov    0x000081(%edi),%ah
		lea    0x000081(%esi),%edx
		test   $0x000008,%ah
		sete   %al
		mov    (%edx),%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,(%edx)

	_07555e_jump:
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		mov    $0xffffffff,%edx
		test   %eax,%eax
		jne    _07559a_jump
		mov    0x00006c(%edi),%al
		cmp    $0x00000d,%eax
		jne    _07559a_jump
		mov    $0x000065,%ecx
		xor    %eax,%eax
		mov    $0x000034,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _075592_jump
		cmp    %ecx,%eax
		jg     _075592_jump
		mov    $0x000001,%eax
		jmp    _075594_jump

	_075592_jump:
		xor    %eax,%eax

	_075594_jump:
		test   %eax,%eax
		je     _0755d4_jump
		jmp    _0755cf_jump

	_07559a_jump:
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		test   %eax,%eax
		jne    _0755d4_jump
		mov    0x00006c(%edi),%al
		cmp    $0x000009,%eax
		jne    _0755d4_jump
		mov    $0x000037,%ecx
		xor    %eax,%eax
		mov    $0x000010,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _0755c9_jump
		cmp    %ecx,%eax
		jg     _0755c9_jump
		mov    $0x000001,%eax
		jmp    _0755cb_jump

	_0755c9_jump:
		xor    %eax,%eax

	_0755cb_jump:
		test   %eax,%eax
		je     _0755d4_jump

	_0755cf_jump:
		mov    $0x000003,%edx

	_0755d4_jump:
		movswl %dx,%edx
		cmp    $0xffffffff,%edx
		jne    _075641_jump
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0755e4_jump:
		mov    $0xfffffffe,%edx
		mov    _0c1ed3_data,%al
		mov    %edx,0x000008(%esp)
		dec    %al
		add    %al,0x000076(%edi)
		jmp    _075677_jump

	_0755fc_jump:
		movl   $0x000001,0x000008(%esp)
		jmp    _075677_jump

	_075609_jump:
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		cmp    $0x000002,%eax
		jne    _07562b_jump
		mov    _0c2492_data,%ax
		mov    %ax,0x00004e(%esi)
		mov    _0c2494_data,%ax
		mov    %ax,0x00004c(%esi)
		jmp    _075677_jump

	_07562b_jump:
		mov    _0c1b44_data,%ax
		mov    %ax,0x00004e(%esi)
		mov    _0c1b48_data,%ax
		mov    %ax,0x00004c(%esi)
		jmp    _075677_jump

	_075641_jump:
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000020(%esp),%ebx
		mov    %edi,%eax
		call   _01d840_func
		mov    0x00000c(%esp),%edx
		cmp    $0x000001,%dx
		jb     _07566e_jump
		jbe    _0755fc_jump
		cmp    $0x000002,%dx
		je     _075609_jump
		jmp    _075677_jump

	_07566e_jump:
		test   %dx,%dx
		je     _0755e4_jump

	_075677_jump:
		mov    0x000016(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    0x000002(%esp),%edx
		sar    $0x000011,%edx
		add    %edx,%eax
		mov    %eax,0x000028(%esi)
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		mov    0x000028(%esi),%ax
		mov    %edx,0x00002c(%esi)
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000002,%eax
		je     _07571a_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		jne    _0756eb_jump
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		movsbw 0x000001(%eax,%edx,8),%ax
		jmp    _075704_jump

	_0756eb_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbw (%edx,%eax,8),%ax

	_075704_jump:
		mov    %eax,0x000014(%esp)
		mov    %esi,%eax
		call   _04d2c4_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d498_func
		jmp    _07573c_jump

	_07571a_jump:
		mov    $0x000001,%edx
		mov    $0x00001e,%ecx
		mov    %esi,%eax
		lea    0x000008(%esp),%ebx
		call   _01d498_func
		push   $0x000003
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01e94c_func

	_07573c_jump:
		mov    0x000014(%esp),%eax
		mov    %ax,0x000040(%esi)
		mov    0x000008(%esp),%eax
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01dcec_func
		movb   $0x000000,0x000071(%esi)
		movb   $0x000007,0x000072(%esi)
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f584_func
		andb   $0x0000bf,0x000081(%esi)

	_07577f_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_075788_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _0758c2_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000d,%eax
		jne    _0757ac_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000065,%eax
		jge    _0757c6_jump

	_0757ac_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000009,%eax
		jne    _0757c0_jump
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000037,%eax
		jge    _0757c6_jump

	_0757c0_jump:
		movw   $0x000000,0x000052(%ecx)

	_0757c6_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _0757d9_jump
		cmp    $0x00000e,%eax
		je     _0757d9_jump
		cmp    $0x000008,%eax
		jne    _07580a_jump

	_0757d9_jump:
		xor    %eax,%eax
		mov    0x00006b(%ecx),%al
		cmp    $0x000001,%eax
		jge    _07580a_jump
		xor    %eax,%eax
		mov    0x00007b(%ecx),%al
		cmp    $0x000002,%eax
		jl     _0757f9_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _075803_jump

	_0757f9_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx

	_075803_jump:
		mov    %ecx,%eax
		call   _058bb4_func

	_07580a_jump:
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%edx
		cmp    $0x00000d,%eax
		jne    _075872_jump
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _0758c8_jump
		mov    0x00006b(%ecx),%al
		cmp    $0x000065,%eax
		jne    _0758c8_jump
		xor    %eax,%eax
		mov    0x00000c(%ecx),%ebx
		mov    0x00006d(%ecx),%al
		mov    (%ebx,%eax,4),%eax
		mov    0x000005(%edx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0758c8_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _0754c8_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075872_jump:
		cmp    $0x000009,%eax
		jne    _0758c8_jump
		mov    0x000050(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jne    _0758c8_jump
		mov    0x00006b(%ecx),%al
		cmp    $0x000037,%eax
		jne    _0758c8_jump
		xor    %eax,%eax
		mov    0x00000c(%ecx),%ebx
		mov    0x00006d(%ecx),%al
		mov    (%ebx,%eax,4),%eax
		mov    0x000005(%edx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0c2498_data(%eax),%al
		and    $0x0000ff,%eax
		jne    _0758c8_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _0754c8_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0758c2_jump:
		movw   $0x000000,0x000052(%ecx)

	_0758c8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0758cc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %dx,(%esp)
		cmp    $0x000008,%dx
		jb     _0758fe_jump
		jbe    _0758f0_jump
		cmp    $0x000009,%dx
		je     _0758f7_jump
		jmp    _075904_jump

	_0758e9_jump:
		mov    $0xfffffffd,%edi
		jmp    _075904_jump

	_0758f0_jump:
		mov    $0x000002,%edi
		jmp    _075904_jump

	_0758f7_jump:
		mov    $0xffffffff,%edi
		jmp    _075904_jump

	_0758fe_jump:
		cmp    $0x000007,%dx
		je     _0758e9_jump

	_075904_jump:
		mov    _0c1b04_data,%ecx
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _07592d_jump
		jmp    _0759a6_jump

	_07591d_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jge    _0759a6_jump

	_07592d_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		cmp    $0x00006e,%edx
		jne    _07591d_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _07591d_jump
		mov    $0x000002,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    (%esp),%bl
		call   _01d4a8_func
		movw   $0x00fffa,0x000042(%ecx)
		mov    %di,0x000040(%ecx)
		mov    0x000028(%esi),%edx
		mov    %edx,0x000028(%ecx)
		mov    $0x000001,%ebx
		mov    0x00002c(%esi),%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    %ebx,%edx
		call   _058bb4_func
		mov    %ecx,%eax
		call   _01dcec_func
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f584_func
		movb   $0x000000,0x000071(%ecx)
		mov    0x000081(%ecx),%dl
		movb   $0x000005,0x000072(%ecx)
		and    $0x0000bf,%dl
		mov    %dl,0x000081(%ecx)

	_0759a6_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_0759b0_switch:
		.long   _075a51_case
		.long   _075a62_case
		.long   _075a70_case
		.long   _075a7e_case
		.long   _075a8c_case




_0759c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,(%esp)
		mov    $0x000054,%eax
		call   _06b320_func
		mov    _0c1b04_data,%ebp
		mov    _0c1b08_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _0759fc_jump
		jmp    _075a1d_jump

	_0759f0_jump:
		inc    %eax
		add    $0x000084,%ebp
		cmp    %bx,%ax
		jge    _075a1d_jump

	_0759fc_jump:
		xor    %edx,%edx
		mov    0x000060(%ebp),%dx
		cmp    $0x00006e,%edx
		jne    _0759f0_jump
		mov    %ebp,%edi

	_075a09_jump:
		xor    %eax,%eax
		mov    0x0000e4(%edi),%ax
		add    $0x000084,%edi
		cmp    $0x00006e,%eax
		je     _075a09_jump

	_075a1d_jump:
		xor    %eax,%eax
		mov    0x000060(%ebp),%ax
		cmp    $0x00006e,%eax
		jne    _075b5f_jump
		xor    %edx,%edx
		mov    %dx,0x000010(%esp)
		jmp    _075b3f_jump

	_075a38_jump:
		add    $0x000084,%esi
		cmp    %edi,%esi
		ja     _075a48_jump

	_075a42_jump:
		cmpl   $0x000000,0x000024(%esi)
		jne    _075a38_jump

	_075a48_jump:
		cmp    %edi,%esi
		jbe    _075a9a_jump
		jmp    _075b3a_jump

	_075a51_case:
		movw   $0x000000,0x000042(%esi)
		movw   $0x000004,0x000040(%esi)
		jmp    _075ad2_jump

	_075a62_case:
		movw   $0x000000,0x000042(%esi)
		movw   $0x00fffe,0x000040(%esi)
		jmp    _075ad2_jump

	_075a70_case:
		movw   $0x00fffc,0x000042(%esi)
		movw   $0x00fffc,0x000040(%esi)
		jmp    _075ad2_jump

	_075a7e_case:
		movw   $0x00fffc,0x000042(%esi)
		movw   $0x000002,0x000040(%esi)
		jmp    _075ad2_jump

	_075a8c_case:
		movw   $0x00fffa,0x000042(%esi)
		movw   $0x00ffff,0x000040(%esi)
		jmp    _075ad2_jump

	_075a9a_jump:
		mov    $0x000002,%edx
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    0x000010(%esp),%bl
		call   _01d4a8_func
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    0x000010(%esp),%ebx
		mov    %ah,0x000081(%esi)
		cmp    $0x000004,%bx
		ja     _075ad2_jump
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    *%cs:_0759b0_switch(,%eax,4)

	_075ad2_jump:
		lea    0x000014(%esp),%eax
		mov    0x00000e(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    0x000008(%esp),%eax
		call   _01d840_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		mov    0x000006(%esp),%eax
		mov    $0x000001,%ebx
		sar    $0x000010,%eax
		mov    %ebx,%edx
		mov    %eax,0x00002c(%esi)
		mov    %esi,%eax
		call   _058bb4_func
		mov    %esi,%eax
		call   _01dcec_func
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f584_func

	_075b3a_jump:
		incw   0x000010(%esp)

	_075b3f_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000005,%eax
		jge    _075b5f_jump
		mov    %ebp,%esi
		cmp    %edi,%ebp
		jbe    _075a42_jump
		cmp    %edi,%esi
		jbe    _075a9a_jump
		jmp    _075b3a_jump

	_075b5f_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx

	_075b67_jump:
		pop    %ebx
		ret    

_075b6c_switch:
		.long   _075c0d_case
		.long   _075bf3_case
		.long   _075bd9_case
		.long   _075b9a_case




_075b7c_func:
		push   %ebx
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		test   %eax,%eax
		jne    _075b67_jump
		mov    _0c24e2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _075c79_jump
		pop    %ebx
		ret    

	_075b9a_case:
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d498_func
		mov    $0x000007,%edx
		mov    %ebx,%eax
		call   _0758cc_func
		mov    _0c24e2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    $0x000006,%edx
		call   _01d498_func
		pop    %ebx
		ret    

	_075bd9_case:
		mov    $0x000006,%edx
		mov    %ebx,%eax
		call   _01d498_func
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _0758cc_func
		pop    %ebx
		ret    

	_075bf3_case:
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d498_func
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _0758cc_func
		pop    %ebx
		ret    

	_075c0d_case:
		mov    _0c24e2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		mov    0x00006c(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		cmp    $0x000006,%eax
		jne    _075b67_jump
		mov    0x000032(%ebx),%edx
		mov    $0x000053,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _01d498_func
		mov    _0c24e2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0c1b04_data,%edx
		movb   $0x000003,0x00006c(%edx,%eax,4)
		movb   $0x000004,0x00006e(%edx,%eax,4)
		movb   $0x00000a,0x00006e(%ebx)
		pop    %ebx
		ret    

	_075c79_jump:
		mov    0x000032(%ebx),%edx
		mov    $0x000053,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		mov    0x000076(%ebx),%ah
		dec    %ah
		mov    %ah,0x000076(%ebx)
		mov    %ah,%al
		cmp    $0x000003,%ah
		ja     _075b67_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_075b6c_switch(,%eax,4)



_075cac_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _075d1e_jump
		mov    %ecx,%eax
		call   _01e92c_func
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _075d0e_jump
		mov    %ecx,%eax
		call   _0759c4_func
		movl   $0x000000,0x000024(%ecx)
		mov    0x000034(%ecx),%dx
		cmp    _0c1b66_data,%dx
		jne    _075d04_jump
		movw   $0x00ffff,_0c1b66_data
		mov    $0x000002,%ebx
		mov    $_0c1b1c_data,%eax
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d4a8_func

	_075d04_jump:
		andb   $0x0000fb,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_075d0e_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d498_func
		movb   $0x000000,0x00006b(%ecx)

	_075d1e_jump:
		pop    %ecx
		pop    %ebx
		ret    



_075d24_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _075d3c_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _075d43_jump

	_075d3c_jump:
		mov    %ecx,%eax
		call   _01e92c_func

	_075d43_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,(%esp)
		mov    %ecx,%eax
		mov    $0x000008,%edx
		call   _01dc54_func
		mov    %ecx,%eax
		call   _058bb4_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    (%esp),%al
		je     _075da2_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _058bb4_func
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x000023,%eax
		jne    _075da2_jump
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _074ec0_func

	_075da2_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		cmp    $0x000003,%eax
		jge    _075df6_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		cmp    $0x000023,%eax
		jne    _075dc5_jump
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _074ec0_func

	_075dc5_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		jne    _075de4_jump
		mov    $0x000001,%ebx
		mov    0x000077(%ecx),%al
		xor    %edx,%edx
		mov    %al,0x000076(%ecx)
		mov    %ecx,%eax
		call   _058bb4_func
		jmp    _075df6_jump

	_075de4_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _058bb4_func
		movb   $0x000002,0x000073(%ecx)

	_075df6_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_075dfc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e92c_func
		movb   $0x000000,0x00007f(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%bl
		call   _01dc54_func
		mov    0x000032(%ecx),%edx
		mov    $0x000056,%eax
		sar    $0x000010,%edx
		call   _06ac04_func
		mov    0x000081(%ecx),%dl
		shl    $0x000004,%bl
		shl    $0x000004,%dl
		shr    $0x000007,%bl
		shr    $0x000007,%dl
		cmp    %bl,%dl
		je     _075e56_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000001,%ebx
		call   _0754c8_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		pop    %ecx
		pop    %ebx
		ret    

	_075e56_jump:
		xor    %edx,%edx
		mov    0x000076(%ecx),%dl
		cmp    $0x00000f,%edx
		jge    _075ea5_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _0754c8_func
		xor    %edx,%edx
		mov    0x000076(%ecx),%dl
		test   %edx,%edx
		jne    _075e89_jump
		mov    $0x000001,%ebx
		mov    0x000077(%ecx),%dl
		mov    %ecx,%eax
		mov    %dl,0x000076(%ecx)
		xor    %edx,%edx
		call   _058bb4_func
		pop    %ecx
		pop    %ebx
		ret    

	_075e89_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		cmp    $0x000001,%edx
		je     _075ea1_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _058bb4_func

	_075ea1_jump:
		movb   $0x000002,0x000073(%ecx)

	_075ea5_jump:
		pop    %ecx
		pop    %ebx
		ret    



_075ea8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _075edc_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		je     _075eed_jump
		cmp    $0x000002,%eax
		je     _075eed_jump
		cmp    $0x000005,%eax
		je     _075eed_jump
		cmp    $0x000006,%eax
		je     _075eed_jump
		cmp    $0x000003,%eax
		je     _075eed_jump
		cmp    $0x000007,%eax
		je     _075eed_jump
		cmp    $0x000004,%eax
		je     _075eed_jump

	_075edc_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _058bb4_func

	_075eed_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075ef4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _075f09_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _075f1c_jump

	_075f09_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _075f35_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _075f35_jump

	_075f1c_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _058bb4_func
		movb   $0x000007,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)

	_075f35_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075f40_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %ebx,%ebp
		mov    %edx,%eax
		lea    0x00c800(%edx),%eax
		mov    %ecx,%ebx
		mov    %eax,(%esp)

	_075f58_jump:
		mov    %ebp,%ecx
		mov    %edx,%edi
		mov    %ebx,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _075f68_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_075f68_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    (%esp),%ecx
		add    $0x000100,%edx
		add    $0x000140,%ebx
		cmp    %ecx,%edx
		jne    _075f58_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_075f8c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %edx,%ecx
		mov    %ebx,%ebp
		mov    %eax,%edx
		add    $0x00c800,%eax
		mov    %ecx,%ebx
		mov    %eax,(%esp)

	_075fa3_jump:
		mov    %ebp,%ecx
		mov    %ebx,%edi
		mov    %edx,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _075fb3_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_075fb3_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    (%esp),%ecx
		add    $0x000100,%edx
		add    $0x000140,%ebx
		cmp    %ecx,%edx
		jne    _075fa3_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_075fe0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _076091_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%eax
		jne    _076091_jump
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		mov    %ecx,%eax
		call   _076258_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076015_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		mov    %ecx,%eax
		call   _076258_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076030_jump:
		and    $0x0000ff,%eax
		jne    _076040_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _076047_jump

	_076040_jump:
		orb    $0x000008,0x000081(%ecx)

	_076047_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _076057_jump
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		je     _07606a_jump

	_076057_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000001,%eax
		jne    _0760a4_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %eax,%eax
		jne    _0760a4_jump

	_07606a_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d4a8_func
		mov    %ecx,%eax
		call   _04d2c4_func

	_07607f_jump:
		mov    %ecx,%eax
		call   _024ba8_func
		mov    %ecx,%eax
		call   _076258_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076091_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000002,%al
		jb     _076030_jump
		jbe    _07607f_jump
		cmp    $0x000014,%al
		jb     _0760a4_jump
		jbe    _076015_jump

	_0760a4_jump:
		mov    %ecx,%eax
		call   _076258_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0760b0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dl,0x000010(%esp)
		lea    0x00000c(%esp),%ecx
		movb   $0x000064,0x00007f(%eax)
		lea    0x000008(%esp),%eax
		mov    %esp,%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01d3c0_func
		testb  $0x000008,0x000081(%esi)
		je     _0760f4_jump
		mov    0x00000c(%esp),%eax
		mov    0x000004(%esp),%ebx
		sub    $0x000010,%eax
		add    %eax,%ebx
		mov    %bx,0x000004(%esp)
		jmp    _076108_jump

	_0760f4_jump:
		mov    0x00000c(%esp),%eax
		mov    0x000004(%esp),%edx
		add    $0x00004c,%eax
		sub    %eax,%edx
		mov    %dx,0x000004(%esp)

	_076108_jump:
		mov    0x00000c(%esp),%ecx
		add    $0x00005c,%ecx
		mov    0x000008(%esp),%eax
		mov    %cx,0x00000c(%esp)
		mov    $0x000001,%cl
		test   %ax,%ax
		js     _076124_jump
		sar    %cl,%ax
		jmp    _07612d_jump

	_076124_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07612d_jump:
		add    $0x000002,%eax
		mov    $0x000002,%cl
		mov    %ax,0x000008(%esp)
		test   %ax,%ax
		js     _076143_jump
		sar    %cl,%ax
		jmp    _07614c_jump

	_076143_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07614c_jump:
		mov    (%esp),%edi
		add    %eax,%edi
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    _0c2578_data,%ecx
		sar    $0x000010,%eax
		mov    %di,0x000004(%esp)
		push   %eax
		mov    0x000006(%esp),%eax
		mov    _0c2576_data,%ebx
		sar    $0x000010,%eax
		mov    _0c2574_data,%edx
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    _0c2572_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02aa7c_func
		test   %ax,%ax
		je     _076222_jump
		mov    $0x000001,%cl
		mov    _0c2578_data,%ax
		test   %ax,%ax
		js     _0761b9_jump
		sar    %cl,%ax
		jmp    _0761c2_jump

	_0761b9_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0761c2_jump:
		mov    $0x000001,%cl
		mov    _0c257a_data,%ax
		test   %ax,%ax
		js     _0761d4_jump
		sar    %cl,%ax
		jmp    _0761dd_jump

	_0761d4_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0761dd_jump:
		mov    0x000081(%esi),%dl
		shl    $0x000004,%dl
		mov    $0x000007,%eax
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		jne    _0761fe_jump
		mov    0x000010(%esp),%dl
		test   %edx,%edx
		je     _076220_jump

	_0761fe_jump:
		mov    0x000081(%esi),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		and    $0x0000ff,%edx
		cmp    $0x000001,%edx
		jne    _076222_jump
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		cmp    $0x000001,%edx
		jne    _076222_jump

	_076220_jump:
		neg    %eax

	_076222_jump:
		test   %ax,%ax
		je     _076250_jump
		mov    _0c2568_data,%dx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0c1b89_data,%al
		mov    %dx,_0c2568_data
		cmp    $0x000005,%eax
		je     _076250_jump
		mov    $0x000008,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %ax,_0c2584_data

	_076250_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_076258_func:
		push   %edx
		mov    0x00007f(%eax),%dl
		test   %dl,%dl
		je     _076267_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,0x00007f(%eax)

	_076267_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _0762b3_jump
		mov    0x00006c(%eax),%dl
		cmp    $0x000002,%edx
		jne    _076282_jump
		xor    %edx,%edx
		mov    0x00006b(%eax),%dl
		cmp    $0x00000a,%edx
		jge    _07628c_jump

	_076282_jump:
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000004,%edx
		jne    _076290_jump

	_07628c_jump:
		xor    %edx,%edx
		jmp    _0762ae_jump

	_076290_jump:
		cmp    $0x000006,%edx
		jne    _07629f_jump
		xor    %edx,%edx
		mov    0x00006b(%eax),%dl
		cmp    $0x00000a,%edx
		jge    _0762a9_jump

	_07629f_jump:
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000007,%edx
		jne    _0762b3_jump

	_0762a9_jump:
		mov    $0x000001,%edx

	_0762ae_jump:
		call   _0760b0_func

	_0762b3_jump:
		pop    %edx
		ret    



_0762b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		call   _058bb4_func
		mov    %ecx,%eax
		call   _024ec4_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0762d8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e92c_func
		mov    _0c1ec0_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jle    _0762f9_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _076302_jump

	_0762f9_jump:
		jge    _076302_jump
		orb    $0x000008,0x000081(%ecx)

	_076302_jump:
		xor    %eax,%eax
		mov    0x000076(%ecx),%al
		test   %eax,%eax
		je     _076328_jump
		mov    0x00002c(%ecx),%edx
		mov    $0x000001,%ebx
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000004,%edx
		call   _058bb4_func
		pop    %ecx
		pop    %ebx
		ret    

	_076328_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		mov    0x000081(%ecx),%dh
		movb   $0x000002,0x000070(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_07634c_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00007f(%eax),%dl
		test   %edx,%edx
		jne    _076387_jump
		mov    0x00006d(%eax),%dl
		test   %edx,%edx
		jne    _076365_jump
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		je     _076378_jump

	_076365_jump:
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		cmp    $0x000001,%edx
		jne    _076387_jump
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		test   %edx,%edx
		jne    _076387_jump

	_076378_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		call   _058bb4_func

	_076387_jump:
		pop    %edx
		pop    %ebx
		ret    



_076390_func:
		push   %esi
		push   %edi
		push   %ebp
		movswl %cx,%ecx
		mov    0x00002c(%eax),%ebp
		movswl %bx,%ebx
		add    %ebp,%ecx
		mov    0x000028(%eax),%edi
		sar    $0x000004,%ecx
		add    %edi,%ebx
		mov    %ecx,%edi
		mov    _0c24b4_data,%cx
		imul   %edi,%ecx
		sar    $0x000004,%ebx
		add    %ebx,%ecx
		xor    %esi,%esi
		mov    %cx,(%edx)
		cmp    0x000058(%eax),%cx
		je     _076433_jump
		mov    %cx,0x000058(%eax)
		mov    _0c24b2_data,%ecx
		movswl %bx,%eax
		sar    $0x000010,%ecx
		xor    %ebx,%ebx
		dec    %ecx
		cmp    %ebx,%eax
		jl     _0763e4_jump
		cmp    %ecx,%eax
		jg     _0763e4_jump
		mov    $0x000001,%eax
		jmp    _0763e6_jump

	_0763e4_jump:
		xor    %eax,%eax

	_0763e6_jump:
		test   %eax,%eax
		je     _076433_jump
		mov    _0c24b4_data,%ecx
		movswl %di,%eax
		sar    $0x000010,%ecx
		xor    %ebx,%ebx
		dec    %ecx
		cmp    %ebx,%eax
		jl     _076408_jump
		cmp    %ecx,%eax
		jg     _076408_jump
		mov    $0x000001,%eax
		jmp    _07640a_jump

	_076408_jump:
		xor    %eax,%eax

	_07640a_jump:
		test   %eax,%eax
		je     _076433_jump
		movswl (%edx),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0c24bc_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		cmp    $0x000001,%eax
		sete   %al
		xor    %ah,%ah
		mov    %eax,%esi

	_076433_jump:
		mov    %esi,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

_07643c_switch:
		.long   _076727_case
		.long   _0767bd_case
		.long   _07679f_case
		.long   _076783_case
		.long   _0766e7_case
		.long   _076723_case
		.long   _07675d_case
		.long   _07679b_case
		.long   _076560_case
		.long   _0765d1_case
		.long   _0765d1_case
		.long   _07665c_case
		.long   _07665c_case




_076470_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    0x000081(%eax),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%edi)
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		test   %eax,%eax
		jne    _076822_jump
		mov    0x00006c(%edi),%al
		cmp    $0x00000e,%eax
		jne    _076822_jump
		lea    0x000004(%esp),%edx
		mov    %edi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    0x000069(%edi),%cl
		mov    0x000068(%edi),%bl
		call   _076390_func
		test   %ax,%ax
		je     _076822_jump
		mov    _0c2390_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0c1b04_data,%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		mov    _0c245a_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jg     _07651b_jump
		jmp    _076822_jump

	_0764ef_jump:
		inc    %eax
		movswl %ax,%edx
		mov    _0c2390_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0c1b04_data,%ebx
		mov    _0c245a_data,%cx
		add    %ebx,%edx
		cmp    %cx,%ax
		jge    _076822_jump

	_07651b_jump:
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		cmp    $0x0000a3,%ebx
		jne    _0764ef_jump
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%ecx
		mov    0x000069(%edx),%bl
		add    %ecx,%ebx
		mov    _0c24b2_data,%ecx
		sar    $0x000004,%ebx
		sar    $0x000010,%ecx
		imul   %ebx,%ecx
		xor    %ebx,%ebx
		mov    0x000028(%edx),%esi
		mov    0x000068(%edx),%bl
		add    %esi,%ebx
		sar    $0x000004,%ebx
		mov    0x000004(%esp),%esi
		add    %ecx,%ebx
		cmp    %si,%bx
		je     _0767d3_jump
		jmp    _0764ef_jump

	_076560_case:
		test   %ebp,%ebp
		jne    _076581_jump
		mov    (%esp),%ebx
		test   %ebx,%ebx
		jle    _076574_jump
		mov    %eax,%ecx
		neg    %ecx
		jmp    _07681a_jump

	_076574_jump:
		jge    _07681a_jump
		mov    %eax,%ecx
		jmp    _07681a_jump

	_076581_jump:
		cmpl   $0x000000,(%esp)
		jne    _0765bb_jump
		test   %ebp,%ebp
		jle    _0765a1_jump
		mov    %eax,%esi
		neg    %esi
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0765a1_jump:
		jge    _07681a_jump
		mov    %eax,%esi
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0765bb_jump:
		neg    %esi
		neg    %ecx
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0765d1_case:
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x000009,%eax
		jne    _0765e2_jump
		mov    $0x000001,%eax
		jmp    _0765e7_jump

	_0765e2_jump:
		mov    $0xffffffff,%eax

	_0765e7_jump:
		mov    %eax,%edx
		movswl %cx,%eax
		test   %eax,%eax
		jne    _07663d_jump
		movswl %si,%eax
		test   %eax,%eax
		jle    _076619_jump
		mov    0x000008(%esp),%esi
		add    %edx,%esi
		movswl %si,%eax
		cmp    $0x000004,%eax
		jle    _07660a_jump
		mov    $0x000004,%esi

	_07660a_jump:
		movswl %si,%eax
		cmp    $0x000002,%eax
		jge    _07663d_jump
		mov    $0x000002,%esi
		jmp    _07663d_jump

	_076619_jump:
		jge    _07663d_jump
		mov    0x000008(%esp),%ebx
		mov    %edx,%esi
		sub    %ebx,%esi
		movswl %si,%eax
		cmp    $0xfffffffe,%eax
		jle    _076630_jump
		mov    $0xfffffffe,%esi

	_076630_jump:
		movswl %si,%eax
		cmp    $0xfffffffc,%eax
		jge    _07663d_jump
		mov    $0xfffffffc,%esi

	_07663d_jump:
		movswl %si,%eax
		test   %eax,%eax
		je     _07681a_jump
		xor    %ecx,%ecx
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07665c_case:
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		cmp    $0x00000b,%eax
		jne    _07666d_jump
		mov    $0x000001,%eax
		jmp    _076672_jump

	_07666d_jump:
		mov    $0xffffffff,%eax

	_076672_jump:
		mov    %eax,%edx
		movswl %si,%eax
		test   %eax,%eax
		jne    _0766c8_jump
		movswl %cx,%eax
		test   %eax,%eax
		jle    _0766a4_jump
		mov    0x000008(%esp),%ecx
		add    %edx,%ecx
		movswl %cx,%eax
		cmp    $0x000004,%eax
		jle    _076695_jump
		mov    $0x000004,%ecx

	_076695_jump:
		movswl %cx,%eax
		cmp    $0x000002,%eax
		jge    _0766c8_jump
		mov    $0x000002,%ecx
		jmp    _0766c8_jump

	_0766a4_jump:
		jge    _0766c8_jump
		mov    0x000008(%esp),%eax
		mov    %edx,%ecx
		sub    %eax,%ecx
		movswl %cx,%eax
		cmp    $0xfffffffe,%eax
		jle    _0766bb_jump
		mov    $0xfffffffe,%ecx

	_0766bb_jump:
		movswl %cx,%eax
		cmp    $0xfffffffc,%eax
		jge    _0766c8_jump
		mov    $0xfffffffc,%ecx

	_0766c8_jump:
		movswl %cx,%eax
		test   %eax,%eax
		je     _07681a_jump
		xor    %esi,%esi
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0766e7_case:
		test   %ebp,%ebp
		jne    _076701_jump
		mov    %eax,%esi
		xor    %ecx,%ecx
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076701_jump:
		cmpl   $0x000000,(%esp)
		jne    _07681a_jump
		mov    %eax,%ecx
		xor    %esi,%esi
		neg    %ecx
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076723_case:
		test   %ebp,%ebp
		jne    _07673d_jump

	_076727_case:
		mov    %eax,%esi
		xor    %ecx,%ecx
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07673d_jump:
		cmpl   $0x000000,(%esp)
		jne    _07681a_jump
		mov    %eax,%ecx
		xor    %esi,%esi
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07675d_case:
		test   %ebp,%ebp
		jne    _076779_jump
		mov    %eax,%esi
		xor    %ecx,%ecx
		neg    %esi
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076779_jump:
		cmpl   $0x000000,(%esp)
		jne    _07681a_jump

	_076783_case:
		mov    %eax,%ecx
		xor    %esi,%esi
		neg    %ecx
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07679b_case:
		test   %ebp,%ebp
		jne    _0767b7_jump

	_07679f_case:
		mov    %eax,%esi
		xor    %ecx,%ecx
		neg    %esi
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0767b7_jump:
		cmpl   $0x000000,(%esp)
		jne    _07681a_jump

	_0767bd_case:
		mov    %eax,%ecx
		xor    %esi,%esi
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0767d3_jump:
		mov    0x000042(%edi),%cx
		mov    0x000040(%edi),%si
		movswl %cx,%eax
		movswl %si,%ebp
		mov    %eax,(%esp)
		test   %eax,%eax
		jge    _0767ea_jump
		neg    %eax

	_0767ea_jump:
		mov    %eax,%ebx
		mov    %ebp,%eax
		test   %eax,%eax
		jge    _0767f4_jump
		neg    %eax

	_0767f4_jump:
		cmp    %ebx,%eax
		jge    _0767fa_jump
		mov    %ebx,%eax

	_0767fa_jump:
		mov    0x00006c(%edx),%bl
		mov    %eax,0x000008(%esp)
		mov    %bl,0x00000c(%esp)
		cmp    $0x00000c,%bl
		ja     _07681a_jump
		xor    %ebx,%ebx
		mov    0x00000c(%esp),%bl
		shl    $0x000002,%ebx
		jmp    *%cs:_07643c_switch(%ebx)

	_07681a_jump:
		mov    %si,0x000040(%edi)
		mov    %cx,0x000042(%edi)

	_076822_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx

	_076829_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07682c_func:
		push   %edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000003,%dl
		ja     _07684a_jump
		mov    0x000081(%eax),%dl
		movb   $0x000004,0x00007e(%eax)
		and    $0x0000f7,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    

	_07684a_jump:
		movb   $0x000000,0x00007e(%eax)
		pop    %edx
		ret    

_076850_switch:
		.long   _0768ca_case
		.long   _0768d7_case
		.long   _0768e4_case
		.long   _0768f1_case




_076860_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		cmp    $0x000005,%eax
		jne    _076829_jump
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		cmp    $0x000035,%eax
		jne    _076829_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000eb,%eax
		sar    $0x000010,%edx
		mov    $0x000036,%ebx
		call   _06ac04_func
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d4a8_func
		mov    0x000032(%ecx),%edx
		mov    _0c1b00_data,%eax
		sar    $0x000010,%edx
		movswl (%eax,%edx,2),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0c1b04_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		cmp    $0x0000a3,%edx
		je     _0768fb_jump
		pop    %ecx
		pop    %ebx
		ret    

	_0768ca_case:
		mov    $0x000001,%edx
		call   _01d498_func
		pop    %ecx
		pop    %ebx
		ret    

	_0768d7_case:
		mov    $0x000002,%edx
		call   _01d498_func
		pop    %ecx
		pop    %ebx
		ret    

	_0768e4_case:
		mov    $0x000003,%edx
		call   _01d498_func
		pop    %ecx
		pop    %ebx
		ret    

	_0768f1_case:
		xor    %edx,%edx
		call   _01d498_func
		pop    %ecx
		pop    %ebx
		ret    

	_0768fb_jump:
		mov    0x00006c(%eax),%cl
		cmp    $0x000003,%cl
		ja     _076829_jump
		xor    %edx,%edx
		mov    %cl,%dl
		jmp    *%cs:_076850_switch(,%edx,4)



_076914_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		test   %eax,%eax
		jne    _076944_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000d,%eax
		jne    _076944_jump
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d4a8_func
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)

	_076944_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076950_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%edi
		mov    %edx,%ebx
		mov    $0x000140,%eax
		mov    _0ddc84_data,%esi
		mov    %eax,%edx
		movzbl (%esi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %al,0x00001c(%esp)
		mov    $0x0000c8,%eax
		mov    %eax,%edx
		movzbl 0x000001(%esi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00001c(%esi),%ecx
		mov    %al,0x000014(%esp)
		call   _010010_func
		movw   $0x000000,0x000004(%esi)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _0769a8_jump
		mov    %ebx,%eax

	_0769a8_jump:
		movswl %di,%ebx
		mov    %ax,0x000006(%esi)
		test   %ebx,%ebx
		jl     _0769c0_jump
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _0769be_jump
		mov    %ebx,%eax

	_0769be_jump:
		jmp    _0769cf_jump

	_0769c0_jump:
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _0769cd_jump
		mov    %ebx,%eax

	_0769cd_jump:
		neg    %eax

	_0769cf_jump:
		mov    %ax,0x000008(%esi)
		xor    %ah,%ah
		mov    %ah,0x000010(%esp)
		mov    0x000014(%esp),%al
		mov    %al,(%esp)
		mul    %ah
		mov    %al,0x000004(%esp)
		xor    %dl,%dl

	_0769e8_jump:
		mov    0x000004(%esp),%al
		mov    %al,0x000018(%esp)

	_0769f0_jump:
		xor    %ah,%ah
		xor    %bh,%bh
		mov    0x00001c(%esp),%al
		mov    %dl,%bl
		imul   %ebx,%eax
		mov    %eax,%ebx
		mov    %ax,0x000004(%ecx)
		xor    %ah,%bh
		mov    %ax,(%ecx)
		mov    0x000018(%esp),%bl
		xor    %edi,%edi
		mov    %bl,0x000006(%ecx)
		mov    %ax,%di
		mov    %bl,0x000002(%ecx)
		cmp    $0x0000a0,%edi
		jge    _076a75_jump
		mov    0x000014(%esi),%edi
		mov    %edi,0x000008(%ecx)

	_076a25_jump:
		mov    %al,0x00002e(%ecx)
		mov    %al,0x00002c(%ecx)
		add    0x00001c(%esp),%al
		dec    %al
		mov    %al,0x000032(%ecx)
		mov    %al,0x000030(%ecx)
		mov    0x000014(%esp),%al
		mov    %bl,0x000033(%ecx)
		add    %bl,%al
		mov    %bl,0x00002d(%ecx)
		dec    %al
		mov    %al,0x000031(%ecx)
		inc    %dl
		mov    %al,0x00002f(%ecx)
		mov    (%esi),%dh
		add    $0x000034,%ecx
		cmp    %dh,%dl
		jbe    _0769f0_jump
		mov    (%esp),%al
		add    %al,0x000004(%esp)
		mov    0x000010(%esp),%dh
		inc    %dh
		mov    0x000001(%esi),%bl
		mov    %dh,0x000010(%esp)
		cmp    %bl,%dh
		ja     _076a83_jump
		xor    %dl,%dl
		jmp    _0769e8_jump

	_076a75_jump:
		mov    0x000018(%esi),%edi
		sub    $0x0000a0,%eax
		mov    %edi,0x000008(%ecx)
		jmp    _076a25_jump

	_076a83_jump:
		xor    %bh,%bh
		mov    %bh,0x00000c(%esp)
		mov    %bh,0x000008(%esp)
		jmp    _076adf_jump

	_076a8f_jump:
		lea    (%esi,%eax,1),%edi
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		add    %eax,%eax
		mov    $0xc0440000,%ecx
		cwtl   
		movb   $0x000000,0x000020(%edi)
		call   _055820_func
		cwtl   
		xor    %ebx,%ebx
		call   _078062_func
		call   _07825f_func
		mov    $0x3f600000,%ecx
		xor    %ebx,%ebx
		call   _07825f_func
		call   _078d1c_func
		mov    0x00000c(%esp),%ch
		mov    %al,0x00006b(%edi)
		mov    0x000008(%esp),%al
		add    $0x00000a,%ch
		inc    %al
		mov    %ch,0x00000c(%esp)
		mov    %al,0x000008(%esp)

	_076adf_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		cmp    $0x00004b,%eax
		jl     _076a8f_jump
		movw   $0x000000,0x0000b6(%esi)
		movb   $0x00004b,0x0000b8(%esi)
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx

	_076b02_jump:
		ret    

	_076b04_case:
		mov    _0ddc84_data,%eax
		test   %eax,%eax
		je     _076b02_jump
		cmpl   $0x000000,0x00001c(%eax)
		je     _076b1b_jump
		add    $0x00001c,%eax
		call   _077858_func

	_076b1b_jump:
		cmpl   $0x000000,_0ddc84_data
		je     _076b02_jump
		mov    $_0ddc84_data,%eax
		jmp    _077858_func



_076b30_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,0x000008(%esp)
		mov    %edx,%edi
		mov    %bx,0x000004(%esp)
		mov    %ecx,(%esp)
		mov    0x000018(%esp),%edx
		xor    %cl,%cl
		test   %edx,%edx
		je     _076bea_jump
		cmpl   $0x000000,0x00001c(%esp)
		je     _076bea_jump
		mov    $0x0000bc,%eax
		call   _077840_func
		mov    %eax,%edx
		mov    %eax,_0ddc84_data
		test   %eax,%eax
		je     _076bea_jump
		xor    %ebx,%ebx
		mov    %eax,%esi
		mov    0x000008(%esp),%bx
		mov    $0x000002,%eax
		cmp    %ebx,%eax
		jge    _076b85_jump
		mov    %ebx,%eax

	_076b85_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    $0x000001,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _076b97_jump
		mov    %ebx,%eax

	_076b97_jump:
		mov    %al,0x000001(%edx)
		mov    0x000008(%esp),%eax
		inc    %edi
		inc    %eax
		imul   %edi,%eax
		mov    %ax,0x000002(%edx)
		mov    0x000018(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%edx)
		mov    0x00001c(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		call   _077840_func
		mov    %eax,0x00001c(%edx)
		test   %eax,%eax
		je     _076bea_jump
		mov    _0cdf00_data,%eax
		mov    %eax,0x000014(%edx)
		add    $0x00c800,%eax
		mov    $0x000001,%cl
		mov    %eax,0x000018(%edx)

	_076bea_jump:
		test   %cl,%cl
		je     _076c27_jump
		mov    $0x0000a0,%ebx
		mov    0x000014(%esi),%edx
		mov    0x00000c(%esi),%eax
		call   _075f40_func
		mov    $0x0000a0,%ebx
		mov    0x00000c(%esi),%eax
		mov    0x000018(%esi),%edx
		add    $0x0000a0,%eax
		call   _075f40_func
		xor    %edx,%edx
		mov    0x000002(%esp),%eax
		mov    (%esp),%dx
		sar    $0x000010,%eax
		call   _076950_func
		jmp    _076c2c_jump

	_076c27_jump:
		call   _076b04_case

	_076c2c_jump:
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_076c38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		xor    %ah,%ah
		mov    _0ddc84_data,%ebp
		jmp    _076d59_jump

	_076c4e_jump:
		mov    0x000008(%esp),%bl
		inc    %bl
		mov    %bl,0x000008(%esp)
		cmp    0x000001(%ebp),%bl
		jae    _076cfc_jump

	_076c61_jump:
		xor    %ah,%ah
		xor    %dh,%dh
		mov    0x000000(%ebp),%al
		mov    0x000008(%esp),%dl
		inc    %eax
		imul   %edx,%eax
		xor    %ebx,%ebx
		inc    %eax
		mov    %ax,%bx
		imul   $0x000034,%ebx,%ebx
		mov    0x00001c(%ebp),%eax
		mov    $0x000001,%ch
		add    %eax,%ebx
		mov    0x000000(%ebp),%al
		mov    %ch,0x000004(%esp)
		cmp    %ch,%al
		jbe    _076c4e_jump

	_076c8b_jump:
		xor    %esi,%esi
		mov    (%ebx),%si
		sub    $0x0000a0,%esi
		mov    %esi,%edx
		imul   %esi,%edx
		xor    %ecx,%ecx
		mov    0x000002(%ebx),%cl
		sub    $0x000064,%ecx
		mov    %ecx,%eax
		imul   %ecx,%eax
		add    %edx,%eax
		sar    $0x000009,%eax
		mov    %esi,%edx
		mov    0x00001d(%eax,%ebp,1),%edi
		shl    $0x000009,%edx
		sar    $0x000018,%edi
		mov    %edx,%eax
		add    $0x000200,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %ecx,%edx
		lea    0x0000a0(%eax),%esi
		shl    $0x000009,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %si,0x000004(%ebx)
		mov    0x000004(%esp),%dl
		lea    0x000064(%eax),%ecx
		inc    %dl
		mov    %cl,0x000006(%ebx)
		mov    %dl,0x000004(%esp)
		mov    0x000000(%ebp),%dh
		add    $0x000034,%ebx
		cmp    %dh,%dl
		jae    _076c4e_jump
		jmp    _076c8b_jump

	_076cfc_jump:
		xor    %eax,%eax
		mov    0x0000b8(%ebp),%al
		test   %eax,%eax
		je     _076d1c_jump
		mov    %al,%cl
		xor    %ebx,%ebx
		dec    %cl
		mov    %cl,%bl
		mov    %cl,0x0000b8(%ebp)
		mov    0x00006b(%ebx,%ebp,1),%bl
		jmp    _076d1f_jump

	_076d1c_jump:
		mov    0x00006a(%ebp),%bl

	_076d1f_jump:
		xor    %eax,%eax
		mov    0x0000b6(%ebp),%ax
		cmp    $0x000258,%eax
		jle    _076d3b_jump
		mov    0x00001d(%ebp),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jne    _076d3b_jump
		xor    %bl,%bl

	_076d3b_jump:
		mov    $0x00004a,%al
		jmp    _076d49_jump

	_076d3f_jump:
		mov    0x00001f(%edx,%ebp,1),%ah
		mov    %ah,0x000020(%edx,%ebp,1)
		dec    %al

	_076d49_jump:
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		jg     _076d3f_jump
		mov    (%esp),%ah
		inc    %ah
		mov    %bl,0x000020(%ebp)

	_076d59_jump:
		mov    %ah,(%esp)
		mov    0x000006(%ebp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    (%esp),%dl
		test   %eax,%eax
		jge    _076d6d_jump
		neg    %eax

	_076d6d_jump:
		cmp    %eax,%edx
		jge    _076d98_jump
		mov    $0x000001,%dl
		mov    0x0000b6(%ebp),%cx
		mov    %dl,0x000008(%esp)
		add    $0x000002,%ecx
		mov    0x000001(%ebp),%dh
		mov    %cx,0x0000b6(%ebp)
		cmp    %dl,%dh
		jbe    _076cfc_jump
		jmp    _076c61_jump

	_076d98_jump:
		mov    0x000006(%ebp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _076da4_jump
		neg    %eax

	_076da4_jump:
		mov    0x000004(%ebp),%dx
		add    %eax,%edx
		mov    0x000006(%ebp),%bx
		mov    %dx,0x000004(%ebp)
		cmp    %bx,%dx
		jbe    _076dbd_jump
		movw   $0x000000,0x000004(%ebp)

	_076dbd_jump:
		mov    0x000004(%ebp),%ax

	_076dc1_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076dcc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0ddc84_data,%ebx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %edx,(%esp)
		mov    %ah,0x000004(%esp)
		mov    0x00001c(%ebx),%edx
		mov    0x000001(%ebx),%al
		mov    %edx,%ecx
		test   %al,%al
		jbe    _076dc1_jump
		jmp    _076e11_jump

	_076df4_jump:
		mov    0x000004(%esp),%ah
		mov    (%esp),%esi
		inc    %ah
		add    $0x000034,%edx
		mov    %ah,0x000004(%esp)
		mov    %ah,%al
		inc    %esi
		mov    0x000001(%ebx),%ah
		mov    %esi,(%esp)
		cmp    %ah,%al
		jae    _076dc1_jump

	_076e11_jump:
		xor    %al,%al
		mov    %al,0x000008(%esp)
		cmpb   $0x000000,(%ebx)
		jbe    _076df4_jump
		lea    0x000008(%edx),%edi

	_076e1f_jump:
		xor    %eax,%eax
		mov    (%esp),%ax
		imul   $0x000034,%eax,%esi
		movzwl 0x000004(%ecx,%esi,1),%ebp
		mov    %ebp,0x00000c(%edx)
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000010(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		inc    %esi
		imul   $0x000034,%esi,%esi
		mov    0x000004(%ecx,%esi,1),%si
		and    $0x00ffff,%esi
		mov    %esi,0x000014(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		inc    %esi
		imul   $0x000034,%esi,%esi
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000018(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		add    $0x000002,%esi
		imul   $0x000034,%esi,%esi
		mov    0x000004(%ecx,%esi,1),%si
		and    $0x00ffff,%esi
		dec    %esi
		mov    %esi,0x00001c(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		add    $0x000002,%esi
		imul   $0x000034,%esi,%esi
		inc    %eax
		imul   $0x000034,%eax,%eax
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000020(%edx)
		xor    %esi,%esi
		mov    0x000004(%ecx,%eax,1),%si
		dec    %esi
		mov    %esi,0x000024(%edx)
		mov    0x000006(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    %eax,0x000028(%edx)
		mov    %edi,%esi
		mov    0x000010(%ebx),%eax
		call   _010045_func
		incl   (%esp)
		mov    0x000008(%esp),%al
		inc    %al
		add    $0x000034,%edx
		mov    %al,0x000008(%esp)
		mov    (%ebx),%ah
		add    $0x000034,%edi
		cmp    %ah,%al
		jae    _076df4_jump
		jmp    _076e1f_jump



_076ee0_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $0x000016,%ebx
		movb   $0x000000,(%eax)
		mov    %esp,%eax
		movb   $0x000000,(%edx)
		xor    %edx,%edx
		call   _0787d0_func
		mov    $0x001600,%edx
		mov    $0x00002f,%eax
		mov    %dx,(%esp)
		mov    %esp,%edx
		call   _05e8d8_func
		mov    (%esp),%ah
		cmp    $0x000001,%ah
		jb     _076ff8_jump
		jbe    _076f35_jump
		cmp    $0x000080,%ah
		jb     _077000_jump
		jbe    _076f42_jump
		cmp    $0x0000ff,%ah
		jne    _077000_jump

	_076f35_jump:
		movb   $0x000002,(%esi)
		mov    $0x000001,%al
		movb   $0x000000,(%ecx)
		jmp    _077014_jump

	_076f42_jump:
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _0787d0_func
		mov    $0x004680,%ebx
		mov    %esp,%edx
		mov    $0x00002f,%eax
		mov    %bx,(%esp)
		call   _05e8d8_func
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x000080,%eax
		jne    _076f7a_jump
		xor    %al,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_076f7a_jump:
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		mov    $0x001605,%ecx
		call   _0787d0_func
		xor    %esi,%esi
		mov    $0x000001,%edx
		mov    $0x00002f,%eax
		mov    %cx,(%esp)
		mov    %si,0x000004(%esp)
		mov    %si,0x000008(%esp)
		mov    %dx,0x000006(%esp)
		mov    %esp,%edx
		mov    %si,0x000002(%esp)
		call   _05e8d8_func
		xor    %eax,%eax
		mov    0x000004(%esp),%ax
		test   %eax,%eax
		jne    _076fef_jump
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _0787d0_func
		mov    $0x001606,%ebx
		mov    %esp,%edx
		mov    $0x00002f,%eax
		mov    %bx,(%esp)
		call   _05e8d8_func
		mov    $0x000081,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_076fef_jump:
		mov    $0x000082,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_076ff8_jump:
		test   %ah,%ah
		je     _076f42_jump

	_077000_jump:
		mov    (%esp),%al
		mov    %al,(%esi)
		mov    0x000001(%esp),%al
		mov    %al,(%ecx)
		mov    $0x000083,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_077014_jump:
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_077020_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000028,%esp
		mov    $0x00001c,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _0787d0_func
		mov    $0x00000c,%ebx
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		lea    0x00001c(%esp),%ecx
		call   _0787d0_func
		mov    $0x000500,%edx
		mov    $_0ce8ac_data,%eax
		mov    %edx,(%esp)
		mov    %ds,%edx
		mov    $_0ce8ac_data,%ebx
		mov    $0x000031,%eax
		mov    %dx,0x00001c(%esp)
		mov    %ebx,0x000014(%esp)
		mov    %esp,%ebx
		mov    %esp,%edx
		call   _07a0bb_func
		mov    _0ce8ac_data,%eax
		add    $0x000028,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_077218_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077220_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    %edx,%eax
		and    $0x000003,%eax
		add    %eax,%edx
		je     _077242_jump
		mov    (%ebx),%ecx
		mov    0x000008(%ebx),%esi
		add    %edx,%ecx
		cmp    %esi,%ecx
		jbe    _0772d9_jump

	_077242_jump:
		mov    $0x000064,%eax
		call   _07755c_func
		mov    %eax,%ecx
		cmp    $_0c6afc_data,%ebx
		jne    _07725d_jump
		mov    $_0c0a16_data,%esi
		jmp    _07728f_jump

	_07725d_jump:
		cmp    $_0c6b08_data,%ebx
		jne    _07726c_jump
		mov    $_0c0a1a_data,%esi
		jmp    _07728f_jump

	_07726c_jump:
		cmp    $_0c6b14_data,%ebx
		jne    _07727b_jump
		mov    $_0c0a20_data,%esi
		jmp    _07728f_jump

	_07727b_jump:
		cmp    $_0c6b20_data,%ebx
		jne    _07728a_jump
		mov    $_0c0a26_data,%esi
		jmp    _07728f_jump

	_07728a_jump:
		mov    $_0c0a2d_data,%esi

	_07728f_jump:
		mov    %esp,%edi
		push   %edi

	_077292_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0772aa_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _077292_jump

	_0772aa_jump:
		pop    %edi
		push   %edx
		push   %ebx
		lea    0x000008(%esp),%eax
		push   %eax
		push   $_0c0a39_data
		push   %ecx
		call   _0787fb_func
		add    $0x000014,%esp
		mov    %ecx,%eax
		call   _01f628_func
		mov    %ecx,%eax
		call   _077708_func
		xor    %eax,%eax
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0772d9_jump:
		mov    (%ebx),%edi
		mov    %ecx,(%ebx)
		mov    _0ddc8c_data,%edx
		mov    0x000004(%ebx),%eax
		mov    _0c6afc_data,%ebp
		add    %edi,%eax
		cmp    %ebp,%edx
		jae    _077314_jump
		mov    _0c24f2_data,%dx
		mov    %dx,_0ddc90_data
		mov    _0c24f0_data,%dx
		mov    %ebp,_0ddc8c_data
		mov    %dx,_0ddc92_data

	_077314_jump:
		mov    _0ddc94_data,%edx
		mov    _0c6b08_data,%ebx
		cmp    %ebx,%edx
		jae    _077346_jump
		mov    _0c24f2_data,%dx
		mov    %dx,_0ddc98_data
		mov    _0c24f0_data,%dx
		mov    %ebx,_0ddc94_data
		mov    %dx,_0ddc9a_data

	_077346_jump:
		mov    _0ddc9c_data,%edx
		mov    _0c6b14_data,%ecx
		cmp    %ecx,%edx
		jae    _077378_jump
		mov    _0c24f2_data,%dx
		mov    %dx,_0ddca0_data
		mov    _0c24f0_data,%dx
		mov    %ecx,_0ddc9c_data
		mov    %dx,_0ddca2_data

	_077378_jump:
		mov    _0ddca4_data,%edx
		mov    _0c6b20_data,%esi
		cmp    %esi,%edx
		jae    _0773aa_jump
		mov    _0c24f2_data,%dx
		mov    %dx,_0ddca8_data
		mov    _0c24f0_data,%dx
		mov    %esi,_0ddca4_data
		mov    %dx,_0ddcaa_data

	_0773aa_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0773b4_func:
		push   %ebx
		push   %edx
		mov    $_0c6974_data,%eax
		mov    $0x000168,%ebx
		call   _077858_func
		xor    %edx,%edx
		mov    $_0c697c_data,%eax
		mov    %edx,_0c6974_data
		call   _0787d0_func
		pop    %edx
		pop    %ebx
		ret    



_0773dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%edx
		mov    $_0c6970_data,%eax
		call   _077450_func
		mov    %eax,%ecx
		mov    %eax,_0ddc88_data
		mov    _0c6974_data,%eax
		mov    %eax,_0c6980_data
		mov    _0c6978_data,%eax
		mov    %eax,_0c697c_data
		xor    %ah,%ah
		mov    $0x000001,%edx
		mov    %ah,_0c6984_data
		movswl %dx,%eax
		cmp    $0x00001e,%eax
		jl     _077421_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_077421_jump:
		imul   $0x00000c,%eax,%eax
		mov    _0c6974_data,%ebx
		add    %ecx,%ebx
		mov    %ebx,_0c6980_data(%eax)
		xor    %ebx,%ebx
		mov    %ebx,_0c697c_data(%eax)
		xor    %bl,%bl
		inc    %edx
		mov    %bl,_0c6984_data(%eax)
		movswl %dx,%eax
		cmp    $0x00001e,%eax
		jl     _077421_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077450_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%eax
		and    $0x000003,%eax
		add    %eax,%edx
		mov    %edx,%eax
		call   _07a3d8_func
		mov    %eax,0x000004(%ecx)
		test   %eax,%eax
		jne    _077492_jump
		mov    $0x000064,%eax
		call   _07755c_func
		push   %edx
		push   $_0c0a6e_data
		push   %eax
		mov    %eax,%ebx
		call   _0787fb_func
		add    $0x00000c,%esp
		mov    %ebx,%eax
		call   _01f628_func
		mov    %ebx,%eax
		call   _077708_func

	_077492_jump:
		mov    0x000004(%ecx),%ebx
		mov    %edx,0x000008(%ecx)
		and    $0x000003,%ebx
		mov    %edx,%eax
		mov    %ebx,(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_0774a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		xor    %esi,%esi
		xor    %ebp,%ebp
		jmp    _07752f_jump

	_0774b3_jump:
		inc    %eax

	_0774b4_jump:
		movswl %ax,%edx
		cmp    $0x00001e,%edx
		jge    _0774e9_jump
		movswl %si,%ebx
		imul   $0x00000c,%ebx,%ebx
		imul   $0x00000c,%edx,%edx
		mov    _0c6980_data(%ebx),%ecx
		mov    _0c697c_data(%ebx),%ebx
		add    %ecx,%ebx
		cmp    _0c6980_data(%edx),%ebx
		jne    _0774b3_jump
		mov    _0c6984_data(%edx),%dl
		and    $0x0000ff,%edx
		jne    _0774b3_jump

	_0774e9_jump:
		movswl %ax,%edx
		cmp    $0x00001e,%edx
		jge    _07752a_jump
		imul   $0x00000c,%edx,%edx
		movswl %si,%ebx
		imul   $0x00000c,%ebx,%ebx
		mov    _0c697c_data(%edx),%edi
		mov    _0c697c_data(%ebx),%eax
		add    %edi,%eax
		mov    _0c6978_data,%ecx
		mov    %eax,_0c697c_data(%ebx)
		mov    _0c6974_data,%ebx
		xor    %eax,%eax
		add    %ecx,%ebx
		mov    %eax,_0c697c_data(%edx)
		mov    %ebx,_0c6980_data(%edx)

	_07752a_jump:
		test   %edi,%edi
		jne    _077552_jump

	_07752e_jump:
		inc    %esi

	_07752f_jump:
		movswl %si,%edx
		cmp    $0x00001e,%edx
		jge    _077218_jump
		imul   $0x00000c,%edx,%edx
		xor    %ebx,%ebx
		mov    _0c6984_data(%edx),%bl
		test   %ebx,%ebx
		jne    _07752e_jump
		cmp    _0c697c_data(%edx),%ebp
		je     _07752e_jump

	_077552_jump:
		xor    %edi,%edi
		xor    %eax,%eax
		jmp    _0774b4_jump



_07755c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000068,%esp
		mov    %eax,%ebp
		mov    $0x00001e,%edx
		mov    _0c6978_data,%edi
		and    $0x000003,%eax
		mov    %dx,0x000064(%esp)
		add    %eax,%ebp
		xor    %edx,%edx
		jmp    _077581_jump

	_077580_jump:
		inc    %edx

	_077581_jump:
		movswl %dx,%eax
		cmp    $0x00001e,%eax
		jge    _0775c4_jump
		imul   $0x00000c,%eax,%esi
		xor    %eax,%eax
		mov    _0c6984_data(%esi),%al
		test   %eax,%eax
		jne    _077580_jump
		mov    %edi,%ecx
		mov    %ebp,%ebx
		mov    _0c697c_data(%esi),%eax
		cmp    %ebx,%eax
		jl     _0775b1_jump
		cmp    %ecx,%eax
		jg     _0775b1_jump
		mov    $0x000001,%eax
		jmp    _0775b3_jump

	_0775b1_jump:
		xor    %eax,%eax

	_0775b3_jump:
		test   %eax,%eax
		je     _077580_jump
		mov    %dx,0x000064(%esp)
		mov    _0c697c_data(%esi),%edi
		jmp    _077580_jump

	_0775c4_jump:
		mov    0x000062(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000064(%esp),%ebx
		cmp    $0x00001e,%eax
		jge    _0776bc_jump
		xor    %eax,%eax
		jmp    _0775dd_jump

	_0775dc_jump:
		inc    %eax

	_0775dd_jump:
		movswl %ax,%esi
		cmp    $0x00001e,%esi
		jge    _077606_jump
		movswl %bx,%edi
		imul   $0x00000c,%edi,%edi
		imul   $0x00000c,%esi,%esi
		mov    _0c6980_data(%edi),%edx
		mov    _0c697c_data(%edi),%ecx
		mov    _0c6980_data(%esi),%edi
		add    %ecx,%edx
		cmp    %edi,%edx
		jne    _0775dc_jump

	_077606_jump:
		movswl %ax,%esi
		lea    0x000000(,%esi,4),%edx
		sub    %esi,%edx
		cmpb   $0x000000,_0c6984_data(,%edx,4)
		je     _077644_jump
		mov    _0c6978_data,%ecx
		xor    %eax,%eax
		jmp    _077627_jump

	_077626_jump:
		inc    %eax

	_077627_jump:
		movswl %ax,%esi
		cmp    $0x00001e,%esi
		jge    _077644_jump
		imul   $0x00000c,%esi,%edx
		mov    _0c6974_data,%esi
		mov    _0c6980_data(%edx),%edi
		add    %ecx,%esi
		cmp    %edi,%esi
		jne    _077626_jump

	_077644_jump:
		movswl %bx,%esi
		lea    0x000000(,%esi,4),%edx
		sub    %esi,%edx
		mov    _0c6980_data(,%edx,4),%esi
		lea    (%esi,%ebp,1),%edi
		movswl %ax,%esi
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		mov    %edi,_0c6980_data(,%eax,4)
		mov    _0c697c_data(,%edx,4),%esi
		mov    _0c697c_data(,%eax,4),%ebx
		sub    %ebp,%esi
		add    %esi,%ebx
		mov    $0x000001,%ch
		mov    %ebx,_0c697c_data(,%eax,4)
		mov    _0ddcb4_data,%eax
		mov    %ch,_0c6984_data(,%edx,4)
		mov    _0c6970_data,%ecx
		mov    %ebp,_0c697c_data(,%edx,4)
		add    %ebp,%ecx
		mov    _0c6980_data(,%edx,4),%edx
		mov    %ecx,_0c6970_data
		cmp    %ecx,%eax
		jae    _0776f9_jump
		mov    %ecx,_0ddcb4_data
		jmp    _0776f9_jump

	_0776bc_jump:
		mov    %ebp,%eax
		call   _07a3d8_func
		mov    %eax,%edx
		mov    _0ddc88_data,%eax
		mov    _0ddcb4_data,%ebx
		add    %ebp,%eax
		cmp    %ebx,%eax
		jbe    _0776db_jump
		mov    %eax,_0ddcb4_data

	_0776db_jump:
		test   %edx,%edx
		jne    _0776f9_jump
		push   %ebp
		push   $_0c0a94_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _0787fb_func
		add    $0x00000c,%esp
		mov    %esp,%eax
		call   _01f628_func

	_0776f9_jump:
		mov    %edx,%eax
		add    $0x000068,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077708_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    (%esp),%esi
		xor    %cl,%cl
		xor    %edx,%edx
		jmp    _07771d_jump

	_07771c_jump:
		inc    %edx

	_07771d_jump:
		movswl %dx,%eax
		cmp    $0x00001e,%eax
		jge    _077751_jump
		imul   $0x00000c,%eax,%ebx
		cmp    _0c6980_data(%ebx),%esi
		jne    _07771c_jump
		xor    %ah,%ah
		mov    %ah,_0c6984_data(%ebx)
		mov    _0c6970_data,%edi
		sub    _0c697c_data(%ebx),%edi
		mov    $0x000001,%cl
		mov    %edi,_0c6970_data
		call   _0774a4_func

	_077751_jump:
		test   %cl,%cl
		jne    _07775c_jump
		mov    %esp,%eax
		call   _077858_func

	_07775c_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077768_func:
		push   %edx
		mov    %eax,%edx
		cmp    $_0c6afc_data,%eax
		lea    0x000004(%edx),%eax
		call   _077858_func
		movl   $0x000000,0x000004(%edx)
		movl   $0x000000,0x000008(%edx)
		movl   $0x000000,(%edx)
		pop    %edx
		ret    



_077790_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0c1315_data,%cl
		xor    %eax,%eax
		mov    _0c1314_data,%al
		jmp    _0777ac_jump

	_0777a2_jump:
		xor    %ebx,%ebx
		inc    %eax
		mov    %ebx,_0c1184_data(,%edx,4)

	_0777ac_jump:
		xor    %ebx,%ebx
		movswl %ax,%edx
		mov    %cl,%bl
		cmp    %ebx,%edx
		jl     _0777a2_jump
		mov    _0c1314_data,%cl
		mov    _0c1318_data,%ax
		mov    %cl,_0c1315_data
		mov    %ax,_0c1316_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0777d4_func:
		push   %ebx
		push   %edx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		add    %ebx,%edx
		and    $0x000003,%edx
		lea    (%ebx,%edx,1),%eax
		mov    %eax,_0ddcac_data
		pop    %edx
		pop    %ebx
		ret    



_0777ec_func:
		push   %ebx
		push   %edx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		add    %ebx,%edx
		and    $0x000003,%edx
		lea    (%ebx,%edx,1),%eax
		mov    %eax,_0ddcb0_data
		pop    %edx
		pop    %ebx
		ret    



_077804_func:
		push   %edx
		mov    _0ddcac_data,%edx
		mov    %edx,(%eax)
		pop    %edx
		ret    



_077810_func:
		push   %edx
		mov    _0ddcb0_data,%edx
		mov    %edx,(%eax)
		pop    %edx
		ret    



_07781c_func:
		push   %edx
		mov    %eax,%edx
		call   _077790_func
		mov    0x000004(%edx),%eax
		and    $0x000003,%eax
		mov    %eax,(%edx)
		pop    %edx
		ret    



_077830_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000004(%eax),%eax
		and    $0x000003,%eax
		mov    %eax,(%edx)
		pop    %edx
		ret    



_077840_func:
		jmp    _07a3d8_func



_077848_func:
		push   %ebx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _07a4bb_func
		pop    %ebx
		ret    



_077858_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    (%eax),%ebx
		test   %ebx,%ebx
		je     _07786f_jump
		mov    %ebx,%eax
		call   _07a4d3_func
		movl   $0x000000,(%edx)

	_07786f_jump:
		pop    %edx
		pop    %ebx
		ret    

_077880_switch:
		.long   0
		.long   0
		.long   0
		.long   0


	_07796c_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		xor    %edi,%edi

	_077975_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _077e1c_func
		cmp    $0x000020,%si
		jle    _077975_jump

	_07798b_jump:
		mov    _0ded3c_data,%eax
		call   _07a546_func
		test   %eax,%eax
		jne    _07798b_jump
		mov    _0ded40_data,%eax
		call   _07aa6a_func
		xor    %eax,%eax
		call   _07a6ab_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0779b0_jump:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x00ff00,%eax
		xor    %edx,%edx
		call   _07a5cf_func
		push   %ds
		mov    $0x000028,%eax
		push   $_0ded40_data
		mov    _0bd0fc_data,%cx
		mov    _0bd0f8_data,%ebx
		call   _07a6e5_func
		test   %eax,%eax
		je     _0779e7_jump
		xor    %eax,%eax
		call   _07a6ab_func

	_0779e7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0779ec_func:
		push   %edx
		mov    %eax,%edx
		mov    $0x000003,%eax
		int    $0x000010
		push   %edx
		push   $_0c0adc_data
		call   _0783fc_func
		add    $0x000008,%esp
		mov    $0xffffffff,%eax
		call   _07882c_func
		pop    %edx
		ret    



_077a10_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		xor    %edx,%edx
		xor    %eax,%eax
		call   _07ad86_func
		test   %eax,%eax
		je     _077a2a_jump
		mov    $0x000001,%eax
		jmp    _077a77_jump

	_077a2a_jump:
		mov    %esp,%ebx
		mov    $_0decd0_data,%eax
		mov    %ds,%ecx
		mov    %ds,%edx
		call   _07b374_func
		test   %eax,%eax
		je     _077a4f_jump
		call   _07aed0_func
		mov    $0x000002,%eax
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_077a4f_jump:
		mov    $_0de4bc_data,%eax
		mov    %ds,%edx
		call   _07b7ec_func
		test   %eax,%eax
		je     _077a70_jump
		call   _07aed0_func
		mov    $0x000003,%eax
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_077a70_jump:
		call   _07aed0_func
		xor    %eax,%eax

	_077a77_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077a80_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _07bffb_func
		mov    $0x00ff00,%eax
		xor    %edx,%edx
		call   _07a5cf_func
		push   %ds
		push   $_0ded3c_data
		mov    %ds,%ecx
		push   %ds
		mov    $_0de4bc_data,%ebx
		mov    $0x002710,%edx
		push   $_0bd0dc_data
		mov    _0ded34_data,%eax
		mov    %edx,_0bd0ec_data
		call   _07c0b4_func
		test   %eax,%eax
		je     _077adb_jump
		xor    %eax,%eax
		call   _07a6ab_func
		call   _07c074_func
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_077adb_jump:
		push   %ds
		mov    $0x000028,%eax
		push   $_0ded40_data
		mov    _0bd0fc_data,%cx
		mov    _0bd0f8_data,%ebx
		call   _07a6e5_func
		test   %eax,%eax
		je     _077b19_jump
		xor    %eax,%eax
		mov    $0x000001,%ebx
		call   _07a6ab_func
		mov    _0ded3c_data,%eax
		mov    %ebx,%edx
		call   _07c974_func
		mov    $0x000002,%eax

	_077b19_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077b20_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    %edx,(%esp)
		mov    %ebx,%ebp
		mov    %ecx,0x000004(%esp)
		mov    $_0c0b00_data,%edx
		mov    $_0c0b04_data,%eax
		call   _079ee3_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _077b50_jump
		mov    $_0c0b10_data,%eax
		call   _0779ec_func

	_077b50_jump:
		mov    %edi,%edx
		shl    $0x000002,%edi
		sub    %edx,%edi
		mov    %esi,%eax
		shl    $0x000002,%edi
		xor    %ebx,%ebx
		mov    _0bd0c4_data(%edi),%edx
		mov    %esi,%ecx
		call   _078fea_func
		mov    $0x000080,%ebx
		mov    $0x000010,%edx
		mov    %ebp,%eax
		call   _078dde_func
		mov    %esi,%eax
		call   _079f79_func
		mov    %edi,%ecx
		mov    %ebp,%eax
		mov    _0bd0cd_data(%edi),%dl
		lea    0x000800(%ebp),%esi

	_077b93_jump:
		sub    (%eax),%dl
		mov    (%eax),%bl
		mov    _0bd0cc_data(%ecx),%dh
		inc    %eax
		xor    %dh,%bl
		mov    %bl,-0x000001(%eax)
		cmp    %esi,%eax
		jne    _077b93_jump
		test   %dl,%dl
		je     _077bb5_jump
		mov    $_0c0b3c_data,%eax
		call   _0779ec_func

	_077bb5_jump:
		mov    $_0c0b00_data,%edx
		mov    $_0c0b58_data,%eax
		call   _079ee3_func
		mov    %eax,0x00000c(%esp)
		test   %eax,%eax
		jne    _077bd6_jump
		mov    $_0c0b64_data,%eax
		call   _0779ec_func

	_077bd6_jump:
		mov    (%esp),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0bd0d4_data(,%eax,4),%esi
		mov    0x000004(%esp),%eax
		mov    (%eax),%edx
		test   %edx,%edx
		je     _077bfa_jump
		mov    %edx,%eax
		call   _07a4d3_func

	_077bfa_jump:
		mov    %esi,%eax
		call   _07a3d8_func
		mov    %eax,%edi
		test   %eax,%eax
		jne    _077c11_jump
		mov    $_0c0b80_data,%eax
		call   _0779ec_func

	_077c11_jump:
		mov    0x000004(%esp),%eax
		mov    (%esp),%edx
		mov    %edi,(%eax)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000008(%esp)
		mov    _0bd0d0_data(%eax),%edx
		mov    0x00000c(%esp),%eax
		mov    0x00000c(%esp),%ecx
		call   _078fea_func
		mov    $0x000001,%edx
		mov    %esi,%ebx
		mov    %edi,%eax
		call   _078dde_func
		mov    0x00000c(%esp),%eax
		mov    0x000008(%esp),%ebx
		call   _079f79_func
		xor    %edx,%edx
		mov    _0bd0d9_data(%ebx),%bl
		test   %esi,%esi
		jbe    _077c7d_jump
		mov    0x000008(%esp),%ecx
		mov    %edi,%eax

	_077c6c_jump:
		sub    (%eax),%bl
		inc    %eax
		mov    _0bd0d8_data(%ecx),%bh
		inc    %edx
		xor    %bh,-0x000001(%eax)
		cmp    %esi,%edx
		jb     _077c6c_jump

	_077c7d_jump:
		test   %bl,%bl
		je     _077c8b_jump
		mov    $_0c0bb0_data,%eax
		call   _0779ec_func

	_077c8b_jump:
		mov    %ebp,%eax
		lea    0x000800(%ebp),%ecx

	_077c93_jump:
		mov    (%eax),%ebx
		add    $0x000010,%eax
		add    %edi,%ebx
		mov    %ebx,-0x000010(%eax)
		cmp    %ecx,%eax
		jne    _077c93_jump
		xor    %ecx,%eax
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_077cac_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $_0bd128_data,%ecx
		mov    $_0ddcbc_data,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _077b20_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077cc8_func:
		xor    %eax,%eax
		ret    



_077ccc_func:
		push   %esi
		push   %edi
		sub    $0x00007c,%esp
		mov    %eax,0x000074(%esp)
		mov    %edx,%ebx
		mov    %cx,0x000078(%esp)
		mov    0x000086(%esp),%eax
		mov    $0x00001d,%ecx
		sar    $0x000010,%eax
		mov    %esp,%edi
		mov    %eax,%edx
		mov    $_077880_switch,%esi
		shl    $0x00000f,%edx
		rep movsl %ds:(%esi),%es:(%edi)
		sub    %eax,%edx
		mov    $0x00007f,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,0x000014(%esp)
		mov    0x00008a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000010,%edx
		sub    %eax,%edx
		mov    $0x00007f,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    0x000028(%esp),%ecx
		mov    %eax,0x000040(%esp)
		mov    0x000076(%esp),%eax
		or     $0x004760,%cx
		sar    $0x000010,%eax
		mov    0x000028(%esp),%edx
		mov    _0bd12e_data(,%eax,2),%eax
		mov    0x000074(%esp),%esi
		sar    $0x000010,%eax
		or     $0x000720,%edx
		shl    $0x000008,%eax
		mov    %dx,0x000028(%esp)
		mov    %eax,0x000038(%esp)
		test   %si,%si
		jne    _077da9_jump
		movswl %bx,%edx
		shl    $0x000004,%edx
		mov    _0ddcbc_data(%edx),%eax
		mov    %ds,0x000004(%esp)
		mov    %eax,(%esp)
		mov    _0ddcc0_data(%edx),%eax
		mov    _0ddcc8_data(%edx),%esi
		mov    %eax,0x000008(%esp)
		test   %esi,%esi
		je     _077deb_jump
		mov    $0xffffffff,%edi
		mov    %ecx,0x000028(%esp)
		mov    _0ddcc4_data(%edx),%eax
		mov    %esi,0x000034(%esp)
		mov    %eax,0x000030(%esp)
		mov    %edi,0x00000c(%esp)
		jmp    _077deb_jump

	_077da9_jump:
		movswl %bx,%edx
		shl    $0x000004,%edx
		mov    _0de4cc_data(%edx),%eax
		mov    %ds,0x000004(%esp)
		mov    %eax,(%esp)
		mov    _0de4d0_data(%edx),%eax
		mov    _0de4d8_data(%edx),%ebx
		mov    %eax,0x000008(%esp)
		test   %ebx,%ebx
		je     _077deb_jump
		mov    %ecx,0x000028(%esp)
		mov    %ebx,0x000034(%esp)
		mov    _0de4d4_data(%edx),%eax
		mov    $0xffffffff,%ecx
		mov    %eax,0x000030(%esp)
		mov    %ecx,0x00000c(%esp)

	_077deb_jump:
		cmpl   $0x000000,0x000008(%esp)
		je     _077e0f_jump
		mov    %esp,%ebx
		mov    _0ded3c_data,%eax
		mov    %ds,%ecx
		call   _07ce2e_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _077e14_jump
		mov    $0xffffffff,%eax
		jmp    _077e14_jump

	_077e0f_jump:
		mov    $0xffffffff,%eax

	_077e14_jump:
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_077e1c_func:
		movswl %ax,%edx
		mov    _0ded3c_data,%eax
		call   _07d447_func
		ret    $0x000004



_077e2c_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %ebx,%edi
		movswl %dx,%edx
		mov    %edx,%eax
		shl    $0x00000f,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x00007f,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %cx,%ecx
		mov    _0ded3c_data,%esi
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _07d8c2_func
		movswl %di,%edx
		mov    %edx,%eax
		shl    $0x000010,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x00007f,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0ded3c_data,%esi
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _07db65_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_077e88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		xor    %edi,%edi

	_077e91_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _077e1c_func
		cmp    $0x000020,%si
		jle    _077e91_jump
		mov    _0ded40_data,%eax
		call   _07aa6a_func
		xor    %eax,%eax
		mov    $0x000001,%ebx
		call   _07a6ab_func
		mov    %ebx,%edx
		mov    _0ded3c_data,%eax
		call   _07c974_func
		call   _07c074_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077ed4_func:
		mov    _0ded42_data,%edx
		mov    _0ded3c_data,%eax
		sar    $0x000010,%edx
		jmp    _07df1a_jump



_077ee8_func:
		push   %edx

	_077ee9_jump:
		mov    _0ded42_data,%edx
		mov    _0ded3c_data,%eax
		sar    $0x000010,%edx
		call   _07df1a_jump
		cmp    $0x000001,%eax
		jne    _077ee9_jump
		mov    _0deccc_data,%eax
		call   _07a4d3_func
		pop    %edx
		ret    



_077f10_func:
		and    $0x00ffff,%eax
		mov    %eax,_0de4bc_data
		ret    



_077f1c_func:
		mov    %eax,_0de4c0_data
		ret    



_077f24_func:
		mov    %eax,_0de4c4_data
		ret    



_077f2c_func:
		mov    %eax,_0de4c8_data
		ret    



_077f34_func:
		mov    %eax,_0ded34_data
		ret    



_077fc0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmp    %edx,%eax
		je     _078034_jump

	_077fc8_jump:
		mov    (%ebx),%eax
		mov    (%edx),%ecx
		cmp    %eax,%ecx
		jne    _078039_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _078034_jump
		mov    0x000004(%ebx),%eax
		mov    0x000004(%edx),%ecx
		cmp    %eax,%ecx
		jne    _078039_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _078034_jump
		mov    0x000008(%ebx),%eax
		mov    0x000008(%edx),%ecx
		cmp    %eax,%ecx
		jne    _078039_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _078034_jump
		mov    0x00000c(%ebx),%eax
		mov    0x00000c(%edx),%ecx
		cmp    %eax,%ecx
		jne    _078039_jump
		add    $0x000010,%ebx
		add    $0x000010,%edx
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		je     _077fc8_jump

	_078034_jump:
		sub    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_078039_jump:
		cmp    %cl,%al
		jne    _07805a_jump
		cmp    $0x000000,%al
		je     _078034_jump
		cmp    %ch,%ah
		jne    _07805a_jump
		cmp    $0x000000,%ah
		je     _078034_jump
		shr    $0x000010,%eax
		shr    $0x000010,%ecx
		cmp    %cl,%al
		jne    _07805a_jump
		cmp    $0x000000,%al
		je     _078034_jump
		cmp    %ch,%ah

	_07805a_jump:
		sbb    %eax,%eax
		or     $0x000001,%al
		pop    %ecx
		pop    %ebx
		ret    



_078062_func:
		or     %eax,%eax
		jns    _07806f_func
		neg    %eax
		mov    $0x000bff,%edx
		jmp    _078074_jump



_07806f_func:
		mov    $0x0003ff,%edx

	_078074_jump:
		or     %eax,%eax
		je     _07809f_jump
		push   %ecx
		bsr    %eax,%ecx
		mov    %cl,%ch
		mov    $0x00001f,%cl
		sub    %ch,%cl
		shl    %cl,%eax
		add    %eax,%eax
		mov    %ch,%cl
		movzbl %ch,%ecx
		add    %edx,%ecx
		mov    %eax,%edx
		and    $0xfffff000,%edx
		or     %ecx,%edx
		ror    $0x00000c,%edx
		shl    $0x000014,%eax
		pop    %ecx
		ret    

	_07809f_jump:
		sub    %edx,%edx
		ret    



_0780a2_func:
		xor    $0x80000000,%ecx



_0780a8_func:
		or     %ebx,%ebx
		jne    _0780b2_jump
		add    %ecx,%ecx
		je     _0780be_jump
		rcr    %ecx

	_0780b2_jump:
		or     %eax,%eax
		jne    _0780c1_jump
		add    %edx,%edx
		jne    _0780bf_jump
		mov    %ecx,%edx
		mov    %ebx,%eax

	_0780be_jump:
		ret    

	_0780bf_jump:
		rcr    %edx

	_0780c1_jump:
		cmpb   $0x000000,_0bd271_data
		je     _0780eb_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		faddl  (%esp)

	_0780d4_jump:
		fstpl  0x000008(%esp)
		add    $0x000008,%esp
		fwait
		pop    %eax
		pop    %edx
		cmp    $0x80000000,%edx
		jne    _0780ea_jump
		sub    %edx,%edx
		mov    %edx,%eax

	_0780ea_jump:
		ret    

	_0780eb_jump:
		push   %ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		mov    %ecx,%ebp
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %di,%cx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		je     _07812c_jump
		or     $0x100000,%edx

	_07812c_jump:
		or     %cx,%cx
		je     _078137_jump
		or     $0x100000,%esi

	_078137_jump:
		add    %eax,%eax
		adc    %edx,%edx
		add    %ebx,%ebx
		adc    %esi,%esi
		sub    %di,%cx
		je     _078173_jump
		jae    _07814e_jump
		mov    %edi,%ebp
		neg    %cx
		xchg   %eax,%ebx
		xchg   %esi,%edx

	_07814e_jump:
		cmp    $0x000036,%cx
		jbe    _078173_jump
		mov    %esi,%edx
		mov    %ebx,%eax
		add    %ebp,%ebp
		rcr    %edx
		rcr    %eax
		and    $0x800fffff,%edx
		ror    $0x00000d,%ebp
		and    $0x7ff00000,%ebp
		or     %ebp,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_078173_jump:
		or     %ecx,%ecx
		jns    _078184_jump
		neg    %esi
		neg    %ebx
		sbb    $0x000000,%esi
		xor    $0x80000000,%ebp

	_078184_jump:
		sub    %edi,%edi
		cmp    $0x000000,%cl
		je     _0781ae_jump
		push   %ebx
		sub    %ebx,%ebx
		cmp    $0x000020,%cl
		jb     _0781a0_jump
		or     %eax,%eax
		setne  %bl
		mov    %ebx,%edi
		sub    %ebx,%ebx
		mov    %edx,%eax
		sub    %edx,%edx

	_0781a0_jump:
		shrd   %cl,%eax,%ebx
		or     %ebx,%edi
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		pop    %ebx

	_0781ae_jump:
		add    %ebx,%eax
		adc    %esi,%edx
		jns    _0781d7_jump
		cmp    $0x000035,%cl
		jb     _0781ca_jump
		test   $0x7fffffff,%edi
		setne  %bl
		shr    %ebx
		adc    $0x000000,%eax
		adc    $0x000000,%edx

	_0781ca_jump:
		neg    %edx
		neg    %eax
		sbb    $0x000000,%edx
		xor    $0x80000000,%ebp

	_0781d7_jump:
		mov    %eax,%ebx
		or     %edx,%ebx
		je     _078247_jump
		or     %bp,%bp
		je     _07824b_jump

	_0781e2_jump:
		test   $0x7fe00000,%edx
		jne    _0781f4_jump
		dec    %bp
		je     _07824b_jump
		add    %eax,%eax
		adc    %edx,%edx
		jmp    _0781e2_jump

	_0781f4_jump:
		test   $0x400000,%edx
		je     _07820c_jump
		shr    %edx
		rcr    %eax
		adc    $0x000000,%edi
		inc    %bp
		cmp    $0x0007ff,%bp
		je     _078255_jump

	_07820c_jump:
		shr    %edx
		rcr    %eax
		jae    _078236_jump
		or     %edi,%edi
		setne  %bl
		or     %eax,%ebx
		shr    %ebx
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		test   $0x200000,%edx
		je     _078236_jump
		shr    %edx
		rcr    %eax
		inc    %bp
		cmp    $0x0007ff,%bp
		je     _078255_jump

	_078236_jump:
		and    $0x0fffff,%edx
		mov    %ebp,%ecx
		shl    $0x000015,%ebp
		add    %ecx,%ecx
		rcr    %ebp
		or     %ebp,%edx

	_078247_jump:
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_07824b_jump:
		add    %ebp,%ebp
		rcr    %edx
		rcr    %eax
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_078255_jump:
		mov    %ebp,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _07e017_jump



_07825f_func:
		or     %eax,%eax
		jne    _07826a_jump
		add    %edx,%edx
		jne    _078268_jump
		ret    

	_078268_jump:
		rcr    %edx

	_07826a_jump:
		or     %ebx,%ebx
		jne    _078279_jump
		add    %ecx,%ecx
		jne    _078277_jump
		sub    %eax,%eax
		sub    %edx,%edx
		ret    

	_078277_jump:
		rcr    %ecx

	_078279_jump:
		cmpb   $0x000000,_0bd271_data
		je     _078291_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		fmull  (%esp)
		jmp    _0780d4_jump

	_078291_jump:
		push   %ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %di,%cx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		jne    _0782da_jump
		inc    %di

	_0782cc_jump:
		dec    %di
		add    %eax,%eax
		adc    %edx,%edx
		test   $0x100000,%edx
		je     _0782cc_jump

	_0782da_jump:
		or     $0x100000,%edx
		or     %cx,%cx
		jne    _0782f5_jump
		inc    %cx

	_0782e7_jump:
		dec    %cx
		add    %ebx,%ebx
		adc    %esi,%esi
		test   $0x100000,%esi
		je     _0782e7_jump

	_0782f5_jump:
		or     $0x100000,%esi
		add    %di,%cx
		sub    $0x0003ff,%cx
		js     _078316_jump
		cmp    $0x0007ff,%cx
		jb     _078316_jump
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _07e017_jump

	_078316_jump:
		cmp    $0x00ffcb,%cx
		jge    _078324_jump
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _07e006_jump

	_078324_jump:
		push   %ecx
		mov    $0x00000b,%cl
		shld   %cl,%eax,%edx
		shld   %cl,%ebp,%eax
		and    $0xfffff800,%eax
		shld   %cl,%ebx,%esi
		shld   %cl,%ebp,%ebx
		and    $0xfffff800,%ebx
		sub    %ebp,%ebp
		push   %esi
		push   %edx
		push   %eax
		mul    %ebx
		xchg   %eax,%esi
		mov    %edx,%ecx
		pop    %edx
		mul    %edx
		mov    %edx,%edi
		add    %eax,%ecx
		adc    %ebp,%edi
		adc    %ebp,%ebp
		pop    %eax
		xchg   %eax,%ebx
		mul    %ebx
		add    %eax,%ecx
		adc    %edx,%edi
		adc    $0x000000,%ebp
		mov    %ebx,%eax
		pop    %edx
		mul    %edx
		add    %edi,%eax
		adc    %ebp,%edx
		sub    %ebx,%ebx
		mov    $0x00000a,%cl
		shrd   %cl,%eax,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		pop    %ecx

	_078375_jump:
		test   $0x200000,%edx
		je     _07838e_jump
		shr    %edx
		rcr    %eax
		rcr    %ebx
		inc    %cx
		cmp    $0x0007ff,%cx
		je     _0783f2_jump
		jmp    _078375_jump

	_07838e_jump:
		add    %ebx,%ebx
		jae    _0783bc_jump
		jne    _0783a1_jump
		or     %esi,%esi
		setne  %bl
		shr    %ebx
		jb     _0783a1_jump
		mov    %eax,%esi
		shr    %esi

	_0783a1_jump:
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		test   $0x200000,%edx
		je     _0783bc_jump
		shr    %edx
		rcr    %eax
		inc    %cx
		cmp    $0x0007ff,%cx
		je     _0783f2_jump

	_0783bc_jump:
		or     %cx,%cx
		jg     _0783d7_jump
		jne    _0783c7_jump
		mov    $0x000001,%cl
		jmp    _0783cc_jump

	_0783c7_jump:
		neg    %cx
		dec    %cx

	_0783cc_jump:
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %cx,%cx

	_0783d7_jump:
		and    $0x0fffff,%edx
		mov    %ecx,%esi
		ror    $0x00000b,%ecx
		add    %esi,%esi
		rcr    %ecx
		and    $0xfff00000,%ecx
		or     %ecx,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_0783f2_jump:
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _07e017_jump



_0783fc_func:
		push   %ebx
		push   %edx
		sub    $0x000004,%esp
		lea    0x000014(%esp),%ebx
		mov    $_0bd28e_data,%eax
		mov    0x000010(%esp),%edx
		mov    %ebx,(%esp)
		mov    %esp,%ebx
		call   _07e070_func
		add    $0x000004,%esp
		pop    %edx
		pop    %ebx
		ret    



_07841e_func:
		cmpl   $0x000000,_0bd4ac_data
		je     _07842d_jump
		mov    $0x000001,%eax
		ret    

	_07842d_jump:
		mov    $0x00000b,%ah
		int    $0x000021
		cbtw   
		cwtl   
		ret    



_078435_func:
		push   %edx
		xor    %edx,%edx
		mov    _0bd4ac_data,%eax
		mov    %edx,_0bd4ac_data
		test   %eax,%eax
		jne    _078450_jump
		mov    $0x000008,%ah
		int    $0x000021
		and    $0x0000ff,%eax

	_078450_jump:
		pop    %edx
		ret    



_078452_func:
		jmp    _07e128_jump

	_078457_jump:
		push   %edx
		mov    %eax,%edx
		mov    $0x000041,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    _078472_jump
		and    $0x00ffff,%eax
		call   _07e16c_func
		pop    %edx
		ret    

	_078472_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_078476_func:
		push   %ebx
		push   %edx
		sub    $0x000004,%esp
		mov    $0x000020,%edx
		mov    _0dedc8_data,%ebx
		mov    %edx,_0dedc8_data
		mov    %ebx,%edx
		shl    $0x000002,%edx

	_078491_jump:
		test   %edx,%edx
		je     _0784a7_jump
		mov    _0ded44_data(%edx),%eax
		sub    $0x000004,%edx
		mov    %eax,(%esp)
		dec    %ebx
		call   *(%esp)
		jmp    _078491_jump

	_0784a7_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ebx
		ret    



_0784ad_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $_078476_func,%edx
		mov    _0dedc8_data,%ecx
		mov    %edx,_0bd240_data
		cmp    $0x000020,%ecx
		jge    _0784e0_jump
		mov    %ecx,%eax
		lea    0x000001(%ecx),%edx
		mov    %ebx,_0ded48_data(,%ecx,4)
		mov    %edx,_0dedc8_data
		xor    %ecx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0784e0_jump:
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0784ec_func:
		jmp    _078566_jump

	_078560_jump:
		add    %al,(%eax)

	_078562_jump:
		arpl   %bp,0x00006e(%edi)
	_078566_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %bh,%bl
		and    $0xfffffffc,%esp
		mov    %esp,%ebx
		mov    %ebx,_0bd4a0_data
		mov    %ebx,_0bd48c_data
		mov    $0x000024,%ax
		mov    %ax,_0bd498_data
		mov    $0x50484152,%ebx
		sub    %eax,%eax
		mov    $0x000030,%ah
		int    $0x000021
		mov    %al,_0bd4c3_data
		mov    %ah,_0bd4c4_data
		mov    %eax,%ecx
		sub    %esi,%esi
		mov    $0x000081,%edi
		shr    $0x000010,%eax
		cmp    $0x004458,%ax
		jne    _0785e8_jump
		sub    $0x000030,%bl
		mov    %bl,%al
		mov    $0x000000,%ah
		push   %eax
		data16 mov _0bd498_data,%es
		mov    %es:0x00005c,%ebx
		add    $0x000fff,%ebx
		and    $0xfffff000,%ebx
		mov    %ebx,_0bd48c_data
		shr    $0x00000c,%ebx
		mov    %ds,%ax
		mov    %eax,%es
		mov    $0x00004a,%ah
		int    $0x000021
		pop    %eax
		mov    %ds,%bx
		mov    $0x00002c,%cx
		jmp    _078620_jump

	_0785e8_jump:
		cmp    $0x004243,%ax
		jne    _078622_jump
		mov    %edx,_0bd230_data
		mov    %edx,%esi
		mov    0x00001c(%esi),%edx
		mov    %esp,%ebx
		sub    %edx,%ebx
		mov    $0x00004a,%ah
		int    $0x000021
		mov    %ds,%bx
		data16 mov %ds,_0bd498_data
		mov    0x000010(%esi),%eax
		add    %eax,%edi
		sub    %esi,%esi
		mov    0x00002c(%eax),%si
		shl    $0x000004,%esi
		mov    %ds,%cx
		mov    $0x000009,%al
		mov    $0x000000,%ah

	_078620_jump:
		jmp    _07867b_jump

	_078622_jump:
		mov    $0x000078,%dx
		mov    $0x00ff00,%ax
		int    $0x000021
		cmp    $0x000000,%al
		je     _078664_jump
		mov    %gs,%ax
		cmp    $0x000000,%ax
		je     _07863f_jump
		mov    %ax,_0bd234_data

	_07863f_jump:
		mov    $0x000006,%ax
		mov    %ds,%bx
		int    $0x000031
		mov    $0x000001,%al
		mov    $0x000000,%ah
		or     %cx,%dx
		je     _078653_jump
		mov    $0x000001,%ah

	_078653_jump:
		data16 mov %es,_0bd498_data
		mov    %es:0x00002c,%cx
		jmp    _07867b_jump

	_078664_jump:
		mov    %ds,%dx
		mov    $0x000024,%cx
		mov    %ecx,%ds
		mov    $0x00002c,%cx
		mov    %edx,%ds
		mov    $0x000017,%bx
		mov    $0x000000,%al
		mov    $0x000000,%ah

	_07867b_jump:
		mov    %al,_0bd4ba_data
		mov    %ah,_0bd4bb_data
		mov    %ebx,%es
		data16 mov %ds,%es:_078560_jump
		mov    %esi,_0bd4bd_data
		mov    %cx,_0bd4c1_data
		push   %esi
		data16 mov _0bd498_data,%es
		ds mov $_0dee14_data,%edx
		add    $0x00000f,%edx
		and    $0x0000f0,%dl
		sub    %ecx,%ecx
		mov    %es:-0x000001(%edi),%cl
		cld    
		mov    $0x000020,%al
		repz scas %es:(%edi),%al
		lea    -0x000001(%edi),%esi
		mov    %edx,%edi
		mov    %es,%bx
		mov    %ds,%dx
		mov    %ebx,%ds
		mov    %edx,%es
		je     _0786d0_jump
		inc    %ecx
		rep movsb %ds:(%esi),%es:(%edi)

	_0786d0_jump:
		sub    %al,%al
		stos   %al,%es:(%edi)
		stos   %al,%es:(%edi)
		pop    %esi
		dec    %edi
		push   %edi
		push   %edx
		data16 mov %es:_0bd4c1_data,%ds
		sub    %ebp,%ebp

	_0786e2_jump:
		mov    (%esi),%eax
		or     $0x20202020,%eax
		cmp    $0x37386f6e,%eax
		jne    _0786f7_jump
		cmpb   $0x00003d,0x000004(%esi)
		jne    _0786f7_jump
		inc    %ebp

	_0786f7_jump:
		cmpb   $0x000000,(%esi)
		lods   %ds:(%esi),%al
		jne    _0786f7_jump
		cmpb   $0x000000,(%esi)
		jne    _0786e2_jump
		lods   %ds:(%esi),%al
		inc    %esi
		inc    %esi

	_078705_jump:
		cmpb   $0x000000,(%esi)
		movsb  %ds:(%esi),%es:(%edi)
		jne    _078705_jump
		pop    %ds
		pop    %esi
		mov    %esp,%ebx
		mov    %bp,_0bd4b8_data
		mov    %edi,_0bd49c_data
		mov    %ebx,_0bd488_data
		ds mov $_0dee14_data,%ecx
		ds mov $_0c117c_data,%edi
		sub    %edi,%ecx
		cmpb   $0x000001,_0bd4ba_data
		jne    _078746_jump
		cmp    $0x001000,%ecx
		jbe    _078746_jump
		mov    $0x001000,%ecx

	_078746_jump:
		mov    %cl,%dl
		shr    $0x000002,%ecx
		sub    %eax,%eax
		rep stos %eax,%es:(%edi)
		mov    %dl,%cl
		and    $0x000003,%cl
		rep stos %al,%es:(%edi)
		ds mov $_0dee14_data,%eax
		add    $0x00000f,%eax
		and    $0x0000f0,%al
		mov    %eax,_0bd490_data
		mov    %esi,_0bd494_data
		mov    $0x0000ff,%eax
		call   _07e222_func
		sub    %ebp,%ebp
		call   _07e1d2_func

	_07877d_jump:
		jmp    _0787a2_jump



_07877f_func:
		push   %edx
		push   %eax
		mov    $_078562_jump,%edx
		mov    $0x003d01,%ax
		int    $0x000021
		mov    %ax,%bx
		pop    %edx
		mov    %edx,%esi
		cld    

	_078793_jump:
		lods   %ds:(%esi),%al
		cmp    $0x000000,%al
		jne    _078793_jump
		mov    %esi,%ecx
		sub    %edx,%ecx
		dec    %ecx
		mov    $0x000040,%ah
		int    $0x000021
		pop    %eax

	_0787a2_jump:
		push   %eax
		mov    $0x000000,%eax
		mov    $0x0000ff,%edx
		call   _07e26d_func
		pop    %eax
		mov    $0x00004c,%ah
		int    $0x000021
		nop



_0787b8_func:
		data16 mov %cs:_078560_jump,%ds
		ret    



_0787d0_func:
		push   %eax
		push   %ecx
		mov    %dl,%dh
		shl    $0x000008,%edx
		mov    %dh,%dl
		shl    $0x000008,%edx
		mov    %dh,%dl
		mov    %ebx,%ecx
		call   _07e480_func
		pop    %ecx
		pop    %eax
		ret    



_0787e8_func:
		push   %ebx
		push   %ecx
		mov    %dl,%bl
		mov    (%eax),%edx
		lea    0x000001(%edx),%ecx
		mov    %ecx,(%eax)
		mov    %bl,(%edx)
		incl   0x000010(%eax)
		pop    %ecx
		pop    %ebx
		ret    



_0787fb_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		lea    0x00001c(%esp),%eax
		mov    0x000018(%esp),%edx
		mov    %esp,%ebx
		mov    $_0787e8_func,%ecx
		mov    %eax,(%esp)
		mov    0x000014(%esp),%eax
		call   _07e523_func
		mov    0x000014(%esp),%edx
		movb   $0x000000,(%edx,%eax,1)
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07882b_jump:
		ret    



_07882c_func:
		push   %edx
		mov    %eax,%edx
		call   *_0bd240_data
		call   *_0bd244_data
		mov    %edx,%eax
		call   _078844_func
		pop    %edx
		ret    



_078844_func:
		push   %edx
		mov    %eax,%edx
		call   *_0bd244_data
		call   *_0bd248_data
		mov    %edx,%eax
		jmp    _07877d_jump



_07885a_func:
		or     %ebx,%ebx
		jne    _078869_jump
		add    %ecx,%ecx
		jne    _078867_jump
		jmp    _07e00b_jump

	_078867_jump:
		rcr    %ecx

	_078869_jump:
		or     %eax,%eax
		jne    _078874_jump
		add    %edx,%edx
		jne    _078872_jump
		ret    

	_078872_jump:
		rcr    %edx

	_078874_jump:
		cmpb   $0x000000,_0bd271_data
		je     _07889e_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		fdivl  (%esp)
		fstpl  0x000008(%esp)
		add    $0x000008,%esp
		fwait
		pop    %eax
		pop    %edx
		cmp    $0x80000000,%edx
		jne    _07889d_jump
		sub    %edx,%edx
		mov    %edx,%eax

	_07889d_jump:
		ret    

	_07889e_jump:
		push   %ebp
		mov    %esp,%ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %cx,%di
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		je     _0788e1_jump
		or     $0x100000,%edx
		jmp    _0788ef_jump

	_0788e1_jump:
		add    %eax,%eax
		adc    %edx,%edx
		dec    %di
		test   $0x100000,%edx
		je     _0788e1_jump

	_0788ef_jump:
		or     %cx,%cx
		je     _0788fc_jump
		or     $0x100000,%esi
		jmp    _07890a_jump

	_0788fc_jump:
		add    %ebx,%ebx
		adc    %esi,%esi
		dec    %cx
		test   $0x100000,%esi
		je     _0788fc_jump

	_07890a_jump:
		sub    %cx,%di
		add    $0x0003ff,%di
		js     _078925_jump
		cmp    $0x0007ff,%di
		jb     _078925_jump
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _07e017_jump

	_078925_jump:
		cmp    $0x00ffcc,%di
		jge    _078933_jump
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _07e006_jump

	_078933_jump:
		push   %edi
		mov    $0x00000b,%cl
		shld   %cl,%eax,%edx
		shld   %cl,%ebp,%eax
		and    $0xfffff800,%eax
		shld   %cl,%ebx,%esi
		shld   %cl,%ebp,%ebx
		and    $0xfffff800,%ebx
		push   %esi
		push   %ebx
		mov    %esi,%ecx
		mov    %edx,%edi
		mov    %eax,%esi
		sub    %eax,%eax
		cmp    %edx,%ecx
		ja     _07895e_jump
		sub    %ecx,%edx
		inc    %eax

	_07895e_jump:
		push   %eax
		mov    %esi,%eax
		div    %ecx
		push   %eax
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %edx,%ebx
		mul    %edx
		add    %ebx,%eax
		adc    $0x000000,%edx
		mov    -0x000014(%ebp),%ebx
		testb  $0x000001,-0x000018(%ebp)
		je     _07897f_jump
		add    %ebx,%eax
		adc    -0x000010(%ebp),%edx

	_07897f_jump:
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     _078999_jump

	_078987_jump:
		subl   $0x000001,-0x00001c(%ebp)
		sbbl   $0x000000,-0x000018(%ebp)
		add    %ebx,%ecx
		adc    -0x000010(%ebp),%esi
		adc    $0x000000,%edi
		jne    _078987_jump

	_078999_jump:
		mov    %esi,%edi
		mov    %ecx,%esi
		mov    -0x000010(%ebp),%ecx
		cmp    %edi,%ecx
		ja     _0789ae_jump
		sub    %ecx,%edi
		addl   $0x000001,-0x00001c(%ebp)
		adcl   $0x000000,-0x000018(%ebp)

	_0789ae_jump:
		mov    %edi,%edx
		mov    %esi,%eax
		div    %ecx
		push   %eax
		or     %eax,%eax
		je     _0789e5_jump
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %edx,%ebx
		mul    %edx
		add    %ebx,%eax
		adc    $0x000000,%edx
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     _0789e5_jump

	_0789ce_jump:
		subl   $0x000001,-0x000020(%ebp)
		sbbl   $0x000000,-0x00001c(%ebp)
		sbbl   $0x000000,-0x000018(%ebp)
		add    -0x000014(%ebp),%ecx
		adc    -0x000010(%ebp),%esi
		adc    $0x000000,%edi
		jne    _0789ce_jump

	_0789e5_jump:
		pop    %eax
		pop    %edx
		pop    %ebx
		add    $0x000008,%esp
		pop    %edi
		dec    %di
		shr    %ebx
		jae    _0789f7_jump
		rcr    %edx
		rcr    %eax
		inc    %edi

	_0789f7_jump:
		sub    %esi,%esi
		mov    $0x00000b,%cl
		shrd   %cl,%edx,%eax
		rcr    %esi
		shrd   %cl,%esi,%edx
		or     $0xfff00000,%edx
		add    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		adc    $0x000000,%edi
		or     %di,%di
		jg     _078a36_jump
		jne    _078a1f_jump
		mov    $0x000001,%cl
		jmp    _078a25_jump

	_078a1f_jump:
		neg    %di
		mov    %di,%cx

	_078a25_jump:
		and    $0x1fffff,%edx
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %di,%di

	_078a36_jump:
		and    $0x0fffff,%edx
		mov    %edi,%esi
		ror    $0x00000b,%edi
		add    %esi,%esi
		rcr    %edi
		and    $0xfff00000,%edi
		or     %edi,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    



_078a51_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000038,%esp
		mov    %eax,-0x000044(%ebp)
		mov    %edx,-0x000040(%ebp)
		mov    %ebx,%esi
		lea    -0x00002c(%ebp),%ebx
		call   _07ef1d_func
		cmpl   $0x000020,-0x00002c(%ebp)
		jl     _078a87_jump
		mov    _0c0fd8_data(,%esi,4),%eax
		lea    -0x000044(%ebp),%edx
		or     $0x000024,%ah
		call   _07ef70_func
		jmp    _078c7f_jump

	_078a87_jump:
		lea    -0x00003c(%ebp),%eax
		push   %eax
		lea    -0x000020(%ebp),%eax
		push   %eax
		push   $0x3fe921fb
		push   $0x54442d18
		mov    -0x000040(%ebp),%ebx
		push   %ebx
		mov    -0x000044(%ebp),%ecx
		push   %ecx
		call   _07f060_func
		mov    %esi,%eax
		mov    -0x000020(%ebp),%edx
		and    $0x000002,%eax
		add    %edx,%eax
		and    $0x000007,%eax
		mov    %eax,-0x000020(%ebp)
		testb  $0x000001,-0x000020(%ebp)
		je     _078ad7_jump
		mov    $0x54442d18,%eax
		mov    $0x3fe921fb,%edx
		mov    -0x00003c(%ebp),%ebx
		mov    -0x000038(%ebp),%ecx
		call   _0780a2_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_078ad7_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		lea    -0x00001c(%ebp),%ebx
		call   _07ef1d_func
		mov    -0x00001c(%ebp),%ebx
		cmp    $0xffffffe6,%ebx
		jge    _078b08_jump
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edi
		xor    %ecx,%ecx
		mov    %eax,-0x000024(%ebp)
		mov    $0x3ff00000,%eax
		mov    %ecx,-0x000028(%ebp)
		mov    %eax,-0x000010(%ebp)
		jmp    _078bab_jump

	_078b08_jump:
		test   %ebx,%ebx
		jle    _078b11_jump
		xor    %eax,%eax
		mov    %eax,-0x00001c(%ebp)

	_078b11_jump:
		mov    -0x00001c(%ebp),%edx
		neg    %edx
		mov    %edx,-0x00001c(%ebp)
		cmp    $0x000008,%edx
		jle    _078b25_jump
		movl   $0x000008,-0x00001c(%ebp)

	_078b25_jump:
		mov    -0x00001c(%ebp),%eax
		mov    _0c0fb4_data(,%eax,4),%eax
		mov    %eax,-0x00001c(%ebp)
		mov    -0x000020(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		jne    _078b3f_jump
		cmp    $0x000001,%esi
		jne    _078b7b_jump

	_078b3f_jump:
		mov    $0x000008,%eax
		mov    -0x00001c(%ebp),%edx
		sub    %edx,%eax
		mov    %eax,-0x000014(%ebp)
		mov    %edx,%eax
		mov    $_0c0f6c_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    -0x00003c(%ebp),%eax
		mov    %edx,-0x000018(%ebp)
		mov    -0x000038(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07825f_func
		mov    -0x000018(%ebp),%ebx
		mov    -0x000014(%ebp),%ecx
		call   _07f159_func
		mov    %eax,-0x000028(%ebp)
		mov    %edx,-0x000010(%ebp)

	_078b7b_jump:
		mov    -0x000020(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		je     _078b88_jump
		cmp    $0x000001,%esi
		jne    _078bab_jump

	_078b88_jump:
		mov    $0x000008,%ecx
		mov    -0x00001c(%ebp),%ebx
		mov    -0x00003c(%ebp),%eax
		sub    %ebx,%ecx
		shl    $0x000003,%ebx
		mov    -0x000038(%ebp),%edx
		add    $_0c0f24_data,%ebx
		call   _07f18e_func
		mov    %eax,-0x000024(%ebp)
		mov    %edx,%edi

	_078bab_jump:
		mov    -0x000020(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		je     _078bc1_jump
		mov    -0x000028(%ebp),%eax
		mov    %eax,-0x000034(%ebp)
		mov    -0x000010(%ebp),%eax
		mov    %eax,-0x000030(%ebp)
		jmp    _078bca_jump

	_078bc1_jump:
		mov    -0x000024(%ebp),%eax
		mov    %edi,-0x000030(%ebp)
		mov    %eax,-0x000034(%ebp)

	_078bca_jump:
		testb  $0x000004,-0x000020(%ebp)
		je     _078be1_jump
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _078d08_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_078be1_jump:
		cmp    $0x000001,%esi
		jne    _078c5c_jump
		mov    -0x000020(%ebp),%edx
		mov    -0x000020(%ebp),%eax
		add    $0x000002,%edx
		add    $0x000003,%eax
		mov    %edx,-0x000020(%ebp)
		test   $0x000002,%al
		je     _078c05_jump
		mov    -0x000028(%ebp),%ebx
		mov    -0x000010(%ebp),%ecx
		jmp    _078c0a_jump

	_078c05_jump:
		mov    -0x000024(%ebp),%ebx
		mov    %edi,%ecx

	_078c0a_jump:
		testb  $0x000004,-0x000020(%ebp)
		je     _078c1d_jump
		mov    %ebx,%eax
		mov    %ecx,%edx
		call   _078d08_func
		mov    %eax,%ebx
		mov    %edx,%ecx

	_078c1d_jump:
		test   %ecx,%ecx
		jne    _078c4b_jump
		call   _07f1d5_func
		cmpl   $0x000000,-0x000030(%ebp)
		jle    _078c39_jump
		mov    _0c1004_data,%eax
		mov    _0c1008_data,%edx
		jmp    _078c7f_jump

	_078c39_jump:
		mov    _0c1004_data,%eax
		mov    _0c1008_data,%edx
		call   _078d08_func
		jmp    _078c7f_jump

	_078c4b_jump:
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _07885a_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_078c5c_jump:
		cmpl   $0x00001c,-0x00002c(%ebp)
		jl     _078c79_jump
		lea    -0x000044(%ebp),%edx
		mov    _0c0fd8_data(,%esi,4),%eax
		lea    -0x000034(%ebp),%ebx
		or     $0x000002,%ah
		call   _07ef7a_func
		jmp    _078c7f_jump

	_078c79_jump:
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx

	_078c7f_jump:
		lea    -0x00000c(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_078c99_func:
		push   %ebx
		cmpb   $0x000000,_0bd271_data
		je     _078caa_jump
		call   _07f2b5_func
		pop    %ebx
		ret    

	_078caa_jump:
		xor    %ebx,%ebx
		call   _078a51_func
		pop    %ebx
		ret    



_078cc0_func:
		push   %ebx
		cmpb   $0x000000,_0bd271_data
		je     _078cd1_jump
		call   _07f2ac_func
		pop    %ebx
		ret    

	_078cd1_jump:
		mov    $0x000002,%ebx
		call   _078a51_func
		pop    %ebx
		ret    



_078d08_func:
		test   %edx,%edx
		je     _078d12_jump
		xor    $0x80000000,%edx

	_078d12_jump:
		ret    



_078d1c_func:
		mov    $0x00001f,%al
		jmp    _078d22_jump



_078d20_func:
		mov    $0x000020,%al

	_078d22_jump:
		add    %edx,%edx
		rcr    %ah
		shr    %ah
		or     %al,%ah
		shr    %edx
		push   %ecx
		mov    %edx,%ecx
		sar    $0x000014,%ecx
		and    $0x0007ff,%cx
		sub    $0x0003fe,%cx
		jl     _078d91_jump
		cmp    $0x000020,%cx
		jg     _078d8a_jump
		and    $0x00003f,%al
		cmp    %al,%cl
		jg     _078d8a_jump
		mov    %ah,%ch
		and    $0x0fffff,%edx
		and    $0xfff00000,%eax
		or     %eax,%edx
		rol    $0x00000c,%edx
		stc    
		rcr    %edx
		rcr    %ch
		cmp    $0x000020,%cl
		jne    _078d6c_jump
		mov    %edx,%eax
		add    %ch,%ch
		jmp    _078d77_jump

	_078d6c_jump:
		sub    %eax,%eax
		shld   %cl,%edx,%eax
		shl    %cl,%edx
		add    %ch,%ch
		add    %edx,%edx

	_078d77_jump:
		mov    $0x0000ff,%cl
		rcr    %cl
		and    %cl,%ch
		add    %ch,%ch
		adc    $0x000000,%eax
		add    %ch,%ch
		jae    _078d88_jump
		neg    %eax

	_078d88_jump:
		pop    %ecx
		ret    

	_078d8a_jump:
		mov    $0x80000000,%eax
		pop    %ecx
		ret    

	_078d91_jump:
		sub    %eax,%eax
		pop    %ecx
		ret    



_078d96_func:
		data16 mov %ss,_0bd24c_data
		ret    



_078d9e_func:
		xchg   %eax,0x000004(%esp)
		call   _078db1_func
		mov    0x000004(%esp),%eax
		ret    $0x000004



_078db1_func:
		cmp    %esp,%eax
		jae    _078dc2_jump
		sub    %esp,%eax
		neg    %eax
		cmp    _0bd49c_data,%eax
		jbe    _078dc2_jump
		ret    

	_078dc2_jump:
		mov    %ss,%ax
		cmp    _0bd24c_data,%ax
		je     _078dcf_jump
		ret    

	_078dcf_jump:
		mov    $_0bd24e_data,%eax
		mov    $0x000001,%edx
		call   _07f3b9_func



_078dde_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		push   %eax
		push   %edx
		mov    %ecx,%ebp
		testb  $0x000001,0x00000c(%ecx)
		jne    _078e08_jump
		mov    $0x000004,%eax
		call   _07f1c9_func
		mov    0x00000c(%ecx),%dh
		or     $0x000020,%dh
		xor    %eax,%eax
		mov    %dh,0x00000c(%ecx)
		jmp    _078fa1_jump

	_078e08_jump:
		imul   %edx,%ebx
		test   %ebx,%ebx
		jne    _078e16_jump
		mov    %ebx,%eax
		jmp    _078fa1_jump

	_078e16_jump:
		cmpl   $0x000000,0x000008(%ecx)
		jne    _078e23_jump
		mov    %ebp,%eax
		call   _07f3d6_func

	_078e23_jump:
		xor    %esi,%esi
		mov    0x00000c(%ebp),%dl
		mov    %esi,0x00000c(%esp)
		test   $0x000040,%dl
		je     _078f22_jump
		mov    %ebx,0x000008(%esp)

	_078e39_jump:
		mov    0x000004(%ebp),%edx
		test   %edx,%edx
		je     _078e94_jump
		mov    0x000008(%esp),%ebx
		cmp    %ebx,%edx
		jbe    _078e4a_jump
		mov    %ebx,%edx

	_078e4a_jump:
		mov    0x000004(%esp),%edi
		mov    %edx,%ecx
		mov    0x000000(%ebp),%esi
		mov    0x00000c(%esp),%ebx
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x000008(%esp),%eax
		mov    0x000000(%ebp),%ecx
		lea    (%edi,%edx,1),%esi
		add    %edx,%ebx
		mov    %esi,0x000004(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    0x000004(%ebp),%edi
		add    %edx,%ecx
		sub    %edx,%eax
		sub    %edx,%edi
		mov    %ecx,0x000000(%ebp)
		mov    %eax,0x000008(%esp)
		mov    %edi,0x000004(%ebp)

	_078e94_jump:
		mov    0x000008(%esp),%ecx
		test   %ecx,%ecx
		je     _078f96_jump
		cmp    0x000014(%ebp),%ecx
		jae    _078eab_jump
		testb  $0x000004,0x00000d(%ebp)
		je     _078f0e_jump

	_078eab_jump:
		mov    0x00000d(%ebp),%cl
		mov    0x000008(%esp),%ebx
		test   $0x000004,%cl
		jne    _078ec4_jump
		cmp    $0x000200,%ebx
		jbe    _078ec4_jump
		and    $0x0000fe,%bh
		xor    %bl,%bl

	_078ec4_jump:
		mov    0x000004(%esp),%edx
		mov    0x000010(%ebp),%eax
		call   _07f44d_func
		cmp    $0xffffffff,%eax
		jne    _078ede_jump
		orb    $0x000020,0x00000c(%ebp)
		jmp    _078f96_jump

	_078ede_jump:
		test   %eax,%eax
		jne    _078eeb_jump

	_078ee2_jump:
		orb    $0x000010,0x00000c(%ebp)
		jmp    _078f96_jump

	_078eeb_jump:
		mov    0x000004(%esp),%edx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%ecx
		add    %eax,%edx
		sub    %eax,%ebx
		add    %eax,%ecx
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)
		mov    %ecx,0x00000c(%esp)
		jmp    _078e39_jump

	_078f0e_jump:
		mov    %ebp,%eax
		call   _079385_func
		test   %eax,%eax
		je     _078f96_jump
		jmp    _078e39_jump

	_078f22_jump:
		mov    0x000004(%esp),%edx
		add    %edx,%ebx

	_078f28_jump:
		cmpl   $0x000000,0x000004(%ebp)
		jne    _078f39_jump
		mov    %ebp,%eax
		call   _079385_func
		test   %eax,%eax
		je     _078f96_jump

	_078f39_jump:
		mov    0x000004(%ebp),%ecx
		mov    0x000000(%ebp),%eax
		dec    %ecx
		lea    0x000001(%eax),%esi
		mov    %ecx,0x000004(%ebp)
		mov    %esi,0x000000(%ebp)
		mov    (%eax),%al
		and    $0x0000ff,%eax
		cmp    $0x00000d,%eax
		jne    _078f7d_jump
		cmpl   $0x000000,0x000004(%ebp)
		jne    _078f66_jump
		mov    %ebp,%eax
		call   _079385_func
		test   %eax,%eax
		je     _078f96_jump

	_078f66_jump:
		mov    0x000004(%ebp),%edi
		mov    0x000000(%ebp),%eax
		dec    %edi
		lea    0x000001(%eax),%esi
		mov    %edi,0x000004(%ebp)
		mov    %esi,0x000000(%ebp)
		mov    (%eax),%al
		and    $0x0000ff,%eax

	_078f7d_jump:
		cmp    $0x00001a,%eax
		je     _078ee2_jump
		mov    %al,(%edx)
		mov    0x00000c(%esp),%eax
		inc    %eax
		inc    %edx
		mov    %eax,0x00000c(%esp)
		cmp    %ebx,%edx
		jne    _078f28_jump

	_078f96_jump:
		mov    0x00000c(%esp),%eax
		mov    (%esp),%esi
		xor    %edx,%edx
		div    %esi

	_078fa1_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_078fa8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		andb   $0x0000ef,0x00000c(%edx)
		cmp    0x000004(%edx),%eax
		jg     _078fd4_jump
		mov    0x000008(%edx),%ebx
		mov    (%edx),%ecx
		sub    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _078fd4_jump
		mov    0x000004(%edx),%edi
		lea    (%ecx,%eax,1),%esi
		sub    %eax,%edi
		mov    %esi,(%edx)
		xor    %eax,%eax
		mov    %edi,0x000004(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_078fd4_jump:
		mov    0x000008(%edx),%eax
		movl   $0x000000,0x000004(%edx)
		mov    %eax,(%edx)
		mov    $0x000001,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_078fea_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%esi
		testb  $0x000006,0x00000c(%eax)
		je     _079052_jump
		testb  $0x000010,0x00000d(%ecx)
		je     _079023_jump
		mov    %ecx,%eax
		call   _07f46c_func
		test   %eax,%eax
		je     _079037_jump
		test   %ebx,%ebx
		jne    _07901a_jump
		test   %esi,%esi
		jge    _07901a_jump

	_079010_jump:
		mov    $0x000009,%eax
		call   _07f1c9_func

	_07901a_jump:
		mov    $0xffffffff,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_079023_jump:
		cmp    $0x000001,%ebx
		jne    _07902b_jump
		sub    0x000004(%ecx),%esi

	_07902b_jump:
		mov    0x000008(%ecx),%eax
		movl   $0x000000,0x000004(%ecx)
		mov    %eax,(%ecx)

	_079037_jump:
		andb   $0x0000eb,0x00000c(%ecx)
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		call   _079956_func
		cmp    $0xffffffff,%eax
		jne    _0790e0_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_079052_jump:
		cmp    $0x000001,%ebx
		jb     _079060_jump
		jbe    _079066_jump
		cmp    $0x000002,%ebx
		je     _0790bc_jump
		jmp    _079010_jump

	_079060_jump:
		test   %ebx,%ebx
		je     _07908b_jump
		jmp    _079010_jump

	_079066_jump:
		mov    %edx,%eax
		mov    %ecx,%edx
		mov    0x000004(%ecx),%edi
		call   _078fa8_func
		test   %eax,%eax
		je     _0790e0_jump
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		sub    %edi,%edx
		call   _079956_func
		cmp    $0xffffffff,%eax
		jne    _0790e0_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07908b_jump:
		mov    0x000010(%ecx),%eax
		call   _07f52b_func
		mov    0x000004(%ecx),%edx
		mov    %esi,%edi
		sub    %edx,%eax
		sub    %eax,%edi
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _078fa8_func
		test   %eax,%eax
		je     _0790e0_jump
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		call   _079956_func
		cmp    $0xffffffff,%eax
		jne    _0790e0_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0790bc_jump:
		mov    0x000008(%ecx),%eax
		mov    0x00000c(%ecx),%dl
		mov    %eax,(%ecx)
		and    $0x0000ef,%dl
		mov    0x000010(%ecx),%eax
		mov    %dl,0x00000c(%ecx)
		mov    %esi,%edx
		movl   $0x000000,0x000004(%ecx)
		call   _079956_func
		cmp    $0xffffffff,%eax
		je     _0790e2_jump

	_0790e0_jump:
		xor    %eax,%eax

	_0790e2_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_079385_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpl   $0x000000,0x000008(%eax)
		jne    _079396_jump
		call   _07f3d6_func

	_079396_jump:
		mov    0x00000d(%ecx),%ah
		test   $0x000020,%ah
		je     _0793ad_jump
		test   $0x000006,%ah
		je     _0793ad_jump
		mov    $0x002000,%eax
		call   _07f712_func

	_0793ad_jump:
		mov    0x00000c(%ecx),%edx
		mov    0x00000c(%ecx),%bl
		mov    0x000008(%ecx),%eax
		and    $0x0000fb,%bl
		mov    %eax,(%ecx)
		and    $0x002400,%edx
		mov    %bl,0x00000c(%ecx)
		cmp    $0x002400,%edx
		jne    _0793ed_jump
		mov    0x000010(%ecx),%ebx
		test   %ebx,%ebx
		jne    _0793ed_jump
		mov    %ebx,0x000004(%ecx)
		call   _079ae7_func
		cmp    $0xffffffff,%eax
		je     _07940a_jump
		mov    (%ecx),%ebx
		mov    %al,(%ebx)
		movl   $0x000001,0x000004(%ecx)
		jmp    _07940a_jump

	_0793ed_jump:
		testb  $0x000004,0x00000d(%ecx)
		je     _0793fa_jump
		mov    $0x000001,%ebx
		jmp    _0793fd_jump

	_0793fa_jump:
		mov    0x000014(%ecx),%ebx

	_0793fd_jump:
		mov    (%ecx),%edx
		mov    0x000010(%ecx),%eax
		call   _07f44d_func
		mov    %eax,0x000004(%ecx)

	_07940a_jump:
		mov    0x000004(%ecx),%esi
		test   %esi,%esi
		jg     _079428_jump
		jne    _079419_jump
		orb    $0x000010,0x00000c(%ecx)
		jmp    _079428_jump

	_079419_jump:
		mov    0x00000c(%ecx),%al
		movl   $0x000000,0x000004(%ecx)
		or     $0x000020,%al
		mov    %al,0x00000c(%ecx)

	_079428_jump:
		mov    0x000004(%ecx),%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079430_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		testb  $0x000002,0x00000c(%edx)
		jne    _079455_jump
		mov    $0x000004,%eax
		call   _07f1c9_func
		orb    $0x000020,0x00000c(%edx)

	_07944b_jump:
		mov    $0xffffffff,%eax
		jmp    _0794ce_jump

	_079455_jump:
		cmpl   $0x000000,0x000008(%edx)
		jne    _079462_jump
		mov    %edx,%eax
		call   _07f3d6_func

	_079462_jump:
		mov    $0x000400,%ecx
		cmp    $0x00000a,%ebx
		jne    _07949f_jump
		mov    0x00000c(%edx),%al
		mov    $0x000600,%ecx
		test   $0x000040,%al
		jne    _07949f_jump
		orb    $0x000010,0x00000d(%edx)
		mov    (%edx),%eax
		movb   $0x00000d,(%eax)
		mov    (%edx),%esi
		inc    %esi
		mov    0x000004(%edx),%edi
		mov    %esi,(%edx)
		inc    %edi
		mov    0x000014(%edx),%ebp
		mov    %edi,0x000004(%edx)
		cmp    %ebp,%edi
		jne    _07949f_jump
		mov    %edx,%eax
		call   _07f46c_func
		test   %eax,%eax
		jne    _07944b_jump

	_07949f_jump:
		orb    $0x000010,0x00000d(%edx)
		mov    (%edx),%eax
		mov    %bl,(%eax)
		mov    (%edx),%eax
		inc    %eax
		mov    0x000004(%edx),%esi
		mov    %eax,(%edx)
		inc    %esi
		mov    0x00000c(%edx),%edi
		mov    %esi,0x000004(%edx)
		test   %edi,%ecx
		jne    _0794bf_jump
		cmp    0x000014(%edx),%esi
		jne    _0794ca_jump

	_0794bf_jump:
		mov    %edx,%eax
		call   _07f46c_func
		test   %eax,%eax
		jne    _07944b_jump

	_0794ca_jump:
		xor    %eax,%eax
		mov    %bl,%al

	_0794ce_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

.data

_0794eb_data:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"

.text



_079510_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x000001(%esp),%ecx
		mov    %dl,(%esp)

	_079526_jump:
		lea    0x000024(%esp),%ebx
		mov    %edi,0x000024(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %eax,(%ebx)
		mov    %cs:_0794eb_data(%edx),%al
		mov    %al,(%ecx)
		mov    0x000024(%esp),%eax
		inc    %ecx
		test   %eax,%eax
		jne    _079526_jump

	_079546_jump:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    _079546_jump
		mov    %ebp,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07955a_func:
		push   %ecx
		mov    %edx,%ecx
		cmp    $0x00000a,%ebx
		jne    _07956c_jump
		test   %eax,%eax
		jge    _07956c_jump
		neg    %eax
		movb   $0x00002d,(%edx)
		inc    %edx

	_07956c_jump:
		call   _079510_func
		mov    %ecx,%eax
		pop    %ecx
		ret    

.data

_079575_data:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"

.text



_07959a_func:
		push   %ecx
		push   %esi
		push   %ebp
		sub    $0x000028,%esp
		push   %edx
		mov    %ebx,%ebp
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x000005(%esp),%ecx
		mov    %dl,0x000004(%esp)

	_0795af_jump:
		lea    0x000028(%esp),%ebx
		mov    %ebp,0x000028(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %edx,(%ebx)
		mov    0x000028(%esp),%edx
		mov    %cs:_079575_data(%edx),%dl
		mov    %dl,(%ecx)
		inc    %ecx
		test   %eax,%eax
		jne    _0795af_jump

	_0795cf_jump:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    _0795cf_jump
		mov    (%esp),%eax
		add    $0x00002c,%esp
		pop    %ebp
		pop    %esi
		pop    %ecx
		ret    



_0795e3_func:
		push   %ecx
		mov    %edx,%ecx
		cmp    $0x00000a,%ebx
		jne    _0795f5_jump
		test   %eax,%eax
		jge    _0795f5_jump
		neg    %eax
		movb   $0x00002d,(%edx)
		inc    %edx

	_0795f5_jump:
		call   _07959a_func
		mov    %ecx,%eax
		pop    %ecx
		ret    



_0795fe_func:
		jmp    _078457_jump



_079604_func:
		mov    %eax,%ecx
		mov    %edx,%eax
		mov    %ebp,%esp
		xchg   %ecx,0x000028(%ebp)
		xchg   %eax,0x00002c(%ebp)
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		pop    %ebp
		pop    %ebx
		pop    %ebx
		pop    %edx
		lret   



_07961d_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    _0bd4ba_data,%ah
		cmp    $0x000002,%ah
		jb     _07963a_jump
		cmp    $0x000008,%ah
		ja     _07963a_jump
		mov    $0x002502,%eax
		mov    %bl,%cl
		jmp    _079646_jump

	_07963a_jump:
		mov    %ebx,%eax
		and    $0x0000ff,%eax
		xor    %cl,%cl
		or     $0x000035,%ah

	_079646_jump:
		push   %es
		int    $0x000021
		mov    %es,%edx
		pop    %es
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_079651_func:
		push   %edx
		mov    %ebx,%edx
		mov    _0bd4ba_data,%bl
		cmp    $0x000002,%bl
		jb     _079672_jump
		cmp    $0x000008,%bl
		ja     _079672_jump
		push   %ds
		mov    %ecx,%ds
		mov    %al,%cl
		mov    $0x000004,%al
		mov    $0x000025,%ah
		int    $0x000021
		pop    %ds
		pop    %edx
		ret    

	_079672_jump:
		push   %ds
		mov    %ecx,%ds
		mov    $0x000025,%ah
		int    $0x000021
		pop    %ds
		pop    %edx
		ret    



_07967c_func:
		mov    $_0bd260_data,%eax
		ret    



_079682_func:
		push   %edx
		call   _07967c_func
		test   %eax,%eax
		je     _0796a4_jump
		imul   $0x41c64e6d,(%eax),%edx
		add    $0x003039,%edx
		mov    %edx,(%eax)
		mov    %edx,%eax
		shr    $0x000010,%eax
		and    $0x007fff,%eax

	_0796a4_jump:
		pop    %edx
		ret    



_0796a6_func:
		push   %edx
		mov    %eax,%edx
		call   _07967c_func
		test   %eax,%eax
		je     _0796b4_jump
		mov    %edx,(%eax)

	_0796b4_jump:
		pop    %edx
		ret    



_0796b6_func:
		push   %ecx
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		mov    %esp,%eax
		call   _07f741_func
		mov    %ecx,%eax
		mov    %esp,%ecx
		call   _07a0bb_func
		add    $0x00000c,%esp
		pop    %ecx
		ret    



_0796d1_func:
		push   %ebx
		push   %edx
		lea    0x000014(%esp),%eax
		add    $0x000004,%eax
		mov    -0x000004(%eax),%eax
		push   %eax
		push   $0x000000
		mov    0x000018(%esp),%edx
		push   %edx
		mov    0x000018(%esp),%ebx
		push   %ebx
		call   _0796f5_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ebx
		ret    



_0796f5_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    0x000024(%esp),%esi

	_079701_jump:
		cmpb   $0x000020,(%esi)
		jne    _079709_jump
		inc    %esi
		jmp    _079701_jump

	_079709_jump:
		mov    0x000028(%esp),%eax
		and    $0x000083,%eax
		mov    %eax,(%esp)
		mov    0x00002c(%esp),%dl
		mov    (%esp),%al
		or     %dl,%al
		mov    %esi,%edx
		mov    $0xffffffff,%edi
		mov    $0x00003d,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,0x000004(%esp)
		test   %eax,%eax
		jl     _07973c_jump
		xor    %edi,%edi
		mov    0x000004(%esp),%di

	_07973c_jump:
		mov    0x000028(%esp),%dh
		test   $0x000003,%dh
		je     _0797b6_jump
		cmp    $0xffffffff,%edi
		je     _0797b6_jump
		mov    %edi,%eax
		call   _07f769_func
		test   %eax,%eax
		jne    _0797b6_jump
		testb  $0x000004,0x000029(%esp)
		je     _07977e_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    $0x000007,%eax
		call   _07f1c9_func
		mov    $0xffffffff,%eax
		jmp    _0798b1_jump

	_07977e_jump:
		test   $0x000040,%dh
		je     _0797b6_jump
		lea    0x000008(%esp),%edx
		mov    %edi,%ebx
		xor    %ecx,%ecx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,0x000004(%esp)
		test   %eax,%eax
		jge    _0797b6_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax

	_0797a5_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%ax
		call   _07e16c_func
		jmp    _0798b1_jump

	_0797b6_jump:
		cmp    $0xffffffff,%edi
		jne    _079844_jump
		testb  $0x000020,0x000028(%esp)
		je     _0797a5_jump
		cmpw   $0x000002,0x000004(%esp)
		jne    _0797a5_jump
		lea    0x000030(%esp),%eax
		add    $0x000004,%eax
		mov    -0x000004(%eax),%eax
		test   %eax,%eax
		jne    _0797e1_jump
		mov    $0x000180,%eax

	_0797e1_jump:
		xor    _0bd53c_data,%eax
		xor    %ecx,%ecx
		test   $0x000080,%al
		jne    _0797f2_jump
		mov    $0x000001,%ecx

	_0797f2_jump:
		mov    %esi,%edx
		and    $0x0000ff,%ecx
		mov    $0x00003c,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,0x000004(%esp)
		test   %eax,%eax
		jl     _0797a5_jump
		mov    0x000004(%esp),%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,0x000004(%esp)
		test   %eax,%eax
		jl     _0797a5_jump
		mov    (%esp),%al
		mov    0x00002c(%esp),%ch
		mov    %esi,%edx
		or     %ch,%al
		mov    $0x00003d,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,0x000004(%esp)
		test   %eax,%eax
		jl     _0797a5_jump
		xor    %edi,%edi
		mov    0x000004(%esp),%di

	_079844_jump:
		mov    %edi,%eax
		call   _07f787_func
		and    $0x00003c,%al
		mov    %eax,%edx
		mov    %edi,%eax
		call   _07f769_func
		test   %eax,%eax
		je     _07985d_jump
		or     $0x000020,%dh

	_07985d_jump:
		andb   $0x00007f,(%esp)
		cmpl   $0x000002,(%esp)
		jne    _07986a_jump
		or     $0x000003,%dl

	_07986a_jump:
		cmpl   $0x000000,(%esp)
		jne    _079873_jump
		or     $0x000001,%dl

	_079873_jump:
		cmpl   $0x000001,(%esp)
		jne    _07987c_jump
		or     $0x000002,%dl

	_07987c_jump:
		testb  $0x000010,0x000028(%esp)
		je     _079886_jump
		or     $0x000080,%dl

	_079886_jump:
		mov    %edx,%eax
		mov    0x000029(%esp),%bl
		or     $0x000040,%al
		test   $0x000003,%bl
		je     _07989a_jump
		test   $0x000002,%bl
		je     _0798a8_jump
		jmp    _0798a6_jump

	_07989a_jump:
		cmpl   $0x000200,_0bd47d_data
		jne    _0798a8_jump

	_0798a6_jump:
		mov    %eax,%edx

	_0798a8_jump:
		mov    %edi,%eax
		call   _07f7dc_func
		mov    %edi,%eax

	_0798b1_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079920_func:
		push   $0x003f00
		push   %ds
		mov    %ecx,%ds
		mov    %edx,%ecx
		mov    %ebx,%edx
		mov    %eax,%ebx
		mov    0x000004(%esp),%eax
		int    $0x000021
		pop    %ds
		push   %ds
		jb     _07993e_jump
		mov    0x00000c(%esp),%ebx
		mov    %eax,(%ebx)

	_07993e_jump:
		call   _07f7f2_func
		pop    %ds
		add    $0x000004,%esp
		ret    $0x000004



_079951_func:
		jmp    _07f805_func



_079956_func:
		push   %ecx
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %ebx,%eax
		mov    %esp,%edi
		mov    %ecx,%ebx
		mov    $0x000042,%ah
		mov    %edx,%ecx
		shr    $0x000010,%ecx
		int    $0x000021
		mov    %ax,%ss:(%edi)
		mov    %dx,%ss:0x000002(%edi)
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    _07998e_jump
		and    $0x00ffff,%eax
		call   _07e16c_func
		mov    $0xffffffff,%eax
		jmp    _079991_jump

	_07998e_jump:
		mov    (%esp),%eax

	_079991_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %ecx
		ret    



_079997_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _079956_func
		mov    %eax,%esi
		cmp    $0xffffffff,%eax
		je     _0799ce_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _079956_func
		mov    %eax,%edi
		mov    %esi,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		call   _079956_func
		mov    %edi,%eax

	_0799ce_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0799d4_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		push   %eax
		mov    %edx,%ebp
		mov    %ebx,%ecx
		call   _07f787_func
		mov    %eax,%edx
		mov    %eax,0x00000c(%esp)
		test   %eax,%eax
		jne    _079a03_jump
		mov    $0x000004,%eax

	_0799f4_jump:
		call   _07f1c9_func
		mov    $0xffffffff,%eax
		jmp    _079adf_jump

	_079a03_jump:
		test   $0x000001,%al
		jne    _079a0e_jump
		mov    $0x000006,%eax
		jmp    _0799f4_jump

	_079a0e_jump:
		test   $0x000040,%al
		je     _079a3c_jump
		mov    (%esp),%ebx
		mov    %ebp,%edx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,0x000008(%esp)
		test   %eax,%eax
		jge    _079adb_jump
		xor    %eax,%eax
		mov    %si,%ax

	_079a32_jump:
		call   _07e16c_func
		jmp    _079adf_jump

	_079a3c_jump:
		xor    %eax,%edx
		mov    %ebx,0x000004(%esp)
		mov    %edx,0x000008(%esp)

	_079a46_jump:
		mov    (%esp),%ebx
		mov    0x000004(%esp),%ecx
		mov    %ebp,%edx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%ebx
		mov    %eax,%esi
		mov    %eax,0x000010(%esp)
		test   %eax,%eax
		jge    _079a6a_jump
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    _079a32_jump

	_079a6a_jump:
		je     _079adb_jump
		mov    0x000008(%esp),%esi
		mov    %ebp,%eax
		xor    %edi,%edi
		lea    (%ebx,%ebp,1),%ecx
		xor    %edx,%edx
		mov    %ecx,0x000014(%esp)
		jmp    _079ab4_jump

	_079a83_jump:
		mov    (%eax),%bl
		cmp    $0x00001a,%bl
		jne    _079aa4_jump
		mov    0x000010(%esp),%ebp
		mov    %edi,%edx
		mov    (%esp),%eax
		sub    %ebp,%edx
		mov    $0x000001,%ebx
		inc    %edx
		call   _079956_func
		mov    %esi,%eax
		jmp    _079adf_jump

	_079aa4_jump:
		cmp    $0x00000d,%bl
		je     _079ab2_jump
		mov    %edx,%ebx
		inc    %esi
		mov    (%eax),%cl
		inc    %edx
		mov    %cl,(%ebx,%ebp,1)

	_079ab2_jump:
		inc    %eax
		inc    %edi

	_079ab4_jump:
		cmp    0x000014(%esp),%eax
		jb     _079a83_jump
		mov    0x000004(%esp),%ecx
		mov    0x00000d(%esp),%ah
		mov    %esi,0x000008(%esp)
		sub    %edx,%ecx
		add    %edx,%ebp
		mov    %ecx,0x000004(%esp)
		test   $0x000020,%ah
		jne    _079adb_jump
		test   %ecx,%ecx
		jne    _079a46_jump

	_079adb_jump:
		mov    0x000008(%esp),%eax

	_079adf_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_079ae7_func:
		push   %edx
		xor    %edx,%edx
		mov    _0bd4ac_data,%eax
		mov    %edx,_0bd4ac_data
		test   %eax,%eax
		jne    _079b02_jump
		mov    $0x000001,%ah
		int    $0x000021
		and    $0x0000ff,%eax

	_079b02_jump:
		pop    %edx
		ret    



_079b16_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)
		call   _07f840_func
		mov    $0xf368cb40,%ebx
		mov    $0x3cc003c9,%ecx
		mov    %eax,%edi
		mov    %edx,%esi
		call   _07a1e6_func
		jge    _079b52_jump
		xor    %esi,%esi
		mov    $0x3ff00000,%edi
		mov    %esi,-0x000034(%ebp)
		mov    %edi,-0x000030(%ebp)
		jmp    _079d3d_jump

	_079b52_jump:
		mov    $0xfefa39ef,%ebx
		mov    $0x40862e42,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07a1e6_func
		jle    _079b8c_jump
		cmpl   $0x000000,-0x000030(%ebp)
		jge    _079b7a_jump
		xor    %ebx,%ebx
		mov    %ebx,-0x000034(%ebp)
		mov    %ebx,-0x000030(%ebp)
		jmp    _079d3d_jump

	_079b7a_jump:
		mov    $0x008104,%eax
		lea    -0x000034(%ebp),%edx
		call   _07ef70_func
		jmp    _079d37_jump

	_079b8c_jump:
		cmpb   $0x000000,_0bd271_data
		je     _079ba5_jump
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _07f84a_func
		jmp    _079d37_jump

	_079ba5_jump:
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		mov    $0x652b8301,%ebx
		mov    $0x3ff71547,%ecx
		call   _07825f_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)
		call   _07f8f3_func
		mov    -0x000030(%ebp),%edx
		mov    %eax,%esi
		mov    -0x000034(%ebp),%eax
		lea    -0x00003c(%ebp),%ebx
		call   _07f840_func
		call   _07f908_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _078d1c_func
		mov    %eax,-0x000014(%ebp)
		test   %esi,%esi
		jge    _079c19_jump
		mov    %eax,%edx
		neg    %edx
		mov    %edx,-0x000014(%ebp)
		test   %ecx,%ecx
		je     _079c19_jump
		lea    -0x000001(%edx),%esi
		xor    %eax,%eax
		mov    $0x3ff00000,%edx
		mov    %esi,-0x000014(%ebp)
		call   _0780a2_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_079c19_jump:
		mov    -0x000030(%ebp),%eax
		xor    %edi,%edi
		test   %eax,%eax
		je     _079c65_jump
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		mov    $0x000004,%ebx
		call   _07f934_func
		lea    -0x00003c(%ebp),%ebx
		call   _07f908_func
		mov    %eax,%ebx
		mov    %edx,%esi
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)
		test   %edx,%edx
		je     _079c58_jump
		mov    $0xfffffffc,%ebx
		call   _07f934_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_079c58_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _078d1c_func
		mov    %eax,%edi

	_079c65_jump:
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07825f_func
		mov    $0x4f237e45,%ebx
		mov    $0x4034d053,%ecx
		mov    %eax,-0x000024(%ebp)
		mov    %edx,%esi
		call   _0780a8_func
		mov    $0x1ac13af9,%ebx
		mov    $0x3fad92de,%ecx
		mov    %eax,-0x00002c(%ebp)
		mov    %edx,-0x000028(%ebp)
		mov    -0x000024(%ebp),%eax
		mov    %esi,%edx
		call   _07825f_func
		mov    $0xa35ca6dc,%ebx
		mov    $0x401cdaa0,%ecx
		call   _0780a8_func
		mov    -0x000034(%ebp),%ebx
		mov    -0x000030(%ebp),%ecx
		call   _07825f_func
		mov    %eax,%esi
		mov    %edx,-0x00001c(%ebp)
		mov    -0x00002c(%ebp),%eax
		mov    -0x000028(%ebp),%edx
		mov    -0x00001c(%ebp),%ecx
		mov    %esi,%ebx
		call   _0780a8_func
		mov    -0x00001c(%ebp),%ecx
		mov    %eax,-0x000020(%ebp)
		mov    %edx,-0x000018(%ebp)
		mov    %esi,%ebx
		mov    -0x00002c(%ebp),%eax
		mov    -0x000028(%ebp),%edx
		call   _0780a2_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000020(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    $_0c0fe4_data,%esi
		call   _07885a_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_079d01_jump:
		test   %edi,%edi
		je     _079d29_jump
		test   $0x000001,%di
		je     _079d22_jump
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		call   _07825f_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_079d22_jump:
		sar    %edi
		add    $0x000008,%esi
		jmp    _079d01_jump

	_079d29_jump:
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		mov    -0x000014(%ebp),%ebx
		call   _07f934_func

	_079d37_jump:
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_079d3d_jump:
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_079d4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%al
		xor    %ebx,%ebx
		call   _07f9d2_func
		mov    %al,(%esp)
		cmp    $0x000072,%al
		je     _079d7f_jump
		cmp    $0x000077,%al
		je     _079d7f_jump
		cmp    $0x000061,%al
		je     _079d7f_jump
		mov    $0x000009,%eax
		call   _07f1c9_func
		xor    %eax,%eax
		jmp    _079df9_jump

	_079d7f_jump:
		mov    %ebx,%eax
		mov    0x000001(%edx),%cl
		or     $0x000003,%al
		cmp    $0x00002b,%cl
		jne    _079dac_jump
		mov    %eax,%ebx
		mov    0x000002(%edx),%cl
		or     $0x000040,%al
		cmp    $0x000062,%cl
		je     _079da8_jump
		cmp    $0x000074,%cl
		je     _079ddf_jump
		cmpl   $0x000200,_0bd47d_data

	_079da6_jump:
		jne    _079ddf_jump

	_079da8_jump:
		mov    %eax,%ebx
		jmp    _079ddf_jump

	_079dac_jump:
		mov    %ebx,%ecx
		or     $0x000040,%cl
		cmpb   $0x000062,0x000001(%edx)
		jne    _079dc5_jump
		mov    0x000002(%edx),%al
		mov    %ecx,%ebx
		cmp    $0x00002b,%al
		jne    _079ddf_jump
		or     $0x000003,%cl
		jmp    _079ddd_jump

	_079dc5_jump:
		cmpb   $0x000074,0x000001(%edx)
		jne    _079dd1_jump
		cmpb   $0x00002b,0x000002(%edx)
		jmp    _079da6_jump

	_079dd1_jump:
		cmpl   $0x000200,_0bd47d_data
		jne    _079ddf_jump

	_079ddd_jump:
		mov    %ecx,%ebx

	_079ddf_jump:
		mov    (%esp),%al
		cmp    $0x000077,%al
		jne    _079deb_jump
		or     $0x000002,%bl
		jmp    _079df7_jump

	_079deb_jump:
		cmp    $0x000061,%al
		jne    _079df4_jump
		or     $0x000082,%bl
		jmp    _079df7_jump

	_079df4_jump:
		or     $0x000001,%bl

	_079df7_jump:
		mov    %ebx,%eax

	_079df9_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079e00_func:
		push   %esi
		push   %edi
		mov    %eax,%esi
		andb   $0x0000fc,0x00000c(%ecx)
		mov    %edx,%eax
		call   _079d4c_func
		mov    0x00000c(%ecx),%edi
		or     %eax,%edi
		xor    %eax,%eax
		mov    %edi,0x00000c(%ecx)
		mov    (%edx),%al
		call   _07f9d2_func
		mov    %al,%dl
		cmp    $0x000072,%al
		jne    _079e47_jump
		mov    0x00000c(%ecx),%dh
		xor    %eax,%eax
		test   $0x000002,%dh
		je     _079e35_jump
		mov    $0x000002,%eax

	_079e35_jump:
		testb  $0x000040,0x00000c(%ecx)
		je     _079e40_jump
		or     $0x000002,%ah
		jmp    _079e43_jump

	_079e40_jump:
		or     $0x000001,%ah

	_079e43_jump:
		push   $0x000000
		jmp    _079e74_jump

	_079e47_jump:
		testb  $0x000001,0x00000c(%ecx)
		setne  %al
		and    $0x0000ff,%eax
		add    $0x000021,%eax
		cmp    $0x000061,%dl
		jne    _079e5f_jump
		or     $0x000010,%al
		jmp    _079e61_jump

	_079e5f_jump:
		or     $0x000040,%al

	_079e61_jump:
		testb  $0x000040,0x00000c(%ecx)
		je     _079e6c_jump
		or     $0x000002,%ah
		jmp    _079e6f_jump

	_079e6c_jump:
		or     $0x000001,%ah

	_079e6f_jump:
		push   $0x000180

	_079e74_jump:
		push   %ebx
		push   %eax
		push   %esi
		call   _0796f5_func
		add    $0x000010,%esp
		mov    %eax,0x000010(%ecx)
		cmpl   $0xffffffff,0x000010(%ecx)
		jne    _079e94_jump
		mov    %ecx,%eax
		call   _07fa88_func
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		ret    

	_079e94_jump:
		movl   $0x000000,0x000004(%ecx)
		movl   $0x000000,0x000008(%ecx)
		movl   $0x000000,0x000014(%ecx)
		cmp    $0x000061,%dl
		jne    _079ebc_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _078fea_func

	_079ebc_jump:
		mov    %ecx,%eax
		call   _07fadf_func
		mov    %ecx,%eax
		pop    %edi
		pop    %esi
		ret    



_079ec8_func:
		push   %ecx
		push   %esi
		mov    %eax,%esi
		xor    %eax,%eax
		call   _07f9e0_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _079ee0_jump
		mov    %esi,%eax
		call   _079e00_func

	_079ee0_jump:
		pop    %esi
		pop    %ecx
		ret    



_079ee3_func:
		push   %ebx
		xor    %ebx,%ebx
		call   _079ec8_func
		pop    %ebx
		ret    



_079f79_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0dedd4_data,%eax

	_079f82_jump:
		test   %eax,%eax
		jne    _079f8e_jump
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

	_079f8e_jump:
		mov    0x000004(%eax),%ebx
		cmp    %ebx,%edx
		je     _079f99_jump
		mov    (%eax),%eax
		jmp    _079f82_jump

	_079f99_jump:
		mov    $0x000001,%edx
		mov    %ebx,%eax
		call   _079fa8_func
		pop    %edx
		pop    %ebx
		ret    



_079fa8_func:
		push   %ebx
		mov    %eax,%ebx
		call   _07a032_func
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _07fa88_func
		mov    %edx,%eax
		pop    %ebx
		ret    



_079fbd_func:
		add    $0x000030,%eax
		cmp    $0x000039,%eax
		jle    _079fc8_jump
		add    $0x000027,%eax

	_079fc8_jump:
		ret    



_079fc9_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%edi
		call   _07fb10_func
		mov    $0x000004,%edx
		mov    %eax,%ebx
		mov    %ecx,%esi
		movb   $0x000074,(%ecx)
		add    %ecx,%edx

	_079fe4_jump:
		mov    %ebx,%eax
		and    $0x00000f,%eax
		call   _079fbd_func
		mov    %al,(%edx)
		dec    %edx
		shr    $0x000004,%ebx
		cmp    %esi,%edx
		jne    _079fe4_jump
		mov    %edi,%eax
		sar    $0x000004,%eax
		and    $0x00000f,%eax
		movb   $0x00005f,0x000005(%ecx)
		call   _079fbd_func
		mov    %al,0x000006(%ecx)
		mov    %edi,%eax
		and    $0x00000f,%eax
		call   _079fbd_func
		movb   $0x00002e,0x000008(%ecx)
		movb   $0x000074,0x000009(%ecx)
		movb   $0x00006d,0x00000a(%ecx)
		movb   $0x000070,0x00000b(%ecx)
		movb   $0x000000,0x00000c(%ecx)
		mov    %al,0x000007(%ecx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07a032_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%ecx
		mov    %edx,%edi
		cmpl   $0x000000,0x00000c(%eax)
		jne    _07a04a_jump
		mov    $0xffffffff,%esi
		jmp    _07a0b1_jump

	_07a04a_jump:
		mov    0x00000d(%eax),%ah
		xor    %esi,%esi
		test   $0x000010,%ah
		je     _07a05d_jump
		mov    %ecx,%eax
		call   _07f46c_func
		mov    %eax,%esi

	_07a05d_jump:
		mov    %ecx,%eax
		call   _07a21e_func
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		je     _07a075_jump
		mov    0x000010(%ecx),%eax
		xor    %ebx,%ebx
		call   _079956_func

	_07a075_jump:
		test   %edi,%edi
		je     _07a083_jump
		mov    0x000010(%ecx),%eax
		call   _07f805_func
		or     %eax,%esi

	_07a083_jump:
		testb  $0x000008,0x00000c(%ecx)
		je     _07a098_jump
		mov    0x000008(%ecx),%eax
		call   _07a4d3_func
		movl   $0x000000,0x000008(%ecx)

	_07a098_jump:
		testb  $0x000008,0x00000d(%ecx)
		je     _07a0b1_jump
		xor    %edx,%edx
		mov    %esp,%eax
		mov    0x000019(%ecx),%dl
		call   _079fc9_func
		mov    %esp,%eax
		call   _0795fe_func

	_07a0b1_jump:
		mov    %esi,%eax
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07a0bb_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %ebx,%ebp
		mov    %ecx,%ebx
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebp,%edx
		call   _07fb16_func
		mov    0x000000(%ebp),%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_07a0d4_func:
		push   %ebx
		push   %edx
		sub    $0x000024,%esp
		mov    %eax,%edx
		mov    %esp,%eax
		call   _07fef4_func
		cmp    $0x0001f4,%eax
		jl     _07a0ec_jump
		incl   (%esp)

	_07a0ec_jump:
		mov    %esp,%eax
		call   _07ffb7_func
		mov    %eax,%ebx
		test   %edx,%edx
		je     _07a0fb_jump
		mov    %eax,(%edx)

	_07a0fb_jump:
		add    $0x000024,%esp
		pop    %edx
		pop    %ebx
		ret    



_07a101_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    %ebx,%ecx
		cmp    %eax,%edx
		je     _07a149_jump
		jae    _07a135_jump
		add    %ebx,%edx
		cmp    %eax,%edx
		jbe    _07a135_jump
		lea    (%eax,%ebx,1),%edi
		lea    -0x000001(%edx),%esi
		dec    %edi
		mov    %ds,%edx
		push   %es
		mov    %edx,%es
		std    
		dec    %esi
		dec    %edi
		shr    %ecx
		rep movsw %ds:(%esi),%es:(%edi)
		adc    %ecx,%ecx
		inc    %esi
		inc    %edi
		data16 rep movsb %ds:(%esi),%es:(%edi)
		pop    %es
		cld    
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07a135_jump:
		mov    %ds,%edx
		mov    %eax,%edi
		push   %es
		mov    %edx,%es
		push   %ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %ecx
		and    $0x000003,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		pop    %es

	_07a149_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07a15f_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07825f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x3ff00000,%edx
		xor    %eax,%eax
		call   _0780a2_func
		test   %edx,%edx
		jge    _07a199_jump
		mov    $0x002041,%eax
		lea    -0x000010(%ebp),%edx
		call   _07ef70_func
		jmp    _07a1df_jump

	_07a199_jump:
		jne    _07a1b3_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		jge    _07a1ad_jump
		mov    $0x54442d18,%eax
		mov    $0x400921fb,%edx
		jmp    _07a1df_jump

	_07a1ad_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		jmp    _07a1df_jump

	_07a1b3_jump:
		call   _07a37e_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		call   _07885a_func
		call   _08011d_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54442d1a,%eax
		mov    $0x3ff921fb,%edx
		call   _0780a2_func

	_07a1df_jump:
		lea    -0x000008(%ebp),%esp
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_07a1e6_func:
		push   %ebp
		test   $0x7ff00000,%edx
		jne    _07a1f1_jump
		sub    %edx,%edx

	_07a1f1_jump:
		test   $0x7ff00000,%ecx
		jne    _07a1fb_jump
		sub    %ecx,%ecx

	_07a1fb_jump:
		mov    %ecx,%ebp
		xor    %edx,%ebp
		mov    $0x000000,%ebp
		js     _07a212_jump
		cmp    %ecx,%edx
		jne    _07a20c_jump
		cmp    %ebx,%eax

	_07a20c_jump:
		je     _07a21a_jump
		rcr    %ecx
		xor    %ecx,%edx

	_07a212_jump:
		add    %edx,%edx
		sbb    $0x000000,%ebp
		add    %ebp,%ebp
		inc    %ebp

	_07a21a_jump:
		mov    %ebp,%eax
		pop    %ebp
		ret    



_07a21e_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000010(%eax),%eax
		call   _07f52b_func
		mov    %eax,%ebx
		cmp    $0xffffffff,%eax
		je     _07a24a_jump
		mov    0x000004(%edx),%ecx
		test   %ecx,%ecx
		je     _07a24a_jump
		testb  $0x000010,0x00000d(%edx)
		je     _07a246_jump
		lea    (%ecx,%ebx,1),%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a246_jump:
		mov    %ebx,%eax
		sub    %ecx,%eax

	_07a24a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a273_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %ebx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		call   _07f8f3_func
		mov    -0x00000c(%ebp),%edx
		mov    %eax,%esi
		mov    -0x000010(%ebp),%eax
		call   _07f8f3_func
		test   %esi,%esi
		jne    _07a2da_jump
		test   %eax,%eax
		jne    _07a2b6_jump
		mov    $0x00204d,%eax
		lea    -0x000018(%ebp),%edx
		lea    -0x000010(%ebp),%ebx
		call   _07ef7a_func
		jmp    _07a359_jump

	_07a2b6_jump:
		jge    _07a2cd_jump
		mov    $0x54442d18,%edx
		mov    $0x400921fb,%ebx

	_07a2c2_jump:
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		jmp    _07a35f_jump

	_07a2cd_jump:
		xor    %edi,%edi
		mov    %esi,-0x00000c(%ebp)
		mov    %edi,-0x000010(%ebp)
		jmp    _07a35f_jump

	_07a2da_jump:
		test   %eax,%eax
		jne    _07a300_jump
		test   %esi,%esi
		jge    _07a2f4_jump
		mov    $0x54442d1a,%ecx
		mov    $0xbff921fb,%esi
		mov    %ecx,-0x000010(%ebp)
		mov    %esi,-0x00000c(%ebp)
		jmp    _07a35f_jump

	_07a2f4_jump:
		mov    $0x54442d1a,%edx
		mov    $0x3ff921fb,%ebx
		jmp    _07a2c2_jump

	_07a300_jump:
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    -0x000010(%ebp),%ebx
		mov    -0x00000c(%ebp),%ecx
		call   _07885a_func
		call   _08011d_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		call   _07f8f3_func
		test   %esi,%esi
		jl     _07a340_jump
		test   %eax,%eax
		jge    _07a35f_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0x54442d18,%ebx
		mov    $0x400921fb,%ecx
		call   _0780a8_func
		jmp    _07a359_jump

	_07a340_jump:
		test   %eax,%eax
		jle    _07a35f_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0x54442d18,%ebx
		mov    $0xc00921fb,%ecx
		call   _0780a8_func

	_07a359_jump:
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)

	_07a35f_jump:
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_07a37e_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		test   %edx,%edx
		jge    _07a39d_jump
		mov    $0x002043,%eax
		lea    -0x000008(%ebp),%edx
		call   _07ef70_func
		jmp    _07a3c8_jump

	_07a39d_jump:
		cmpb   $0x000000,_0bd271_data
		je     _07a3bc_jump
		mov    -0x000008(%ebp),%eax
		push   %ebp
		push   %edx
		push   %eax
		mov    %esp,%ebp
		fldl   0x000000(%ebp)
		fsqrt  
		fstpl  0x000000(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		jmp    _07a3c8_jump

	_07a3bc_jump:
		test   %edx,%edx
		je     _07a3ce_jump
		mov    -0x000008(%ebp),%eax
		call   _080294_func

	_07a3c8_jump:
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)

	_07a3ce_jump:
		mov    -0x000008(%ebp),%eax
		mov    -0x000004(%ebp),%edx
		mov    %ebp,%esp
		pop    %ebp
		ret    



_07a3d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %fs
		push   %gs
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		test   %eax,%eax
		je     _07a3f1_jump
		cmp    $0xffffffd4,%eax
		jbe    _07a3f8_jump

	_07a3f1_jump:
		xor    %eax,%eax
		jmp    _07a4ac_jump

	_07a3f8_jump:
		mov    $_0bd264_data,%ebp
		lea    0x000003(%esi),%edi
		xor    %ah,%ah
		xor    %ebx,%ebx
		mov    %ah,(%esp)
		and    $0x00fffc,%di

	_07a40b_jump:
		mov    %edi,%eax
		cmp    $0x00000c,%edi
		jae    _07a417_jump
		mov    $0x00000c,%eax

	_07a417_jump:
		cmp    _0bd26c_data,%eax
		jbe    _07a437_jump
		mov    _0bd268_data,%ecx
		test   %ecx,%ecx
		jne    _07a46f_jump

	_07a429_jump:
		mov    %ecx,_0bd26c_data
		mov    _0bd264_data,%ecx
		jmp    _07a46f_jump

	_07a437_jump:
		xor    %ecx,%ecx
		jmp    _07a429_jump

	_07a43b_jump:
		mov    %ds,%edx
		mov    %ebp,%eax
		mov    %ecx,_0bd268_data
		and    $0x00ffff,%edx
		mov    %esi,%eax
		mov    %ecx,%ebx
		call   _0804c6_func
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _07a4a2_jump
		mov    _0bd26c_data,%eax
		mov    0x000014(%ecx),%edx
		cmp    %eax,%edx
		jbe    _07a46c_jump
		mov    %edx,_0bd26c_data

	_07a46c_jump:
		mov    0x000008(%ecx),%ecx

	_07a46f_jump:
		test   %ecx,%ecx
		jne    _07a43b_jump
		cmpb   $0x000000,(%esp)
		jne    _07a484_jump
		mov    %esi,%eax
		call   _080a44_func
		test   %eax,%eax
		jne    _07a499_jump

	_07a484_jump:
		mov    %esi,%eax
		call   _080bff_func
		test   %eax,%eax
		je     _07a4a2_jump
		xor    %cl,%cl
		mov    %cl,(%esp)
		jmp    _07a40b_jump

	_07a499_jump:
		movb   $0x000001,(%esp)
		jmp    _07a40b_jump

	_07a4a2_jump:
		xor    %ch,%ch
		mov    %ebx,%eax
		mov    %ch,_0dedd9_data

	_07a4ac_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %gs
		pop    %fs
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a4bb_func:
		push   %ebx
		imul   %edx,%eax
		mov    %eax,%ebx
		call   _07a3d8_func
		test   %eax,%eax
		je     _07a4d1_jump
		xor    %edx,%edx
		call   _0787d0_func

	_07a4d1_jump:
		pop    %ebx
		ret    



_07a4d3_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %ebp
		mov    %eax,%ebx
		mov    _0bd264_data,%ecx
		jmp    _07a4ec_jump

	_07a4e1_jump:
		cmp    %ebx,%ecx
		ja     _07a4e9_jump
		cmp    %edx,%ebx
		jb     _07a4f3_jump

	_07a4e9_jump:
		mov    0x000008(%ecx),%ecx

	_07a4ec_jump:
		mov    0x000008(%ecx),%edx
		test   %edx,%edx
		jne    _07a4e1_jump

	_07a4f3_jump:
		mov    $_0bd264_data,%eax
		mov    %ds,%edx
		and    $0x00ffff,%edx
		mov    %ebx,%eax
		mov    %ecx,%ebx
		call   _08056e_func
		cmp    _0bd268_data,%ecx
		je     _07a524_jump
		mov    _0bd26c_data,%ebp
		mov    0x000014(%ecx),%edx
		cmp    %ebp,%edx
		jbe    _07a524_jump
		mov    %edx,_0bd26c_data

	_07a524_jump:
		xor    %ah,%ah
		mov    %ah,_0dedd9_data
		pop    %ebp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a531_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a546_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		movl   $0x000000,-0x000008(%ebp)
		movl   $0x000000,-0x000004(%ebp)

	_07a565_jump:
		cmpl   $0x000020,-0x000004(%ebp)
		jb     _07a572_jump
		jmp    _07a595_jump

	_07a56d_jump:
		incl   -0x000004(%ebp)
		jmp    _07a565_jump

	_07a572_jump:
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _07a593_jump
		incl   -0x000008(%ebp)

	_07a593_jump:
		jmp    _07a56d_jump

	_07a595_jump:
		mov    -0x000008(%ebp),%eax
		mov    %eax,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a5a5_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a5ba_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a5cf_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		testb  $0x000002,-0x00000c(%ebp)
		je     _07a5f1_jump
		movb   $0x000001,_0bf4ec_data
		jmp    _07a5f8_jump

	_07a5f1_jump:
		movb   $0x000000,_0bf4ec_data

	_07a5f8_jump:
		testb  $0x000001,-0x00000c(%ebp)
		jne    _07a62a_jump
		movb   $0x000001,_0bf4e8_data
		call   _080d89_func
		mov    %cs,%eax
		mov    $_07ac78_func,%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		push   $0x00ffff
		call   _080cc7_func
		add    $0x00000c,%esp
		call   _080db5_func
		jmp    _07a631_jump

	_07a62a_jump:
		movb   $0x000000,_0bf4e8_data

	_07a631_jump:
		cmpl   $0x000000,-0x000010(%ebp)
		je     _07a63d_jump
		testb  $0x000001,-0x00000c(%ebp)
		je     _07a63f_jump

	_07a63d_jump:
		jmp    _07a691_jump

	_07a63f_jump:
		cmpl   $0x00ff00,-0x000010(%ebp)
		jne    _07a65e_jump
		mov    $0x00ffff,%eax
		call   _07ac43_func
		movl   $0x00ff00,_0be02f_data
		jmp    _07a675_jump

	_07a65e_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000010(%ebp)
		call   _07ac43_func
		mov    -0x000010(%ebp),%eax
		mov    %eax,_0be02f_data

	_07a675_jump:
		mov    %cs,_0bdff1_data
		movl   $_07ad42_func,_0bdfed_data
		movl   $0x010000,_0be06f_data
		jmp    _07a69b_jump

	_07a691_jump:
		movl   $0x00ffff,_0bdf8f_data

	_07a69b_jump:
		movl   $0x000000,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07a6ab_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		cmpb   $0x000000,_0bf4e8_data
		je     _07a6d4_jump
		call   _080d89_func
		call   _080de1_func
		call   _080db5_func

	_07a6d4_jump:
		movl   $0x000000,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a6e5_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000020,%esp
		mov    %eax,-0x000018(%ebp)
		mov    %cx,-0x00001c(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x00000c(%ebp)
		movl   $0x000000,-0x000004(%ebp)

	_07a709_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07a716_jump
		jmp    _07a72f_jump

	_07a711_jump:
		incl   -0x000004(%ebp)
		jmp    _07a709_jump

	_07a716_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0bdf93_data(%eax)
		jne    _07a72d_jump
		cmpw   $0x000000,_0bdf97_data(%eax)
		je     _07a72f_jump

	_07a72d_jump:
		jmp    _07a711_jump

	_07a72f_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07a741_jump
		movl   $0x00000b,-0x000014(%ebp)
		jmp    _07a8e8_jump

	_07a741_jump:
		cmpb   $0x000000,_0bf4e8_data
		je     _07a74f_jump
		call   _080d89_func

	_07a74f_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		imul   $0x000006,-0x000004(%ebp),%edx
		mov    -0x00001c(%ebp),%eax
		mov    %ax,_0bdf97_data(%edx)
		mov    -0x000020(%ebp),%eax
		mov    %eax,_0bdf93_data(%edx)
		mov    -0x000004(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000018(%ebp),%eax
		mov    %eax,_0bdff3_data(%edx)
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		cmp    _0bdf8f_data,%eax
		jae    _07a7ba_jump
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		call   _07ac43_func
		mov    _0bdf8f_data,%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,-0x00000c(%ebp)

	_07a7ba_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07a7c1_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07a7d1_jump
		jmp    _07a8c9_jump

	_07a7cc_jump:
		incl   -0x000004(%ebp)
		jmp    _07a7c1_jump

	_07a7d1_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0bdf93_data(%eax)
		jne    _07a7ec_jump
		cmpw   $0x000000,_0bdf97_data(%eax)
		je     _07a8c4_jump

	_07a7ec_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0bdff3_data(%eax)
		jne    _07a844_jump
		cmpl   $0x00ffff,_0bdf8f_data
		jne    _07a81c_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x010000,_0be033_data(%eax)
		jmp    _07a842_jump

	_07a81c_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0bdf8f_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    $0x123333,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be033_data(%eax)

	_07a842_jump:
		jmp    _07a876_jump

	_07a844_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0bdff3_data(%eax),%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0bdf8f_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be033_data(%eax)

	_07a876_jump:
		cmpl   $0x000000,-0x00000c(%ebp)
		je     _07a8c4_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    -0x00000c(%ebp),%edx
		and    $0x00ffff,%edx
		mov    _0be073_data(%eax),%eax
		imul   %edx,%eax
		shr    $0x000010,%eax
		mov    %eax,-0x000010(%ebp)
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    -0x00000c(%ebp),%edx
		shr    $0x000010,%edx
		mov    _0be073_data(%eax),%eax
		imul   %edx,%eax
		shr    $0x000010,%eax
		add    %eax,-0x000010(%ebp)
		mov    -0x000004(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000010(%ebp),%eax
		mov    %eax,_0be073_data(%edx)

	_07a8c4_jump:
		jmp    _07a7cc_jump

	_07a8c9_jump:
		cmpb   $0x000000,_0bf4e8_data
		je     _07a8d7_jump
		call   _080db5_func

	_07a8d7_jump:
		mov    -0x000008(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000014(%ebp)

	_07a8e8_jump:
		mov    -0x000014(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000008



_07aa6a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		movl   $0x000000,-0x000008(%ebp)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bdf97_data(%eax)
		movl   $0x000000,_0bdf93_data(%eax)
		movl   $0x000000,-0x000004(%ebp)

	_07aaa0_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07aaad_jump
		jmp    _07aafa_jump

	_07aaa8_jump:
		incl   -0x000004(%ebp)
		jmp    _07aaa0_jump

	_07aaad_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0bdf93_data(%eax)
		jne    _07aac4_jump
		cmpw   $0x000000,_0bdf97_data(%eax)
		je     _07aaf8_jump

	_07aac4_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0bdff3_data(%eax),%eax
		cmp    -0x000008(%ebp),%eax
		jbe    _07aae7_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0bdff3_data(%eax)
		jne    _07aae9_jump

	_07aae7_jump:
		jmp    _07aaf8_jump

	_07aae9_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0bdff3_data(%eax),%eax
		mov    %eax,-0x000008(%ebp)

	_07aaf8_jump:
		jmp    _07aaa8_jump

	_07aafa_jump:
		cmpl   $0x000000,-0x000008(%ebp)
		je     _07ab11_jump
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000008(%ebp)
		call   _07ac43_func
		jmp    _07ab1b_jump

	_07ab11_jump:
		mov    $0x00ffff,%eax
		call   _07ac43_func

	_07ab1b_jump:
		cmpb   $0x000000,_0bf4e8_data
		je     _07ab29_jump
		call   _080d89_func

	_07ab29_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07ab30_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07ab40_jump
		jmp    _07abfa_jump

	_07ab3b_jump:
		incl   -0x000004(%ebp)
		jmp    _07ab30_jump

	_07ab40_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0bdf93_data(%eax)
		jne    _07ab5b_jump
		cmpw   $0x000000,_0bdf97_data(%eax)
		je     _07abf5_jump

	_07ab5b_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0bdff3_data(%eax)
		jne    _07abb3_jump
		cmpl   $0x00ffff,_0bdf8f_data
		jne    _07ab8b_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x010000,_0be033_data(%eax)
		jmp    _07abb1_jump

	_07ab8b_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0bdf8f_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    $0x123333,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be033_data(%eax)

	_07abb1_jump:
		jmp    _07abe5_jump

	_07abb3_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0bdff3_data(%eax),%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0bdf8f_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be033_data(%eax)

	_07abe5_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0be073_data(%eax)

	_07abf5_jump:
		jmp    _07ab3b_jump

	_07abfa_jump:
		cmpb   $0x000000,_0bf4e8_data
		je     _07ac08_jump
		call   _080db5_func

	_07ac08_jump:
		movl   $0x000000,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ac43_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %eax,_0bdf8f_data
		pushl  -0x000008(%ebp)
		call   _080c81_func
		add    $0x000004,%esp
		movl   $0x000000,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ac78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		incl   _0be2c2_data
		movl   $0x000000,_0be4ac_data

	_07ac96_jump:
		cmpl   $0x000010,_0be4ac_data
		jb     _07acac_jump
		jmp    _07ad35_jump

	_07aca4_jump:
		incl   _0be4ac_data
		jmp    _07ac96_jump

	_07acac_jump:
		imul   $0x000006,_0be4ac_data,%eax
		cmpl   $0x000000,_0bdf93_data(%eax)
		jne    _07acc6_jump
		cmpw   $0x000000,_0bdf97_data(%eax)
		je     _07ad30_jump

	_07acc6_jump:
		mov    _0be4ac_data,%eax
		shl    $0x000002,%eax
		mov    _0be4ac_data,%edx
		shl    $0x000002,%edx
		mov    _0be033_data(%edx),%edx
		add    %edx,_0be073_data(%eax)
		mov    _0be4ac_data,%eax
		shl    $0x000002,%eax
		testb  $0x000001,_0be075_data(%eax)
		je     _07ad30_jump
		mov    _0be4ac_data,%eax
		shl    $0x000002,%eax
		movw   $0x000000,_0be075_data(%eax)
		mov    _0be4ac_data,%eax
		cmpb   $0x0000ff,_0be0b3_data(%eax)
		je     _07ad23_jump
		mov    _0be4ac_data,%eax
		mov    _0be0b3_data(%eax),%al
		mov    %al,_0be0c3_data

	_07ad23_jump:
		imul   $0x000006,_0be4ac_data,%eax
		lcall  *_0bdf93_data(%eax)

	_07ad30_jump:
		jmp    _07aca4_jump

	_07ad35_jump:
		decl   _0be2c2_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lret   



_07ad42_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		call   _080e5d_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lret   



_07ad5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ad71_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ad86_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %dx,-0x000010(%ebp)
		mov    %eax,-0x000014(%ebp)
		cmpl   $0x000000,_0be322_data
		je     _07adaf_jump
		movl   $0x000003,-0x00000c(%ebp)
		jmp    _07aec7_jump

	_07adaf_jump:
		movl   $0x00002c,-0x000008(%ebp)
		cmpl   $0x000000,-0x000014(%ebp)
		jne    _07adc3_jump
		cmpw   $0x000000,-0x000010(%ebp)
		je     _07ade1_jump

	_07adc3_jump:
		mov    -0x000014(%ebp),%edx
		mov    $_0be1c3_data,%eax
		call   _080eb7_func
		mov    $_0c0bcc_data,%edx
		mov    $_0be1c3_data,%eax
		call   _080ed6_func
		jmp    _07adf0_jump

	_07ade1_jump:
		mov    $_0c0bcc_data,%edx
		mov    $_0be1c3_data,%eax
		call   _080eb7_func

	_07adf0_jump:
		push   $0x000200
		mov    $_0be1c3_data,%eax
		push   %eax
		call   _0796d1_func
		add    $0x000008,%esp
		mov    %eax,_0be332_data
		cmpl   $0xffffffff,_0be332_data
		jne    _07ae1d_jump
		movl   $0x00000f,-0x00000c(%ebp)
		jmp    _07aec7_jump

	_07ae1d_jump:
		mov    -0x000008(%ebp),%ebx
		mov    $_0be2c6_data,%edx
		mov    _0be332_data,%eax
		call   _0799d4_func
		mov    _0be2ee_data,%eax
		mov    %eax,-0x000004(%ebp)
		mov    $_0be342_data,%eax
		push   %eax
		mov    $_0be33e_data,%eax
		push   %eax
		push   $0x001000
		call   _080f8b_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,_0be32a_data
		mov    %ecx,_0be326_data
		movzwl _0be32a_data,%eax
		push   %eax
		pushl  _0be326_data
		call   _08104f_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,_0be330_data
		mov    %ecx,_0be32c_data
		push   $0x001000
		pushl  _0be342_data
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07aea8_jump
		movl   $0x000005,-0x00000c(%ebp)
		jmp    _07aec7_jump

	_07aea8_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0be332_data,%eax
		call   _079956_func
		movl   $0x000001,_0be322_data
		movl   $0x000000,-0x00000c(%ebp)

	_07aec7_jump:
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07aed0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		movl   $0x000000,_0be322_data
		mov    _0be332_data,%eax
		call   _079951_func
		push   $0x001000
		pushl  _0be342_data
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07af12_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07af51_jump

	_07af12_jump:
		pushl  _0be33e_data
		movzwl _0be32a_data,%eax
		push   %eax
		pushl  _0be326_data
		call   _081019_func
		add    $0x00000c,%esp
		pushl  _0be33e_data
		movzwl _0be330_data,%eax
		push   %eax
		pushl  _0be32c_data
		call   _081019_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_07af51_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b374_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000038,%esp
		mov    %dx,-0x000034(%ebp)
		mov    %eax,-0x000038(%ebp)
		mov    %cx,-0x00002c(%ebp)
		mov    %ebx,-0x000030(%ebp)
		movl   $0xffffffff,-0x000008(%ebp)
		movl   $0x000030,-0x000014(%ebp)
		movl   $0x000000,-0x000020(%ebp)
		movl   $0x000000,-0x000024(%ebp)
		cmpl   $0x000000,-0x000038(%ebp)
		jne    _07b3c2_jump
		cmpw   $0x000000,-0x000034(%ebp)
		jne    _07b3c2_jump
		movl   $0x000002,-0x000028(%ebp)
		jmp    _07b5bf_jump

	_07b3c2_jump:
		movl   $0x000000,-0x00000c(%ebp)
		movl   $0x000000,-0x000010(%ebp)
		movl   $0x000000,_0be33a_data
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0be332_data,%eax
		call   _079956_func
		mov    $0x00002c,%ebx
		mov    $_0be2c6_data,%edx
		mov    _0be332_data,%eax
		call   _0799d4_func

	_07b3fc_jump:
		mov    _0be33a_data,%eax
		cmp    _0be2e6_data,%eax
		ja     _07b40f_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		je     _07b414_jump

	_07b40f_jump:
		jmp    _07b5b8_jump

	_07b414_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    _0be332_data,%eax
		call   _079956_func
		mov    %eax,-0x000018(%ebp)
		mov    -0x000014(%ebp),%ebx
		mov    $_0be2f2_data,%edx
		mov    _0be332_data,%eax
		call   _0799d4_func
		mov    _0be316_data,%eax
		mov    %eax,-0x000004(%ebp)
		mov    _0be31a_data,%eax
		mov    %eax,-0x000008(%ebp)
		testb  $0x000080,_0be31f_data
		je     _07b59b_jump
		lea    -0x00001c(%ebp),%eax
		push   %eax
		mov    -0x000004(%ebp),%edx
		mov    _0be32a_data,%bx
		mov    _0be326_data,%eax
		mov    _0be332_data,%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _079920_func
		mov    %ds,%eax
		mov    $_0be34c_data,%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		movzwl _0be32a_data,%eax
		push   %eax
		pushl  _0be326_data
		movzwl _0be330_data,%eax
		push   %eax
		pushl  _0be32c_data
		call   _08124a_func
		add    $0x000018,%esp
		testb  $0x000001,_0be389_data
		je     _07b514_jump
		movzwl _0be32a_data,%eax
		push   %eax
		pushl  _0be326_data
		movzwl _0be330_data,%eax
		push   %eax
		pushl  _0be32c_data
		call   _08147d_func
		add    $0x000010,%esp
		movl   $0x000000,-0x000020(%ebp)

	_07b4df_jump:
		pushl  -0x000020(%ebp)
		call   _0814bc_func
		add    $0x000004,%esp
		test   %eax,%eax
		je     _07b514_jump
		pushl  -0x000020(%ebp)
		call   _0814bc_func
		add    $0x000004,%esp
		call   _081794_func
		mov    %eax,-0x000024(%ebp)
		pushl  -0x000024(%ebp)
		pushl  -0x000020(%ebp)
		call   _081506_func
		add    $0x000008,%esp
		incl   -0x000020(%ebp)
		jmp    _07b4df_jump

	_07b514_jump:
		movzwl _0be32a_data,%eax
		push   %eax
		pushl  _0be326_data
		movzwl _0be330_data,%eax
		push   %eax
		pushl  _0be32c_data
		call   _0811e3_func
		add    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		cmpl   $0x000000,-0x000010(%ebp)
		je     _07b599_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,_0be336_data
		movzwl -0x000034(%ebp),%eax
		push   %eax
		pushl  -0x000038(%ebp)
		movzwl _0be32a_data,%eax
		push   %eax
		pushl  _0be326_data
		movzwl _0be330_data,%eax
		push   %eax
		pushl  _0be32c_data
		call   _08124a_func
		add    $0x000018,%esp
		mov    -0x000034(%ebp),%eax
		mov    %ax,_0be34a_data
		mov    -0x000038(%ebp),%eax
		mov    %eax,_0be346_data
		mov    -0x000010(%ebp),%eax
		lgs    -0x000030(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000028(%ebp)
		jmp    _07b5bf_jump

	_07b599_jump:
		jmp    _07b5ad_jump

	_07b59b_jump:
		mov    $0x000001,%ebx
		mov    -0x000004(%ebp),%edx
		mov    _0be332_data,%eax
		call   _079956_func

	_07b5ad_jump:
		incl   _0be33a_data
		jmp    _07b3fc_jump

	_07b5b8_jump:
		movl   $0x000007,-0x000028(%ebp)

	_07b5bf_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		ret    



_07b7ec_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00002c,%esp
		mov    %dx,-0x000028(%ebp)
		mov    %eax,-0x00002c(%ebp)
		movl   $0x000030,-0x000018(%ebp)
		cmpl   $0x000000,-0x00002c(%ebp)
		jne    _07b820_jump
		cmpw   $0x000000,-0x000028(%ebp)
		jne    _07b820_jump
		movl   $0x000002,-0x000024(%ebp)
		jmp    _07b96b_jump

	_07b820_jump:
		xor    %ebx,%ebx
		mov    _0be336_data,%edx
		mov    _0be332_data,%eax
		call   _079956_func
		movl   $0x000000,-0x00001c(%ebp)

	_07b839_jump:
		lgs    _0be346_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		cmpw   $0x00ffff,%gs:(%eax)
		je     _07b886_jump
		lgs    _0be346_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		movswl %gs:(%eax),%eax
		push   %eax
		call   _081413_func
		add    $0x000004,%esp
		incl   -0x00001c(%ebp)
		jmp    _07b839_jump

	_07b886_jump:
		movzwl _0be32a_data,%eax
		push   %eax
		pushl  _0be326_data
		movzwl _0be330_data,%eax
		push   %eax
		pushl  _0be32c_data
		call   _081206_func
		add    $0x000010,%esp
		movl   $0x000000,-0x00001c(%ebp)

	_07b8b1_jump:
		lgs    _0be346_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		cmpw   $0x00ffff,%gs:(%eax)
		je     _07b8fe_jump
		lgs    _0be346_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		movswl %gs:(%eax),%eax
		push   %eax
		call   _081448_func
		add    $0x000004,%esp
		incl   -0x00001c(%ebp)
		jmp    _07b8b1_jump

	_07b8fe_jump:
		mov    _0bf5e4_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:(%eax)
		mov    _0bf5e8_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:0x000008(%eax)
		mov    _0bf5ec_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:0x000004(%eax)
		mov    _0bf5f0_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:0x00000c(%eax)
		testb  $0x000001,_0be388_data
		jne    _07b964_jump
		cmpl   $0x000001,_0bf5ec_data
		jbe    _07b950_jump
		cmpl   $0x000010,_0bf5ec_data
		jb     _07b952_jump

	_07b950_jump:
		jmp    _07b95b_jump

	_07b952_jump:
		movl   $0x000000,-0x000024(%ebp)
		jmp    _07b96b_jump

	_07b95b_jump:
		movl   $0x000011,-0x000024(%ebp)
		jmp    _07b96b_jump

	_07b964_jump:
		movl   $0x000000,-0x000024(%ebp)

	_07b96b_jump:
		mov    -0x000024(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07ba45_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ba5a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ba6f_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    $_0817ee_func,%edx
		mov    $_08182d_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0817ee_func,%eax
		push   %eax
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07baa8_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bd2b_jump

	_07baa8_jump:
		mov    $_081842_func,%edx
		mov    $_0818e8_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_081842_func,%eax
		push   %eax
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bad3_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bd2b_jump

	_07bad3_jump:
		mov    $_07df05_func,%edx
		mov    $_07dff0_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07df05_func,%eax
		push   %eax
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bafe_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bd2b_jump

	_07bafe_jump:
		mov    $_07ba5a_func,%edx
		mov    $_07ce04_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07ba5a_func,%eax
		push   %eax
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bb29_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bd2b_jump

	_07bb29_jump:
		mov    $_0818fd_func,%edx
		mov    $_081ea9_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0818fd_func,%eax
		push   %eax
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bb54_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bd2b_jump

	_07bb54_jump:
		mov    $_07a531_func,%edx
		mov    $_07a5a5_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07a531_func,%eax
		push   %eax
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bb7f_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bd2b_jump

	_07bb7f_jump:
		mov    $_081ebe_func,%edx
		mov    $_081f35_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_081ebe_func,%eax
		push   %eax
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bbaa_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bd2b_jump

	_07bbaa_jump:
		mov    $_07ce19_func,%edx
		mov    $_07d86c_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07ce19_func,%eax
		push   %eax
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bbd5_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bd2b_jump

	_07bbd5_jump:
		mov    $_07a5ba_func,%edx
		mov    $_07ad5c_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07a5ba_func,%eax
		push   %eax
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bc00_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bd2b_jump

	_07bc00_jump:
		mov    $_07d881_func,%edx
		mov    $_07def0_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07d881_func,%eax
		push   %eax
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bc2b_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bd2b_jump

	_07bc2b_jump:
		mov    $_07ad71_func,%edx
		mov    $_07ba45_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07ad71_func,%eax
		push   %eax
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bc56_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bd2b_jump

	_07bc56_jump:
		mov    $_080c04_jump,%edx
		mov    $_080eb6_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_080c04_jump,%eax
		push   %eax
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bc81_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bd2b_jump

	_07bc81_jump:
		mov    $_080f10_jump,%edx
		mov    $_081793_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_080f10_jump,%eax
		push   %eax
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bcac_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bd2b_jump

	_07bcac_jump:
		mov    $_0bd598_data,%edx
		mov    $_0be4b0_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bd598_data,%eax
		push   %eax
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bcd4_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bd2b_jump

	_07bcd4_jump:
		mov    $_0be4b4_data,%edx
		mov    $_0bf4f0_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0be4b4_data,%eax
		push   %eax
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bcfc_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bd2b_jump

	_07bcfc_jump:
		mov    $_0bf4f4_data,%edx
		mov    $_0bf5f4_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bf4f4_data,%eax
		push   %eax
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bd24_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bd2b_jump

	_07bd24_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07bd2b_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07bd35_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    $_0817ee_func,%edx
		mov    $_08182d_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0817ee_func,%eax
		push   %eax
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bd6e_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bff1_jump

	_07bd6e_jump:
		mov    $_081842_func,%edx
		mov    $_0818e8_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_081842_func,%eax
		push   %eax
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bd99_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bff1_jump

	_07bd99_jump:
		mov    $_07df05_func,%edx
		mov    $_07dff0_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07df05_func,%eax
		push   %eax
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bdc4_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bff1_jump

	_07bdc4_jump:
		mov    $_07ba5a_func,%edx
		mov    $_07ce04_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07ba5a_func,%eax
		push   %eax
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bdef_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bff1_jump

	_07bdef_jump:
		mov    $_0818fd_func,%edx
		mov    $_081ea9_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0818fd_func,%eax
		push   %eax
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07be1a_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bff1_jump

	_07be1a_jump:
		mov    $_07a531_func,%edx
		mov    $_07a5a5_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07a531_func,%eax
		push   %eax
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07be45_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bff1_jump

	_07be45_jump:
		mov    $_081ebe_func,%edx
		mov    $_081f35_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_081ebe_func,%eax
		push   %eax
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07be70_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bff1_jump

	_07be70_jump:
		mov    $_07ce19_func,%edx
		mov    $_07d86c_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07ce19_func,%eax
		push   %eax
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07be9b_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bff1_jump

	_07be9b_jump:
		mov    $_07a5ba_func,%edx
		mov    $_07ad5c_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07a5ba_func,%eax
		push   %eax
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bec6_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bff1_jump

	_07bec6_jump:
		mov    $_07d881_func,%edx
		mov    $_07def0_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07d881_func,%eax
		push   %eax
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bef1_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bff1_jump

	_07bef1_jump:
		mov    $_07ad71_func,%edx
		mov    $_07ba45_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07ad71_func,%eax
		push   %eax
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bf1c_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bff1_jump

	_07bf1c_jump:
		mov    $_080c04_jump,%edx
		mov    $_080eb6_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_080c04_jump,%eax
		push   %eax
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bf47_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bff1_jump

	_07bf47_jump:
		mov    $_080f10_jump,%edx
		mov    $_081793_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_080f10_jump,%eax
		push   %eax
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bf72_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bff1_jump

	_07bf72_jump:
		mov    $_0bd598_data,%edx
		mov    $_0be4b0_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bd598_data,%eax
		push   %eax
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bf9a_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bff1_jump

	_07bf9a_jump:
		mov    $_0be4b4_data,%edx
		mov    $_0bf4f0_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0be4b4_data,%eax
		push   %eax
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bfc2_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bff1_jump

	_07bfc2_jump:
		mov    $_0bf4f4_data,%edx
		mov    $_0bf5f4_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bf4f4_data,%eax
		push   %eax
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07bfea_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07bff1_jump

	_07bfea_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07bff1_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07bffb_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %dx,-0x000010(%ebp)
		mov    %eax,-0x000014(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		call   _07ba6f_func
		mov    %eax,-0x000004(%ebp)
		cmpl   $0x000000,-0x000004(%ebp)
		je     _07c027_jump
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		jmp    _07c06c_jump

	_07c027_jump:
		movl   $0x000001,_0be41c_data
		cmpl   $0x000000,-0x000014(%ebp)
		jne    _07c03e_jump
		cmpw   $0x000000,-0x000010(%ebp)
		je     _07c05e_jump

	_07c03e_jump:
		mov    -0x000010(%ebp),%ebx
		mov    -0x000014(%ebp),%eax
		mov    %ds,%edi
		mov    $_0be0c4_data,%edx
		mov    %edi,%esi
		mov    %edx,%edi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _081f4a_func
		jmp    _07c065_jump

	_07c05e_jump:
		movb   $0x000000,_0be0c4_data

	_07c065_jump:
		movl   $0x000000,-0x000008(%ebp)

	_07c06c_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07c074_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		call   _07bd35_func
		mov    %eax,-0x000004(%ebp)
		cmpl   $0x000000,-0x000004(%ebp)
		je     _07c099_jump
		movl   $0x000000,-0x000008(%ebp)
		jmp    _07c0aa_jump

	_07c099_jump:
		movl   $0x000000,_0be41c_data
		movl   $0x000000,-0x000008(%ebp)

	_07c0aa_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c0b4_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000084,%esp
		mov    %eax,-0x000034(%ebp)
		mov    %cx,-0x000078(%ebp)
		mov    %ebx,-0x00007c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000004(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000010(%eax),%eax
		mov    %eax,-0x000008(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000008(%eax),%ax
		mov    %ax,-0x000048(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000004(%eax),%eax
		mov    %eax,-0x00004c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00000c(%eax),%eax
		mov    %eax,-0x000010(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000010(%eax),%eax
		mov    %eax,-0x000014(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000014(%eax),%eax
		mov    %eax,-0x000018(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000018(%eax),%eax
		mov    %eax,-0x00001c(%ebp)
		movl   $0x000006,-0x00002c(%ebp)
		movl   $0x000000,-0x000028(%ebp)

	_07c131_jump:
		cmpl   $0x000005,-0x000028(%ebp)
		jb     _07c13e_jump
		jmp    _07c157_jump

	_07c139_jump:
		incl   -0x000028(%ebp)
		jmp    _07c131_jump

	_07c13e_jump:
		mov    -0x000028(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bdb4a_data(%eax)
		jne    _07c155_jump
		mov    -0x000028(%ebp),%eax
		mov    %eax,-0x00002c(%ebp)
		jmp    _07c157_jump

	_07c155_jump:
		jmp    _07c139_jump

	_07c157_jump:
		cmpl   $0x000006,-0x00002c(%ebp)
		jne    _07c169_jump
		movl   $0x00000b,-0x000024(%ebp)
		jmp    _07c96a_jump

	_07c169_jump:
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000034(%ebp),%eax
		mov    %eax,_0bdb4a_data(%edx)
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000024(%eax)
		jne    _07c18f_jump
		lgs    0x000014(%ebp),%eax
		cmpw   $0x000000,%gs:0x000028(%eax)
		je     _07c1f2_jump

	_07c18f_jump:
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000028(%eax),%ax
		mov    %ax,-0x000058(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000024(%eax),%eax
		mov    %eax,-0x00005c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000030(%eax),%ax
		mov    %ax,-0x000060(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00002c(%eax),%eax
		mov    %eax,-0x000064(%ebp)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000058(%ebp),%eax
		mov    %ax,_0bd5c8_data(%edx)
		mov    -0x00005c(%ebp),%eax
		mov    %eax,_0bd5c4_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000060(%ebp),%eax
		mov    %ax,_0bd5e6_data(%edx)
		mov    -0x000064(%ebp),%eax
		mov    %eax,_0bd5e2_data(%edx)
		jmp    _07c2b0_jump

	_07c1f2_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd59c_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd600_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    $_0bd664_data,%eax
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00005c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000064(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    -0x00002c(%ebp),%edx
		mov    -0x000034(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _081912_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _07c254_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _07c96a_jump

	_07c254_jump:
		mov    -0x000058(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000028(%edx)
		mov    -0x00005c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000024(%edx)
		mov    -0x000060(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000030(%edx)
		mov    -0x000064(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x00002c(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000058(%ebp),%eax
		mov    %ax,_0bd5c8_data(%edx)
		mov    -0x00005c(%ebp),%eax
		mov    %eax,_0bd5c4_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000060(%ebp),%eax
		mov    %ax,_0bd5e6_data(%edx)
		mov    -0x000064(%ebp),%eax
		mov    %eax,_0bd5e2_data(%edx)

	_07c2b0_jump:
		imul   $0x00006c,-0x00002c(%ebp),%eax
		mov    $_0bdb62_data,%edx
		add    %edx,%eax
		mov    %ds,%ebx
		mov    -0x00002c(%ebp),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _081857_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _07c2df_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _07c96a_jump

	_07c2df_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0bdb4a_data(%eax)
		jae    _07c6ee_jump
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000004(%ebp),%eax
		mov    %eax,_0bd6dc_data(%edx)
		cmpl   $0x000000,-0x000010(%ebp)
		je     _07c429_jump
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0be408_data(%eax)
		movw   $0x000000,-0x000080(%ebp)
		movl   $0x000000,-0x000084(%ebp)
		mov    -0x00002c(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    $_0bd722_data,%eax
		add    %eax,%ebx
		lea    -0x00003c(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _07cb8c_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		mov    %bx,-0x000048(%ebp)
		mov    %ecx,-0x00004c(%ebp)
		mov    -0x00004c(%ebp),%eax
		cmp    -0x000084(%ebp),%eax
		jne    _07c389_jump
		mov    -0x000048(%ebp),%eax
		cmp    -0x000080(%ebp),%ax
		jne    _07c389_jump
		mov    -0x00002c(%ebp),%eax
		call   _081b35_func
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bdb4a_data(%eax)
		movl   $0x000005,-0x000024(%ebp)
		jmp    _07c96a_jump

	_07c389_jump:
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000048(%ebp),%eax
		mov    %ax,_0bd6f4_data(%edx)
		mov    -0x00004c(%ebp),%eax
		mov    %eax,_0bd6f0_data(%edx)
		imul   $0x00006c,-0x00002c(%ebp),%eax
		cmpl   $0x000008,_0bdb86_data(%eax)
		jne    _07c404_jump
		imul   $0x00006c,-0x00002c(%ebp),%eax
		testb  $0x000080,_0bdb9f_data(%eax)
		je     _07c3df_jump
		movl   $0x000000,-0x000044(%ebp)

	_07c3c1_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _07c3d0_jump
		jmp    _07c3dd_jump

	_07c3cb_jump:
		incl   -0x000044(%ebp)
		jmp    _07c3c1_jump

	_07c3d0_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000000,%gs:(%eax)
		jmp    _07c3cb_jump

	_07c3dd_jump:
		jmp    _07c402_jump

	_07c3df_jump:
		movl   $0x000000,-0x000044(%ebp)

	_07c3e6_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _07c3f5_jump
		jmp    _07c402_jump

	_07c3f0_jump:
		incl   -0x000044(%ebp)
		jmp    _07c3e6_jump

	_07c3f5_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000080,%gs:(%eax)
		jmp    _07c3f0_jump

	_07c402_jump:
		jmp    _07c427_jump

	_07c404_jump:
		movl   $0x000000,-0x000044(%ebp)

	_07c40b_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _07c41a_jump
		jmp    _07c427_jump

	_07c415_jump:
		incl   -0x000044(%ebp)
		jmp    _07c40b_jump

	_07c41a_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000000,%gs:(%eax)
		jmp    _07c415_jump

	_07c427_jump:
		jmp    _07c44b_jump

	_07c429_jump:
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000048(%ebp),%eax
		mov    %ax,_0bd6f4_data(%edx)
		mov    -0x00004c(%ebp),%eax
		mov    %eax,_0bd6f0_data(%edx)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000048(%eax),%eax
		mov    %eax,-0x00003c(%ebp)

	_07c44b_jump:
		mov    -0x000048(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000008(%edx)
		mov    -0x00004c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000004(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000048(%edx)
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000034(%eax)
		jne    _07c565_jump
		lgs    0x000014(%ebp),%eax
		cmpw   $0x000000,%gs:0x000038(%eax)
		jne    _07c565_jump
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000044(%eax)
		je     _07c4fd_jump
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd5b0_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd614_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd678_data,%edx
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00006c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000074(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000044(%edx),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _081c0d_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _07c4fb_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _07c96a_jump

	_07c4fb_jump:
		jmp    _07c563_jump

	_07c4fd_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd5b0_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd614_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    $_0bd678_data,%eax
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00006c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000074(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		imul   $0x00006c,-0x00002c(%ebp),%edx
		mov    _0bdbca_data(%edx),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _081c0d_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _07c563_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _07c96a_jump

	_07c563_jump:
		jmp    _07c595_jump

	_07c565_jump:
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000038(%eax),%ax
		mov    %ax,-0x000068(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000034(%eax),%eax
		mov    %eax,-0x00006c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000040(%eax),%ax
		mov    %ax,-0x000070(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00003c(%eax),%eax
		mov    %eax,-0x000074(%ebp)

	_07c595_jump:
		imul   $0x00006c,-0x00002c(%ebp),%eax
		testb  $0x000002,_0bdb9f_data(%eax)
		je     _07c5ca_jump
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		movzwl -0x000068(%ebp),%eax
		push   %eax
		pushl  -0x00006c(%ebp)
		movzwl -0x000070(%ebp),%eax
		push   %eax
		pushl  -0x000074(%ebp)
		call   _08153c_func
		add    $0x000020,%esp

	_07c5ca_jump:
		mov    -0x000068(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000038(%edx)
		mov    -0x00006c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000034(%edx)
		mov    -0x000070(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000040(%edx)
		mov    -0x000074(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x00003c(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000068(%ebp),%eax
		mov    %ax,_0bd62c_data(%edx)
		mov    -0x00006c(%ebp),%eax
		mov    %eax,_0bd628_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000070(%ebp),%eax
		mov    %ax,_0bd64a_data(%edx)
		mov    -0x000074(%ebp),%eax
		mov    %eax,_0bd646_data(%edx)
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bd6a0_data(%eax)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		mov    -0x000038(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0bddea_data(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		mov    $_0be430_data,%eax
		push   %eax
		pushl  -0x00002c(%ebp)
		pushl  -0x000038(%ebp)
		pushl  -0x000004(%ebp)
		movzwl -0x000048(%ebp),%eax
		push   %eax
		pushl  -0x00004c(%ebp)
		movzwl -0x000068(%ebp),%eax
		push   %eax
		pushl  -0x00006c(%ebp)
		movzwl -0x000070(%ebp),%eax
		push   %eax
		pushl  -0x000074(%ebp)
		call   _0812eb_func
		add    $0x000028,%esp
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0be434_data,%dx
		mov    _0be430_data,%ebx
		mov    %dx,_0bd74e_data(%eax)
		mov    %ebx,_0bd74a_data(%eax)
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0be43c_data,%dx
		mov    _0be438_data,%ebx
		mov    %dx,_0bdb2c_data(%eax)
		mov    %ebx,_0bdb28_data(%eax)
		mov    _0be444_data,%ax
		mov    %ax,-0x000050(%ebp)
		mov    _0be440_data,%eax
		mov    %eax,-0x000054(%ebp)
		movzwl -0x000050(%ebp),%eax
		push   %eax
		pushl  -0x000054(%ebp)
		imul   $0x0000c0,-0x00002c(%ebp),%eax
		mov    $_0bd768_data,%edx
		add    %edx,%eax
		push   %eax
		call   _0810ac_func
		add    $0x00000c,%esp
		jmp    _07c705_jump

	_07c6ee_jump:
		imul   $0x000006,-0x00002c(%ebp),%eax
		movw   $0x000000,_0bd74e_data(%eax)
		movl   $0x000000,_0bd74a_data(%eax)

	_07c705_jump:
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0bd74e_data(%eax),%dx
		mov    _0bd74a_data(%eax),%ebx
		lgs    0x000014(%ebp),%eax
		mov    %dx,%gs:0x000020(%eax)
		lgs    0x000014(%ebp),%eax
		mov    %ebx,%gs:0x00001c(%eax)
		lgs    -0x00007c(%ebp),%eax
		pushl  %gs:0x000008(%eax)
		call   _081413_func
		add    $0x000004,%esp
		mov    -0x00002c(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    -0x00003c(%ebp),%eax
		mov    %eax,_0bd70e_data(%ebx)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000040(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000004(%eax),%eax
		mov    %eax,-0x00000c(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x00000c(%eax),%eax
		mov    %eax,-0x000020(%ebp)
		mov    -0x000038(%ebp),%al
		mov    -0x00002c(%ebp),%edx
		mov    %al,_0bde0a_data(%edx)
		pushl  -0x000020(%ebp)
		pushl  -0x00001c(%ebp)
		pushl  -0x000018(%ebp)
		pushl  -0x000038(%ebp)
		pushl  -0x00000c(%ebp)
		pushl  -0x000040(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _08133e_func
		add    $0x000028,%esp
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _0813c2_func
		add    $0x000010,%esp
		pushl  -0x000014(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _08139c_func
		add    $0x000014,%esp
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0bd70e_data(%eax),%eax
		mov    %eax,-0x00003c(%ebp)
		pushl  -0x000004(%ebp)
		pushl  -0x00003c(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _081373_func
		add    $0x000018,%esp
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bd68c_data(%eax)
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bd6b4_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:(%ebx),%ebx
		mov    %ebx,_0bde0f_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000008(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000004(%ebx),%ebx
		mov    %dx,_0bde17_data(%eax)
		mov    %ebx,_0bde13_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00000c(%ebx),%ebx
		mov    %ebx,_0bde1b_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000010(%ebx),%ebx
		mov    %ebx,_0bde1f_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%ebx
		mov    -0x000034(%ebp),%eax
		mov    %eax,_0bde23_data(%ebx)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000018(%ebx),%ebx
		mov    %ebx,_0bde27_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000020(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00001c(%ebx),%ebx
		mov    %dx,_0bde2f_data(%eax)
		mov    %ebx,_0bde2b_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000028(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000024(%ebx),%ebx
		mov    %dx,_0bde37_data(%eax)
		mov    %ebx,_0bde33_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000038(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000034(%ebx),%ebx
		mov    %dx,_0bde47_data(%eax)
		mov    %ebx,_0bde43_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000030(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00002c(%ebx),%ebx
		mov    %dx,_0bde3f_data(%eax)
		mov    %ebx,_0bde3b_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000040(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00003c(%ebx),%ebx
		mov    %dx,_0bde4f_data(%eax)
		mov    %ebx,_0bde4b_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000044(%edx),%edx
		mov    %edx,_0bde53_data(%eax)
		mov    -0x00002c(%ebp),%eax
		lgs    0x00001c(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000024(%ebp)

	_07c96a_jump:
		mov    -0x000024(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000010



_07c974_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000028,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bd68c_data(%eax)
		jne    _07c9a4_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _07cb84_jump

	_07c9a4_jump:
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bd6b4_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0bd736_data(%eax)
		jae    _07ca61_jump
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0be408_data(%eax)
		je     _07c9df_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		jne    _07c9e4_jump

	_07c9df_jump:
		jmp    _07ca61_jump

	_07c9e4_jump:
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bd6f4_data(%edx),%ax
		mov    %ax,-0x00001c(%ebp)
		mov    _0bd6f0_data(%edx),%eax
		mov    %eax,-0x000020(%ebp)
		call   _08159c_func
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _07ca3b_jump
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    _0bd70e_data(%ebx),%ecx
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    _0bd722_data(%ebx),%esi
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		movzwl %dx,%eax
		mov    %ecx,%ebx
		mov    %esi,%edx
		call   _07cd88_func
		jmp    _07ca51_jump

	_07ca3b_jump:
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		movzwl %dx,%ebx
		push   %ebx
		call   _081112_func
		add    $0x000004,%esp

	_07ca51_jump:
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0be408_data(%eax)

	_07ca61_jump:
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bd5c8_data(%edx),%ax
		mov    %ax,-0x000024(%ebp)
		mov    _0bd5c4_data(%edx),%eax
		mov    %eax,-0x000028(%ebp)
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bd5e6_data(%edx),%ax
		mov    %ax,-0x000014(%ebp)
		mov    _0bd5e2_data(%edx),%eax
		mov    %eax,-0x000018(%ebp)
		movzwl -0x000024(%ebp),%eax
		push   %eax
		pushl  -0x000028(%ebp)
		movzwl -0x000014(%ebp),%eax
		push   %eax
		pushl  -0x000018(%ebp)
		call   _0811c0_func
		add    $0x000010,%esp
		movzwl -0x000024(%ebp),%eax
		push   %eax
		pushl  -0x000028(%ebp)
		movzwl -0x000014(%ebp),%eax
		push   %eax
		pushl  -0x000018(%ebp)
		call   _0812c8_func
		add    $0x000010,%esp
		mov    -0x000010(%ebp),%eax
		movzbl _0bde0a_data(%eax),%eax
		push   %eax
		call   _081448_func
		add    $0x000004,%esp
		cmpl   $0x000000,-0x000008(%ebp)
		je     _07caea_jump
		mov    -0x000010(%ebp),%eax
		call   _081b35_func
		mov    -0x000010(%ebp),%eax
		call   _081de7_func

	_07caea_jump:
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd5c8_data(%eax)
		movl   $0x000000,_0bd5c4_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd5e6_data(%eax)
		movl   $0x000000,_0bd5e2_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd74e_data(%eax)
		movl   $0x000000,_0bd74a_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd62c_data(%eax)
		movl   $0x000000,_0bd628_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd64a_data(%eax)
		movl   $0x000000,_0bd646_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bdb4a_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bd68c_data(%eax)
		movl   $0x000000,-0x000004(%ebp)

	_07cb84_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07cb8c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000030,%esp
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000018(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x00000c(%ebp)
		call   _08159c_func
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _07cbfa_jump
		lea    -0x000014(%ebp),%ebx
		lea    -0x000010(%ebp),%edx
		lea    -0x000028(%ebp),%eax
		call   _07cc6c_func
		test   %eax,%eax
		je     _07cbdb_jump
		movw   $0x000000,-0x00002c(%ebp)
		movl   $0x000000,-0x000030(%ebp)
		jmp    _07cc61_jump

	_07cbdb_jump:
		mov    -0x000014(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)
		mov    -0x000010(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %eax,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    %ax,-0x00002c(%ebp)
		mov    -0x000028(%ebp),%eax
		mov    %eax,-0x000030(%ebp)
		jmp    _07cc61_jump

	_07cbfa_jump:
		lea    -0x00000c(%ebp),%eax
		push   %eax
		lea    -0x000004(%ebp),%eax
		push   %eax
		mov    -0x00001c(%ebp),%eax
		shr    $0x000004,%eax
		add    $0x000004,%eax
		push   %eax
		call   _0810dc_func
		add    $0x00000c,%esp
		mov    -0x000004(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)

	_07cc1c_jump:
		mov    -0x000004(%ebp),%edx
		and    $0x00ffff,%edx
		mov    $0x00ffff,%eax
		sub    -0x00001c(%ebp),%eax
		cmp    %eax,%edx
		jbe    _07cc55_jump
		lea    -0x00000c(%ebp),%eax
		push   %eax
		lea    -0x000004(%ebp),%eax
		push   %eax
		mov    -0x00001c(%ebp),%eax
		shr    $0x000004,%eax
		add    $0x000004,%eax
		push   %eax
		call   _0810dc_func
		add    $0x00000c,%esp
		mov    -0x000004(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _07cc1c_jump

	_07cc55_jump:
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,-0x00002c(%ebp)
		mov    %edx,-0x000030(%ebp)

	_07cc61_jump:
		mov    -0x00002c(%ebp),%edx
		mov    -0x000030(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07cc6c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00002c,%esp
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		mov    -0x000024(%ebp),%eax
		movw   $0x000000,0x000004(%eax)
		mov    -0x000024(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    -0x000010(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    -0x000020(%ebp),%eax
		movl   $0x000000,(%eax)
		movl   $0x000000,-0x000004(%ebp)
		lea    -0x000004(%ebp),%eax
		push   %eax
		lea    -0x00000c(%ebp),%eax
		push   %eax
		push   $0x000020
		call   _0815b9_func
		add    $0x00000c,%esp
		test   %eax,%eax
		je     _07ccdc_jump
		movl   $0x000000,-0x00001c(%ebp)
		jmp    _07cd80_jump

	_07ccdc_jump:
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,-0x000028(%ebp)
		mov    %edx,-0x00002c(%ebp)
		lgs    -0x00002c(%ebp),%edx
		movl   $0x001000,%gs:(%edx)
		pushl  -0x000004(%ebp)
		call   _081628_func
		add    $0x000004,%esp
		mov    %eax,-0x000018(%ebp)
		push   $0x000010
		mov    -0x000028(%ebp),%ebx
		mov    -0x00002c(%ebp),%edx
		mov    %ds,%esi
		mov    $_0be420_data,%ecx
		mov    %esi,%eax
		mov    %ecx,%esi
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _081f7d_func
		pushl  -0x000004(%ebp)
		pushl  -0x00000c(%ebp)
		call   _0815fa_func
		add    $0x000008,%esp
		cmpl   $0x000000,-0x000018(%ebp)
		jne    _07cd79_jump
		andw   $0x00f000,_0be42c_data
		pushl  _0be42c_data
		call   _0816e1_func
		add    $0x000004,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    _0be42c_data,%eax
		mov    %eax,-0x000014(%ebp)
		xor    %ebx,%ebx
		mov    -0x00000c(%ebp),%edx
		mov    -0x000024(%ebp),%eax
		mov    %dx,0x000004(%eax)
		mov    -0x000024(%ebp),%eax
		mov    %ebx,(%eax)
		mov    -0x000014(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %eax,(%edx)
		movl   $0x000000,-0x00001c(%ebp)
		jmp    _07cd80_jump

	_07cd79_jump:
		movl   $0x000005,-0x00001c(%ebp)

	_07cd80_jump:
		mov    -0x00001c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07cd88_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00001c,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %ebx,-0x000004(%ebp)
		pushl  -0x000010(%ebp)
		call   _081761_func
		add    $0x000004,%esp
		lea    -0x00000c(%ebp),%edx
		push   %edx
		lea    -0x000008(%ebp),%edx
		push   %edx
		push   $0x000020
		call   _0815b9_func
		add    $0x00000c,%esp
		xor    %edx,%edx
		mov    -0x000008(%ebp),%eax
		mov    %ax,-0x000018(%ebp)
		mov    %edx,-0x00001c(%ebp)
		push   $0x000010
		mov    %ds,%edx
		mov    $_0be420_data,%esi
		mov    %edx,%ebx
		mov    %esi,%edx
		mov    -0x000018(%ebp),%eax
		mov    -0x00001c(%ebp),%esi
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _081f7d_func
		pushl  -0x00000c(%ebp)
		call   _081694_func
		add    $0x000004,%esp
		pushl  -0x00000c(%ebp)
		pushl  -0x000008(%ebp)
		call   _0815fa_func
		add    $0x000008,%esp
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07ce04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ce19_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ce2e_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000030,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %cx,-0x00001c(%ebp)
		mov    %ebx,-0x000020(%ebp)
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bd5c8_data(%edx),%ax
		mov    %ax,-0x000024(%ebp)
		mov    _0bd5c4_data(%edx),%eax
		mov    %eax,-0x000028(%ebp)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0bd736_data(%eax)
		jb     _07ce95_jump
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000004(%eax),%ax
		mov    %ax,-0x000014(%ebp)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000018(%ebp)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x00000c(%ebp)
		jmp    _07d438_jump

	_07ce95_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07ce9c_jump:
		cmpl   $0x000020,-0x000004(%ebp)
		jb     _07ceac_jump
		jmp    _07d42f_jump

	_07cea7_jump:
		incl   -0x000004(%ebp)
		jmp    _07ce9c_jump

	_07ceac_jump:
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		jne    _07d42a_jump
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%eax
		lgs    -0x000020(%ebp),%ebx
		mov    %gs:0x000004(%ebx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x000004(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x000004(%edx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x00000c(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:0x000008(%eax)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000004(%eax),%ax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%edx
		mov    %eax,%ebx
		lgs    -0x000020(%ebp),%eax
		add    %gs:0x000030(%eax),%edx
		mov    %ebx,%eax
		mov    %eax,%ebx
		mov    %edx,%ecx
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%eax
		mov    %bx,%gs:0x000014(%eax)
		mov    %ecx,%gs:0x000010(%eax)
		lgs    -0x000020(%ebp),%eax
		testb  $0x000040,%gs:0x000028(%eax)
		je     _07d04e_jump
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000018(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x00001c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000034(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000020(%edx)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		add    %gs:0x000034(%edx),%eax
		lgs    -0x000020(%ebp),%ebx
		mov    %gs:0x00002c(%ebx),%ebx
		sub    %eax,%ebx
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		mov    %ebx,%gs:0x00002c(%edx)
		jmp    _07d0a8_jump

	_07d04e_jump:
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000018(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x00001c(%edx)

	_07d0a8_jump:
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000014(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000032(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000018(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000034(%edx)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000028(%eax),%dx
		or     $0x0000a0,%dh
		imul   $0x0000c0,-0x000010(%ebp),%ebx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %ebx,%eax
		lgs    _0bd768_data(%eax),%eax
		mov    %dx,%gs:0x000030(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000010(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000036(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x000020(%edx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x00001c(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x000040(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:0x00003c(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x00000c(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000038(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000024(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00004a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		movw   $0x000000,%gs:0x00003a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000038(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000044(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		movw   $0x000000,%gs:0x000048(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		movl   $0x000000,%gs:0x00004c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000050(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000040(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000054(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000044(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000056(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000048(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000058(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x00004c(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000050(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000054(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005e(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bd76c_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bd768_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000058(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000060(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		movl   $0x000000,%gs:0x000064(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		movw   $0x000000,%gs:0x000068(%edx)
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		jmp    _07d43f_jump

	_07d42a_jump:
		jmp    _07cea7_jump

	_07d42f_jump:
		movl   $0xffffffff,-0x000008(%ebp)
		jmp    _07d43f_jump

	_07d438_jump:
		movl   $0x000000,-0x000008(%ebp)

	_07d43f_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_07d447_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		cmpl   $0x000020,-0x000008(%ebp)
		jae    _07d4e5_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _07d49d_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		testb  $0x000010,%gs:0x000031(%edx)
		je     _07d49f_jump

	_07d49d_jump:
		jmp    _07d4dc_jump

	_07d49f_jump:
		imul   $0x0000c0,-0x00000c(%ebp),%eax
		imul   $0x000006,-0x000008(%ebp),%edx
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%eax
		andb   $0x00007f,%gs:0x000031(%eax)
		imul   $0x0000c0,-0x00000c(%ebp),%eax
		imul   $0x000006,-0x000008(%ebp),%edx
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		movw   $0x000000,%gs:0x000034(%edx)
		movl   $0x000000,-0x000004(%ebp)
		jmp    _07d4ec_jump

	_07d4dc_jump:
		movl   $0x000000,-0x000004(%ebp)
		jmp    _07d4ec_jump

	_07d4e5_jump:
		movl   $0x00000a,-0x000004(%ebp)

	_07d4ec_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07d86c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d881_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d8c2_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000014(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%edx
		imul   $0x000006,-0x000010(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _07d92f_jump
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		movswl %gs:0x000032(%edx),%eax
		mov    %eax,-0x000004(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,%gs:0x000032(%edx)
		jmp    _07d938_jump

	_07d92f_jump:
		movl   $0x000000,-0x000008(%ebp)
		jmp    _07d93e_jump

	_07d938_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)

	_07d93e_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07db65_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000014(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%edx
		imul   $0x000006,-0x000010(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _07dbd2_jump
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		movswl %gs:0x000054(%edx),%eax
		mov    %eax,-0x000004(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,%gs:0x000054(%edx)
		jmp    _07dbdb_jump

	_07dbd2_jump:
		movl   $0x000000,-0x000008(%ebp)
		jmp    _07dbe1_jump

	_07dbdb_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)

	_07dbe1_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07def0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07df05_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07df1a_jump:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		cmpl   $0x000020,-0x000008(%ebp)
		jae    _07df63_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bd768_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		jne    _07df5a_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _07df6a_jump

	_07df5a_jump:
		movl   $0x000000,-0x000004(%ebp)
		jmp    _07df6a_jump

	_07df63_jump:
		movl   $0x00000a,-0x000004(%ebp)

	_07df6a_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07dff0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07e006_jump:
		sub    %edx,%edx
		sub    %eax,%eax
		ret    

	_07e00b_jump:
		mov    $0x000083,%eax
		call   _07f1f8_func
		jmp    _07e028_jump

	_07e017_jump:
		push   %eax
		call   _07f1d5_func
		mov    $0x000084,%eax
		call   _07f1f8_func
		pop    %eax

	_07e028_jump:
		and    $0x80000000,%eax
		or     $0x7ff00000,%eax
		mov    %eax,%edx
		sub    %eax,%eax
		ret    



_07e05f_func:
		push   %ebx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    (%ebx),%edx
		call   _079430_func
		incl   0x000010(%ebx)
		pop    %ebx
		ret    



_07e070_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    0x00000c(%eax),%ebp
		mov    0x00000c(%eax),%ah
		mov    0x000008(%esi),%ecx
		and    $0x0000cf,%ah
		and    $0x000030,%ebp
		mov    %ah,0x00000c(%esi)
		test   %ecx,%ecx
		jne    _07e093_jump
		mov    %esi,%eax
		call   _07f3d6_func

	_07e093_jump:
		mov    0x00000d(%esi),%cl
		xor    %edi,%edi
		test   $0x000004,%cl
		je     _07e0b1_jump
		mov    %cl,%ch
		and    $0x0000fa,%ch
		mov    %ch,%al
		mov    %ch,0x00000d(%esi)
		or     $0x000001,%al
		mov    $0x000001,%edi
		mov    %al,0x00000d(%esi)

	_07e0b1_jump:
		mov    $_07e05f_func,%ecx
		mov    %esi,%eax
		call   _07e523_func
		mov    %eax,%edx
		test   %edi,%edi
		je     _07e0db_jump
		mov    0x00000d(%esi),%ah
		and    $0x0000fa,%ah
		mov    %ah,%bl
		mov    %ah,0x00000d(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x00000d(%esi)
		call   _07f46c_func

	_07e0db_jump:
		testb  $0x000020,0x00000c(%esi)
		je     _07e0e6_jump
		mov    $0xffffffff,%edx

	_07e0e6_jump:
		mov    0x00000c(%esi),%edi
		or     %ebp,%edi
		mov    %edx,%eax
		mov    %edi,0x00000c(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07e0f5_func:
		ret    



_07e0f6_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x00002c,%ah
		int    $0x000021
		xor    %eax,%eax
		mov    %dh,%al
		mov    %eax,%ebx

	_07e104_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		xor    %eax,%eax
		mov    %dh,%al
		cmp    %eax,%ebx
		je     _07e104_jump
		xor    %esi,%esi
		mov    %al,%bl

	_07e114_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		inc    %esi
		cmp    %dh,%bl
		je     _07e114_jump
		mov    %esi,_0dedd0_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07e128_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		test   %eax,%eax
		je     _07e15b_jump
		imul   _0dedd0_data,%eax
		mov    $0x0003e8,%esi
		add    $0x0001f4,%eax
		xor    %edx,%edx
		div    %esi
		mov    %eax,%esi
		test   %eax,%eax
		jne    _07e14e_jump
		lea    0x000001(%eax),%esi

	_07e14e_jump:
		xor    %eax,%eax
		mov    %al,%bl

	_07e152_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		cmp    %dh,%bl
		dec    %esi
		jne    _07e152_jump

	_07e15b_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e16c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    %al,%bl
		xor    %eax,%eax
		mov    %dl,%al
		call   _07f1ec_func
		cmp    $0x000100,%edx
		jae    _07e1bb_jump
		cmpb   $0x000003,_0bd4c3_data
		jb     _07e1a5_jump
		cmp    $0x000050,%dl
		jne    _07e195_jump
		mov    $0x00000e,%bl
		jmp    _07e1a5_jump

	_07e195_jump:
		cmp    $0x000022,%dl
		jb     _07e19e_jump
		mov    $0x000013,%bl
		jmp    _07e1a5_jump

	_07e19e_jump:
		cmp    $0x000020,%dl
		jb     _07e1a5_jump
		mov    $0x000005,%bl

	_07e1a5_jump:
		cmp    $0x000013,%bl
		jbe    _07e1ac_jump
		mov    $0x000013,%bl

	_07e1ac_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    _0bd4c9_data(%edx),%eax
		sar    $0x000018,%eax
		jmp    _07e1c5_jump

	_07e1bb_jump:
		mov    %edx,%eax
		shr    $0x000008,%eax
		and    $0x0000ff,%eax

	_07e1c5_jump:
		call   _07f1c9_func
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    



_07e1d2_func:
		push   %edx
		push   %ebp
		mov    %esp,%ebp
		mov    _0bd4a4_data,%edx
		add    $0x000003,%edx
		and    $0x0000fc,%dl
		call   _082029_func
		cmp    %eax,%edx
		jae    _07e1f3_jump
		mov    %edx,%eax
		sub    %eax,%esp
		mov    %esp,%eax
		jmp    _07e1f5_jump

	_07e1f3_jump:
		xor    %eax,%eax

	_07e1f5_jump:
		mov    _0bd4a4_data,%edx
		add    %edx,%eax
		mov    %eax,_0bd4a8_data
		call   _082032_func
		mov    _0dede0_data,%edx
		mov    _0deddc_data,%eax
		call   _018054_func
		call   _07882c_func
		mov    %ebp,%esp
		pop    %ebp
		pop    %edx
		ret    



_07e222_func:
		push   %esi
		push   %edi
		push   %ebx
		push   %edx
		push   %es
		mov    %eax,%edx

	_07e229_jump:
		ds mov $_0c114c_data,%esi
		ds mov $_0c1176_data,%edi
		mov    %edi,%ebx
		mov    %dl,%al

	_07e239_jump:
		cmp    %edi,%esi
		jae    _07e251_jump
		cmpb   $0x000002,(%esi)
		je     _07e24c_jump
		cmp    %al,0x000001(%esi)
		ja     _07e24c_jump
		mov    %esi,%ebx
		mov    0x000001(%esi),%al

	_07e24c_jump:
		add    $0x000006,%esi
		jmp    _07e239_jump

	_07e251_jump:
		cmp    %edi,%ebx
		je     _07e267_jump
		mov    0x000002(%ebx),%eax
		or     %eax,%eax
		je     _07e262_jump
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx

	_07e262_jump:
		movb   $0x000002,(%ebx)
		jmp    _07e229_jump

	_07e267_jump:
		pop    %es
		pop    %edx
		pop    %ebx
		pop    %edi
		pop    %esi
		ret    



_07e26d_func:
		push   %esi
		push   %edi
		push   %ebx
		push   %es
		mov    %dl,%dh
		mov    %al,%dl

	_07e275_jump:
		ds mov $_0c1176_data,%esi
		ds mov $_0c117c_data,%edi
		mov    %edi,%ebx
		mov    %dl,%al

	_07e285_jump:
		cmp    %edi,%esi
		jae    _07e29d_jump
		cmpb   $0x000002,(%esi)
		je     _07e298_jump
		cmp    0x000001(%esi),%al
		ja     _07e298_jump
		mov    %esi,%ebx
		mov    0x000001(%esi),%al

	_07e298_jump:
		add    $0x000006,%esi
		jmp    _07e285_jump

	_07e29d_jump:
		cmp    %edi,%ebx
		je     _07e2b7_jump
		cmp    %dh,%al
		ja     _07e2b2_jump
		mov    0x000002(%ebx),%eax
		or     %eax,%eax
		je     _07e2b2_jump
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx

	_07e2b2_jump:
		movb   $0x000002,(%ebx)
		jmp    _07e275_jump

	_07e2b7_jump:
		pop    %es
		pop    %ebx
		pop    %edi
		pop    %esi
		ret    



_07e2bc_func:
		push   %ebx
		push   %edx
		mov    $_08203d_func,%edx
		mov    $_082162_func,%ebx
		mov    %edx,_0bf5f8_data
		mov    %ebx,_0bf5fc_data
		pop    %edx
		pop    %ebx
		ret    



_07e2d7_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %esp,%ebx
		mov    _0bd490_data,%eax
		xor    %edx,%edx
		call   _07e394_func
		mov    (%esp),%ecx
		lea    0x000001(%eax),%ebp
		mov    _0bd490_data,%edx
		mov    %ebp,%eax
		sub    %edx,%ecx
		shl    $0x000002,%eax
		inc    %ecx
		mov    %eax,0x000004(%esp)
		add    $0x000004,%eax
		add    %ecx,%eax
		call   _07a3d8_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _07e370_jump
		mov    _0bd490_data,%esi
		add    %ecx,%eax
		mov    %edx,%edi
		mov    %eax,_0bd23c_data
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    _0bd23c_data,%ecx
		mov    _0bd494_data,%eax
		mov    %esp,%ebx
		mov    %eax,(%ecx)
		add    $0x000004,%ecx
		mov    %edx,%eax
		mov    %ecx,%edx
		mov    0x000004(%esp),%esi
		call   _07e394_func
		mov    _0bd23c_data,%edx
		add    %esi,%edx
		mov    %ebp,_0bd238_data
		movl   $0x000000,(%edx)
		jmp    _07e37a_jump

	_07e370_jump:
		mov    %eax,_0bd23c_data
		mov    %eax,_0bd238_data

	_07e37a_jump:
		mov    _0bd23c_data,%eax
		mov    %ebp,_0deddc_data
		mov    %eax,_0dede0_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e394_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %edx,%esi
		mov    %ebx,0x000004(%esp)
		xor    %ecx,%ecx

	_07e3a3_jump:
		mov    (%eax),%dl
		cmp    $0x000020,%dl
		je     _07e3af_jump
		cmp    $0x000009,%dl
		jne    _07e3b2_jump

	_07e3af_jump:
		inc    %eax
		jmp    _07e3a3_jump

	_07e3b2_jump:
		test   %dl,%dl
		je     _07e46d_jump
		cmp    $0x000022,%dl
		jne    _07e3fe_jump
		inc    %eax
		mov    %eax,(%esp)
		mov    %eax,%edx

	_07e3c5_jump:
		mov    (%eax),%bh
		cmp    $0x000022,%bh
		je     _07e433_jump
		test   %bh,%bh
		je     _07e433_jump
		cmp    $0x00005c,%bh
		jne    _07e3ea_jump
		mov    0x000001(%eax),%bl
		cmp    $0x000022,%bl
		je     _07e3e9_jump
		cmp    %bh,%bl
		jne    _07e3ea_jump

	_07e3e9_jump:
		inc    %eax

	_07e3ea_jump:
		lea    0x000001(%eax),%ebx
		test   %esi,%esi
		je     _07e3fa_jump
		mov    (%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		inc    %edx
		jmp    _07e3c5_jump

	_07e3fa_jump:
		mov    %ebx,%eax
		jmp    _07e3c5_jump

	_07e3fe_jump:
		mov    %eax,(%esp)
		mov    %eax,%edx

	_07e403_jump:
		mov    (%eax),%bl
		test   %bl,%bl
		je     _07e433_jump
		cmp    $0x000020,%bl
		je     _07e433_jump
		cmp    $0x000009,%bl
		je     _07e433_jump
		cmp    $0x00005c,%bl
		jne    _07e41f_jump
		cmpb   $0x000022,0x000001(%eax)
		jne    _07e41f_jump
		inc    %eax

	_07e41f_jump:
		lea    0x000001(%eax),%ebx
		test   %esi,%esi
		je     _07e42f_jump
		mov    (%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		inc    %edx
		jmp    _07e403_jump

	_07e42f_jump:
		mov    %ebx,%eax
		jmp    _07e403_jump

	_07e433_jump:
		lea    0x000001(%eax),%ebp
		lea    0x000001(%ecx),%edi
		test   %esi,%esi
		je     _07e45e_jump
		shl    $0x000002,%ecx
		lea    (%esi,%ecx,1),%ebx
		mov    (%esp),%ecx
		mov    %ecx,(%ebx)
		mov    (%eax),%bl
		mov    %edi,%ecx
		test   %bl,%bl
		jne    _07e454_jump
		mov    %bl,(%edx)
		jmp    _07e46d_jump

	_07e454_jump:
		mov    %ebp,%eax
		movb   $0x000000,(%edx)
		jmp    _07e3a3_jump

	_07e45e_jump:
		mov    (%eax),%dl
		mov    %edi,%ecx
		test   %dl,%dl
		je     _07e46d_jump
		mov    %ebp,%eax
		jmp    _07e3a3_jump

	_07e46d_jump:
		mov    0x000004(%esp),%edx
		mov    %eax,(%edx)
		mov    %ecx,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07e480_func:
		or     %ecx,%ecx
		je     _07e4b0_jump
		cmp    %dl,(%eax)

	_07e486_jump:
		test   $0x000003,%al
		je     _07e493_jump
		mov    %dl,(%eax)
		inc    %eax
		ror    $0x000008,%edx
		dec    %ecx
		jne    _07e486_jump

	_07e493_jump:
		push   %ecx
		shr    $0x000002,%ecx
		call   _07e4b7_func
		pop    %ecx
		and    $0x000003,%ecx
		je     _07e4b0_jump
		mov    %dl,(%eax)
		dec    %ecx
		je     _07e4b0_jump
		mov    %dh,0x000001(%eax)
		dec    %ecx
		je     _07e4b0_jump
		mov    %dl,0x000002(%eax)

	_07e4b0_jump:
		ret    



_07e4b7_func:
		or     %ecx,%ecx
		je     _07e522_jump

	_07e4bb_jump:
		test   $0x00001f,%al
		je     _07e4c7_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		jne    _07e4bb_jump

	_07e4c7_jump:
		push   %ecx
		shr    $0x000002,%ecx
		je     _07e507_jump
		dec    %ecx
		je     _07e4f9_jump

	_07e4d0_jump:
		mov    %edx,(%eax)
		mov    %edx,0x000004(%eax)
		dec    %ecx
		mov    %edx,0x000008(%eax)
		mov    %edx,0x00000c(%eax)
		je     _07e4f6_jump
		cmp    %dl,0x000020(%eax)
		mov    %edx,0x000010(%eax)
		mov    %edx,0x000014(%eax)
		dec    %ecx
		mov    %edx,0x000018(%eax)
		mov    %edx,0x00001c(%eax)
		lea    0x000020(%eax),%eax
		jne    _07e4d0_jump
		lea    -0x000010(%eax),%eax

	_07e4f6_jump:
		lea    0x000010(%eax),%eax

	_07e4f9_jump:
		mov    %edx,(%eax)
		mov    %edx,0x000004(%eax)
		mov    %edx,0x000008(%eax)
		mov    %edx,0x00000c(%eax)
		lea    0x000010(%eax),%eax

	_07e507_jump:
		pop    %ecx
		and    $0x000003,%ecx
		je     _07e522_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		je     _07e522_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		je     _07e522_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax

	_07e522_jump:
		ret    



_07e523_func:
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x00004c,%esp
		mov    %ebx,%esi
		mov    %ecx,0x000044(%esp)
		xor    %bl,%bl
		mov    %eax,0x000028(%esp)
		mov    %bl,0x000048(%esp)
		mov    %bl,0x00003c(%esp)
		xor    %ebx,%ebx
		mov    %edx,%edi
		mov    %ebx,0x000038(%esp)
		mov    $0x000004,%ebp
		jmp    _07e5a6_jump

	_07e54d_jump:
		lea    0x000028(%esp),%ebx
		mov    %esi,%edx
		call   _07e7a4_func
		mov    %eax,%edi
		mov    (%eax),%al
		inc    %edi
		mov    %al,0x00003d(%esp)
		test   %al,%al
		je     _07e798_jump
		cmp    $0x00006e,%al
		jne    _07e648_jump
		mov    0x00003c(%esp),%bl
		test   $0x000020,%bl
		je     _07e5d3_jump
		test   $0x000080,%bl
		je     _07e592_jump
		mov    (%esi),%ecx
		add    $0x000008,%ecx
		mov    %ecx,(%esi)
		les    -0x000008(%ecx),%edx

	_07e589_jump:
		mov    0x000038(%esp),%eax
		mov    %eax,%es:(%edx)
		jmp    _07e5a6_jump

	_07e592_jump:
		test   $0x000040,%bl
		je     _07e5c8_jump
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x000004(%ebx),%edx

	_07e5a0_jump:
		mov    0x000038(%esp),%eax
		mov    %eax,(%edx)

	_07e5a6_jump:
		mov    (%edi),%cl
		test   %cl,%cl
		je     _07e798_jump
		lea    0x000001(%edi),%eax
		cmp    $0x000025,%cl
		je     _07e54d_jump
		mov    %eax,%edi
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    %cl,%dl
		call   *0x000044(%esp)
		jmp    _07e5a6_jump

	_07e5c8_jump:
		mov    (%esi),%edx
		add    %ebp,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		jmp    _07e5a0_jump

	_07e5d3_jump:
		test   $0x000010,%bl
		je     _07e613_jump
		test   $0x000080,%bl
		je     _07e5f1_jump
		mov    (%esi),%eax
		add    $0x000008,%eax
		mov    %eax,(%esi)
		les    -0x000008(%eax),%edx
		mov    0x000038(%esp),%eax
		mov    %ax,%es:(%edx)
		jmp    _07e5a6_jump

	_07e5f1_jump:
		test   $0x000040,%bl
		je     _07e608_jump
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x000004(%ecx),%edx

	_07e5ff_jump:
		mov    0x000038(%esp),%eax
		mov    %ax,(%edx)
		jmp    _07e5a6_jump

	_07e608_jump:
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x000004(%ebx),%edx
		jmp    _07e5ff_jump

	_07e613_jump:
		test   $0x000080,%bl
		je     _07e627_jump
		mov    (%esi),%edx
		add    $0x000008,%edx
		mov    %edx,(%esi)
		les    -0x000008(%edx),%edx
		jmp    _07e589_jump

	_07e627_jump:
		test   $0x000040,%bl
		je     _07e63a_jump
		mov    (%esi),%eax
		add    %ebp,%eax
		mov    %eax,(%esi)
		mov    -0x000004(%eax),%edx
		jmp    _07e5a0_jump

	_07e63a_jump:
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x000004(%ecx),%edx
		jmp    _07e5a0_jump

	_07e648_jump:
		mov    %esp,%eax
		lea    0x000028(%esp),%ebx
		lea    0x000048(%esp),%ecx
		mov    %esi,%edx
		call   _07eabc_func
		mov    %edx,%es
		mov    0x00003c(%esp),%dl
		mov    %eax,%ebx
		test   $0x000008,%dl
		jne    _07e68a_jump
		cmpb   $0x000020,0x00003e(%esp)
		jne    _07e68a_jump

	_07e66d_jump:
		mov    0x00002c(%esp),%eax
		dec    %eax
		mov    %eax,0x00002c(%esp)
		test   %eax,%eax
		jl     _07e68a_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    0x00003e(%esp),%dl
		call   *0x000044(%esp)
		jmp    _07e66d_jump

	_07e68a_jump:
		lea    0x00003f(%esp),%ecx

	_07e68e_jump:
		mov    (%ecx),%al
		test   %al,%al
		je     _07e6a3_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000028(%esp),%eax
		inc    %ecx
		call   *0x000044(%esp)
		jmp    _07e68e_jump

	_07e6a3_jump:
		mov    0x000034(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000034(%esp)
		test   %eax,%eax
		je     _07e6c1_jump
		lea    0x000028(%esp),%eax
		mov    $0x000030,%edx
		call   *0x000044(%esp)
		jmp    _07e6a3_jump

	_07e6c1_jump:
		testb  $0x000008,0x00003c(%esp)
		jne    _07e6ec_jump
		cmpb   $0x000020,0x00003e(%esp)
		je     _07e6ec_jump

	_07e6cf_jump:
		mov    0x00002c(%esp),%eax
		dec    %eax
		mov    %eax,0x00002c(%esp)
		test   %eax,%eax
		jl     _07e6ec_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    0x00003e(%esp),%dl
		call   *0x000044(%esp)
		jmp    _07e6cf_jump

	_07e6ec_jump:
		mov    0x00003d(%esp),%dh
		cmp    $0x000073,%dh
		je     _07e6fa_jump
		cmp    $0x000053,%dh
		jne    _07e741_jump

	_07e6fa_jump:
		testb  $0x000020,0x00003c(%esp)
		je     _07e722_jump

	_07e701_jump:
		mov    0x000030(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000030(%esp)
		test   %eax,%eax
		je     _07e760_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x000044(%esp)
		add    $0x000002,%ebx
		jmp    _07e701_jump

	_07e722_jump:
		mov    0x000030(%esp),%eax
		lea    -0x000001(%eax),%edx
		mov    %edx,0x000030(%esp)
		test   %eax,%eax
		je     _07e760_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x000044(%esp)
		inc    %ebx
		jmp    _07e722_jump

	_07e741_jump:
		mov    0x000030(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000030(%esp)
		test   %eax,%eax
		je     _07e760_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x000044(%esp)
		inc    %ebx
		jmp    _07e741_jump

	_07e760_jump:
		testb  $0x000008,0x00003c(%esp)
		je     _07e5a6_jump
		cmpl   $0x000000,0x00002c(%esp)
		jle    _07e5a6_jump

	_07e776_jump:
		mov    0x00002c(%esp),%eax
		lea    -0x000001(%eax),%edx
		mov    %edx,0x00002c(%esp)
		test   %eax,%eax
		je     _07e5a6_jump
		lea    0x000028(%esp),%eax
		mov    $0x000020,%edx
		call   *0x000044(%esp)
		jmp    _07e776_jump

	_07e798_jump:
		mov    0x000038(%esp),%eax
		add    $0x00004c,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret    



_07e7a4_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		movb   $0x000000,0x000017(%ebx)
		mov    %ebx,%edx
		movb   $0x000020,0x000016(%ebx)
		call   _07e8d7_func
		movl   $0x000000,0x000004(%ebx)
		mov    (%eax),%cl
		mov    %eax,%edx
		cmp    $0x000030,%cl
		jb     _07e7ec_jump
		cmp    $0x000039,%cl
		ja     _07e7ec_jump

	_07e7cd_jump:
		imul   $0x00000a,0x000004(%ebx),%ecx
		xor    %edx,%edx
		mov    (%eax),%dl
		sub    $0x000030,%edx
		add    %edx,%ecx
		inc    %eax
		mov    %ecx,0x000004(%ebx)
		mov    (%eax),%cl
		cmp    $0x000030,%cl
		jb     _07e813_jump
		cmp    $0x000039,%cl
		jbe    _07e7cd_jump
		jmp    _07e813_jump

	_07e7ec_jump:
		cmpb   $0x00002a,(%eax)
		jne    _07e813_jump
		mov    (%esi),%edx
		add    $0x000004,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		mov    %edx,0x000004(%ebx)
		test   %edx,%edx
		jge    _07e812_jump
		mov    %edx,%edi
		mov    0x000014(%ebx),%dh
		neg    %edi
		or     $0x000008,%dh
		mov    %edi,0x000004(%ebx)
		mov    %dh,0x000014(%ebx)

	_07e812_jump:
		inc    %eax

	_07e813_jump:
		movl   $0xffffffff,0x000008(%ebx)
		cmpb   $0x00002e,(%eax)
		jne    _07e866_jump
		inc    %eax
		movl   $0x000000,0x000008(%ebx)
		cmpb   $0x00002a,(%eax)
		jne    _07e847_jump
		mov    (%esi),%edx
		add    $0x000004,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		mov    %edx,0x000008(%ebx)
		test   %edx,%edx
		jge    _07e844_jump
		movl   $0xffffffff,0x000008(%ebx)

	_07e844_jump:
		inc    %eax
		jmp    _07e866_jump

	_07e847_jump:
		mov    (%eax),%cl
		cmp    $0x000030,%cl
		jb     _07e866_jump
		cmp    $0x000039,%cl
		ja     _07e866_jump
		imul   $0x00000a,0x000008(%ebx),%ecx
		xor    %edx,%edx
		mov    (%eax),%dl
		sub    $0x000030,%edx
		add    %edx,%ecx
		inc    %eax
		mov    %ecx,0x000008(%ebx)
		jmp    _07e847_jump

	_07e866_jump:
		mov    (%eax),%cl
		lea    0x000001(%eax),%edx
		cmp    $0x00004e,%cl
		jb     _07e88b_jump
		jbe    _07e8c8_jump
		cmp    $0x00006c,%cl
		jb     _07e882_jump
		jbe    _07e89b_jump
		cmp    $0x000077,%cl
		je     _07e89b_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07e882_jump:
		cmp    $0x000068,%cl
		je     _07e8a9_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07e88b_jump:
		cmp    $0x000046,%cl
		jb     _07e8d3_jump
		jbe    _07e8c2_jump
		cmp    $0x00004c,%cl
		je     _07e8b8_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07e89b_jump:
		mov    0x000014(%ebx),%dl
		or     $0x000020,%dl
		inc    %eax
		mov    %dl,0x000014(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07e8a9_jump:
		mov    0x000014(%ebx),%cl
		or     $0x000010,%cl
		mov    %edx,%eax
		mov    %cl,0x000014(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07e8b8_jump:
		orb    $0x000040,0x000014(%ebx)

	_07e8bc_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07e8c2_jump:
		orb    $0x000080,0x000014(%ebx)
		jmp    _07e8bc_jump

	_07e8c8_jump:
		mov    0x000014(%ebx),%ch
		or     $0x000040,%ch
		mov    %edx,%eax
		mov    %ch,0x000014(%ebx)

	_07e8d3_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07e8d7_func:
		push   %ebx
		push   %ecx
		movb   $0x000000,0x000014(%edx)

	_07e8dd_jump:
		mov    (%eax),%bl
		cmp    $0x00002d,%bl
		jne    _07e8ea_jump
		orb    $0x000008,0x000014(%edx)
		jmp    _07e92c_jump

	_07e8ea_jump:
		cmp    $0x000023,%bl
		jne    _07e8f5_jump
		orb    $0x000001,0x000014(%edx)
		jmp    _07e92c_jump

	_07e8f5_jump:
		cmp    $0x00002b,%bl
		jne    _07e90d_jump
		mov    0x000014(%edx),%ch
		or     $0x000004,%ch
		mov    %ch,%bl
		mov    %ch,0x000014(%edx)
		and    $0x0000fd,%bl
		mov    %bl,0x000014(%edx)
		jmp    _07e92c_jump

	_07e90d_jump:
		cmp    $0x000020,%bl
		jne    _07e924_jump
		mov    0x000014(%edx),%bh
		test   $0x000004,%bh
		jne    _07e92c_jump
		mov    %bh,%cl
		or     $0x000002,%cl
		mov    %cl,0x000014(%edx)
		jmp    _07e92c_jump

	_07e924_jump:
		cmp    $0x000030,%bl
		jne    _07e92f_jump
		mov    %bl,0x000016(%edx)

	_07e92c_jump:
		inc    %eax
		jmp    _07e8dd_jump

	_07e92f_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07e932_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    %eax,%edx
		xor    %eax,%eax

	_07e93e_jump:
		mov    %esi,%es
		mov    %edx,%ebx
		mov    %es:(%ebx),%cl
		inc    %edx
		test   %cl,%cl
		je     _07e951_jump
		cmp    %edi,%eax
		je     _07e951_jump
		inc    %eax
		jmp    _07e93e_jump

	_07e951_jump:
		pop    %es
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07e956_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %edx,%ecx
		mov    %ebx,%esi
		mov    %eax,%edx
		xor    %eax,%eax

	_07e962_jump:
		mov    %ecx,%es
		mov    %edx,%ebx
		mov    %es:(%ebx),%di
		add    $0x000002,%edx
		test   %di,%di
		je     _07e951_jump
		cmp    %esi,%eax
		je     _07e951_jump
		inc    %eax
		jmp    _07e962_jump



_07e979_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    $0x000010,%ebx
		mov    %ebp,%edi
		call   _07955a_func
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    (%esp),%eax
		mov    %ecx,%esi
		mov    %ebp,%edi
		dec    %eax
		lea    (%ecx,%ebp,1),%edx
		lea    (%eax,%ebp,1),%ebx
		jmp    _07e9b9_jump

	_07e9b1_jump:
		dec    %edx
		dec    %esi
		mov    (%edx),%cl
		dec    %eax
		mov    %cl,(%ebx)
		dec    %ebx

	_07e9b9_jump:
		cmp    %edi,%edx
		jne    _07e9b1_jump
		lea    (%eax,%ebp,1),%edx

	_07e9c0_jump:
		test   %eax,%eax
		jl     _07e9cb_jump
		dec    %eax
		movb   $0x000030,(%edx)
		dec    %edx
		jmp    _07e9c0_jump

	_07e9cb_jump:
		add    (%esp),%ebp
		movb   $0x000000,0x000000(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07e9da_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %ebx,%esi
		mov    %edx,(%esp)
		test   %edx,%edx
		jge    _07e9f6_jump
		neg    %edx
		lea    0x000001(%eax),%ecx
		movb   $0x00002d,(%eax)
		mov    %edx,(%esp)

	_07e9f6_jump:
		cmpl   $0xffffffff,0x000008(%esi)
		jne    _07ea03_jump
		movl   $0x000004,0x000008(%esi)

	_07ea03_jump:
		mov    $0x00000a,%ebx
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    0x000002(%esp),%ax
		call   _07955a_func
		mov    %ecx,%ebx

	_07ea18_jump:
		mov    (%ecx),%ah
		lea    0x000001(%ecx),%edx
		test   %ah,%ah
		je     _07ea25_jump
		mov    %edx,%ecx
		jmp    _07ea18_jump

	_07ea25_jump:
		cmpl   $0x000000,0x000008(%esi)
		je     _07ea57_jump
		movb   $0x00002e,(%ecx)
		xor    %eax,%eax
		mov    %edx,%ecx
		jmp    _07ea4f_jump

	_07ea34_jump:
		xor    %edx,%edx
		mov    %dx,0x000002(%esp)
		mov    (%esp),%edi
		imul   $0x00000a,%edi,%edx
		mov    %edx,(%esp)
		mov    0x000002(%esp),%dl
		add    $0x000030,%dl
		inc    %eax
		mov    %dl,(%ecx)
		inc    %ecx

	_07ea4f_jump:
		cmp    0x000008(%esi),%eax
		jl     _07ea34_jump
		movb   $0x000000,(%ecx)

	_07ea57_jump:
		testb  $0x000080,0x000001(%esp)
		je     _07eaae_jump

	_07ea5e_jump:
		cmp    %ebx,%ecx
		jne    _07ea94_jump
		lea    0x000001(%ebx),%ecx
		movb   $0x000031,(%ebx)

	_07ea68_jump:
		mov    (%ecx),%dl
		lea    0x000001(%ecx),%eax
		cmp    $0x000030,%dl
		jne    _07ea76_jump
		mov    %eax,%ecx
		jmp    _07ea68_jump

	_07ea76_jump:
		cmp    $0x00002e,%dl
		jne    _07ea8b_jump
		movb   $0x000030,(%ecx)
		lea    0x000001(%eax),%ecx
		mov    %dl,(%eax)

	_07ea83_jump:
		cmpb   $0x000030,(%ecx)
		jne    _07ea8b_jump
		inc    %ecx
		jmp    _07ea83_jump

	_07ea8b_jump:
		movb   $0x000030,(%ecx)
		inc    %ecx
		movb   $0x000000,(%ecx)
		jmp    _07eaae_jump

	_07ea94_jump:
		dec    %ecx
		cmpb   $0x00002e,(%ecx)
		jne    _07ea9b_jump
		dec    %ecx

	_07ea9b_jump:
		mov    (%ecx),%al
		cmp    $0x000039,%al
		je     _07eaa9_jump
		mov    %al,%ah
		inc    %ah
		mov    %ah,(%ecx)
		jmp    _07eaae_jump

	_07eaa9_jump:
		movb   $0x000030,(%ecx)
		jmp    _07ea5e_jump

	_07eaae_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07eab5_func:
		call   *_0bf5f8_data
		ret    



_07eabc_func:
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %ebx,%esi
		mov    %ecx,(%esp)
		mov    $0x000001,%ebx
		mov    %ds,%eax
		mov    %edi,%ecx
		mov    %ebx,0x000004(%esp)
		mov    %eax,%es
		mov    0x000015(%esi),%al
		movl   $0x000000,0x00000c(%esi)
		cmp    $0x000069,%al
		jb     _07eafd_jump
		jbe    _07eb3d_jump
		cmp    $0x000075,%al
		jb     _07eaf9_jump
		jbe    _07eb09_jump
		cmp    $0x000078,%al

	_07eaf5_jump:
		je     _07eb09_jump
		jmp    _07eb47_jump

	_07eaf9_jump:
		cmp    $0x00006f,%al
		jmp    _07eaf5_jump

	_07eafd_jump:
		cmp    $0x000058,%al
		jb     _07eb47_jump
		jbe    _07eb09_jump
		cmp    $0x000064,%al
		je     _07eb3d_jump
		jmp    _07eb47_jump

	_07eb09_jump:
		mov    0x000014(%esi),%ah
		test   $0x000020,%ah
		je     _07eb1d_jump
		mov    (%edx),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%edx)
		mov    -0x000004(%ebx),%ebp
		jmp    _07eb39_jump

	_07eb1d_jump:
		test   $0x000010,%ah
		je     _07eb2f_jump
		mov    (%edx),%eax
		add    $0x000004,%eax
		mov    %eax,(%edx)
		movzwl -0x000004(%eax),%ebp
		jmp    _07eb39_jump

	_07eb2f_jump:
		mov    (%edx),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%edx)
		mov    -0x000004(%ebp),%ebp

	_07eb39_jump:
		andb   $0x0000f9,0x000014(%esi)

	_07eb3d_jump:
		cmpl   $0xffffffff,0x000008(%esi)
		je     _07eb47_jump
		movb   $0x000020,0x000016(%esi)

	_07eb47_jump:
		mov    0x000015(%esi),%al
		mov    $0x00000a,%ebx
		cmp    $0x000065,%al
		jb     _07ebac_jump
		jbe    _07ec1d_jump
		cmp    $0x00006f,%al
		jb     _07eb95_jump
		jbe    _07ec31_jump
		cmp    $0x000073,%al
		jb     _07eb88_jump
		jbe    _07ecac_jump
		cmp    $0x000075,%al
		jb     _07ee40_jump
		jbe    _07ed75_jump
		cmp    $0x000078,%al
		je     _07ed58_jump
		jmp    _07ee40_jump

	_07eb88_jump:
		cmp    $0x000070,%al
		je     _07ed94_jump
		jmp    _07ee40_jump

	_07eb95_jump:
		cmp    $0x000067,%al
		jb     _07ebf3_jump
		jbe    _07ec1d_jump
		cmp    $0x000069,%al
		je     _07ec6c_jump
		jmp    _07ee40_jump

	_07ebac_jump:
		cmp    $0x000050,%al
		jb     _07ebe0_jump
		jbe    _07ed94_jump
		cmp    $0x000058,%al
		jb     _07ebd3_jump
		jbe    _07ed58_jump
		cmp    $0x000063,%al
		jb     _07ee40_jump
		jbe    _07ee13_jump
		jmp    _07ec6c_jump

	_07ebd3_jump:
		cmp    $0x000053,%al
		je     _07ecac_jump
		jmp    _07ee40_jump

	_07ebe0_jump:
		cmp    $0x000046,%al
		jb     _07ebef_jump
		jbe    _07ebf3_jump
		cmp    $0x000047,%al

	_07ebe8_jump:
		je     _07ec1d_jump
		jmp    _07ee40_jump

	_07ebef_jump:
		cmp    $0x000045,%al
		jmp    _07ebe8_jump

	_07ebf3_jump:
		testb  $0x000010,0x000014(%esi)
		je     _07ec1d_jump
		mov    (%edx),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%edx)
		mov    %edi,%eax
		mov    -0x000004(%ebx),%edx
		mov    %esi,%ebx
		call   _07e9da_func
		mov    $0xffffffff,%ebx
		mov    %ds,%eax
		mov    %ds,%edx
		mov    %eax,%es
		mov    %edi,%eax
		mov    %edi,%ecx
		jmp    _07ec62_jump

	_07ec1d_jump:
		mov    %edi,%eax
		mov    %esi,%ebx
		call   _07eab5_func
		mov    $0xffffffff,%ebx
		mov    %edx,%es
		mov    %eax,%ecx
		jmp    _07ec62_jump

	_07ec31_jump:
		mov    0x000014(%esi),%al
		mov    $0x000008,%ebx
		test   $0x000001,%al
		je     _07ec41_jump
		movb   $0x000030,(%edi)
		inc    %edi

	_07ec41_jump:
		mov    %ebp,%eax
		mov    %edi,%edx
		call   _0795e3_func

	_07ec4a_jump:
		cmpl   $0x000000,0x000008(%esi)
		jne    _07ec59_jump
		cmpb   $0x000030,(%edi)
		jne    _07ec59_jump
		movb   $0x000000,%es:(%ecx)

	_07ec59_jump:
		mov    $0xffffffff,%ebx
		mov    %es,%edx
		mov    %ecx,%eax

	_07ec62_jump:
		call   _07e932_func
		jmp    _07ee6a_jump

	_07ec6c_jump:
		mov    0x000014(%esi),%al
		test   $0x000020,%al
		je     _07ec86_jump
		mov    (%edx),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%edx)
		mov    %edi,%edx
		mov    -0x000004(%ebp),%eax

	_07ec7f_jump:
		call   _0795e3_func
		jmp    _07ec4a_jump

	_07ec86_jump:
		test   $0x000010,%al
		je     _07ec99_jump
		mov    (%edx),%eax
		add    $0x000004,%eax
		mov    %eax,(%edx)
		mov    %edi,%edx
		movswl -0x000004(%eax),%eax
		jmp    _07ec7f_jump

	_07ec99_jump:
		mov    (%edx),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%edx)
		mov    %edi,%edx
		mov    -0x000004(%ebp),%eax
		call   _07955a_func
		jmp    _07ec4a_jump

	_07ecac_jump:
		mov    0x000014(%esi),%ah
		test   $0x000080,%ah
		je     _07ecd6_jump
		mov    (%edx),%ecx
		add    $0x000008,%ecx
		mov    %ecx,(%edx)
		mov    -0x000004(%ecx),%dx
		mov    -0x000008(%ecx),%ecx
		test   %ecx,%ecx
		jne    _07eccb_jump
		test   %dx,%dx
		je     _07eccf_jump

	_07eccb_jump:
		mov    %edx,%es
		jmp    _07ed02_jump

	_07eccf_jump:
		mov    %ds,%eax
		mov    (%esp),%ecx
		jmp    _07ed00_jump

	_07ecd6_jump:
		test   $0x000040,%ah
		je     _07eced_jump
		mov    (%edx),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%edx)
		mov    -0x000004(%ebx),%ecx
		test   %ecx,%ecx
		je     _07eccf_jump

	_07ece9_jump:
		mov    %ds,%eax
		jmp    _07ed00_jump

	_07eced_jump:
		mov    (%edx),%eax
		add    $0x000004,%eax
		mov    %eax,(%edx)
		mov    -0x000004(%eax),%ecx
		test   %ecx,%ecx
		jne    _07ece9_jump
		mov    %ds,%eax
		mov    (%esp),%ecx

	_07ed00_jump:
		mov    %eax,%es

	_07ed02_jump:
		mov    0x000014(%esi),%bh
		mov    0x000015(%esi),%al
		xor    %edi,%edi
		and    $0x0000f9,%bh
		mov    %edi,0x000004(%esp)
		mov    %bh,0x000014(%esi)
		cmp    $0x000053,%al
		jne    _07ed36_jump
		test   $0x000020,%bh
		je     _07ed2b_jump
		xor    %eax,%eax
		mov    %es:(%ecx),%ax
		add    $0x000002,%ecx
		jmp    _07ee6a_jump

	_07ed2b_jump:
		xor    %eax,%eax
		mov    %es:(%ecx),%al
		inc    %ecx
		jmp    _07ee6a_jump

	_07ed36_jump:
		test   $0x000020,%bh
		je     _07ed4c_jump
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x000008(%esi),%ebx
		call   _07e956_func
		jmp    _07ee6a_jump

	_07ed4c_jump:
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x000008(%esi),%ebx
		jmp    _07ec62_jump

	_07ed58_jump:
		testb  $0x000001,0x000014(%esi)
		je     _07ed70_jump
		test   %ebp,%ebp
		je     _07ed70_jump
		movb   $0x000030,0x000017(%esi)
		mov    0x000015(%esi),%al
		movb   $0x000000,0x000019(%esi)
		mov    %al,0x000018(%esi)

	_07ed70_jump:
		mov    $0x000010,%ebx

	_07ed75_jump:
		mov    %ebp,%eax
		mov    %edi,%edx
		call   _07959a_func
		cmpb   $0x000058,0x000015(%esi)
		jne    _07ec4a_jump
		mov    %edi,%eax
		call   _07ef05_func
		jmp    _07ec4a_jump

	_07ed94_jump:
		cmpl   $0x000000,0x000004(%esi)
		jne    _07edb0_jump
		testb  $0x000080,0x000014(%esi)
		je     _07eda9_jump
		movl   $0x00000d,0x000004(%esi)
		jmp    _07edb0_jump

	_07eda9_jump:
		movl   $0x000008,0x000004(%esi)

	_07edb0_jump:
		andb   $0x0000f9,0x000014(%esi)
		mov    (%edx),%eax
		add    $0x000004,%eax
		mov    %eax,(%edx)
		mov    0x000014(%esi),%bl
		mov    -0x000004(%eax),%ebp
		test   $0x000080,%bl
		je     _07edef_jump
		add    $0x000004,%eax
		mov    %eax,(%edx)
		mov    $0x000004,%ebx
		mov    -0x000004(%eax),%eax
		mov    %edi,%edx
		and    $0x00ffff,%eax
		call   _07e979_func
		mov    $0x000008,%ebx
		lea    0x000005(%edi),%edx
		mov    %ebp,%eax
		movb   $0x00003a,0x000004(%edi)
		jmp    _07edf8_jump

	_07edef_jump:
		mov    $0x000008,%ebx
		mov    %ebp,%eax
		mov    %edi,%edx

	_07edf8_jump:
		call   _07e979_func
		cmpb   $0x000050,0x000015(%esi)
		jne    _07ec59_jump
		mov    %edi,%eax
		call   _07ef05_func
		jmp    _07ec59_jump

	_07ee13_jump:
		mov    (%edx),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%edx)
		mov    -0x000004(%ebx),%al
		movb   $0x000000,0x000001(%edi)
		mov    %al,(%edi)
		movl   $0x000001,0x000008(%esi)
		mov    $0x000001,%eax
		mov    0x000014(%esi),%dh
		xor    %edi,%edi
		and    $0x0000f9,%dh
		mov    %edi,0x000004(%esp)
		mov    %dh,0x000014(%esi)
		jmp    _07ee6a_jump

	_07ee40_jump:
		movl   $0x000000,0x000004(%esi)
		mov    0x000015(%esi),%al
		movb   $0x000000,0x000001(%edi)
		mov    %al,(%edi)
		movl   $0x000001,0x000008(%esi)
		mov    0x000014(%esi),%al
		xor    %edi,%edi
		and    $0x0000f9,%al
		mov    %edi,0x000004(%esp)
		mov    %al,0x000014(%esi)
		mov    $0x000001,%eax

	_07ee6a_jump:
		cmpl   $0x000000,0x000004(%esp)
		je     _07eeb0_jump
		mov    %es:(%ecx),%dl
		cmp    $0x00002d,%dl
		jne    _07ee84_jump
		inc    %ecx
		movb   $0x000000,0x000018(%esi)
		dec    %eax
		mov    %dl,0x000017(%esi)
		jmp    _07ee9f_jump

	_07ee84_jump:
		mov    0x000014(%esi),%dh
		test   $0x000002,%dh
		je     _07ee92_jump
		movb   $0x000020,0x000017(%esi)
		jmp    _07ee9b_jump

	_07ee92_jump:
		test   $0x000004,%dh
		je     _07ee9f_jump
		movb   $0x00002b,0x000017(%esi)

	_07ee9b_jump:
		movb   $0x000000,0x000018(%esi)

	_07ee9f_jump:
		mov    0x000008(%esi),%edx
		cmp    %edx,%eax
		jle    _07eeab_jump
		mov    %eax,0x000008(%esi)
		jmp    _07eeb0_jump

	_07eeab_jump:
		sub    %eax,%edx
		mov    %edx,0x00000c(%esi)

	_07eeb0_jump:
		cmpb   $0x00002a,0x000016(%esi)
		jne    _07eec3_jump
		mov    0x000014(%esi),%dl
		movb   $0x000000,0x000017(%esi)
		and    $0x0000f9,%dl
		mov    %dl,0x000014(%esi)

	_07eec3_jump:
		mov    0x000008(%esi),%ebx
		cmp    $0xffffffff,%ebx
		je     _07eecf_jump
		cmp    %ebx,%eax
		jge    _07eed8_jump

	_07eecf_jump:
		cmpb   $0x000063,0x000015(%esi)
		je     _07eed8_jump
		mov    %eax,0x000008(%esi)

	_07eed8_jump:
		mov    $0xffffffff,%ebx
		lea    0x000017(%esi),%eax
		mov    %ds,%edx
		call   _07e932_func
		mov    0x000008(%esi),%ebp
		mov    0x00000c(%esi),%edx
		add    %ebp,%eax
		mov    0x000004(%esi),%ebx
		add    %edx,%eax
		mov    %es,%edx
		sub    %eax,%ebx
		mov    %ecx,%eax
		mov    %ebx,0x000004(%esi)
		add    $0x000008,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret    



_07ef05_func:
		push   %edx
		mov    %eax,%edx

	_07ef08_jump:
		cmpb   $0x000000,(%edx)
		je     _07ef1b_jump
		xor    %eax,%eax
		mov    (%edx),%al
		call   _082185_func
		mov    %al,(%edx)
		inc    %edx
		jmp    _07ef08_jump

	_07ef1b_jump:
		pop    %edx
		ret    



_07ef1d_func:
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    %ecx,(%esp)
		mov    %edx,0x000004(%esp)
		xor    %eax,%eax
		test   %edx,%edx
		je     _07ef62_jump
		mov    0x000006(%esp),%eax
		and    $0x007ff0,%eax
		mov    0x000006(%esp),%edx
		and    $0x00ffff,%eax
		and    $0x00800f,%edx
		sar    $0x000004,%eax
		mov    %edx,%ecx
		mov    %dx,0x000006(%esp)
		or     $0x003fe0,%ecx
		sub    $0x0003fe,%eax
		mov    %cx,0x000006(%esp)

	_07ef62_jump:
		mov    0x000004(%esp),%edx
		mov    %eax,(%ebx)
		mov    (%esp),%eax
		add    $0x000008,%esp
		pop    %ecx
		ret    



_07ef70_func:
		push   %ebx
		mov    %edx,%ebx
		call   _07ef7a_func
		pop    %ebx
		ret    



_07ef7a_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		sub    $0x000020,%esp
		mov    %eax,%ecx
		mov    (%edx),%eax
		mov    %eax,-0x000020(%ebp)
		mov    0x000004(%edx),%eax
		mov    %eax,-0x00001c(%ebp)
		mov    (%ebx),%eax
		mov    %eax,-0x000018(%ebp)
		mov    0x000004(%ebx),%eax
		mov    %eax,-0x000014(%ebp)
		test   $0x000040,%cl
		je     _07efa6_jump
		mov    $0x000001,%esi
		jmp    _07efe0_jump

	_07efa6_jump:
		test   $0x000080,%cl
		je     _07efb2_jump
		mov    $0x000002,%esi
		jmp    _07efe0_jump

	_07efb2_jump:
		test   $0x000001,%ch
		je     _07efbe_jump
		mov    $0x000003,%esi
		jmp    _07efe0_jump

	_07efbe_jump:
		test   $0x000008,%ch
		je     _07efca_jump
		mov    $0x000004,%esi
		jmp    _07efe0_jump

	_07efca_jump:
		test   $0x000002,%ch
		je     _07efd6_jump
		mov    $0x000006,%esi
		jmp    _07efe0_jump

	_07efd6_jump:
		test   $0x000004,%ch
		je     _07efe0_jump
		mov    $0x000005,%esi

	_07efe0_jump:
		mov    %ecx,%eax
		and    $0x00001f,%eax
		mov    _0bd4dc_data(,%eax,4),%eax
		mov    %esi,-0x000028(%ebp)
		mov    %eax,-0x000024(%ebp)
		test   $0x000010,%ch
		je     _07f00f_jump
		mov    _0c1004_data,%eax
		mov    _0c1008_data,%edx
		call   _078d08_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		jmp    _07f051_jump

	_07f00f_jump:
		test   $0x000020,%ch
		je     _07f01e_jump
		xor    %ecx,%ecx
		mov    %ecx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		jmp    _07f051_jump

	_07f01e_jump:
		test   $0x000040,%ch
		je     _07f032_jump
		xor    %edx,%edx
		mov    $0x3ff00000,%ebx
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		jmp    _07f051_jump

	_07f032_jump:
		test   $0x000080,%ch
		je     _07f046_jump
		mov    _0c1004_data,%eax
		mov    %eax,-0x000010(%ebp)
		mov    _0c1008_data,%eax
		jmp    _07f04e_jump

	_07f046_jump:
		mov    (%ebx),%eax
		mov    %eax,-0x000010(%ebp)
		mov    0x000004(%ebx),%eax

	_07f04e_jump:
		mov    %eax,-0x00000c(%ebp)

	_07f051_jump:
		lea    -0x000028(%ebp),%eax
		call   _0821e1_func
		lea    -0x000008(%ebp),%esp
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_07f060_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %ecx
		push   %ebx
		push   %eax
		mov    0x000008(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		mov    0x000010(%ebp),%ebx
		mov    0x000014(%ebp),%ecx
		or     %ecx,%ecx
		jne    _07f08c_jump
		sub    %eax,%eax
		mov    0x000018(%ebp),%ebx
		mov    %eax,(%ebx)
		mov    0x00001c(%ebp),%ebx
		mov    %eax,(%ebx)
		mov    %eax,0x000004(%ebx)
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %ebp
		ret    

	_07f08c_jump:
		push   %esi
		push   %edi
		push   %edx
		push   %ecx
		mov    %edx,%esi
		mov    %ecx,%edi
		and    $0x7ff00000,%esi
		and    $0x7ff00000,%edi
		and    $0x0fffff,%edx
		and    $0x0fffff,%ecx
		or     $0x100000,%edx
		or     $0x100000,%ecx
		sub    %edi,%esi
		jl     _07f124_jump
		sub    %edi,%edi

	_07f0be_jump:
		cmp    %edx,%ecx
		jne    _07f0c6_jump
		cmp    %eax,%ebx
		je     _07f0c8_jump

	_07f0c6_jump:
		jae    _07f0cd_jump

	_07f0c8_jump:
		sub    %ebx,%eax
		sbb    %ecx,%edx
		stc    

	_07f0cd_jump:
		adc    %edi,%edi
		sub    $0x100000,%esi
		jl     _07f0ee_jump
		add    %eax,%eax
		adc    %edx,%edx
		cmp    $0x200000,%edx
		jae    _07f0c8_jump
		cmp    $0x100000,%edx
		jae    _07f0be_jump
		cmc    
		jmp    _07f0cd_jump

	_07f0ee_jump:
		sub    %esi,%esi
		or     %eax,%eax
		jne    _07f0fa_jump
		or     %edx,%edx
		jne    _07f0fa_jump
		jmp    _07f122_jump

	_07f0fa_jump:
		test   $0x200000,%edx
		jne    _07f10e_jump
		adc    %eax,%eax
		adc    %edx,%edx
		sub    $0x100000,%esi
		jmp    _07f0fa_jump

	_07f10e_jump:
		shr    %edx
		rcr    %eax
		add    $0x100000,%esi
		pop    %ecx
		push   %ecx
		and    $0x7ff00000,%ecx
		add    %ecx,%esi

	_07f122_jump:
		jmp    _07f128_jump

	_07f124_jump:
		add    %edi,%esi
		sub    %edi,%edi

	_07f128_jump:
		and    $0x0fffff,%edx
		add    %esi,%edx
		pop    %ecx
		pop    %esi
		and    $0x80000000,%esi
		or     %edx,%edx
		je     _07f13e_jump
		or     %esi,%edx

	_07f13e_jump:
		xor    %ecx,%esi
		jns    _07f144_jump
		neg    %edi

	_07f144_jump:
		mov    0x000018(%ebp),%esi
		mov    %edi,(%esi)
		mov    0x00001c(%ebp),%esi
		mov    %eax,(%esi)
		mov    %edx,0x000004(%esi)
		pop    %edi
		pop    %esi
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %ebp
		ret    



_07f159_func:
		push   %esi
		push   %edi
		push   %ebp
		push   %eax
		mov    %edx,%ebp
		mov    %ebx,%esi
		mov    %ecx,%edi
		lea    0x000008(%ebx),%esi
		mov    (%ebx),%eax
		mov    0x000004(%ebx),%edx

	_07f16b_jump:
		mov    (%esp),%ebx
		mov    %ebp,%ecx
		call   _07825f_func
		mov    %esi,%ecx
		mov    (%ecx),%ebx
		mov    0x000004(%ecx),%ecx
		add    $0x000008,%esi
		call   _0780a8_func
		dec    %edi
		jne    _07f16b_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_07f18e_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07825f_func
		mov    -0x000010(%ebp),%ebx
		mov    -0x00000c(%ebp),%ecx
		call   _07f159_func
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07825f_func
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_07f1c4_func:
		mov    $0x00000d,%eax



_07f1c9_func:
		push   %edx
		mov    %eax,%edx
		call   _082211_func
		mov    %edx,(%eax)
		pop    %edx
		ret    



_07f1d5_func:
		mov    $0x00000e,%eax
		jmp    _07f1c9_func



_07f1ec_func:
		push   %edx
		mov    %eax,%edx
		call   _082217_func
		mov    %edx,(%eax)
		pop    %edx
		ret    



_07f1f8_func:
		call   *_0bd4c5_data
		ret    

.data

_07f2a2_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f"

.text



_07f2ac_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		mov    $0x000002,%al
		jmp    _07f2bc_jump



_07f2b5_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		mov    $0x000000,%al

	_07f2bc_jump:
		mov    %al,%dl
		fldt   %cs:_07f2a2_data
		fldl   -0x000008(%ebp)
		ftst   
		fnstsw %ax
		and    $0x004100,%ax
		cmp    $0x000100,%ax
		jne    _07f2df_jump
		fchs   
		cmp    $0x000000,%dl
		jne    _07f2df_jump
		mov    $0x000004,%dl

	_07f2df_jump:
		fprem  
		fnstsw %ax
		test   $0x000400,%ax
		jne    _07f2df_jump
		mov    $0x000000,%al
		test   $0x000002,%ah
		je     _07f2f6_jump
		or     $0x000001,%al
		fsub   %st(1),%st
		fchs   

	_07f2f6_jump:
		test   $0x000040,%ah
		je     _07f2fd_jump
		or     $0x000002,%al

	_07f2fd_jump:
		test   $0x000001,%ah
		je     _07f304_jump
		add    $0x000004,%al

	_07f304_jump:
		fstp   %st(1)
		fptan  
		fld    %st(0)
		fmul   %st(0),%st
		fld    %st(2)
		fmul   %st(0),%st
		faddp  %st,%st(1)
		fsqrt  
		add    %dl,%al
		and    $0x000007,%al
		cmp    $0x000004,%al
		jl     _07f31e_jump
		fchs   

	_07f31e_jump:
		and    $0x000003,%al
		cmp    $0x000000,%al
		je     _07f326_jump
		cmp    $0x000003,%al

	_07f326_jump:
		jne    _07f32e_jump
		fstp   %st(1)
		fdivrp %st,%st(1)
		jmp    _07f332_jump

	_07f32e_jump:
		fdivrp %st,%st(1)
		fstp   %st(1)

	_07f332_jump:
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    

.data

_07f33a_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xff\x3f"

_07f344_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f\x55\x89\xe5\x52\x50\xd9"
		.ascii  "\xeb\xb2\x00\xb6\x00\xdd\x45\xf8"
		.ascii  "\xd9\xe4\xdf\xe0\x9e\x73\x04\xd9"
		.ascii  "\xe0\xf6\xd6\xd9\xf8\xdf\xe0\x9e"
		.ascii  "\x7a\xf9\x2e\xdb\x2d"
		.long   _07f33a_data
		.ascii  "\xdd\xda\xd8\xd1\xdf\xe0\x9e\x76"
		.ascii  "\x06\xd8\xe1\xf6\xd2\xf6\xd6\x2e"
		.ascii  "\xdb\x2d"
		.long   _07f344_func
		.ascii  "\xd8\xd9\xdf\xe0\x9e\x73\x04\xd8"
		.ascii  "\xe9\xf6\xd2\xdd\xd9\xd9\xf2\x80"
		.ascii  "\xfa\x00\x74\x04\xde\xf1\xeb\x02"

.text



_07f3b9_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %ds,%edx
		call   _08221d_func
		test   %eax,%eax
		jne    _07f3d3_jump
		mov    %ebx,%eax
		mov    %ecx,%edx
		call   _07877f_func

	_07f3d3_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07f3d6_func:
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _07fadf_func
		cmpl   $0x000000,0x000014(%edx)
		jne    _07f40b_jump
		mov    0x00000d(%edx),%ah
		test   $0x000002,%ah
		je     _07f3f6_jump
		movl   $0x000086,0x000014(%edx)
		jmp    _07f40b_jump

	_07f3f6_jump:
		test   $0x000004,%ah
		je     _07f404_jump
		movl   $0x000001,0x000014(%edx)
		jmp    _07f40b_jump

	_07f404_jump:
		movl   $0x001000,0x000014(%edx)

	_07f40b_jump:
		mov    0x000014(%edx),%eax
		call   _07a3d8_func
		mov    %eax,0x000008(%edx)
		test   %eax,%eax
		jne    _07f43a_jump
		lea    0x000018(%edx),%eax
		mov    0x00000d(%edx),%cl
		movl   $0x000001,0x000014(%edx)
		and    $0x0000f8,%cl
		mov    %eax,0x000008(%edx)
		mov    %cl,%ch
		mov    %cl,0x00000d(%edx)
		or     $0x000004,%ch
		mov    %ch,0x00000d(%edx)
		jmp    _07f43e_jump

	_07f43a_jump:
		orb    $0x000008,0x00000c(%edx)

	_07f43e_jump:
		mov    0x000008(%edx),%eax
		movl   $0x000000,0x000004(%edx)
		mov    %eax,(%edx)
		pop    %edx
		pop    %ecx
		ret    



_07f44d_func:
		push   %ecx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    _07f46a_jump
		and    $0x00ffff,%eax
		call   _07e16c_func

	_07f46a_jump:
		pop    %ecx
		ret    



_07f46c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    0x00000d(%eax),%ah
		xor    %esi,%esi
		test   $0x000010,%ah
		je     _07f4d9_jump
		mov    0x00000d(%ecx),%bh
		and    $0x0000ef,%bh
		mov    0x00000c(%ecx),%al
		mov    %bh,0x00000d(%ecx)
		test   $0x000002,%al
		je     _07f518_jump
		cmpl   $0x000000,0x000008(%ecx)
		je     _07f518_jump
		mov    0x000004(%ecx),%ebx
		mov    0x000008(%ecx),%edx
		mov    0x000010(%ecx),%eax
		call   _082243_func
		cmp    $0xffffffff,%eax
		jne    _07f4ba_jump
		mov    0x00000c(%ecx),%dl
		or     $0x000020,%dl
		mov    %eax,%esi
		mov    %dl,0x00000c(%ecx)
		jmp    _07f518_jump

	_07f4ba_jump:
		cmp    0x000004(%ecx),%eax
		je     _07f518_jump
		mov    $0x00000c,%eax
		call   _07f1c9_func
		mov    0x00000c(%ecx),%ah
		or     $0x000020,%ah
		mov    $0xffffffff,%esi
		mov    %ah,0x00000c(%ecx)
		jmp    _07f518_jump

	_07f4d9_jump:
		cmpl   $0x000000,0x000008(%ecx)
		je     _07f518_jump
		mov    0x00000c(%ecx),%dl
		and    $0x0000ef,%dl
		mov    0x00000d(%ecx),%dh
		mov    %dl,0x00000c(%ecx)
		test   $0x000020,%dh
		jne    _07f518_jump
		mov    0x000004(%ecx),%eax
		test   %eax,%eax
		je     _07f508_jump
		mov    %eax,%edx
		mov    $0x000001,%ebx
		neg    %edx
		mov    0x000010(%ecx),%eax
		call   _079956_func

	_07f508_jump:
		cmp    $0xffffffff,%eax
		jne    _07f518_jump
		mov    0x00000c(%ecx),%bl
		or     $0x000020,%bl
		mov    %eax,%esi
		mov    %bl,0x00000c(%ecx)

	_07f518_jump:
		mov    0x000008(%ecx),%eax
		movl   $0x000000,0x000004(%ecx)
		mov    %eax,(%ecx)
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f52b_func:
		push   %ebx
		push   %edx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _079956_func
		pop    %edx
		pop    %ebx
		ret    



_07f712_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0dedd4_data,%edx
		xor    %ebx,%ebx
		jmp    _07f737_jump

	_07f721_jump:
		mov    0x000004(%edx),%eax
		test   %ecx,0x00000c(%eax)
		je     _07f735_jump
		inc    %ebx
		testb  $0x000010,0x00000d(%eax)
		je     _07f735_jump
		call   _07f46c_func

	_07f735_jump:
		mov    (%edx),%edx

	_07f737_jump:
		test   %edx,%edx
		jne    _07f721_jump
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f741_func:
		push   %edx
		mov    %eax,%edx
		mov    %cs,%eax
		mov    %ax,0x000002(%edx)
		mov    %ds,%eax
		mov    %ax,0x000006(%edx)
		mov    %es,%eax
		mov    %ax,(%edx)
		mov    %ss,%eax
		mov    %ax,0x000004(%edx)
		mov    %fs,%eax
		mov    %ax,0x000008(%edx)
		mov    %gs,%eax
		mov    %ax,0x00000a(%edx)
		pop    %edx
		ret    



_07f769_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $0x000000,%al
		mov    $0x000044,%ah
		int    $0x000021
		rcl    %edx
		ror    %edx
		test   $0x000080,%dl
		setne  %al
		and    $0x0000ff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f787_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmp    _0bd540_data,%eax
		jb     _07f79a_jump
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07f79a_jump:
		cmp    $0x000005,%eax
		jg     _07f7d0_jump
		mov    %eax,%ebx
		mov    _0bd594_data,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000001(%eax),%cl
		test   $0x000040,%cl
		jne    _07f7d0_jump
		mov    %cl,%ch
		or     $0x000040,%ch
		mov    %ch,0x000001(%eax)
		mov    %edx,%eax
		call   _07f769_func
		test   %eax,%eax
		je     _07f7d0_jump
		mov    _0bd594_data,%eax
		orb    $0x000020,0x000001(%ebx,%eax,1)

	_07f7d0_jump:
		mov    _0bd594_data,%eax
		mov    (%eax,%edx,4),%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f7dc_func:
		push   %ebx
		or     $0x000040,%dh
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    _0bd594_data,%eax
		shl    $0x000002,%edx
		mov    %ebx,(%edx,%eax,1)
		pop    %ebx
		ret    



_07f7f2_func:
		jae    _07f802_jump
		and    $0x00ffff,%eax
		push   %eax
		call   _07e16c_func
		pop    %eax
		jmp    _07f804_jump

	_07f802_jump:
		sub    %eax,%eax

	_07f804_jump:
		ret    



_07f805_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     _07f825_jump
		mov    %edx,%eax
		xor    %edx,%edx
		call   _07f7dc_func
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret    

	_07f825_jump:
		mov    $0x000004,%eax
		call   _07f1c9_func
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    



_07f840_func:
		test   %edx,%edx
		jl     _078d08_func
		ret    



_07f84a_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		call   _07f85f_func
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    



_07f85f_func:
		fldl2e 
		fmulp  %st,%st(1)
		push   %ebp
		mov    %esp,%ebp
		mov    $0x008001,%ax
		push   %eax
		filds  -0x000004(%ebp)
		fcom   %st(1)
		fnstsw %ax
		sahf   
		mov    %ebp,%esp
		fstp   %st(0)
		jbe    _07f87f_jump
		fstp   %st(0)
		fldz   
		pop    %ebp
		ret    

	_07f87f_jump:
		fld    %st(0)
		call   _07f8d0_func
		push   %eax
		fists  -0x000004(%ebp)
		fwait
		pop    %eax
		cmp    $0x008000,%ax
		jne    _07f89f_jump
		dec    %ax
		push   %eax
		fstp   %st(0)
		fstp   %st(0)
		filds  -0x000004(%ebp)
		fld    %st(0)
		pop    %eax

	_07f89f_jump:
		fld    %st(0)
		fld1   
		fscale 
		fstp   %st(1)
		fxch   %st(1)
		fld    %st(2)
		fsubp  %st,%st(1)
		ftst   
		fnstsw %ax
		sahf   
		je     _07f8ca_jump
		fld1   
		fchs   
		fxch   %st(1)
		fscale 
		fstp   %st(1)
		f2xm1  
		fld1   
		faddp  %st,%st(1)
		fmul   %st(0),%st
		fmulp  %st,%st(1)
		jmp    _07f8cc_jump

	_07f8ca_jump:
		fstp   %st(0)

	_07f8cc_jump:
		fstp   %st(1)
		pop    %ebp
		ret    



_07f8d0_func:
		push   %ebp
		mov    %esp,%ebp
		push   %eax
		fstcw  -0x000002(%ebp)
		fwait
		mov    -0x000002(%ebp),%ax
		and    $0x00f3ff,%ax
		or     $0x000400,%ax
		push   %eax
		fldcw  -0x000008(%ebp)
		frndint 
		fldcw  -0x000002(%ebp)
		fwait
		mov    %ebp,%esp
		pop    %ebp
		ret    



_07f8f3_func:
		test   %edx,%edx
		jne    _07f8fa_jump
		xor    %eax,%eax
		ret    

	_07f8fa_jump:
		jge    _07f902_jump
		mov    $0xffffffff,%eax
		ret    

	_07f902_jump:
		mov    $0x000001,%eax
		ret    



_07f908_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		lea    -0x000008(%ebp),%eax
		lea    -0x000010(%ebp),%edx
		call   _0822ca_func
		mov    -0x000010(%ebp),%eax
		mov    %eax,(%ebx)
		mov    -0x00000c(%ebp),%eax
		mov    %eax,0x000004(%ebx)
		mov    -0x000008(%ebp),%eax
		mov    -0x000004(%ebp),%edx
		mov    %ebp,%esp
		pop    %ebp
		ret    



_07f934_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		test   %edx,%edx
		je     _07f9c6_jump
		mov    -0x000006(%ebp),%eax
		and    $0x007ff0,%eax
		cwtl   
		sar    $0x000004,%eax
		cmp    $0x003e80,%ebx
		jle    _07f962_jump
		mov    $0x003e80,%ebx

	_07f962_jump:
		cmp    $0xffffc180,%ebx
		jge    _07f96f_jump
		mov    $0xffffc180,%ebx

	_07f96f_jump:
		add    %ebx,%eax
		test   %eax,%eax
		jg     _07f97b_jump
		xor    %eax,%eax
		xor    %edx,%edx
		jmp    _07f9cc_jump

	_07f97b_jump:
		cmp    $0x0007ff,%eax
		jl     _07f9ae_jump
		mov    -0x000006(%ebp),%ecx
		call   _07f1d5_func
		test   %cx,%cx
		jle    _07f99c_jump
		mov    _0c1004_data,%eax
		mov    _0c1008_data,%edx
		jmp    _07f9cc_jump

	_07f99c_jump:
		mov    _0c1004_data,%eax
		mov    _0c1008_data,%edx
		call   _078d08_func
		jmp    _07f9cc_jump

	_07f9ae_jump:
		mov    -0x000006(%ebp),%edx
		and    $0x00800f,%edx
		shl    $0x000004,%eax
		mov    %edx,%ebx
		mov    %dx,-0x000006(%ebp)
		or     %eax,%ebx
		mov    %bx,-0x000006(%ebp)

	_07f9c6_jump:
		mov    -0x00000c(%ebp),%eax
		mov    -0x000008(%ebp),%edx

	_07f9cc_jump:
		lea    -0x000004(%ebp),%esp
		pop    %ecx
		pop    %ebp
		ret    



_07f9d2_func:
		cmp    $0x000041,%eax
		jl     _07f9df_jump
		cmp    $0x00005a,%eax
		jg     _07f9df_jump
		add    $0x000020,%eax

	_07f9df_jump:
		ret    



_07f9e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0dedcc_data,%esi
		test   %esi,%esi
		je     _07fa08_jump
		mov    0x000004(%esi),%ecx
		mov    0x00000c(%ecx),%edi
		mov    (%esi),%eax
		and    $0x004003,%edi
		mov    %eax,_0dedcc_data
		or     $0x000003,%di
		jmp    _07fa51_jump

	_07fa08_jump:
		mov    $_0bd274_data,%ecx
		jmp    _07fa2f_jump

	_07fa0f_jump:
		testb  $0x000003,0x00000c(%ecx)
		jne    _07fa2c_jump
		mov    $0x000008,%eax
		call   _07a3d8_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _07fa76_jump
		mov    $0x000003,%edi
		jmp    _07fa51_jump

	_07fa2c_jump:
		add    $0x00001a,%ecx

	_07fa2f_jump:
		cmp    $_0bd47c_data,%ecx
		jb     _07fa0f_jump
		mov    $0x000022,%eax
		mov    $0x004003,%edi
		call   _07a3d8_func
		mov    %eax,%ecx
		mov    %eax,%esi
		test   %eax,%eax
		je     _07fa76_jump
		lea    0x000008(%eax),%ecx

	_07fa51_jump:
		mov    $0x00001a,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _0787d0_func
		mov    %edi,0x00000c(%ecx)
		mov    _0dedd4_data,%eax
		mov    %ecx,0x000004(%esi)
		mov    %esi,_0dedd4_data
		mov    %eax,(%esi)
		mov    %ecx,%eax
		jmp    _07fa82_jump

	_07fa76_jump:
		mov    $0x000005,%eax
		call   _07f1c9_func
		xor    %eax,%eax

	_07fa82_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07fa88_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $_0dedd4_data,%edx

	_07fa92_jump:
		mov    (%edx),%eax
		test   %eax,%eax
		je     _07fabd_jump
		mov    0x000004(%eax),%ecx
		cmp    %ecx,%ebx
		je     _07faa3_jump
		mov    %eax,%edx
		jmp    _07fa92_jump

	_07faa3_jump:
		mov    0x00000c(%ecx),%cl
		or     $0x000003,%cl
		mov    %cl,0x00000c(%ebx)
		mov    (%eax),%ebx
		mov    %ebx,(%edx)
		mov    _0dedcc_data,%edx
		mov    %eax,_0dedcc_data
		mov    %edx,(%eax)

	_07fabd_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07fac1_jump:
		push   %edx

	_07fac2_jump:
		mov    _0dedcc_data,%edx
		test   %edx,%edx
		je     _07fadd_jump
		mov    %edx,%eax
		mov    (%edx),%edx
		call   _07a4d3_func
		mov    %edx,_0dedcc_data
		jmp    _07fac2_jump

	_07fadd_jump:
		pop    %edx
		ret    



_07fadf_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		testb  $0x000020,0x00000d(%eax)
		jne    _07fb0c_jump
		mov    0x000010(%edx),%eax
		call   _07f769_func
		test   %eax,%eax
		je     _07fb0c_jump
		mov    0x00000d(%edx),%bl
		or     $0x000020,%bl
		mov    %bl,0x00000d(%edx)
		test   $0x000007,%bl
		jne    _07fb0c_jump
		mov    %bl,%cl
		or     $0x000002,%cl
		mov    %cl,0x00000d(%edx)

	_07fb0c_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07fb10_func:
		mov    _0bd498_data,%eax
		ret    



_07fb16_func:
		push   %ebp
		push   %es
		push   %ebx
		push   %ds
		push   %edx
		call   _07fb4e_func
		push   %ds
		push   %edi
		mov    %esp,%ebp
		mov    0x000008(%ebp),%edi
		mov    0x00000c(%ebp),%ds
		mov    %eax,(%edi)
		mov    %ebx,0x000004(%edi)
		mov    %ecx,0x000008(%edi)
		mov    %edx,0x00000c(%edi)
		mov    %esi,0x000010(%edi)
		popl   0x000014(%edi)
		sbb    %eax,%eax
		mov    %eax,0x000018(%edi)
		pop    %eax
		pop    %ebx
		pop    %ebx
		pop    %ebx
		mov    %ax,0x000006(%ebx)
		data16 mov %es,(%ebx)
		pop    %es
		pop    %ebp
		ret    



_07fb4e_func:
		lea    (%esi,%esi,2),%esi
		lea    %cs:_07fbf4_jump(%esi),%eax
		push   %eax
		mov    (%ebx),%es
		mov    0x000006(%ebx),%bp
		mov    (%edi),%eax
		mov    0x000004(%edi),%ebx
		mov    0x000008(%edi),%ecx
		mov    0x00000c(%edi),%edx
		mov    0x000010(%edi),%esi
		mov    0x000014(%edi),%edi
		mov    %ebp,%ds
		ret    

	_07fbf4_jump:
		int    $0x000000
		ret    



_07fef4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    $0x00002a,%ah
		int    $0x000021
		sub    $0x00076c,%cx
		mov    %al,%ch
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000006(%esp),%al
		mov    %eax,0x000014(%ebx)
		xor    %eax,%eax
		mov    0x000005(%esp),%al
		dec    %eax
		mov    %eax,0x000010(%ebx)
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		mov    %eax,0x00000c(%ebx)
		mov    $0x00002c,%ah
		int    $0x000021
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,(%esp)
		xor    %eax,%eax
		mov    0x000003(%esp),%al
		xor    %edx,%edx
		mov    %eax,0x000008(%ebx)
		xor    %eax,%eax
		mov    (%esp),%dl
		mov    0x000002(%esp),%al
		mov    %edx,%esi
		mov    %eax,0x000004(%ebx)
		xor    %eax,%eax
		shl    $0x000002,%esi
		mov    0x000001(%esp),%al
		add    %edx,%esi
		mov    %eax,(%ebx)
		mov    $0x00002a,%ah
		int    $0x000021
		sub    $0x00076c,%cx
		mov    %al,%ch
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,0x000008(%esp)
		mov    0x000004(%esp),%ah
		mov    0x000008(%esp),%al
		add    %esi,%esi
		cmp    %ah,%al
		je     _07ffa6_jump
		cmpl   $0x000017,0x000008(%ebx)
		je     _07ffa6_jump
		xor    %eax,%eax
		mov    0x00000a(%esp),%al
		mov    %eax,0x000014(%ebx)
		xor    %eax,%eax
		mov    0x000009(%esp),%al
		dec    %eax
		mov    %eax,0x000010(%ebx)
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    %eax,0x00000c(%ebx)

	_07ffa6_jump:
		mov    %esi,%eax
		movl   $0xffffffff,0x000020(%ebx)
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ffb7_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    $0x00000c,%esi
		mov    0x000010(%ebp),%edx
		mov    0x000010(%eax),%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $_0c1070_data,%ebx
		mov    0x000014(%ebp),%esi
		mov    %edx,%edi
		cmp    $0xf4fb7ea1,%esi
		jge    _07ffeb_jump

	_07ffe1_jump:
		mov    $0xffffffff,%eax
		jmp    _080104_jump

	_07ffeb_jump:
		mov    0x000010(%ebp),%eax
		mov    %eax,%edx
		mov    $0x00000c,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %eax,%esi

	_07fffc_jump:
		test   %edi,%edi
		jge    _080006_jump
		dec    %esi
		add    $0x00000c,%edi
		jmp    _07fffc_jump

	_080006_jump:
		test   %esi,%esi
		jl     _07ffe1_jump
		lea    0x00076c(%esi),%eax
		call   _0824d1_func
		test   %eax,%eax
		je     _08001e_jump
		mov    $_0c108a_data,%ebx

	_08001e_jump:
		mov    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		lea    0x000003(%esi),%ecx
		mov    %eax,%edx
		shl    $0x000002,%eax
		sar    $0x000002,%ecx
		add    %edx,%eax
		lea    (%eax,%ecx,1),%edx
		movswl (%ebx,%edi,2),%eax
		mov    0x00000c(%ebp),%edi
		add    %edx,%eax
		add    %eax,%edi
		dec    %edi
		test   %esi,%esi
		je     _08004b_jump
		dec    %edi

	_08004b_jump:
		mov    0x000008(%ebp),%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%ebp),%edx
		add    %eax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    0x000000(%ebp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi

	_08006c_jump:
		test   %esi,%esi
		jge    _080079_jump
		dec    %edi
		add    $0x015180,%esi
		jmp    _08006c_jump

	_080079_jump:
		mov    %edi,%eax
		mov    %esi,%edx
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		call   _0828ed_func
		call   _082a2c_func
		mov    _0bf650_data,%edx
		mov    0x000020(%ebp),%ebx
		add    %edx,%esi
		test   %ebx,%ebx
		jge    _0800a1_jump
		mov    %ebp,%eax
		call   _082619_func

	_0800a1_jump:
		cmpl   $0x000000,0x000020(%ebp)
		jle    _0800ad_jump
		sub    _0bf654_data,%esi

	_0800ad_jump:
		test   %esi,%esi
		jge    _0800ba_jump
		dec    %edi
		add    $0x015180,%esi
		jmp    _0800ad_jump

	_0800ba_jump:
		cmp    $0x0063de,%edi
		jl     _07ffe1_jump
		jne    _0800e4_jump
		mov    _0bf650_data,%eax
		sub    $0x015180,%esi
		test   %eax,%eax
		jle    _07ffe1_jump
		test   %esi,%esi
		jge    _080102_jump
		jmp    _07ffe1_jump

	_0800e4_jump:
		lea    -0x0063df(%edi),%eax
		mov    %eax,%edi
		shl    $0x000003,%edi
		sub    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		shl    $0x000007,%edi
		mov    %edi,%eax
		shl    $0x000002,%edi
		sub    %eax,%edi
		add    %edi,%esi

	_080102_jump:
		mov    %esi,%eax

	_080104_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08011d_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    _0bd271_data,%ah
		test   %ah,%ah
		je     _080141_jump
		mov    %edi,%eax
		call   _082cfc_func
		jmp    _08028b_jump

	_080141_jump:
		mov    %ah,-0x000018(%ebp)
		mov    %ah,-0x000014(%ebp)
		mov    %edi,%eax
		mov    $0x3ff00000,%ecx
		call   _07f8f3_func
		mov    %eax,-0x00001c(%ebp)
		mov    %esi,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _07f840_func
		mov    %eax,%edi
		mov    %edx,%esi
		call   _07a1e6_func
		jne    _08017b_jump
		mov    $0x54442d18,%edi
		mov    $0x3fe921fb,%esi
		jmp    _080274_jump

	_08017b_jump:
		mov    $0x3ff00000,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   _07a1e6_func
		jle    _0801a6_jump
		mov    $0x3ff00000,%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		xor    %eax,%eax
		call   _07885a_func
		mov    $0x000001,%bl
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bl,-0x000018(%ebp)

	_0801a6_jump:
		mov    $0x5e9ecd56,%ebx
		mov    $0x3fd12614,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07a1e6_func
		jle    _080220_jump
		mov    $0xd0b09955,%ebx
		mov    $0x3fe76cf5,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07825f_func
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _0780a8_func
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _0780a8_func
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _0780a8_func
		mov    $0xe8584ca9,%ebx
		mov    $0x3ffbb67a,%ecx
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _0780a8_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _07885a_func
		mov    $0x000001,%bh
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bh,-0x000014(%ebp)

	_080220_jump:
		mov    $_0c100c_data,%ebx
		mov    $0x000008,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07f18e_func
		mov    %eax,%ecx
		mov    %edx,%ebx
		mov    %eax,%edi
		mov    -0x000014(%ebp),%al
		mov    %edx,%esi
		test   %al,%al
		je     _080257_jump
		mov    $0x382d7366,%ebx
		mov    %ecx,%eax
		mov    $0x3fe0c152,%ecx
		call   _0780a8_func
		mov    %eax,%edi
		mov    %edx,%esi

	_080257_jump:
		cmpb   $0x000000,-0x000018(%ebp)
		je     _080274_jump
		mov    $0x54442d1a,%eax
		mov    $0x3ff921fb,%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _0780a2_func
		mov    %eax,%edi
		mov    %edx,%esi

	_080274_jump:
		cmpl   $0x000000,-0x00001c(%ebp)
		jge    _080287_jump
		mov    %edi,%eax
		mov    %esi,%edx
		call   _078d08_func
		mov    %eax,%edi
		mov    %edx,%esi

	_080287_jump:
		mov    %edi,%eax
		mov    %esi,%edx

	_08028b_jump:
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_080294_func:
		push   %ebx
		sub    $0x00000c,%esp
		mov    %esp,%ebx
		call   _08037f_func
		mov    %esp,%eax
		call   _0802b3_func
		mov    %esp,%eax
		call   _0803ff_func
		add    $0x00000c,%esp
		pop    %ebx
		ret    



_0802b2_func:
		ret    



_0802b3_func:
		push   %edi
		push   %esi
		push   %edx
		push   %ecx
		push   %ebx
		mov    0x000008(%eax),%cx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		or     %ebx,%ebx
		jne    _0802f9_jump
		or     %edx,%edx
		jne    _0802ee_jump
		add    %cx,%cx
		je     _08037a_jump

	_0802d2_jump:
		movw   $0x00ffff,0x000008(%eax)
		movl   $0x000000,0x000004(%eax)
		movl   $0x000000,(%eax)

	_0802e5_jump:
		orb    $0x0000c0,0x000007(%eax)
		jmp    _080379_jump

	_0802ee_jump:
		cmp    $0x007fff,%cx
		je     _08037a_jump

	_0802f9_jump:
		mov    %ecx,%edx
		and    $0x00007f,%dh
		cmp    $0x007fff,%dx
		je     _0802e5_jump
		add    %cx,%cx
		jb     _0802e5_jump
		shr    %cx
		je     _080316_jump
		mov    0x000004(%eax),%edx
		add    %edx,%edx
		jae    _0802d2_jump

	_080316_jump:
		mov    0x000004(%eax),%edx
		sub    %edi,%edi
		push   %eax
		sub    $0x003fff,%cx
		sar    %cx
		jb     _08032c_jump
		shr    %edx
		rcr    %ebx
		rcr    %edi

	_08032c_jump:
		add    $0x003fff,%cx
		mov    %cx,0x000008(%eax)
		mov    %edx,%ecx
		mov    %ebx,%eax
		mov    %edx,%esi
		stc    
		rcr    %esi
		inc    %edx
		je     _08035f_jump
		dec    %edx

	_080342_jump:
		div    %esi
		dec    %esi
		cmp    %eax,%esi
		jbe    _080354_jump
		inc    %esi
		add    %eax,%esi
		rcr    %esi
		mov    %ecx,%edx
		mov    %ebx,%eax
		jmp    _080342_jump

	_080354_jump:
		inc    %esi
		mov    %eax,%ecx
		mov    %edi,%eax
		div    %esi
		add    %ecx,%esi
		jmp    _080368_jump

	_08035f_jump:
		cmp    %esi,%eax
		je     _080371_jump
		xchg   %eax,%edx
		mov    %edi,%eax
		div    %esi

	_080368_jump:
		sub    %edx,%edx
		stc    
		rcr    %esi
		rcr    %eax
		adc    %edx,%eax

	_080371_jump:
		adc    %esi,%edx
		pop    %esi
		mov    %eax,(%esi)
		mov    %edx,0x000004(%esi)

	_080379_jump:
		pop    %ebx

	_08037a_jump:
		pop    %ecx
		pop    %edx
		pop    %esi
		pop    %edi
		ret    



_08037f_func:
		push   %ecx
		mov    %edx,%ecx
		shld   $0x00000b,%eax,%edx
		shl    $0x00000b,%eax
		sar    $0x000014,%ecx
		and    $0x0007ff,%cx
		je     _0803ca_jump
		cmp    $0x0007ff,%cx
		je     _0803a1_jump
		add    $0x003c00,%cx
		jmp    _0803c2_jump

	_0803a1_jump:
		mov    $0x007fff,%cx
		test   $0x7fffffff,%edx
		jne    _0803af_jump
		or     %eax,%eax

	_0803af_jump:
		je     _0803c2_jump
		push   %eax
		mov    $0x000001,%al
		mov    $0x000081,%ah
		call   _0802b2_func
		pop    %eax
		or     $0x40000000,%edx

	_0803c2_jump:
		or     $0x80000000,%edx
		jmp    _0803ef_jump

	_0803ca_jump:
		or     %edx,%edx
		jne    _0803d6_jump
		or     %eax,%eax
		jne    _0803d6_jump
		sub    %ecx,%ecx
		jmp    _0803ef_jump

	_0803d6_jump:
		mov    $0x003c01,%cx
		or     %edx,%edx
		jne    _0803e3_jump
		xchg   %eax,%edx
		sub    $0x000020,%cx

	_0803e3_jump:
		or     %edx,%edx
		js     _0803ef_jump
		add    %eax,%eax
		adc    %edx,%edx
		dec    %cx
		jmp    _0803e3_jump

	_0803ef_jump:
		mov    %eax,(%ebx)
		mov    %edx,0x000004(%ebx)
		add    %ecx,%ecx
		rcr    %cx
		mov    %cx,0x000008(%ebx)
		pop    %ecx
		ret    



_0803ff_func:
		push   %ecx
		push   %ebx
		push   %esi
		mov    0x000008(%eax),%cx
		mov    0x000004(%eax),%edx
		mov    (%eax),%eax
		mov    $0xfffff800,%esi
		mov    %eax,%ebx
		shl    $0x000016,%ebx
		jae    _08042c_jump
		jne    _08041b_jump
		add    %esi,%esi

	_08041b_jump:
		add    $0x000800,%eax
		adc    $0x000000,%edx
		jae    _08042c_jump
		mov    $0x80000000,%edx
		inc    %cx

	_08042c_jump:
		and    %esi,%eax
		mov    %ecx,%ebx
		and    $0x007fff,%cx
		add    $0x00c400,%cx
		cmp    $0x0007ff,%cx
		jae    _080462_jump
		or     %cx,%cx
		jne    _080451_jump
		shrd   $0x00000c,%edx,%eax
		add    %edx,%edx
		shr    $0x00000c,%edx
		jmp    _08045b_jump

	_080451_jump:
		shrd   $0x00000b,%edx,%eax
		add    %edx,%edx
		shrd   $0x00000b,%ecx,%edx

	_08045b_jump:
		add    %bx,%bx
		rcr    %edx
		jmp    _0804c2_jump

	_080462_jump:
		cmp    $0x00c400,%cx
		jb     _08049c_jump
		cmp    $0x00ffcc,%cx
		jl     _080496_jump
		sub    $0x00000c,%cx
		neg    %cx
		cmp    $0x000020,%cl
		jb     _080484_jump
		sub    $0x000020,%cl
		mov    %eax,%esi
		mov    %edx,%eax
		sub    %edx,%edx

	_080484_jump:
		shrd   %cl,%eax,%esi
		shrd   %cl,%edx,%eax
		shr    %cl,%edx
		add    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		jmp    _08049a_jump

	_080496_jump:
		sub    %eax,%eax
		sub    %edx,%edx

	_08049a_jump:
		jmp    _0804c2_jump

	_08049c_jump:
		shrd   $0x00000b,%edx,%eax
		add    %edx,%edx
		shr    $0x00000b,%edx
		add    %bx,%bx
		rcr    %edx
		or     $0x7ff00000,%edx
		cmp    $0x0043ff,%cx
		je     _0804c2_jump
		push   %eax
		mov    $0x000008,%al
		mov    $0x000084,%ah
		call   _0802b2_func
		pop    %eax

	_0804c2_jump:
		pop    %esi
		pop    %ebx
		pop    %ecx
		ret    



_0804c6_func:
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     _080515_jump
		add    $0x000007,%eax
		jb     _080515_jump
		and    $0x0000fc,%al
		mov    $0x00000c,%edx
		sub    %edx,%eax
		cmc    
		sbb    %ecx,%ecx
		and    %ecx,%eax
		add    %edx,%eax
		cmp    0x000014(%ebx),%eax
		ja     _080515_jump
		mov    0x00000c(%ebx),%esi
		mov    0x000010(%ebx),%edi
		cmp    %edi,%eax
		ja     _0804f9_jump
		mov    0x000028(%ebx),%esi
		sub    %edi,%edi

	_0804f9_jump:
		mov    (%esi),%edx
		cmp    %edx,%eax
		jbe    _080519_jump
		sub    %edx,%edi
		cmc    
		sbb    %ecx,%ecx
		and    %ecx,%edi
		add    %edx,%edi
		lea    0x000020(%ebx),%edx
		mov    0x000008(%esi),%esi
		cmp    %edx,%esi
		jne    _0804f9_jump
		mov    %edi,0x000014(%ebx)

	_080515_jump:
		sub    %eax,%eax
		jmp    _080564_jump

	_080519_jump:
		sub    %eax,%edx
		mov    %edi,0x000010(%ebx)
		incl   0x000018(%ebx)
		mov    0x000008(%esi),%ecx
		cmp    $0x00000c,%edx
		jb     _080547_jump
		mov    %esi,%edi
		add    %eax,%edi
		mov    %edi,0x00000c(%ebx)
		mov    %edx,(%edi)
		mov    %eax,(%esi)
		mov    0x000004(%esi),%ebx
		mov    %ebx,0x000004(%edi)
		mov    %ecx,0x000008(%edi)
		mov    %edi,0x000008(%ebx)
		mov    %ecx,%ebx
		mov    %edi,0x000004(%ebx)
		jmp    _08055c_jump

	_080547_jump:
		decl   0x00001c(%ebx)
		mov    %esi,%eax
		mov    %ecx,%edi
		mov    0x000004(%esi),%esi
		mov    %edi,0x000008(%esi)
		mov    %esi,0x000004(%edi)
		mov    %esi,0x00000c(%ebx)
		mov    %eax,%esi

	_08055c_jump:
		orl    $0x000001,(%esi)
		mov    %esi,%eax
		add    $0x000004,%eax

	_080564_jump:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret    

	_080569_jump:
		jmp    _080674_jump



_08056e_func:
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     _080569_jump
		mov    %eax,%esi
		sub    $0x000004,%esi
		mov    (%esi),%eax
		test   $0x000001,%al
		je     _080569_jump
		and    $0x0000fe,%al
		mov    %esi,%edi
		add    %eax,%edi
		testl  $0x000001,(%edi)
		jne    _0805b0_jump
		cmp    0x00000c(%ebx),%edi
		jne    _080599_jump
		mov    %esi,0x00000c(%ebx)

	_080599_jump:
		add    (%edi),%eax
		mov    %eax,(%esi)
		push   %ebx
		mov    0x000004(%edi),%ebx
		mov    0x000008(%edi),%edi
		mov    %edi,0x000008(%ebx)
		mov    %ebx,0x000004(%edi)
		pop    %ebx
		decl   0x00001c(%ebx)
		jmp    _08062c_jump

	_0805b0_jump:
		mov    %eax,(%esi)
		mov    0x00000c(%ebx),%edi
		cmp    %edi,%esi
		jae    _0805c7_jump
		cmp    0x000004(%edi),%esi
		ja     _08062c_jump
		mov    0x000028(%ebx),%edi
		cmp    %edi,%esi
		jb     _08062c_jump
		jmp    _0805d6_jump

	_0805c7_jump:
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _08062c_jump
		lea    0x000020(%ebx),%edi
		cmp    0x000024(%ebx),%esi
		ja     _08062c_jump

	_0805d6_jump:
		sub    %edx,%edx
		mov    0x000018(%ebx),%eax
		mov    0x00001c(%ebx),%ecx
		inc    %ecx
		div    %ecx
		dec    %ecx
		cmp    %ecx,%eax
		jae    _08060b_jump
		mov    0x000018(%ebx),%edx
		sub    %ecx,%edx
		add    %eax,%eax
		cmp    %ecx,%edx
		ja     _0805f3_jump
		sub    %eax,%eax

	_0805f3_jump:
		mov    %esi,%edi
		add    (%esi),%edi

	_0805f7_jump:
		mov    (%edi),%edx
		test   $0x000001,%dl
		je     _08062c_jump
		cmp    $0xffffffff,%edx
		je     _08060b_jump
		and    $0x0000fe,%dl
		add    %edx,%edi
		dec    %eax
		jne    _0805f7_jump

	_08060b_jump:
		mov    0x00000c(%ebx),%edi
		cmp    %edi,%esi
		jae    _080615_jump
		mov    0x000028(%ebx),%edi

	_080615_jump:
		cmp    %edi,%esi
		jb     _08062c_jump
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _08062c_jump
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _08062c_jump
		mov    0x000008(%edi),%edi
		jmp    _080615_jump

	_08062c_jump:
		mov    0x000004(%edi),%edx
		mov    (%esi),%ecx
		xchg   %edi,%edx
		mov    %edi,%eax
		add    (%edi),%eax
		cmp    %esi,%eax
		jne    _08064b_jump
		add    (%edi),%ecx
		mov    %ecx,(%edi)
		cmp    0x00000c(%ebx),%esi
		jne    _080647_jump
		mov    %edi,0x00000c(%ebx)

	_080647_jump:
		mov    %edi,%esi
		jmp    _08065c_jump

	_08064b_jump:
		incl   0x00001c(%ebx)
		mov    %edx,0x000008(%esi)
		mov    %edi,0x000004(%esi)
		mov    %esi,0x000008(%edi)
		mov    %edx,%edi
		mov    %esi,0x000004(%edi)

	_08065c_jump:
		decl   0x000018(%ebx)
		cmp    0x00000c(%ebx),%esi
		jae    _08066c_jump
		cmp    0x000010(%ebx),%ecx
		jbe    _08066c_jump
		mov    %ecx,0x000010(%ebx)

	_08066c_jump:
		cmp    0x000014(%ebx),%ecx
		jbe    _080674_jump
		mov    %ecx,0x000014(%ebx)

	_080674_jump:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret    



_080679_func:
		push   %ebx
		push   %edx
		mov    _0bd268_data,%edx
		cmp    %edx,%eax
		jne    _08068e_jump
		mov    0x000008(%edx),%edx
		mov    %edx,_0bd268_data

	_08068e_jump:
		mov    _0bd264_data,%ebx
		cmp    %ebx,%eax
		jne    _0806a1_jump
		mov    0x000008(%ebx),%edx
		mov    %edx,_0bd264_data

	_0806a1_jump:
		mov    0x000004(%eax),%edx
		mov    0x000008(%eax),%eax
		test   %edx,%edx
		je     _0806ae_jump
		mov    %eax,0x000008(%edx)

	_0806ae_jump:
		test   %eax,%eax
		je     _0806b5_jump
		mov    %edx,0x000004(%eax)

	_0806b5_jump:
		pop    %edx
		pop    %ebx
		ret    



_0806b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0bd264_data,%edx

	_0806c3_jump:
		test   %edx,%edx
		je     _08098f_jump
		mov    0x000024(%edx),%eax
		mov    (%eax),%eax
		mov    (%edx),%ebx
		add    $0x00002c,%eax
		cmp    %ebx,%eax
		jne    _080711_jump
		lea    -0x000008(%edx),%ebx
		mov    %edx,%eax
		mov    0x000008(%edx),%ecx
		call   _080679_func
		mov    %ecx,%edx
		mov    0x000004(%ebx),%ecx
		test   %ecx,%ecx
		jne    _080701_jump
		mov    (%ebx),%eax
		shr    $0x000010,%eax
		mov    (%ebx),%di
		mov    %eax,%esi
		mov    $0x000005,%ah
		mov    $0x000002,%al
		int    $0x000031
		jmp    _0806c3_jump

	_080701_jump:
		mov    %ecx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x000049,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		pop    %es
		jmp    _0806c3_jump

	_080711_jump:
		mov    0x000008(%edx),%edx
		jmp    _0806c3_jump



_080800_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0bd264_data,%eax
		xor    %ebx,%ebx
		jmp    _080816_jump

	_08080d_jump:
		cmp    %eax,%edx
		jb     _08081a_jump
		mov    %eax,%ebx
		mov    0x000008(%eax),%eax

	_080816_jump:
		test   %eax,%eax
		jne    _08080d_jump

	_08081a_jump:
		mov    %ebx,0x000004(%edx)
		mov    %eax,0x000008(%edx)
		test   %ebx,%ebx
		je     _080829_jump
		mov    %edx,0x000008(%ebx)
		jmp    _08082f_jump

	_080829_jump:
		mov    %edx,_0bd264_data

	_08082f_jump:
		test   %eax,%eax
		je     _080836_jump
		mov    %edx,0x000004(%eax)

	_080836_jump:
		lea    0x000020(%edx),%ebx
		mov    (%edx),%eax
		add    $0x00002c,%edx
		movl   $0x000000,-0x00000c(%edx)
		movl   $0x000000,-0x00001c(%edx)
		movl   $0x000000,-0x000014(%edx)
		movl   $0x000000,-0x000010(%edx)
		mov    %ebx,-0x000008(%edx)
		mov    %ebx,-0x000004(%edx)
		sub    $0x00002c,%eax
		mov    %ebx,-0x000020(%edx)
		mov    %eax,(%edx)
		movl   $0xffffffff,(%edx,%eax,1)
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_080874_func:
		push   %ebx
		push   %edx
		mov    _0bd264_data,%edx
		test   %edx,%edx
		je     _0808bd_jump
		mov    0x000024(%edx),%edx
		mov    (%edx),%ebx
		add    %edx,%ebx
		mov    _0bd4ba_data,%ah
		add    $0x000004,%ebx
		cmp    $0x000002,%ah
		jb     _0808b0_jump
		cmp    $0x000008,%ah
		ja     _0808b0_jump
		cmpb   $0x000000,_0bd4bc_data
		jne    _0808b0_jump
		xor    %eax,%eax
		mov    %ds,%eax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,_0bd48c_data

	_0808b0_jump:
		cmp    _0bd48c_data,%ebx
		jne    _0808bd_jump
		mov    (%edx),%eax
		pop    %edx
		pop    %ebx
		ret    

	_0808bd_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret    



_0808c2_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		call   _0806b8_func
		mov    (%esp),%eax
		shr    $0x000010,%eax
		mov    (%esp),%ecx
		mov    %eax,%ebx
		mov    $0x000005,%ah
		mov    $0x000001,%al
		int    $0x000031
		sbb    %eax,%eax
		inc    %eax
		je     _0808f3_jump
		mov    %bx,%ax
		shl    $0x000010,%eax
		mov    %cx,%ax
		mov    %di,(%eax)
		mov    %si,0x000002(%eax)

	_0808f3_jump:
		test   %eax,%eax
		je     _080910_jump
		mov    (%esp),%ebx
		lea    0x000008(%eax),%edx
		sub    $0x000008,%ebx
		mov    %ebx,(%edx)
		movl   $0x000000,0x000004(%eax)
		mov    %edx,%eax
		jmp    _08098c_jump

	_080910_jump:
		testw  $0x00fff0,_0dee12_data
		je     _080925_jump
		movl   $0x0fffff,_0dee10_data

	_080925_jump:
		cmpl   $0x010000,(%esp)
		ja     _08098a_jump
		mov    _0dee10_data,%ebx
		shr    $0x000004,%ebx
		or     $0x000001,%bl
		mov    $0x000048,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jl     _08098a_jump
		mov    (%esp),%ebx
		shr    $0x000004,%ebx
		mov    $0x000048,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,%ebx
		mov    %edx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x000049,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		pop    %es
		test   %esi,%esi
		jl     _08098a_jump
		mov    $0x000000,%ah
		mov    $0x000006,%al
		int    $0x000031
		mov    %ecx,%eax
		shl    $0x000010,%eax
		mov    %dx,%ax
		add    $0x000008,%eax
		mov    (%esp),%edx
		mov    %esi,-0x000004(%eax)
		sub    $0x000008,%edx
		mov    %edx,(%eax)
		jmp    _08098c_jump

	_08098a_jump:
		xor    %eax,%eax

	_08098c_jump:
		add    $0x000004,%esp

	_08098f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_080995_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		cmpl   $0x000000,_0bf6a4_data
		jne    _0809a8_jump

	_0809a4_jump:
		xor    %eax,%eax
		jmp    _08098c_jump

	_0809a8_jump:
		cmpl   $0xfffffffe,_0bd48c_data
		je     _0809a4_jump
		mov    %esp,%eax
		call   _080b88_func
		test   %eax,%eax
		je     _08098c_jump
		cmpb   $0x000001,_0bd4ba_data
		jne    _0809dc_jump
		mov    (%esp),%eax
		call   _0808c2_func
		mov    %eax,%ebx
		mov    %eax,%edx
		test   %eax,%eax
		je     _0809f7_jump
		mov    (%eax),%eax
		mov    %eax,(%esp)
		jmp    _0809f7_jump

	_0809dc_jump:
		mov    (%esp),%ebx
		mov    $0x80004800,%eax
		int    $0x000021
		sbb    %ebx,%ebx
		not    %ebx
		and    %ebx,%eax
		mov    (%esp),%ecx
		sub    $0x000004,%ecx
		mov    %eax,%edx
		mov    %ecx,(%esp)

	_0809f7_jump:
		test   %edx,%edx
		je     _0809a4_jump
		mov    (%esp),%eax
		mov    (%esp),%esi
		sub    $0x000004,%eax
		cmp    %esi,%eax
		ja     _0809a4_jump
		mov    %eax,(%esp)
		cmp    $0x000038,%eax
		jb     _0809a4_jump
		mov    %eax,(%edx)
		mov    %edx,%eax
		call   _080800_func
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)
		or     $0x000001,%al
		mov    %eax,(%ebx)
		mov    0x000018(%edx),%edi
		movl   $0xffffffff,0x000014(%edx)
		inc    %edi
		lea    0x000004(%ebx),%eax
		mov    %edi,0x000018(%edx)
		call   _07a4d3_func
		mov    $0x000001,%eax
		jmp    _08098c_jump



_080a44_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		push   %eax
		cmpb   $0x000001,_0bd4ba_data
		jne    _080a5c_jump
		cmpb   $0x000000,_0bd4bb_data
		je     _080a65_jump

	_080a5c_jump:
		cmpb   $0x000009,_0bd4ba_data
		jne    _080a72_jump

	_080a65_jump:
		mov    (%esp),%eax
		call   _080995_func
		jmp    _080b7f_jump

	_080a72_jump:
		cmpl   $0x000000,_0bf6a4_data
		jne    _080a82_jump

	_080a7b_jump:
		xor    %eax,%eax
		jmp    _080b7f_jump

	_080a82_jump:
		cmpl   $0xfffffffe,_0bd48c_data
		je     _080a7b_jump
		mov    %esp,%eax
		call   _080b88_func
		test   %eax,%eax
		je     _080b7f_jump
		mov    _0bd4ba_data,%bl
		cmp    $0x000002,%bl
		jb     _080ac0_jump
		cmp    $0x000008,%bl
		ja     _080ac0_jump
		cmpb   $0x000000,_0bd4bc_data
		jne    _080ac0_jump
		xor    %eax,%eax
		mov    %ds,%eax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,_0bd48c_data

	_080ac0_jump:
		mov    (%esp),%edx
		mov    _0bd48c_data,%ecx
		add    %ecx,%edx
		cmp    %ecx,%edx
		jae    _080ad4_jump
		mov    $0xfffffffe,%edx

	_080ad4_jump:
		mov    %edx,%eax
		call   _082e12_func
		cmp    $0xffffffff,%eax
		je     _080a7b_jump
		mov    %eax,%ebx
		cmp    $0xfffffff8,%eax
		ja     _080a7b_jump
		cmp    %eax,%edx
		jbe    _080a7b_jump
		sub    %eax,%edx
		lea    -0x000004(%edx),%eax
		mov    %edx,(%esp)
		cmp    %edx,%eax
		ja     _080a7b_jump
		mov    _0bd264_data,%edx
		mov    %eax,(%esp)
		jmp    _080b14_jump

	_080b02_jump:
		mov    0x000008(%edx),%ebp
		test   %ebp,%ebp
		je     _080b18_jump
		cmp    %ebx,%edx
		ja     _080b11_jump
		cmp    %ebp,%ebx
		jb     _080b18_jump

	_080b11_jump:
		mov    0x000008(%edx),%edx

	_080b14_jump:
		test   %edx,%edx
		jne    _080b02_jump

	_080b18_jump:
		test   %edx,%edx
		je     _080b42_jump
		mov    (%edx),%eax
		lea    -0x000004(%ebx),%ecx
		add    %edx,%eax
		cmp    %eax,%ecx
		jne    _080b42_jump
		mov    (%esp),%esi
		add    $0x000004,%esi
		mov    %esi,(%esp)
		add    %esi,(%edx)
		mov    (%esp),%ebp
		lea    (%eax,%ebp,1),%ecx
		mov    %eax,%ebx
		movl   $0xffffffff,(%ecx)
		jmp    _080b61_jump

	_080b42_jump:
		cmpl   $0x000038,(%esp)
		jb     _080a7b_jump
		mov    (%esp),%eax
		mov    %eax,(%ebx)
		mov    %ebx,%eax
		mov    %ebx,%edx
		call   _080800_func
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)

	_080b61_jump:
		mov    (%esp),%eax
		or     $0x000001,%al
		mov    %eax,(%ebx)
		incl   0x000018(%edx)
		lea    0x000004(%ebx),%eax
		movl   $0xffffffff,0x000014(%edx)
		call   _07a4d3_func
		mov    $0x000001,%eax

	_080b7f_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_080b88_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    (%eax),%edx
		add    $0x000003,%edx
		and    $0x0000fc,%dl
		test   %edx,%edx
		jne    _080b9f_jump

	_080b99_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_080b9f_jump:
		cmpb   $0x000001,_0bd4ba_data
		jne    _080bb1_jump
		cmpb   $0x000000,_0bd4bb_data
		je     _080bba_jump

	_080bb1_jump:
		cmpb   $0x000009,_0bd4ba_data
		jne    _080bbf_jump

	_080bba_jump:
		add    $0x000008,%edx
		jmp    _080bc6_jump

	_080bbf_jump:
		call   _080874_func
		sub    %eax,%edx

	_080bc6_jump:
		mov    %edx,(%ebx)
		add    $0x00003c,%edx
		cmp    (%ebx),%edx
		jb     _080b99_jump
		mov    _0bf6a8_data,%esi
		cmp    %esi,%edx
		jae    _080bde_jump
		mov    %esi,%edx
		and    $0x0000fe,%dl

	_080bde_jump:
		mov    %edx,(%ebx)
		add    $0x000fff,%edx
		cmp    (%ebx),%edx
		jb     _080b99_jump
		and    $0x0000f0,%dh
		xor    %dl,%dl
		mov    %edx,(%ebx)
		test   %edx,%edx
		setne  %al
		and    $0x0000ff,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_080bff_func:
		xor    %eax,%eax
		ret    

	_080c04_jump:
		ret    



_080c05_func:
		push   %ds
		call   _0787b8_func
		cmpw   $0x000001,_0bf4e6_data
		je     _080c60_jump
		nop
		nop
		nop
		nop
		movw   $0x000001,_0bf4e6_data
		mov    %esp,_0be4d6_data
		data16 mov %ss,_0be4da_data
		lss    _0be4ce_data,%esp
		pusha  
		push   %es
		push   %fs
		push   %gs
		push   %ds
		pop    %es
		mov    %esp,_0bf4de_data
		lcall  *_0be4c4_data
		pop    %gs
		pop    %fs
		pop    %es
		popa   
		lss    _0be4d6_data,%esp
		movw   $0x000000,_0bf4e6_data

	_080c60_jump:
		pop    %ds
		push   %ax
		mov    $0x000020,%ax
		out    %al,$0x000020
		pop    %ax
		iret   



_080c81_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bf4e8_data
		je     _080cbc_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		mov    $0x000043,%dx
		mov    $0x000036,%al
		out    %al,(%dx)
		mov    $0x000040,%dx
		mov    0x000008(%ebp),%eax
		out    %al,(%dx)
		mov    %ah,%al
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_080cbc_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_080cc7_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		les    0x00000c(%ebp),%edi
		mov    %edi,_0be4c4_data
		data16 mov %es,_0be4c8_data
		data16 mov %ds,_0be4cc_data
		data16 mov %ds,_0be4d2_data
		cmpl   $0x000000,_0bf4e8_data
		je     _080d7e_jump
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		cmpl   $0x000000,_0bf4ec_data
		je     _080d3d_jump
		nop
		nop
		nop
		nop
		mov    $0x000204,%ax
		mov    $0x000008,%bl
		int    $0x000031
		mov    %edx,_0be4b8_data
		mov    %cx,_0be4bc_data
		mov    $0x000205,%ax
		mov    $0x000008,%bl
		mov    $_080c05_func,%edx
		mov    %cs,%cx
		int    $0x000031
		jmp    _080d64_jump

	_080d3d_jump:
		mov    $0x003508,%ax
		int    $0x000021
		mov    %ebx,_0be4b8_data
		data16 mov %es,_0be4bc_data
		push   %ds
		xor    %ax,%ax
		mov    %eax,%es
		mov    $0x002508,%ax
		mov    $_080c05_func,%edx
		push   %cs
		pop    %ds
		int    $0x000021
		pop    %ds

	_080d64_jump:
		mov    $0x000043,%dx
		mov    $0x000036,%al
		out    %al,(%dx)
		mov    $0x000040,%dx
		mov    0x000008(%ebp),%eax
		out    %al,(%dx)
		mov    %ah,%al
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_080d7e_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_080d89_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bf4e8_data
		je     _080daa_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)

	_080daa_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_080db5_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bf4e8_data
		je     _080dd6_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_080dd6_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_080de1_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bf4e8_data
		je     _080e52_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		cmpl   $0x000000,_0bf4ec_data
		je     _080e29_jump
		nop
		nop
		nop
		nop
		mov    $0x000205,%ax
		mov    $0x000008,%bl
		mov    _0be4bc_data,%cx
		mov    _0be4b8_data,%edx
		int    $0x000031
		jmp    _080e40_jump

	_080e29_jump:
		push   %ds
		mov    $0x002508,%ax
		mov    _0be4bc_data,%cx
		mov    _0be4b8_data,%edx
		mov    %ecx,%ds
		int    $0x000021
		pop    %ds

	_080e40_jump:
		mov    $0x000040,%dx
		mov    $0x000000,%ax
		out    %al,(%dx)
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_080e52_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_080e5d_func:
		cmpl   $0x000000,_0bf4e8_data
		je     _080eb5_jump
		nop
		nop
		nop
		nop
		movw   $0x000000,_0bf4e6_data
		mov    _0bf4de_data,%esp
		pop    %gs
		pop    %fs
		pop    %es
		popa   
		lss    _0be4d6_data,%esp
		mov    %eax,_0bf4e2_data
		pop    %eax
		mov    %ax,_0bf4de_data
		push   %eax
		push   %eax
		mov    _0be4b8_data,%eax
		mov    %eax,(%esp)
		mov    _0be4bc_data,%eax
		mov    %eax,0x000004(%esp)
		mov    _0bf4e2_data,%eax
		push   %eax
		mov    _0bf4de_data,%ax
		mov    %eax,%ds
		pop    %eax
		lret   

	_080eb5_jump:
		ret    

	_080eb6_jump:
		ret    



_080eb7_func:
		push   %ecx
		push   %eax

	_080eb9_jump:
		mov    (%edx),%cl
		mov    %cl,(%eax)
		cmp    $0x000000,%cl
		je     _080ed3_jump
		mov    0x000001(%edx),%cl
		add    $0x000002,%edx
		mov    %cl,0x000001(%eax)
		add    $0x000002,%eax
		cmp    $0x000000,%cl
		jne    _080eb9_jump

	_080ed3_jump:
		pop    %eax
		pop    %ecx
		ret    



_080ed6_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%esi
		push   %es
		push   %ds
		pop    %es
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_080ee9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _080f05_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _080ee9_jump

	_080f05_jump:
		pop    %edi
		pop    %es
		mov    %edi,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_080f10_jump:
		ret    



_080f11_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%cx
		mov    0x00000a(%ebp),%bx
		mov    0x00000c(%ebp),%di
		mov    0x00000e(%ebp),%si
		mov    $0x000600,%ax
		int    $0x000031
		mov    $0x000000,%eax
		jae    _080f43_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax

	_080f43_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_080f4e_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%cx
		mov    0x00000a(%ebp),%bx
		mov    0x00000c(%ebp),%di
		mov    0x00000e(%ebp),%si
		mov    $0x000601,%ax
		int    $0x000031
		mov    $0x000000,%eax
		jae    _080f80_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax

	_080f80_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_080f8b_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		push   %eax
		mov    %ax,-0x000002(%ebp)
		push   %eax
		mov    %ax,%bx
		mov    $0x000008,%ax
		xor    %cx,%cx
		mov    0x000008(%ebp),%edx
		int    $0x000031
		pop    %eax
		mov    $0x000501,%ax
		xor    %ebx,%ebx
		mov    0x000008(%ebp),%ecx
		add    $0x000050,%cx
		int    $0x000031
		push   %ebx
		mov    0x00000c(%ebp),%ebx
		mov    %si,(%ebx)
		mov    %di,0x000002(%ebx)
		pop    %ebx
		pop    %eax
		push   %eax
		mov    0x000010(%ebp),%esi
		mov    %cx,(%esi)
		mov    %bx,0x000002(%esi)
		mov    %cx,%dx
		mov    %bx,%cx
		mov    %ax,%bx
		mov    $0x000007,%ax
		int    $0x000031
		movzwl -0x000002(%ebp),%ecx
		lar    %ecx,%ecx
		shr    $0x000008,%ecx
		or     $0x004000,%cx
		mov    -0x000002(%ebp),%bx
		mov    $0x000009,%ax
		int    $0x000031
		pop    %eax
		xor    %edx,%edx
		mov    %ax,%dx
		xor    %eax,%eax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_081019_func:
		push   %eax
		mov    %ds,%ax
		mov    %eax,%gs
		pop    %eax
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000010(%ebp),%si
		mov    0x000012(%ebp),%di
		mov    $0x000502,%ax
		int    $0x000031
		mov    $0x000001,%ax
		mov    0x00000c(%ebp),%bx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08104f_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		push   %eax
		push   %eax
		push   %eax
		push   %eax
		mov    0x00000c(%ebp),%bx
		mov    $0x000006,%ax
		int    $0x000031
		pop    %ebx
		mov    $0x000007,%ax
		int    $0x000031
		xor    %ebx,%ebx
		mov    0x00000c(%ebp),%bx
		lsl    %bx,%edx
		mov    $0x000008,%ax
		pop    %ebx
		xor    %ecx,%ecx
		int    $0x000031
		mov    $0x000009,%ax
		pop    %ebx
		lar    %bx,%ecx
		shr    $0x000008,%ecx
		or     $0x004008,%cx
		int    $0x000031
		pop    %edx
		xor    %eax,%eax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0810ac_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%esi
		les    0x00000c(%ebp),%edi
		mov    $0x000020,%ecx

	_0810c3_jump:
		mov    %edi,(%esi)
		data16 mov %es,0x000004(%esi)
		add    $0x00006c,%edi
		add    $0x000006,%esi
		loop   _0810c3_jump
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0810dc_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		xor    %eax,%eax
		mov    $0x000100,%ax
		mov    0x000008(%ebp),%ebx
		add    $0x000100,%ebx
		int    $0x000031
		mov    0x00000c(%ebp),%esi
		shl    $0x000004,%eax
		mov    %eax,(%esi)
		mov    0x000010(%ebp),%esi
		mov    %dx,(%esi)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_081112_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%es
		mov    %eax,%fs
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		xor    %eax,%eax
		mov    $0x000101,%ax
		mov    0x000008(%ebp),%edx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_081172_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000008,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		push   %ds
		push   %es
		les    0x000018(%ebp),%edi
		lds    0x000010(%ebp),%esi
		mov    %edx,%esi
		mov    $0x00006a,%ecx
		cld    
		rep movsb %ds:(%esi),%es:(%edi)
		les    0x000018(%ebp),%edi
		data16 mov %ds,%es:0x000044(%edi)
		data16 mov %ds,%es:0x00004c(%edi)
		data16 mov %ds,%es:0x000054(%edi)
		data16 mov %ds,%es:0x00005c(%edi)
		pop    %es
		pop    %ds
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0811c0_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000005,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0811e3_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_081206_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		mov    %ax,_0bf5e4_data
		mov    %ch,%al
		cbtw   
		mov    %ax,_0bf5ec_data
		mov    %cl,%al
		cbtw   
		mov    %ax,_0bf5e8_data
		mov    %dx,_0bf5f0_data
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08124a_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		push   %es
		mov    $0x000002,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		push   %ds
		les    0x000018(%ebp),%edi
		lds    0x000010(%ebp),%esi
		mov    %edx,%esi
		mov    $0x00006a,%ecx
		cld    
		rep movsb %ds:(%esi),%es:(%edi)
		les    0x000018(%ebp),%edi
		data16 mov %ds,%es:0x000044(%edi)
		data16 mov %ds,%es:0x00004c(%edi)
		data16 mov %ds,%es:0x000054(%edi)
		data16 mov %ds,%es:0x00005c(%edi)
		pop    %ds
		pop    %es
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0812c8_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0812eb_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x00000a,%eax
		mov    0x000020(%ebp),%ecx
		les    0x000018(%ebp),%edi
		mov    0x000024(%ebp),%edx
		mov    0x000028(%ebp),%ebx
		push   %ds
		pop    %gs
		lcall  *0x000008(%ebp)
		cli    
		mov    0x00002c(%ebp),%ebx
		mov    %edi,(%ebx)
		mov    %ecx,0x000008(%ebx)
		mov    %esi,0x000010(%ebx)
		mov    0x00000c(%ebp),%ax
		mov    %ax,0x000004(%ebx)
		mov    0x000014(%ebp),%ax
		mov    %ax,0x00000c(%ebx)
		mov    %ax,0x000014(%ebx)
		sti    
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08133e_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000000,%eax
		mov    0x000018(%ebp),%bx
		mov    0x00001c(%ebp),%cx
		mov    0x000020(%ebp),%dx
		mov    %dl,%ch
		mov    0x00002c(%ebp),%si
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_081373_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000004,%eax
		mov    0x00001c(%ebp),%ecx
		mov    0x000018(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08139c_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000002,%eax
		mov    0x000018(%ebp),%ebx
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0813c2_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000003,%eax
		mov    $0x000008,%bx
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_081413_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		cmp    $0x000003,%al
		jne    _08143d_jump
		nop
		nop
		nop
		nop
		mov    $0x000081,%ah
		mov    $0x00000b,%al
		mov    0x000008(%ebp),%ebx
		xor    %dx,%dx
		int    $0x00004b
		mov    $0x000000,%ax

	_08143d_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_081448_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		cmp    $0x000003,%al
		jne    _081472_jump
		nop
		nop
		nop
		nop
		mov    $0x000081,%ah
		mov    $0x00000c,%al
		mov    0x000008(%ebp),%ebx
		xor    %dx,%dx
		int    $0x00004b
		mov    $0x000000,%ax

	_081472_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08147d_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000004,%eax
		lcall  *0x000008(%ebp)
		mov    %esi,_0bf548_data
		mov    %edi,_0bf550_data
		mov    0x000014(%ebp),%ax
		mov    %ax,_0bf54c_data
		mov    %ax,_0bf554_data
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0814bc_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		push   %ds
		push   %ds
		pop    %es
		mov    $_0bf4f8_data,%edi
		mov    0x000008(%ebp),%ebx
		lds    _0bf548_data,%esi
		mov    (%esi,%ebx,4),%esi
		cmp    $0xffffffff,%esi
		jne    _0814ed_jump
		nop
		nop
		nop
		nop
		xor    %eax,%eax
		pop    %ds
		jmp    _0814fb_jump

	_0814ed_jump:
		mov    $0x000050,%ecx
		cld    
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %ds
		mov    $_0bf4f8_data,%eax

	_0814fb_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_081506_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		les    _0bf550_data,%esi
		mov    0x000008(%ebp),%eax
		mov    %eax,%ebx
		shl    %eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		mov    0x00000c(%ebp),%eax
		mov    %eax,%es:(%esi,%ebx,1)
		data16 mov %ds,%es:0x000004(%esi,%ebx,1)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08153c_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		push   %esi
		push   %es
		mov    $0x00000b,%ax
		lfs    0x000020(%ebp),%edi
		lcall  *0x000018(%ebp)
		mov    %eax,%esi
		mov    %edx,%es
		mov    $0x00000c,%ax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %esi
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08159c_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0815b9_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000100,%ax
		mov    0x000008(%ebp),%ebx
		int    $0x000031
		jae    _0815de_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax
		jmp    _0815ef_jump

	_0815de_jump:
		mov    0x00000c(%ebp),%esi
		mov    %dx,(%esi)
		mov    0x000010(%ebp),%esi
		mov    %ax,(%esi)
		mov    $0x000000,%eax

	_0815ef_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0815fa_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%fs
		mov    %eax,%es
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000101,%ax
		mov    0x000008(%ebp),%dx
		int    $0x000031
		mov    $0x000000,%ax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_081628_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $_0bf594_data,%esi
		movl   $0x008107,0x00001c(%esi)
		movl   $0x000000,0x000014(%esi)
		mov    0x000008(%ebp),%ax
		mov    %ax,0x000022(%esi)
		movl   $0x000000,(%esi)
		mov    $0x000300,%ax
		mov    $0x00004b,%bl
		mov    $0x000000,%bh
		mov    $0x000000,%cx
		mov    $_0bf594_data,%edi
		push   %ds
		pop    %es
		int    $0x000031
		mov    $_0bf594_data,%esi
		andw   $0x000001,0x000020(%esi)
		jne    _081684_jump
		nop
		nop
		nop
		nop
		mov    $0x000000,%eax
		jmp    _081689_jump

	_081684_jump:
		mov    $0x000001,%eax

	_081689_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_081694_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $_0bf594_data,%esi
		movl   $0x008108,0x00001c(%esi)
		movl   $0x000000,0x000014(%esi)
		mov    0x000008(%ebp),%ax
		mov    %ax,0x000022(%esi)
		movl   $0x000000,(%esi)
		mov    $0x000300,%ax
		mov    $0x00004b,%bl
		mov    $0x000000,%bh
		mov    $0x000000,%cx
		mov    $_0bf594_data,%edi
		push   %ds
		pop    %es
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0816e1_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000800,%ax
		mov    0x00000a(%ebp),%bx
		mov    0x000008(%ebp),%cx
		mov    $0x000000,%si
		mov    $0x004000,%di
		int    $0x000031
		mov    %cx,-0x000008(%ebp)
		mov    %bx,-0x000006(%ebp)
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		mov    %ax,-0x000004(%ebp)
		mov    $0x000007,%ax
		mov    -0x000004(%ebp),%bx
		mov    -0x000006(%ebp),%cx
		mov    -0x000008(%ebp),%dx
		int    $0x000031
		mov    $0x000008,%ax
		mov    -0x000004(%ebp),%bx
		mov    $0x00ffff,%cx
		mov    $0x00ffff,%dx
		int    $0x000031
		mov    $0x000009,%ax
		xor    %ecx,%ecx
		mov    %ds,%cx
		lar    %ecx,%ecx
		shr    $0x000008,%ecx
		mov    -0x000004(%ebp),%bx
		int    $0x000031
		mov    -0x000004(%ebp),%ax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_081761_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%fs
		mov    %eax,%es
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%ax
		mov    0x000008(%ebp),%bx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    

	_081793_jump:
		ret    



_081794_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    _0bf6ac_data,%esi
		test   %esi,%esi
		je     _0817e5_jump
		test   %eax,%eax
		je     _0817e5_jump
		mov    %eax,%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    %ecx,%edi
		jmp    _0817df_jump

	_0817c0_jump:
		mov    %ecx,%eax
		mov    %ebp,%edx
		mov    %edi,%ebx
		call   _082ed4_func
		test   %eax,%eax
		jne    _0817dc_jump
		cmpb   $0x00003d,(%ecx,%edi,1)
		jne    _0817dc_jump
		lea    0x000001(%edi),%eax
		add    %ecx,%eax
		jmp    _0817e7_jump

	_0817dc_jump:
		add    $0x000004,%esi

	_0817df_jump:
		mov    (%esi),%ecx
		test   %ecx,%ecx
		jne    _0817c0_jump

	_0817e5_jump:
		xor    %eax,%eax

	_0817e7_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0817ee_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08182d_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081842_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081857_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %cx,-0x00000c(%ebp)
		mov    %ebx,-0x000010(%ebp)
		imul   $0x000006,-0x000008(%ebp),%eax
		cmpl   $0x000000,_0bd5c4_data(%eax)
		jne    _08188d_jump
		cmpw   $0x000000,_0bd5c8_data(%eax)
		jne    _08188d_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _0818e0_jump

	_08188d_jump:
		cmpl   $0x000000,-0x000010(%ebp)
		jne    _08189a_jump
		cmpw   $0x000000,-0x00000c(%ebp)
		je     _0818d0_jump

	_08189a_jump:
		movzwl -0x00000c(%ebp),%eax
		push   %eax
		pushl  -0x000010(%ebp)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd5c8_data(%eax),%edx
		push   %edx
		pushl  _0bd5c4_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd5e6_data(%eax),%edx
		push   %edx
		pushl  _0bd5e2_data(%eax)
		call   _081172_func
		add    $0x000018,%esp
		jmp    _0818d9_jump

	_0818d0_jump:
		movl   $0x000002,-0x000004(%ebp)
		jmp    _0818e0_jump

	_0818d9_jump:
		movl   $0x000000,-0x000004(%ebp)

	_0818e0_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_0818e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0818fd_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081912_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000048,%esp
		mov    %eax,-0x00002c(%ebp)
		mov    %edx,-0x000030(%ebp)
		mov    %cx,-0x000044(%ebp)
		mov    %ebx,-0x000048(%ebp)
		movl   $0x00002c,-0x00000c(%ebp)
		movl   $0x000030,-0x000010(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		cmpl   $0x000005,-0x000030(%ebp)
		jbe    _081958_jump
		movl   $0x00000a,-0x000028(%ebp)
		jmp    _081b2c_jump

	_081958_jump:
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bd68c_data(%eax)
		je     _081973_jump
		movl   $0x000009,-0x000028(%ebp)
		jmp    _081b2c_jump

	_081973_jump:
		cmpl   $0x00e000,-0x00002c(%ebp)
		jb     _081985_jump
		cmpl   $0x00e200,-0x00002c(%ebp)
		jbe    _081991_jump

	_081985_jump:
		movl   $0x000006,-0x000028(%ebp)
		jmp    _081b2c_jump

	_081991_jump:
		mov    $_0be0c4_data,%edx
		mov    $_0be1c3_data,%eax
		call   _080eb7_func
		mov    $_0c0e2c_data,%edx
		mov    $_0be1c3_data,%eax
		call   _080ed6_func
		push   $0x000200
		mov    $_0be1c3_data,%eax
		push   %eax
		call   _0796d1_func
		add    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		cmpl   $0xffffffff,-0x000004(%ebp)
		jne    _0819d7_jump
		movl   $0x00000f,-0x000028(%ebp)
		jmp    _081b2c_jump

	_0819d7_jump:
		mov    -0x00000c(%ebp),%ebx
		mov    $_0be450_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _0799d4_func

	_0819e7_jump:
		mov    -0x000018(%ebp),%eax
		cmp    _0be470_data,%eax
		ja     _0819f8_jump
		cmpl   $0x000000,-0x000014(%ebp)
		je     _0819fd_jump

	_0819f8_jump:
		jmp    _081afb_jump

	_0819fd_jump:
		mov    -0x000010(%ebp),%ebx
		mov    $_0be47c_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _0799d4_func
		mov    _0be4a0_data,%eax
		mov    %eax,-0x000008(%ebp)
		mov    _0be4a4_data,%eax
		cmp    -0x00002c(%ebp),%eax
		jne    _081a28_jump
		testb  $0x000080,_0be4a9_data
		jne    _081a2d_jump

	_081a28_jump:
		jmp    _081ae3_jump

	_081a2d_jump:
		movl   $0x000001,-0x000014(%ebp)
		lea    -0x000024(%ebp),%eax
		push   %eax
		pushl  0x000018(%ebp)
		pushl  -0x000008(%ebp)
		call   _080f8b_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,-0x00003c(%ebp)
		mov    %ecx,-0x000040(%ebp)
		movzwl -0x00003c(%ebp),%eax
		push   %eax
		pushl  -0x000040(%ebp)
		call   _08104f_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,-0x000034(%ebp)
		mov    %ecx,-0x000038(%ebp)
		pushl  -0x000008(%ebp)
		pushl  -0x000024(%ebp)
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _081a8a_jump
		movl   $0x000005,-0x000028(%ebp)
		jmp    _081b2c_jump

	_081a8a_jump:
		lea    -0x000020(%ebp),%eax
		push   %eax
		mov    -0x000008(%ebp),%edx
		mov    -0x00003c(%ebp),%ebx
		mov    -0x000040(%ebp),%eax
		mov    -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _079920_func
		mov    -0x000034(%ebp),%eax
		lgs    -0x000048(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000038(%ebp),%eax
		lgs    -0x000048(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000010(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000040(%ebp),%eax
		lgs    0x000010(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000008(%ebp),%al
		mov    0x00001c(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    0x000020(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _081af3_jump

	_081ae3_jump:
		mov    $0x000001,%ebx
		mov    -0x000008(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _079956_func

	_081af3_jump:
		incl   -0x000018(%ebp)
		jmp    _0819e7_jump

	_081afb_jump:
		mov    -0x000004(%ebp),%eax
		call   _079951_func
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be4a4_data,%edx
		mov    %edx,_0bd736_data(%eax)
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bd68c_data(%eax)
		movl   $0x000000,-0x000028(%ebp)

	_081b2c_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		ret    $0x000014



_081b35_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		cmpl   $0x000005,-0x000008(%ebp)
		jbe    _081b58_jump
		movl   $0x00000a,-0x000004(%ebp)
		jmp    _081c03_jump

	_081b58_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bd68c_data(%eax)
		jne    _081b73_jump
		movl   $0x00000a,-0x000004(%ebp)
		jmp    _081c03_jump

	_081b73_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bd68c_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd600_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd59c_data(%eax)
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _081bb0_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _081c03_jump

	_081bb0_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd664_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd5c8_data(%eax),%edx
		push   %edx
		pushl  _0bd5c4_data(%eax)
		call   _081019_func
		add    $0x00000c,%esp
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd664_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd5e6_data(%eax),%edx
		push   %edx
		pushl  _0bd5e2_data(%eax)
		call   _081019_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_081c03_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081c0d_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000044,%esp
		mov    %eax,-0x00002c(%ebp)
		mov    %cx,-0x000040(%ebp)
		mov    %ebx,-0x000044(%ebp)
		movl   $0x00002c,-0x00000c(%ebp)
		movl   $0x000030,-0x000010(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		cmpl   $0x001000,-0x00002c(%ebp)
		jb     _081c51_jump
		cmpl   $0x001023,-0x00002c(%ebp)
		jbe    _081c5d_jump

	_081c51_jump:
		movl   $0x000006,-0x000028(%ebp)
		jmp    _081ddd_jump

	_081c5d_jump:
		mov    $_0be0c4_data,%edx
		mov    $_0be1c3_data,%eax
		call   _080eb7_func
		mov    $_0c0e2c_data,%edx
		mov    $_0be1c3_data,%eax
		call   _080ed6_func
		push   $0x000200
		mov    $_0be1c3_data,%eax
		push   %eax
		call   _0796d1_func
		add    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		cmpl   $0xffffffff,-0x000004(%ebp)
		jne    _081ca3_jump
		movl   $0x00000f,-0x000028(%ebp)
		jmp    _081ddd_jump

	_081ca3_jump:
		mov    -0x00000c(%ebp),%ebx
		mov    $_0be450_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _0799d4_func

	_081cb3_jump:
		mov    -0x000018(%ebp),%eax
		cmp    _0be470_data,%eax
		ja     _081cc4_jump
		cmpl   $0x000000,-0x000014(%ebp)
		je     _081cc9_jump

	_081cc4_jump:
		jmp    _081dce_jump

	_081cc9_jump:
		mov    -0x000010(%ebp),%ebx
		mov    $_0be47c_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _0799d4_func
		mov    _0be4a0_data,%eax
		mov    %eax,-0x000008(%ebp)
		mov    _0be4a4_data,%eax
		cmp    -0x00002c(%ebp),%eax
		jne    _081cf4_jump
		testb  $0x000040,_0be4a9_data
		jne    _081cf9_jump

	_081cf4_jump:
		jmp    _081db6_jump

	_081cf9_jump:
		movl   $0x000001,-0x000014(%ebp)
		addl   $0x004000,-0x000008(%ebp)
		lea    -0x000024(%ebp),%eax
		push   %eax
		pushl  0x00001c(%ebp)
		pushl  -0x000008(%ebp)
		call   _080f8b_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,-0x000038(%ebp)
		mov    %ecx,-0x00003c(%ebp)
		movzwl -0x000038(%ebp),%eax
		push   %eax
		pushl  -0x00003c(%ebp)
		call   _08104f_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,-0x000030(%ebp)
		mov    %ecx,-0x000034(%ebp)
		pushl  -0x000008(%ebp)
		pushl  -0x000024(%ebp)
		call   _080f11_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _081d5d_jump
		movl   $0x000005,-0x000028(%ebp)
		jmp    _081ddd_jump

	_081d5d_jump:
		lea    -0x000020(%ebp),%eax
		push   %eax
		mov    -0x000008(%ebp),%edx
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%eax
		mov    -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _079920_func
		mov    -0x000030(%ebp),%eax
		lgs    -0x000044(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000034(%ebp),%eax
		lgs    -0x000044(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000038(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000008(%ebp),%al
		mov    0x000020(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    0x000024(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _081dc6_jump

	_081db6_jump:
		mov    $0x000001,%ebx
		mov    -0x000008(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _079956_func

	_081dc6_jump:
		incl   -0x000018(%ebp)
		jmp    _081cb3_jump

	_081dce_jump:
		mov    -0x000004(%ebp),%eax
		call   _079951_func
		movl   $0x000000,-0x000028(%ebp)

	_081ddd_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000014



_081de7_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd614_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd5b0_data(%eax)
		call   _080f4e_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _081e25_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _081e78_jump

	_081e25_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd678_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd62c_data(%eax),%edx
		push   %edx
		pushl  _0bd628_data(%eax)
		call   _081019_func
		add    $0x00000c,%esp
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd678_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd64a_data(%eax),%edx
		push   %edx
		pushl  _0bd646_data(%eax)
		call   _081019_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_081e78_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081ea9_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081ebe_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081f35_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081f4a_func:
		push   %esi
		push   %edi
		push   %ds
		push   %es
		push   %eax
		mov    %dx,%es
		mov    %cx,%ds
		mov    %ebx,%esi
		mov    %eax,%edi

	_081f59_jump:
		mov    (%esi),%al
		mov    %al,%es:(%edi)
		cmp    $0x000000,%al
		je     _081f77_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,%es:0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _081f59_jump

	_081f77_jump:
		pop    %eax
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		ret    



_081f7d_func:
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %ebx,%esi
		mov    0x00000c(%esp),%eax
		push   %ds
		push   %es
		push   %edi
		xchg   %eax,%ecx
		mov    %eax,%ds
		mov    %edx,%es
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %eax
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		ret    $0x000004



_081fa5_func:
		fsave  (%eax)
		fwait
		ret    



_081faa_func:
		frstor (%eax)
		fwait
		ret    



_081fae_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0bd271_data
		je     _081fcf_jump
		mov    $_081fa5_func,%edx
		mov    $_081faa_func,%ebx
		mov    %edx,_0bf6b4_data
		mov    %ebx,_0bf6b8_data

	_081fcf_jump:
		xor    %eax,%eax
		mov    _0bf6bc_data,%ax
		call   _082f2c_func
		pop    %edx
		pop    %ebx
		ret    



_081fe9_func:
		push   %edx
		mov    _0bd270_data,%ah
		test   %ah,%ah
		jne    _082027_jump
		mov    %ah,_0bd271_data
		sub    %eax,%eax
		push   %eax
		fninit 
		fnstcw (%esp)
		pop    %eax
		mov    %ah,%al
		xor    %dl,%dl
		cmp    $0x000003,%al
		jne    _082012_jump
		call   _081fae_func
		mov    %al,%dl

	_082012_jump:
		cmpb   $0x000000,_0bd4b8_data
		jne    _082027_jump
		mov    %dl,_0bd270_data
		mov    %dl,_0bd271_data

	_082027_jump:
		pop    %edx
		ret    



_082029_func:
		mov    %esp,%eax
		sub    _0bd49c_data,%eax
		ret    



_082032_func:
		movl   $0x008000,_0bf6a8_data
		ret    



_08203d_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		movl   $0x000000,0x00000c(%ebx)
		mov    %ds,0x000008(%esp)
		mov    0x000015(%edi),%cl
		xor    %ebx,%ebx
		cmp    $0x000047,%cl
		jb     _08207a_jump
		jbe    _082087_jump
		cmp    $0x000066,%cl
		jb     _082070_jump
		jbe    _08209c_jump
		cmp    $0x000067,%cl
		je     _082087_jump
		jmp    _08210e_jump

	_082070_jump:
		cmp    $0x000065,%cl
		je     _082097_jump
		jmp    _08210e_jump

	_08207a_jump:
		cmp    $0x000045,%cl
		jb     _08210e_jump
		jbe    _082097_jump
		jmp    _08209c_jump

	_082087_jump:
		cmpl   $0x000000,0x000008(%edi)
		jne    _082094_jump
		movl   $0x000001,0x000008(%edi)

	_082094_jump:
		sub    $0x000002,%cl

	_082097_jump:
		mov    $0x000001,%ebx

	_08209c_jump:
		mov    (%edx),%ebp
		add    $0x000008,%ebp
		mov    %ebp,(%edx)
		mov    -0x000008(%ebp),%eax
		mov    %eax,(%esp)
		mov    -0x000004(%ebp),%eax
		mov    %eax,0x000004(%esp)
		cmpl   $0xffffffff,0x000008(%edi)
		jne    _0820bd_jump
		movl   $0x000006,0x000008(%edi)

	_0820bd_jump:
		mov    0x000015(%edi),%al
		and    $0x00005f,%al
		and    $0x0000ff,%eax
		push   %eax
		xor    %eax,%eax
		mov    %cl,%al
		push   %eax
		push   $0x000003
		push   %ebx
		lea    0x000010(%esp),%edx
		xor    %ecx,%ecx
		push   $0x000027
		mov    %esi,%eax
		mov    0x000008(%edi),%ebx
		call   _0830ce_func
		mov    (%esi),%ah
		cmp    $0x00002a,%ah
		jne    _0820ec_jump
		mov    %ah,0x000016(%edi)

	_0820ec_jump:
		movb   $0x000000,0x000027(%esi)

	_0820f0_jump:
		cmpb   $0x000020,(%esi)
		jne    _0820f8_jump
		inc    %esi
		jmp    _0820f0_jump

	_0820f8_jump:
		mov    %esi,%eax
		mov    %edi,%edx
		call   _08211a_func
		mov    %ds,0x000008(%esp)
		mov    %esi,%eax
		movl   $0xffffffff,0x000008(%edi)

	_08210e_jump:
		mov    0x000008(%esp),%edx
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_08211a_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		testb  $0x000001,0x000014(%edx)
		jne    _08215f_jump

	_082124_jump:
		mov    (%eax),%dh
		test   %dh,%dh
		je     _082137_jump
		cmp    $0x000065,%dh
		je     _082137_jump
		cmp    $0x000045,%dh
		je     _082137_jump
		inc    %eax
		jmp    _082124_jump

	_082137_jump:
		mov    %eax,%edx
		mov    0x000015(%ebx),%cl
		dec    %eax
		cmp    $0x000047,%cl
		je     _082147_jump
		cmp    $0x000067,%cl
		jne    _08214f_jump

	_082147_jump:
		cmpb   $0x000030,(%eax)
		jne    _08214f_jump
		dec    %eax
		jmp    _082147_jump

	_08214f_jump:
		cmpb   $0x00002e,(%eax)
		je     _082155_jump
		inc    %eax

	_082155_jump:
		mov    (%edx),%bl
		inc    %edx
		mov    %bl,(%eax)
		inc    %eax
		test   %bl,%bl
		jne    _082155_jump

	_08215f_jump:
		pop    %ecx
		pop    %ebx
		ret    



_082162_func:
		push   %ebx
		mov    %edx,%ebx
		xor    %edx,%edx
		call   _0832b0_func
		mov    %eax,(%ebx)
		mov    %edx,0x000004(%ebx)
		pop    %ebx
		ret    



_082173_func:
		push   %edx
		mov    $_0c0e38_data,%eax
		mov    $0x000001,%edx
		call   _07f3b9_func
		pop    %edx
		ret    



_082185_func:
		cmp    $0x000061,%eax
		jl     _082192_jump
		cmp    $0x00007a,%eax
		jg     _082192_jump
		sub    $0x000020,%eax

	_082192_jump:
		ret    



_082199_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $0x000002,%eax
		call   _08346f_func
		mov    %eax,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		mov    _0c1054_data(,%eax,4),%eax
		call   _08348e_func
		mov    $_0c0ee1_data,%eax
		mov    %ebx,%edx
		call   _08348e_func
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _08348e_func
		mov    $0x00000a,%eax
		mov    %ebx,%edx
		call   _079430_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0821e1_func:
		push   %ebx
		mov    %eax,%ebx
		call   *_0bf600_data
		test   %eax,%eax
		jne    _082209_jump
		mov    0x000004(%ebx),%edx
		mov    (%ebx),%eax
		call   _082199_func
		cmpl   $0x000001,(%ebx)
		jne    _082204_jump
		call   _07f1c4_func
		jmp    _082209_jump

	_082204_jump:
		call   _07f1d5_func

	_082209_jump:
		mov    0x000018(%ebx),%eax
		mov    0x00001c(%ebx),%edx
		pop    %ebx
		ret    



_082211_func:
		mov    $_0dede8_data,%eax
		ret    



_082217_func:
		mov    $_0dede4_data,%eax
		ret    



_08221d_func:
		cmpb   $0x000000,_0bf604_data
		je     _082240_jump
		and    $0x00ffff,%edx
		push   %edx
		push   %eax
		int3   
		jmp    _082237_jump

	_082237_jump:
		mov    $0x000001,%eax
		add    $0x000008,%esp
		ret    

	_082240_jump:
		xor    %eax,%eax
		ret    



_082243_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,%ebp
		call   _07f787_func
		test   $0x000080,%al
		je     _082287_jump
		mov    $0x000002,%al
		mov    %esi,%ebx
		xor    %edx,%edx
		mov    $0x000042,%ah
		mov    %edx,%ecx
		shr    $0x000010,%ecx
		int    $0x000021
		rcl    %dx
		ror    %dx
		shl    $0x000010,%edx
		mov    %ax,%dx
		mov    %edx,%edi
		test   %edx,%edx
		jge    _082287_jump
		xor    %eax,%eax
		mov    %dx,%ax

	_082280_jump:
		call   _07e16c_func
		jmp    _0822b7_jump

	_082287_jump:
		mov    (%esp),%edx
		mov    %esi,%ebx
		mov    %ebp,%ecx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,%edi
		mov    %eax,%edx
		test   %eax,%eax
		jge    _0822a7_jump
		xor    %eax,%eax
		mov    %si,%ax
		jmp    _082280_jump

	_0822a7_jump:
		cmp    %ebp,%eax
		je     _0822b5_jump
		mov    $0x00000c,%eax
		call   _07f1c9_func

	_0822b5_jump:
		mov    %edx,%eax

	_0822b7_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0822ca_func:
		push   %ebp
		push   %esi
		push   %edi
		push   %ecx
		push   %ebx
		mov    %edx,%esi
		mov    %eax,%ebp
		mov    0x000000(%ebp),%eax
		mov    0x000004(%ebp),%edx
		xchg   %ebp,%esi
		mov    %eax,0x000000(%ebp)
		mov    %edx,0x000004(%ebp)
		mov    %edx,%ecx
		and    $0x7ff00000,%ecx
		je     _0822f5_jump
		cmp    $0x43300000,%ecx
		jb     _082303_jump
		xchg   %esi,%ebp

	_0822f5_jump:
		sub    %eax,%eax
		mov    %eax,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    

	_082303_jump:
		mov    %ecx,%edi
		shr    $0x000014,%ecx
		sub    $0x0003ff,%cx
		jb     _0822f5_jump
		push   %edx
		sub    %eax,%eax
		mov    $0xfff00000,%edx
		cmp    $0x000014,%cl
		jbe    _082328_jump
		sar    $0x000015,%edx
		rcr    %eax
		sub    $0x000015,%cl
		sar    %cl,%eax
		jmp    _08232a_jump

	_082328_jump:
		sar    %cl,%edx

	_08232a_jump:
		and    %edx,0x000004(%ebp)
		and    %eax,0x000000(%ebp)
		not    %edx
		not    %eax
		mov    %esi,%ebp
		and    0x000004(%ebp),%edx
		and    0x000000(%ebp),%eax
		call   _0823a5_func
		pop    %esi
		or     %edx,%edx
		je     _08234e_jump
		and    $0x80000000,%esi
		or     %esi,%edx

	_08234e_jump:
		mov    %edx,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08235a_func:
		push   %ebp
		push   %esi
		push   %edi
		push   %ecx
		push   %ebx
		push   %edx
		mov    %eax,%esi
		sub    %edx,%edx
		sub    %ecx,%ecx
		sub    %eax,%eax

	_082368_jump:
		mov    (%esi),%al
		cmp    $0x000000,%al
		je     _08238c_jump
		mov    %edx,%edi
		mov    %ecx,%ebx
		add    %ecx,%ecx
		adc    %edx,%edx
		add    %ecx,%ecx
		adc    %edx,%edx
		add    %ebx,%ecx
		adc    %edi,%edx
		add    %ecx,%ecx
		adc    %edx,%edx
		and    $0x00000f,%al
		add    %eax,%ecx
		adc    $0x000000,%edx
		inc    %esi
		jmp    _082368_jump

	_08238c_jump:
		mov    %ecx,%eax
		mov    $0x43300000,%edi
		call   _0823a5_func
		pop    %ebp
		mov    %edx,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0823a5_func:
		sub    %esi,%esi
		or     %eax,%esi
		or     %edx,%esi
		je     _0823f5_jump
		test   $0xfff00000,%edx
		jne    _0823c9_jump

	_0823b5_jump:
		sub    $0x100000,%edi
		add    %eax,%eax
		adc    %edx,%edx
		test   $0xfff00000,%edx
		je     _0823b5_jump
		jmp    _0823ed_jump

	_0823c9_jump:
		test   $0xffe00000,%edx
		je     _0823ed_jump

	_0823d1_jump:
		add    $0x100000,%edi
		shr    %edx
		rcr    %eax
		rcr    %esi
		test   $0xffe00000,%edx
		jne    _0823d1_jump
		adc    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx

	_0823ed_jump:
		and    $0x0fffff,%edx
		or     %edi,%edx

	_0823f5_jump:
		ret    



_0823f6_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0bd2b5_data,%ah
		and    $0x0000f8,%ah
		mov    %ah,%dl
		mov    %ah,_0bd2b5_data
		or     $0x000004,%dl
		mov    $_0bd274_data,%ecx
		mov    %dl,_0bd2b5_data
		jmp    _08245d_jump

	_08241a_jump:
		mov    $0x000008,%eax
		call   _07a3d8_func
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _082449_jump
		mov    $0x000008,%eax
		call   _07a3d8_func
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _082449_jump
		mov    $_0c0ee8_data,%eax
		mov    $0x000001,%edx
		call   _07f3b9_func

	_082449_jump:
		mov    _0dedd4_data,%edx
		mov    %ecx,0x000004(%ebx)
		mov    %ebx,_0dedd4_data
		add    $0x00001a,%ecx
		mov    %edx,(%ebx)

	_08245d_jump:
		mov    0x00000c(%ecx),%edx
		test   %edx,%edx
		jne    _08241a_jump
		mov    %edx,_0dedcc_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08246e_func:
		xor    %eax,%eax
		call   _08247f_func
		jmp    _07fac1_jump



_08247f_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    $_0bd274_data,%esi
		add    %eax,%eax
		xor    %ebx,%ebx
		add    %eax,%esi
		mov    _0dedd4_data,%eax
		jmp    _0824c6_jump

	_0824a1_jump:
		mov    (%eax),%ecx
		mov    0x000004(%eax),%eax
		mov    $0x000001,%edx
		testb  $0x000040,0x00000d(%eax)
		jne    _0824be_jump
		cmp    %esi,%eax
		jb     _0824c4_jump
		cmp    $_0bd2f6_data,%eax
		jae    _0824be_jump
		xor    %edx,%edx

	_0824be_jump:
		call   _079fa8_func
		inc    %ebx

	_0824c4_jump:
		mov    %ecx,%eax

	_0824c6_jump:
		test   %eax,%eax
		jne    _0824a1_jump
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0824d1_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		test   $0x000003,%bl
		jne    _082506_jump
		mov    %eax,%edx
		mov    $0x000064,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     _0824f4_jump

	_0824eb_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0824f4_jump:
		mov    $0x000190,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     _0824eb_jump

	_082506_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08250c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebx
		mov    0x000020(%eax),%ecx
		test   %ecx,%ecx
		jne    _0825d9_jump
		lea    0x00076c(%edx),%eax
		call   _0824d1_func
		test   %eax,%eax
		je     _082543_jump
		mov    0x000010(%ebx),%eax
		mov    _0c108a_data(,%eax,2),%esi
		mov    _0c1088_data(,%eax,2),%eax
		jmp    _082554_jump

	_082543_jump:
		mov    0x000010(%ebx),%eax
		mov    _0c1070_data(,%eax,2),%esi
		mov    _0c106e_data(,%eax,2),%eax

	_082554_jump:
		sar    $0x000010,%esi
		sar    $0x000010,%eax
		sub    %eax,%esi
		xor    %edi,%edi
		mov    $0x000001,%ecx
		mov    %edi,(%esp)
		mov    %edi,0x000004(%esp)
		mov    %edi,0x000008(%esp)
		mov    %ecx,0x00000c(%esp)
		mov    0x000010(%ebx),%eax
		mov    %eax,0x000010(%esp)
		mov    %edx,0x000014(%esp)
		mov    %esp,%eax
		mov    %edi,0x000020(%esp)
		call   _07ffb7_func
		mov    0x000018(%esp),%ebp
		mov    0x000018(%ebx),%edx
		sub    %ebp,%edx
		add    $0x000007,%edx
		mov    $0x000007,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    0x00000c(%ebx),%eax
		cmp    $0x000005,%eax
		jne    _0825c7_jump
		lea    -0x000001(%eax),%ecx
		mov    %ecx,%edi
		shl    $0x000003,%edi
		lea    0x000001(%edx),%eax
		sub    %ecx,%edi
		add    %edi,%eax
		cmp    %esi,%eax
		jle    _0825c3_jump
		mov    0x00000c(%ebx),%eax
		sub    $0x000002,%eax
		jmp    _0825c8_jump

	_0825c3_jump:
		mov    %ecx,%eax
		jmp    _0825c8_jump

	_0825c7_jump:
		dec    %eax

	_0825c8_jump:
		mov    0x00001c(%esp),%ebx
		add    %edx,%ebx
		mov    %eax,%edx
		shl    $0x000003,%eax
		sub    %edx,%eax
		add    %ebx,%eax
		jmp    _0825e8_jump

	_0825d9_jump:
		cmp    $0x000001,%ecx
		jne    _0825e5_jump
		mov    0x00001c(%eax),%eax
		sub    %ecx,%eax
		jmp    _0825e8_jump

	_0825e5_jump:
		mov    0x00001c(%eax),%eax

	_0825e8_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0825f1_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    %ebx,%edx
		call   _08250c_func
		mov    %eax,%edi
		mov    %ebx,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   _08250c_func
		cmp    %eax,%edi
		jle    _082613_jump
		mov    $0x000001,%ecx

	_082613_jump:
		mov    %ecx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_082619_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%ecx
		mov    $_0bf62c_data,%edx
		mov    0x000014(%eax),%ebx
		mov    $_0bf608_data,%eax
		xor    %edi,%edi
		call   _0825f1_func
		mov    %eax,0x00000c(%esp)
		test   %eax,%eax
		je     _08264c_jump
		mov    $_0bf62c_data,%ebx
		mov    $_0bf608_data,%esi
		jmp    _082656_jump

	_08264c_jump:
		mov    $_0bf608_data,%ebx
		mov    $_0bf62c_data,%esi

	_082656_jump:
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		mov    0x000010(%ecx),%ebp
		call   _0824d1_func
		mov    %eax,%edx
		lea    0x000000(%ebp,%ebp,1),%eax
		test   %edx,%edx
		je     _08267e_jump
		mov    _0c108a_data(%eax),%edx
		mov    _0c1088_data(%eax),%eax
		jmp    _08268a_jump

	_08267e_jump:
		mov    _0c1070_data(%eax),%edx
		mov    _0c106e_data(%eax),%eax

	_08268a_jump:
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x000008(%esp)
		xor    %edx,%edx
		mov    0x000020(%ebx),%eax
		mov    %edx,0x000014(%esp)
		test   %eax,%eax
		jne    _08275a_jump
		mov    0x000010(%ebx),%eax
		cmp    %eax,%ebp
		jle    _0826b8_jump
		mov    $0x000001,%edi
		jmp    _082793_jump

	_0826b8_jump:
		jne    _082793_jump
		mov    0x000018(%ecx),%edx
		mov    0x000018(%ebx),%eax
		add    $0x000007,%edx
		sub    %eax,%edx
		movl   $0x000007,0x000018(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000018(%esp)
		mov    0x00000c(%ecx),%eax
		sub    %edx,%eax
		mov    0x000018(%ecx),%edx
		mov    %eax,0x000004(%esp)
		add    $0x000006,%edx
		sub    0x000018(%ebx),%edx
		movl   $0x000007,0x000018(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000018(%esp)
		mov    0x00000c(%ecx),%eax
		dec    %eax
		sub    %edx,%eax
		mov    0x00000c(%ebx),%edx
		mov    %eax,(%esp)
		cmp    $0x000005,%edx
		jne    _082733_jump
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%edx
		sub    $0x000007,%eax
		cmp    %edx,%eax
		jge    _082793_jump
		mov    (%esp),%edx
		mov    $0x000001,%edi
		cmp    %edx,%eax
		jl     _082793_jump
		jmp    _08278f_jump

	_082733_jump:
		lea    -0x000001(%edx),%eax
		mov    %eax,0x000018(%esp)
		mov    0x000018(%esp),%edx
		shl    $0x000003,%eax
		sub    %edx,%eax
		mov    0x000004(%esp),%edx
		inc    %eax
		cmp    %edx,%eax
		jg     _082793_jump
		mov    (%esp),%edx
		mov    $0x000001,%edi
		cmp    %edx,%eax
		jle    _082793_jump
		jmp    _08278f_jump

	_08275a_jump:
		mov    0x00001c(%ebx),%edx
		cmp    $0x000001,%eax
		jne    _082781_jump
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		call   _0824d1_func
		test   %eax,%eax
		je     _082780_jump
		mov    _0c1072_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _082780_jump
		inc    %edx

	_082780_jump:
		dec    %edx

	_082781_jump:
		mov    0x00001c(%ecx),%eax
		cmp    %eax,%edx
		jg     _082793_jump
		mov    $0x000001,%edi
		jne    _082793_jump

	_08278f_jump:
		mov    %edi,0x000014(%esp)

	_082793_jump:
		cmpl   $0x000000,0x000014(%esp)
		je     _0827ab_jump
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _0828bd_func
		test   %eax,%eax
		sete   %al
		movzbl %al,%edi

	_0827ab_jump:
		test   %edi,%edi
		jne    _0827c2_jump
		mov    0x00000c(%esp),%esi
		test   %esi,%esi
		je     _0828ae_jump
		mov    %esi,%edi
		jmp    _0828ae_jump

	_0827c2_jump:
		xor    %ebx,%ebx
		mov    0x000020(%esi),%eax
		mov    %ebx,0x000010(%esp)
		test   %eax,%eax
		jne    _082852_jump
		mov    0x000010(%esi),%ebx
		cmp    %ebx,%ebp
		jle    _0827e1_jump
		xor    %edi,%edi
		jmp    _08288e_jump

	_0827e1_jump:
		jne    _08288e_jump
		mov    0x000018(%ecx),%edx
		mov    0x000018(%esi),%ebx
		add    $0x000007,%edx
		sub    %ebx,%edx
		mov    $0x000007,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x00000c(%ecx),%ebp
		sub    %edx,%ebp
		mov    0x000018(%ecx),%edx
		mov    0x000018(%esi),%eax
		add    $0x000006,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x00000c(%ecx),%eax
		dec    %eax
		xor    %edi,%edi
		sub    %edx,%eax
		mov    0x00000c(%esi),%ebx
		mov    %eax,%edx
		cmp    $0x000005,%ebx
		jne    _08283f_jump
		mov    0x000008(%esp),%eax
		sub    $0x000007,%eax
		cmp    %eax,%ebp
		jg     _082839_jump

	_082832_jump:
		mov    $0x000001,%edi
		jmp    _08288e_jump

	_082839_jump:
		cmp    %eax,%edx
		jg     _08288e_jump
		jmp    _082886_jump

	_08283f_jump:
		dec    %ebx
		mov    %ebx,%eax
		shl    $0x000003,%eax
		sub    %ebx,%eax
		inc    %eax
		cmp    %eax,%ebp
		jl     _082832_jump
		cmp    %eax,%edx
		jge    _08288e_jump
		jmp    _082886_jump

	_082852_jump:
		mov    0x00001c(%esi),%ebx
		cmp    $0x000001,%eax
		jne    _082879_jump
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		call   _0824d1_func
		test   %eax,%eax
		je     _082878_jump
		mov    _0c1072_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%ebx
		jle    _082878_jump
		inc    %ebx

	_082878_jump:
		dec    %ebx

	_082879_jump:
		mov    0x00001c(%ecx),%ebp
		cmp    %ebp,%ebx
		jg     _08288e_jump
		xor    %edi,%edi
		cmp    %ebp,%ebx
		jne    _08288e_jump

	_082886_jump:
		movl   $0x000001,0x000010(%esp)

	_08288e_jump:
		cmpl   $0x000000,0x000010(%esp)
		je     _0828a0_jump
		mov    %ecx,%eax
		mov    %esi,%edx
		call   _0828bd_func
		mov    %eax,%edi

	_0828a0_jump:
		mov    0x00000c(%esp),%ebx
		test   %ebx,%ebx
		je     _0828ae_jump
		mov    %ebx,%eax
		sub    %edi,%eax
		mov    %eax,%edi

	_0828ae_jump:
		mov    %edi,%eax
		mov    %edi,0x000020(%ecx)
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0828bd_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %ebp
		mov    0x000008(%eax),%ecx
		mov    0x000008(%edx),%esi
		xor    %ebx,%ebx
		cmp    %esi,%ecx
		jl     _0828e1_jump
		jne    _0828e6_jump
		mov    0x000004(%eax),%ecx
		mov    0x000004(%edx),%ebp
		cmp    %ebp,%ecx
		jl     _0828e1_jump
		jne    _0828e6_jump
		mov    (%eax),%eax
		cmp    (%edx),%eax
		jge    _0828e6_jump

	_0828e1_jump:
		mov    $0x000001,%ebx

	_0828e6_jump:
		mov    %ebx,%eax
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0828ed_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%eax
		cmp    $0x00a8c0,%edx
		jae    _08291a_jump
		test   %ebx,%ebx
		jle    _08291a_jump
		lea    0x015180(%edx),%esi
		sub    %ebx,%esi
		xor    %edx,%edx
		mov    $0x015180,%ebx
		mov    %esi,%eax
		div    %ebx
		add    %eax,%edi
		dec    %edi
		jmp    _082929_jump

	_08291a_jump:
		mov    $0x015180,%ebx
		sub    %eax,%esi
		xor    %edx,%edx
		mov    %esi,%eax
		div    %ebx
		add    %eax,%edi

	_082929_jump:
		mov    $0x015180,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %edx,%ebx
		mov    $0x000e10,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		xor    %edx,%edx
		mov    %eax,0x000008(%ecx)
		mov    %ebx,%eax
		div    %esi
		mov    %edx,%ebx
		mov    $0x00003c,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		xor    %edx,%edx
		mov    %eax,0x000004(%ecx)
		mov    %ebx,%eax
		div    %esi
		mov    $0x00016e,%ebx
		mov    %edi,%eax
		mov    %edx,(%ecx)
		xor    %edx,%edx
		div    %ebx
		mov    %eax,%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    %edi,%ebx
		sub    %eax,%ebx
		test   %edx,%edx
		jbe    _082990_jump
		lea    -0x000001(%edx),%eax
		shr    $0x000002,%eax
		sub    %eax,%ebx

	_082990_jump:
		lea    0x00076c(%edx),%eax
		call   _0824d1_func
		add    $0x00016d,%eax

	_0829a0_jump:
		cmp    %eax,%ebx
		jb     _0829a9_jump
		inc    %edx
		sub    %eax,%ebx
		jmp    _0829a0_jump

	_0829a9_jump:
		mov    $_0c1070_data,%esi
		mov    %ebx,0x00001c(%ecx)
		lea    0x00076c(%edx),%eax
		mov    %edx,0x000014(%ecx)
		call   _0824d1_func
		test   %eax,%eax
		je     _0829c8_jump
		mov    $_0c108a_data,%esi

	_0829c8_jump:
		mov    $0x00001f,%ebp
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %ebp
		mov    %eax,%edx
		mov    (%esi,%edx,2),%edx
		sar    $0x000010,%edx
		cmp    %edx,%ebx
		jb     _0829e0_jump
		inc    %eax

	_0829e0_jump:
		mov    %eax,0x000010(%ecx)
		movswl (%esi,%eax,2),%eax
		sub    %eax,%ebx
		xor    %edx,%edx
		inc    %ebx
		lea    0x000001(%edi),%eax
		mov    %ebx,0x00000c(%ecx)
		mov    $0x000007,%ebx
		div    %ebx
		mov    %ecx,%eax
		mov    %edx,0x000018(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_082a2c_func:
		mov    $_0c0f18_data,%eax
		call   _081794_func
		test   %eax,%eax
		jne    _082c6d_jump
		ret    



_082a3f_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ecx
		xor    %edx,%edx

	_082a45_jump:
		mov    (%eax),%bl
		cmp    $0x000030,%bl
		jb     _082a60_jump
		cmp    $0x000039,%bl
		ja     _082a60_jump
		imul   $0x00000a,%edx,%edx
		xor    %ebx,%ebx
		mov    (%eax),%bl
		add    %ebx,%edx
		inc    %eax
		sub    $0x000030,%edx
		jmp    _082a45_jump

	_082a60_jump:
		mov    %edx,(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_082a65_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,0x000010(%esp)
		cmpb   $0x00003a,(%eax)
		jne    _082a78_jump
		inc    %ebp

	_082a78_jump:
		mov    %ebp,%esi

	_082a7a_jump:
		mov    0x000000(%ebp),%dl
		test   %dl,%dl
		je     _082a9d_jump
		cmp    $0x00002c,%dl
		je     _082a9d_jump
		cmp    $0x00002d,%dl
		je     _082a9d_jump
		cmp    $0x00002b,%dl
		je     _082a9d_jump
		cmp    $0x000030,%dl
		jb     _082a9a_jump
		cmp    $0x000039,%dl
		jbe    _082a9d_jump

	_082a9a_jump:
		inc    %ebp
		jmp    _082a7a_jump

	_082a9d_jump:
		mov    %ebp,%eax
		sub    %esi,%eax
		mov    %eax,0x00000c(%esp)
		cmp    $0x00001e,%eax
		jle    _082ab2_jump
		movl   $0x00001e,0x00000c(%esp)

	_082ab2_jump:
		mov    0x000010(%esp),%edi
		mov    0x00000c(%esp),%ecx
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x00000c(%esp),%ecx
		lea    (%edi,%ecx,1),%eax
		xor    %esi,%esi
		movb   $0x000000,(%eax)
		lea    0x000001(%ebp),%eax
		cmp    $0x00002d,%dl
		jne    _082aeb_jump
		mov    $0x000001,%esi
		jmp    _082af0_jump

	_082aeb_jump:
		cmp    $0x00002b,%dl
		jne    _082af2_jump

	_082af0_jump:
		mov    %eax,%ebp

	_082af2_jump:
		mov    0x000000(%ebp),%al
		cmp    $0x000030,%al
		jb     _082b71_jump
		cmp    $0x000039,%al
		ja     _082b71_jump
		lea    0x000008(%esp),%edx
		xor    %edi,%edi
		mov    %ebp,%eax
		mov    %edi,(%esp)
		mov    %edi,0x000004(%esp)
		mov    %edi,0x000008(%esp)
		call   _082a3f_func
		mov    %eax,%edx
		mov    (%eax),%cl
		mov    %eax,%ebp
		cmp    $0x00003a,%cl
		jne    _082b42_jump
		lea    0x000004(%esp),%edx
		inc    %eax
		call   _082a3f_func
		mov    %eax,%edx
		mov    (%eax),%ch
		mov    %eax,%ebp
		cmp    %cl,%ch
		jne    _082b42_jump
		mov    %esp,%edx
		inc    %eax
		call   _082a3f_func
		mov    %eax,%ebp

	_082b42_jump:
		mov    0x000008(%esp),%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    0x000004(%esp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %edx,(%ebx)
		test   %esi,%esi
		je     _082b71_jump
		mov    %edx,%ecx
		neg    %ecx
		mov    %ecx,(%ebx)

	_082b71_jump:
		mov    %ebp,%eax
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_082b7b_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    (%eax),%ah
		mov    $0xffffffff,%esi
		cmp    $0x00004a,%ah
		jne    _082b98_jump
		mov    $0x000001,%esi
		add    %esi,%ebx

	_082b98_jump:
		cmpb   $0x00004d,(%ebx)
		jne    _082ba0_jump
		inc    %ebx
		xor    %esi,%esi

	_082ba0_jump:
		lea    0x00000c(%esp),%edx
		mov    %ebx,%eax
		mov    %esi,0x000020(%ecx)
		call   _082a3f_func
		mov    %eax,%edx
		mov    %eax,%ebx
		test   %esi,%esi
		je     _082bbf_jump
		mov    0x00000c(%esp),%eax
		mov    %eax,0x00001c(%ecx)
		jmp    _082c04_jump

	_082bbf_jump:
		mov    0x00000c(%esp),%eax
		dec    %eax
		mov    %eax,0x000010(%ecx)
		cmpb   $0x00002e,(%edx)
		jne    _082bfd_jump
		lea    0x000001(%edx),%eax
		lea    0x00000c(%esp),%edx
		call   _082a3f_func
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %eax,0x00000c(%ecx)
		cmpb   $0x00002e,(%edx)
		jne    _082bfd_jump
		lea    0x000001(%edx),%eax
		lea    0x00000c(%esp),%edx
		call   _082a3f_func
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %eax,0x000018(%ecx)

	_082bfd_jump:
		movl   $0x000000,0x00001c(%ecx)

	_082c04_jump:
		mov    $0x000002,%edx
		xor    %esi,%esi
		mov    %edx,0x000008(%esp)
		mov    %esi,(%esp)
		mov    %esi,0x000004(%esp)
		cmpb   $0x00002f,(%ebx)
		jne    _082c51_jump
		lea    0x000008(%esp),%edx
		lea    0x000001(%ebx),%eax
		call   _082a3f_func
		mov    %eax,%edx
		mov    %eax,%ebx
		cmpb   $0x00003a,(%eax)
		jne    _082c51_jump
		lea    0x000001(%edx),%eax
		lea    0x000004(%esp),%edx
		call   _082a3f_func
		mov    %eax,%edx
		mov    %eax,%ebx
		cmpb   $0x00003a,(%eax)
		jne    _082c51_jump
		lea    0x000001(%edx),%eax
		mov    %esp,%edx
		call   _082a3f_func
		mov    %eax,%ebx

	_082c51_jump:
		mov    (%esp),%eax
		mov    %eax,(%ecx)
		mov    0x000004(%esp),%eax
		mov    %eax,0x000004(%ecx)
		mov    0x000008(%esp),%eax
		mov    %eax,0x000008(%ecx)
		mov    %ebx,%eax
		add    $0x000010,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_082c6d_jump:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    $_0bf650_data,%ebx
		mov    %edx,_0bf658_data
		mov    $_0bf65c_data,%edx
		call   _082a65_func
		mov    %eax,%edx
		mov    (%eax),%ah
		test   %ah,%ah
		jne    _082c9a_jump
		mov    %ah,_0bf67b_data
		jmp    _082cf5_jump

	_082c9a_jump:
		mov    $0x000001,%ebx
		mov    _0bf650_data,%eax
		mov    %ebx,_0bf658_data
		sub    $0x000e10,%eax
		mov    %esp,%ebx
		mov    %eax,(%esp)
		mov    %edx,%eax
		mov    $_0bf67b_data,%edx
		call   _082a65_func
		mov    (%esp),%ecx
		mov    _0bf650_data,%ebx
		sub    %ecx,%ebx
		mov    %ebx,_0bf654_data
		mov    (%eax),%bl
		mov    %eax,%edx
		cmp    $0x00002c,%bl
		jne    _082ce5_jump
		mov    $_0bf608_data,%edx
		inc    %eax
		call   _082b7b_func

	_082ce5_jump:
		cmpb   $0x00002c,(%eax)
		jne    _082cf5_jump
		mov    $_0bf62c_data,%edx
		inc    %eax
		call   _082b7b_func

	_082cf5_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082cfc_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		mov    $0x000000,%dl
		ftst   
		fnstsw %ax
		sahf   
		jae    _082d11_jump
		fchs   
		not    %dl

	_082d11_jump:
		fld1   
		fcom   %st(1)
		fnstsw %ax
		and    $0x004100,%ax
		je     _082d32_jump
		fxch   %st(1)
		fpatan 
		mov    $0x000002,%ax
		mov    %ax,-0x000002(%ebp)
		fldpi  
		fidivs -0x000002(%ebp)
		fsubp  %st,%st(1)
		jmp    _082d34_jump

	_082d32_jump:
		fpatan 

	_082d34_jump:
		cmp    $0x000000,%dl
		je     _082d3b_jump
		fchs   

	_082d3b_jump:
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    

	_082e0c_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_082e12_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		push   %eax
		cmp    _0bd4a0_data,%eax
		jb     _082e79_jump
		cmpb   $0x000000,_0bd4ba_data
		jne    _082e8b_jump
		mov    (%esp),%ebp
		add    $0x00000f,%ebp
		shr    $0x000004,%ebp
		test   %ebp,%ebp
		jne    _082e3d_jump
		mov    $0xfffffff,%ebp

	_082e3d_jump:
		xor    %ebx,%ebx
		mov    %ds,%eax
		mov    %ax,%bx
		mov    $0x0000ed,%ah
		int    $0x000021
		shl    $0x00001f,%eax
		and    $0x00ffff,%edi
		or     %eax,%edi
		test   %edi,%edi
		jge    _082e67_jump
		mov    %edi,%es
		mov    %ebp,%ebx
		mov    $0x00004a,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     _082e79_jump

	_082e67_jump:
		mov    %ds,%eax
		mov    %eax,%es
		mov    %ebp,%ebx

	_082e6d_jump:
		mov    $0x00004a,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    _082ebc_jump

	_082e79_jump:
		call   _082211_func
		movl   $0x000005,(%eax)
		mov    $0xffffffff,%eax
		jmp    _082eca_jump

	_082e8b_jump:
		mov    (%esp),%ebx
		add    $0x000fff,%ebx
		shr    $0x00000c,%ebx
		test   %ebx,%ebx
		jne    _082ea0_jump
		mov    $0x0fffff,%ebx

	_082ea0_jump:
		mov    _0bd4ba_data,%dl
		cmp    $0x000001,%dl
		jne    _082eb6_jump
		cmp    _0bd4bb_data,%dl
		jne    _082eb6_jump
		shl    $0x000008,%ebx

	_082eb6_jump:
		mov    %ds,%eax
		mov    %eax,%es
		jmp    _082e6d_jump

	_082ebc_jump:
		mov    (%esp),%ebx
		mov    _0bd48c_data,%eax
		mov    %ebx,_0bd48c_data

	_082eca_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %es
		jmp    _082e0c_jump



_082ed4_func:
		push   %ecx
		sub    $0x000004,%esp

	_082ed8_jump:
		test   %ebx,%ebx
		jne    _082ee3_jump

	_082edc_jump:
		xor    %eax,%eax
		add    $0x000004,%esp
		pop    %ecx
		ret    

	_082ee3_jump:
		mov    (%edx),%ch
		mov    (%eax),%cl
		mov    %ch,(%esp)
		cmp    $0x000041,%cl
		jb     _082ef7_jump
		cmp    $0x00005a,%cl
		ja     _082ef7_jump
		add    $0x000020,%cl

	_082ef7_jump:
		mov    (%esp),%ch
		cmp    $0x000041,%ch
		jb     _082f0a_jump
		cmp    $0x00005a,%ch
		ja     _082f0a_jump
		add    $0x000020,%ch
		mov    %ch,(%esp)

	_082f0a_jump:
		mov    (%esp),%ch
		cmp    %ch,%cl
		je     _082f22_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %cl,%dl
		mov    %ch,%al
		sub    %eax,%edx
		mov    %edx,%eax
		add    $0x000004,%esp
		pop    %ecx
		ret    

	_082f22_jump:
		test   %ch,%ch
		je     _082edc_jump
		inc    %eax
		inc    %edx
		dec    %ebx
		jmp    _082ed8_jump

	_082f2b_jump:
		ret    



_082f2c_func:
		push   %ax
		finit  
		fld1   
		fldz   
		fdivrp %st,%st(1)
		fld    %st(0)
		fchs   
		fcompp 
		fnstsw %ax
		mov    $0x000002,%al
		sahf   
		je     _082f46_jump
		mov    $0x000003,%al

	_082f46_jump:
		finit  
		fldcw  (%esp)
		xchg   %ax,(%esp)
		pop    %ax
		ret    



_082f59_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%eax
		test   %edx,%edx
		jge    _082f72_jump
		mov    $0x00002d,%dh
		neg    %esi
		mov    %dh,(%esp)
		jmp    _082f76_jump

	_082f72_jump:
		movb   $0x00002b,(%esp)

	_082f76_jump:
		mov    $0x000064,%ebx
		mov    $0x000003,%edx
		cmp    %ebx,%esi
		jge    _082f99_jump
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		cmp    %ebx,%esi
		jge    _082f99_jump
		mov    $0x000001,%edx
		mov    %edx,%ebx

	_082f99_jump:
		test   %eax,%eax
		jne    _082fa9_jump
		mov    $0x000002,%eax
		cmp    $0x000003,%edx
		jne    _082fa9_jump
		mov    %edx,%eax

	_082fa9_jump:
		lea    0x000001(%eax),%ebp
		cmp    %ecx,%ebp
		jg     _082ff7_jump
		cmp    %eax,%edx
		jg     _082ff4_jump
		mov    (%esp),%cl
		mov    %cl,(%edi)

	_082fb9_jump:
		inc    %edi
		cmp    %edx,%eax
		jle    _082fc4_jump
		dec    %eax
		movb   $0x000030,(%edi)
		jmp    _082fb9_jump

	_082fc4_jump:
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esi,%edx
		add    $0x000030,%eax
		sar    $0x00001f,%edx
		mov    %al,(%edi)
		mov    %esi,%eax
		idiv   %ebx
		mov    %edx,%esi
		mov    %ebx,%eax
		mov    %ebx,%edx
		mov    $0x00000a,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		inc    %edi
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _082fc4_jump
		jmp    _082ff7_jump

	_082ff4_jump:
		lea    0x000001(%edx),%ebp

	_082ff7_jump:
		mov    %ebp,%eax
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi

	_082ffe_jump:
		pop    %esi
		ret    



_083000_func:
		push   %esi
		mov    %ebx,%esi
		test   %ecx,%ecx
		jne    _083015_jump
		test   %ebx,%ebx
		jg     _083015_jump
		movb   $0x000030,(%eax)
		inc    %eax
		movb   $0x00002e,(%eax)
		inc    %eax
		pop    %esi
		ret    

	_083015_jump:
		test   %esi,%esi
		jle    _083026_jump
		mov    (%edx),%bl
		test   %bl,%bl
		je     _083026_jump
		inc    %edx
		dec    %esi
		mov    %bl,(%eax)
		inc    %eax
		jmp    _083015_jump

	_083026_jump:
		test   %esi,%esi
		jle    _083033_jump

	_08302a_jump:
		dec    %esi
		movb   $0x000030,(%eax)
		inc    %eax
		test   %esi,%esi
		jg     _08302a_jump

	_083033_jump:
		movb   $0x00002e,(%eax)
		inc    %eax
		test   %ecx,%ecx
		jle    _083047_jump

	_08303b_jump:
		test   %esi,%esi
		je     _083047_jump
		inc    %esi
		movb   $0x000030,(%eax)
		inc    %eax
		dec    %ecx
		jne    _08303b_jump

	_083047_jump:
		test   %ecx,%ecx
		jle    _082ffe_jump

	_08304b_jump:
		mov    (%edx),%bh
		test   %bh,%bh
		je     _083058_jump
		inc    %edx
		mov    %bh,(%eax)
		inc    %eax
		dec    %ecx
		jne    _08304b_jump

	_083058_jump:
		test   %ecx,%ecx
		je     _082ffe_jump
		dec    %ecx
		movb   $0x000030,(%eax)
		inc    %eax
		jmp    _083058_jump



_083063_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		cmp    %ebx,%edx
		je     _0830c6_jump
		mov    %edi,-0x000014(%ebp)
		mov    0x000001(%eax),%al
		lea    (%ebx,%edi,1),%edx
		mov    %al,-0x000010(%ebp)
		lea    (%esi,%edi,1),%eax

	_083083_jump:
		dec    %eax
		dec    %edx
		mov    (%eax),%cl
		dec    %esi
		mov    %cl,(%edx)
		mov    -0x000014(%ebp),%ecx
		dec    %ebx
		cmp    %ecx,%eax
		jne    _083083_jump
		mov    (%edi),%ah
		cmp    $0x00002e,%ah
		jne    _0830a0_jump
		dec    %ebx
		movb   $0x000030,(%edi,%ebx,1)
		jmp    _0830ba_jump

	_0830a0_jump:
		cmp    $0x00002b,%ah
		je     _0830aa_jump
		cmp    $0x00002d,%ah
		jne    _0830ba_jump

	_0830aa_jump:
		cmpb   $0x00002e,-0x000010(%ebp)
		jne    _0830ba_jump
		movb   $0x000030,(%edi,%ebx,1)
		dec    %ebx
		mov    (%edi),%dl
		mov    %dl,(%edi,%ebx,1)

	_0830ba_jump:
		mov    $0x000020,%edx
		mov    %edi,%eax
		call   _0787d0_func

	_0830c6_jump:
		lea    -0x00000c(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_0830ce_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000034,%esp
		mov    0x000008(%ebp),%edi
		mov    %eax,-0x000014(%ebp)
		mov    %edx,%esi
		mov    %ebx,-0x000018(%ebp)
		mov    %cl,-0x000010(%ebp)
		mov    0x000018(%ebp),%cl
		lea    -0x00003c(%ebp),%ebx
		mov    (%edx),%eax
		mov    0x000004(%edx),%edx
		call   _0835e3_func
		test   %eax,%eax
		je     _083114_jump
		mov    -0x000014(%ebp),%eax
		xor    %esi,%esi
		jmp    _083107_jump

	_0830ff_jump:
		cmp    %edi,%esi
		jge    _083105_jump
		mov    %dh,(%eax)

	_083105_jump:
		inc    %eax
		inc    %esi

	_083107_jump:
		mov    -0x00003c(%esi,%ebp,1),%dh
		test   %dh,%dh
		jne    _0830ff_jump
		jmp    _083293_jump

	_083114_jump:
		mov    %cl,-0x00000c(%ebp)
		cmp    $0x000047,%cl
		jne    _08316e_jump
		mov    (%esi),%eax
		mov    0x000004(%esi),%edx
		call   _07f840_func
		mov    %edx,%ebx
		test   %edx,%edx
		je     _083166_jump
		call   _083669_func
		mov    %edx,%ebx
		call   _083693_func
		call   _078d1c_func
		cmp    $0xfffffffc,%eax
		jl     _083147_jump
		cmp    -0x000018(%ebp),%eax
		jl     _08314d_jump

	_083147_jump:
		movb   $0x000045,-0x00000c(%ebp)
		jmp    _08316e_jump

	_08314d_jump:
		test   %ebx,%ebx
		jl     _083152_jump
		inc    %eax

	_083152_jump:
		mov    $0x000046,%dl
		mov    -0x000018(%ebp),%ebx
		mov    %dl,-0x00000c(%ebp)
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    %ebx,-0x000018(%ebp)
		mov    %eax,0x00000c(%ebp)
		jmp    _08316e_jump

	_083166_jump:
		mov    $0x000046,%ah
		mov    %edx,0x00000c(%ebp)
		mov    %ah,-0x00000c(%ebp)

	_08316e_jump:
		cmpb   $0x000045,-0x00000c(%ebp)
		jne    _08319e_jump
		mov    -0x000018(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		neg    %eax
		cmp    %edx,%eax
		jge    _08318a_jump
		mov    -0x000018(%ebp),%eax
		add    $0x000002,%eax
		cmp    %edx,%eax
		jg     _08319e_jump

	_08318a_jump:
		mov    -0x000014(%ebp),%eax
		mov    $0x00002a,%edx
		mov    %edi,%ebx
		call   _0787d0_func
		jmp    _0832a7_jump

	_08319e_jump:
		mov    -0x000018(%ebp),%eax
		mov    %eax,-0x00001c(%ebp)
		cmp    $0x000045,%cl
		jne    _0831ba_jump
		mov    0x00000c(%ebp),%ecx
		test   %ecx,%ecx
		jle    _0831b3_jump
		inc    %eax
		jmp    _0831b7_jump

	_0831b3_jump:
		jge    _0831ba_jump
		add    %ecx,%eax

	_0831b7_jump:
		mov    %eax,-0x00001c(%ebp)

	_0831ba_jump:
		mov    0x000004(%esi),%edx
		mov    (%esi),%eax
		mov    %edx,-0x000020(%ebp)
		test   %edx,%edx
		je     _0831dd_jump
		cmpb   $0x000045,-0x00000c(%ebp)
		je     _0831dd_jump
		mov    0x00000c(%ebp),%ecx
		test   %ecx,%ecx
		je     _0831dd_jump
		mov    %ecx,%ebx
		call   _083712_func
		mov    %edx,-0x000020(%ebp)

	_0831dd_jump:
		lea    -0x00003c(%ebp),%edx
		push   %edx
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%dl
		push   %edx
		lea    -0x000028(%ebp),%edx
		mov    -0x00001c(%ebp),%ebx
		push   %edx
		lea    -0x000024(%ebp),%ecx
		mov    -0x000020(%ebp),%edx
		call   _083832_func
		mov    -0x000014(%ebp),%eax
		mov    -0x000028(%ebp),%esi
		lea    0x000001(%eax),%edx
		test   %esi,%esi
		je     _08320b_jump
		movb   $0x00002d,(%eax)
		jmp    _083214_jump

	_08320b_jump:
		cmpb   $0x000000,-0x000010(%ebp)
		je     _083216_jump
		movb   $0x00002b,(%eax)

	_083214_jump:
		mov    %edx,%eax

	_083216_jump:
		cmpb   $0x000045,-0x00000c(%ebp)
		jne    _083266_jump
		mov    -0x00001c(%ebp),%ecx
		mov    0x00000c(%ebp),%edx
		mov    0x00000c(%ebp),%ebx
		sub    %edx,%ecx
		lea    -0x00003c(%ebp),%edx
		call   _083000_func
		mov    -0x000014(%ebp),%ecx
		mov    0x000014(%ebp),%dl
		mov    %eax,%esi
		mov    %eax,%ebx
		sub    %ecx,%esi
		test   %dl,%dl
		je     _083247_jump
		cmp    %edi,%esi
		jge    _083247_jump
		inc    %esi
		mov    %dl,(%eax)
		inc    %eax

	_083247_jump:
		cmpl   $0x000000,-0x000020(%ebp)
		je     _083253_jump
		mov    0x00000c(%ebp),%edx
		sub    %edx,-0x000024(%ebp)

	_083253_jump:
		mov    -0x000024(%ebp),%edx
		mov    %edi,%ecx
		mov    0x000010(%ebp),%ebx
		sub    %esi,%ecx
		call   _082f59_func
		add    %eax,%esi
		jmp    _083293_jump

	_083266_jump:
		mov    -0x000014(%ebp),%edx
		mov    %eax,%ebx
		sub    %edx,%ebx
		mov    -0x000024(%ebp),%edx
		mov    -0x00001c(%ebp),%ecx
		inc    %edx
		add    %ecx,%edx
		add    %ebx,%edx
		cmp    %edx,%edi
		jge    _083281_jump
		lea    0x000001(%edi),%esi
		jmp    _083293_jump

	_083281_jump:
		lea    -0x00003c(%ebp),%edx
		mov    -0x000024(%ebp),%ebx
		mov    -0x000014(%ebp),%esi
		call   _083000_func
		sub    %esi,%eax
		mov    %eax,%esi

	_083293_jump:
		cmp    %edi,%esi
		jg     _08318a_jump
		mov    -0x000014(%ebp),%eax
		mov    %esi,%edx
		mov    %edi,%ebx
		call   _083063_func

	_0832a7_jump:
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    $0x000014



_0832b0_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000024,%esp
		push   %edx
		mov    %eax,-0x000018(%ebp)

	_0832be_jump:
		mov    (%eax),%dl
		cmp    $0x000020,%dl
		je     _0832cf_jump
		cmp    $0x000009,%dl
		jb     _0832d2_jump
		cmp    $0x00000d,%dl
		ja     _0832d2_jump

	_0832cf_jump:
		inc    %eax
		jmp    _0832be_jump

	_0832d2_jump:
		lea    0x000001(%eax),%ebx
		xor    %cl,%cl
		cmp    $0x00002b,%dl
		je     _0832e3_jump
		cmp    $0x00002d,%dl
		jne    _0832e5_jump
		mov    $0x000001,%cl

	_0832e3_jump:
		mov    %ebx,%eax

	_0832e5_jump:
		mov    $0x000030,%bl
		xor    %edx,%edx
		xor    %esi,%esi

	_0832eb_jump:
		mov    (%eax),%ch
		inc    %eax
		cmp    $0x00002e,%ch
		jne    _0832fd_jump
		test   $0x000008,%cl
		jne    _083323_jump
		or     $0x000008,%cl
		jmp    _0832eb_jump

	_0832fd_jump:
		cmp    $0x000030,%ch
		jb     _083323_jump
		cmp    $0x000039,%ch
		ja     _083323_jump
		test   $0x000008,%cl
		je     _08330d_jump
		inc    %esi

	_08330d_jump:
		or     %ch,%bl
		cmp    $0x000030,%bl
		je     _08331e_jump
		cmp    $0x000011,%edx
		jge    _08331d_jump
		mov    %ch,-0x000034(%edx,%ebp,1)

	_08331d_jump:
		inc    %edx

	_08331e_jump:
		or     $0x000004,%cl
		jmp    _0832eb_jump

	_083323_jump:
		xor    %ebx,%ebx
		test   $0x000004,%cl
		je     _083399_jump
		cmp    $0x000065,%ch
		je     _083342_jump
		cmp    $0x000045,%ch
		je     _083342_jump
		cmp    $0x000064,%ch
		je     _083342_jump
		cmp    $0x000044,%ch
		jne    _083395_jump

	_083342_jump:
		lea    -0x000001(%eax),%edi
		mov    %edi,-0x000014(%ebp)
		lea    0x000001(%eax),%edi
		mov    (%eax),%ch
		cmp    $0x00002b,%ch
		je     _08335a_jump
		cmp    $0x00002d,%ch
		jne    _08335c_jump
		or     $0x000002,%cl

	_08335a_jump:
		mov    %edi,%eax

	_08335c_jump:
		and    $0x0000fb,%cl

	_08335f_jump:
		mov    (%eax),%ch
		cmp    $0x000030,%ch
		jb     _083384_jump
		cmp    $0x000039,%ch
		ja     _083384_jump
		cmp    $0x0003e8,%ebx
		jge    _08337e_jump
		imul   $0x00000a,%ebx,%ebx
		movzbl %ch,%edi
		add    %edi,%ebx
		sub    $0x000030,%ebx

	_08337e_jump:
		or     $0x000004,%cl
		inc    %eax
		jmp    _08335f_jump

	_083384_jump:
		test   $0x000002,%cl
		je     _08338b_jump
		neg    %ebx

	_08338b_jump:
		test   $0x000004,%cl
		jne    _083396_jump
		mov    -0x000014(%ebp),%eax
		jmp    _083396_jump

	_083395_jump:
		dec    %eax

	_083396_jump:
		mov    %eax,-0x000018(%ebp)

	_083399_jump:
		sub    %esi,%ebx
		cmp    $0x000011,%edx
		jle    _0833aa_jump
		sub    $0x000011,%edx
		add    %edx,%ebx
		mov    $0x000011,%edx

	_0833aa_jump:
		test   %edx,%edx
		jle    _0833b9_jump
		cmpb   $0x000030,-0x000035(%edx,%ebp,1)
		jne    _0833b9_jump
		inc    %ebx
		dec    %edx
		jmp    _0833aa_jump

	_0833b9_jump:
		test   %edx,%edx
		jne    _0833c5_jump
		mov    %edx,-0x000020(%ebp)
		jmp    _08344b_jump

	_0833c5_jump:
		xor    %ah,%ah
		mov    %ah,-0x000034(%edx,%ebp,1)
		lea    -0x000034(%ebp),%eax
		lea    -0x000020(%ebp),%edx
		call   _08235a_func
		cmp    $0x000134,%ebx
		jle    _08340f_jump
		call   _07f1d5_func
		test   $0x000001,%cl
		je     _0833fd_jump
		mov    _0c1004_data,%eax
		mov    _0c1008_data,%edx
		call   _078d08_func
		mov    %eax,-0x000020(%ebp)
		jmp    _08344b_jump

	_0833fd_jump:
		mov    _0c1004_data,%eax
		mov    %eax,-0x000020(%ebp)
		mov    _0c1008_data,%eax

	_08340a_jump:
		mov    %eax,-0x00001c(%ebp)
		jmp    _08344e_jump

	_08340f_jump:
		cmp    $0xfffffebb,%ebx
		jge    _083423_jump
		call   _07f1d5_func
		xor    %eax,%eax
		mov    %eax,-0x000020(%ebp)
		jmp    _08340a_jump

	_083423_jump:
		test   %ebx,%ebx
		je     _083438_jump
		mov    -0x000020(%ebp),%eax
		mov    -0x00001c(%ebp),%edx
		call   _083712_func
		mov    %eax,-0x000020(%ebp)
		mov    %edx,-0x00001c(%ebp)

	_083438_jump:
		test   $0x000001,%cl
		je     _08344e_jump
		mov    -0x000020(%ebp),%eax
		mov    -0x00001c(%ebp),%edx
		call   _078d08_func
		mov    %eax,-0x000020(%ebp)

	_08344b_jump:
		mov    %edx,-0x00001c(%ebp)

	_08344e_jump:
		mov    -0x000038(%ebp),%esi
		test   %esi,%esi
		je     _08345a_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,(%esi)

	_08345a_jump:
		mov    -0x000020(%ebp),%eax
		mov    -0x00001c(%ebp),%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_08346a_func:
		jmp    _083a17_jump



_08346f_func:
		push   %edx
		cmp    $0x000005,%eax
		jbe    _083479_jump
		xor    %eax,%eax
		pop    %edx
		ret    

	_083479_jump:
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $_0bd274_data,%eax
		pop    %edx
		ret    



_08348e_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    %edx,%ebx
		cmpl   $0x000000,0x000008(%edx)
		jne    _0834a4_jump
		mov    %ebx,%eax
		call   _07f3d6_func

	_0834a4_jump:
		mov    0x00000d(%ebx),%ah
		xor    %edi,%edi
		test   $0x000004,%ah
		je     _0834c3_jump
		mov    %ah,%dl
		and    $0x0000f9,%dl
		mov    %dl,%dh
		mov    %dl,0x00000d(%ebx)
		or     $0x000002,%dh
		mov    $0x000001,%edi
		mov    %dh,0x00000d(%ebx)

	_0834c3_jump:
		mov    %ecx,%ebp
		xor    %esi,%esi

	_0834c7_jump:
		xor    %eax,%eax
		mov    (%ecx),%al
		test   %eax,%eax
		je     _0834de_jump
		mov    %ebx,%edx
		inc    %ecx
		call   _079430_func
		cmp    $0xffffffff,%eax
		jne    _0834c7_jump
		mov    %eax,%esi

	_0834de_jump:
		test   %edi,%edi
		je     _0834ff_jump
		mov    0x00000d(%ebx),%al
		and    $0x0000f9,%al
		mov    %al,%ah
		mov    %al,0x00000d(%ebx)
		or     $0x000004,%ah
		mov    %ah,0x00000d(%ebx)
		test   %esi,%esi
		jne    _0834ff_jump
		mov    %ebx,%eax
		call   _07f46c_func
		mov    %eax,%esi

	_0834ff_jump:
		test   %esi,%esi
		jne    _083507_jump
		mov    %ecx,%esi
		sub    %ebp,%esi

	_083507_jump:
		mov    %esi,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_08350f_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %fs
		cmpl   $0x000000,_0bf6ac_data
		jne    _0835da_jump
		mov    _0bd4c1_data,%fs
		xor    %ecx,%ecx
		xor    %dl,%dl
		mov    %fs,%eax
		mov    _0bd4bd_data,%edi
		mov    %eax,%es
		mov    %edi,%eax

	_08353a_jump:
		cmp    %es:(%eax),%dl
		je     _083552_jump

	_08353f_jump:
		mov    %es:(%eax),%dh
		lea    0x000001(%eax),%ebx
		cmp    %dh,%dl
		je     _08354d_jump
		mov    %ebx,%eax
		jmp    _08353f_jump

	_08354d_jump:
		inc    %ecx
		mov    %ebx,%eax
		jmp    _08353a_jump

	_083552_jump:
		sub    %edi,%eax
		jne    _08355b_jump
		mov    $0x000001,%eax

	_08355b_jump:
		call   _07a3d8_func
		mov    %eax,%edx
		mov    %eax,%ebx
		test   %eax,%eax
		je     _0835da_jump
		mov    %ecx,%eax
		shl    $0x000002,%eax
		add    $0x000004,%eax
		add    %ecx,%eax
		call   _07a3d8_func
		test   %eax,%eax
		je     _0835d3_jump
		mov    %eax,_0bf6ac_data
		xor    %esi,%esi
		mov    %fs,%eax
		xor    %ecx,%ecx
		mov    %eax,%es
		mov    %edi,%eax

	_08358e_jump:
		cmpb   $0x000000,%es:(%eax)
		je     _0835ae_jump
		mov    _0bf6ac_data,%edx
		mov    %ebx,(%ecx,%edx,1)

	_08359d_jump:
		mov    %es:(%eax),%dl
		inc    %eax
		mov    %dl,(%ebx)
		inc    %ebx
		test   %dl,%dl
		jne    _08359d_jump
		add    $0x000004,%ecx
		inc    %esi
		jmp    _08358e_jump

	_0835ae_jump:
		mov    _0bf6ac_data,%edx
		movl   $0x000000,(%ecx,%edx,1)
		add    $0x000004,%ecx
		add    %ecx,%edx
		mov    %esi,%ebx
		mov    %edx,_0bf6b0_data
		mov    %edx,%eax
		xor    %edx,%edx
		call   _0787d0_func
		jmp    _0835da_jump

	_0835d3_jump:
		mov    %edx,%eax
		call   _07a4d3_func

	_0835da_jump:
		pop    %fs
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0835e3_func:
		sub    $0x000008,%esp
		mov    %edx,0x000004(%esp)
		mov    %eax,(%esp)
		mov    0x000006(%esp),%eax
		and    $0x007ff0,%eax
		cmp    $0x007ff0,%ax
		jne    _083651_jump
		mov    0x000007(%esp),%dl
		mov    %ebx,%eax
		test   $0x000080,%dl
		je     _08360d_jump
		lea    0x000001(%ebx),%eax
		movb   $0x00002d,(%ebx)

	_08360d_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000002(%esp),%dx
		mov    (%esp),%bx
		or     %edx,%ebx
		xor    %edx,%edx
		mov    0x000004(%esp),%dx
		or     %edx,%ebx
		mov    0x000006(%esp),%edx
		and    $0x00000f,%dl
		xor    %dh,%dh
		and    $0x00ffff,%edx
		or     %ebx,%edx
		jne    _083640_jump
		mov    _0c0f1c_data,%edx
		jmp    _083646_jump

	_083640_jump:
		mov    _0c0f20_data,%edx

	_083646_jump:
		mov    %edx,(%eax)
		mov    $0x000001,%eax
		add    $0x000008,%esp
		ret    

	_083651_jump:
		xor    %eax,%eax
		add    $0x000008,%esp
		ret    



_083669_func:
		push   %ebx
		push   %ecx
		test   %edx,%edx
		jg     _08367c_jump
		mov    $0x00000b,%ebx
		call   _083a1a_func
		pop    %ecx
		pop    %ebx
		ret    

	_08367c_jump:
		mov    $0x1526e50e,%ebx
		mov    $0x3fdbcb7b,%ecx
		call   _083a5c_func
		call   _07825f_func
		pop    %ecx
		pop    %ebx
		ret    



_083693_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		sub    $0x000008,%esp
		lea    -0x000010(%ebp),%ebx
		call   _07f908_func
		test   %edx,%edx
		jge    _0836bf_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0xbff00000,%ecx
		xor    %ebx,%ebx
		call   _0780a8_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)

	_0836bf_jump:
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		lea    -0x000008(%ebp),%esp
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_0836cc_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		sub    $0x000008,%esp
		mov    0x000008(%ebp),%esi
		mov    %ebx,-0x00000c(%ebp)
		mov    %ecx,-0x000008(%ebp)
		mov    %edx,%ecx
		cmp    %edx,%eax
		je     _0836f7_jump
		mov    %edx,%ebx
		mov    -0x000008(%ebp),%edx
		sub    %eax,%ebx
		mov    -0x00000c(%ebp),%eax
		call   _083712_func
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)

	_0836f7_jump:
		lea    -0x00000c(%ebp),%eax
		mov    %esi,%edx
		call   _083c38_func
		mov    %ecx,%eax
		mov    %esi,%edx
		call   _083bfe_func
		lea    -0x000004(%ebp),%esp
		pop    %esi
		pop    %ebp
		ret    $0x000004



_083712_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)
		mov    %ebx,(%esp)
		mov    _0c10a4_data,%ebx
		mov    _0c10a8_data,%ecx
		call   _07a1e6_func
		jne    _083742_jump
		mov    _0c10b8_data,%eax
		mov    _0c10b4_data,%ebp
		jmp    _083766_jump

	_083742_jump:
		mov    0x000004(%esp),%edx
		mov    _0c10ac_data,%ebx
		mov    _0c10b0_data,%ecx
		mov    %ebp,%eax
		call   _07a1e6_func
		jne    _08376a_jump
		mov    _0c10c0_data,%eax
		mov    _0c10bc_data,%ebp

	_083766_jump:
		mov    %eax,0x000004(%esp)

	_08376a_jump:
		mov    (%esp),%edx
		mov    $_0c10fc_data,%esi
		test   %edx,%edx
		jge    _0837a1_jump
		mov    %edx,%edi
		neg    %edi
		cmp    $0x000134,%edi
		jle    _0837ce_jump
		mov    0x000004(%esp),%edx
		mov    _0c10fe_data,%ebx
		mov    _0c1102_data,%ecx
		mov    %ebp,%eax
		sub    $0x0000d8,%edi
		call   _07885a_func
		jmp    _0837c8_jump

	_0837a1_jump:
		mov    %edx,%edi
		cmp    $0x000134,%edx
		jle    _0837ce_jump
		mov    0x000004(%esp),%edx
		mov    _0c10fe_data,%ebx
		mov    _0c1102_data,%ecx
		mov    %ebp,%eax
		sub    $0x0000d8,%edi
		call   _07825f_func

	_0837c8_jump:
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)

	_0837ce_jump:
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx

	_0837d5_jump:
		movswl (%esi),%eax
		cmp    %eax,%edi
		jl     _0837f1_jump
		mov    %ecx,%edx
		sub    %eax,%edi
		mov    %ebx,%eax
		mov    0x000006(%esi),%ecx
		mov    0x000002(%esi),%ebx
		call   _07825f_func
		mov    %eax,%ebx
		mov    %edx,%ecx

	_0837f1_jump:
		test   %edi,%edi
		je     _083800_jump
		cmpw   $0x000001,(%esi)
		je     _0837d5_jump
		add    $0x00000a,%esi
		jmp    _0837d5_jump

	_083800_jump:
		cmpl   $0x000000,(%esp)
		jge    _083813_jump
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		call   _07885a_func
		jmp    _08381e_jump

	_083813_jump:
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		call   _07825f_func

	_08381e_jump:
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_083832_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		push   %eax
		push   %edx
		mov    %ebx,%esi
		mov    %ecx,%edi
		mov    0x000008(%ebp),%eax
		mov    0x000010(%ebp),%ebx
		movl   $0x000000,(%eax)
		mov    -0x000038(%ebp),%eax
		movl   $0x000000,(%ecx)
		call   _0835e3_func
		test   %eax,%eax
		je     _083866_jump
		mov    0x000010(%ebp),%edi
		jmp    _083a0c_jump

	_083866_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %dx,-0x000020(%ebp)
		mov    %bx,-0x00001e(%ebp)
		mov    %dx,-0x00001a(%ebp)
		mov    -0x00003c(%ebp),%edx
		mov    %cx,-0x00001c(%ebp)
		test   %edx,%edx
		je     _0839c5_jump
		jge    _0838a0_jump
		mov    0x000008(%ebp),%eax
		movl   $0xffffffff,(%eax)
		mov    -0x000038(%ebp),%eax
		call   _078d08_func
		mov    %eax,-0x000038(%ebp)
		mov    %edx,-0x00003c(%ebp)

	_0838a0_jump:
		mov    -0x000038(%ebp),%eax
		mov    -0x00003c(%ebp),%edx
		mov    %edi,%ebx
		call   _07ef1d_func
		mov    (%edi),%eax
		mov    %eax,-0x000010(%ebp)
		test   %eax,%eax
		jge    _0838bb_jump
		neg    %eax
		mov    %eax,-0x000010(%ebp)

	_0838bb_jump:
		mov    -0x000010(%ebp),%edx
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		add    $0x000005,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    (%edi),%ecx
		mov    %eax,-0x000010(%ebp)
		test   %ecx,%ecx
		jge    _0838e3_jump
		neg    %eax
		mov    %eax,-0x000010(%ebp)

	_0838e3_jump:
		mov    -0x000010(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		mov    %eax,(%edi)
		cmp    $0x000046,%edx
		jne    _0838f2_jump
		add    %eax,%esi

	_0838f2_jump:
		test   %esi,%esi
		jl     _08398b_jump
		cmp    $0x000010,%esi
		jle    _083904_jump
		mov    $0x000010,%esi

	_083904_jump:
		mov    -0x00003c(%ebp),%edx
		xor    %ah,%ah
		lea    -0x000018(%ebp),%ebx
		mov    %ah,-0x00000c(%ebp)
		mov    -0x000038(%ebp),%eax
		call   _07f908_func
		test   %edx,%edx
		jne    _083929_jump
		mov    -0x000010(%ebp),%ecx
		cmp    %ecx,%esi
		jle    _083929_jump
		mov    $0x000001,%dl
		mov    %ecx,%esi
		mov    %dl,-0x00000c(%ebp)

	_083929_jump:
		lea    -0x000020(%ebp),%eax
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%ecx
		push   %eax
		mov    %esi,%edx
		mov    (%edi),%eax
		call   _0836cc_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _08398b_jump
		mov    (%edi),%ebx
		add    %eax,%ebx
		mov    0x00000c(%ebp),%ecx
		mov    %ebx,(%edi)
		cmp    $0x000046,%ecx
		je     _083956_jump
		cmpb   $0x000000,-0x00000c(%ebp)
		je     _083958_jump

	_083956_jump:
		add    %eax,%esi

	_083958_jump:
		cmp    $0x000001,%esi
		jge    _083964_jump
		mov    $0x000001,%esi
		jmp    _08396e_jump

	_083964_jump:
		cmp    $0x000010,%esi
		jle    _08396e_jump
		mov    $0x000010,%esi

	_08396e_jump:
		lea    -0x000020(%ebp),%eax
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%ecx
		push   %eax
		mov    %esi,%edx
		mov    (%edi),%eax
		call   _0836cc_func
		test   %eax,%eax
		jle    _08398b_jump
		mov    (%edi),%eax
		inc    %eax
		inc    %esi
		mov    %eax,(%edi)

	_08398b_jump:
		mov    -0x000020(%ebp),%eax
		mov    -0x000022(%ebp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		or     %eax,%edx
		mov    -0x00001e(%ebp),%eax
		sar    $0x000010,%eax
		or     %eax,%edx
		mov    -0x00001c(%ebp),%eax
		sar    $0x000010,%eax
		or     %edx,%eax
		jne    _0839c5_jump
		mov    0x000008(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    0x00000c(%ebp),%edx
		movl   $0x000000,(%edi)
		cmp    $0x000046,%edx
		jne    _0839c5_jump
		sub    -0x000010(%ebp),%esi

	_0839c5_jump:
		cmp    $0x000001,%esi
		jge    _0839d1_jump
		mov    $0x000001,%esi
		jmp    _0839db_jump

	_0839d1_jump:
		cmp    $0x000011,%esi
		jle    _0839db_jump
		mov    $0x000011,%esi

	_0839db_jump:
		lea    -0x000020(%ebp),%eax
		lea    -0x000034(%ebp),%edx
		mov    0x000010(%ebp),%edi
		mov    %esi,%ebx
		lea    -0x000034(%ebp),%esi
		call   _083ca3_func
		push   %edi

	_0839ef_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _083a0b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0839ef_jump

	_083a0b_jump:
		pop    %edi

	_083a0c_jump:
		mov    %edi,%eax
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    $0x00000c

	_083a17_jump:
		xor    %eax,%eax
		ret    



_083a1a_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		mov    %ebx,%eax
		and    $0x00001f,%eax
		cmp    $0x000008,%eax
		je     _083a3a_jump
		test   %edx,%edx
		jne    _083a3a_jump
		or     $0x001080,%ax
		jmp    _083a3e_jump

	_083a3a_jump:
		or     $0x001040,%ax

	_083a3e_jump:
		lea    -0x000008(%ebp),%edx
		call   _07ef70_func
		mov    %ebp,%esp
		pop    %ebp
		ret    



_083a5c_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		test   %edx,%edx
		jg     _083a7d_jump
		mov    $0x00000a,%ebx
		call   _083a1a_func
		jmp    _083bed_jump

	_083a7d_jump:
		cmpb   $0x000000,_0bd271_data
		je     _083a92_jump
		mov    %edi,%eax
		call   _083dc4_func
		jmp    _083bed_jump

	_083a92_jump:
		lea    -0x000024(%ebp),%ebx
		mov    %edi,%eax
		mov    $0xbfe00000,%ecx
		call   _07ef1d_func
		mov    %eax,%edi
		xor    %ebx,%ebx
		mov    %edx,%esi
		call   _0780a8_func
		mov    $0x667f3bcd,%ebx
		mov    $0x3fe6a09e,%ecx
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07a1e6_func
		jle    _083ae1_jump
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _0780a8_func
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		jmp    _083aee_jump

	_083ae1_jump:
		mov    -0x000024(%ebp),%edx
		mov    -0x000018(%ebp),%edi
		dec    %edx
		mov    -0x000014(%ebp),%esi
		mov    %edx,-0x000024(%ebp)

	_083aee_jump:
		mov    $0x3fe00000,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   _07825f_func
		mov    $0x3fe00000,%ecx
		xor    %ebx,%ebx
		call   _0780a8_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		call   _07885a_func
		mov    %eax,-0x000018(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edx,-0x000014(%ebp)
		call   _07825f_func
		mov    %eax,%edi
		mov    %edx,%esi
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07825f_func
		mov    $_0c10c4_data,%ebx
		mov    $0x000002,%ecx
		mov    %eax,-0x000020(%ebp)
		mov    %edx,-0x00001c(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07f159_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000020(%ebp),%eax
		mov    -0x00001c(%ebp),%edx
		call   _07825f_func
		mov    $_0c10dc_data,%ebx
		mov    $0x000003,%ecx
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07f159_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _07885a_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		call   _0780a8_func
		mov    -0x000024(%ebp),%ebx
		mov    %eax,%edi
		mov    %edx,%esi
		test   %ebx,%ebx
		je     _083bf1_jump
		mov    %ebx,%eax
		mov    $0xbf2bd010,%ecx
		call   _078062_func
		mov    $0x5c610ca9,%ebx
		mov    %eax,-0x000020(%ebp)
		mov    %edx,-0x00001c(%ebp)
		call   _07825f_func
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _0780a8_func
		mov    $0x3fe63000,%ecx
		mov    %eax,%esi
		mov    %edx,%edi
		xor    %ebx,%ebx
		mov    -0x000020(%ebp),%eax
		mov    -0x00001c(%ebp),%edx
		call   _07825f_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %esi,%eax
		mov    %edi,%edx
		call   _0780a8_func

	_083bed_jump:
		mov    %eax,%edi
		mov    %edx,%esi

	_083bf1_jump:
		mov    %edi,%eax
		mov    %esi,%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_083bfe_func:
		push   %edi
		push   %ecx
		call   _083d0d_data
		inc    %eax
		lea    (%edi,%eax,8),%edi
		mov    (%edx),%ecx
		mov    0x000004(%edx),%edx
		sub    %eax,%eax

	_083c10_jump:
		cmp    %cs:(%edi),%edx
		jne    _083c19_jump
		cmp    %cs:0x000004(%edi),%ecx

	_083c19_jump:
		jb     _083c21_jump
		add    $0x000008,%edi
		inc    %eax
		jmp    _083c10_jump

	_083c21_jump:
		sub    $0x000008,%edi

	_083c24_jump:
		cmp    %cs:(%edi),%edx
		jne    _083c2d_jump
		cmp    %cs:0x000004(%edi),%ecx

	_083c2d_jump:
		jae    _083c35_jump
		sub    $0x000008,%edi
		dec    %eax
		jmp    _083c24_jump

	_083c35_jump:
		pop    %ecx
		pop    %edi
		ret    



_083c38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %ebp
		push   %esi
		push   %edx
		mov    %eax,%ebp
		mov    0x000000(%ebp),%ecx
		mov    0x000004(%ebp),%ebx
		mov    %ebx,%ebp
		and    $0xfff00000,%ebp
		xor    %ebp,%ebx
		xor    $0x100000,%ebx
		shr    $0x000014,%ebp
		sub    $0x000433,%ebp
		je     _083c96_jump
		jbe    _083c6c_jump

	_083c63_jump:
		shl    %ecx
		rcl    %ebx
		dec    %ebp
		jne    _083c63_jump
		jmp    _083c96_jump

	_083c6c_jump:
		sub    %eax,%eax
		sub    %esi,%esi

	_083c70_jump:
		shr    %ebx
		rcr    %ecx
		rcr    %eax
		adc    %esi,%esi
		inc    %ebp
		jne    _083c70_jump
		cmp    $0x80000000,%eax
		jb     _083c96_jump
		jne    _083c90_jump
		or     %esi,%esi
		jne    _083c90_jump
		test   $0x000001,%ecx
		je     _083c96_jump

	_083c90_jump:
		add    $0x000001,%ecx
		adc    $0x000000,%ebx

	_083c96_jump:
		pop    %ebp
		mov    %ecx,0x000000(%ebp)
		mov    %ebx,0x000004(%ebp)
		pop    %esi
		pop    %ebp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083ca3_func:
		push   %ebp
		push   %edi
		push   %ecx
		push   %ebx
		mov    %eax,%ebp
		mov    0x000000(%ebp),%ecx
		mov    0x000004(%ebp),%eax
		mov    %edx,%ebp
		add    %ebx,%ebp
		movb   $0x000000,0x000000(%ebp)
		push   %eax

	_083cb8_jump:
		pop    %eax
		mov    $0x002710,%edi
		sub    %edx,%edx
		or     %eax,%eax
		jne    _083ccb_jump
		or     %ecx,%ecx
		jne    _083ccd_jump
		push   %eax
		jmp    _083ce3_jump

	_083ccb_jump:
		div    %edi

	_083ccd_jump:
		xchg   %eax,%ecx
		div    %edi
		xchg   %eax,%ecx
		push   %eax
		mov    %edx,%eax
		mov    $0x000064,%dl
		div    %dl
		mov    %ah,%dl
		mov    $0x000000,%ah
		aam    $0x00000a
		xchg   %eax,%edx
		mov    $0x000000,%ah
		aam    $0x00000a

	_083ce3_jump:
		add    $0x003030,%ax
		add    $0x003030,%dx
		sub    $0x000004,%ebp
		mov    %al,0x000003(%ebp)
		dec    %ebx
		je     _083d07_jump
		mov    %ah,0x000002(%ebp)
		dec    %ebx
		je     _083d07_jump
		mov    %dl,0x000001(%ebp)
		dec    %ebx
		je     _083d07_jump
		mov    %dh,0x000000(%ebp)
		dec    %ebx
		jne    _083cb8_jump

	_083d07_jump:
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %ebp
		ret    

.data

_083d0d_data:
		.ascii  "\xe8\xb0"
		.fill   0xf
		.ascii  "\x01"
		.fill   0x7
		.ascii  "\x0a"
		.fill   0x7
		.ascii  "\x64"
		.fill   0x7
		.ascii  "\xe8\x03"
		.fill   0x6
		.ascii  "\x10\x27"
		.fill   0x6
		.ascii  "\xa0\x86\x01"
		.fill   0x5
		.ascii  "\x40\x42\x0f"
		.fill   0x5

_083d56_data:
		.ascii  "\x80\x96\x98"
		.fill   0x6
		.ascii  "\xe1\xf5\x05"
		.fill   0x5
		.ascii  "\xca\x9a\x3b\x02"
		.fill   0x4
		.ascii  "\xe4\x0b\x54\x17"
		.fill   0x4
		.ascii  "\xe8\x76\x48\xe8"
		.fill   0x4
		.ascii  "\x10\xa5\xd4\x18\x09\x00\x00\x00"
		.ascii  "\xa0\x72\x4e\xf3\x5a\x00\x00\x00"
		.ascii  "\x40\x7a\x10\x7e\x8d\x03\x00\x00"
		.ascii  "\x80\xc6\xa4\xf2\x86\x23\x00\x00"
		.ascii  "\x00\xc1"
		.ascii   "oxEc"
		.ascii  "\x01\x00\x00\x8a\x5d\xb3\xb6\xe0"
		.ascii  "\x0d\x00\x00\x64\xa7\x04\x23\xc7"
		.ascii  "\x8a\x00\x00\xe8\x89\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff"

_083dc2_data:
		.ascii  "\x5f\xc3"

.text



_083dc4_func:
		fldln2 
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		fyl2x  
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    

.data

_090000_data:
		.ascii  "\x01\x01\x01\x00"

_090004_data:
		.fill   0x4

_090008_data:
		.ascii  "\xff\xff\x00\x00"

_09000c_data:
		.fill   0x4

_090010_data:
		.fill   0x4

_090014_data:
		.fill   0x4

_090018_data:
		.fill   0x4

_09001c_data:
		.fill   0xc
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e

_091908_data:
		.fill   0xe

_091916_data:
		.fill   0xc

_091922_data:
		.fill   0x4

_091926_data:
		.fill   0x4

_09192a_data:
		.fill   0x4

_09192e_data:
		.fill   0x4

_091932_data:
		.fill   0x4

_091936_data:
		.fill   0x4

_09193a_data:
		.fill   0x4

_09193e_data:
		.fill   0x10

_09194e_data:
		.fill   0x4
		.ascii  "\x80\x3e\x00\x00\x00\x7d\x00\x00"
		.ascii  "\x80\xbb\x00\x00"

_09195e_data:
		.ascii  "\x00"

_09195f_data:
		.ascii  "\x00"

_091960_data:
		.ascii  "\x00"

_091961_data:
		.ascii  "\x00"

_091962_data:
		.ascii  "\x00"

_091963_data:
		.fill   0x191

_091af4_data:
		.fill   0x4
		.ascii  "\x40\x01\x00\x00\x80\x02\x00\x00"
		.ascii  "\xc0\x03\x00\x00\x00\x05\x00\x00"
		.ascii  "\x40\x06\x00\x00\x80\x07\x00\x00"
		.ascii  "\xc0\x08\x00\x00\x00\x0a\x00\x00"
		.ascii  "\x40\x0b\x00\x00\x80\x0c\x00\x00"
		.ascii  "\xc0\x0d\x00\x00\x00\x0f\x00\x00"
		.ascii  "\x40\x10\x00\x00\x80\x11\x00\x00"
		.ascii  "\xc0\x12\x00\x00\x00\x14\x00\x00"
		.ascii  "\x40\x15\x00\x00\x80\x16\x00\x00"
		.ascii  "\xc0\x17\x00\x00\x00\x19\x00\x00"
		.ascii  "\x40\x1a\x00\x00\x80\x1b\x00\x00"
		.ascii  "\xc0\x1c\x00\x00\x00\x1e\x00\x00"
		.ascii  "\x40\x1f\x00\x00\x80\x20\x00\x00"
		.ascii  "\xc0\x21\x00\x00\x00\x23\x00\x00"
		.ascii  "\x40\x24\x00\x00\x80\x25\x00\x00"
		.ascii  "\xc0\x26\x00\x00\x00\x28\x00\x00"
		.ascii  "\x40\x29\x00\x00\x80\x2a\x00\x00"
		.ascii  "\xc0\x2b\x00\x00\x00\x2d\x00\x00"
		.ascii  "\x40\x2e\x00\x00\x80\x2f\x00\x00"
		.ascii  "\xc0\x30\x00\x00\x00\x32\x00\x00"
		.ascii  "\x40\x33\x00\x00\x80\x34\x00\x00"
		.ascii  "\xc0\x35\x00\x00\x00\x37\x00\x00"
		.ascii  "\x40\x38\x00\x00\x80\x39\x00\x00"
		.ascii  "\xc0\x3a\x00\x00\x00\x3c\x00\x00"
		.ascii  "\x40\x3d\x00\x00\x80\x3e\x00\x00"
		.ascii  "\xc0\x3f\x00\x00\x00\x41\x00\x00"
		.ascii  "\x40\x42\x00\x00\x80\x43\x00\x00"
		.ascii  "\xc0\x44\x00\x00\x00\x46\x00\x00"
		.ascii  "\x40\x47\x00\x00\x80\x48\x00\x00"
		.ascii  "\xc0\x49\x00\x00\x00\x4b\x00\x00"
		.ascii  "\x40\x4c\x00\x00\x80\x4d\x00\x00"
		.ascii  "\xc0\x4e\x00\x00\x00\x50\x00\x00"
		.ascii  "\x40\x51\x00\x00\x80\x52\x00\x00"
		.ascii  "\xc0\x53\x00\x00\x00\x55\x00\x00"
		.ascii  "\x40\x56\x00\x00\x80\x57\x00\x00"
		.ascii  "\xc0\x58\x00\x00\x00\x5a\x00\x00"
		.ascii  "\x40\x5b\x00\x00\x80\x5c\x00\x00"
		.ascii  "\xc0\x5d\x00\x00\x00\x5f\x00\x00"
		.ascii  "\x40\x60\x00\x00\x80\x61\x00\x00"
		.ascii  "\xc0\x62\x00\x00\x00\x64\x00\x00"
		.ascii  "\x40\x65\x00\x00\x80\x66\x00\x00"
		.ascii  "\xc0\x67\x00\x00\x00\x69\x00\x00"
		.ascii  "\x40\x6a\x00\x00\x80\x6b\x00\x00"
		.ascii  "\xc0\x6c\x00\x00\x00\x6e\x00\x00"
		.ascii  "\x40\x6f\x00\x00\x80\x70\x00\x00"
		.ascii  "\xc0\x71\x00\x00\x00\x73\x00\x00"
		.ascii  "\x40\x74\x00\x00\x80\x75\x00\x00"
		.ascii  "\xc0\x76\x00\x00\x00\x78\x00\x00"
		.ascii  "\x40\x79\x00\x00\x80\x7a\x00\x00"
		.ascii  "\xc0\x7b\x00\x00\x00\x7d\x00\x00"
		.ascii  "\x40\x7e\x00\x00\x80\x7f\x00\x00"
		.ascii  "\xc0\x80\x00\x00\x00\x82\x00\x00"
		.ascii  "\x40\x83\x00\x00\x80\x84\x00\x00"
		.ascii  "\xc0\x85\x00\x00\x00\x87\x00\x00"
		.ascii  "\x40\x88\x00\x00\x80\x89\x00\x00"
		.ascii  "\xc0\x8a\x00\x00\x00\x8c\x00\x00"
		.ascii  "\x40\x8d\x00\x00\x80\x8e\x00\x00"
		.ascii  "\xc0\x8f\x00\x00\x00\x91\x00\x00"
		.ascii  "\x40\x92\x00\x00\x80\x93\x00\x00"
		.ascii  "\xc0\x94\x00\x00\x00\x96\x00\x00"
		.ascii  "\x40\x97\x00\x00\x80\x98\x00\x00"
		.ascii  "\xc0\x99\x00\x00\x00\x9b\x00\x00"
		.ascii  "\x40\x9c\x00\x00\x80\x9d\x00\x00"
		.ascii  "\xc0\x9e\x00\x00\x00\xa0\x00\x00"
		.ascii  "\x40\xa1\x00\x00\x80\xa2\x00\x00"
		.ascii  "\xc0\xa3\x00\x00\x00\xa5\x00\x00"
		.ascii  "\x40\xa6\x00\x00\x80\xa7\x00\x00"
		.ascii  "\xc0\xa8\x00\x00\x00\xaa\x00\x00"
		.ascii  "\x40\xab\x00\x00\x80\xac\x00\x00"
		.ascii  "\xc0\xad\x00\x00\x00\xaf\x00\x00"
		.ascii  "\x40\xb0\x00\x00\x80\xb1\x00\x00"
		.ascii  "\xc0\xb2\x00\x00\x00\xb4\x00\x00"
		.ascii  "\x40\xb5\x00\x00\x80\xb6\x00\x00"
		.ascii  "\xc0\xb7\x00\x00\x00\xb9\x00\x00"
		.ascii  "\x40\xba\x00\x00\x80\xbb\x00\x00"
		.ascii  "\xc0\xbc\x00\x00\x00\xbe\x00\x00"
		.ascii  "\x40\xbf\x00\x00\x80\xc0\x00\x00"
		.ascii  "\xc0\xc1\x00\x00\x00\xc3\x00\x00"
		.ascii  "\x40\xc4\x00\x00\x80\xc5\x00\x00"
		.ascii  "\xc0\xc6\x00\x00\x00\xc8\x00\x00"
		.ascii  "\x40\xc9\x00\x00\x80\xca\x00\x00"
		.ascii  "\xc0\xcb\x00\x00\x00\xcd\x00\x00"
		.ascii  "\x40\xce\x00\x00\x80\xcf\x00\x00"
		.ascii  "\xc0\xd0\x00\x00\x00\xd2\x00\x00"
		.ascii  "\x40\xd3\x00\x00\x80\xd4\x00\x00"
		.ascii  "\xc0\xd5\x00\x00\x00\xd7\x00\x00"
		.ascii  "\x40\xd8\x00\x00\x80\xd9\x00\x00"
		.ascii  "\xc0\xda\x00\x00\x00\xdc\x00\x00"
		.ascii  "\x40\xdd\x00\x00\x80\xde\x00\x00"
		.ascii  "\xc0\xdf\x00\x00\x00\xe1\x00\x00"
		.ascii  "\x40\xe2\x00\x00\x80\xe3\x00\x00"
		.ascii  "\xc0\xe4\x00\x00\x00\xe6\x00\x00"
		.ascii  "\x40\xe7\x00\x00\x80\xe8\x00\x00"
		.ascii  "\xc0\xe9\x00\x00\x00\xeb\x00\x00"
		.ascii  "\x40\xec\x00\x00\x80\xed\x00\x00"
		.ascii  "\xc0\xee\x00\x00\x00\xf0\x00\x00"
		.ascii  "\x40\xf1\x00\x00\x80\xf2\x00\x00"
		.ascii  "\xc0\xf3\x00\x00\x00\xf5\x00\x00"
		.ascii  "\x40\xf6\x00\x00\x80\xf7\x00\x00"
		.ascii  "\xc0\xf8\x00\x00"

_091e14_data:
		.fill   0x4
		.ascii  "\x50\x00\x00\x00\xa0\x00\x00\x00"
		.ascii  "\xf0\x00\x00\x00\x40\x01\x00\x00"
		.ascii  "\x90\x01\x00\x00\xe0\x01\x00\x00"
		.ascii  "\x30\x02\x00\x00\x80\x02\x00\x00"
		.ascii  "\xd0\x02\x00\x00\x20\x03\x00\x00"
		.ascii  "\x70\x03\x00\x00\xc0\x03\x00\x00"
		.ascii  "\x10\x04\x00\x00\x60\x04\x00\x00"
		.ascii  "\xb0\x04\x00\x00\x00\x05\x00\x00"
		.ascii  "\x50\x05\x00\x00\xa0\x05\x00\x00"
		.ascii  "\xf0\x05\x00\x00\x40\x06\x00\x00"
		.ascii  "\x90\x06\x00\x00\xe0\x06\x00\x00"
		.ascii  "\x30\x07\x00\x00\x80\x07\x00\x00"
		.ascii  "\xd0\x07\x00\x00\x20\x08\x00\x00"
		.ascii  "\x70\x08\x00\x00\xc0\x08\x00\x00"
		.ascii  "\x10\x09\x00\x00\x60\x09\x00\x00"
		.ascii  "\xb0\x09\x00\x00\x00\x0a\x00\x00"
		.ascii  "\x50\x0a\x00\x00\xa0\x0a\x00\x00"
		.ascii  "\xf0\x0a\x00\x00\x40\x0b\x00\x00"
		.ascii  "\x90\x0b\x00\x00\xe0\x0b\x00\x00"
		.ascii  "\x30\x0c\x00\x00\x80\x0c\x00\x00"
		.ascii  "\xd0\x0c\x00\x00\x20\x0d\x00\x00"
		.ascii  "\x70\x0d\x00\x00\xc0\x0d\x00\x00"
		.ascii  "\x10\x0e\x00\x00\x60\x0e\x00\x00"
		.ascii  "\xb0\x0e\x00\x00\x00\x0f\x00\x00"
		.ascii  "\x50\x0f\x00\x00\xa0\x0f\x00\x00"
		.ascii  "\xf0\x0f\x00\x00\x40\x10\x00\x00"
		.ascii  "\x90\x10\x00\x00\xe0\x10\x00\x00"
		.ascii  "\x30\x11\x00\x00\x80\x11\x00\x00"
		.ascii  "\xd0\x11\x00\x00\x20\x12\x00\x00"
		.ascii  "\x70\x12\x00\x00\xc0\x12\x00\x00"
		.ascii  "\x10\x13\x00\x00\x60\x13\x00\x00"
		.ascii  "\xb0\x13\x00\x00\x00\x14\x00\x00"
		.ascii  "\x50\x14\x00\x00\xa0\x14\x00\x00"
		.ascii  "\xf0\x14\x00\x00\x40\x15\x00\x00"
		.ascii  "\x90\x15\x00\x00\xe0\x15\x00\x00"
		.ascii  "\x30\x16\x00\x00\x80\x16\x00\x00"
		.ascii  "\xd0\x16\x00\x00\x20\x17\x00\x00"
		.ascii  "\x70\x17\x00\x00\xc0\x17\x00\x00"
		.ascii  "\x10\x18\x00\x00\x60\x18\x00\x00"
		.ascii  "\xb0\x18\x00\x00\x00\x19\x00\x00"
		.ascii  "\x50\x19\x00\x00\xa0\x19\x00\x00"
		.ascii  "\xf0\x19\x00\x00\x40\x1a\x00\x00"
		.ascii  "\x90\x1a\x00\x00\xe0\x1a\x00\x00"
		.ascii  "\x30\x1b\x00\x00\x80\x1b\x00\x00"
		.ascii  "\xd0\x1b\x00\x00\x20\x1c\x00\x00"
		.ascii  "\x70\x1c\x00\x00\xc0\x1c\x00\x00"
		.ascii  "\x10\x1d\x00\x00\x60\x1d\x00\x00"
		.ascii  "\xb0\x1d\x00\x00\x00\x1e\x00\x00"
		.ascii  "\x50\x1e\x00\x00\xa0\x1e\x00\x00"
		.ascii  "\xf0\x1e\x00\x00\x40\x1f\x00\x00"
		.ascii  "\x90\x1f\x00\x00\xe0\x1f\x00\x00"
		.ascii  "\x30\x20\x00\x00\x80\x20\x00\x00"
		.ascii  "\xd0\x20\x00\x00\x20\x21\x00\x00"
		.ascii  "\x70\x21\x00\x00\xc0\x21\x00\x00"
		.ascii  "\x10\x22\x00\x00\x60\x22\x00\x00"
		.ascii  "\xb0\x22\x00\x00\x00\x23\x00\x00"
		.ascii  "\x50\x23\x00\x00\xa0\x23\x00\x00"
		.ascii  "\xf0\x23\x00\x00\x40\x24\x00\x00"
		.ascii  "\x90\x24\x00\x00\xe0\x24\x00\x00"
		.ascii  "\x30\x25\x00\x00\x80\x25\x00\x00"
		.ascii  "\xd0\x25\x00\x00\x20\x26\x00\x00"
		.ascii  "\x70\x26\x00\x00\xc0\x26\x00\x00"
		.ascii  "\x10\x27\x00\x00\x60\x27\x00\x00"
		.ascii  "\xb0\x27\x00\x00\x00\x28\x00\x00"
		.ascii  "\x50\x28\x00\x00\xa0\x28\x00\x00"
		.ascii  "\xf0\x28\x00\x00\x40\x29\x00\x00"
		.ascii  "\x90\x29\x00\x00\xe0\x29\x00\x00"
		.ascii  "\x30\x2a\x00\x00\x80\x2a\x00\x00"
		.ascii  "\xd0\x2a\x00\x00\x20\x2b\x00\x00"
		.ascii  "\x70\x2b\x00\x00\xc0\x2b\x00\x00"
		.ascii  "\x10\x2c\x00\x00\x60\x2c\x00\x00"
		.ascii  "\xb0\x2c\x00\x00\x00\x2d\x00\x00"
		.ascii  "\x50\x2d\x00\x00\xa0\x2d\x00\x00"
		.ascii  "\xf0\x2d\x00\x00\x40\x2e\x00\x00"
		.ascii  "\x90\x2e\x00\x00\xe0\x2e\x00\x00"
		.ascii  "\x30\x2f\x00\x00\x80\x2f\x00\x00"
		.ascii  "\xd0\x2f\x00\x00\x20\x30\x00\x00"
		.ascii  "\x70\x30\x00\x00\xc0\x30\x00\x00"
		.ascii  "\x10\x31\x00\x00\x60\x31\x00\x00"
		.ascii  "\xb0\x31\x00\x00\x00\x32\x00\x00"
		.ascii  "\x50\x32\x00\x00\xa0\x32\x00\x00"
		.ascii  "\xf0\x32\x00\x00\x40\x33\x00\x00"
		.ascii  "\x90\x33\x00\x00\xe0\x33\x00\x00"
		.ascii  "\x30\x34\x00\x00\x80\x34\x00\x00"
		.ascii  "\xd0\x34\x00\x00\x20\x35\x00\x00"
		.ascii  "\x70\x35\x00\x00\xc0\x35\x00\x00"
		.ascii  "\x10\x36\x00\x00\x60\x36\x00\x00"
		.ascii  "\xb0\x36\x00\x00\x00\x37\x00\x00"
		.ascii  "\x50\x37\x00\x00\xa0\x37\x00\x00"
		.ascii  "\xf0\x37\x00\x00\x40\x38\x00\x00"
		.ascii  "\x90\x38\x00\x00\xe0\x38\x00\x00"
		.ascii  "\x30\x39\x00\x00\x80\x39\x00\x00"
		.ascii  "\xd0\x39\x00\x00\x20\x3a\x00\x00"
		.ascii  "\x70\x3a\x00\x00\xc0\x3a\x00\x00"
		.ascii  "\x10\x3b\x00\x00\x60\x3b\x00\x00"
		.ascii  "\xb0\x3b\x00\x00\x00\x3c\x00\x00"
		.ascii  "\x50\x3c\x00\x00\xa0\x3c\x00\x00"
		.ascii  "\xf0\x3c\x00\x00\x40\x3d\x00\x00"
		.ascii  "\x90\x3d\x00\x00\xe0\x3d\x00\x00"
		.ascii  "\x30\x3e\x00\x00"

_092134_data:
		.fill   0x4

_092138_data:
		.fill   0x4

_09213c_data:
		.fill   0x8

_092144_data:
		.fill   0x4

_092148_data:
		.fill   0x4

_09214c_data:
		.fill   0x4

_092150_data:
		.fill   0x4

_092154_data:
		.ascii  "\x2b\x5a\x00\x00"

_092158_data:
		.ascii  "\xf5"

_092159_data:
		.ascii  "\xb1\x00\x00\x2b\x5a\x00\x00\x09"
		.ascii  "\x68\x00\x00\xf7\x35\x00\x00\x34"
		.ascii  "\xc2\x00\x00\xe0\x68\x00\x00\xf8"
		.ascii  "\x09\x00\x00\x14\x2b\x01\x00\x46"
		.ascii  "\x68\x00\x00\xaa\x4c\x00\x00\x5a"
		.ascii  "\x93\x01\x00\x35\x47\x00\x00\x38"
		.ascii  "\x2d\x00\x00\x8f\xda\x01\x00\xd9"
		.ascii  "\x23\x00\x00\x82\xc2\x00\x00\x68"
		.ascii  "\xfe\x01\x00\xd6\x81\x00\x00\xf2"
		.ascii  "\x3d\x00\x00\x3e\x80\x02\x00\x32"
		.ascii  "\xd5\x00\x00\x86\x5b\x00\x00\x70"
		.ascii  "\x55\x03\x00\x33\x0a\x02\x00\x12"
		.ascii  "\x23\x00\x00\xa3\x5f\x05\x00\xc5"
		.ascii  "\xc6\x00\x00\x54\x7b\x00\x00\x68"
		.ascii  "\x26\x06\x00\x0c\x58\x00\x00\xef"
		.ascii  "\xbf\x00\x00\x74\x7e\x06\x00\x22"
		.ascii  "\xc5\x00\x00\xef\xfb\x00\x00"

_0921e0_data:
		.fill   0x4

_0921e4_data:
		.ascii  "\x6d\x0f\x00\x00"

_0921e8_data:
		.ascii  "\x5f"

_0921e9_data:
		.ascii  "\x22\x00\x00"

_0921ec_data:
		.ascii  "\x02\x01\x03\x00\x04\x07\x06\x05"
		.ascii  "\x01\x03\x02\x00\x04\x07\x06\x05"
		.ascii  "\x04\x01\x03\x02\x00\x07\x06\x05"

_092204_data:
		.ascii  "\x00\x20\x42\xc2\x42\x42\xc2\xc2"
		.ascii  "\x04\x0b"
		.fill   0x4
		.ascii  "\x03\x13\x00\x00\x4a\xca\x4a\x4a"
		.ascii  "\xca\xca"
		.fill   0x6
		.ascii  "\x0b\x00"
		.ascii   "                                "

_092244_data:
		.ascii  "\x28"

_092245_data:
		.ascii  "\x80"

_092246_data:
		.ascii  "\x03"

_092247_data:
		.ascii  "\x23\x04\x00\x03\x02\x00\x00\x02"
		.ascii  "\x42\x21\x80\x21\x42\x04\x00\x02"
		.ascii  "\x42\x20\x00\x02\x02\x08\x10\x47"
		.ascii  "\x26\x08\x00\x02\x02\x00\x11\x43"
		.ascii  "\x20\x28\x80\x03\x23\x18\x80\x01"
		.ascii  "\x02\x05\x00\x00\x4a\x28\x80\x02"
		.ascii  "\x03\x0b\x80\x22\x42\x28\x80\x02"
		.ascii  "\x03\x0b\x80\x22\x42\x04\x81\x02"
		.ascii  "\x02\x04\x81\x02\x02\x04\x80\x03"
		.ascii  "\x02\x01\x00\x20\x4a\x28\x91\x03"
		.ascii  "\x03\x20\x80\x02\x02\x00\x81\x03"
		.ascii  "\x02\x40\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x00\x02\x02\x00\x40\x02"
		.ascii  "\x02\x00\xc0\x02\x02\x00\x41\x02"
		.ascii  "\x02\x00\x40\x02\x02\x00\x00\x10"
		.ascii  "\x20\x01\x00\x00\x42\x08\x80\x02"
		.ascii  "\x02\x09\xb0\x22\x42\x00\x81\x03"
		.ascii  "\x02\x28\x80\x03\x03\x09\x90\x23"
		.ascii  "\x42\x00\x00\x03\x02\x01\x80\x03"
		.ascii  "\x42\x01\x80\x23\x42\x08\x90\x03"
		.ascii  "\x03\x08\x00\x02\x02\x00\x00\x12"
		.ascii  "\x02\x28\x80\x03\x03\x09\x80\x22"
		.ascii  "\x42\x08\x81\x02\x02\x98\x80\x03"
		.ascii  "\x03\x08\x10\x03\x22\x04\x80\x02"
		.ascii  "\x02\x00\x80\x02\x02\x98\xb0\x00"
		.ascii  "\x03\x09\x90\x23\x42\x19\x90\x23"
		.ascii  "\x42\x28\x90\x03\x02\x00\x80\x02"
		.ascii  "\x02\x20\x80\x02\x02\x28\x80\x03"
		.ascii  "\x03\x28\x80\x02\x03\x04\x02\x03"
		.ascii  "\x22\x05\x00\x23\x42\x28\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x09\x90\x23"
		.ascii  "\x42\x00\xb1\x02\x02\x00\x80\x00"
		.ascii  "\x42\x28\x80\x03\x03\x09\x80\x22"
		.ascii  "\x42\x04\x01\x02\x02\x00\xc0\x02"
		.ascii  "\x02\x08\x10\x03\x23\x28\x80\x03"
		.ascii  "\x03\x09\x80\x03\x43\x28\x00\x23"
		.ascii  "\x03\x09\xb0\x03\x42\x98\x80\x03"
		.ascii  "\x03\x05\x00\x20\x48\x00\x80\x03"
		.ascii  "\x02\x28\x00\x22\x03\x09\x90\x63"
		.ascii  "\x43\x09\x80\x23\x42\x00\x00\x03"
		.ascii  "\x02\x20\x88\x13\x03\x00\x00\x12"
		.ascii  "\x22\x09\x00\x20\x42\x00\x00\x02"
		.ascii  "\x02\x00\x00\x02\x03\x00\x81\x02"
		.ascii  "\x02\x00\x01\x02\x42\x00\x01\x02"
		.ascii  "\x42\x20\x80\x03\x02\x09\x80\x23"
		.ascii  "\x42\x09\x80\x23\x42\x09\x80\x23"
		.ascii  "\x42\x01\x80\x23\x42\x11\x00\x00"
		.ascii  "\x42\x00\x00\x02\x42\x00\x80\x02"
		.ascii  "\x03\x19\x80\x27\x43\x98\xb0\x03"
		.ascii  "\x03\x04\x00\x00\x42\x28\x80\x13"
		.ascii  "\x03\x08\x00\x02\x02\x09\x80\x23"
		.ascii  "\x42\x00\x80\x02\x02\x00\x80\x02"
		.ascii  "\x02\x08\x80\x02\x02\x08\x81\x03"
		.ascii  "\x02\x08\x00\x02\x02\x01\xb0\x12"
		.ascii  "\x42\x00\x00\x06\x32\x01\x00\x22"
		.ascii  "\x42\x00\x80\x02\x02\x09\x10\x23"
		.ascii  "\x43\x08\x80\x02\x02\x00\x80\x03"
		.ascii  "\x02\x01\xc0\x02\x42\x28\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x28\x80\x03"
		.ascii  "\x03\x09\x80\x23\x42\x38\x90\x03"
		.ascii  "\x03\x09\x80\x23\x42\x09\x90\x23"
		.ascii  "\x43\x68\x90\x0b\x23\x00\x00\x12"
		.ascii  "\x42\x00\x88\x03\x02\x08\x80\x03"
		.ascii  "\x02\x08\x80\x03\x02\x08\x80\x03"
		.ascii  "\x02\x08\x80\x07\x02\x05\x10\x63"
		.ascii  "\x42\x00\x80\x03\x02\x28\x80\x02"
		.ascii  "\x03\x00\x00\x03\x02\x00\x11\x43"
		.ascii  "\x20\x09\x80\x22\x42\x01\x00\x02"
		.ascii  "\x42\x00\x00\x12\x22\x00\x89\x03"
		.ascii  "\x02\x05\x00\x22\x42\x00\x81\x03"
		.ascii  "\x02\x00\x00\x13\x42\x00\x02\x12"
		.ascii  "\x22\x11\x00\x00\x4a\x00\x82\x01"
		.ascii  "\x42\x08\x80\x02\x02\x09\x00\x23"
		.ascii  "\x42\x28\x80\x03\x03\x00\x80\x03"
		.ascii  "\x42\x04\x00\x03\x02\xb8\x84\x02"
		.ascii  "\x03\x08\x80\x03\x22\x20\xc0\x03"
		.ascii  "\x03\x30\x80\x03\x03\x00\x89\x03"
		.ascii  "\x02\x00\x89\x03\x02\x08\x80\x03"
		.ascii  "\x03\x10\x00\x00\x02\x00\x00\x03"
		.ascii  "\x42\x00\x08\x03\x02\x00\x08\x03"
		.ascii  "\x02\x00\x00\x12\x42\x00\x01\x02"
		.ascii  "\x42\x00\x00\x02\x02\x00\x00\x12"
		.ascii  "\x02\x28\x80\x03\x23\x00\x00\x02"
		.ascii  "\x02\x00\x10\x43\x20\x00\xb0\x03"
		.ascii  "\x03\x00\xb8\x13\x03\x09\x80\x22"
		.ascii  "\x4a\x05\x00\x03\x42\x28\x80\x1b"
		.ascii  "\x03\x00\xb0\x23\x02\x28\x90\x02"
		.ascii  "\x03\x08\x00\x02\x02\x08\x00\x06"
		.ascii  "\x12\x00\x11\x47\x26\x08\x00\x06"
		.ascii  "\x12\x08\x00\x06\x12\x98\x80\x13"
		.ascii  "\x03\x20\x80\x03\x43\x08\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x28\x90\x02"
		.ascii  "\x03\x08\x80\x03\x03\x01\x00\x22"
		.ascii  "\x42\x98\x84\x03\x03\x08\x00\x02"
		.ascii  "\x02\x08\x81\x03\x02\x19\xf0\x03"
		.ascii  "\x42\x08\x00\x02\x02\x19\x90\x22"
		.ascii  "\x43\x09\xb0\x02\x43\x09\xb0\x22"
		.ascii  "\x43\x28\x10\x03\x03\x09\xb0\x22"
		.ascii  "\x42\x05\x00\x02\x42\x98\x84\x13"
		.ascii  "\x03\x20\x80\x03\x03\x08\x84\x13"
		.ascii  "\x03\x08\x80\x13\x03\x05\x00\x03"
		.ascii  "\x42\x09\x00\x03\x42\x19\x80\x02"
		.ascii  "\x42\x19\x80\x02\x42\x01\x00\x02"
		.ascii  "\x42\x00\x80\x01\x00\x01\x00\x02"
		.ascii  "\x4a\x09\x90\x13\x42\x09\x90\x13"
		.ascii  "\x42\x01\x00\x43\x42\x28\x80\x02"
		.ascii  "\x03\x98\xb0\x03\x03\x00\x10\x83"
		.ascii  "\x42\x11\x80\x22\x4a\x00\x80\x02"
		.ascii  "\x02\x08\x80\x03\x03\x08\x90\x03"
		.ascii  "\x03\x10\x80\x02\x02\x10\xa0\x02"
		.ascii  "\x02\x01\x00\x02\x42\x01\x00\x22"
		.ascii  "\x42\x08\x80\x02\x03\x09\x90\x02"
		.ascii  "\x43\x28\x90\x02\x03\x28\x90\x02"
		.ascii  "\x03\x98\xb0\x00\x02\x00\x80\x03"
		.ascii  "\x02\x08\x00\x02\x02\x08\x00\x02"
		.ascii  "\x02\x08\xa0\x02\x43\x08\xa0\x02"
		.ascii  "\x43\x09\x80\x22\x42\x08\x00\x02"
		.ascii  "\x42\x08\x00\x03\x02\x00\x00\x02"
		.ascii  "\x02\x00\xc0\x03\x02\x05\x00\x00"
		.ascii  "\x42\x28\x00\x23\x02\x08\x00\x06"
		.ascii  "\x12\x08\x00\x06\x12\x08\x00\x06"
		.ascii  "\x12\x08\xc0\x06\x02\x19\x90\x22"
		.ascii  "\x42\x00\x80\x02\x02\x00\x80\x03"
		.ascii  "\x42\x00\x80\x03\x02\x09\x90\x02"
		.ascii  "\x42\x04\xa0\x02\x42\x08\x00\x02"
		.ascii  "\x02\x04\x00\x02\x42\x04\x00\x02"
		.ascii  "\x42\x04\x00\x02\x42\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x01\xb0\x03"
		.ascii  "\x42\x00\xb0\x03\x02\x00\x88\x03"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02"

_09265c_data:
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x4
		.ascii  "\xb0\xff"
		.fill   0x6
		.ascii  "\xc8\x00\x00\x00\xc8\x00\x00\x00"
		.ascii  "\xc4\xff\xc4\xff"
		.fill   0x4
		.ascii  "\x3c"
		.fill   0xb
		.ascii  "\xc4\xff"
		.fill   0x8
		.ascii  "\xce\xff"
		.fill   0xc
		.ascii  "\xce\xff"
		.fill   0x6
		.ascii  "\xce\xff"
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x12
		.ascii  "\xce\xff"
		.fill   0x1c
		.ascii  "\x3c\x00\x00\x00\x96"
		.fill   0xd
		.ascii  "\xce\xff"
		.fill   0xc
		.ascii  "\xce\xff"
		.fill   0x8
		.ascii  "\xc2\x01\xce\xff\x00\x00\x64\x00"
		.ascii  "\x00\x00\xce\xff\xc8"
		.fill   0xf
		.ascii  "\x64"
		.fill   0x1d
		.ascii  "\x96\x00\xce\xff"
		.fill   0x12
		.ascii  "\xb0\xff"
		.fill   0xc
		.ascii  "\xce\xff\xce\xff"
		.fill   0x8
		.ascii  "\xc8"
		.fill   0x1d
		.ascii  "\xce\xff\xce\xff\xce\xff"
		.fill   0x4
		.ascii  "\xb0\xff"
		.fill   0x8
		.ascii  "\xc8\x00\x28\x00\xc8"
		.fill   0x7
		.ascii  "\xce\xff\xce\xff"
		.fill   0x8
		.ascii  "\xc8"
		.fill   0xf
		.ascii  "\x64"
		.fill   0xf
		.ascii  "\x28"
		.fill   0xb
		.ascii  "\xc2\x01"
		.fill   0xa
		.ascii  "\x28"
		.fill   0x19
		.ascii  "\xc8\x00\xc8\x00\x00\x00\xce\xff"
		.fill   0x16
		.ascii  "\xce\xff\xce\xff\xce\xff\x00\x00"
		.ascii  "\x64"
		.fill   0x23

_092868_data:
		.fill   0x4c
		.ascii  "\xce\xff"
		.fill   0x6
		.ascii  "\xce\xff"
		.fill   0x12
		.ascii  "\x2c\x01"
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x2c
		.ascii  "\x78\x00\xce\xff\x00\x00\x96"
		.fill   0x5
		.ascii  "\xc8\x00\xc8"
		.fill   0xb
		.ascii  "\x5e\x01\xce\xff\x00\x00\x2c\x01"
		.fill   0x4
		.ascii  "\xc8\x00\x8c"
		.fill   0x29
		.ascii  "\x32\x00\x00\x00\xce\xff"
		.fill   0x1e
		.ascii  "\x78\x00\xce\xff\xce\xff"
		.fill   0x6
		.ascii  "\x64\x00\x2c\x01\x00\x00\xc8"
		.fill   0x5
		.ascii  "\x78"
		.fill   0xd
		.ascii  "\x96\x00\x96\x00\x00\x00\xce\xff"
		.ascii  "\xce\xff"
		.fill   0x8
		.ascii  "\x78\x00\x78"
		.fill   0x5
		.ascii  "\x78\x00\xc8\x00\xc8"
		.fill   0x13
		.ascii  "\xc8"
		.fill   0x1b
		.ascii  "\x96\x00\x00\x00\x32"
		.fill   0xb
		.ascii  "\x5e\x01"
		.fill   0xa
		.ascii  "\x96"
		.fill   0xb
		.ascii  "\x32\x00\x64\x00\x96"
		.fill   0x9
		.ascii  "\xc8\x00\xc8"
		.fill   0x2d
		.ascii  "\x32"
		.fill   0x19

_092a74_data:
		.ascii  "\x54\x00\x2c\x00\x0d\x11\x04\xff"
		.ascii  "\x03\x00\x04\x00\x03\x0d\x03\x00"
		.ascii  "\x0c\x00\x0b\x00\x10\x10\x03\x04"
		.ascii  "\x07\x00\x06\x00\x1a\x19\x01\xff"
		.ascii  "\x02\x00\x01\x00\x08\x0d\x03\x02"
		.ascii  "\x4c\x00\x3f\x00\x0a\x16\x01\xff"
		.ascii  "\x05\x00\x08\x00\x0c\x08\x03\x00"
		.ascii  "\x06\x00\xf6\xff\x0c\x23\x03\x02"
		.ascii  "\x01\x00\x07\x00\x15\x05\x03\x04"
		.ascii  "\x47\x00\x31\x00\x12\x06\x01\xff"
		.ascii  "\x06\x00\xf6\xff\x0c\x23\x03\x02"
		.ascii  "\x01\x00\x07\x00\x15\x05\x03\x04"
		.ascii  "\x47\x00\x31\x00\x12\x06\x01\xff"
		.ascii  "\xeb\xff\xed\xff\x40\x40\x03\x00"
		.ascii  "\x69\x00\xa8\x00\x30\x3c\x01\xff"
		.ascii  "\x61\x00\x81\x00\x02\x02\x01\xff"
		.ascii  "\x08\x00\x06\x00\x14\x14\x03\x00"
		.ascii  "\x06\x00\x05\x00\x0a\x0b\x03\x00"
		.ascii  "\x4a\x00\x49\x00\x0d\x0e\x01\xff"
		.ascii  "\x09\x00\x0a\x00\x10\x10\x03\x00"
		.ascii  "\x0e\x00\x01\x00\x0e\x2c\x03\x00"
		.ascii  "\x09\x00\x0a\x00\x10\x10\x03\x00"
		.ascii  "\x08\x00\x06\x00\x14\x14\x03\x00"
		.ascii  "\x40\x00\x30\x00\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x0b\x00\x0a\x00"
		.ascii  "\x10\x10\x03\x00\x10\x00\x1a\x00"
		.ascii  "\x30\x26\x03\x00\x0b\x00\x0b\x00"
		.ascii  "\x10\x10\x03\x00\x01\x00\xf9\xff"
		.ascii  "\x0c\x22\x03\x02\x08\x00\x06\x00"
		.ascii  "\x14\x14\x03\x00\x01\x00\xf8\xff"
		.ascii  "\x0d\x1e\x03\x00\x06\x00\x03\x00"
		.ascii  "\x0b\x02\x03\x00\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\x3f\x00\x4d\x00"
		.ascii  "\x15\x0a\x04\xff\x08\x00\x05\x00"
		.ascii  "\x12\x17\x03\x03\x07\x00\x0e\x00"
		.ascii  "\x06\x07\x03\x00\x00\x00\x02\x00"
		.ascii  "\xd0\x06\x03\x03\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x47\x00\x38\x00"
		.ascii  "\x13\x12\x01\xff\x47\x00\x38\x00"
		.ascii  "\x13\x12\x01\xff\x4b\x00\x3a\x00"
		.ascii  "\x0c\x0c\x01\xff\x06\x00\x04\x00"
		.ascii  "\x18\x19\x06\x04\x02\x00\x04\x00"
		.ascii  "\x12\x0e\x03\x05\x08\x00\x08\x00"
		.ascii  "\x31\x33\x03\x06\x12\x00\x09\x00"
		.ascii  "\x10\x10\x03\x01\x13\x00\x02\x00"
		.ascii  "\x0e\x44\x03\x03\xfd\xff\xfe\xff"
		.ascii  "\x0b\x07\x03\x0a\x0a\x00\x06\x00"
		.ascii  "\x10\x13\x03\x00\x0b\x00\x07\x00"
		.ascii  "\x0e\x11\x03\x01\x0a\x00\x08\x00"
		.ascii  "\x11\x10\x03\x02\x18\x00\x18\x00"
		.ascii  "\x36\x35\x03\x04\x4c\x00\x3c\x00"
		.ascii  "\x08\x09\x01\xff\x15\x00\x14\x00"
		.ascii  "\x38\x38\x03\x00\x3f\x00\x28\x00"
		.ascii  "\x2b\x2d\x01\xff\x7b\x00\x82\x00"
		.ascii  "\x2b\x2d\x01\xff\xa8\x00\x8c\x00"
		.ascii  "\x20\x30\x01\xff\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x0a\x00\x06\x00"
		.ascii  "\x13\x0b\x03\x00\x0a\x00\x06\x00"
		.ascii  "\x13\x0b\x03\x01\x02\x00\x14\x00"
		.ascii  "\x20\x25\x03\x02\x0b\x00\x0d\x00"
		.ascii  "\x3b\x0c\x03\x03\x12\x00\x0e\x00"
		.ascii  "\x29\x29\x03\x0e\x12\x00\x0e\x00"
		.ascii  "\x29\x29\x03\x0f"
		.fill   0x4
		.ascii  "\x13\x20\x06\x0a\x04\x00\x00\x00"
		.ascii  "\x13\x20\x06\x0b\x4a\x00\x49\x00"
		.ascii  "\x0d\x0e\x01\xff\x46\x00\x44\x00"
		.ascii  "\x0e\x0c\x01\xff\x0f\x00\x03\x00"
		.ascii  "\x0c\x2a\x03\x00\x6d\x00\x33\x00"
		.ascii  "\x36\x38\x01\xff\x6f\x00\x98\x00"
		.ascii  "\x33\x17\x01\xff\x4f\x00\x53\x00"
		.ascii  "\x74\x26\x01\xff\x32\x00\x72\x00"
		.ascii  "\x34\x0f\x01\xff\x47\x00\x8c\x00"
		.ascii  "\x36\x15\x01\xff\x47\x00\x8c\x00"
		.ascii  "\x36\x15\x01\x00\x07\x00\x06\x00"
		.ascii  "\x1a\x19\x01\xff\x44\x00\x35\x00"
		.ascii  "\x21\x22\x01\xff\x04\x00\x01\x00"
		.ascii  "\x10\x1c\x03\x02\x09\x00\x09\x00"
		.ascii  "\x24\x09\x03\x00\x40\x00\x30\x00"
		.ascii  "\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x03\x00\x03\x00"
		.ascii  "\x0c\x0c\x03\x04\x07\x00\x04\x00"
		.ascii  "\x0d\x0b\x03\x06\x04\x00\x03\x00"
		.ascii  "\x11\x11\x03\x07\x0c\x00\x0b\x00"
		.ascii  "\x1f\x1c\x03\x0b\x0f\x00\x14\x00"
		.ascii  "\x16\x2f\x03\x0c\x0d\x00\xfa\xff"
		.ascii  "\x35\x21\x03\x10\x06\x00\x07\x00"
		.ascii  "\x1e\x0e\x03\x11\x47\x00\x31\x00"
		.ascii  "\x12\x06\x01\xff"
		.fill   0x4
		.ascii  "\x4b\x50\x03\x02\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x07\x00\x05\x00"
		.ascii  "\x13\x13\x01\xff\x02\x00\x01\x00"
		.ascii  "\x08\x0d\x03\x02\x4c\x00\x3f\x00"
		.ascii  "\x0a\x16\x01\xff\x07\x00\x06\x00"
		.ascii  "\x1a\x19\x01\xff\x00\x00\x02\x00"
		.ascii  "\xd0\x06\x03\x03\x04\x00\x04\x00"
		.ascii  "\x10\x10\x03\x00\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x02\x00\xff\xff"
		.ascii  "\x02\x1b\x03\x01\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x12\x00\x07\x00"
		.ascii  "\x20\x1d\x03\x02\x07\x00\x00\x00"
		.ascii  "\x1a\x17\x03\x05\x09\x00\x0b\x00"
		.ascii  "\x21\x0d\x01\xff\x09\x00\x0b\x00"
		.ascii  "\x21\x0d\x01\xff\xfa\xff\x7f\xff"
		.ascii  "\x16\x8b\x03\x03\x10\x00\x04\x00"
		.ascii  "\x08\x08\x03\x00\xf8\xff\x04\x00"
		.ascii  "\x08\x08\x03\x01\x00\x00\x04\x00"
		.ascii  "\x08\x08\x03\x02\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x04\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x05\x04\x00\x0c\x00"
		.ascii  "\x17\x06\x03\x00\x07\x00\x0c\x00"
		.ascii  "\x18\x08\x03\x01\x04\x00\x0c\x00"
		.ascii  "\x17\x06\x03\x00\x07\x00\x0c\x00"
		.ascii  "\x18\x08\x03\x01\x0e\x00\x05\x00"
		.ascii  "\x5d\x0c\x03\x08\x03\x00\x02\x00"
		.ascii  "\x16\x05\x03\x01\x0c\x00\xd8\xff"
		.ascii  "\x3c\x99\x01\xff\x48\x00\xd8\xff"
		.ascii  "\x3c\x99\x01\xff\x69\x00\xa8\x00"
		.ascii  "\x30\x3c\x01\xff\xa8\x00\x8c\x00"
		.ascii  "\x20\x30\x01\xff\x0a\x00\x06\x00"
		.ascii  "\x15\x10\x03\x00\x05\x00\x04\x00"
		.ascii  "\x0c\x0c\x03\x03\x06\x00\x04\x00"
		.ascii  "\x0c\x0c\x03\x06\x0b\x00\x07\x00"
		.ascii  "\x17\x12\x03\x08\x07\x00\x02\x00"
		.ascii  "\x10\x09\x03\x02\x0c\x00\x07\x00"
		.ascii  "\x2f\x0f\x03\x04\x0f\x00\x07\x00"
		.ascii  "\x38\x11\x03\x05\x04\x00\x02\x00"
		.ascii  "\x06\x32\x03\x07\x0a\x00\x16\x00"
		.ascii  "\x38\x07\x03\x08\x16\x00\x12\x00"
		.ascii  "\x16\x32\x03\x06\x10\x00\x02\x00"
		.ascii  "\x2b\x1e\x03\x01\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x40\x00\x30\x00"
		.ascii  "\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x02\x00\x02\x00"
		.ascii  "\x02\x28\x03\x01\x01\x00\x01\x00"
		.ascii  "\x1f\x02\x03\x01\xf3\xff\xf3\xff"
		.ascii  "\x30\x2b\x03\x03\x05\x00\x02\x00"
		.ascii  "\x1e\x11\x03\x07\xf3\xff\xf3\xff"
		.ascii  "\x30\x2b\x03\x03\x05\x00\x02\x00"
		.ascii  "\x1e\x11\x03\x07\x0d\x00\x04\x00"
		.ascii  "\x07\x08\x03\x08\x00\x00\x50\x00"
		.ascii  "\x80\x01\x01\xff\x40\x00\x00\x00"
		.ascii  "\x20\x80\x01\xff\x06\x00\x05\x00"
		.ascii  "\x07\x11\x03\x01\x07\x00\xf8\xff"
		.ascii  "\x09\x22\x03\x03\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x54\x00\x2a\x00"
		.ascii  "\x0d\x62\x04\xff\x05\x00\x01\x00"
		.ascii  "\x02\x13\x03\x00\x10\x00\x04\x00"
		.ascii  "\x08\x08\x03\x00\xf8\xff\x04\x00"
		.ascii  "\x08\x08\x03\x01\x00\x00\x04\x00"
		.ascii  "\x08\x08\x03\x02\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x04\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x05\x0b\x00\xba\x00"
		.ascii  "\x38\x22\x01\xff\x10\x00\xe8\xff"
		.ascii  "\x02\x51\x03"
		.fill   0x79

_0930b4_data:
		.fill   0xd
		.ascii  "\x10\x02\x08\x03\x08\x04\x10\x06"
		.ascii  "\x08\x00\x00\x07\x10\x09\x08\x0a"
		.ascii  "\x10\x0c\x08"
		.fill   0x1c
		.ascii  "\x0d\x08\x00\x00\x0e\x08\x0f\x08"
		.fill   0x4
		.ascii  "\x10\x08\x11\x08"
		.fill   0x4
		.ascii  "\x12\x08\x13\x08\x14\x08"
		.fill   0x4
		.ascii  "\x15\x08\x00\x00\x16\x08"
		.fill   0x4
		.ascii  "\x17\x20\x1b\x08\x1c\x08\x1d\x08"
		.fill   0xe
		.ascii  "\x1e\x08"
		.fill   0xe
		.ascii  "\x1f\x08"
		.fill   0x4
		.ascii  "\x20\x08\x21\x08\x22\x10"
		.fill   0x4
		.ascii  "\x24\x10\x26\x08"
		.fill   0x4
		.ascii  "\x27\x08"
		.fill   0x10
		.ascii  "\x28\x08\x29\x08\x2a\x08"
		.fill   0x4
		.ascii  "\x2b\x08\x2c\x18\x00\x00\x2f\x18"
		.fill   0x4
		.ascii  "\x32\x20\x36\x08"
		.fill   0x8
		.ascii  "\x37\x08\x00\x00\x38\x08\x00\x00"
		.ascii  "\x39\x08\x3a\x08"
		.fill   0x6
		.ascii  "\x3b\x08\x3c\x08\x3d\x08\x00\x00"
		.ascii  "\x3e\x40\x00\x00\x46\x08\x47\x08"
		.ascii  "\x48\x08\x00\x00\x49\x08\x4a\x18"
		.ascii  "\x4d\x10"
		.fill   0xa
		.ascii  "\x4f\x08"
		.fill   0x4
		.ascii  "\x50\x08"
		.fill   0x4
		.ascii  "\x51\x08"
		.fill   0x8
		.ascii  "\x52\x08\x00\x00\x53\x20"
		.fill   0x4
		.ascii  "\x57\x38\x5e\x08\x5f\x08"
		.fill   0x6
		.ascii  "\x60\x08"
		.fill   0x8
		.ascii  "\x61\x08"
		.fill   0x6
		.ascii  "\x62\x10\x00\x00\x64\x08\x65\x08"
		.ascii  "\x00\x00\x66\x08"
		.fill   0x6
		.ascii  "\x67\x10\x69\x08\x6a\x10\x00\x00"
		.ascii  "\x6c\x10\x6e\x10\x70\x10\x00\x00"
		.ascii  "\x72\x08\x73\x10\x75\x10\x77\x08"
		.ascii  "\x00\x00\x78\x10\x7a\x08\x7b\x08"
		.ascii  "\x00\x00\x7c\x08\x7d\x28\x82\x10"
		.ascii  "\x84\x10"
		.fill   0x10
		.ascii  "\x86\x08"
		.fill   0x4
		.ascii  "\x87\x08"
		.fill   0x4
		.ascii  "\x88\x08\x89\x08\x00\x00\x8a\x08"
		.ascii  "\x8b\x08"
		.fill   0x8
		.ascii  "\x8c\x20"
		.fill   0x8
		.ascii  "\x90\x30\x96\x08\x97\x10\x99\x10"
		.ascii  "\x9b\x20\x00\x00\x9f\x08\xa0\x08"
		.ascii  "\xa1\x10\xa3\x10\xa5\x08\xa6\x08"
		.ascii  "\x00\x00\xa7\x08"
		.fill   0x4
		.ascii  "\xa8\x10\xaa\x10\xac\x10\xae\x10"
		.ascii  "\xb0\x10\xb2\x28"
		.fill   0x6
		.ascii  "\xb7\x08\x00\x00\xb8\x08"
		.fill   0x16

_0932c0_data:
		.long   _02f010_func

_0932c4_data:
		.long   _05a79c_func

_0932c8_data:
		.long   _02e6a0_func

_0932cc_data:
		.long   _05a87c_func
		.long   _058c80_func
		.long   _02f010_func
		.long   _05c130_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _05988c_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _0286c4_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _028904_func
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _058edc_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _031318_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _031280_func
		.long   _031318_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _05a610_func
		.long   _02e6a0_func
		.long   _05a70c_func
		.long   _058c80_func
		.long   _05fa48_func
		.long   _05fc5c_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _05a4e4_func
		.long   _02e6a0_func
		.long   _05a55c_func
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _05a4e4_func
		.long   _02e6a0_func
		.long   _05a55c_func
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _05a244_func
		.long   _05a48c_func
		.long   _02e6a0_func
		.long   _05a4dc_func
		.long   _058c80_func
		.long   _05acfc_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02ec6c_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _05ae90_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _03f008_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _03fb88_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02ec6c_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _075238_func
		.long   _075d24_func
		.long   _02e6a0_func
		.long   _075ea8_func
		.long   _058c80_func
		.long   _07466c_func
		.long   _074e10_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _05924c_func
		.long   _059324_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _05990c_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _074430_func
		.long   _074604_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _059b2c_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _07538c_func
		.long   _075d24_func
		.long   _02e6a0_func
		.long   _075ea8_func
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02ec6c_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _0215bc_func
		.long   _02215c_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _07466c_func
		.long   _074e10_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02ec6c_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _04bff0_func
		.long   _04c378_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04c6a8_func
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _05a150_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _05a22c_func
		.long   _058c80_func
		.long   _074a38_func
		.long   _075dfc_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _05aa7c_func
		.long   _058c80_func
		.long   _028060_func
		.long   _0280b4_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _028050_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02a790_func
		.long   _02e6a0_func
		.long   _02a880_func
		.long   _058c80_func
		.long   _02f010_func
		.long   _02a790_func
		.long   _02e6a0_func
		.long   _02a880_func
		.long   _058c80_func
		.long   _031008_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02ec6c_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _01ca00_func
		.long   _01cb7c_func
		.long   _02e6a0_func
		.long   _01cc44_func
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _07466c_func
		.long   _074e10_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _075fe0_func
		.long   _0762d8_func
		.long   _02e6a0_func
		.long   _07634c_func
		.long   _058c80_func
		.long   _06d0dc_func
		.long   _06d690_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _05516c_func
		.long   _05548c_func
		.long   _02e6a0_func
		.long   _05512c_func
		.long   _058c80_func
		.long   _05555c_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _06dbcc_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _03cf9c_func
		.long   _03d854_func
		.long   _02e6a0_func
		.long   _03d980_func
		.long   _058c80_func
		.long   _03da20_func
		.long   _02cfb4_jump
		.long   _072c60_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _074ac0_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _031f80_func
		.long   _02cfb4_jump
		.long   _032804_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _059a18_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f0d0_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f9fc_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _05ab50_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _05ac24_func
		.long   _058c80_func
		.long   _02f010_func
		.long   _06d690_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _06d690_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _06d0dc_func
		.long   _06d690_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _06d0dc_func
		.long   _06d690_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _05f218_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _059790_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _020140_func
		.long   _020080_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _020d2c_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _049680_func
		.long   _049940_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _031408_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _04a474_func
		.long   _04a8e8_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _0596ec_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _05f570_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02ec6c_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _040418_func
		.long   _02cfb4_jump
		.long   _0407b4_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _075cac_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _075b7c_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f608_func
		.long   _02cfb4_jump
		.long   _02f688_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02344c_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _029e50_func
		.long   _02a804_func
		.long   _02e6a0_func
		.long   _02a8b8_func
		.long   _058c80_func
		.long   _02a098_func
		.long   _02a804_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02a14c_func
		.long   _02a804_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _072c60_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _01fb78_func
		.long   _01ffe8_func
		.long   _02e6a0_func
		.long   _01ffb4_func
		.long   _058c80_func
		.long   _0232e4_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _074430_func
		.long   _074604_func
		.long   _02e6a0_func
		.long   _075ef4_func
		.long   _058c80_func
		.long   _023934_func
		.long   _023964_func
		.long   _02e6a0_func
		.long   _023a0c_func
		.long   _0235f8_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _05a098_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _059618_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _0595e8_func
		.long   _059604_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _0313c0_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _05f69c_func
		.long   _05f8f0_func
		.long   _02e6a0_func
		.long   _05fcb4_func
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _0598d0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _031280_func
		.long   _031318_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _059acc_func
		.long   _02cfb4_jump
		.long   _059af0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02ec6c_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02ec6c_func
		.long   _02ece8_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _053d00_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _059630_func
		.long   _05966c_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _030d50_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _0286c4_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f0d0_func
		.long   _02f388_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02fbdc_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _04c464_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04c62c_func
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _059734_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _071820_func
		.long   _071b68_func
		.long   _02e6a0_func
		.long   _071ad8_func
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _05a91c_func
		.long   _05a9b4_func
		.long   _02e6a0_func
		.long   _05aa2c_func
		.long   _058c80_func
		.long   _0393f8_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _0397d4_func
		.long   _058c80_func
		.long   _02ec6c_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02ec6c_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02fca0_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02ff08_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _05993c_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _076470_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _07682c_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _059aac_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _05944c_func
		.long   _05a610_func
		.long   _02e6a0_func
		.long   _05a70c_func
		.long   _058c80_func
		.long   _02f010_func
		.long   _076860_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _031280_func
		.long   _031318_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _032320_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _032320_func
		.long   _02cfb4_jump
		.long   _032804_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _074728_func
		.long   _075dfc_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _030e38_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _05af90_func
		.long   _05b294_func
		.long   _02e6a0_func
		.long   _05b3e4_func
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _031318_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _030340_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _030340_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _06e868_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _06edd8_func
		.long   _058c80_func
		.long   _06d0dc_func
		.long   _06d690_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _06ede8_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _06efb0_func
		.long   _058c80_func
		.long   _05af90_func
		.long   _05b294_func
		.long   _02e6a0_func
		.long   _05b3e4_func
		.long   _058c80_func
		.long   _02fca0_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _05de74_func
		.long   _05e584_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02ec6c_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _05db60_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _049afc_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _049bd0_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _01be90_func
		.long   _01c2dc_func
		.long   _02e6a0_func
		.long   _01c418_func
		.long   _058c80_func
		.long   _01c4f4_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02813c_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _0221a4_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _022d94_func
		.long   _058c80_func
		.long   _022f10_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _0231f8_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _0303bc_func
		.long   _02cfb4_jump
		.long   _030710_jump
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _030710_jump
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _069430_unknown
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _030728_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _040098_func
		.long   _02cfb4_jump
		.long   _0400cc_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _040098_func
		.long   _02cfb4_jump
		.long   _0400cc_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _033438_func
		.long   _033978_func
		.long   _02e6a0_func
		.long   _0339bc_func
		.long   _058c80_func
		.long   _049680_func
		.long   _049940_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _05ac90_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _033a24_func
		.long   _02cfb4_jump
		.long   _033cd4_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _05aa9c_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _04a930_func
		.long   _04aad4_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _03dd70_func
		.long   _03ded8_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _030a20_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _030c0c_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _030cb0_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _03dfdc_func
		.long   _03e2d0_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _05af90_func
		.long   _05b294_func
		.long   _02e6a0_func
		.long   _05b3e4_func
		.long   _058c80_func
		.long   _05af90_func
		.long   _05b294_func
		.long   _02e6a0_func
		.long   _05b3e4_func
		.long   _058c80_func
		.long   _04bff0_func
		.long   _04c378_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _059588_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _03e39c_func
		.long   _03e88c_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _03e39c_func
		.long   _03e88c_func
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _03ea8c_func
		.long   _02cfb4_jump
		.long   _03ec98_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _033eb8_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _03cf9c_func
		.long   _03d854_func
		.long   _02e6a0_func
		.long   _03d980_func
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _030340_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _030340_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _049afc_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _0343a0_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _05ae98_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _027d50_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _027cb8_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func
		.long   _02f010_func
		.long   _02cfb4_jump
		.long   _02e6a0_func
		.long   _04f9e8_unknown
		.long   _058c80_func

_094738_data:
		.ascii  "\x00\x16\x12\x0d\x0d\x0c"

_09473e_data:
		.ascii  "\x04\x00\x00\x00\x03\x00\x07\x00"
		.ascii  "\x0a\x00\x0d\x00\x10\x00\x13\x00"
		.ascii  "\x16\x00\x19\x00\x1c\x00\x1f\x00"
		.ascii  "\x22\x00\x25\x00\x28\x00\x2a\x00"
		.ascii  "\x2d\x00"

_094760_data:
		.ascii  "\x08\x08\x08\x08\x08\x08\x08\x08"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x06\x06\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"

_094860_data:
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xc4\xff\xe6\xff"
		.ascii  "\x08\x00\x20\x00\x4b\x00\x20\x00"
		.ascii  "\x08\x00\xe6\xff\xc4\xff"

_094886_data:
		.ascii  "\xff\xff"
		.fill   0x14
		.ascii  "\x20\x00\x20\x00\x30\x00\x30\x00"
		.ascii  "\x30\x00\x30\x00\x30\x00\x20\x00"
		.ascii  "\x20\x00"

_0948ae_data:
		.ascii  "\x00\x00"

_0948b0_data:
		.fill   0x14
		.ascii  "\x20\x00\x20\x00\x30\x00\x30\x00"
		.ascii  "\x3c\x00\x30\x00\x30\x00\x20\x00"
		.ascii  "\x20\x00\x00\x00"

_0948d8_data:
		.ascii  "\x00\x00\x57\x03\x39\x03\x00\x00"
		.ascii  "\xff\xfc\x1a\xfd\xff\xff\xb2\x02"
		.ascii  "\x9a\x02\x00\x00\x93\xfd\xa9\xfd"
		.ascii  "\xff\xff\x2d\x02\x19\x02\x00\x00"
		.ascii  "\x0b\xfe\x1c\xfe\xff\xff\xc1\x01"
		.ascii  "\xb2\x01\x00\x00\x6b\xfe\x79\xfe"
		.ascii  "\xff\xff\x6b\x01\x5e\x01\x00\x00"
		.ascii  "\xb9\xfe\xc5\xfe\xff\xff\x24\x01"
		.ascii  "\x1a\x01\x00\x00\xf8\xfe\x01\xff"
		.ascii  "\xff\xff\xec\x00\xe4\x00\x00\x00"
		.ascii  "\x2b\xff\x32\xff\xff\xff\xbe\x00"
		.ascii  "\xb8\x00\x00\x00\x54\xff\x5a\xff"
		.ascii  "\xff\xff\x99\x00\x94\x00\x00\x00"
		.ascii  "\x75\xff\x7a\xff\xff\xff\x7c\x00"
		.ascii  "\x78\x00\x00\x00\x90\xff\x94\xff"
		.ascii  "\xff\xff\x50\x00\x80\x7f"

_094956_data:
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"

_0949b6_data:
		.ascii  "\xff\x00\x00\x00\xfd\xff\xfa\xff"
		.ascii  "\xf8\xff\xf7\xff\xf6\xff\xf7\xff"
		.ascii  "\xf9\xff\xfb\xff\xfe\xff\x02\x00"
		.ascii  "\x06\x00\x07\x00"

_0949d2_data:
		.ascii  "\x04\x00\x09\x00\x00\x00\x07\x00"
		.ascii  "\x05\x00"

_0949dc_data:
		.ascii  "\x80"
		.string "~}|zyxwutsrponmljihgfecba`_^]\\[ZYXWVUTSRQPONNMLKJIIHGFFEDDCBAA@@"

_094a1e_data:
		.ascii  "\x00\x00"

_094a20_data:
		.ascii  "\x1d\x00"

_094a22_data:
		.ascii  "\x08\x01"

_094a24_data:
		.ascii  "\x12"

_094a25_data:
		.ascii  "\x00"

_094a26_data:
		.ascii  "\x00"

_094a27_data:
		.ascii  "\x01"

_094a28_data:
		.ascii  "\x01"

_094a29_data:
		.ascii  "\x00"

_094a2a_data:
		.ascii  "\x01"

_094a2b_data:
		.ascii  "\x01"

_094a2c_data:
		.ascii  "\x02\x00\x00\x00"

_094a30_data:
		.long   _0bf917_data
		.ascii  "\x64\x00\xfe\x00\x02\x01\x00\x04"

_094a3c_data:
		.ascii  "\x00\x00\x01\x05"
		.fill   0x4
		.long   _0bf918_data
		.ascii  "\x5a\x00\xd4\x00\x02\x01\x03\x02"

_094a50_data:
		.ascii  "\x00\x00\x01\x09\x02\x00\x00\x00"
		.long   _0bf919_data
		.ascii  "\x2f\x00\xc8\x00\x03\x03\x03\x02"

_094a64_data:
		.ascii  "\x00\x00\x01\x0c\x01\x00\x00\x00"
		.long   _0bf91a_data
		.ascii  "\xb4\x00\xd7\x00\x05\x13\x01\x04"

_094a78_data:
		.ascii  "\x00\x00\x02\x01\x02\x00\x00\x00"
		.long   _0bf91b_data
		.ascii  "\xb9\x00\xaf\x00\x08\x04\x06\x08"

_094a8c_data:
		.ascii  "\x00\x00\x02\x07"
		.fill   0x4
		.long   _0bf91c_data
		.ascii  "\x87\x00\xa0\x00\x14\x06\x07\x05"

_094aa0_data:
		.ascii  "\x00\x00\x02\x0c\x02\x00\x00\x00"
		.long   _0bf91d_data
		.ascii  "\x5b\x00\x8f\x00\x07\x07\x07\x06"

_094ab4_data:
		.ascii  "\x00\x00\x02\x0e\x03\x00\x00\x00"
		.long   _0bf91e_data
		.ascii  "\xd4\x00\x85\x00\x09\x05\x05\x08"

_094ac8_data:
		.ascii  "\x00\x00\x03\x01\x01\x00\x00\x00"
		.long   _0bf91f_data
		.ascii  "\xd1\x00\x5c\x00\x15\x08\x09\x0a"

_094adc_data:
		.ascii  "\x00\x00\x03\x03"
		.fill   0x4
		.long   _0bf920_data
		.ascii  "\x01\x01\x50\x00\x0a\x0b\x09\x0a"

_094af0_data:
		.ascii  "\x00\x00\x03\x06\x01\x00\x00\x00"
		.long   _0bf921_data
		.ascii  "\xea\x00\xeb\x00\x0a\x0b\x0b\x0c"

_094b04_data:
		.ascii  "\x00\x00\x04\x01\x01\x00\x00\x00"
		.long   _0bf922_data
		.ascii  "\x16\x01\xbe\x00\x0d\x0b\x0b\x0c"

_094b18_data:
		.ascii  "\x00\x00\x04\x05\x05\x00\x00\x00"
		.long   _0bf923_data
		.ascii  "\x22\x01\x91\x00\x16\x0c\x0d\x0e"

_094b2c_data:
		.ascii  "\x00\x00\x04\x08\x01\x00\x00\x00"
		.long   _0bf924_data
		.ascii  "\x4f\x01\xb4\x00\x0d\x0f\x0d\x0e"

_094b40_data:
		.ascii  "\x00\x00\x05\x01"
		.fill   0x4
		.long   _0bf925_data
		.ascii  "\x38\x01\xe4\x00\x0e\x17\x0f\x10"

_094b54_data:
		.ascii  "\x00\x00\x05\x03\x05\x00\x00\x00"
		.long   _0bf926_data
		.ascii  "\x68\x01\xdc\x00\x11\x10\x0f\x10"

_094b68_data:
		.ascii  "\x00\x00\x05\x09\x02\x00\x00\x00"
		.long   _0bf927_data
		.ascii  "\x65\x01\x50\x00\x11\x10\x11\x11"

_094b7c_data:
		.ascii  "\x00\x00\x06\x01\x02\x00\x00\x00"
		.long   _0bf928_data
		.ascii  "\x0a\x00\xd4\x00\x12\x00\x12\x12"

_094b90_data:
		.ascii  "\x00\x00\x07\x14\x05\x00\x00\x00"

_094b98_data:
		.long   _0bf929_data
		.ascii  "\xb6\x00\x0a\x01\x04\x13\x13\x13"

_094ba4_data:
		.ascii  "\x00\x00\x07\x14\x03\x00\x00\x00"

_094bac_data:
		.long   _0bf92a_data
		.ascii  "\x91\x00\x61\x00\x14\x06\x14\x14"

_094bb8_data:
		.ascii  "\x00\x00\x07\x14"
		.fill   0x4

_094bc0_data:
		.long   _0bf92b_data
		.ascii  "\xbe\x00\x2d\x00\x15\x09\x15\x15"

_094bcc_data:
		.ascii  "\x00\x00\x07\x14\x02\x00\x00\x00"

_094bd4_data:
		.long   _0bf92c_data
		.ascii  "\x14\x01\x73\x00\x16\x0d\x16\x16"

_094be0_data:
		.ascii  "\x00\x00\x07\x14\x01\x00\x00\x00"

_094be8_data:
		.long   _0bf92d_data
		.ascii  "\x32\x01\x0b\x01\x0f\x17\x17\x17"

_094bf4_data:
		.ascii  "\x00\x00\x07\x14\x01\x00\x00\x00"

_094bfc_data:
		.ascii  "\x2e\xf9\x0b"

_094bff_data:
		.ascii  "\x00\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03"

_094c80_data:
		.ascii  "\x03\x03\x03\x03\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00"
		.long   _0bf92f_data
		.long   _0bf930_data
		.long   _0bf931_data
		.long   _0bf932_data
		.long   _0bf933_data
		.long   _0bf934_data
		.long   _0bf935_data
		.long   _0bf936_data

_094eb4_data:
		.long   _0bf937_data
		.ascii  "\xa0\x00\x6e\x00\x01\x04\x02\x00"
		.long   _0bf938_data
		.ascii  "\xa0\x00\x70\x00\x02\x66\x01\x00"
		.long   _0bf939_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bf948_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bf959_data
		.ascii  "\xa0\x00\x71\x00\x02\x66\x02\x00"
		.long   _0bf95a_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x02\x00"
		.long   _0bf96e_data
		.ascii  "\xa0\x00\x73\x00\x02\x66\x05\x00"
		.long   _0bf96f_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bf97e_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bf98e_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x05\x00"
		.long   _0bf98f_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bf99f_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bf9b3_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bf9c2_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x05\x00"
		.long   _0bf9d7_data
		.ascii  "\xa0\x00\x74\x00\x02\x66\x00\x00"
		.long   _0bf9d8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bf9ec_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x00\x00"
		.long   _0bf9ed_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bf9ff_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfa0e_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfa20_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfa32_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfa42_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfa57_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfa6b_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfa7e_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bfa93_data
		.ascii  "\xa0\x00\x75\x00\x02\x66\x01\x00"
		.long   _0bfa94_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfaa3_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfab4_data
		.ascii  "\xa0\x00\x72\x00\x02\x66\x00\x00"
		.long   _0bfab5_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfad2_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfae1_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfaf3_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfb08_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfb1c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfb2d_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bfb3e_data
		.ascii  "\xa0\x00\x76\x00\x02\x66\x05\x00"
		.long   _0bfb3f_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfb51_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfb64_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfb73_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x05\x00"
		.long   _0bfb74_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfb85_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfb98_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfba9_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfbbc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfbcf_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfbe0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfbf4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfc05_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfc17_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfc2d_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfc3f_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfc4f_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfc60_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfc71_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfc80_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x05\x00"
		.long   _0bfc96_data
		.ascii  "\xa0\x00\x77\x00\x02\x66\x00\x00"
		.long   _0bfc97_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfcac_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfcba_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x00\x00"
		.long   _0bfcbb_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfccc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfcdd_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfcef_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfd02_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfd11_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfd1e_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfd2f_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfd45_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfd57_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfd6a_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfd7c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfd8e_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfd9f_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bfdae_data
		.ascii  "\xa0\x00\x78\x00\x02\x66\x01\x00"
		.long   _0bfdaf_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfdc2_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x01\x00"
		.long   _0bfdc3_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfdd5_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfde4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfdf5_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe04_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe17_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfe2b_data
		.ascii  "\xa0\x00\x79\x00\x02\x66\x01\x00"
		.long   _0bfe2c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe3c_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x01\x00"
		.long   _0bfe3d_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe4c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe5d_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe72_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe82_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfe97_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfea9_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfebd_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfeca_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfed9_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfee8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfef6_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff0b_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff20_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bff31_data
		.ascii  "\xa0\x00\x7a\x00\x02\x66\x02\x00"
		.long   _0bff32_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x02\x00"
		.long   _0bff41_data
		.ascii  "\xa0\x00\x7b\x00\x02\x66\x05\x00"
		.long   _0bff42_data
		.ascii  "\xa0\x00\x00\x00\x02\x02\x05\x00"
		.long   _0bff61_data
		.ascii  "\xa0\x00\x7c\x00\x02\x66\x05\x00"
		.long   _0bff62_data
		.ascii  "\xa0\x00\x00\x00\x02\x02\x05\x00"
		.long   _0bff83_data
		.ascii  "\xa0\x00\x7d\x00\x02\x66\x05\x00"
		.long   _0bff84_data
		.ascii  "\xa0\x00\x00\x00\x02\x04\x05\x00"
		.long   _0bffa1_data
		.ascii  "\xa0\x00\x7e\x00\x02\x00\x01\x00"
		.long   _0bffa2_data
		.ascii  "\xa0\x00\x7f\x00\x02\x06\x01\x00"
		.long   _0bffa3_data
		.ascii  "\xa0\x00\x80\x00\x01\x00\x01\x00"
		.long   _0bffa4_data
		.ascii  "\xc8\x00\x00\x00\x02\xff\x02"
		.fill   0xfd

_095508_data:
		.ascii  "\x00\x29\x20\x08\x00\x13\x20\x1b"
		.ascii  "\x00\x1e\x04\x02\x00\x3c\x20\x0b"
		.ascii  "\x00\x10\x04\x0c\x00\x45\x04\x07"
		.ascii  "\x24\x14\x20\x1b\x00\x4a\x80\x2a"
		.ascii  "\xa0\x04\x20\x08\x24\x0b\x20\x7c"
		.ascii  "\x24\x13\x20\x3a\x00\x1c\x10\x2e"
		.ascii  "\x00\x0d\x80\x17\x90\x01\x10\x17"
		.ascii  "\x90\x01\x80\x1f\x90\x02\x10\x34"
		.ascii  "\x00\x21\x80\x03\x90\x01\x10\x17"
		.ascii  "\x90\x01\x80\x1b\x90\x03\x10\x4a"
		.ascii  "\x00\x44\x80\x1f\x90\x01\x10\x04"
		.ascii  "\x14\x0c\x10\x0e\x00\x08\xa0\x1d"
		.ascii  "\x80\x02\x90\x01\x80\xca\x90\x0d"
		.ascii  "\x10\x23\x00\x11\x20\x24\x00\x13"
		.ascii  "\x20\x0d\xa0\x01\x80\x16\xa0\x19"
		.ascii  "\x20\x26\x24\x0e\x20\x1d\x00\x10"
		.ascii  "\x80\x19\x90\x11\x80\x01\x90\x01"
		.ascii  "\x80\x0c\xa0"
		.ascii   "0 #$"
		.ascii  "\x04"
		.ascii   " u$\t "
		.ascii  "\x0f\x00\x55\x10\x02"
		.fill   0x61
		.ascii  "\x29\x20\x0c\x24\x13\x04\x02\x14"
		.ascii  "\x01\x10\x09\x14\x01\x04\x0c\x00"
		.ascii  "\x1a\x04\x05\x00\x2b\x10\x07\x00"
		.ascii  "\x07\x20\x07\x00\x02\x04\x03\x00"
		.ascii  "\x02\x10\x01\x50\x01\x10\x06\x00"
		.ascii  "\x07\x20\x08\x00\x4b\x04\x05\x00"
		.ascii  "\x3f\x10\x06\x00\x0e\x20\x09\x00"
		.ascii  "\x09\x04\x06\x00\x0c\x20\x37\x00"
		.ascii  "\x05\x10\x02\x50\x1c\x10\x01\x04"
		.ascii  "\x05\x00\x14\x10\x07\x00\x08\x20"
		.ascii  "\x05\x00\x38\x04\x04\x00\x0e\x10"
		.ascii  "\x08\x00\x22\x20\x06\x00\x19\x54"
		.ascii  "\x04\x50\x17\x10\x15\x00\x08\x20"
		.ascii  "\x16\x00\x0f\x20\x0b\x00\x01\x04"
		.ascii  "\x06\x00\x0d\x10\x06\x00\x52\x04"
		.ascii  "\x04\x00\x58\x20\x04\x24\x04\x20"
		.ascii  "\x2c\x00\x0a\x10\x02\x50\x17\x10"
		.ascii  "\x02\x00\x0d\x04\x04\x00\x0a\x10"
		.ascii  "\x03\x00\x0a\x20\x04\x00\x10\x10"
		.ascii  "\x05\x00\x34\x04\x04\x00\x33\x10"
		.ascii  "\x04\x00\x0d\x20\x03\x00\x1b\x04"
		.ascii  "\x05\x00\x47\x04\x04\x00\x51\x04"
		.ascii  "\x04\x00\x21\x10\x0c\x00\x13\x20"
		.ascii  "\x06\x00\x05\x04\x07\x00\x42"
		.fill   0x3b
		.ascii  "\x25\x02\x14\x22\x28\x26\x05\x20"
		.ascii  "\x01\x00\x10\x01\x07\x00\x42\x20"
		.ascii  "\x0c\x24\x12\x20\x08\x00\x15\x20"
		.ascii  "\x06\x24\x07"
		.ascii   " %$\t "
		.ascii  "\x0f\x00\x2c\x02\x20\x22\x06\x26"
		.ascii  "\x0b\x22\x14\x02\x14\x22\x08\x26"
		.ascii  "\x16\x22\x04\x26\x15\x22\x1f\x26"
		.ascii  "\x06\x22\x39\x26\x18\x22\x0a\x66"
		.ascii  "\x02\x56\x02\x16\x06\x56\x0b\x52"
		.ascii  "\x0a\x12\x01\x02\x26\x22\x17\x02"
		.ascii  "\x13\x22\x0c\x02\x01\x22\x43\x26"
		.ascii  "\x08\x22\x26\x26\x06\x22\x13\x02"
		.ascii  "\x04\x00\x37\x20\x04\x24\x04\x20"
		.ascii  "\x0c\x00\x06\x20\x0c\x24\x09\x20"
		.ascii  "\x04\x24\x05\x04\x04\x00\x1d\x02"
		.ascii  "\x01\x22\x06\x26\x09\x22\x0e\x02"
		.ascii   "\t\"\r&"
		.ascii  "\x04\x22\x16\x02\x18\x22\x08\x26"
		.ascii  "\x0b\x22\x0e\x26\x10\x22\x0a\x02"
		.ascii  "\x20\x22\x1d\x26\x08\x22\x14\x26"
		.ascii  "\x13\x22\x1a\x02\x01\x00\x07\x04"
		.ascii  "\x16\x00\x05\x04\x1b\x00\x01\x20"
		.ascii  "\x08\x00\x03\x01\x3b\x21\x08\x01"
		.ascii  "\x25\x00\x16\x04\x14\x00\x05\x04"
		.ascii  "\x03\x24\x0a\x04\x11\x00\x09\x01"
		.ascii  "\x4e\x00\x04\x04\x26\x00\x05\x04"
		.ascii  "\x25\x00\x0f\x04\x09\x00\x12\x01"
		.ascii  "\x30"
		.fill   0x25
		.ascii  "\x28\x20\x4a\x00\x03\x20\x25\x24"
		.ascii  "\x0c\x20\x07\x00\x15\x01\x09\x00"
		.ascii  "\x0e\x80\x1d\x00\x1e\x20\x0a\x24"
		.ascii  "\x1a\x20\x0b\x00\x22\x20\x10\x24"
		.ascii  "\x09\x20\x13\x00\x10\x20\x10\x00"
		.ascii  "\x04\x01\x3d\x00\x1c\x80\x35\x00"
		.ascii  "\x0c\x01\x20\x81\x03\x80\x2f\x00"
		.ascii  "\x03\x01\x1b\x81\x04\x80\x34\x00"
		.ascii  "\x0f\x20\x09\x24\x08\x20\x17\x00"
		.ascii  "\x20\x20\x07\x00\x09\x04\x14\x00"
		.ascii  "\x11\x01\x07\x00\x11\x80\x24\x00"
		.ascii  "\x1d\x20\x01\x24\x0e\x20\x15\x00"
		.ascii  "\x1f\x20\x02\x24\x1e\x20\x09\x00"
		.ascii  "\x0f\x10\x08\x00\x04\x01\x29\x00"
		.ascii  "\x2c\x10\x0e\x14\x07\x10\x2c\x00"
		.ascii  "\x12\x04\x1f\x24\x07\x20\x22\x00"
		.ascii  "\x06\x20\x02\x24\x05\x20\x0f\x00"
		.ascii  "\x2e\x10\x18\x00\x0c\x20\x06\x00"
		.ascii  "\x21\x20\x05\x24\x05\x20\x14\x24"
		.ascii  "\x0e\x20\x10\x00\x34\x20\x10\x00"
		.ascii  "\x0e\x80\x0f\xa0\x13\xa4\xff\xa4"
		.ascii  "\x22\xa0\x28"
		.fill   0x4f
		.ascii  "\xbc\x20\x10\x00\xb0\x02\x0e\x00"
		.ascii  "\x2a\x04\x17\x00\x15\x04\x02\x24"
		.ascii  "\x11\x20\x02\x00\x1d\x04\x01\x24"
		.ascii  "\x08\x20\x02\x00\x25\x20\x0d\x00"
		.ascii  "\x0a\x02\x0b\x00\x76\x04\x0f\x00"
		.ascii  "\x2b\x04\x0a\x24\x04\x20\x02\x00"
		.ascii  "\x2b\x10\x14\x14\x13\x10\x27\x14"
		.ascii  "\x07\x10\x1f\x00\x15\x02\x0e\x00"
		.ascii  "\x29\x04\x18\x00\x13\x20\x05\x00"
		.ascii  "\x58\x04\x12\x24\x0c\x20\x01\x00"
		.ascii  "\x66\x04\x05\x24\x07\x20\x0b\x00"
		.ascii  "\x06\x20\x01\x00\x1a\x02\x0a\x00"
		.ascii  "\x34\x04\x0c\x00\x19\x10\x04\x00"
		.ascii  "\x17\x04\x02\x14\x02\x04\x06\x00"
		.ascii  "\x61\x04\x02\x14\x02\x54\x0a\x14"
		.ascii  "\x01\x10\x16\x00\x08\x01\x05\x00"
		.ascii  "\x1b\x10\x45\x00\x07\x20\x34\x00"
		.ascii  "\x0a\x02\x0a\x00\x2e\x04\x10\x00"
		.ascii  "\x10\x20\x09\x00\x0a\x04\x06\x24"
		.ascii  "\x0e\x20\x05\x00\x04\x10\x08\x00"
		.ascii  "\x02\x01\x06\x00\xa5\x20\x21\x00"
		.ascii  "\x05\x20\x14\x00\x0c\x02\x08\x00"
		.ascii  "\x26\x04\x11\x00\x19\x10\x04\x14"
		.ascii  "\x05\x04\x02\x00\x20\x14\x09\x10"
		.ascii  "\x08\x00\x1e\x10\x4a\x00\x80"
		.fill   0x33
		.ascii  "\x54\x10\x25\x00\x1a\x10\x03\x00"
		.ascii  "\x0a\x20\x06\x00\x3a\x10\x0d\x00"
		.ascii  "\x09\x20\x03\x00\xff\x00\x0b\x20"
		.ascii  "\x03\x24\x11\x20\x13\x00\x17\x10"
		.ascii  "\x07\x50\x02\x54\x1f\x50\x11\x10"
		.ascii  "\x01\x00\x11\x20\x03\x00\x8b\x20"
		.ascii  "\x04\x24\x0f\x20\x13\x00\x2d\x10"
		.ascii  "\x03\x50\x03"
		.ascii   "T P\t"
		.ascii  "\x10\x04\x00\x31\x20\x02\x00\x73"
		.ascii  "\x04\x18\x00\x35\x04\x18\x00\x4a"
		.ascii  "\x20\x08\x24\x1e\x20\x0b\x24\x12"
		.ascii  "\x20\x03\x00\x19\x20\x27\x00\x44"
		.ascii  "\x04\x0e\x00\x07\x20\x05\x00\x50"
		.ascii  "\x04\x13\x14\x09\x04\x01\x00\x20"
		.ascii  "\x10\x04\x00\x11\x20\x04\x00\x22"
		.fill   0x80

_095ae2_data:
		.ascii  "\x00\x00\x9a\x00\xc0\x00\xd6\x00"
		.ascii  "\xac\x00\xc8\x00"

_095aee_data:
		.ascii  "\x78\x00"

_095af0_data:
		.ascii  "\x02\x00\x03\x00\x04\x00\x05\x00"
		.ascii  "\x01\x00"

_095afa_data:
		.ascii  "\x05\x00"

_095afc_data:
		.ascii  "\x07\x00\x07\x00\x01\x00\x04\x00"
		.ascii  "\x09\x00\x0a\x00"

_095b08_data:
		.ascii  "\x00\x00\x0a\x00"

_095b0c_data:
		.ascii  "\xff"

_095b0d_data:
		.ascii  "\xff"

_095b0e_data:
		.ascii  "\x4d"

_095b0f_data:
		.ascii  "\x48"

_095b10_data:
		.ascii  "\x4b"

_095b11_data:
		.ascii  "\x50"

_095b12_data:
		.ascii  "\x39"

_095b13_data:
		.ascii  "\x38"

_095b14_data:
		.ascii  "\x1d\x00\x00\x00"
		.long   _095b10_data
		.long   _095b0f_data
		.long   _095b0e_data
		.long   _095b11_data
		.long   _095b13_data
		.long   _095b12_data
		.long   _095b14_data
		.ascii   "KHMP89"
		.ascii  "\x1d\x00"

_095b3c_data:
		.ascii  "\x01\x00"

_095b3e_data:
		.ascii  "\x01\x00\x80\x00\x80\x00\x80\x00"
		.ascii  "\x80\x00\x80\x00\x80\x00\x80\x00"
		.ascii  "\x80\x00\x80\x00\x80\x00\x80\x00"
		.ascii  "\x80\x00\x80\x00\x80\x00\x80\x00"
		.ascii  "\x80\x00\x80\x00\x80\x00\x80\x00"
		.ascii  "\x80\x00\x80\x00\x80\x00\x80\x00"
		.ascii  "\x80\x00\x80\x00\x80\x00\x80\x00"
		.ascii  "\x80\x00\x80\x00\x80\x00\x80\x00"
		.ascii  "\x80\x00\x80\x00\x80\x00\x80\x00"
		.ascii  "\x80\x00\x80\x00\x80\x00\x80\x00"
		.ascii  "\x80\x00\x80\x00\x80\x00\x80\x00"
		.ascii  "\x80\x00\x80\x00\x80\x00\x80\x00"
		.ascii  "\x80\x00\x80\x00\x80\x00\x80\x00"
		.ascii  "\x80\x00\x80\x00\x80\x00"

_095bac_data:
		.ascii  "\x01\x00\x00\x00"

_095bb0_data:
		.ascii  "\x01"

_095bb1_data:
		.ascii  "\x01\x00\x00"

_095bb4_data:
		.ascii  "\x15\x16\x17\x18\x15\x19\x16\x15"

_095bbc_data:
		.ascii  "\x00\x00"

_095bbe_data:
		.ascii  "\x02\x00\xff"
		.fill   0x19
		.ascii  "\x02\x00\x01\x00\x03\x00\xff"
		.fill   0x13
		.ascii  "\x06\x00\x02\x00\x02\x00\x02\x00"
		.ascii  "\x00\x00\x01\x00\x01\x00\x01"
		.fill   0x5
		.ascii  "\xff"
		.fill   0x7
		.ascii  "\x03"
		.fill   0x5
		.ascii  "\x01\x00\x01\x00\x01\x00\xff"
		.fill   0xf
		.ascii  "\x05\x00\x01\x00\x02\x00\x03"
		.fill   0x5
		.ascii  "\x03\x00\x01\x00\x04\x00\x00\x00"
		.ascii  "\xff"
		.fill   0x7
		.ascii  "\x07\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x06\x00\x00\x00\x03"
		.fill   0x5
		.ascii  "\x01\x00\x04\x00\x00\x00\xff\x00"
		.ascii  "\x00\x00"

_095c64_data:
		.ascii  "\x14\x00"

_095c66_data:
		.fill   0x4
		.ascii  "\x06\x00\x02\x00\x05\x00\x04\x00"
		.ascii  "\x08\x00"

_095c74_data:
		.ascii  "\x14\x00"

_095c76_data:
		.ascii  "\xf4\x01\x00\x00"

_095c7a_data:
		.ascii  "\x40\x02"

_095c7c_data:
		.ascii  "\x00\x00\x90\x02\x00\x00\xe0\x02"
		.ascii  "\x00\x00\x30\x03\x00\x00\x80\x03"
		.ascii  "\x00\x00\xd0\x03\x00\x00\x20\x04"
		.ascii  "\x00\x00\x70\x04\x00\x00\xd4\xff"
		.ascii  "\x3d\x02\xce\xff\x8d\x02\xc7\xff"
		.ascii  "\xdd\x02\xc0\xff\x2c\x03\xb9\xff"
		.ascii  "\x7c\x03\xb2\xff\xcc\x03\xab\xff"
		.ascii  "\x1b\x04\xa4\xff\x6b\x04\x9d\xff"
		.ascii  "\xa6\xff\x37\x02\x9c\xff\x86\x02"
		.ascii  "\x8f\xff\xd4\x02\x81\xff\x23\x03"
		.ascii  "\x73\xff\x72\x03\x65\xff\xc1\x03"
		.ascii  "\x57\xff\x0f\x04\x49\xff\x5e\x04"
		.ascii  "\x3b\xff\x77\xff\x2c\x02\x6b\xff"
		.ascii  "\x79\x02\x57\xff\xc6\x02\x42\xff"
		.ascii  "\x14\x03\x2d\xff\x61\x03\x19\xff"
		.ascii  "\xae\x03\x04\xff\xfc\x03\xef\xfe"
		.ascii  "\x49\x04\xda\xfe\x46\xff\x1d\x02"
		.ascii  "\x3b\xff\x68\x02\x20\xff\xb3\x02"
		.ascii  "\x05\xff\xfe\x02\xe9\xfe\x49\x03"
		.ascii  "\xce\xfe\x95\x03\xb3\xfe\xe0\x03"
		.ascii  "\x97\xfe\x2b\x04\x7c\xfe\x12\xff"
		.ascii  "\x0a\x02\x0d\xff\x52\x02\xeb\xfe"
		.ascii  "\x9b\x02\xc9\xfe\xe3\x02\xa8\xfe"
		.ascii  "\x2c\x03\x86\xfe\x74\x03\x64\xfe"
		.ascii  "\xbd\x03\x42\xfe\x05\x04\x20\xfe"
		.ascii  "\xd9\xfe\xf2\x01\xe1\xfe\x38\x02"
		.ascii  "\xb9\xfe\x7d\x02\x91\xfe\xc2\x02"
		.ascii  "\x69\xfe\x07\x03\x41\xfe\x4d\x03"
		.ascii  "\x19\xfe\x92\x03\xf1\xfd\xd7\x03"
		.ascii  "\xc9\xfd\x9a\xfe\xd7\x01\xb6\xfe"
		.ascii  "\x19\x02\x88\xfe\x5a\x02\x5a\xfe"
		.ascii  "\x9c\x02\x2c\xfe\xdd\x02\xff\xfd"
		.ascii  "\x1f\x03\xd1\xfd\x61\x03\xa3\xfd"
		.ascii  "\xa2\x03\x75\xfd\x53\xfe\xb9\x01"
		.ascii  "\x8e\xfe\xf6\x01\x5b\xfe\x33\x02"
		.ascii  "\x27\xfe\x71\x02\xf4\xfd\xae\x02"
		.ascii  "\xc1\xfd\xeb\x02\x8d\xfd\x28\x03"
		.ascii  "\x5a\xfd\x66\x03\x26\xfd\x01\xfe"
		.ascii  "\x97\x01\x69\xfe\xcf\x01\x31\xfe"
		.ascii  "\x08\x02\xf8\xfd\x40\x02\xc0\xfd"
		.ascii  "\x79\x02\x87\xfd\xb2\x02\x4e\xfd"
		.ascii  "\xea\x02\x16\xfd\x23\x03\xdd\xfc"
		.ascii  "\x9e\xfd\x72\x01\x47\xfe\xa5\x01"
		.ascii  "\x0a\xfe\xd9\x01\xcd\xfd\x0c\x02"
		.ascii  "\x8f\xfd\x3f\x02\x52\xfd\x73\x02"
		.ascii  "\x15\xfd\xa6\x02\xd8\xfc\xda\x02"
		.ascii  "\x9a\xfc\x25\xfd\x4a\x01\x29\xfe"
		.ascii  "\x78\x01\xe7\xfd\xa6\x01\xa6\xfd"
		.ascii  "\xd4\x01\x64\xfd\x01\x02\x23\xfd"
		.ascii  "\x2f\x02\xe1\xfc\x5d\x02\x9f\xfc"
		.ascii  "\x8b\x02\x5e\xfc\x8a\xfc\x20\x01"
		.ascii  "\x0e\xfe\x48\x01\xc8\xfd\x70\x01"
		.ascii  "\x83\xfd\x98\x01\x3e\xfd\xc0\x01"
		.ascii  "\xf9\xfc\xe8\x01\xb3\xfc\x10\x02"
		.ascii  "\x6e\xfc\x38\x02\x29\xfc\xb7\xfb"
		.ascii  "\xf3\x00\xf6\xfd\x15\x01\xae\xfd"
		.ascii  "\x37\x01\x65\xfd\x58\x01\x1d\xfd"
		.ascii  "\x7a\x01\xd4\xfc\x9c\x01\x8c\xfc"
		.ascii  "\xbe\x01\x43\xfc\xe0\x01\xfb\xfb"
		.ascii  "\x82\xfa\xc5\x00\xe3\xfd\xe0\x00"
		.ascii  "\x98\xfd\xfb\x00\x4d\xfd\x17\x01"
		.ascii  "\x02\xfd\x32\x01\xb7\xfc\x4d\x01"
		.ascii  "\x6b\xfc\x69\x01\x20\xfc\x84\x01"
		.ascii  "\xd5\xfb\x8a\xf8\x95\x00\xd4\xfd"
		.ascii  "\xa9\x00\x87\xfd\xbe\x00\x3a\xfd"
		.ascii  "\xd3\x00\xec\xfc\xe7\x00\x9f\xfc"
		.ascii  "\xfc\x00\x52\xfc\x11\x01\x04\xfc"
		.ascii  "\x26\x01\xb7\xfb\xa9\xf4\x64\x00"
		.ascii  "\xc9\xfd\x71\x00\x7a\xfd\x7f\x00"
		.ascii  "\x2c\xfd\x8d\x00\xdd\xfc\x9b\x00"
		.ascii  "\x8e\xfc\xa9\x00\x3f\xfc\xb7\x00"
		.ascii  "\xf1\xfb\xc5\x00\xa2\xfb\x24\xe9"
		.ascii  "\x32\x00\xc3\xfd\x39\x00\x73\xfd"
		.ascii  "\x40\x00\x23\xfd\x47\x00\xd4\xfc"
		.ascii  "\x4e\x00\x84\xfc\x55\x00\x34\xfc"
		.ascii  "\x5c\x00\xe5\xfb\x63\x00\x95\xfb"
		.fill   0x4
		.ascii  "\xc0\xfd\x00\x00\x70\xfd\x00\x00"
		.ascii  "\x20\xfd\x00\x00\xd0\xfc\x00\x00"
		.ascii  "\x80\xfc\x00\x00\x30\xfc\x00\x00"
		.ascii  "\xe0\xfb\x00\x00\x90\xfb"

_095efe_data:
		.ascii  "\x12\x00"

_095f00_data:
		.ascii  "\xb9\x01\x00\x00"

_095f04_data:
		.ascii  "\xfd\xff\xfe\xff\xff\xff\x00\x00"
		.ascii  "\x01\x00\x01\x00\x03\x00"

_095f12_data:
		.ascii  "\xfd\xff\xfb\xff\xfc\xff\xfa\xff"
		.ascii  "\xfb\xff\xfd\xff\xfd\xff"
		.long   _0c0050_data
		.long   _0c0068_data
		.long   _0c0075_data
		.long   _0c0085_data
		.long   _0c0095_data
		.long   _0c009f_data
		.long   _0c00c2_data
		.long   _0c00cd_data
		.long   _0c00db_data
		.long   _0c00ec_data
		.long   _0c0101_data
		.long   _0c010d_data
		.long   _0c0118_data
		.long   _0c0128_data
		.long   _0c0131_data
		.long   _0c013a_data
		.long   _0c0191_data

_095f64_data:
		.ascii  "\x53\x00"

_095f66_data:
		.fill   0x4
		.ascii  "\x04\x00\x07\x00\x09\x00\x0a\x00"
		.ascii  "\x09\x00\x07\x00\x04\x00\x00\x00"
		.ascii  "\xfe\xff\xfc\xff\xfb\xff\xfa\xff"
		.ascii  "\xfb\xff\xfc\xff\xfe\xff\x00\x00"
		.ascii  "\x01\x00\x02\x00\x03\x00\x02\x00"
		.ascii  "\x01\x00\x00\x00\xff\xff\xfe\xff"
		.ascii  "\xff\xff\x00\x00\x01"
		.fill   0x5

_095fa4_data:
		.ascii  "\x00\x01\x02\x00"

_095fa8_data:
		.ascii  "\x00\x00\x02\x00\x02"

_095fad_data:
		.ascii  "\x02\x00\x00\x02\x00"

_095fb2_data:
		.ascii  "\x02\x02\x00\x00\x00"

_095fb7_data:
		.fill   0x5

_095fbc_data:
		.ascii  "\x11\x00\x00\x00\x10\x00\x00\x00"
		.ascii  "\x0b\x00\x00\x00\x0b\x00\x00\x00"
		.ascii  "\x0b\x00\x00\x00\x04"

_095fd1_data:
		.ascii  "\x00\x00\x00"

_095fd4_data:
		.ascii  "\x01\x00\x00\x00"

_095fd8_data:
		.ascii  "\x3c"

_095fd9_data:
		.ascii  "\x3c\x00\x00"

_095fdc_data:
		.ascii  "\x00\x01\x00\x00"

_095fe0_data:
		.long   _040a74_jump

_095fe4_data:
		.long   _040a88_jump

_095fe8_data:
		.long   _040a9c_jump

_095fec_data:
		.long   _040a9c_jump
		.ascii  "\x83\x86\x85\xa6\xb8\x00\x00\x00"
		.ascii  "\xb6\xb0\x85\x8e\xba\xb0\x86\x00"
		.ascii  "\xb0\x84\xb9\x84\xb0\x86\x00\x00"
		.ascii  "\x89\xa7\x84\xb0\x89\x84\xb9\x81"
		.ascii  "\xb0\x83\x86\x85\x85\x84\xba\x8e"
		.ascii  "\x8f\x00\x00\x00\x83\x86\x85\x84"
		.ascii  "\xb9\x8e\xb1\x00\x8f\x86\xb1\xa7"
		.ascii  "\x81\xba\x00\x00"
		.string "jungle\\"
		.fill   0x5
		.string "music\\"
		.fill   0x6
		.string "mountain\\"
		.ascii  "\x00\x00\x00"
		.string "image\\"
		.fill   0x6
		.string "cave\\"
		.fill   0x7
		.string "cake\\"
		.fill   0x9

_09607c_data:
		.string "jungle"
		.fill   0x6
		.string "music"
		.fill   0x7
		.string "mountain"
		.fill   0x4
		.string "image"
		.fill   0x7
		.string "cave"
		.fill   0x8
		.string "cake"
		.fill   0xa
		.ascii  "\x2f"
		.fill   0x63
		.long   _0c063f_data
		.long   _0c0647_data
		.long   _0c064f_data
		.ascii  "\x57\x06"

_09613e_data:
		.ascii  "\x0c\x00\x04\x00\x0c\x00\x14\x00"

_096146_data:
		.ascii  "\x18\x00\x40\x01\x38\x01\x30\x01"

_09614e_data:
		.ascii  "\x2c\x01\x00\x00\x08\x00\x10\x00"

_096156_data:
		.ascii  "\x14\x00\xc8\x00\xc0\x00\xb8\x00"
		.ascii  "\xb4\x00"
		.long   _0c065f_data
		.long   _0c0662_data
		.long   _0c0665_data
		.long   _0c0668_data
		.long   _0c066b_data
		.fill   0x8
		.long   _0c0675_data
		.long   _0c0677_data
		.long   _0c0679_data
		.long   _0c067b_data
		.long   _0c067d_data
		.long   _0c067f_data
		.long   _0c0681_data
		.long   _0c0683_data
		.long   _0c0685_data
		.long   _0c0687_data
		.fill   0x10
		.long   _0c0689_data
		.long   _0c068b_data
		.long   _0c068d_data
		.long   _0c068f_data
		.long   _0c0691_data
		.long   _0c0693_data
		.long   _0c0695_data
		.long   _0c0697_data
		.long   _0c0699_data
		.long   _0c069b_data
		.fill   0x10
		.long   _0c069d_data
		.long   _0c069f_data
		.long   _0c06a1_data
		.long   _0c06a3_data
		.long   _0c06a5_data
		.long   _0c06a7_data
		.long   _0c06a9_data
		.long   _0c06ab_data
		.long   _0c06ad_data
		.long   _0c06af_data
		.fill   0x10
		.long   _0c06b1_data
		.long   _0c06b3_data
		.long   _0c06b5_data
		.long   _0c06b7_data
		.long   _0c06b9_data
		.long   _0c06bb_data
		.long   _0c06bd_data
		.long   _0c06bf_data
		.long   _0c06c1_data
		.fill   0x5c
		.long   _0c06c3_data
		.fill   0xcc

_096374_data:
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_096384_data:
		.ascii  "\x02\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x06\x00"

_096394_data:
		.fill   0x8
		.ascii  "\x08"
		.fill   0x7

_0963a4_data:
		.ascii  "\x07\x00\x08\x00\x08"
		.fill   0x5
		.ascii  "\x08\x00\x08\x00\x01\x00"

_0963b4_data:
		.ascii  "\x08\x00\x08\x00\x01\x00\x08\x00"
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"

_0963c4_data:
		.fill   0xe
		.ascii  "\x08\x00"

_0963d4_data:
		.fill   0xa
		.ascii  "\x08"
		.fill   0x5
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x01\x00\x08\x00"
		.ascii  "\x07\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x01\x00"

_096404_data:
		.ascii  "\x07\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_096414_data:
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_096424_data:
		.ascii  "\x08\x00\x08\x00\x07\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_096434_data:
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _096384_data

_096454_data:
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _0963d4_data

_096474_data:
		.long   _096374_data
		.long   _096424_data
		.long   _096374_data
		.long   _096414_data
		.long   _096374_data
		.long   _096404_data
		.long   _096374_data
		.long   _096374_data

_096494_data:
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _0963a4_data
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data

_0964b4_data:
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _0963b4_data
		.long   _096374_data
		.long   _096384_data
		.long   _096374_data

_0964d4_data:
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _0963c4_data
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data

_0964f4_data:
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _096374_data
		.long   _096394_data
		.long   _096374_data

_096514_data:
		.long   _096434_data
		.long   _096454_data
		.long   _096474_data
		.long   _096494_data
		.long   _0964b4_data
		.long   _0964d4_data
		.long   _0964f4_data

_096530_data:
		.ascii  "\x2a\x2e\x05\x00"

_096534_data:
		.ascii  "\x2c\x02"

_096536_data:
		.ascii  "\x28\x02"

_096538_data:
		.ascii  "\x07\x08\x0c\x26\x0d\x0e\x00\x00"

_096540_data:
		.ascii  "\x29\x0f\x10\x29\x1a\x12\x13\x01"

_096548_data:
		.ascii  "\x15\x16\x2d\x18\x29\x1a\x12\x13"
		.ascii  "\x01\x00\x00\x00"

_096554_data:
		.ascii  "\x1b\x1c\x00\x00\x1d\x1c\x20\xfe"
		.ascii  "\x1d\x1c\x00\x01\x1d\x1c\x20\xfe"
		.ascii  "\x1d\x1c\x10\x02\x1d\x1c\x10\x02"
		.ascii  "\x1d\x1c\x30\x03\x1d\x1c\x00\x04"
		.ascii  "\x1d\x1c\x5c\x05\x1d\x1c\x36\x05"
		.ascii  "\x1d\x1c\x10\x05\x1d\x1c\x00\x06"
		.ascii  "\x1d\x1e\x18\x29\x1a\x12\x13\x00"

_09658c_data:
		.ascii  "\x15\x16\x19\x1f"
		.fill   0x4

_096594_data:
		.ascii  "\x24\x23\x2b\x01"
		.ascii   "\"$\"!"
		.ascii  "\x01"
		.ascii   "#$#+"
		.ascii  "\x01\x22\x22\x21\x01\x23\x23\x2b"
		.ascii  "\x02\x22\x22\x21\x01\x23\x23\x2b"
		.ascii  "\x02\x22\x20\x01\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x01\x22\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x01\x22\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x03\x22\x01\x00\x00"

_0965d0_data:
		.ascii  "\x25\x27\x00\x00"

_0965d4_data:
		.ascii  "\x2d\x18\x29\x1a\x12\x13\x1b\x1c"
		.ascii  "\x10\xff\x1d\x2d\x18\x29\x1a\x12"
		.ascii  "\x12\x13\x15\x16\x1c\x20\xfe\x1d"
		.ascii  "\x01\x00\x00\x00"

_0965f0_data:
		.long   _096538_data
		.long   _096540_data
		.long   _096548_data
		.long   _096554_data
		.long   _09658c_data
		.long   _096594_data
		.long   _0965d0_data
		.long   _0965d4_data
		.long   _096536_data
		.long   _096534_data
		.long   _096530_data

_09661c_data:
		.ascii  "\x10\x17\x18\x16\x19\x00\x00\x00"

_096624_data:
		.ascii  "\x10\x11\x0f\x1a\x0b\x05\x00\x00"

_09662c_data:
		.ascii  "\x0d\x1a\x0e\x03"

_096630_data:
		.ascii  "\x0d\x1a\x0e\x04\x13\x15\x04\x14"
		.ascii  "\x12\x15\x04\x14\x13\x15\x04\x14"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x04"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x04"
		.ascii  "\x13\x15\x04\x14\x0a\x1a\x0e\x02"

_096658_data:
		.ascii  "\x0d\x1a\x0e\x04\x07\x00\x07\x00"
		.ascii  "\x0a\x1a\x0e\x04\x03\x00\x00\x00"

_096668_data:
		.ascii  "\x07\x04\x07\x08\x0a\x1a\x0e\x0d"
		.ascii  "\x1a\x0e\x04\x02"

_096674_data:
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x04"
		.ascii  "\x12\x15\x04\x14\x13\x15\x04\x14"
		.ascii  "\x0a\x1a\x0e\x04\x02\x00\x00\x00"

_09668c_data:
		.ascii  "\x09\x00\x12\x15\x04\x14\x09\x04"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x0d"
		.ascii  "\x0e\x04\x02\x00"

_0966a0_data:
		.ascii  "\x07\x08\x08\x08\x09\x00\x13\x15"
		.ascii  "\x04\x14\x09\x08\x12\x15\x04\x14"
		.ascii  "\x0a\x1a\x0e\x04\x02\x00\x00\x00"

_0966b8_data:
		.long   _09662c_data

_0966bc_data:
		.long   _096630_data
		.long   _09662c_data
		.long   _096658_data
		.long   _096668_data
		.long   _096674_data
		.long   _09668c_data
		.long   _0966a0_data
		.long   _096624_data
		.long   _09661c_data

_0966e0_data:
		.ascii  "\x00\x02\x00\x02\x00\x02\x00\x02"
		.ascii  "\x00\x02\x00\x02\xff\x01\xff\x01"
		.ascii  "\xfe\x01\xfd\x01\xfd\x01\xfc\x01"
		.ascii  "\xfb\x01\xfa\x01\xf9\x01\xf8\x01"
		.ascii  "\xf7\x01\xf5\x01\xf4\x01\xf3\x01"
		.ascii  "\xf1\x01\xf0\x01\xee\x01\xec\x01"
		.ascii  "\xea\x01\xe9\x01\xe7\x01\xe5\x01"
		.ascii  "\xe3\x01\xe0\x01\xde\x01\xdc\x01"
		.ascii  "\xda\x01\xd7\x01\xd5\x01\xd2\x01"
		.ascii  "\xcf\x01\xcd\x01\xca\x01\xc7\x01"
		.ascii  "\xc4\x01\xc1\x01\xbe\x01\xbb\x01"
		.ascii  "\xb8\x01\xb4\x01\xb1\x01\xae\x01"
		.ascii  "\xaa\x01\xa7\x01\xa3\x01\x9f\x01"
		.ascii  "\x9c\x01\x98\x01\x94\x01\x90\x01"
		.ascii  "\x8c\x01\x88\x01\x84\x01\x80\x01"
		.ascii  "\x7c\x01\x78\x01\x73\x01\x6f\x01"
		.ascii  "\x6b\x01\x66\x01\x62\x01\x5d\x01"
		.ascii  "\x58\x01\x54\x01\x4f\x01\x4a\x01"
		.ascii  "\x45\x01\x40\x01\x3c\x01\x37\x01"
		.ascii  "\x32\x01\x2c\x01\x27\x01\x22\x01"
		.ascii  "\x1d\x01\x18\x01\x12\x01\x0d\x01"
		.ascii  "\x08\x01\x02\x01\xfd\x00\xf7\x00"
		.ascii  "\xf2\x00\xec\x00\xe7\x00\xe1\x00"
		.ascii  "\xdb\x00\xd6\x00\xd0\x00\xca\x00"
		.ascii  "\xc4\x00\xbf\x00\xb9\x00\xb3\x00"
		.ascii  "\xad\x00\xa7\x00\xa1\x00\x9b\x00"
		.ascii  "\x95\x00\x8f\x00\x89\x00\x83\x00"
		.ascii  "\x7d\x00\x77\x00\x71\x00\x6b\x00"
		.ascii  "\x64\x00\x5e\x00\x58\x00\x52\x00"
		.ascii  "\x4c\x00\x45\x00\x3f\x00\x39\x00"
		.ascii  "\x33\x00\x2c\x00\x26\x00\x20\x00"
		.ascii  "\x1a\x00\x13\x00\x0d\x00\x07\x00"
		.ascii  "\x01\x00\x00\x00"

_0967e4_data:
		.long   _058488_func

_0967e8_data:
		.long   _0585b0_jump

_0967ec_data:
		.long   _0585f0_jump
		.long   _058488_func
		.long   _0585b0_jump
		.long   _0585f0_jump
		.long   _058488_func
		.long   _0585b0_jump
		.long   _0585f0_jump
		.long   _058488_func
		.long   _0585b0_jump
		.long   _0585f0_jump
		.long   _058488_func
		.long   _0585b0_jump
		.long   _0585f0_jump
		.long   _058488_func
		.long   _0585b0_jump
		.long   _0587a0_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _0587c0_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _0585f0_jump
		.long   _058488_func
		.long   _0585b0_jump
		.long   _058780_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _0587e4_func
		.long   _058484_jump
		.long   _058484_jump
		.long   _058824_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _058600_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _058768_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _0587f4_func
		.long   _058484_jump
		.long   _058484_jump
		.long   _05881c_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _058860_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _058884_func
		.long   _0584a8_func
		.long   _0585b8_func
		.long   _058924_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _058900_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _058604_func
		.long   _058534_func
		.long   _0585e8_func
		.long   _0585f0_jump
		.long   _0584e8_func
		.long   _0585e0_jump
		.long   _058710_func
		.long   _0584e8_func
		.long   _0585e0_jump
		.long   _05873c_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _058650_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _058650_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _058624_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _058670_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _058698_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _0586c0_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _0586e8_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _0585f0_jump
		.long   _058488_func
		.long   _0585b0_jump
		.long   _0588a8_func
		.long   _058488_func
		.long   _0585b0_jump
		.long   _0588d4_func
		.long   _0585a0_func
		.long   _0585f4_func
		.long   _058854_func

_09697c_data:
		.ascii  "\x03\x05\x05\x03\x03\x04\x00\x00"

_096984_data:
		.ascii  "\x00\x03\x05\x00\x05\x01\x04\x02"

_09698c_data:
		.ascii  "\x03\x04\x02\x03\x02\x00\x00\x00"

_096994_data:
		.ascii  "\x01\x00\x15\x00\x9c\xff\x08\x00"
		.ascii  "\x01\x00\x00\x00\x12\x00\xa0\x00"
		.ascii  "\x08\x00\x03\x00\x2b\x00\x13\x00"
		.ascii  "\x0e\x00"

_0969ae_data:
		.ascii  "\x01\x00\x15\x00\x9c\xff\x08\x00"
		.ascii  "\x06\x00\x0f\x00\x12\x00\x4a\x01"
		.ascii  "\x0e\x00"

_0969c0_data:
		.ascii  "\x00\x00\x15\x00\x4a\x01\x08\x00"
		.ascii  "\x06\x00\x10\x00\x12\x00\x88\xff"
		.ascii  "\x0e\x00"

_0969d2_data:
		.ascii  "\x00\x00\x15\x00\x40\x01\x08\x00"
		.ascii  "\x01\x00\x00\x00\x12\x00\xf8\xff"
		.ascii  "\x08\x00\x03\x00\x2a\x00\x13\x00"
		.ascii  "\x0e\x00"

_0969ec_data:
		.ascii  "\x00\x00\x15\x00\x64\x00\x08\x00"
		.ascii  "\x03\x00\x2c\x00\x13\x00\x08\x00"
		.ascii  "\x03\x00\x2d\x00\x13\x00\x0e\x00"

_096a04_data:
		.ascii  "\x00\x00\x15\x00\xc8\x00\x08\x00"
		.ascii  "\x03\x00\x30\x00\x13\x00\x08\x00"
		.ascii  "\x03\x00\x31\x00\x13\x00\x11\x00"
		.ascii  "\x12\x00\x14\x00\xf8\xff\x11\x00"
		.ascii  "\x1e\x00\x14\x00\xf0\xff\x11\x00"
		.ascii  "\x2d\x00\x14\x00\xe0\xff\x11\x00"
		.ascii  "\x3c\x00\x14\x00\xc0\xff\x11\x00"
		.ascii  "\x41\x00\x14\x00\x00\x00\x13\x00"
		.ascii  "\x0e\x00"

_096a46_data:
		.ascii  "\x00\x00"

_096a48_data:
		.ascii  "\x04\x00\x57\x01\x22\x00\x6c\x01"
		.ascii  "\xde\x00\x25\x02\xc8\x00\xcd\x02"
		.ascii  "\xcc\x03\x19\x01\xc6\x01\x6f\x00"
		.ascii  "\xca\x02\x41\x02\x2a\x00\xa9\x00"
		.ascii  "\x43\x03\xbd\x02\x0e\x03\x4f\x03"
		.ascii  "\xd6\x03\xe0\x00\xb5\x01\xcf\x03"
		.ascii  "\x5b\x03\xb1\x03\x3e\x03\xcd\x01"
		.ascii  "\x6b\x02\xa5\x02\x66\x02\x32\x02"
		.ascii  "\xe1\x02\x74\x00\x9f\x01\x7c\x00"
		.ascii  "\xaf\x02\xe6\x01\xf6\x01\x41\x02"
		.ascii  "\x60\x01\x79\x03\x0e\x01\xb8\x00"
		.ascii  "\xb1\x01\xc7\x02\xa7\x00\x27\x02"
		.ascii  "\x94\x02\x7e\x02\x03\x00\x26\x03"
		.ascii  "\x13\x01\xd8\x01\x8b\x01\x81\x01"
		.ascii  "\x53\x02\x69\x02\x1e\x01\xae\x00"
		.ascii  "\x38\x03\x2e\x01\x55\x01\xa2\x01"
		.ascii  "\xf6\x00\xa7\x01\x37\x00\xf9\x01"
		.ascii  "\xef\x03\x01\x00\xa3\x01\x47\x00"
		.ascii  "\x4b\x00\x04\x01\xe6\x03\x6b\x01"
		.ascii  "\x9e\x01\xc9\x00\xc9\x00\xd8\x00"
		.ascii  "\xff\x00\x08\x03\x8e\x03\x9f\x03"
		.ascii  "\xf1\x02\xd8\x01\x20\x02\x24\x00"
		.ascii  "\x85\x00\xd5\x01\xef\x01\x63\x02"
		.ascii  "\x03\x01\x75\x00\xce\x02\x98\x02"
		.ascii  "\x8b\x03\x80\x03\x2b\x00\x36\x02"
		.ascii  "\x0a\x02\x7b\x02\x15\x03\x03\x01"
		.ascii  "\xde\x00\xf1\x00\x57\x01\x43\x02"
		.ascii  "\x88\x00\x74\x02\x1f\x00\xcb\x03"
		.ascii  "\xd9\x00\x3b\x03\x84\x02\xdc\x02"
		.ascii  "\xed\x02\x35\x02\x49\x02\xac\x00"
		.ascii  "\x54\x01\x7a\x03\x4c\x03\x75\x02"
		.ascii  "\xd0\x03\xf7\x03\xed\x03\xf3\x02"
		.ascii  "\x0a\x02\x2e\x01\xdf\x02\x24\x01"
		.ascii  "\x8f\x02\xf8\x01\xb3\x00\x3c\x02"
		.ascii  "\x89\x01\x19\x03\x8e\x01\x9a\x02"
		.ascii  "\x82\x00\x94\x00\x58\x01\xad\x03"
		.ascii  "\x9e\x02\x98\x02\xd6\x02\x9f\x02"
		.ascii  "\xa5\x02\xe2\x02\xfd\x03\xaf\x01"
		.ascii  "\x3f\x02\x81\x01\xef\x03\x0f\x00"
		.ascii  "\xc4\x03\xcf\x01\xf3\x00\x2f\x02"
		.ascii  "\xfa\x01\x81\x02\xd4\x02\x55\x02"
		.ascii  "\x28\x03\xba\x01\x03\x00\x57\x03"
		.ascii  "\xdd\x02\xf2\x03\xd4\x01\x69\x01"
		.ascii  "\xc1\x03\x93\x02\x42\x02\xcb\x02"
		.ascii  "\xe4\x00\x3d\x01\x97\x03\x49\x00"
		.ascii  "\xd4\x03\x73\x02\x53\x00\x63\x03"
		.ascii  "\xe8\x02\xb2\x02\xb3\x03\xf9\x01"
		.ascii  "\x24\x01\xb9\x02\x3d\x01\x6b\x01"
		.ascii  "\x05\x03\xe8\x03\xaf\x03\xfa\x00"
		.ascii  "\xa4\x01\xa7\x03\xad\x01\x5a\x01"
		.ascii  "\x8b\x03\x95\x00\x94\x00\x4a\x01"
		.ascii  "\x9b\x00\x7f\x02\xcc\x03\x13\x01"
		.ascii  "\x66\x00\xeb\x03\xfb\x00\xdd\x00"
		.ascii  "\x57\x00\x1c\x02\x82\x03\x9e\x03"
		.ascii  "\x0f\x01\x75\x02\x93\x03\x9f\x02"
		.ascii  "\x55\x00\x10\x02\x4a\x03\x64\x03"
		.ascii  "\xf4\x02\x74\x02\x30\x02\xe5\x03"
		.ascii  "\xee\x03\x41\x00\x77\x01\xeb\x02"
		.ascii  "\x63\x00\xb9\x02\x5a\x01\x76\x00"
		.ascii  "\x84\x01\x02\x01\x04\x02\x14\x00"
		.ascii  "\xfc\x03\x01\x00\x54\x00\xfd\x00"
		.ascii  "\x2b\x02\xb0\x01\xe1\x00\xd6\x01"
		.ascii  "\x95\x00\xd1\x00\xa9\x01\x09\x00"
		.ascii  "\xdb\x01\xd2\x01\xba\x00\x0a\x00"

_096c48_data:
		.ascii  "\x07\x03\x1b\x07\x07\x03\x1b\x03"
		.ascii  "\x03\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x03\x07\x03\x03\x03\x0f"
		.ascii  "\x07\x07\x07\x03\x03\x03\x03\x0f"
		.ascii  "\x0b\x07\x03\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x03\x07\x03\x07\x07"
		.ascii  "\x1b\x07\x07\x03\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x07\x07\x0b\x0b"
		.ascii  "\x03\x07\x03\x03\x0b\x07\x03\x03"
		.ascii  "\x07\x07\x07\x07\x00\x07\x07\x07"
		.ascii  "\x0f\x07\x1f\x07\x07\x03\x03\x03"
		.ascii  "\x03\x03\x03\x1b\x03\x07\x03\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x1b\x03\x03\x03\x07\x0f"
		.ascii  "\x07\x07\x07\x07\x07\x1b\x03\x07"
		.ascii  "\x1b\x07\x07\x07\x07\x07\x07\x0b"
		.ascii  "\x03\x0b\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x03\x03\x03\x07\x03\x03"
		.ascii  "\x03\x03\x07\x07\x07\x07\x07\x0f"
		.ascii  "\x07\x1b\x07\x07\x03\x03\x03\x03"
		.ascii  "\x07\x03\x03\x03\x03\x03\x03\x07"
		.ascii  "\x03\x07\x03\x07\x03\x03\x03\x03"
		.ascii  "\x04\x04\x07\x03\x07\x07\x03\x07"
		.ascii  "\x07\x1b\x07\x03\x00\x1f\x07\x07"
		.ascii  "\x03\x07\x07\x07\x03\x07\x07\x03"
		.ascii  "\x07\x07\x07\x03\x07\x1b\x1f\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x07\x03\x03\x03\x07\x07\x07\x0f"
		.ascii  "\x03\x03\x07\x07\x04\x1b\x04\x07"
		.ascii  "\x07\x07\x03\x03\x03\x03\x07\x07"

_096d48_data:
		.ascii  "\x00\x00\x00\x02"
		.fill   0xb
		.ascii  "\x14\x1c\x00\x01\x02\x00\x00\x00"
		.ascii  "\x22"
		.fill   0x12
		.ascii  "\x01\x07\x02"
		.fill   0x5
		.ascii  "\x1e\x0f\x00\x02\x00\x00\x01"
		.fill   0xd
		.ascii  "\x28"
		.fill   0xb
		.ascii  "\x0a"
		.fill   0x5
		.ascii  "\x1e\x36"
		.fill   0xa
		.ascii  "\x28"
		.fill   0x4
		.ascii  "\x1e\x3c\x00\x3c\x28"
		.fill   0x7
		.ascii  "\x14\x00\x3c\x01"
		.fill   0x4
		.ascii  "\x09"
		.fill   0x9
		.ascii  "\x0a\x00\x0b"
		.fill   0x4
		.ascii  "\x1f\x19\x1e"
		.fill   0x6
		.ascii  "\x28\x00\x4b"
		.fill   0xd
		.ascii  "\x50"
		.fill   0x6
		.ascii  "\x3c"
		.fill   0x18
		.ascii  "\x01\x00\x00\x0c"
		.fill   0xf
		.ascii  "\x1e"
		.fill   0x7
		.ascii  "\x2d"
		.fill   0xb
		.ascii  "\x0f\x46"
		.fill   0xa
		.ascii  "\x07\x14"
		.fill   0x4

_096e48_data:
		.fill   0x2a
		.ascii  "\x41"
		.fill   0xd
		.ascii  "\x28"
		.fill   0x3f
		.ascii  "\x23"
		.fill   0x10
		.ascii  "\x15"
		.fill   0x3d
		.ascii  "\x28"
		.fill   0x26
		.ascii  "\x1d\x0f"
		.fill   0xb
		.ascii  "\x14"
		.fill   0x4

_096f48_data:
		.fill   0x54
		.ascii  "\x2a"
		.fill   0x1b
		.ascii  "\x38"
		.fill   0x7f
		.ascii  "\x78"
		.fill   0x21
		.ascii  "\x89"
		.fill   0x7b
		.ascii  "\xc7"
		.fill   0x4d
		.ascii  "\xee\x00\x17"
		.fill   0x17
		.ascii  "\x46"
		.fill   0x9

_097148_data:
		.ascii  "\x00"

_097149_data:
		.ascii  "\xff"

_09714a_data:
		.ascii  "\x00"

_09714b_data:
		.ascii  "\x7f\x35\x0f\x00\x50\x35\x00\x00"
		.ascii  "\x5a\x35\xff\x00\x5a\x3c\xff\x00"
		.ascii  "\x7f\x35\x05\x00\x73\x37\x03\x00"
		.ascii  "\x32\x35\xff\x00\x50\x35\x08\x00"
		.ascii  "\x37\x35\x0c\x00\x32\x35\xff\x00"
		.ascii  "\x50\x48\x06\x00\x5a\x35\x08\x00"
		.ascii  "\x3c\x41\x01\x00\x3c"

_097180_data:
		.ascii  "\x35"

_097181_data:
		.ascii  "\x07"

_097182_data:
		.ascii  "\x00\x50"

_097184_data:
		.ascii  "\x3a"

_097185_data:
		.ascii  "\x0d"

_097186_data:
		.ascii  "\x00\x50\x36\x04\x00\x50\x35\x1f"
		.ascii  "\x00\x50\x37\x1e\x00\x50"

_097194_data:
		.ascii  "\x3e"

_097195_data:
		.ascii  "\x10"

_097196_data:
		.ascii  "\x00\x50\x37\x15\x00\x41\x35\x16"
		.ascii  "\x00\x50\x31\x17\x00\x50\x3c\x19"
		.ascii  "\x00\x3c\x37\x18\x00\x4b\x35\x4c"
		.ascii  "\x00\x50\x35\xff\x00\x50\x38\xff"
		.ascii  "\x00\x50\x35\x47\x00\x3c\x35\x48"
		.ascii  "\x00\x41\x35\x49\x00\x50\x35\x4a"
		.ascii  "\x00\x50\x3c\x4b\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x35\x68\x00\x2d\x37\x4f"
		.ascii  "\x00\x3c\x36\x50\x00\x3c\x39\x51"
		.ascii  "\x00\x3c\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\x1a\x00\x50\x35\x55"
		.ascii  "\x00\x3c\x35\x5d\x00\x28\x35\x57"
		.ascii  "\x00\x50\x35\x58\x00\x50\x35\x59"
		.ascii  "\x00\x64\x35\x5a\x00\x50"

_097204_data:
		.ascii  "\x35"

_097205_data:
		.ascii  "\x5b"

_097206_data:
		.ascii  "\x00\x3c\x35\x5c\x00\x50\x35\x46"
		.ascii  "\x00\x46\x38\x1b\x00\x50\x33\x05"
		.ascii  "\x00\x50\x39\x60\x00\x50"

_09721c_data:
		.ascii  "\x35"

_09721d_data:
		.ascii  "\x01"

_09721e_data:
		.ascii  "\x00\x5a\x38\x56\x00\x50\x3c\x27"
		.ascii  "\x00\x50\x41\x27\x00\x50\x46\x27"
		.ascii  "\x00\x50\x35\x15\x00\x32\x35\x16"
		.ascii  "\x00\x3c\x35\x20\x00\x1e\x35\x21"
		.ascii  "\x00\x3c\x35\x6a\x00\x50\x35\x63"
		.ascii  "\x00\x50\x35\x6b\x00\x50\x35\x6b"
		.ascii  "\x00\x50\x35\x49\x00\x50\x35\x54"
		.ascii  "\x00\x46\x35\x0c\x00\x28\x35\x0b"
		.ascii  "\x00\x46\x3a\x5e\x00\x50\x33\x5f"
		.ascii  "\x00\x7f\x35\x60\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x35\xff\x00\x50\x35\x69"
		.ascii  "\x00\x2d\x35\x61\x00\x50\x35\x5f"
		.ascii  "\x00\x5f\x35\x15\x00\x50\x35\x16"
		.ascii  "\x00\x50"

_097288_data:
		.ascii  "\x35"

_097289_data:
		.ascii  "\x52"

_09728a_data:
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x54"
		.ascii  "\x00\x50\x35\x33\x00\x5f\x36\x34"
		.ascii  "\x00\x46\x35\x46\x00\x50\x35\x47"
		.ascii  "\x00\x28\x35\x48\x00\x3c\x38\x49"
		.ascii  "\x00\x7f\x35\x4a\x00\x50\x35\x4b"
		.ascii  "\x00\x50\x35\x3d\x00\x50\x35\x3e"
		.ascii  "\x00\x3c\x35\x36\x00\x50\x35\x37"
		.ascii  "\x00\x32\x30\x38\x00\x7f\x35\x4d"
		.ascii  "\x00\x50\x35\x4e\x00\x73\x35\x4f"
		.ascii  "\x00\x64\x35\x32\x00\x2d\x35\x50"
		.ascii  "\x00\x73\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x61"
		.ascii  "\x00\x7f\x35\x62\x00\x50\x35\x63"
		.ascii  "\x00\x50\x37\x64\x00\x50\x35\x65"
		.ascii  "\x00\x50\x35\x66\x00\x50\x35\x47"
		.ascii  "\x00\x46\x37\x46\x00\x46\x31\x47"
		.ascii  "\x00\x46\x35\x67\x00\x50\x35\x4b"
		.ascii  "\x00\x73\x32\x5e\x00\x7f\x33\x48"
		.ascii  "\x00\x50\x35\x49\x00\x50\x39\xff"
		.ascii  "\x00\x50\x35\x4b\x00\x78\x37\x4c"
		.ascii  "\x00\x7f\x35\x4d\x00\x6e\x35\x4e"
		.ascii  "\x00\x50\x35\x50\x00\x50\x38\x4f"
		.ascii  "\x00\x37\x37\x51\x00\x50\x3f\x52"
		.ascii  "\x00\x37\x35\xff\x00\x50\x3e\x54"
		.ascii  "\x00\x2d\x39\x55\x00\x50\x3c\x56"
		.ascii  "\x00\x50\x35\x57\x00\x5a\x35\x58"
		.ascii  "\x00\x7f\x35\xff\x00\x50\x35\x13"
		.ascii  "\x00\x25\x35\x0f\x00\x41\x35\x24"
		.ascii  "\x00\x5a\x35\x22\x00\x50\x35\x23"
		.ascii  "\x00\x50\x35\x62\x00\x2d\x37\x62"
		.ascii  "\x00\x2d\x35\xff\x00\x50\x35\x49"
		.ascii  "\x00\x50\x32\x4a\x00\x50\x41\x4b"
		.ascii  "\x00\x50\x35\x67\x00\x64\x37\x4c"
		.ascii  "\x00\x1e\x3b\x4d\x00\x28\x35\xff"
		.ascii  "\x00\x50\x35\x4f\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\x51\x00\x50\x35\xff"
		.ascii  "\x00\x50\x3d\x53\x00\x78\x35\x54"
		.ascii  "\x00\x2d\x35\x55\x00\x50\x35\x56"
		.ascii  "\x00\x50\x3c\xff\x00\x7f\x35\x57"
		.ascii  "\x00\x50\x35\x58\x00\x50\x35\x59"
		.ascii  "\x00\x55\x35\x5a\x00\x37\x3c\x48"
		.ascii  "\x00\x46\x3c\x48\x00\x46\x35\x49"
		.ascii  "\x00\x50\x3c\x33\x00\x46\x35\xff"
		.ascii  "\x00\x50\x35\x3f\x00\x6e\x35\x4c"
		.ascii  "\x00\x50\x35\x4d\x00\x37"

_0973f0_data:
		.ascii  "\x35"

_0973f1_data:
		.ascii  "\x4e"

_0973f2_data:
		.ascii  "\x00\x50\x35\x4f\x00\x50\x35\x50"
		.ascii  "\x00\x50\x32\xff\x00\x50\x35\x52"
		.ascii  "\x00\x50\x37\x53\x00\x50\x30\x54"
		.ascii  "\x00\x5a\x2e\x55\x00\x50\x32\xff"
		.ascii  "\x00\x50\x35\x56\x00\x50\x35\x46"
		.ascii  "\x00\x28\x35\x47\x00\x28\x35\x48"
		.ascii  "\x00\x50\x35\x49\x00\x50\x35\x4a"
		.ascii  "\x00\x37\x35\x4b\x00\x50\x35\x4c"
		.ascii  "\x00\x50\x35\x4d\x00\x50\x35\x4e"
		.ascii  "\x00\x64\x35\x4f\x00\x7f\x35\x50"
		.ascii  "\x00\x50\x35\x51\x00\x50\x32\x25"
		.ascii  "\x00\x41\x35\x26\x00\x3c\x35\x0b"
		.ascii  "\x00\x50\x25\x68\x00\x1e\x3c\xff"
		.ascii  "\x00\x7f\x35\x08\x00\x50\x35\x64"
		.ascii  "\x00\x50\x38\x01\x00\x50\x35\x35"
		.ascii  "\x00\x32\x35\x3c\x00\x2d\x35\x4c"
		.ascii  "\x00\x50\x35\x62\x00\x64\x35\x29"
		.ascii  "\x00\x28\x35\x39\x00\x50\x35\x28"
		.ascii  "\x00\x64\x3c\x27\x00\x69\x35\x62"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x4c"
		.ascii  "\x00\x7f\x3c\x60\x00\x50\x35\x2a"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x2b"
		.ascii  "\x00\x50\x35\xff\x00\x50\x2e\x5a"
		.ascii  "\x00\x5a\x35\x5c\x00\x50\x35\x5f"
		.ascii  "\x00\x28\x35\x5e\x00\x32\x35\x5e"
		.ascii  "\x00\x50\x35\x52\x00\x50\x35\x53"
		.ascii  "\x00\x50\x32\x54\x00\x46\x34\x4d"
		.ascii  "\x00\x50\x38\x4a\x00\x50\x32\x4a"
		.ascii  "\x00\x50\x35\x5a\x00\x50\x35\x59"
		.ascii  "\x00\x50\x35\x55\x00\x50\x30\x56"
		.ascii  "\x00\x50\x35\x57\x00\x50\x39\x58"
		.ascii  "\x00\x50\x32\x4c\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x3c\xff\x00\x7f\x35\x33"
		.ascii  "\x00\x7f\x3c\x19\x00\x3c\x41\x15"
		.ascii  "\x00\x32\x41\x16\x00\x3c\x35\x5d"
		.ascii  "\x00\x37\x35\x5e\x00\x7f\x35\x5e"
		.ascii  "\x00\x7f"

_09751c_data:
		.ascii  "\x35"

_09751d_data:
		.ascii  "\x5c"

_09751e_data:
		.ascii  "\x00\x28\x35\x5f\x00\x7f\x35\x37"
		.ascii  "\x00\x50\x46\x61\x00\x37\x3c\x61"
		.ascii  "\x00\x32\x3c\x67\x00\x50\x3a\x65"
		.ascii  "\x00\x50\x35\x66\x00\x50\x35\x13"
		.ascii  "\x00\x50\x3c\xff\x00\x7f\x3c\xff"
		.ascii  "\x00\x7f"

_097548_data:
		.fill   0x4
		.ascii  "\x01"
		.fill   0x14
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x00"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x00\x00\x01\x00\x01"
		.fill   0x7
		.ascii  "\x01\x01\x01\x01\x01\x01\x00\x00"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x00"
		.ascii  "\x00\x00\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01"
		.fill   0x6
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01"
		.fill   0x6
		.ascii  "\x01\x01\x01\x01\x01\x01\x00\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01"
		.fill   0x4
		.ascii  "\x01\x00\x01\x00\x01\x01\x01\x01"
		.ascii  "\x00\x01\x00\x00\x01\x01\x01\x01"
		.ascii  "\x01\x00\x00\x01\x00\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"

_097634_data:
		.ascii  "\x01\x01\x01"
		.fill   0x4
		.ascii  "\x01\x01\x00\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x00"

_097646_data:
		.ascii  "\x01\x01"

_097648_data:
		.ascii  "\x7f\x00\x01\x00\x00\x02\x04\x05"
		.ascii  "\x07\x09\x0b\x0c"

_097654_data:
		.ascii   "(.37<@CFHJMPSVY[]_`behkmoqsuxz|}"
		.ascii  "\x7f\x81\x83\x85\x87\x89\x8a\x8c"
		.ascii  "\x8e\x90\x91\x93\x95\x96\x98\x99"
		.ascii  "\x9b\x9c\x9e\xa0\xa1\xa3\xa4\xa6"
		.ascii  "\xa7\xa8\xaa\xab\xad\xae\xb0\xb1"
		.ascii  "\xb2\xb4\xb5\xb6\xb8\xb9\xba\xbb"
		.ascii  "\xbd\xbe\xbf\xc1\xc2\xc3\xc4\xc6"
		.ascii  "\xc7\xc8\xc9\xca\xcb\xcd\xce\xcf"
		.ascii  "\xd0\xd2\xd3\xd4\xd5\xd6\xd7\xd9"
		.ascii  "\xda\xdb\xdc\xde\xdf\xe0\xe1\xe2"
		.ascii  "\xe3\xe5\xe6\xe7\xe8\xe9\xea\xeb"
		.ascii  "\xec\xed\xee\xef\xf0\xf1\xf2\xf3"
		.ascii  "\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb"

_0976d4_data:
		.ascii  "\x00\x00"

_0976d6_data:
		.ascii  "\x01\x00"

_0976d8_data:
		.ascii  "\xff\xff"

_0976da_data:
		.fill   0x4
		.ascii  "\x01\x00\x01\x00\xfd\xff\x3c\x00"
		.ascii  "\x00\x00\x02\x00\x02\x00\xfe\xff"
		.fill   0x4
		.ascii  "\x01\x00\x03\x00\xfc\xff\x1e\x00"
		.ascii  "\x00\x00\x01\x00\x02\x00\xfc\xff"
		.ascii  "\x1e\x00\x00\x00\x01\x00\x02\x00"
		.ascii  "\xfd\xff\x2a\x00\x00\x00\x01\x00"
		.ascii  "\x01\x00\xfc\xff\x50\x00\x00\x00"

_09771a_data:
		.ascii  "\x01"

_09771b_data:
		.ascii  "\x01"

_09771c_data:
		.ascii  "\x00\x00\x03\xff\x00\x00\x01\x01"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x1d
		.ascii  "\x09\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x03\xff\x00\x00\x05"
		.fill   0x5
		.ascii  "\x01"
		.fill   0x19
		.ascii  "\x02\x01\x00\x00\x07\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x08\x00\x00\x00"
		.ascii  "\x01\xff"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x15
		.ascii  "\x03\xff\x00\x00\x04\xff\x00\x00"
		.ascii  "\x06\x01\x00\x00\x09\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x09"
		.fill   0x7
		.ascii  "\x09\x00\x01"
		.fill   0xb
		.ascii  "\x01\x00\x02\x00\x03\x00\x04\x00"
		.ascii  "\x00\x00\x06\x00\x06\x00\x00\x00"

_0977dc_data:
		.ascii  "\x00\x00\x01\x02\x02\x00\x01\x02"
		.ascii  "\x02\x02\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x02\x02\x02\x00\x00\x01\x00"
		.ascii  "\x00\x01\x02\x00\x02\x02\x00\x00"
		.ascii  "\x02\x02"
		.fill   0x4
		.ascii  "\x02\x02"
		.fill   0x4
		.ascii  "\x02\x00\x02\x02\x02\x02\x00\x00"
		.ascii  "\x02\x00\x00\x02\x02\x02\x02\x02"

_097818_data:
		.ascii  "\x01\x01\x01\x01\x01\x04\x04\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x04"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x02\x0a\x01\x02\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x02\x04\x05\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x03\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x02\x03\x01"
		.ascii  "\x01\x01\x01\x01"

_097854_data:
		.ascii  "\x20\x01"

_097856_data:
		.ascii  "\x02\x00"

_097858_data:
		.ascii  "\x00\x00"

_09785a_data:
		.fill   0x95a
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x40\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x58\x00\x04\x00\x04\x00\x04\x00"
		.ascii  "\x6e\x00\x04"
		.fill   0x5
		.ascii  "\x0f\x00\x03"
		.fill   0x5
		.ascii  "\x4b\x00\x02"
		.fill   0x94d
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\xc0\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x945
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xa8\x00\x04\x00\x04\x00\x05\x00"
		.ascii  "\x46\x00\x04"
		.fill   0x5
		.ascii  "\x32\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x40\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x01"
		.fill   0x95d
		.ascii  "\x9f\x00\x04"
		.fill   0x5
		.ascii  "\x81\x00\x02"
		.fill   0x955
		.ascii  "\x0c\x00\x06"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x38\x00\x06"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x1c\x00\x06"
		.fill   0x5
		.ascii  "\x10\x00\x08"
		.fill   0x915
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x54\x00\x04"
		.fill   0x5
		.ascii  "\xcc\x00\x02"
		.fill   0x955
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xb1\x00\x04"
		.fill   0x5
		.ascii  "\x6f\x00\x02"
		.fill   0x955
		.ascii  "\xb3"
		.fill   0x5
		.ascii  "\x03\x00\x14\x00\x00\x00\x10\x00"
		.ascii  "\x01\x00\x01\x00\x00\x00\x20\x00"
		.ascii  "\x01\x00\x28"
		.fill   0x5
		.ascii  "\x03"
		.fill   0x941
		.ascii  "\xb7\x00\x04\x00\x04\x00\x04\x00"
		.ascii  "\x05\x00\x08"
		.fill   0x5
		.ascii  "\x15\x00\x06"
		.fill   0x5
		.ascii  "\x4e\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x93d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x6d\x00\x06"
		.fill   0x5
		.ascii  "\xb2\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xd5\x00\x04"
		.fill   0x5
		.ascii  "\x4b\x00\x02"
		.fill   0x955
		.ascii  "\xc8\x00\x06"
		.fill   0x5
		.ascii  "\x57\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d

_0baad4_data:
		.fill   0x5
		.ascii  "\x0e\x09"
		.fill   0x8
		.ascii  "\x0f"
		.fill   0x8
		.ascii  "\x04\x00\x00\x02"
		.fill   0x7
		.ascii  "\x03\x0a\x0c"
		.fill   0x7
		.ascii  "\x0b"
		.fill   0x7
		.ascii  "\x06\x0d"
		.fill   0x5

_0bab10_data:
		.ascii  "\x00\x00"

_0bab12_data:
		.ascii  "\x00\x00"

_0bab14_data:
		.fill   0x31e
		.ascii  "\x46\x00\x01\x00\x00\x00\x35\x00"
		.ascii  "\x40\x00\x01\x00\x00\x00\x59\x00"
		.ascii  "\x24\x00\x01\x00\x00\x00\x79\x00"
		.ascii  "\x31\x00\x01\x00\x00\x00\x95\x00"
		.ascii  "\x47\x00\x01\x00\x00\x00\xc3\x00"
		.ascii  "\x3b\x00\x01\x00\x00\x00\xef\x00"
		.ascii  "\x18\x00\x01\x00\x00\x00\x17\x01"
		.ascii  "\x00\x00\x01\x00\x00\x00\x48\x01"
		.ascii  "\x47\x00\x01\x00\x00\x00\x2b\x01"
		.ascii  "\xaf\x00\x02\x00\x00\x00\xaf\x00"
		.ascii  "\xaa\x00\x02\x00\x00\x00\x26\x00"
		.ascii  "\xae\x00\x02\x00\x00\x00\x06\x01"
		.ascii  "\xb9\x00\x03\x00\x00\x00\x6c\x01"
		.ascii  "\x94\x00\x03"
		.fill   0x33
		.ascii  "\x40\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x40\x00\x78\x00\x01\x00\x00\x00"
		.ascii  "\xc0\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\xc0\x00\x78\x00\x03"
		.fill   0xd
		.ascii  "\x99"
		.fill   0x5
		.ascii  "\x28\x01"
		.fill   0x6
		.ascii  "\x28\x01\x35"
		.fill   0x5
		.ascii  "\x28\x01\x8d"
		.fill   0x55d
		.ascii  "\xaa\x00\x61\x00\x01\x00\x00\x00"
		.ascii  "\xea\x00\x4b\x00\x01\x00\x00\x00"
		.ascii  "\x2a\x01\x88\x00\x01\x00\x00\x00"
		.ascii  "\x6a\x01\x88\x00\x01\x00\x00\x00"
		.ascii  "\x2a\x00\x79\x00\x01\x00\x00\x00"
		.ascii  "\x6a\x00\x75\x00\x01\x00\x00\x00"
		.ascii  "\xaa\x00\xe3\x00\x02\x00\x00\x00"
		.ascii  "\xd8\x00\xe5\x00\x02\x00\x00\x00"
		.ascii  "\x32\x01\xe1\x00\x02\x00\x00\x00"
		.ascii  "\x72\x01\x6b\x00\x02\x00\x00\x00"
		.ascii  "\x32\x00\x7f\x00\x02\x00\x00\x00"
		.ascii  "\x52\x00\xcd\x00\x02\x00\x00\x00"
		.ascii  "\x8a\x00\xdd\x00\x02\x00\x00\x00"
		.ascii  "\x68\x01\xe1\x00\x03\x00\x00\x00"
		.ascii  "\x28\x00\x0f\x01\x03"
		.fill   0x52b
		.ascii  "\x3f\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\x70\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\xff\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\x30\x01\x8f\x00\x01"
		.fill   0x1c3
		.ascii  "\x06\x00\x42\x00\x01\x00\x00\x00"
		.ascii  "\x08\x01\x39\x00\x01"
		.fill   0x4f3
		.ascii  "\x8a\x00\x8d\x00\x01\x00\x00\x00"
		.ascii  "\xca\x00\x93\x00\x01\x00\x00\x00"
		.ascii  "\x0a\x01\x97\x00\x01"
		.fill   0x8d
		.ascii  "\x7b\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\x89\x00\x01\x00\x00\x00\x80\x00"
		.ascii  "\x83\x00\x01\x00\x00\x00\xc0\x00"
		.ascii  "\x8d\x00\x01"
		.fill   0x4
		.ascii  "\x01\xa1\x00\x01"
		.fill   0x5
		.ascii  "\xb9\x00\x02\x00\x00\x00\x40\x00"
		.ascii  "\xa6\x00\x02\x00\x00\x00\x80\x00"
		.ascii  "\xa4\x00\x02\x00\x00\x00\xc0\x00"
		.ascii  "\xa4\x00\x02"
		.fill   0x4
		.ascii  "\x01\xb0\x00\x02"
		.fill   0x55
		.ascii  "\x93\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\xad\x00\x01\x00\x00\x00\x80\x00"
		.ascii  "\x84\x00\x01\x00\x00\x00\xc0\x00"
		.ascii  "\x70\x00\x01"
		.fill   0x4
		.ascii  "\x01\x72\x00\x01\x00\x00\x00\x40"
		.ascii  "\x01\x7f\x00\x01"
		.fill   0x5
		.ascii  "\xde\x00\x04\x00\x00\x00\x40\x00"
		.ascii  "\xec\x00\x04\x00\x00\x00\x80\x00"
		.ascii  "\xdb\x00\x04\x00\x00\x00\xc0\x00"
		.ascii  "\xe3\x00\x04"
		.fill   0x4
		.ascii  "\x01\xe9\x00\x04\x00\x00\x00\x40"
		.ascii  "\x01\xe7\x00\x04"
		.fill   0x4a5
		.ascii  "\x55\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\x52\x00\x01\x00\x00\x00\x93\x00"
		.ascii  "\x2c\x00\x01\x00\x00\x00\xd3\x00"
		.ascii  "\x2c\x00\x01\x00\x00\x00\x4c\x01"
		.ascii  "\x60\x00\x01"
		.fill   0x5
		.ascii  "\xd8\x00\x02\x00\x00\x00\x40\x00"
		.ascii  "\xd0\x00\x02\x00\x00\x00\x80\x00"
		.ascii  "\xd7\x00\x02\x00\x00\x00\xc0\x00"
		.ascii  "\xec\x00\x02"
		.fill   0x4
		.ascii  "\x01\xe3\x00\x02\x00\x00\x00\x40"
		.ascii  "\x01\xe1\x00\x02"
		.fill   0x4ab
		.ascii  "\x43\x00\xb9\x00\x01\x00\x00\x00"
		.ascii  "\x73\x00\xa2\x00\x01\x00\x00\x00"
		.ascii  "\xd3\x00\xa6\x00\x01\x00\x00\x00"
		.ascii  "\x03\x01\x75\x00\x01\x00\x00\x00"
		.ascii  "\x43\x01\x6f\x00\x01\x00\x00\x00"
		.ascii  "\x59\x01\xab\x00\x01"
		.fill   0x73
		.ascii  "\x19\x00\x69\x00\x01\x00\x00\x00"
		.ascii  "\xa2\x00\xb6\x00\x01\x00\x00\x00"
		.ascii  "\xd6\x00\xa8\x00\x01\x00\x00\x00"
		.ascii  "\x4a\x01\xad\x00\x01"
		.fill   0x5
		.ascii  "\x0a\x01\x02\x00\x00\x00\x20\x00"
		.ascii  "\xe3\x00\x02\x00\x00\x00\x41\x00"
		.ascii  "\x83\x00\x02\x00\x00\x00\x54\x00"
		.ascii  "\xfb\x00\x02\x00\x00\x00\xa4\x00"
		.ascii  "\xea\x00\x02\x00\x00\x00\xd8\x00"
		.ascii  "\x00\x01\x02\x00\x00\x00\xef\x00"
		.ascii  "\xad\x00\x02\x00\x00\x00\x1c\x01"
		.ascii  "\x10\x01\x02\x00\x00\x00\x58\x01"
		.ascii  "\xfe\x00\x02"
		.fill   0x35b

_0bd090_data:
		.ascii  "\x00\x00\x00\x01\x03\x05\x07"
		.ascii   "\t\n\n\n\t"
		.ascii  "\x07\x05\x03\x01"

_0bd0a0_data:
		.ascii  "\x04\x00\x02\x00\x00\x00\xfe\xff"
		.ascii  "\xfc\xff\x02\x00\x00\x00\xfe\xff"

_0bd0b0_data:
		.ascii  "\x00\x00\x02\x00\x04\x00\x02\x00"
		.ascii  "\x00\x00\xfe\xff\xfc\xff\xfe\xff"
		.fill   0x4

_0bd0c4_data:
		.fill   0x5
		.ascii  "\x08\x00\x00"

_0bd0cc_data:
		.ascii  "\x7a"

_0bd0cd_data:
		.ascii  "\xaa\x00\x00"

_0bd0d0_data:
		.fill   0x4

_0bd0d4_data:
		.ascii  "\xe8\x6d\x04\x00"

_0bd0d8_data:
		.ascii  "\x7a"

_0bd0d9_data:
		.ascii  "\x23\x00\x00"

_0bd0dc_data:
		.ascii  "\x00\x20"
		.fill   0xa
		.ascii  "\x01\x00\x00\x00"

_0bd0ec_data:
		.fill   0xc

_0bd0f8_data:
		.fill   0x4

_0bd0fc_data:
		.fill   0x2c

_0bd128_data:
		.fill   0x6

_0bd12e_data:
		.ascii  "\x00\x00\x0b\x00\x0c\x00\x0d\x00"
		.ascii  "\x0e\x00\x0f\x00\x10\x00\x10\x00"
		.ascii  "\x11\x00\x13\x00\x14\x00\x15\x00"
		.ascii  "\x16\x00\x17\x00\x19\x00\x1a\x00"
		.ascii  "\x1c\x00\x1e\x00\x20\x00\x21\x00"
		.ascii  "\x23\x00\x26\x00\x28\x00\x2a\x00"
		.ascii  "\x2d\x00\x2f\x00\x32\x00\x35\x00"
		.ascii  "\x39\x00\x3c\x00\x40\x00\x43\x00"
		.ascii  "\x47\x00\x4c\x00\x50\x00\x55\x00"
		.ascii  "\x5a\x00\x60\x00\x65\x00\x6b\x00"
		.ascii  "\x72\x00\x78\x00\x80\x00\x87\x00"
		.ascii  "\x8f\x00\x98\x00\xa1\x00\xaa\x00"
		.ascii  "\xb5\x00\xbf\x00\xcb\x00\xd7\x00"
		.ascii  "\xe4\x00\xf1\x00\x00\x01\x0f\x01"
		.ascii  "\x1f\x01\x30\x01\x42\x01\x55\x01"
		.ascii  "\x6a\x01\x7f\x01\x96\x01\xae\x01"
		.ascii  "\xc8\x01\xe3\x01\x00\x02\x1e\x02"
		.ascii  "\x3e\x02\x60\x02\x85\x02\xab\x02"
		.ascii  "\xd4\x02\xff\x02\x2c\x03\x5d\x03"
		.ascii  "\x90\x03\xc6\x03\x00\x04\x3c\x04"
		.ascii  "\x7d\x04\xc1\x04\x0a\x05\x56\x05"
		.ascii  "\xa8\x05\xfe\x05\x59\x06\xba\x06"
		.ascii  "\x20\x07\x8d\x07\x00\x08\x79\x08"
		.ascii  "\xfa\x08\x83\x09\x15\x0a\xad\x0a"
		.ascii  "\x50\x0b\xfc\x0b\xb2\x0c\x74\x0d"
		.ascii  "\x41\x0e\x1a\x0f\x00\x10\xf3\x10"
		.ascii  "\xf5\x11\x06\x13\x28\x14\x5b\x15"
		.ascii  "\xa0\x16\xf9\x17\x65\x19\xe8\x1a"
		.ascii  "\x82\x1c\x34\x1e\x00\x20\xe7\x21"
		.ascii  "\xeb"
		.ascii   "#\r&Q("
		.ascii  "\xb7\x2a\x41\x2d\xf2\x2f\xcb\x32"
		.ascii  "\xd1\x35\x04\x39\x68\x3c\x00\x40"
		.ascii  "\xce\x43\xd6\x47"

_0bd230_data:
		.fill   0x4

_0bd234_data:
		.ascii  "\x20\x00\x00\x00"

_0bd238_data:
		.fill   0x4

_0bd23c_data:
		.fill   0x4

_0bd240_data:
		.long   _07882b_jump

_0bd244_data:
		.long   _07882b_jump

_0bd248_data:
		.long   _07882b_jump

_0bd24c_data:
		.ascii  "\x00\x00"

_0bd24e_data:
		.string "Stack Overflow!\r\n"

_0bd260_data:
		.ascii  "\x01\x00\x00\x00"

_0bd264_data:
		.fill   0x4

_0bd268_data:
		.fill   0x4

_0bd26c_data:
		.fill   0x4

_0bd270_data:
		.ascii  "\x00"

_0bd271_data:
		.ascii  "\x00\x00\x00"

_0bd274_data:
		.fill   0xc
		.ascii  "\x01"
		.fill   0xd

_0bd28e_data:
		.fill   0xc
		.ascii  "\x02\x00\x00\x00\x01"
		.fill   0x15
		.ascii  "\x02"

_0bd2b5_data:
		.ascii  "\x00\x00\x00\x02"
		.fill   0x15
		.ascii  "\x03\x00\x00\x00\x03"
		.fill   0x15
		.ascii  "\x02\x00\x00\x00\x04"
		.fill   0x9

_0bd2f6_data:
		.fill   0x186

_0bd47c_data:
		.ascii  "\x61"

_0bd47d_data:
		.ascii  "\x00\x01\x00\x00"
		.long   _0dedd4_data
		.ascii  "\x00\x00\x00"

_0bd488_data:
		.fill   0x4

_0bd48c_data:
		.fill   0x4

_0bd490_data:
		.fill   0x4

_0bd494_data:
		.fill   0x4

_0bd498_data:
		.fill   0x4

_0bd49c_data:
		.fill   0x4

_0bd4a0_data:
		.fill   0x4

_0bd4a4_data:
		.fill   0x4

_0bd4a8_data:
		.fill   0x4

_0bd4ac_data:
		.fill   0xc

_0bd4b8_data:
		.ascii  "\x00\x00"

_0bd4ba_data:
		.ascii  "\x00"

_0bd4bb_data:
		.ascii  "\x00"

_0bd4bc_data:
		.ascii  "\x00"

_0bd4bd_data:
		.fill   0x4

_0bd4c1_data:
		.ascii  "\x00\x00"

_0bd4c3_data:
		.ascii  "\x00"

_0bd4c4_data:
		.ascii  "\x00"

_0bd4c5_data:
		.long   _07e0f5_func

_0bd4c9_data:
		.fill   0x4
		.ascii  "\x09\x01\x01\x0b\x06\x04\x05\x05"
		.ascii  "\x05\x02\x03\xff\xff\x07\x08"

_0bd4dc_data:
		.ascii  "\x06\x08\x01\xff"
		.long   _0c0bd8_data
		.long   _0c0bdd_data
		.long   _0c0be2_data
		.long   _0c0be7_data
		.long   _0c0beb_data
		.long   _0c0bf0_data
		.long   _0c0bf5_data
		.long   _0c0bf9_data
		.long   _0c0bff_data
		.long   _0c0c04_data
		.long   _0c0c08_data
		.long   _0c0c0e_data
		.long   _0c0c14_data
		.long   _0c0c1a_data
		.long   _0c0c1f_data
		.long   _0c0c25_data
		.long   _0c0c29_data
		.long   _0c0c2d_data
		.long   _0c0c31_data
		.long   _0c0c34_data
		.long   _0c0c37_data
		.long   _0c0c3a_data
		.long   _0c0c3e_data

_0bd53c_data:
		.fill   0x4

_0bd540_data:
		.ascii  "\x14\x00\x00\x00"

_0bd544_data:
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x02"
		.fill   0x3f

_0bd594_data:
		.long   _0bd544_data

_0bd598_data:
		.fill   0x4

_0bd59c_data:
		.fill   0x14

_0bd5b0_data:
		.fill   0x14

_0bd5c4_data:
		.fill   0x4

_0bd5c8_data:
		.fill   0x1a

_0bd5e2_data:
		.fill   0x4

_0bd5e6_data:
		.fill   0x1a

_0bd600_data:
		.fill   0x14

_0bd614_data:
		.fill   0x14

_0bd628_data:
		.fill   0x4

_0bd62c_data:
		.fill   0x1a

_0bd646_data:
		.fill   0x4

_0bd64a_data:
		.fill   0x1a

_0bd664_data:
		.fill   0x14

_0bd678_data:
		.fill   0x14

_0bd68c_data:
		.fill   0x14

_0bd6a0_data:
		.fill   0x14

_0bd6b4_data:
		.fill   0x14

_0bd6c8_data:
		.ascii  "\xf8\x2a\x00\x00\xf8\x2a\x00\x00"
		.ascii  "\xf8\x2a\x00\x00\xf8\x2a\x00\x00"
		.ascii  "\xe8\x03\x00\x00"

_0bd6dc_data:
		.fill   0x14

_0bd6f0_data:
		.fill   0x4

_0bd6f4_data:
		.fill   0x1a

_0bd70e_data:
		.fill   0x14

_0bd722_data:
		.fill   0x14

_0bd736_data:
		.fill   0x14

_0bd74a_data:
		.fill   0x4

_0bd74e_data:
		.fill   0x1a

_0bd768_data:
		.fill   0x4

_0bd76c_data:
		.fill   0x3bc

_0bdb28_data:
		.fill   0x4

_0bdb2c_data:
		.fill   0x1e

_0bdb4a_data:
		.fill   0x18

_0bdb62_data:
		.fill   0x24

_0bdb86_data:
		.fill   0x19

_0bdb9f_data:
		.fill   0x2b

_0bdbca_data:
		.fill   0x220

_0bddea_data:
		.ascii  "\x01\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x05\x00\x00\x00\x07\x00\x00\x00"
		.ascii  "\xc2\x00\x00\x00\xc6\x00\x00\x00"
		.ascii  "\xca\x00\x00\x00\xce\x00\x00\x00"

_0bde0a_data:
		.fill   0x5

_0bde0f_data:
		.fill   0x4

_0bde13_data:
		.fill   0x4

_0bde17_data:
		.fill   0x4

_0bde1b_data:
		.fill   0x4

_0bde1f_data:
		.fill   0x4

_0bde23_data:
		.fill   0x4

_0bde27_data:
		.fill   0x4

_0bde2b_data:
		.fill   0x4

_0bde2f_data:
		.fill   0x4

_0bde33_data:
		.fill   0x4

_0bde37_data:
		.fill   0x4

_0bde3b_data:
		.fill   0x4

_0bde3f_data:
		.fill   0x4

_0bde43_data:
		.fill   0x4

_0bde47_data:
		.fill   0x4

_0bde4b_data:
		.fill   0x4

_0bde4f_data:
		.fill   0x4

_0bde53_data:
		.fill   0x13c

_0bdf8f_data:
		.ascii  "\xff\xff\xff\xff"

_0bdf93_data:
		.fill   0x4

_0bdf97_data:
		.fill   0x56

_0bdfed_data:
		.fill   0x4

_0bdff1_data:
		.ascii  "\x00\x00"

_0bdff3_data:
		.fill   0x3c

_0be02f_data:
		.fill   0x4

_0be033_data:
		.fill   0x3c

_0be06f_data:
		.fill   0x4

_0be073_data:
		.ascii  "\x00\x00"

_0be075_data:
		.fill   0x3e

_0be0b3_data:
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"

_0be0c3_data:
		.ascii  "\x00"

_0be0c4_data:
		.fill   0xff

_0be1c3_data:
		.fill   0xff

_0be2c2_data:
		.fill   0x4

_0be2c6_data:
		.fill   0x20

_0be2e6_data:
		.fill   0x8

_0be2ee_data:
		.fill   0x4

_0be2f2_data:
		.fill   0x24

_0be316_data:
		.fill   0x4

_0be31a_data:
		.fill   0x5

_0be31f_data:
		.ascii  "\x00\x00\x00"

_0be322_data:
		.fill   0x4

_0be326_data:
		.fill   0x4

_0be32a_data:
		.ascii  "\x00\x00"

_0be32c_data:
		.fill   0x4

_0be330_data:
		.ascii  "\x00\x00"

_0be332_data:
		.fill   0x4

_0be336_data:
		.fill   0x4

_0be33a_data:
		.fill   0x4

_0be33e_data:
		.fill   0x4

_0be342_data:
		.fill   0x4

_0be346_data:
		.fill   0x4

_0be34a_data:
		.ascii  "\x00\x00"

_0be34c_data:
		.fill   0x3c

_0be388_data:
		.ascii  "\x00"

_0be389_data:
		.fill   0x2f

_0be3b8_data:
		.long   _0c0c44_data
		.long   _0c0c6a_data
		.long   _0c0c89_data
		.long   _0c0ca3_data
		.long   _0c0ccb_data
		.long   _0c0cdd_data
		.long   _0c0cf7_data
		.long   _0c0d09_data
		.long   _0c0d1a_data
		.long   _0c0d43_data
		.long   _0c0d70_data
		.long   _0c0d7f_data
		.long   _0c0d94_data
		.long   _0c0dac_data
		.long   _0c0dc0_data
		.long   _0c0dd2_data
		.long   _0c0ded_data
		.long   _0c0dfc_data
		.long   _0c0e0a_data
		.long   _0c0e18_data

_0be408_data:
		.fill   0x14

_0be41c_data:
		.fill   0x4

_0be420_data:
		.fill   0xc

_0be42c_data:
		.fill   0x4

_0be430_data:
		.fill   0x4

_0be434_data:
		.fill   0x4

_0be438_data:
		.fill   0x4

_0be43c_data:
		.fill   0x4

_0be440_data:
		.fill   0x4

_0be444_data:
		.fill   0xc

_0be450_data:
		.fill   0x20

_0be470_data:
		.fill   0xc

_0be47c_data:
		.fill   0x24

_0be4a0_data:
		.fill   0x4

_0be4a4_data:
		.fill   0x5

_0be4a9_data:
		.ascii  "\x00\x00\x00"

_0be4ac_data:
		.fill   0x4

_0be4b0_data:
		.fill   0x4

_0be4b4_data:
		.fill   0x4

_0be4b8_data:
		.fill   0x4

_0be4bc_data:
		.fill   0x8

_0be4c4_data:
		.fill   0x4

_0be4c8_data:
		.fill   0x4

_0be4cc_data:
		.ascii  "\x00\x00"

_0be4ce_data:
		.long   _0bf4de_data

_0be4d2_data:
		.fill   0x4

_0be4d6_data:
		.fill   0x4

_0be4da_data:
		.fill   0x1004

_0bf4de_data:
		.fill   0x4

_0bf4e2_data:
		.fill   0x4

_0bf4e6_data:
		.ascii  "\x00\x00"

_0bf4e8_data:
		.fill   0x4

_0bf4ec_data:
		.fill   0x4

_0bf4f0_data:
		.fill   0x4

_0bf4f4_data:
		.fill   0x4

_0bf4f8_data:
		.fill   0x50

_0bf548_data:
		.fill   0x4

_0bf54c_data:
		.fill   0x4

_0bf550_data:
		.fill   0x4

_0bf554_data:
		.fill   0x4

_0bf558_data:
		.fill   0x3c

_0bf594_data:
		.fill   0x50

_0bf5e4_data:
		.fill   0x4

_0bf5e8_data:
		.fill   0x4

_0bf5ec_data:
		.fill   0x4

_0bf5f0_data:
		.fill   0x4

_0bf5f4_data:
		.fill   0x4

_0bf5f8_data:
		.long   _082173_func

_0bf5fc_data:
		.long   _082173_func

_0bf600_data:
		.long   _08346a_func

_0bf604_data:
		.fill   0x4

_0bf608_data:
		.fill   0x8
		.ascii  "\x02\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x03"
		.fill   0x13

_0bf62c_data:
		.fill   0x8
		.ascii  "\x02\x00\x00\x00\x05\x00\x00\x00"
		.ascii  "\x09"
		.fill   0x13

_0bf650_data:
		.ascii  "\x50\x46\x00\x00"

_0bf654_data:
		.ascii  "\x10\x0e\x00\x00"

_0bf658_data:
		.ascii  "\x01\x00\x00\x00"

_0bf65c_data:
		.ascii  "\x45\x53\x54"
		.fill   0x1c

_0bf67b_data:
		.ascii  "\x45\x44\x54"
		.fill   0x1c
		.long   _0bf65c_data
		.long   _0bf67b_data
		.ascii  "\x00\x00"

_0bf6a4_data:
		.ascii  "\x01\x00\x00\x00"

_0bf6a8_data:
		.ascii  "\x10\x00\x00\x00"

_0bf6ac_data:
		.fill   0x4

_0bf6b0_data:
		.fill   0x4

_0bf6b4_data:
		.long   _082f2b_jump

_0bf6b8_data:
		.long   _082f2b_jump

_0bf6bc_data:
		.ascii  "\x7f\x12\x00\x00"

_0bf6c0_data:
		.ascii  "\x11\x00\x00\x00"

_0bf6c4_data:
		.ascii  "\x2e\x5c\x00"

_0bf6c7_data:
		.string "SAVE"

_0bf6cc_data:
		.ascii  "\x5c\x00"

_0bf6ce_data:
		.string "-EDIT"

_0bf6d4_data:
		.string "-OLDWORLD"

_0bf6de_data:
		.string "-NOCD"

_0bf6e4_data:
		.string "Left memory available = %.3f Mo.\n\n"

_0bf707_data:
		.string "No windows detected.\n"

_0bf71d_data:
		.string "Windows real mode detected.\n"

_0bf73a_data:
		.string "Windows standard mode detected.\n"

_0bf75b_data:
		.string "Windows/386 V 2.x detected.\n"

_0bf778_data:
		.string "Windows 95 detected.\n"

_0bf78e_data:
		.string "Windows V %d.%d detected.\n"

_0bf7a9_data:
		.string "Not enough memory."

_0bf7bc_data:
		.ascii  "\x0a\x00"

_0bf7be_data:
		.string "Normal and X mode available.\n"

_0bf7dc_data:
		.string "Only X mode available.\n"

_0bf7f4_data:
		.string "Sound and CD music.\n"

_0bf809_data:
		.string "Only sound, no CD music.\n"

_0bf823_data:
		.string "Only CD music, no sound.\n"

_0bf83d_data:
		.string "no CD music, no sound.\n"

_0bf855_data:
		.string "Background available.\n"

_0bf86c_data:
		.string "No background.\n"

_0bf87c_data:
		.ascii  "\x0a\x00"

_0bf87e_data:
		.ascii  "\x0a\x00"

_0bf880_data:
		.string "Allocation error in variables.\n"

_0bf8a0_data:
		.string "Allocation error in variables.\n"

_0bf8c0_data:
		.string "RAYMAN v1.00"

_0bf8cd_data:
		.string "(C) 1994-1995 UBI STUDIOS, FRANCE"

_0bf8ef_data:
		.ascii  "\x0a\x0a\x00"

_0bf8f2_data:
		.string "rayman.cfg"

_0bf8fd_data:
		.string "CD ROM's Initialization.\n"

_0bf917_data:
		.ascii  "\x00"

_0bf918_data:
		.ascii  "\x00"

_0bf919_data:
		.ascii  "\x00"

_0bf91a_data:
		.ascii  "\x00"

_0bf91b_data:
		.ascii  "\x00"

_0bf91c_data:
		.ascii  "\x00"

_0bf91d_data:
		.ascii  "\x00"

_0bf91e_data:
		.ascii  "\x00"

_0bf91f_data:
		.ascii  "\x00"

_0bf920_data:
		.ascii  "\x00"

_0bf921_data:
		.ascii  "\x00"

_0bf922_data:
		.ascii  "\x00"

_0bf923_data:
		.ascii  "\x00"

_0bf924_data:
		.ascii  "\x00"

_0bf925_data:
		.ascii  "\x00"

_0bf926_data:
		.ascii  "\x00"

_0bf927_data:
		.ascii  "\x00"

_0bf928_data:
		.ascii  "\x00"

_0bf929_data:
		.ascii  "\x00"

_0bf92a_data:
		.ascii  "\x00"

_0bf92b_data:
		.ascii  "\x00"

_0bf92c_data:
		.ascii  "\x00"

_0bf92d_data:
		.ascii  "\x00"

_0bf92e_data:
		.ascii  "\x00"

_0bf92f_data:
		.ascii  "\x00"

_0bf930_data:
		.ascii  "\x00"

_0bf931_data:
		.ascii  "\x00"

_0bf932_data:
		.ascii  "\x00"

_0bf933_data:
		.ascii  "\x00"

_0bf934_data:
		.ascii  "\x00"

_0bf935_data:
		.ascii  "\x00"

_0bf936_data:
		.ascii  "\x00"

_0bf937_data:
		.ascii  "\x00"

_0bf938_data:
		.ascii  "\x00"

_0bf939_data:
		.string "/michel ancel/"

_0bf948_data:
		.string "/frederic houde/"

_0bf959_data:
		.ascii  "\x00"

_0bf95a_data:
		.string "/alexandra steible/"

_0bf96e_data:
		.ascii  "\x00"

_0bf96f_data:
		.string "/michel ancel/"

_0bf97e_data:
		.string "/serge hascoet/"

_0bf98e_data:
		.ascii  "\x00"

_0bf98f_data:
		.string "/bruno bouvret/"

_0bf99f_data:
		.string "/sacha gentilhomme/"

_0bf9b3_data:
		.string "/michael guez/"

_0bf9c2_data:
		.string "/christophe thibaut/"

_0bf9d7_data:
		.ascii  "\x00"

_0bf9d8_data:
		.string "/alexandra steible/"

_0bf9ec_data:
		.ascii  "\x00"

_0bf9ed_data:
		.string "/kamal aitmihoub/"

_0bf9ff_data:
		.string "/david gilson/"

_0bfa0e_data:
		.string "/sophie esturgie/"

_0bfa20_data:
		.string "/jacques exertie/"

_0bfa32_data:
		.string "/gregoire pons/"

_0bfa42_data:
		.string "/veronique rondello/"

_0bfa57_data:
		.string "/beatrice sauterau/"

_0bfa6b_data:
		.string "/philippe vindolet"

_0bfa7e_data:
		.string "/christian volckman/"

_0bfa93_data:
		.ascii  "\x00"

_0bfa94_data:
		.string "/eric pelatan/"

_0bfaa3_data:
		.string "/sylvaine jenny/"

_0bfab4_data:
		.ascii  "\x00"

_0bfab5_data:
		.string "/jean christophe alessandri/"

_0bfad2_data:
		.string "/sophie ancel/"

_0bfae1_data:
		.string "/olivier bechard/"

_0bfaf3_data:
		.string "/nicolas bocquillon/"

_0bfb08_data:
		.string "/jean marc geffroy/"

_0bfb1c_data:
		.string "/laurent rettig/"

_0bfb2d_data:
		.string "/olivier soleil/"

_0bfb3e_data:
		.ascii  "\x00"

_0bfb3f_data:
		.string "/bertrand helias/"

_0bfb51_data:
		.string "/yann le tensorer/"

_0bfb64_data:
		.string "/daniel palix/"

_0bfb73_data:
		.ascii  "\x00"

_0bfb74_data:
		.string "/cyril cauchois/"

_0bfb85_data:
		.string "/olivier couvreur/"

_0bfb98_data:
		.string "/antoine dodens/"

_0bfba9_data:
		.string "/antonio ferreira/"

_0bfbbc_data:
		.string "/philippe fuentes/"

_0bfbcf_data:
		.string "/benoit germain/"

_0bfbe0_data:
		.string "/christophe giraud/"

_0bfbf4_data:
		.string "/frederic houde/"

_0bfc05_data:
		.string "/francois mahieu/"

_0bfc17_data:
		.string "/christian mihalache/"

_0bfc2d_data:
		.string "/sebastien morin/"

_0bfc3f_data:
		.string "/bogdan radusi/"

_0bfc4f_data:
		.string "/daniel raviart/"

_0bfc60_data:
		.string "/olivier rozier/"

_0bfc71_data:
		.string "/jozef skrabo/"

_0bfc80_data:
		.string "/gilles vanwalleghem/"

_0bfc96_data:
		.ascii  "\x00"

_0bfc97_data:
		.string "/stephane bellanger/"

_0bfcac_data:
		.string "/didier lord/"

_0bfcba_data:
		.ascii  "\x00"

_0bfcbb_data:
		.string "/olivier amiaud/"

_0bfccc_data:
		.string "/sylvain brunet/"

_0bfcdd_data:
		.string "/nathalie drouet/"

_0bfcef_data:
		.string "/dominique dumont/"

_0bfd02_data:
		.string "/kamel feunas/"

_0bfd11_data:
		.string "/remy gazel/"

_0bfd1e_data:
		.string "/didier leglise/"

_0bfd2f_data:
		.string "/jean marc litchmann/"

_0bfd45_data:
		.string "/frederic louvre/"

_0bfd57_data:
		.string "/guillaume michel/"

_0bfd6a_data:
		.string "/olivier mortier/"

_0bfd7c_data:
		.string "/frederic prados/"

_0bfd8e_data:
		.string "/stephane ronse/"

_0bfd9f_data:
		.string "/rene de wael/"

_0bfdae_data:
		.ascii  "\x00"

_0bfdaf_data:
		.string "/emmanuelle cosso/"

_0bfdc2_data:
		.ascii  "\x00"

_0bfdc3_data:
		.string "/mitsuyuki bando/"

_0bfdd5_data:
		.string "/chris benard/"

_0bfde4_data:
		.string "/patrice dozier/"

_0bfdf5_data:
		.string "/douglas rand/"

_0bfe04_data:
		.string "/steven perkinson/"

_0bfe17_data:
		.string "/christian stonner/"

_0bfe2b_data:
		.ascii  "\x00"

_0bfe2c_data:
		.string "/serge hascoet/"

_0bfe3c_data:
		.ascii  "\x00"

_0bfe3d_data:
		.string "/bruno barone/"

_0bfe4c_data:
		.string "/thomas belmont/"

_0bfe5d_data:
		.string "/nicolas bocquillon/"

_0bfe72_data:
		.string "/bruno bouvret/"

_0bfe82_data:
		.string "/christophe cavelan/"

_0bfe97_data:
		.string "/gunther galipot/"

_0bfea9_data:
		.string "/sacha gentilhomme/"

_0bfebd_data:
		.string "/marc gioan/"

_0bfeca_data:
		.string "/michael guez/"

_0bfed9_data:
		.string "/benoit macon/"

_0bfee8_data:
		.string "/lionel rico/"

_0bfef6_data:
		.string "/emmanuel texandier/"

_0bff0b_data:
		.string "/christophe thibaut/"

_0bff20_data:
		.string "/dorian thibaut/"

_0bff31_data:
		.ascii  "\x00"

_0bff32_data:
		.string "/agnes haegel/"

_0bff41_data:
		.ascii  "\x00"

_0bff42_data:
		.string "/ludimedia : gerard guillemot/"

_0bff61_data:
		.ascii  "\x00"

_0bff62_data:
		.string "/ubi studios : michel guillemot/"

_0bff83_data:
		.ascii  "\x00"

_0bff84_data:
		.string "/ubi soft :  yves guillemot/"

_0bffa1_data:
		.ascii  "\x00"

_0bffa2_data:
		.ascii  "\x00"

_0bffa3_data:
		.ascii  "\x00"

_0bffa4_data:
		.string "rayman"
		.ascii  "\x00"

_0bffac_data:
		.string "/limited version/"

_0bffbe_data:
		.string "/install rayman with cdrom/"

_0bffda_data:
		.ascii  "\x25\x00"

_0bffdc_data:
		.string "/go !/"

_0bffe3_data:
		.string "''game over''"

_0bfff1_data:
		.string "game over"

_0bfffb_data:
		.ascii  "\x3a"
		.fill   0x4

_0c0000_data:
		.ascii  "\x00"

_0c0001_data:
		.string "Rayman says fatal error :\n%s\n"

_0c001f_data:
		.string "\nPress a key to exit.\n"
		.ascii  "\x00\x00"

_0c0038_data:
		.string "/%2d : %02d/"
		.ascii  "\x00\x00\x00"

_0c0048_data:
		.string "/%s/"
		.ascii  "\x00\x00\x00"

_0c0050_data:
		.string "Write Protect Violation"

_0c0068_data:
		.string "Unknown unit"

_0c0075_data:
		.string "Drive not ready"

_0c0085_data:
		.string "Unknown command"

_0c0095_data:
		.string "CRC error"

_0c009f_data:
		.string "Bad drive request structure length"

_0c00c2_data:
		.string "Seek error"

_0c00cd_data:
		.string "Unknown media"

_0c00db_data:
		.string "Sector not found"

_0c00ec_data:
		.string "Printer out of paper"

_0c0101_data:
		.string "Write fault"

_0c010d_data:
		.string "Read fault"

_0c0118_data:
		.string "General failure"

_0c0128_data:
		.string "Reserved"

_0c0131_data:
		.string "Reserved"

_0c013a_data:
		.string "Invalid disk change"
		.ascii  "\x00\x00"

_0c0150_data:
		.string "Source file checksum error\n"

_0c016c_data:
		.string "Corrupted source file\n"

_0c0183_data:
		.string "Fatal error: "

_0c0191_data:
		.string "Differential method"
		.ascii  "\x00\x00\x00"

_0c01a8_data:
		.ascii  "\x00"

_0c01a9_data:
		.ascii  "\x00"

_0c01aa_data:
		.ascii  "\x7e\x00\x7a"

_0c01ad_data:
		.ascii  "\x00"

_0c01ae_data:
		.ascii  "\x7e\x00"

_0c01b0_data:
		.string "level "

_0c01b7_data:
		.string "conclu.dat"
		.ascii  "\x00\x00"

_0c01c4_data:
		.string "Memory error in draw_buffer.\n"

_0c01e2_data:
		.ascii  "\x52\x41\x59\x00"

_0c01e6_data:
		.string ".LEV"

_0c01eb_data:
		.ascii  "\x52\x41\x59\x00"

_0c01ef_data:
		.string ".WLD"

_0c01f4_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c01f8_data:
		.string "RAYMAN"

_0c01ff_data:
		.string ".SAV"

_0c0204_data:
		.string "RAYMAN"

_0c020b_data:
		.string ".SAV"

_0c0210_data:
		.string "Thank you for playing RAYMAN !\n"

_0c0230_data:
		.string "FILE NOT FOUND: %s\n"

_0c0244_data:
		.string "DANY"

_0c0249_data:
		.string " tu veux voir comment y joue Monsieur Daniel ?\n"

_0c0279_data:
		.string " NaMe oF fILe ? (DEfAuLT:%s) \n"

_0c0298_data:
		.string ".REC"
		.ascii  "\x00\x00\x00"

_0c02a0_data:
		.string "Pas de Jumelle"
		.ascii  "\x00"

_0c02b0_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c02b4_data:
		.string "PCMAP"

_0c02ba_data:
		.ascii  "\x5c\x00"

_0c02bc_data:
		.ascii  "\x72\x62\x00"

_0c02bf_data:
		.string "Can not open file %s (load_world).\n"

_0c02e3_data:
		.string "%s : File integrity fault.\n"

_0c02ff_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c0303_data:
		.string "PCMAP"

_0c0309_data:
		.ascii  "\x5c\x00"

_0c030b_data:
		.ascii  "\x5c\x00"

_0c030d_data:
		.ascii  "\x72\x62\x00"

_0c0310_data:
		.string "Can not open file %s (load_level).\n"

_0c0334_data:
		.string "%s : File integrity fault.\n"

_0c0350_data:
		.string "%s : File integrity fault.\n"

_0c036c_data:
		.string "%s : File integrity fault (Block Normal).\n"

_0c0397_data:
		.string "PCMAP"

_0c039d_data:
		.ascii  "\x5c\x00"

_0c039f_data:
		.string "bray.dat"

_0c03a8_data:
		.ascii  "\x72\x62\x00"

_0c03ab_data:
		.string "Can not open file %s (load_big_ray).\n"

_0c03d1_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c03d5_data:
		.string "PCMAP"

_0c03db_data:
		.ascii  "\x5c\x00"

_0c03dd_data:
		.string "ALLFIX.DAT"

_0c03e8_data:
		.ascii  "\x72\x62\x00"

_0c03eb_data:
		.string "Can not open file %s (load_all_fix).\n"

_0c0411_data:
		.string "%s : File integrity fault.\n"

_0c042d_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c0431_data:
		.string "VIGNET.DAT"

_0c043c_data:
		.ascii  "\x72\x62\x00"

_0c043f_data:
		.string "%s : Can not open.\n"

_0c0453_data:
		.string "%s : File integrity fault (%d).\n"

_0c0474_data:
		.string "No memory allocated for it (load_pcx) !!"

_0c049d_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c04a1_data:
		.string "VIGNET.DAT"

_0c04ac_data:
		.ascii  "\x72\x62\x00"

_0c04af_data:
		.string "%s : Can not open.\n"

_0c04c3_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c04c7_data:
		.string "VIGNET.DAT"

_0c04d2_data:
		.ascii  "\x72\x62\x00"

_0c04d5_data:
		.string "%s : Can not open.\n"

_0c04e9_data:
		.string "%s : File integrity fault (%d).\n"

_0c050a_data:
		.string "No memory allocated (load_plan0)."

_0c052c_data:
		.string "No memory allocated (PLAN0FND_to_bits_planes)."

_0c055b_data:
		.string "RAY.LNG"

_0c0563_data:
		.ascii  "\x72\x62\x00"

_0c0566_data:
		.string "%s : Can not open.\n"

_0c057a_data:
		.string "Memory error in LoadLanguageTxt"

_0c059a_data:
		.string "%s : File integrity fault.\n"

_0c05b6_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c05ba_data:
		.string "VIGNET.DAT"

_0c05c5_data:
		.ascii  "\x72\x62\x00"

_0c05c8_data:
		.string "%s : Can not open.\n"

_0c05dc_data:
		.string "%s : File integrity fault (%d).\n"

_0c05fd_data:
		.string "No memory allocated for it (load_pcx) !!"
		.ascii  "\x00\x00"

_0c0628_data:
		.string "Can't init sound card."

_0c063f_data:
		.string "320x200"

_0c0647_data:
		.string "312x196"

_0c064f_data:
		.string "304x192"

_0c0657_data:
		.string "300x188"

_0c065f_data:
		.ascii  "\x36\x30\x00"

_0c0662_data:
		.ascii  "\x35\x30\x00"

_0c0665_data:
		.ascii  "\x33\x30\x00"

_0c0668_data:
		.ascii  "\x32\x35\x00"

_0c066b_data:
		.string "mode dieu"

_0c0675_data:
		.ascii  "\x31\x00"

_0c0677_data:
		.ascii  "\x32\x00"

_0c0679_data:
		.ascii  "\x33\x00"

_0c067b_data:
		.ascii  "\x34\x00"

_0c067d_data:
		.ascii  "\x35\x00"

_0c067f_data:
		.ascii  "\x36\x00"

_0c0681_data:
		.ascii  "\x37\x00"

_0c0683_data:
		.ascii  "\x38\x00"

_0c0685_data:
		.ascii  "\x39\x00"

_0c0687_data:
		.ascii  "\x30\x00"

_0c0689_data:
		.ascii  "\x61\x00"

_0c068b_data:
		.ascii  "\x7a\x00"

_0c068d_data:
		.ascii  "\x65\x00"

_0c068f_data:
		.ascii  "\x72\x00"

_0c0691_data:
		.ascii  "\x74\x00"

_0c0693_data:
		.ascii  "\x79\x00"

_0c0695_data:
		.ascii  "\x75\x00"

_0c0697_data:
		.ascii  "\x69\x00"

_0c0699_data:
		.ascii  "\x6f\x00"

_0c069b_data:
		.ascii  "\x70\x00"

_0c069d_data:
		.ascii  "\x71\x00"

_0c069f_data:
		.ascii  "\x73\x00"

_0c06a1_data:
		.ascii  "\x64\x00"

_0c06a3_data:
		.ascii  "\x66\x00"

_0c06a5_data:
		.ascii  "\x67\x00"

_0c06a7_data:
		.ascii  "\x68\x00"

_0c06a9_data:
		.ascii  "\x6a\x00"

_0c06ab_data:
		.ascii  "\x6b\x00"

_0c06ad_data:
		.ascii  "\x6c\x00"

_0c06af_data:
		.ascii  "\x6d\x00"

_0c06b1_data:
		.ascii  "\x77\x00"

_0c06b3_data:
		.ascii  "\x78\x00"

_0c06b5_data:
		.ascii  "\x63\x00"

_0c06b7_data:
		.ascii  "\x76\x00"

_0c06b9_data:
		.ascii  "\x62\x00"

_0c06bb_data:
		.ascii  "\x6e\x00"

_0c06bd_data:
		.ascii  "\x3f\x00"

_0c06bf_data:
		.ascii  "\x2e\x00"

_0c06c1_data:
		.ascii  "\x3a\x00"

_0c06c3_data:
		.ascii  "\x35"
		.fill   0x4

_0c06c8_data:
		.string "Error On MAX_ACTOBJ."
		.ascii  "\x00\x00\x00"

_0c06e0_data:
		.string "Augmenter MAX_NB_SCROLL_PER_MAP"

_0c0700_data:
		.ascii  "\x2f\x00"

_0c0702_data:
		.ascii  "\x2f\x00"

_0c0704_data:
		.ascii  "\x2f\x00"

_0c0706_data:
		.ascii  "\x2f\x00"

_0c0708_data:
		.ascii  "\x2f\x00"

_0c070a_data:
		.ascii  "\x2f\x00"

_0c070c_data:
		.ascii  "\x61\x61\x61\x00"

_0c0710_data:
		.ascii  "\x61\x00"

_0c0712_data:
		.ascii  "\x62\x00"

_0c0714_data:
		.ascii  "\x64\x00"

_0c0716_data:
		.ascii  "\x63\x00"

_0c0718_data:
		.string "/you have done it !/"

_0c072d_data:
		.string "/you have saved the world !/"
		.ascii  "\x00\x00"

_0c074c_data:
		.ascii  "\x72\x00\x00\x00"

_0c0750_data:
		.string "Information sur le bloc_malloc.\n\n"

_0c0772_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e fixes                           : %u\n"

_0c07ac_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e fixes   (w=%3d, l=%3d) : %u (%u*1024L)\n"

_0c07f1_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e mondes                          : %u\n"

_0c082b_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e mondes  (w=%3d, l=%3d) : %u (%u*1024L)\n"

_0c0870_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e maps                            : %u\n"

_0c08aa_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e maps    (w=%3d, l=%3d) : %u (%u*1024L)\n"

_0c08ef_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e sprites                         : %u\n"

_0c0929_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e sprites (w=%3d, l=%3d) : %u (%u*1024L)\n"

_0c096e_data:
		.ascii  "\x0a\x00"

_0c0970_data:
		.string "Information sur le temp_malloc.\n\n"

_0c0992_data:
		.ascii   "   - Taille de la m"
		.ascii  "\x82"
		.ascii   "moire allou"
		.ascii  "\x82"
		.string "e            : %u\n"

_0c09c5_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e                 : %u (%u*1024L)\n"

_0c0a03_data:
		.ascii  "\x0a\x00"

_0c0a05_data:
		.string "Left memory = %d"

_0c0a16_data:
		.ascii  "\x66\x69\x78\x00"

_0c0a1a_data:
		.string "world"

_0c0a20_data:
		.string "level"

_0c0a26_data:
		.string "sprite"

_0c0a2d_data:
		.string "unknown mem"

_0c0a39_data:
		.string "Memory error in block_malloc : %s = %p, size = %ul.\n"

_0c0a6e_data:
		.string "Can not allocate %d bytes in memory.\n"

_0c0a94_data:
		.string "not enough memory in pool.\nMemory error in tmp_malloc : size = %ul.\n"
		.ascii  "\x00\x00\x00"

_0c0adc_data:
		.string "Rayman sound says fatal error :\n%s\n"

_0c0b00_data:
		.ascii  "\x72\x62\x00\x00"

_0c0b04_data:
		.string "SNDH8B.DAT"
		.ascii  "\x00"

_0c0b10_data:
		.string "Fichier header introuvable (SNDH8B.DAT).\n"
		.ascii  "\x00\x00"

_0c0b3c_data:
		.string "Load error in sndh8b.dat.\n"
		.ascii  "\x00"

_0c0b58_data:
		.string "SNDD8B.DAT"
		.ascii  "\x00"

_0c0b64_data:
		.string "Fichier data introuvable.\n"
		.ascii  "\x00"

_0c0b80_data:
		.ascii  "\x4d\x82"
		.string "moire insuffisante pour charger les samples.\n"

_0c0bb0_data:
		.string "Load error in sndd8b.dat.\n"
		.ascii  "\x00"

_0c0bcc_data:
		.string "hmidet.386"
		.ascii  "\x00"

_0c0bd8_data:
		.string "acos"

_0c0bdd_data:
		.string "asin"

_0c0be2_data:
		.string "sqrt"

_0c0be7_data:
		.ascii  "\x65\x78\x70\x00"

_0c0beb_data:
		.string "cosh"

_0c0bf0_data:
		.string "sinh"

_0c0bf5_data:
		.ascii  "\x70\x6f\x77\x00"

_0c0bf9_data:
		.string "acosh"

_0c0bff_data:
		.string "log2"

_0c0c04_data:
		.ascii  "\x6c\x6f\x67\x00"

_0c0c08_data:
		.string "log10"

_0c0c0e_data:
		.string "atanh"

_0c0c14_data:
		.string "atan2"

_0c0c1a_data:
		.string "ipow"

_0c0c1f_data:
		.string "dpowi"

_0c0c25_data:
		.ascii  "\x63\x6f\x73\x00"

_0c0c29_data:
		.ascii  "\x73\x69\x6e\x00"

_0c0c2d_data:
		.ascii  "\x74\x61\x6e\x00"

_0c0c31_data:
		.ascii  "\x79\x30\x00"

_0c0c34_data:
		.ascii  "\x79\x31\x00"

_0c0c37_data:
		.ascii  "\x79\x6e\x00"

_0c0c3a_data:
		.ascii  "\x6d\x6f\x64\x00"

_0c0c3e_data:
		.string "cotan"

_0c0c44_data:
		.string "Error Code Does Not Indicate An Error"

_0c0c6a_data:
		.string "Specified Driver Is Not Loaded"

_0c0c89_data:
		.string "Specified Pointer Is NULL"

_0c0ca3_data:
		.string "Detection System Is Already Initialized"

_0c0ccb_data:
		.string "File Open Failure"

_0c0cdd_data:
		.string "Memory Allocation Failure"

_0c0cf7_data:
		.string "Invalid Driver ID"

_0c0d09_data:
		.string "Driver Not Found"

_0c0d1a_data:
		.string "Detection System Failed To Find Hardware"

_0c0d43_data:
		.string "Driver Already Loaded Using Specified Handle"

_0c0d70_data:
		.string "Invalid Handle"

_0c0d7f_data:
		.string "No Handles Available"

_0c0d94_data:
		.string "Hardware Already Paused"

_0c0dac_data:
		.string "Hardware Not Paused"

_0c0dc0_data:
		.string "Data Is Not Valid"

_0c0dd2_data:
		.string "HMI*.386 File Open Failure"

_0c0ded_data:
		.string "Incorrect Port"

_0c0dfc_data:
		.string "Incorrect IRQ"

_0c0e0a_data:
		.string "Incorrect DMA"

_0c0e18_data:
		.string "Incorrect DMA/IRQ"
		.ascii  "\x00\x00"

_0c0e2c_data:
		.string "hmidrv.386"
		.ascii  "\x00"

_0c0e38_data:
		.string "Floating-point support not loaded\r\n"

_0c0e5c_data:
		.string "Domain error"

_0c0e69_data:
		.string "Argument singularity"

_0c0e7e_data:
		.string "Overflow range error"

_0c0e93_data:
		.string "Underflow range error"

_0c0ea9_data:
		.string "Total loss of significance"

_0c0ec4_data:
		.string "Partial loss of significance"

_0c0ee1_data:
		.string " in "
		.ascii  "\x00\x00"

_0c0ee8_data:
		.string "Not enough memory to allocate file structures\r\n"

_0c0f18_data:
		.ascii  "\x54\x5a\x00\x00"

_0c0f1c_data:
		.ascii  "\x69\x6e\x66\x00"

_0c0f20_data:
		.ascii  "\x6e\x61\x6e\x00"

_0c0f24_data:
		.ascii  "\x4c\xad\x30\x70\xc7\x52\xe9\x3c"
		.ascii  "\x1f\xb8\x33\xe7\xf3\xe7\x6a\xbd"
		.ascii  "\x08\x6d\xa8\x13\x46\x12\xe6\x3d"
		.ascii  "\xe5\x44\xf5\x67\x45\xe6\x5a\xbe"
		.ascii  "\x36\xc7\x56\xa5\xe3\x1d\xc7\x3e"
		.ascii  "\x1a\xa0\x01\x1a\xa0\x01\x2a\xbf"
		.ascii  "\x11\x11\x11\x11\x11\x11\x81"
		.ascii   "?WUUUUU"
		.ascii  "\xc5\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c0f6c_data:
		.ascii  "\x1f\xb8\x33\xe7\xf3\xe7\x2a\x3d"
		.ascii  "\xa0\x7c\xc0\xa8\x74\x39\xa9\xbd"
		.ascii  "\x98\xd8\xf8\xef\xd8\xee\x21\x3e"
		.ascii  "\x5c\x9f\x78\xb7\x4f\x7e\x92\xbe"
		.ascii  "\x1a\xa0\x01\x1a\xa0\x01\xfa\x3e"
		.ascii  "\x17\x6c\xc1\x16\x6c\xc1\x56\xbf"
		.ascii   "VUUUUU"
		.ascii  "\xa5\x3f"
		.fill   0x6
		.ascii  "\xe0\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c0fb4_data:
		.fill   0x4
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x03\x00\x00\x00\x04\x00\x00\x00"
		.ascii  "\x04\x00\x00\x00\x05\x00\x00\x00"
		.ascii  "\x05\x00\x00\x00\x06\x00\x00\x00"

_0c0fd8_data:
		.ascii  "\x11\x00\x00\x00\x12\x00\x00\x00"
		.ascii  "\x10\x00\x00\x00"

_0c0fe4_data:
		.ascii  "\x10\x89\xf9\x6c\x58\xb5\xf0"
		.ascii   "?|Q}<"
		.ascii  "\xb8\x72\xf1\x3f\x15\xb7\x31\x0a"
		.ascii  "\xfe\x06\xf3\x3f\xcc\x3b\x7f\x66"
		.ascii  "\x9e\xa0\xf6\x3f"

_0c1004_data:
		.fill   0x4

_0c1008_data:
		.ascii  "\x00\x00\xf0\x7f"

_0c100c_data:
		.ascii  "\xc3\x1c\x98\xfc\x38\xba\xa6\x3f"
		.ascii  "\x21\x00\x01\x61\xd3\x98\xb0\xbf"
		.ascii  "\xa5\x98\xcd\x45\xc0\xa8\xb3\x3f"
		.ascii  "\x73\x4d\xa1\x33\x77\x45\xb7\xbf"
		.ascii  "\x62\xa5\xf2\xe4\xc4\x71\xbc\x3f"
		.ascii  "\x8f\xb3\x5b\x8e\x24\x49\xc2\xbf"
		.ascii  "\x76\x9d\x92\x99\x99\x99\xc9\x3f"
		.ascii  "\xf0"
		.ascii   "RUUUU"
		.ascii  "\xd5\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c1054_data:
		.fill   0x4
		.long   _0c0e5c_data
		.long   _0c0e69_data
		.long   _0c0e7e_data
		.long   _0c0e93_data
		.long   _0c0ea9_data
		.ascii  "\xc4\x0e"

_0c106e_data:
		.ascii  "\x0c\x00"

_0c1070_data:
		.ascii  "\x00\x00"

_0c1072_data:
		.ascii  "\x1f\x00\x3b\x00\x5a\x00\x78\x00"
		.ascii  "\x97\x00\xb5\x00\xd4\x00\xf3\x00"
		.ascii  "\x11\x01\x30\x01\x4e\x01"

_0c1088_data:
		.ascii  "\x6d\x01"

_0c108a_data:
		.ascii  "\x00\x00\x1f\x00\x3c\x00\x5b\x00"
		.ascii  "\x79\x00\x98\x00\xb6\x00\xd5\x00"
		.ascii  "\xf4\x00\x12\x01\x31\x01\x4f\x01"
		.ascii  "\x6e\x01"

_0c10a4_data:
		.fill   0x4

_0c10a8_data:
		.ascii  "\x00\x00\xf0\x7f"

_0c10ac_data:
		.fill   0x4

_0c10b0_data:
		.ascii  "\x00\x00\xf0\xff"

_0c10b4_data:
		.ascii  "\xff\xff\xff\xff"

_0c10b8_data:
		.ascii  "\xff\xff\xef\x7f"

_0c10bc_data:
		.ascii  "\xff\xff\xff\xff"

_0c10c0_data:
		.ascii  "\xff\xff\xef\xff"

_0c10c4_data:
		.ascii  "\x29\xbd\x56\xb3\x15\x44\xe9\xbf"
		.ascii  "\xee\xaf\x16"
		.ascii   " Jb0@"
		.ascii  "\x9a\xb5\xb3\x12\xff\x07\x50\xc0"

_0c10dc_data:
		.fill   0x6
		.ascii  "\xf0\x3f\x0f\xce\x67\x4b\x80\xd5"
		.ascii  "\x41\xc0\x7f\x26\x15\xfa\x83\x80"
		.ascii  "\x73\x40\x77\x90\x0d\x9c\xfe\x0b"
		.ascii  "\x88\xc0"

_0c10fc_data:
		.ascii  "\xd8\x00"

_0c10fe_data:
		.ascii  "\xc6\xf9\xc6\x40"

_0c1102_data:
		.ascii  "\xe9\x34\xc7\x6c\x6c\x00\x12\x4e"
		.ascii  "\x83\xcc"
		.string "=@[V6"
		.ascii  "\xce\xc9\x14\x88\x87\xe1\x24\x4b"
		.ascii  "\x1b\x00\x02\x84\xfe\xe4\x71\xd9"
		.ascii  "\x89\x45\x0e\x00\x00\x00\x90\x1e"
		.ascii  "\xc4\xbc\xd6\x42\x08"
		.fill   0x5
		.ascii  "\x84\xd7\x97\x41\x04"
		.fill   0x6
		.ascii  "\x88\xc3\x40\x01"
		.fill   0x7
		.ascii  "\x24\x40"

_0c114c_data:
		.ascii  "\x00\x20"
		.long   _07e0f6_func
		.ascii  "\x00\x20"
		.long   _07e2bc_func
		.ascii  "\x00\x20"
		.long   _07e2d7_func
		.ascii  "\x00\x20"
		.long   _078d96_func
		.ascii  "\x00\x02"
		.long   _081fe9_func
		.ascii  "\x00\x20"
		.long   _0823f6_func
		.ascii  "\x00\x20"
		.long   _08350f_func

_0c1176_data:
		.ascii  "\x00\x20\x6e\x24"

_0c117a_data:
		.ascii  "\x08\x00"

_0c117c_data:
		.ascii  "\x00\x00"

_0c117e_data:
		.ascii  "\x00"

_0c117f_data:
		.ascii  "\x00"

_0c1180_data:
		.ascii  "\x00\x00"

_0c1182_data:
		.ascii  "\x00\x00"

_0c1184_data:
		.fill   0x190

_0c1314_data:
		.ascii  "\x00"

_0c1315_data:
		.ascii  "\x00"

_0c1316_data:
		.ascii  "\x00\x00"

_0c1318_data:
		.ascii  "\x00\x00"

_0c131a_data:
		.ascii  "\x00\x00"

_0c131c_data:
		.ascii  "\x00\x00\x00"

_0c131f_data:
		.ascii  "\x00"

_0c1320_data:
		.fill   0xc

_0c132c_data:
		.fill   0x40

_0c136c_data:
		.ascii  "\x00\x00"

_0c136e_data:
		.ascii  "\x00\x00"

_0c1370_data:
		.ascii  "\x00\x00"

_0c1372_data:
		.ascii  "\x00\x00"

_0c1374_data:
		.ascii  "\x00\x00"

_0c1376_data:
		.fill   0x4

_0c137a_data:
		.ascii  "\x00\x00"

_0c137c_data:
		.ascii  "\x00\x00"

_0c137e_data:
		.ascii  "\x00\x00"

_0c1380_data:
		.ascii  "\x00\x00"

_0c1382_data:
		.ascii  "\x00\x00"

_0c1384_data:
		.ascii  "\x00\x00"

_0c1386_data:
		.ascii  "\x00"

_0c1387_data:
		.ascii  "\x00"

_0c1388_data:
		.ascii  "\x00"

_0c1389_data:
		.fill   0x7

_0c1390_data:
		.ascii  "\x00\x00"

_0c1392_data:
		.ascii  "\x00\x00"

_0c1394_data:
		.fill   0x4

_0c1398_data:
		.fill   0x15

_0c13ad_data:
		.ascii  "\x00"

_0c13ae_data:
		.ascii  "\x00"

_0c13af_data:
		.ascii  "\x00"

_0c13b0_data:
		.ascii  "\x00"

_0c13b1_data:
		.ascii  "\x00"

_0c13b2_data:
		.ascii  "\x00\x00"

_0c13b4_data:
		.fill   0x71a

_0c1ace_data:
		.ascii  "\x00"

_0c1acf_data:
		.ascii  "\x00"

_0c1ad0_data:
		.ascii  "\x00\x00"

_0c1ad2_data:
		.ascii  "\x00\x00"

_0c1ad4_data:
		.ascii  "\x00\x00"

_0c1ad6_data:
		.ascii  "\x00\x00"

_0c1ad8_data:
		.ascii  "\x00\x00"

_0c1ada_data:
		.ascii  "\x00\x00"

_0c1adc_data:
		.ascii  "\x00\x00"

_0c1ade_data:
		.ascii  "\x00\x00"

_0c1ae0_data:
		.ascii  "\x00\x00"

_0c1ae2_data:
		.ascii  "\x00\x00"

_0c1ae4_data:
		.ascii  "\x00\x00"

_0c1ae6_data:
		.ascii  "\x00\x00"

_0c1ae8_data:
		.ascii  "\x00\x00"

_0c1aea_data:
		.ascii  "\x00\x00"

_0c1aec_data:
		.ascii  "\x00\x00"

_0c1aee_data:
		.ascii  "\x00\x00"

_0c1af0_data:
		.ascii  "\x00\x00"

_0c1af2_data:
		.ascii  "\x00\x00"

_0c1af4_data:
		.ascii  "\x00\x00"

_0c1af6_data:
		.ascii  "\x00\x00"

_0c1af8_data:
		.ascii  "\x00\x00"

_0c1afa_data:
		.ascii  "\x00\x00"

_0c1afc_data:
		.fill   0x4

_0c1b00_data:
		.fill   0x4

_0c1b04_data:
		.ascii  "\x00\x00"

_0c1b06_data:
		.ascii  "\x00\x00"

_0c1b08_data:
		.fill   0x4

_0c1b0c_data:
		.ascii  "\x00\x00"

_0c1b0e_data:
		.ascii  "\x00\x00"

_0c1b10_data:
		.fill   0x4

_0c1b14_data:
		.fill   0x4

_0c1b18_data:
		.fill   0x4

_0c1b1c_data:
		.fill   0x4

_0c1b20_data:
		.fill   0x4

_0c1b24_data:
		.fill   0x4

_0c1b28_data:
		.fill   0x18

_0c1b40_data:
		.fill   0x4

_0c1b44_data:
		.fill   0x4

_0c1b48_data:
		.fill   0x8

_0c1b50_data:
		.ascii  "\x00\x00"

_0c1b52_data:
		.ascii  "\x00\x00"

_0c1b54_data:
		.fill   0x6

_0c1b5a_data:
		.ascii  "\x00\x00"

_0c1b5c_data:
		.ascii  "\x00\x00"

_0c1b5e_data:
		.ascii  "\x00\x00"

_0c1b60_data:
		.fill   0x4

_0c1b64_data:
		.ascii  "\x00\x00"

_0c1b66_data:
		.fill   0x4

_0c1b6a_data:
		.ascii  "\x00\x00"

_0c1b6c_data:
		.ascii  "\x00\x00"

_0c1b6e_data:
		.ascii  "\x00\x00"

_0c1b70_data:
		.ascii  "\x00\x00"

_0c1b72_data:
		.ascii  "\x00\x00"

_0c1b74_data:
		.ascii  "\x00\x00"

_0c1b76_data:
		.fill   0x6

_0c1b7c_data:
		.ascii  "\x00"

_0c1b7d_data:
		.ascii  "\x00"

_0c1b7e_data:
		.ascii  "\x00"

_0c1b7f_data:
		.ascii  "\x00"

_0c1b80_data:
		.ascii  "\x00"

_0c1b81_data:
		.ascii  "\x00"

_0c1b82_data:
		.ascii  "\x00\x00"

_0c1b84_data:
		.ascii  "\x00"

_0c1b85_data:
		.ascii  "\x00"

_0c1b86_data:
		.ascii  "\x00"

_0c1b87_data:
		.ascii  "\x00"

_0c1b88_data:
		.ascii  "\x00"

_0c1b89_data:
		.ascii  "\x00\x00\x00"

_0c1b8c_data:
		.ascii  "\x00"

_0c1b8d_data:
		.ascii  "\x00"

_0c1b8e_data:
		.ascii  "\x00\x00"

_0c1b90_data:
		.ascii  "\x00\x00"

_0c1b92_data:
		.ascii  "\x00"

_0c1b93_data:
		.ascii  "\x00\x00"

_0c1b95_data:
		.fill   0x4

_0c1b99_data:
		.ascii  "\x00\x00"

_0c1b9b_data:
		.ascii  "\x00\x00"

_0c1b9d_data:
		.ascii  "\x00\x00\x00"

_0c1ba0_data:
		.fill   0x4

_0c1ba4_data:
		.fill   0x4

_0c1ba8_data:
		.fill   0x20

_0c1bc8_data:
		.fill   0x4

_0c1bcc_data:
		.fill   0xa

_0c1bd6_data:
		.ascii  "\x00\x00"

_0c1bd8_data:
		.fill   0x8

_0c1be0_data:
		.ascii  "\x00\x00"

_0c1be2_data:
		.fill   0x8

_0c1bea_data:
		.fill   0x6

_0c1bf0_data:
		.ascii  "\x00\x00"

_0c1bf2_data:
		.fill   0x4

_0c1bf6_data:
		.fill   0x12

_0c1c08_data:
		.ascii  "\x00"

_0c1c09_data:
		.ascii  "\x00"

_0c1c0a_data:
		.ascii  "\x00"

_0c1c0b_data:
		.ascii  "\x00"

_0c1c0c_data:
		.ascii  "\x00"

_0c1c0d_data:
		.fill   0x7

_0c1c14_data:
		.ascii  "\x00\x00"

_0c1c16_data:
		.ascii  "\x00"

_0c1c17_data:
		.ascii  "\x00\x00"

_0c1c19_data:
		.fill   0x4

_0c1c1d_data:
		.ascii  "\x00\x00"

_0c1c1f_data:
		.ascii  "\x00\x00"

_0c1c21_data:
		.ascii  "\x00\x00\x00"

_0c1c24_data:
		.fill   0x8

_0c1c2c_data:
		.fill   0x3c

_0c1c68_data:
		.fill   0x32

_0c1c9a_data:
		.ascii  "\x00"

_0c1c9b_data:
		.ascii  "\x00\x00"

_0c1c9d_data:
		.fill   0xb

_0c1ca8_data:
		.fill   0x8

_0c1cb0_data:
		.fill   0x3c

_0c1cec_data:
		.fill   0x40

_0c1d2c_data:
		.fill   0x28

_0c1d54_data:
		.fill   0x4

_0c1d58_data:
		.fill   0x58

_0c1db0_data:
		.fill   0x84

_0c1e34_data:
		.fill   0x4

_0c1e38_data:
		.fill   0x8

_0c1e40_data:
		.fill   0x28

_0c1e68_data:
		.ascii  "\x00\x00"

_0c1e6a_data:
		.ascii  "\x00\x00"

_0c1e6c_data:
		.fill   0x8

_0c1e74_data:
		.fill   0x28

_0c1e9c_data:
		.ascii  "\x00"

_0c1e9d_data:
		.ascii  "\x00"

_0c1e9e_data:
		.ascii  "\x00"

_0c1e9f_data:
		.ascii  "\x00"

_0c1ea0_data:
		.ascii  "\x00"

_0c1ea1_data:
		.ascii  "\x00\x00\x00"

_0c1ea4_data:
		.fill   0xf

_0c1eb3_data:
		.ascii  "\x00\x00"

_0c1eb5_data:
		.ascii  "\x00\x00\x00"

_0c1eb8_data:
		.fill   0x4

_0c1ebc_data:
		.fill   0x4

_0c1ec0_data:
		.fill   0x4

_0c1ec4_data:
		.fill   0x4

_0c1ec8_data:
		.ascii  "\x00\x00"

_0c1eca_data:
		.ascii  "\x00\x00"

_0c1ecc_data:
		.ascii  "\x00\x00"

_0c1ece_data:
		.ascii  "\x00\x00"

_0c1ed0_data:
		.ascii  "\x00"

_0c1ed1_data:
		.ascii  "\x00"

_0c1ed2_data:
		.ascii  "\x00"

_0c1ed3_data:
		.ascii  "\x00"

_0c1ed4_data:
		.ascii  "\x00"

_0c1ed5_data:
		.ascii  "\x00\x00\x00"

_0c1ed8_data:
		.fill   0x44

_0c1f1c_data:
		.fill   0x4

_0c1f20_data:
		.fill   0x20b

_0c212b_data:
		.ascii  "\x00"

_0c212c_data:
		.fill   0x5

_0c2131_data:
		.ascii  "\x00\x00\x00"

_0c2134_data:
		.fill   0x25c

_0c2390_data:
		.ascii  "\x00\x00"

_0c2392_data:
		.ascii  "\x00\x00"

_0c2394_data:
		.fill   0xc4

_0c2458_data:
		.ascii  "\x00\x00"

_0c245a_data:
		.ascii  "\x00\x00"

_0c245c_data:
		.fill   0x4

_0c2460_data:
		.fill   0x4

_0c2464_data:
		.fill   0x4

_0c2468_data:
		.fill   0x4

_0c246c_data:
		.fill   0x4

_0c2470_data:
		.fill   0x4

_0c2474_data:
		.fill   0x4

_0c2478_data:
		.ascii  "\x00"

_0c2479_data:
		.ascii  "\x00"

_0c247a_data:
		.ascii  "\x00\x00"

_0c247c_data:
		.ascii  "\x00\x00"

_0c247e_data:
		.ascii  "\x00\x00"

_0c2480_data:
		.ascii  "\x00\x00"

_0c2482_data:
		.ascii  "\x00\x00"

_0c2484_data:
		.ascii  "\x00\x00"

_0c2486_data:
		.ascii  "\x00\x00"

_0c2488_data:
		.ascii  "\x00\x00"

_0c248a_data:
		.ascii  "\x00\x00"

_0c248c_data:
		.ascii  "\x00\x00"

_0c248e_data:
		.ascii  "\x00\x00"

_0c2490_data:
		.ascii  "\x00\x00"

_0c2492_data:
		.ascii  "\x00\x00"

_0c2494_data:
		.ascii  "\x00\x00\x00"

_0c2497_data:
		.ascii  "\x00"

_0c2498_data:
		.ascii  "\x00"

_0c2499_data:
		.ascii  "\x00"

_0c249a_data:
		.ascii  "\x00"

_0c249b_data:
		.ascii  "\x00"

_0c249c_data:
		.ascii  "\x00"

_0c249d_data:
		.ascii  "\x00"

_0c249e_data:
		.ascii  "\x00\x00"

_0c24a0_data:
		.ascii  "\x00\x00"

_0c24a2_data:
		.fill   0xa

_0c24ac_data:
		.fill   0x6

_0c24b2_data:
		.ascii  "\x00\x00"

_0c24b4_data:
		.ascii  "\x00\x00"

_0c24b6_data:
		.ascii  "\x00\x00"

_0c24b8_data:
		.fill   0x4

_0c24bc_data:
		.ascii  "\x00\x00"

_0c24be_data:
		.ascii  "\x00\x00"

_0c24c0_data:
		.ascii  "\x00\x00"

_0c24c2_data:
		.ascii  "\x00\x00"

_0c24c4_data:
		.ascii  "\x00\x00"

_0c24c6_data:
		.ascii  "\x00\x00"

_0c24c8_data:
		.ascii  "\x00\x00"

_0c24ca_data:
		.ascii  "\x00"

_0c24cb_data:
		.ascii  "\x00"

_0c24cc_data:
		.ascii  "\x00"

_0c24cd_data:
		.ascii  "\x00"

_0c24ce_data:
		.ascii  "\x00"

_0c24cf_data:
		.ascii  "\x00"

_0c24d0_data:
		.ascii  "\x00"

_0c24d1_data:
		.ascii  "\x00"

_0c24d2_data:
		.ascii  "\x00"

_0c24d3_data:
		.ascii  "\x00"

_0c24d4_data:
		.ascii  "\x00\x00"

_0c24d6_data:
		.ascii  "\x00"

_0c24d7_data:
		.ascii  "\x00"

_0c24d8_data:
		.ascii  "\x00\x00"

_0c24da_data:
		.ascii  "\x00\x00"

_0c24dc_data:
		.ascii  "\x00\x00"

_0c24de_data:
		.ascii  "\x00\x00"

_0c24e0_data:
		.ascii  "\x00\x00"

_0c24e2_data:
		.ascii  "\x00\x00"

_0c24e4_data:
		.ascii  "\x00\x00"

_0c24e6_data:
		.fill   0x4

_0c24ea_data:
		.ascii  "\x00\x00"

_0c24ec_data:
		.ascii  "\x00\x00"

_0c24ee_data:
		.ascii  "\x00\x00"

_0c24f0_data:
		.ascii  "\x00\x00"

_0c24f2_data:
		.ascii  "\x00\x00"

_0c24f4_data:
		.ascii  "\x00\x00"

_0c24f6_data:
		.ascii  "\x00\x00"

_0c24f8_data:
		.ascii  "\x00\x00"

_0c24fa_data:
		.fill   0x62

_0c255c_data:
		.ascii  "\x00\x00"

_0c255e_data:
		.ascii  "\x00\x00"

_0c2560_data:
		.ascii  "\x00\x00"

_0c2562_data:
		.ascii  "\x00\x00"

_0c2564_data:
		.ascii  "\x00"

_0c2565_data:
		.ascii  "\x00"

_0c2566_data:
		.ascii  "\x00\x00"

_0c2568_data:
		.ascii  "\x00\x00"

_0c256a_data:
		.ascii  "\x00\x00"

_0c256c_data:
		.ascii  "\x00"

_0c256d_data:
		.ascii  "\x00"

_0c256e_data:
		.ascii  "\x00"

_0c256f_data:
		.ascii  "\x00"

_0c2570_data:
		.ascii  "\x00"

_0c2571_data:
		.ascii  "\x00"

_0c2572_data:
		.ascii  "\x00"

_0c2573_data:
		.ascii  "\x00"

_0c2574_data:
		.ascii  "\x00\x00"

_0c2576_data:
		.ascii  "\x00\x00"

_0c2578_data:
		.ascii  "\x00\x00"

_0c257a_data:
		.ascii  "\x00\x00"

_0c257c_data:
		.ascii  "\x00\x00"

_0c257e_data:
		.ascii  "\x00\x00"

_0c2580_data:
		.ascii  "\x00\x00"

_0c2582_data:
		.ascii  "\x00\x00"

_0c2584_data:
		.ascii  "\x00\x00"

_0c2586_data:
		.ascii  "\x00\x00"

_0c2588_data:
		.fill   0x10

_0c2598_data:
		.ascii  "\x00\x00"

_0c259a_data:
		.ascii  "\x00\x00"

_0c259c_data:
		.ascii  "\x00\x00"

_0c259e_data:
		.ascii  "\x00\x00"

_0c25a0_data:
		.ascii  "\x00\x00"

_0c25a2_data:
		.ascii  "\x00\x00"

_0c25a4_data:
		.ascii  "\x00\x00"

_0c25a6_data:
		.ascii  "\x00\x00"

_0c25a8_data:
		.ascii  "\x00\x00"

_0c25aa_data:
		.ascii  "\x00\x00"

_0c25ac_data:
		.ascii  "\x00\x00"

_0c25ae_data:
		.ascii  "\x00"

_0c25af_data:
		.ascii  "\x00"

_0c25b0_data:
		.ascii  "\x00"

_0c25b1_data:
		.ascii  "\x00"

_0c25b2_data:
		.ascii  "\x00"

_0c25b3_data:
		.ascii  "\x00"

_0c25b4_data:
		.ascii  "\x00"

_0c25b5_data:
		.ascii  "\x00"

_0c25b6_data:
		.ascii  "\x00"

_0c25b7_data:
		.ascii  "\x00"

_0c25b8_data:
		.fill   0x4

_0c25bc_data:
		.fill   0x4

_0c25c0_data:
		.ascii  "\x00\x00"

_0c25c2_data:
		.ascii  "\x00\x00"

_0c25c4_data:
		.ascii  "\x00\x00"

_0c25c6_data:
		.ascii  "\x00\x00"

_0c25c8_data:
		.ascii  "\x00\x00"

_0c25ca_data:
		.ascii  "\x00\x00"

_0c25cc_data:
		.fill   0x6

_0c25d2_data:
		.ascii  "\x00\x00"

_0c25d4_data:
		.ascii  "\x00\x00"

_0c25d6_data:
		.ascii  "\x00\x00"

_0c25d8_data:
		.ascii  "\x00\x00"

_0c25da_data:
		.ascii  "\x00\x00"

_0c25dc_data:
		.ascii  "\x00\x00"

_0c25de_data:
		.ascii  "\x00\x00"

_0c25e0_data:
		.ascii  "\x00\x00"

_0c25e2_data:
		.ascii  "\x00\x00"

_0c25e4_data:
		.ascii  "\x00\x00"

_0c25e6_data:
		.fill   0x4

_0c25ea_data:
		.ascii  "\x00"

_0c25eb_data:
		.ascii  "\x00"

_0c25ec_data:
		.ascii  "\x00\x00"

_0c25ee_data:
		.ascii  "\x00\x00"

_0c25f0_data:
		.ascii  "\x00\x00"

_0c25f2_data:
		.ascii  "\x00\x00"

_0c25f4_data:
		.fill   0x4

_0c25f8_data:
		.fill   0x8

_0c2600_data:
		.fill   0x2a

_0c262a_data:
		.ascii  "\x00\x00"

_0c262c_data:
		.fill   0x30

_0c265c_data:
		.ascii  "\x00"

_0c265d_data:
		.ascii  "\x00"

_0c265e_data:
		.ascii  "\x00"

_0c265f_data:
		.ascii  "\x00"

_0c2660_data:
		.ascii  "\x00"

_0c2661_data:
		.fill   0x12

_0c2673_data:
		.ascii  "\x00\x00"

_0c2675_data:
		.fill   0xc63

_0c32d8_data:
		.ascii  "\x00\x00"

_0c32da_data:
		.ascii  "\x00\x00"

_0c32dc_data:
		.ascii  "\x00\x00"

_0c32de_data:
		.ascii  "\x00\x00"

_0c32e0_data:
		.ascii  "\x00"

_0c32e1_data:
		.ascii  "\x00\x00\x00"

_0c32e4_data:
		.ascii  "\x00"

_0c32e5_data:
		.ascii  "\x00"

_0c32e6_data:
		.ascii  "\x00\x00"

_0c32e8_data:
		.fill   0x4

_0c32ec_data:
		.ascii  "\x00"

_0c32ed_data:
		.ascii  "\x00"

_0c32ee_data:
		.ascii  "\x00"

_0c32ef_data:
		.ascii  "\x00"

_0c32f0_data:
		.ascii  "\x00\x00"

_0c32f2_data:
		.ascii  "\x00\x00"

_0c32f4_data:
		.ascii  "\x00\x00"

_0c32f6_data:
		.fill   0xc6

_0c33bc_data:
		.ascii  "\x00\x00"

_0c33be_data:
		.ascii  "\x00\x00"

_0c33c0_data:
		.ascii  "\x00\x00"

_0c33c2_data:
		.ascii  "\x00\x00"

_0c33c4_data:
		.ascii  "\x00\x00"

_0c33c6_data:
		.ascii  "\x00\x00"

_0c33c8_data:
		.ascii  "\x00\x00"

_0c33ca_data:
		.ascii  "\x00"

_0c33cb_data:
		.ascii  "\x00"

_0c33cc_data:
		.ascii  "\x00"

_0c33cd_data:
		.ascii  "\x00"

_0c33ce_data:
		.fill   0xc6

_0c3494_data:
		.fill   0x4

_0c3498_data:
		.fill   0x4

_0c349c_data:
		.ascii  "\x00\x00"

_0c349e_data:
		.ascii  "\x00\x00"

_0c34a0_data:
		.ascii  "\x00\x00"

_0c34a2_data:
		.ascii  "\x00"

_0c34a3_data:
		.ascii  "\x00"

_0c34a4_data:
		.ascii  "\x00"

_0c34a5_data:
		.ascii  "\x00"

_0c34a6_data:
		.fill   0xc6

_0c356c_data:
		.ascii  "\x00\x00"

_0c356e_data:
		.ascii  "\x00\x00"

_0c3570_data:
		.ascii  "\x00\x00"

_0c3572_data:
		.ascii  "\x00\x00"

_0c3574_data:
		.ascii  "\x00\x00"

_0c3576_data:
		.ascii  "\x00\x00"

_0c3578_data:
		.ascii  "\x00\x00"

_0c357a_data:
		.ascii  "\x00"

_0c357b_data:
		.ascii  "\x00"

_0c357c_data:
		.ascii  "\x00"

_0c357d_data:
		.ascii  "\x00"

_0c357e_data:
		.fill   0xc6

_0c3644_data:
		.fill   0x4

_0c3648_data:
		.fill   0x4

_0c364c_data:
		.ascii  "\x00\x00"

_0c364e_data:
		.ascii  "\x00\x00"

_0c3650_data:
		.ascii  "\x00\x00"

_0c3652_data:
		.ascii  "\x00"

_0c3653_data:
		.ascii  "\x00"

_0c3654_data:
		.ascii  "\x00"

_0c3655_data:
		.ascii  "\x00"

_0c3656_data:
		.fill   0xd8

_0c372e_data:
		.fill   0xd8

_0c3806_data:
		.fill   0xd8

_0c38de_data:
		.fill   0xd8

_0c39b6_data:
		.fill   0xd8

_0c3a8e_data:
		.fill   0x1a0

_0c3c2e_data:
		.fill   0x956

_0c4584_data:
		.ascii  "\x00\x00"

_0c4586_data:
		.ascii  "\x00\x00"

_0c4588_data:
		.ascii  "\x00\x00"

_0c458a_data:
		.ascii  "\x00\x00"

_0c458c_data:
		.ascii  "\x00\x00"

_0c458e_data:
		.fill   0x8

_0c4596_data:
		.ascii  "\x00\x00"

_0c4598_data:
		.ascii  "\x00\x00"

_0c459a_data:
		.fill   0x181

_0c471b_data:
		.ascii  "\x00"

_0c471c_data:
		.fill   0x18

_0c4734_data:
		.fill   0x4

_0c4738_data:
		.fill   0x4

_0c473c_data:
		.fill   0x4

_0c4740_data:
		.fill   0xa20

_0c5160_data:
		.fill   0x14

_0c5174_data:
		.ascii  "\x00"

_0c5175_data:
		.ascii  "\x00"

_0c5176_data:
		.ascii  "\x00"

_0c5177_data:
		.ascii  "\x00"

_0c5178_data:
		.ascii  "\x00\x00"

_0c517a_data:
		.ascii  "\x00"

_0c517b_data:
		.fill   0x9

_0c5184_data:
		.ascii  "\x00"

_0c5185_data:
		.ascii  "\x00"

_0c5186_data:
		.ascii  "\x00\x00"

_0c5188_data:
		.fill   0x4

_0c518c_data:
		.ascii  "\x00\x00"

_0c518e_data:
		.ascii  "\x00\x00"

_0c5190_data:
		.ascii  "\x00\x00"

_0c5192_data:
		.ascii  "\x00\x00"

_0c5194_data:
		.ascii  "\x00\x00"

_0c5196_data:
		.ascii  "\x00\x00"

_0c5198_data:
		.ascii  "\x00\x00"

_0c519a_data:
		.ascii  "\x00\x00"

_0c519c_data:
		.ascii  "\x00\x00"

_0c519e_data:
		.ascii  "\x00\x00"

_0c51a0_data:
		.ascii  "\x00\x00"

_0c51a2_data:
		.ascii  "\x00\x00"

_0c51a4_data:
		.ascii  "\x00\x00"

_0c51a6_data:
		.ascii  "\x00\x00"

_0c51a8_data:
		.fill   0xe

_0c51b6_data:
		.ascii  "\x00\x00"

_0c51b8_data:
		.ascii  "\x00\x00"

_0c51ba_data:
		.ascii  "\x00\x00"

_0c51bc_data:
		.ascii  "\x00\x00"

_0c51be_data:
		.ascii  "\x00\x00"

_0c51c0_data:
		.ascii  "\x00\x00"

_0c51c2_data:
		.ascii  "\x00\x00"

_0c51c4_data:
		.ascii  "\x00\x00"

_0c51c6_data:
		.ascii  "\x00\x00"

_0c51c8_data:
		.ascii  "\x00\x00"

_0c51ca_data:
		.ascii  "\x00\x00"

_0c51cc_data:
		.ascii  "\x00\x00"

_0c51ce_data:
		.ascii  "\x00\x00"

_0c51d0_data:
		.ascii  "\x00\x00"

_0c51d2_data:
		.ascii  "\x00\x00"

_0c51d4_data:
		.ascii  "\x00\x00"

_0c51d6_data:
		.ascii  "\x00\x00"

_0c51d8_data:
		.fill   0x10

_0c51e8_data:
		.fill   0x10

_0c51f8_data:
		.fill   0x10

_0c5208_data:
		.fill   0xe

_0c5216_data:
		.ascii  "\x00\x00"

_0c5218_data:
		.ascii  "\x00\x00"

_0c521a_data:
		.ascii  "\x00\x00"

_0c521c_data:
		.fill   0x80

_0c529c_data:
		.ascii  "\x00\x00"

_0c529e_data:
		.ascii  "\x00\x00"

_0c52a0_data:
		.fill   0x1fe

_0c549e_data:
		.fill   0x27e

_0c571c_data:
		.ascii  "\x00\x00"

_0c571e_data:
		.fill   0x1192

_0c68b0_data:
		.fill   0x76

_0c6926_data:
		.ascii  "\x00\x00"

_0c6928_data:
		.fill   0x4

_0c692c_data:
		.fill   0x4

_0c6930_data:
		.fill   0x4

_0c6934_data:
		.fill   0x4

_0c6938_data:
		.fill   0x4

_0c693c_data:
		.fill   0x4

_0c6940_data:
		.ascii  "\x00"

_0c6941_data:
		.ascii  "\x00"

_0c6942_data:
		.ascii  "\x00\x00\x00"

_0c6945_data:
		.fill   0x7

_0c694c_data:
		.fill   0x4

_0c6950_data:
		.fill   0x4

_0c6954_data:
		.fill   0x4

_0c6958_data:
		.fill   0xc

_0c6964_data:
		.ascii  "\x00"

_0c6965_data:
		.ascii  "\x00"

_0c6966_data:
		.ascii  "\x00\x00"

_0c6968_data:
		.ascii  "\x00\x00"

_0c696a_data:
		.ascii  "\x00\x00"

_0c696c_data:
		.fill   0x4

_0c6970_data:
		.fill   0x4

_0c6974_data:
		.fill   0x4

_0c6978_data:
		.fill   0x4

_0c697c_data:
		.fill   0x4

_0c6980_data:
		.fill   0x4

_0c6984_data:
		.fill   0x16c

_0c6af0_data:
		.fill   0xc

_0c6afc_data:
		.fill   0x8

_0c6b04_data:
		.fill   0x4

_0c6b08_data:
		.fill   0x8

_0c6b10_data:
		.fill   0x4

_0c6b14_data:
		.fill   0x8

_0c6b1c_data:
		.fill   0x4

_0c6b20_data:
		.fill   0x8

_0c6b28_data:
		.fill   0x4

_0c6b2c_data:
		.fill   0x4

_0c6b30_data:
		.fill   0x4

_0c6b34_data:
		.fill   0x4

_0c6b38_data:
		.fill   0x4

_0c6b3c_data:
		.fill   0x4

_0c6b40_data:
		.ascii  "\x00\x00"

_0c6b42_data:
		.ascii  "\x00\x00"

_0c6b44_data:
		.ascii  "\x00\x00"

_0c6b46_data:
		.ascii  "\x00"

_0c6b47_data:
		.ascii  "\x00"

_0c6b48_data:
		.fill   0x4

_0c6b4c_data:
		.ascii  "\x00\x00"

_0c6b4e_data:
		.ascii  "\x00\x00"

_0c6b50_data:
		.fill   0x4

_0c6b54_data:
		.ascii  "\x00\x00\x00"

_0c6b57_data:
		.ascii  "\x00"

_0c6b58_data:
		.fill   0xc

_0c6b64_data:
		.fill   0x4

_0c6b68_data:
		.fill   0x700

_0c7268_data:
		.fill   0x80

_0c72e8_data:
		.fill   0x680

_0c7968_data:
		.ascii  "\x00\x00\x00"

_0c796b_data:
		.ascii  "\x00"

_0c796c_data:
		.ascii  "\x00"

_0c796d_data:
		.fill   0x2fc

_0c7c69_data:
		.ascii  "\x00"

_0c7c6a_data:
		.ascii  "\x00"

_0c7c6b_data:
		.ascii  "\x00"

_0c7c6c_data:
		.ascii  "\x00"

_0c7c6d_data:
		.ascii  "\x00"

_0c7c6e_data:
		.fill   0x8fe

_0c856c_data:
		.fill   0x300

_0c886c_data:
		.ascii  "\x00"

_0c886d_data:
		.ascii  "\x00"

_0c886e_data:
		.fill   0x2fe

_0c8b6c_data:
		.fill   0x600

_0c916c_data:
		.fill   0x4

_0c9170_data:
		.ascii  "\x00\x00"

_0c9172_data:
		.ascii  "\x00\x00"

_0c9174_data:
		.fill   0x300

_0c9474_data:
		.ascii  "\x00"

_0c9475_data:
		.ascii  "\x00\x00\x00"

_0c9478_data:
		.fill   0x14

_0c948c_data:
		.fill   0x12

_0c949e_data:
		.ascii  "\x00\x00"

_0c94a0_data:
		.fill   0x4

_0c94a4_data:
		.fill   0x4

_0c94a8_data:
		.fill   0x4

_0c94ac_data:
		.fill   0x4

_0c94b0_data:
		.ascii  "\x00\x00"

_0c94b2_data:
		.ascii  "\x00\x00"

_0c94b4_data:
		.fill   0x4

_0c94b8_data:
		.fill   0x4

_0c94bc_data:
		.fill   0x4

_0c94c0_data:
		.fill   0x4

_0c94c4_data:
		.fill   0x4

_0c94c8_data:
		.fill   0x4

_0c94cc_data:
		.fill   0x4

_0c94d0_data:
		.fill   0x4

_0c94d4_data:
		.fill   0x4

_0c94d8_data:
		.fill   0x4

_0c94dc_data:
		.fill   0x4

_0c94e0_data:
		.fill   0x1c

_0c94fc_data:
		.fill   0x1c

_0c9518_data:
		.fill   0x1c

_0c9534_data:
		.fill   0x1500

_0caa34_data:
		.fill   0x4

_0caa38_data:
		.fill   0x4

_0caa3c_data:
		.fill   0x4

_0caa40_data:
		.fill   0x4

_0caa44_data:
		.fill   0x4

_0caa48_data:
		.fill   0x4

_0caa4c_data:
		.fill   0x12bc

_0cbd08_data:
		.fill   0x4

_0cbd0c_data:
		.fill   0x12c0

_0ccfcc_data:
		.fill   0x4

_0ccfd0_data:
		.ascii  "\x00\x00"

_0ccfd2_data:
		.ascii  "\x00\x00"

_0ccfd4_data:
		.ascii  "\x00\x00"

_0ccfd6_data:
		.ascii  "\x00\x00"

_0ccfd8_data:
		.ascii  "\x00\x00"

_0ccfda_data:
		.fill   0xa

_0ccfe4_data:
		.ascii  "\x00\x00"

_0ccfe6_data:
		.ascii  "\x00\x00"

_0ccfe8_data:
		.ascii  "\x00\x00"

_0ccfea_data:
		.ascii  "\x00\x00"

_0ccfec_data:
		.ascii  "\x00\x00"

_0ccfee_data:
		.ascii  "\x00\x00"

_0ccff0_data:
		.ascii  "\x00\x00"

_0ccff2_data:
		.fill   0x8

_0ccffa_data:
		.fill   0x6

_0cd000_data:
		.ascii  "\x00\x00"

_0cd002_data:
		.ascii  "\x00\x00"

_0cd004_data:
		.ascii  "\x00\x00"

_0cd006_data:
		.ascii  "\x00\x00"

_0cd008_data:
		.ascii  "\x00\x00"

_0cd00a_data:
		.ascii  "\x00\x00"

_0cd00c_data:
		.fill   0x4

_0cd010_data:
		.fill   0x4

_0cd014_data:
		.fill   0x4

_0cd018_data:
		.ascii  "\x00\x00"

_0cd01a_data:
		.ascii  "\x00\x00"

_0cd01c_data:
		.ascii  "\x00\x00"

_0cd01e_data:
		.ascii  "\x00\x00"

_0cd020_data:
		.ascii  "\x00\x00"

_0cd022_data:
		.ascii  "\x00\x00"

_0cd024_data:
		.ascii  "\x00\x00"

_0cd026_data:
		.ascii  "\x00\x00"

_0cd028_data:
		.fill   0x4

_0cd02c_data:
		.fill   0x20

_0cd04c_data:
		.ascii  "\x00\x00"

_0cd04e_data:
		.ascii  "\x00\x00"

_0cd050_data:
		.ascii  "\x00\x00"

_0cd052_data:
		.ascii  "\x00\x00"

_0cd054_data:
		.ascii  "\x00\x00"

_0cd056_data:
		.fill   0x4

_0cd05a_data:
		.ascii  "\x00"

_0cd05b_data:
		.fill   0x5

_0cd060_data:
		.fill   0x4

_0cd064_data:
		.fill   0x4

_0cd068_data:
		.fill   0x4

_0cd06c_data:
		.ascii  "\x00\x00"

_0cd06e_data:
		.ascii  "\x00\x00"

_0cd070_data:
		.ascii  "\x00\x00"

_0cd072_data:
		.ascii  "\x00\x00"

_0cd074_data:
		.ascii  "\x00\x00"

_0cd076_data:
		.fill   0x6

_0cd07c_data:
		.ascii  "\x00\x00"

_0cd07e_data:
		.ascii  "\x00\x00"

_0cd080_data:
		.ascii  "\x00\x00"

_0cd082_data:
		.ascii  "\x00\x00"

_0cd084_data:
		.ascii  "\x00\x00"

_0cd086_data:
		.ascii  "\x00\x00"

_0cd088_data:
		.ascii  "\x00\x00"

_0cd08a_data:
		.ascii  "\x00\x00"

_0cd08c_data:
		.ascii  "\x00\x00"

_0cd08e_data:
		.ascii  "\x00\x00"

_0cd090_data:
		.ascii  "\x00\x00"

_0cd092_data:
		.ascii  "\x00\x00"

_0cd094_data:
		.ascii  "\x00\x00"

_0cd096_data:
		.ascii  "\x00\x00"

_0cd098_data:
		.fill   0xc

_0cd0a4_data:
		.ascii  "\x00\x00"

_0cd0a6_data:
		.ascii  "\x00\x00"

_0cd0a8_data:
		.ascii  "\x00\x00"

_0cd0aa_data:
		.ascii  "\x00\x00"

_0cd0ac_data:
		.fill   0x4

_0cd0b0_data:
		.ascii  "\x00\x00"

_0cd0b2_data:
		.ascii  "\x00\x00"

_0cd0b4_data:
		.ascii  "\x00\x00"

_0cd0b6_data:
		.ascii  "\x00\x00"

_0cd0b8_data:
		.fill   0x4

_0cd0bc_data:
		.ascii  "\x00\x00"

_0cd0be_data:
		.ascii  "\x00\x00"

_0cd0c0_data:
		.ascii  "\x00\x00"

_0cd0c2_data:
		.ascii  "\x00\x00"

_0cd0c4_data:
		.ascii  "\x00\x00"

_0cd0c6_data:
		.fill   0x6

_0cd0cc_data:
		.ascii  "\x00\x00"

_0cd0ce_data:
		.ascii  "\x00\x00"

_0cd0d0_data:
		.ascii  "\x00"

_0cd0d1_data:
		.ascii  "\x00"

_0cd0d2_data:
		.ascii  "\x00\x00"

_0cd0d4_data:
		.ascii  "\x00"

_0cd0d5_data:
		.ascii  "\x00"

_0cd0d6_data:
		.ascii  "\x00"

_0cd0d7_data:
		.ascii  "\x00"

_0cd0d8_data:
		.ascii  "\x00"

_0cd0d9_data:
		.fill   0x5

_0cd0de_data:
		.ascii  "\x00"

_0cd0df_data:
		.ascii  "\x00"

_0cd0e0_data:
		.fill   0x4

_0cd0e4_data:
		.fill   0x4

_0cd0e8_data:
		.ascii  "\x00"

_0cd0e9_data:
		.ascii  "\x00"

_0cd0ea_data:
		.ascii  "\x00\x00"

_0cd0ec_data:
		.ascii  "\x00\x00"

_0cd0ee_data:
		.ascii  "\x00\x00"

_0cd0f0_data:
		.ascii  "\x00\x00"

_0cd0f2_data:
		.ascii  "\x00\x00"

_0cd0f4_data:
		.ascii  "\x00\x00"

_0cd0f6_data:
		.ascii  "\x00\x00"

_0cd0f8_data:
		.ascii  "\x00"

_0cd0f9_data:
		.fill   0x64c

_0cd745_data:
		.ascii  "\x00"

_0cd746_data:
		.ascii  "\x00"

_0cd747_data:
		.ascii  "\x00"

_0cd748_data:
		.ascii  "\x00\x00"

_0cd74a_data:
		.ascii  "\x00\x00"

_0cd74c_data:
		.fill   0x4

_0cd750_data:
		.fill   0x60

_0cd7b0_data:
		.fill   0x4

_0cd7b4_data:
		.fill   0x4

_0cd7b8_data:
		.fill   0x4

_0cd7bc_data:
		.fill   0x4

_0cd7c0_data:
		.fill   0x4

_0cd7c4_data:
		.fill   0x4

_0cd7c8_data:
		.fill   0x4

_0cd7cc_data:
		.fill   0x4

_0cd7d0_data:
		.fill   0x4

_0cd7d4_data:
		.fill   0x4

_0cd7d8_data:
		.fill   0x4

_0cd7dc_data:
		.fill   0x4

_0cd7e0_data:
		.fill   0x4

_0cd7e4_data:
		.fill   0x4

_0cd7e8_data:
		.fill   0x4

_0cd7ec_data:
		.fill   0x4

_0cd7f0_data:
		.fill   0x4

_0cd7f4_data:
		.fill   0x4

_0cd7f8_data:
		.fill   0x4

_0cd7fc_data:
		.fill   0x4

_0cd800_data:
		.fill   0x4

_0cd804_data:
		.fill   0x4

_0cd808_data:
		.fill   0x4

_0cd80c_data:
		.fill   0x4

_0cd810_data:
		.fill   0x4

_0cd814_data:
		.fill   0x4

_0cd818_data:
		.fill   0x4

_0cd81c_data:
		.fill   0x4

_0cd820_data:
		.fill   0x4

_0cd824_data:
		.fill   0x4

_0cd828_data:
		.fill   0x4

_0cd82c_data:
		.fill   0x4

_0cd830_data:
		.fill   0x4

_0cd834_data:
		.fill   0x4

_0cd838_data:
		.fill   0x4

_0cd83c_data:
		.fill   0x4

_0cd840_data:
		.fill   0x4

_0cd844_data:
		.fill   0x4

_0cd848_data:
		.fill   0x4

_0cd84c_data:
		.fill   0x4

_0cd850_data:
		.fill   0x4

_0cd854_data:
		.fill   0x4

_0cd858_data:
		.fill   0x4

_0cd85c_data:
		.fill   0x4

_0cd860_data:
		.fill   0x4

_0cd864_data:
		.fill   0x4

_0cd868_data:
		.fill   0x4

_0cd86c_data:
		.fill   0x4

_0cd870_data:
		.fill   0x4

_0cd874_data:
		.fill   0x4

_0cd878_data:
		.fill   0x4

_0cd87c_data:
		.fill   0x4

_0cd880_data:
		.fill   0x4

_0cd884_data:
		.fill   0x4

_0cd888_data:
		.fill   0x4

_0cd88c_data:
		.fill   0x4

_0cd890_data:
		.fill   0x4

_0cd894_data:
		.fill   0x4

_0cd898_data:
		.fill   0x4

_0cd89c_data:
		.fill   0x4

_0cd8a0_data:
		.fill   0x4

_0cd8a4_data:
		.fill   0x4

_0cd8a8_data:
		.fill   0x4

_0cd8ac_data:
		.fill   0x4

_0cd8b0_data:
		.fill   0x4

_0cd8b4_data:
		.fill   0x4

_0cd8b8_data:
		.fill   0x4

_0cd8bc_data:
		.fill   0x4

_0cd8c0_data:
		.fill   0x4

_0cd8c4_data:
		.fill   0x8

_0cd8cc_data:
		.fill   0x4

_0cd8d0_data:
		.fill   0x4

_0cd8d4_data:
		.fill   0x4

_0cd8d8_data:
		.fill   0x4

_0cd8dc_data:
		.fill   0x74

_0cd950_data:
		.fill   0x54

_0cd9a4_data:
		.fill   0x4

_0cd9a8_data:
		.fill   0x4

_0cd9ac_data:
		.fill   0x4

_0cd9b0_data:
		.fill   0xc

_0cd9bc_data:
		.fill   0x4

_0cd9c0_data:
		.fill   0x4

_0cd9c4_data:
		.fill   0x4

_0cd9c8_data:
		.fill   0x4

_0cd9cc_data:
		.fill   0x4

_0cd9d0_data:
		.fill   0x4

_0cd9d4_data:
		.fill   0x8

_0cd9dc_data:
		.fill   0x8

_0cd9e4_data:
		.fill   0x8

_0cd9ec_data:
		.fill   0x8

_0cd9f4_data:
		.fill   0x2c

_0cda20_data:
		.fill   0x20

_0cda40_data:
		.fill   0xa8

_0cdae8_data:
		.fill   0x4

_0cdaec_data:
		.ascii  "\x00\x00"

_0cdaee_data:
		.ascii  "\x00\x00"

_0cdaf0_data:
		.ascii  "\x00\x00"

_0cdaf2_data:
		.ascii  "\x00\x00"

_0cdaf4_data:
		.fill   0x4

_0cdaf8_data:
		.fill   0x4

_0cdafc_data:
		.fill   0x100

_0cdbfc_data:
		.fill   0x100

_0cdcfc_data:
		.fill   0x100

_0cddfc_data:
		.fill   0x100

_0cdefc_data:
		.fill   0x4

_0cdf00_data:
		.fill   0x4

_0cdf04_data:
		.fill   0x4

_0cdf08_data:
		.fill   0x4

_0cdf0c_data:
		.ascii  "\x00\x00"

_0cdf0e_data:
		.ascii  "\x00\x00"

_0cdf10_data:
		.fill   0x4

_0cdf14_data:
		.fill   0x4

_0cdf18_data:
		.fill   0x4

_0cdf1c_data:
		.fill   0x4

_0cdf20_data:
		.fill   0x4

_0cdf24_data:
		.fill   0x4

_0cdf28_data:
		.fill   0x4

_0cdf2c_data:
		.fill   0x4

_0cdf30_data:
		.fill   0x4

_0cdf34_data:
		.fill   0x4

_0cdf38_data:
		.fill   0x4

_0cdf3c_data:
		.fill   0x4

_0cdf40_data:
		.fill   0x4

_0cdf44_data:
		.fill   0x4

_0cdf48_data:
		.fill   0x4

_0cdf4c_data:
		.fill   0x4

_0cdf50_data:
		.fill   0x4

_0cdf54_data:
		.fill   0x4

_0cdf58_data:
		.fill   0x4

_0cdf5c_data:
		.fill   0x4

_0cdf60_data:
		.ascii  "\x00"

_0cdf61_data:
		.ascii  "\x00\x00\x00"

_0cdf64_data:
		.fill   0x4

_0cdf68_data:
		.fill   0x4

_0cdf6c_data:
		.ascii  "\x00"

_0cdf6d_data:
		.ascii  "\x00"

_0cdf6e_data:
		.ascii  "\x00\x00"

_0cdf70_data:
		.fill   0x4

_0cdf74_data:
		.fill   0x4

_0cdf78_data:
		.fill   0x4

_0cdf7c_data:
		.fill   0x4

_0cdf80_data:
		.fill   0x4

_0cdf84_data:
		.fill   0x4

_0cdf88_data:
		.fill   0x4

_0cdf8c_data:
		.fill   0x4

_0cdf90_data:
		.fill   0x4

_0cdf94_data:
		.fill   0x4

_0cdf98_data:
		.fill   0x4

_0cdf9c_data:
		.fill   0xc8

_0ce064_data:
		.fill   0xc8

_0ce12c_data:
		.fill   0xc8

_0ce1f4_data:
		.fill   0xc8

_0ce2bc_data:
		.fill   0x78

_0ce334_data:
		.fill   0x78

_0ce3ac_data:
		.fill   0x78

_0ce424_data:
		.fill   0x78

_0ce49c_data:
		.fill   0x4

_0ce4a0_data:
		.fill   0x4

_0ce4a4_data:
		.fill   0x4

_0ce4a8_data:
		.fill   0x4

_0ce4ac_data:
		.fill   0x4

_0ce4b0_data:
		.fill   0x20

_0ce4d0_data:
		.fill   0x32

_0ce502_data:
		.ascii  "\x00\x00"

_0ce504_data:
		.fill   0x4

_0ce508_data:
		.fill   0x4

_0ce50c_data:
		.ascii  "\x00\x00"

_0ce50e_data:
		.ascii  "\x00\x00"

_0ce510_data:
		.fill   0x4

_0ce514_data:
		.fill   0x4

_0ce518_data:
		.fill   0x4

_0ce51c_data:
		.fill   0x4

_0ce520_data:
		.fill   0x4

_0ce524_data:
		.fill   0x4

_0ce528_data:
		.fill   0x4

_0ce52c_data:
		.fill   0x4

_0ce530_data:
		.ascii  "\x00\x00"

_0ce532_data:
		.ascii  "\x00\x00"

_0ce534_data:
		.ascii  "\x00\x00"

_0ce536_data:
		.fill   0x6

_0ce53c_data:
		.fill   0x14

_0ce550_data:
		.fill   0x1e

_0ce56e_data:
		.ascii  "\x00\x00"

_0ce570_data:
		.ascii  "\x00\x00"

_0ce572_data:
		.ascii  "\x00\x00"

_0ce574_data:
		.fill   0x4

_0ce578_data:
		.fill   0x4

_0ce57c_data:
		.fill   0x4

_0ce580_data:
		.fill   0x4c

_0ce5cc_data:
		.fill   0x4

_0ce5d0_data:
		.fill   0x4

_0ce5d4_data:
		.fill   0x4

_0ce5d8_data:
		.fill   0x4

_0ce5dc_data:
		.ascii  "\x00"

_0ce5dd_data:
		.fill   0x103

_0ce6e0_data:
		.fill   0x100

_0ce7e0_data:
		.ascii  "\x00\x00"

_0ce7e2_data:
		.ascii  "\x00\x00"

_0ce7e4_data:
		.ascii  "\x00"

_0ce7e5_data:
		.ascii  "\x00"

_0ce7e6_data:
		.fill   0x4

_0ce7ea_data:
		.ascii  "\x00\x00"

_0ce7ec_data:
		.ascii  "\x00\x00"

_0ce7ee_data:
		.ascii  "\x00\x00"

_0ce7f0_data:
		.fill   0xa

_0ce7fa_data:
		.ascii  "\x00\x00"

_0ce7fc_data:
		.fill   0x4

_0ce800_data:
		.fill   0x4

_0ce804_data:
		.fill   0x4

_0ce808_data:
		.fill   0x4

_0ce80c_data:
		.fill   0x4

_0ce810_data:
		.fill   0x4

_0ce814_data:
		.ascii  "\x00\x00"

_0ce816_data:
		.fill   0x4

_0ce81a_data:
		.ascii  "\x00\x00"

_0ce81c_data:
		.ascii  "\x00\x00"

_0ce81e_data:
		.ascii  "\x00\x00"

_0ce820_data:
		.fill   0x4

_0ce824_data:
		.fill   0x4

_0ce828_data:
		.fill   0x4

_0ce82c_data:
		.fill   0x4

_0ce830_data:
		.fill   0x4

_0ce834_data:
		.ascii  "\x00"

_0ce835_data:
		.fill   0x9

_0ce83e_data:
		.ascii  "\x00"

_0ce83f_data:
		.ascii  "\x00"

_0ce840_data:
		.ascii  "\x00"

_0ce841_data:
		.ascii  "\x00"

_0ce842_data:
		.ascii  "\x00"

_0ce843_data:
		.ascii  "\x00"

_0ce844_data:
		.ascii  "\x00"

_0ce845_data:
		.ascii  "\x00"

_0ce846_data:
		.ascii  "\x00\x00"

_0ce848_data:
		.fill   0x64

_0ce8ac_data:
		.fill   0x30

_0ce8dc_data:
		.fill   0x4

_0ce8e0_data:
		.ascii  "\x00\x00"

_0ce8e2_data:
		.ascii  "\x00\x00"

_0ce8e4_data:
		.fill   0x4

_0ce8e8_data:
		.fill   0x4

_0ce8ec_data:
		.ascii  "\x00\x00"

_0ce8ee_data:
		.ascii  "\x00\x00"

_0ce8f0_data:
		.ascii  "\x00\x00"

_0ce8f2_data:
		.ascii  "\x00\x00"

_0ce8f4_data:
		.ascii  "\x00\x00"

_0ce8f6_data:
		.ascii  "\x00\x00"

_0ce8f8_data:
		.ascii  "\x00\x00"

_0ce8fa_data:
		.ascii  "\x00\x00"

_0ce8fc_data:
		.ascii  "\x00\x00"

_0ce8fe_data:
		.ascii  "\x00\x00"

_0ce900_data:
		.ascii  "\x00\x00"

_0ce902_data:
		.ascii  "\x00"

_0ce903_data:
		.ascii  "\x00"

_0ce904_data:
		.ascii  "\x00\x00"

_0ce906_data:
		.ascii  "\x00\x00"

_0ce908_data:
		.ascii  "\x00\x00"

_0ce90a_data:
		.ascii  "\x00\x00"

_0ce90c_data:
		.fill   0x4

_0ce910_data:
		.fill   0x4

_0ce914_data:
		.fill   0x8316

_0d6c2a_data:
		.ascii  "\x00\x00"

_0d6c2c_data:
		.ascii  "\x00\x00"

_0d6c2e_data:
		.ascii  "\x00\x00"

_0d6c30_data:
		.ascii  "\x00\x00"

_0d6c32_data:
		.ascii  "\x00\x00"

_0d6c34_data:
		.ascii  "\x00\x00"

_0d6c36_data:
		.ascii  "\x00\x00"

_0d6c38_data:
		.ascii  "\x00\x00"

_0d6c3a_data:
		.ascii  "\x00\x00"

_0d6c3c_data:
		.ascii  "\x00\x00"

_0d6c3e_data:
		.ascii  "\x00\x00"

_0d6c40_data:
		.ascii  "\x00\x00"

_0d6c42_data:
		.ascii  "\x00\x00"

_0d6c44_data:
		.ascii  "\x00\x00"

_0d6c46_data:
		.ascii  "\x00\x00"

_0d6c48_data:
		.ascii  "\x00\x00"

_0d6c4a_data:
		.ascii  "\x00\x00"

_0d6c4c_data:
		.fill   0x9a

_0d6ce6_data:
		.ascii  "\x00"

_0d6ce7_data:
		.ascii  "\x00"

_0d6ce8_data:
		.ascii  "\x00"

_0d6ce9_data:
		.ascii  "\x00"

_0d6cea_data:
		.ascii  "\x00\x00"

_0d6cec_data:
		.ascii  "\x00\x00"

_0d6cee_data:
		.ascii  "\x00\x00"

_0d6cf0_data:
		.ascii  "\x00\x00"

_0d6cf2_data:
		.ascii  "\x00\x00"

_0d6cf4_data:
		.ascii  "\x00\x00"

_0d6cf6_data:
		.ascii  "\x00\x00"

_0d6cf8_data:
		.ascii  "\x00\x00"

_0d6cfa_data:
		.ascii  "\x00\x00"

_0d6cfc_data:
		.ascii  "\x00\x00"

_0d6cfe_data:
		.ascii  "\x00\x00"

_0d6d00_data:
		.ascii  "\x00\x00"

_0d6d02_data:
		.ascii  "\x00\x00"

_0d6d04_data:
		.fill   0x4

_0d6d08_data:
		.fill   0x4

_0d6d0c_data:
		.fill   0x4

_0d6d10_data:
		.ascii  "\x00"

_0d6d11_data:
		.ascii  "\x00"

_0d6d12_data:
		.ascii  "\x00\x00"

_0d6d14_data:
		.ascii  "\x00\x00"

_0d6d16_data:
		.ascii  "\x00"

_0d6d17_data:
		.ascii  "\x00"

_0d6d18_data:
		.ascii  "\x00\x00"

_0d6d1a_data:
		.ascii  "\x00"

_0d6d1b_data:
		.ascii  "\x00"

_0d6d1c_data:
		.ascii  "\x00\x00"

_0d6d1e_data:
		.ascii  "\x00\x00"

_0d6d20_data:
		.ascii  "\x00\x00"

_0d6d22_data:
		.ascii  "\x00\x00"

_0d6d24_data:
		.ascii  "\x00\x00"

_0d6d26_data:
		.ascii  "\x00\x00"

_0d6d28_data:
		.ascii  "\x00\x00"

_0d6d2a_data:
		.ascii  "\x00\x00"

_0d6d2c_data:
		.ascii  "\x00\x00"

_0d6d2e_data:
		.ascii  "\x00\x00"

_0d6d30_data:
		.fill   0xe

_0d6d3e_data:
		.fill   0x4

_0d6d42_data:
		.ascii  "\x00\x00"

_0d6d44_data:
		.ascii  "\x00"

_0d6d45_data:
		.fill   0x1b

_0d6d60_data:
		.ascii  "\x00"

_0d6d61_data:
		.ascii  "\x00"

_0d6d62_data:
		.ascii  "\x00"

_0d6d63_data:
		.fill   0x4

_0d6d67_data:
		.fill   0x4

_0d6d6b_data:
		.fill   0x18c

_0d6ef7_data:
		.fill   0x4

_0d6efb_data:
		.fill   0x190

_0d708b_data:
		.fill   0x190

_0d721b_data:
		.fill   0x64

_0d727f_data:
		.ascii  "\x00"

_0d7280_data:
		.ascii  "\x00"

_0d7281_data:
		.ascii  "\x00"

_0d7282_data:
		.ascii  "\x00"

_0d7283_data:
		.ascii  "\x00"

_0d7284_data:
		.ascii  "\x00"

_0d7285_data:
		.ascii  "\x00"

_0d7286_data:
		.ascii  "\x00\x00"

_0d7288_data:
		.fill   0x104

_0d738c_data:
		.fill   0x4

_0d7390_data:
		.fill   0x4

_0d7394_data:
		.fill   0x4

_0d7398_data:
		.fill   0x4

_0d739c_data:
		.fill   0x4

_0d73a0_data:
		.fill   0x4

_0d73a4_data:
		.fill   0x4

_0d73a8_data:
		.fill   0x4

_0d73ac_data:
		.fill   0x4

_0d73b0_data:
		.fill   0x4

_0d73b4_data:
		.fill   0x4

_0d73b8_data:
		.fill   0x4

_0d73bc_data:
		.fill   0x4

_0d73c0_data:
		.fill   0x4

_0d73c4_data:
		.fill   0x4

_0d73c8_data:
		.fill   0x4

_0d73cc_data:
		.fill   0x4

_0d73d0_data:
		.fill   0x4

_0d73d4_data:
		.fill   0x4

_0d73d8_data:
		.fill   0x4

_0d73dc_data:
		.fill   0x4

_0d73e0_data:
		.fill   0x4

_0d73e4_data:
		.fill   0x4

_0d73e8_data:
		.fill   0x4

_0d73ec_data:
		.fill   0x4

_0d73f0_data:
		.fill   0x4

_0d73f4_data:
		.fill   0x4

_0d73f8_data:
		.fill   0x4

_0d73fc_data:
		.fill   0x4

_0d7400_data:
		.fill   0x4

_0d7404_data:
		.fill   0x4

_0d7408_data:
		.fill   0x4

_0d740c_data:
		.fill   0x4

_0d7410_data:
		.fill   0x4

_0d7414_data:
		.fill   0x4

_0d7418_data:
		.fill   0x800

_0d7c18_data:
		.fill   0x8

_0d7c20_data:
		.ascii  "\x00"

_0d7c21_data:
		.ascii  "\x00\x00\x00"

_0d7c24_data:
		.fill   0x4

_0d7c28_data:
		.fill   0x4

_0d7c2c_data:
		.ascii  "\x00\x00"

_0d7c2e_data:
		.ascii  "\x00\x00"

_0d7c30_data:
		.ascii  "\x00"

_0d7c31_data:
		.ascii  "\x00"

_0d7c32_data:
		.ascii  "\x00"

_0d7c33_data:
		.ascii  "\x00"

_0d7c34_data:
		.fill   0x2a

_0d7c5e_data:
		.ascii  "\x00"

_0d7c5f_data:
		.ascii  "\x00"

_0d7c60_data:
		.ascii  "\x00\x00"

_0d7c62_data:
		.ascii  "\x00\x00"

_0d7c64_data:
		.ascii  "\x00\x00"

_0d7c66_data:
		.ascii  "\x00\x00"

_0d7c68_data:
		.ascii  "\x00\x00"

_0d7c6a_data:
		.fill   0x4

_0d7c6e_data:
		.ascii  "\x00\x00"

_0d7c70_data:
		.fill   0x4

_0d7c74_data:
		.fill   0x4

_0d7c78_data:
		.fill   0x4

_0d7c7c_data:
		.fill   0x4

_0d7c80_data:
		.fill   0x4

_0d7c84_data:
		.fill   0x4

_0d7c88_data:
		.fill   0x4

_0d7c8c_data:
		.ascii  "\x00"

_0d7c8d_data:
		.ascii  "\x00"

_0d7c8e_data:
		.ascii  "\x00\x00"

_0d7c90_data:
		.ascii  "\x00\x00"

_0d7c92_data:
		.ascii  "\x00\x00"

_0d7c94_data:
		.fill   0x4

_0d7c98_data:
		.fill   0x4

_0d7c9c_data:
		.fill   0x4

_0d7ca0_data:
		.fill   0x4

_0d7ca4_data:
		.ascii  "\x00"

_0d7ca5_data:
		.ascii  "\x00\x00"

_0d7ca7_data:
		.ascii  "\x00"

_0d7ca8_data:
		.ascii  "\x00"

_0d7ca9_data:
		.fill   0x2ff

_0d7fa8_data:
		.fill   0x4

_0d7fac_data:
		.fill   0x4

_0d7fb0_data:
		.fill   0x4

_0d7fb4_data:
		.fill   0x4

_0d7fb8_data:
		.fill   0xc

_0d7fc4_data:
		.fill   0x4

_0d7fc8_data:
		.fill   0x4

_0d7fcc_data:
		.fill   0x4

_0d7fd0_data:
		.fill   0x4

_0d7fd4_data:
		.fill   0x4

_0d7fd8_data:
		.fill   0x4

_0d7fdc_data:
		.fill   0x4

_0d7fe0_data:
		.fill   0x4

_0d7fe4_data:
		.ascii  "\x00"

_0d7fe5_data:
		.ascii  "\x00"

_0d7fe6_data:
		.ascii  "\x00"

_0d7fe7_data:
		.ascii  "\x00"

_0d7fe8_data:
		.ascii  "\x00"

_0d7fe9_data:
		.ascii  "\x00"

_0d7fea_data:
		.ascii  "\x00\x00"

_0d7fec_data:
		.ascii  "\x00\x00"

_0d7fee_data:
		.ascii  "\x00\x00"

_0d7ff0_data:
		.ascii  "\x00\x00"

_0d7ff2_data:
		.ascii  "\x00"

_0d7ff3_data:
		.ascii  "\x00"

_0d7ff4_data:
		.fill   0x4

_0d7ff8_data:
		.ascii  "\x00\x00"

_0d7ffa_data:
		.ascii  "\x00\x00"

_0d7ffc_data:
		.ascii  "\x00\x00"

_0d7ffe_data:
		.ascii  "\x00\x00"

_0d8000_data:
		.ascii  "\x00\x00"

_0d8002_data:
		.fill   0x4

_0d8006_data:
		.ascii  "\x00\x00"

_0d8008_data:
		.ascii  "\x00\x00"

_0d800a_data:
		.ascii  "\x00\x00"

_0d800c_data:
		.ascii  "\x00\x00"

_0d800e_data:
		.ascii  "\x00\x00"

_0d8010_data:
		.ascii  "\x00\x00"

_0d8012_data:
		.ascii  "\x00\x00"

_0d8014_data:
		.ascii  "\x00"

_0d8015_data:
		.ascii  "\x00"

_0d8016_data:
		.ascii  "\x00"

_0d8017_data:
		.ascii  "\x00"

_0d8018_data:
		.fill   0x4

_0d801c_data:
		.fill   0x62

_0d807e_data:
		.ascii  "\x00\x00"

_0d8080_data:
		.ascii  "\x00\x00"

_0d8082_data:
		.ascii  "\x00\x00"

_0d8084_data:
		.ascii  "\x00\x00"

_0d8086_data:
		.ascii  "\x00\x00"

_0d8088_data:
		.ascii  "\x00\x00"

_0d808a_data:
		.ascii  "\x00\x00"

_0d808c_data:
		.ascii  "\x00\x00"

_0d808e_data:
		.ascii  "\x00\x00"

_0d8090_data:
		.fill   0x4

_0d8094_data:
		.fill   0x4

_0d8098_data:
		.fill   0x4

_0d809c_data:
		.fill   0x4

_0d80a0_data:
		.fill   0x80

_0d8120_data:
		.fill   0x4

_0d8124_data:
		.fill   0x4

_0d8128_data:
		.ascii  "\x00\x00"

_0d812a_data:
		.ascii  "\x00\x00"

_0d812c_data:
		.ascii  "\x00\x00"

_0d812e_data:
		.ascii  "\x00\x00"

_0d8130_data:
		.ascii  "\x00\x00"

_0d8132_data:
		.ascii  "\x00\x00"

_0d8134_data:
		.ascii  "\x00\x00"

_0d8136_data:
		.ascii  "\x00\x00"

_0d8138_data:
		.ascii  "\x00\x00"

_0d813a_data:
		.ascii  "\x00\x00"

_0d813c_data:
		.ascii  "\x00\x00"

_0d813e_data:
		.ascii  "\x00\x00"

_0d8140_data:
		.ascii  "\x00\x00"

_0d8142_data:
		.ascii  "\x00\x00"

_0d8144_data:
		.ascii  "\x00\x00"

_0d8146_data:
		.fill   0xa

_0d8150_data:
		.fill   0x4

_0d8154_data:
		.fill   0x4

_0d8158_data:
		.fill   0x4

_0d815c_data:
		.fill   0x4

_0d8160_data:
		.fill   0x4

_0d8164_data:
		.fill   0x4

_0d8168_data:
		.fill   0x4

_0d816c_data:
		.fill   0x4

_0d8170_data:
		.fill   0x4

_0d8174_data:
		.fill   0x4

_0d8178_data:
		.fill   0x4

_0d817c_data:
		.fill   0x4

_0d8180_data:
		.fill   0x4

_0d8184_data:
		.fill   0x4

_0d8188_data:
		.fill   0x4

_0d818c_data:
		.fill   0x4

_0d8190_data:
		.fill   0x4

_0d8194_data:
		.fill   0x4

_0d8198_data:
		.fill   0x4

_0d819c_data:
		.fill   0x4

_0d81a0_data:
		.fill   0x1c

_0d81bc_data:
		.fill   0x1c

_0d81d8_data:
		.fill   0x3c

_0d8214_data:
		.fill   0x3311

_0db525_data:
		.fill   0x63d

_0dbb62_data:
		.ascii  "\x00\x00"

_0dbb64_data:
		.ascii  "\x00\x00"

_0dbb66_data:
		.ascii  "\x00\x00"

_0dbb68_data:
		.ascii  "\x00\x00\x00"

_0dbb6b_data:
		.ascii  "\x00"

_0dbb6c_data:
		.fill   0x4

_0dbb70_data:
		.fill   0x6

_0dbb76_data:
		.ascii  "\x00\x00"

_0dbb78_data:
		.ascii  "\x00\x00"

_0dbb7a_data:
		.ascii  "\x00"

_0dbb7b_data:
		.ascii  "\x00"

_0dbb7c_data:
		.ascii  "\x00\x00"

_0dbb7e_data:
		.ascii  "\x00\x00"

_0dbb80_data:
		.fill   0x4

_0dbb84_data:
		.ascii  "\x00\x00"

_0dbb86_data:
		.ascii  "\x00\x00"

_0dbb88_data:
		.fill   0x7e

_0dbc06_data:
		.ascii  "\x00\x00"

_0dbc08_data:
		.ascii  "\x00\x00"

_0dbc0a_data:
		.ascii  "\x00"

_0dbc0b_data:
		.ascii  "\x00"

_0dbc0c_data:
		.fill   0x4

_0dbc10_data:
		.ascii  "\x00\x00"

_0dbc12_data:
		.ascii  "\x00\x00"

_0dbc14_data:
		.fill   0x4

_0dbc18_data:
		.ascii  "\x00"

_0dbc19_data:
		.ascii  "\x00"

_0dbc1a_data:
		.ascii  "\x00"

_0dbc1b_data:
		.ascii  "\x00"

_0dbc1c_data:
		.ascii  "\x00"

_0dbc1d_data:
		.ascii  "\x00"

_0dbc1e_data:
		.ascii  "\x00\x00"

_0dbc20_data:
		.ascii  "\x00\x00"

_0dbc22_data:
		.ascii  "\x00\x00"

_0dbc24_data:
		.ascii  "\x00\x00"

_0dbc26_data:
		.ascii  "\x00\x00"

_0dbc28_data:
		.ascii  "\x00\x00"

_0dbc2a_data:
		.ascii  "\x00\x00"

_0dbc2c_data:
		.ascii  "\x00\x00"

_0dbc2e_data:
		.ascii  "\x00\x00"

_0dbc30_data:
		.ascii  "\x00\x00"

_0dbc32_data:
		.ascii  "\x00\x00"

_0dbc34_data:
		.ascii  "\x00"

_0dbc35_data:
		.ascii  "\x00"

_0dbc36_data:
		.fill   0x52

_0dbc88_data:
		.fill   0xc

_0dbc94_data:
		.fill   0x4

_0dbc98_data:
		.ascii  "\x00"

_0dbc99_data:
		.ascii  "\x00\x00\x00"

_0dbc9c_data:
		.fill   0x4

_0dbca0_data:
		.fill   0x8

_0dbca8_data:
		.fill   0x4

_0dbcac_data:
		.fill   0x4

_0dbcb0_data:
		.fill   0x4

_0dbcb4_data:
		.fill   0xc

_0dbcc0_data:
		.fill   0x4

_0dbcc4_data:
		.fill   0x4

_0dbcc8_data:
		.fill   0x4

_0dbccc_data:
		.fill   0x4

_0dbcd0_data:
		.ascii  "\x00\x00"

_0dbcd2_data:
		.ascii  "\x00\x00"

_0dbcd4_data:
		.fill   0x8

_0dbcdc_data:
		.fill   0x4

_0dbce0_data:
		.fill   0x4

_0dbce4_data:
		.fill   0x4

_0dbce8_data:
		.fill   0x4

_0dbcec_data:
		.ascii  "\x00\x00"

_0dbcee_data:
		.ascii  "\x00\x00"

_0dbcf0_data:
		.ascii  "\x00\x00"

_0dbcf2_data:
		.fill   0x11a

_0dbe0c_data:
		.fill   0x1c

_0dbe28_data:
		.ascii  "\x00\x00"

_0dbe2a_data:
		.fill   0x26

_0dbe50_data:
		.ascii  "\x00\x00"

_0dbe52_data:
		.fill   0x2c

_0dbe7e_data:
		.ascii  "\x00\x00"

_0dbe80_data:
		.ascii  "\x00\x00"

_0dbe82_data:
		.fill   0x4

_0dbe86_data:
		.ascii  "\x00\x00"

_0dbe88_data:
		.ascii  "\x00\x00"

_0dbe8a_data:
		.ascii  "\x00\x00"

_0dbe8c_data:
		.ascii  "\x00\x00"

_0dbe8e_data:
		.ascii  "\x00\x00"

_0dbe90_data:
		.ascii  "\x00\x00"

_0dbe92_data:
		.ascii  "\x00\x00"

_0dbe94_data:
		.ascii  "\x00\x00"

_0dbe96_data:
		.ascii  "\x00\x00"

_0dbe98_data:
		.fill   0x4

_0dbe9c_data:
		.fill   0xda

_0dbf76_data:
		.ascii  "\x00\x00"

_0dbf78_data:
		.fill   0x4

_0dbf7c_data:
		.ascii  "\x00"

_0dbf7d_data:
		.ascii  "\x00\x00\x00"

_0dbf80_data:
		.fill   0x4

_0dbf84_data:
		.ascii  "\x00"

_0dbf85_data:
		.ascii  "\x00"

_0dbf86_data:
		.ascii  "\x00\x00"

_0dbf88_data:
		.ascii  "\x00\x00"

_0dbf8a_data:
		.ascii  "\x00\x00"

_0dbf8c_data:
		.ascii  "\x00\x00"

_0dbf8e_data:
		.ascii  "\x00\x00"

_0dbf90_data:
		.ascii  "\x00\x00"

_0dbf92_data:
		.ascii  "\x00\x00"

_0dbf94_data:
		.ascii  "\x00\x00"

_0dbf96_data:
		.ascii  "\x00\x00"

_0dbf98_data:
		.ascii  "\x00\x00"

_0dbf9a_data:
		.ascii  "\x00"

_0dbf9b_data:
		.ascii  "\x00"

_0dbf9c_data:
		.ascii  "\x00"

_0dbf9d_data:
		.ascii  "\x00"

_0dbf9e_data:
		.ascii  "\x00\x00"

_0dbfa0_data:
		.fill   0x4

_0dbfa4_data:
		.fill   0x4

_0dbfa8_data:
		.ascii  "\x00\x00"

_0dbfaa_data:
		.ascii  "\x00\x00"

_0dbfac_data:
		.ascii  "\x00\x00"

_0dbfae_data:
		.ascii  "\x00\x00"

_0dbfb0_data:
		.ascii  "\x00"

_0dbfb1_data:
		.ascii  "\x00\x00\x00"

_0dbfb4_data:
		.fill   0x4

_0dbfb8_data:
		.fill   0x4

_0dbfbc_data:
		.fill   0x1c0a

_0ddbc6_data:
		.ascii  "\x00\x00"

_0ddbc8_data:
		.ascii  "\x00\x00"

_0ddbca_data:
		.ascii  "\x00\x00"

_0ddbcc_data:
		.fill   0x9c

_0ddc68_data:
		.ascii  "\x00\x00"

_0ddc6a_data:
		.ascii  "\x00\x00"

_0ddc6c_data:
		.ascii  "\x00\x00"

_0ddc6e_data:
		.ascii  "\x00\x00"

_0ddc70_data:
		.fill   0x4

_0ddc74_data:
		.fill   0x4

_0ddc78_data:
		.fill   0x4

_0ddc7c_data:
		.fill   0x4

_0ddc80_data:
		.fill   0x4

_0ddc84_data:
		.fill   0x4

_0ddc88_data:
		.fill   0x4

_0ddc8c_data:
		.fill   0x4

_0ddc90_data:
		.ascii  "\x00\x00"

_0ddc92_data:
		.ascii  "\x00\x00"

_0ddc94_data:
		.fill   0x4

_0ddc98_data:
		.ascii  "\x00\x00"

_0ddc9a_data:
		.ascii  "\x00\x00"

_0ddc9c_data:
		.fill   0x4

_0ddca0_data:
		.ascii  "\x00\x00"

_0ddca2_data:
		.ascii  "\x00\x00"

_0ddca4_data:
		.fill   0x4

_0ddca8_data:
		.ascii  "\x00\x00"

_0ddcaa_data:
		.ascii  "\x00\x00"

_0ddcac_data:
		.fill   0x4

_0ddcb0_data:
		.fill   0x4

_0ddcb4_data:
		.fill   0x8

_0ddcbc_data:
		.fill   0x4

_0ddcc0_data:
		.fill   0x4

_0ddcc4_data:
		.fill   0x4

_0ddcc8_data:
		.fill   0x7f4

_0de4bc_data:
		.fill   0x4

_0de4c0_data:
		.fill   0x4

_0de4c4_data:
		.fill   0x4

_0de4c8_data:
		.fill   0x4

_0de4cc_data:
		.fill   0x4

_0de4d0_data:
		.fill   0x4

_0de4d4_data:
		.fill   0x4

_0de4d8_data:
		.fill   0x7f4

_0deccc_data:
		.fill   0x4

_0decd0_data:
		.fill   0x64

_0ded34_data:
		.fill   0x8

_0ded3c_data:
		.fill   0x4

_0ded40_data:
		.ascii  "\x00\x00"

_0ded42_data:
		.ascii  "\x00\x00"

_0ded44_data:
		.fill   0x4

_0ded48_data:
		.fill   0x80

_0dedc8_data:
		.fill   0x4

_0dedcc_data:
		.fill   0x4

_0dedd0_data:
		.fill   0x4

_0dedd4_data:
		.fill   0x5

_0dedd9_data:
		.ascii  "\x00\x00\x00"

_0deddc_data:
		.fill   0x4

_0dede0_data:
		.fill   0x4

_0dede4_data:
		.fill   0x4

_0dede8_data:
		.fill   0x4

_0dedec_data:
		.fill   0x24

_0dee10_data:
		.ascii  "\x00\x00"

_0dee12_data:
		.ascii  "\x00\x00"

_0dee14_data:
		.fill   0x200c
