.code32
.text
.globl main
main:
		jmp	_07bd78_func

.data

_010003_data:
		.ascii  "\x90\x90\x90\x90\x90\x90\x90\x90"
		.ascii  "\x90\x90\x90\x90\x90"

.text



_010010_func:
		pusha  
		mov    $_0107bb_func,%edi
		add    $0x00005a,%edi
		mov    $0xfffffec0,%eax

	_01001e_jump:
		mov    %eax,(%edi)
		add    $0x000060,%edi
		add    $0x000004,%eax
		jne    _01001e_jump
		mov    $_090014_data,%edi
		mov    $0x0000c8,%cl

	_01002f_jump:
		movl   $0x00ffff,(%edi)
		movl   $0x000000,0x000004(%edi)
		add    $0x000020,%edi
		dec    %cl
		jne    _01002f_jump
		popa   
		ret    



_010045_func:
		pusha  
		mov    %eax,_09193e_data
		mov    %esi,%eax
		add    $0x000004,%eax
		mov    %eax,_091914_data
		mov    (%esi),%eax
		mov    %eax,_091922_data
		xor    %eax,%eax
		mov    0x00002a(%esi),%al
		sub    0x000024(%esi),%al
		mov    %eax,_09192e_data
		neg    %eax
		mov    %eax,_091932_data
		xor    %eax,%eax
		mov    0x000027(%esi),%al
		sub    0x000025(%esi),%al
		mov    %eax,_091936_data
		neg    %eax
		mov    %eax,_09193a_data
		mov    %esi,%ebx
		mov    $0x000003,%cl
		add    $0x000004,%ebx
		add    $0x000010,%esi
		mov    0x000004(%ebx),%eax
		mov    %eax,%edx

	_010093_jump:
		mov    (%esi),%edi
		cmp    %eax,%edi
		jge    _01009b_jump
		mov    %edi,%eax

	_01009b_jump:
		cmp    %edx,%edi
		jle    _0100a1_jump
		mov    %edi,%edx

	_0100a1_jump:
		add    $0x000008,%esi
		dec    %cl
		jne    _010093_jump
		cmp    $0x0000c8,%eax
		jge    _01263e_jump
		or     %edx,%edx
		js     _01263e_jump
		or     %eax,%eax
		jns    _0100c1_jump
		xor    %eax,%eax

	_0100c1_jump:
		mov    %eax,_090010_data
		cmp    $0x0000c8,%edx
		jb     _0100d3_jump
		mov    $0x0000c7,%edx

	_0100d3_jump:
		sub    %eax,%edx
		inc    %edx
		mov    %edx,_09194a_data
		mov    (%ebx),%esi
		mov    0x000004(%ebx),%ecx
		mov    0x000018(%ebx),%ebp
		mov    0x00001c(%ebx),%edi
		or     %ecx,%ecx
		jns    _0100f3_jump
		or     %edi,%edi
		js     _01022e_jump

	_0100f3_jump:
		cmp    $0x0000c8,%ecx
		jl     _010107_jump
		cmp    $0x0000c8,%edi
		jge    _01022e_jump

	_010107_jump:
		mov    0x000026(%ebx),%ah
		sub    %ebp,%esi
		mov    0x000027(%ebx),%al
		mov    _091932_data,%edx
		sub    %edi,%ecx
		jns    _010129_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000020(%ebx),%ah
		neg    %esi
		mov    0x000021(%ebx),%al
		neg    %edx

	_010129_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_0101f9_func
		mov    %al,_010216_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_010223_jump
		mov    %ax,_010198_data
		or     %edx,%edx
		jns    _010162_jump
		sub    $0x000002,%edx

	_010162_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_01021a_jump
		mov    %ax,_0101b0_func
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _0101c6_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
		data16 		.byte 0x0000b8

.data

_010198_data:
		.ascii  "\xff\xff\xf7\xe7\x66\x89\xc2\xc1"
		.ascii  "\xe2\x10\xc1\xe8\x10\x00\xc7\x52"
		.ascii  "\x66\x89\xf0\xc1\xe0\x10\x66\xb8"

_0101b0_data:
		.ascii  "\xff\xff\xf7\xe7\x5a\x66\x89\xc2"
		.ascii  "\xc1\xe8\x10\x66\x01\xc5\x29\xf9"
		.ascii  "\x58\xbf\xac\x26\x00\x00"

_0101c6_data:
		.ascii  "\x57\x01\xcf\x81\xff\x74\x27\x00"
		.ascii  "\x00\x72\x08\x81\xef\x74\x27\x00"
		.ascii  "\x00\x29\xf9\x5f\xc1\xe7\x05"

_0101dd_data:
		.ascii  "\x66\x39\xaf"
		.long   _042a94_jump
		.ascii  "\x76\x14\x66\x89\xaf"
		.long   _042a94_jump
		.ascii  "\x88\xbf"
		.long   _042a9c_jump
		.ascii  "\xc6\x87"
		.long   _042aa4_jump

.text



_0101f9_func:
		add    %ah,0x000039(%esi)
		scas   %es:(%edi),%eax
		cwtl   
		sub    (%eax,%eax,1),%al
		jae    _010217_jump
		mov    %bp,_042a98_jump(%edi)
		mov    %bh,_042aa0_jump(%edi)
		movb   $0x000000,_042aa8_jump(%edi)

	_010217_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _0101dd_jump

	_01022e_jump:
		mov    _091914_data,%ebx
		mov    0x000018(%ebx),%esi
		mov    0x00001c(%ebx),%ecx
		mov    0x000010(%ebx),%ebp
		mov    0x000014(%ebx),%edi
		or     %ecx,%ecx
		jns    _01024c_jump
		or     %edi,%edi
		js     _010387_jump

	_01024c_jump:
		cmp    $0x0000c8,%ecx
		jl     _010260_jump
		cmp    $0x0000c8,%edi
		jge    _010387_jump

	_010260_jump:
		mov    0x000024(%ebx),%al
		sub    %ebp,%esi
		mov    0x000025(%ebx),%ah
		mov    _09193a_data,%edx
		sub    %edi,%ecx
		jns    _010282_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000026(%ebx),%al
		neg    %esi
		mov    0x000027(%ebx),%ah
		neg    %edx

	_010282_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_01034c_jump
		mov    %al,_010369_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_01037c_jump
		mov    %ax,_0102f1_jump
		or     %edx,%edx
		jns    _0102bb_jump
		sub    $0x000002,%edx

	_0102bb_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_010373_jump
		mov    %ax,_010309_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _01031f_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_0102f1_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_010309_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_01031f_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _010332_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_010332_jump:
		pop    %edi
		shl    $0x000005,%edi

	_010336_jump:
		cmp    %bp,_042a94_jump(%edi)
		jbe    _010353_jump
		mov    %bp,_042a94_jump(%edi)
		movb   $0x0000ff,_042a9c_jump(%edi)
		mov    %bh,_042aa4_jump(%edi)

	_010353_jump:
		cmp    %bp,_042a98_jump(%edi)
		jae    _010370_jump
		mov    %bp,_042a98_jump(%edi)
		movb   $0x0000ff,_042aa0_jump(%edi)
		mov    %bh,_042aa8_jump(%edi)

	_010370_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _010336_jump

	_010387_jump:
		mov    _091914_data,%ebx
		mov    0x000010(%ebx),%esi
		mov    0x000014(%ebx),%ecx
		mov    0x000008(%ebx),%ebp
		mov    0x00000c(%ebx),%edi
		or     %ecx,%ecx
		jns    _0103a5_jump
		or     %edi,%edi
		js     _0104e0_jump

	_0103a5_jump:
		cmp    $0x0000c8,%ecx
		jl     _0103b9_jump
		cmp    $0x0000c8,%edi
		jge    _0104e0_jump

	_0103b9_jump:
		mov    0x000023(%ebx),%al
		sub    %ebp,%esi
		mov    0x000022(%ebx),%ah
		mov    _09192e_data,%edx
		sub    %edi,%ecx
		jns    _0103db_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000025(%ebx),%al
		neg    %esi
		mov    0x000024(%ebx),%ah
		neg    %edx

	_0103db_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_0104ab_jump
		mov    %al,_0104c8_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_0104d5_jump
		mov    %ax,_01044a_jump
		or     %edx,%edx
		jns    _010414_jump
		sub    $0x000002,%edx

	_010414_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_0104cc_jump
		mov    %ax,_010462_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _010478_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_01044a_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_010462_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_010478_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _01048b_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_01048b_jump:
		pop    %edi
		shl    $0x000005,%edi

	_01048f_jump:
		cmp    %bp,_042a94_jump(%edi)
		jbe    _0104ac_jump
		mov    %bp,_042a94_jump(%edi)
		mov    %bh,_042a9c_jump(%edi)
		movb   $0x0000ff,_042aa4_jump(%edi)

	_0104ac_jump:
		cmp    %bp,_042a98_jump(%edi)
		jae    _0104c9_jump
		mov    %bp,_042a98_jump(%edi)
		mov    %bh,_042aa0_jump(%edi)
		movb   $0x0000ff,_042aa8_jump(%edi)

	_0104c9_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _01048f_jump

	_0104e0_jump:
		mov    _091914_data,%ebx
		mov    (%ebx),%ebp
		mov    0x000004(%ebx),%edi
		mov    0x000008(%ebx),%esi
		mov    0x00000c(%ebx),%ecx
		or     %ecx,%ecx
		jns    _0104fd_jump
		or     %edi,%edi
		js     _010638_jump

	_0104fd_jump:
		cmp    $0x0000c8,%ecx
		jl     _010511_jump
		cmp    $0x0000c8,%edi
		jge    _010638_jump

	_010511_jump:
		mov    0x000020(%ebx),%al
		sub    %ebp,%esi
		mov    0x000021(%ebx),%ah
		mov    _091936_data,%edx
		sub    %edi,%ecx
		jns    _010533_jump
		add    %ecx,%edi
		add    %esi,%ebp
		neg    %ecx
		mov    0x000022(%ebx),%al
		neg    %esi
		mov    0x000023(%ebx),%ah
		neg    %edx

	_010533_jump:
		add    $0x0026ac,%edi
		add    $0x007d00,%ebp
		mov    %al,_0105fd_jump
		mov    %al,_01061a_jump
		xor    %al,%al
		mov    %eax,%ebx
		inc    %ecx
		shl    $0x000010,%ecx
		xor    %eax,%eax
		idiv   %ecx
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ax,_01062d_jump
		mov    %ax,_0105a2_jump
		or     %edx,%edx
		jns    _01056c_jump
		sub    $0x000002,%edx

	_01056c_jump:
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,_010624_jump
		mov    %ax,_0105ba_jump
		sar    $0x000010,%eax
		mov    %ax,%si
		xor    %edx,%edx
		shld   $0x000010,%esi,%eax
		shr    $0x000010,%ecx
		cmp    $0x0026ac,%edi
		jae    _0105d0_jump
		push   %eax
		sub    $0x0026ac,%edi
		neg    %edi
		shl    $0x000010,%eax
	_0105a2_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		mov    %ax,%dx
		shl    $0x000010,%edx
		shr    $0x000010,%eax
		add    %al,%bh
		push   %edx
		mov    %si,%ax
		shl    $0x000010,%eax
	_0105ba_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x00ffff,%ax
		mul    %edi
		pop    %edx
		mov    %ax,%dx
		shr    $0x000010,%eax
		add    %ax,%bp
		sub    %edi,%ecx
		mov    $0x0026ac,%edi
		pop    %eax

	_0105d0_jump:
		push   %edi
		add    %ecx,%edi
		cmp    $0x002774,%edi
		jb     _0105e3_jump
		sub    $0x002774,%edi
		sub    %edi,%ecx

	_0105e3_jump:
		pop    %edi
		shl    $0x000005,%edi

	_0105e7_jump:
		cmp    %bp,_042a94_jump(%edi)
		jbe    _010604_jump
		mov    %bp,_042a94_jump(%edi)
		movb   $0x000000,_042a9c_jump(%edi)
		mov    %bh,_042aa4_jump(%edi)

	_010604_jump:
		cmp    %bp,_042a98_jump(%edi)
		jae    _010621_jump
		mov    %bp,_042a98_jump(%edi)
		movb   $0x000000,_042aa0_jump(%edi)
		mov    %bh,_042aa8_jump(%edi)

	_010621_jump:
		add    $0x00ffff,%dx
		adc    %si,%bp
		add    $0xffff0000,%edx
		adc    %al,%bh
		add    $0x000020,%edi
		dec    %cx
		jne    _0105e7_jump

	_010638_jump:
		mov    _090010_data,%ebp
		mov    %ebp,%esi
		shl    $0x000002,%esi
		add    %ebp,%esi
		shl    $0x000006,%esi
		shl    $0x000005,%ebp
		add    _09193e_data,%esi
		mov    %esi,_091942_data
		mov    %ebp,_091946_data

	_01065d_jump:
		mov    _091946_data,%ebp
		mov    _090014_data(%ebp),%edi
		movw   $0x00ffff,_090014_data(%ebp)
		mov    _090018_data(%ebp),%ecx
		movw   $0x000000,_090018_data(%ebp)
		cmp    $0x007e40,%edi
		jae    _012621_jump
		cmp    $0x007d00,%ecx
		jb     _012621_jump
		sub    %edi,%ecx
		inc    %ecx
		mov    _090028_data(%ebp),%edx
		mov    _090024_data(%ebp),%esi
		shl    $0x000010,%ecx
		sub    %esi,%edx
		xor    %eax,%eax
		inc    %edx
		shl    $0x000008,%esi
		idiv   %ecx
		mov    %eax,%ebx
		mov    _090020_data(%ebp),%edx
		mov    _09001c_data(%ebp),%eax
		sub    %eax,%edx
		add    %eax,%esi
		inc    %edx
		xor    %eax,%eax
		idiv   %ecx
		mov    %ax,%dx
		shl    $0x000010,%edx
		mov    %bx,%ax
		rol    $0x000010,%eax
		shr    $0x000010,%ebx
		mov    %bl,%dl
		mov    %si,%bx
		xor    %esi,%esi
		shr    $0x000010,%ecx
		sub    $0x007d00,%edi
		jns    _01070b_jump
		mov    %eax,%ebp
		mov    %edx,%esi
		neg    %edi
		sub    %edi,%ecx
		mul    %edi
		add    %eax,%ebx
		adc    %dl,%bh
		mov    %esi,%eax
		mul    %edi
		add    %dl,%bl
		add    %al,%bh
		mov    %esi,%edx
		mov    %eax,%esi
		mov    %ebp,%eax
		xor    %edi,%edi

	_01070b_jump:
		mov    %edi,%ebp
		add    %ecx,%edi
		cmp    $0x000140,%edi
		jb     _01071f_jump
		sub    $0x000140,%edi
		sub    %edi,%ecx

	_01071f_jump:
		mov    %ebp,%edi
		add    _091942_data,%edi
		mov    %edi,%ebp
		and    $0x000003,%ebp
		sub    %bp,%cx
		jns    _010738_jump
		add    %bp,%cx
		mov    %ecx,%ebp
		xor    %ecx,%ecx

	_010738_jump:
		add    %ebp,%edi
		push   %ecx
		mov    %bp,%cx
		shl    $0x000005,%cx
		shl    $0x000003,%bp
		sub    %bp,%cx
		sub    $_01079b_func,%ecx
		neg    %ecx
		jmp    *%ecx



_01079b_func:
		pop    %ecx
		push   %ecx
		shr    $0x000002,%ecx
		lea    (%edi,%ecx,4),%edi
		mov    %cx,%bp
		shl    $0x000005,%bp
		shl    $0x000007,%cx
		sub    %bp,%cx
		sub    $_0125bb_jump,%ecx
		neg    %ecx
		jmp    *%ecx



_0107bb_func:
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		shl    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%cl
		add    %edx,%esi
		adc    %eax,%ebx
		adc    %dl,%bh
		xor    %ebp,%ebp
		mov    %bx,%bp
		add    _091922_data,%ebp
		nop
		mov    0x000000(%ebp),%ch
		rol    $0x000010,%ecx
		add    %edx,%esi
		adc    %eax,%ebx
		mov    %ecx,0x007fff(%edi)
		adc    %dl,%bh

	_0125bb_jump:
		pop    %ecx
		and    $0x000003,%ecx
		add    %ecx,%edi
		mov    %cx,%bp
		shl    $0x000005,%cx
		shl    $0x000003,%bp
		sub    %bp,%cx
		sub    $_012621_jump,%ecx
		neg    %ecx
		jmp    *%ecx

	_012621_jump:
		addl   $0x000140,_091942_data
		addl   $0x000020,_091946_data
		decl   _09194a_data
		jne    _01065d_jump

	_01263e_jump:
		popa   
		ret    



_01268a_func:
		pushaw 
		cld    
		sub    $0x000050,%ebx
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000001,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126a9_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126a9_jump
		pop    %esi
		add    %edx,%esi
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000002,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126d3_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126d3_jump
		pop    %esi
		add    %edx,%esi
		push   %esi
		mov    $0x0ab000,%edi
		mov    $0x000004,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_0126fd_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _0126fd_jump
		pop    %esi
		add    %edx,%esi
		mov    $0x0ab000,%edi
		mov    $0x000008,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0000c8,%ecx

	_012726_jump:
		push   %ecx
		mov    $0x000050,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _012726_jump
		popaw  
		ret    



_012748_func:
		pusha  
		mov    $0x000000,%ah
		int    $0x00001a
		shl    $0x000010,%ecx
		and    $0x00ffff,%edx
		add    %ecx,%edx
		mov    %edx,(%esi)
		popa   
		ret    



_012783_func:
		mov    $0x0003c4,%edx
		mov    $0x000f02,%eax
		out    %ax,(%dx)
		mov    $0x000fa0,%ecx
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		ret    

_012799_switch:
		.long   0

_01279d_switch:
		.long   0


	_0127a1_jump:
		add    %dl,-0x000077(%ebp)
		or     $_01279d_switch,%eax
		mov    %eax,%ebp
		mov    %edx,%ecx
		and    $0x0000ff,%ecx
		mov    %ecx,_012799_switch
		and    $0x00ff00,%edx
		mov    %dh,_0127a1_jump
		mov    $0x000001,%ah
		mov    %edi,%ecx
		and    $0x000003,%ecx
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000001,%ch
		sub    _01279d_switch,%esi
		mov    $0x000002,%al
		out    %ax,(%dx)

	_0127de_jump:
		push   %ecx
		push   %edi
		add    _01279d_switch,%esi
		push   %esi
		push   %ebp

	_0127e8_jump:
		push   %edi
		push   %esi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %esi
		pop    %edi
		add    $0x000050,%edi
		add    _012799_switch,%esi
		dec    %ebp
		jne    _0127e8_jump
		pop    %ebp
		pop    %esi
		pop    %edi
		call   _012b30_func
		mov    _0127a1_jump,%ch
		shl    %ch
		cmp    $0x000010,%ch
		jne    _01282c_jump
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		sub    _01279d_switch,%esi
		inc    %esi
		mov    $0x000001,%ch

	_01282c_jump:
		mov    %ch,_0127a1_jump
		pop    %ecx
		shl    %ch
		cmp    $0x000010,%ch
		jne    _0127de_jump
		pop    %ebp
		ret    



_01283c_func:
		push   %dx
		mov    $0x0003c4,%dx
		and    $0x00ffff,%eax
		mov    %al,%ah
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %dx
		ret    



_012850_func:
		push   %ebp
		push   %ebp
		movl   $0x000000,(%esp)
		push   %ecx
		push   %ebx
		mov    %ecx,%ebx
		add    $0x004600,%ebx
		sub    $0x000080,%edx
		mov    $0x000000,%cl
		jmp    _01288b_jump

	_01286d_jump:
		addl   $0x000500,(%esp)
		cmp    %ebx,(%esp)
		jb     _012880_jump
		subl   $0x004600,(%esp)

	_012880_jump:
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _0129ce_jump

	_01288b_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000001,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		jmp    _0128a9_jump

	_0128a7_jump:
		inc    %cl

	_0128a9_jump:
		cmp    $0x000014,%cl
		jge    _0129be_jump
		mov    0x000004(%eax),%di
		and    $0x0000ff,%di
		cmp    $0x000000,%di
		jne    _0129b0_jump
		cmp    $0x000000,%bx
		jne    _012933_jump
		push   %edi
		push   %ecx
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    0x000014(%esp),%ecx
		push   %edx
		mov    0x00001c(%esp),%edx
		push   %eax
		push   %ebx
		push   %edx
		mov    %edi,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		mov    %al,%bl
		mov    %ecx,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		cmp    %bl,%al
		je     _0128ff_jump
		stc    
		jmp    _012900_jump

	_0128ff_jump:
		clc    

	_012900_jump:
		pop    %edx
		pop    %ebx
		pop    %eax
		pop    %edx
		pop    %ecx
		pop    %edi
		jae    _012919_jump
		cmpl   $0x000050,0x000014(%esp)
		je     _01292a_jump
		movl   $0x000050,0x000014(%esp)
		jmp    _012980_jump

	_012919_jump:
		cmpl   $0x000000,0x000014(%esp)
		je     _01292a_jump
		movl   $0x000000,0x000014(%esp)
		jmp    _012980_jump

	_01292a_jump:
		incl   0x00000c(%edx,%ebp,1)
		jmp    _0129b0_jump

	_012933_jump:
		movl   $0x000000,0x000014(%esp)
		push   %edi
		push   %ecx
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    0x000014(%esp),%ecx
		push   %edx
		mov    0x00001c(%esp),%edx
		push   %eax
		push   %ebx
		push   %edx
		mov    %edi,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		mov    %al,%bl
		mov    %ecx,%eax
		sub    %edx,%eax
		push   %edx
		mov    $0x000050,%dl
		div    %dl
		pop    %edx
		cmp    %bl,%al
		je     _01296f_jump
		stc    
		jmp    _012970_jump

	_01296f_jump:
		clc    

	_012970_jump:
		pop    %edx
		pop    %ebx
		pop    %eax
		pop    %edx
		pop    %ecx
		pop    %edi
		jae    _012980_jump
		movl   $0x000050,0x000014(%esp)

	_012980_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		sub    0x00001c(%esp),%edi
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		incl   0x00000c(%edx,%ebp,1)
		jmp    _0129b0_jump

	_0129b0_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _0128a7_jump

	_0129be_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		pop    %ebx
		pop    %ecx
		jmp    _01286d_jump

	_0129ce_jump:
		pop    %ebx
		pop    %ecx
		pop    %ebp
		pop    %ebp
		ret    



_0129d3_func:
		push   %ebp
		push   %ebx
		mov    %ecx,%ebx
		sub    $0x000080,%edx
		mov    $0x000000,%cl
		jmp    _0129ef_jump

	_0129e1_jump:
		add    %ebx,(%esp)
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _012a70_jump

	_0129ef_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000000,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		jmp    _012a0d_jump

	_012a0b_jump:
		inc    %cl

	_012a0d_jump:
		cmp    $0x000014,%cl
		jge    _012a60_jump
		mov    0x000004(%eax),%di
		and    $0x0000ff,%di
		cmp    $0x000000,%di
		je     _012a55_jump
		cmp    $0x000000,%bx
		je     _012a2d_jump

	_012a27_jump:
		incl   0x00000c(%edx,%ebp,1)
		jmp    _012a55_jump

	_012a2d_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		shl    $0x000002,%ecx
		add    %ecx,%edi
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		jmp    _012a27_jump

	_012a55_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _012a0b_jump

	_012a60_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		pop    %ebx
		pop    %ecx
		jmp    _0129e1_jump

	_012a70_jump:
		pop    %ebx
		pop    %ebp
		ret    



_012a73_func:
		push   %ebp
		push   %ebx
		mov    %ecx,%ebx
		sub    $0x000080,%edx
		add    $0x000078,%eax
		add    %edi,%eax
		mov    $0x00000e,%cl
		jmp    _012a8e_jump

	_012a86_jump:
		dec    %cl
		je     _012b2d_jump

	_012a8e_jump:
		push   %ecx
		push   %ebx
		add    $0x000080,%edx
		mov    $0x000000,%bx
		mov    $0xfffffff4,%ebp
		movl   $0x000000,(%edx)
		xor    %ecx,%ecx
		push   %edi
		add    $0x000006,%eax
		add    $0x000004,%esi
		addl   $0x000004,0x00000c(%esp)
		jmp    _012ab7_jump

	_012ab5_jump:
		inc    %cl

	_012ab7_jump:
		cmp    $0x000013,%cl
		jge    _012b15_jump
		mov    0x000004(%eax),%di
		and    $0x0000ff,%di
		je     _012ad0_jump
		or     %bx,%bx
		je     _012ae0_jump
		incl   0x00000c(%edx,%ebp,1)

	_012ad0_jump:
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		addl   $0x000004,0x00000c(%esp)
		jmp    _012ab5_jump

	_012ae0_jump:
		push   %edi
		push   %ecx
		incl   (%edx)
		add    $0x00000c,%ebp
		mov    0x000014(%esp),%edi
		addl   $0x000004,0x000014(%esp)
		mov    %edi,0x000004(%edx,%ebp,1)
		mov    %esi,0x000008(%edx,%ebp,1)
		movl   $0x000000,0x00000c(%edx,%ebp,1)
		pop    %ecx
		pop    %edi
		incl   0x00000c(%edx,%ebp,1)
		mov    %di,%bx
		add    $0x000006,%eax
		add    $0x000004,%esi
		jmp    _012ab5_jump

	_012b15_jump:
		pop    %edi
		add    %edi,%eax
		add    $0x0004b0,%esi
		addl   $0x0004b0,0x000008(%esp)
		pop    %ebx
		pop    %ecx
		jmp    _012a86_jump

	_012b2d_jump:
		pop    %ebx
		pop    %ebp
		ret    



_012b30_func:
		shl    %ah
		cmp    $0x000010,%ah
		jne    _012b3a_jump
		inc    %edi
		mov    $0x000001,%ah

	_012b3a_jump:
		out    %ax,(%dx)
		ret    



_012b3d_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012b6d_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		mov    %esi,%edx
		mov    %dl,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012b9e_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000007,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012bce_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000008,(%edi)
		movb   $0x000007,0x000050(%edi)
		call   _012b30_func
		movb   $0x000007,(%edi)
		movb   $0x000006,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012c0e_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x000050(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000006,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012c5b_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000003,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012c8b_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000005,(%edi)
		movb   $0x000007,0x000050(%edi)
		movb   $0x000007,0x0000a0(%edi)
		movb   $0x000005,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000005,(%edi)
		movb   $0x000007,0x000050(%edi)
		movb   $0x000007,0x0000a0(%edi)
		movb   $0x000005,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000005,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012d07_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000005,0x000050(%edi)
		call   _012b30_func
		movb   $0x000004,(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012d40_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000006,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012dbc_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000003,0x000050(%edi)
		movb   $0x000006,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000002,(%edi)
		movb   $0x000005,0x000050(%edi)
		movb   $0x000003,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000004,(%edi)
		movb   $0x000002,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012e13_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000006,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000007,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000007,0x000140(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000008,0x000140(%edi)
		movb   $0x000006,0x000190(%edi)
		call   _012b30_func
		movb   $0x000006,(%edi)
		movb   $0x000008,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000008,0x000140(%edi)
		movb   $0x000006,0x000190(%edi)
		call   _012b30_func
		movb   $0x000007,0x000050(%edi)
		movb   $0x000008,0x0000a0(%edi)
		movb   $0x000008,0x0000f0(%edi)
		movb   $0x000007,0x000140(%edi)
		call   _012b30_func
		movb   $0x000006,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012eed_func:
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		movb   $0x000004,0x0000a0(%edi)
		movb   $0x000006,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000003,0x000050(%edi)
		movb   $0x000005,0x0000a0(%edi)
		movb   $0x000004,0x0000f0(%edi)
		call   _012b30_func
		movb   $0x000002,(%edi)
		movb   $0x000004,0x000050(%edi)
		movb   $0x000003,0x0000a0(%edi)
		call   _012b30_func
		movb   $0x000003,(%edi)
		movb   $0x000002,0x000050(%edi)
		pop    %edx
		pop    %ecx
		pop    %edi
		ret    



_012fde_func:
		femms  
		or     $0x000008,%al

	_012fe2_jump:
		sgdtl  (%ebx)
		pop    %es



_012fe6_func:
		pusha  
		cmp    $0x000000,%ebx
		jle    _0130ac_jump
		cmp    $0x000000,%ecx
		jle    _0130ac_jump
		shl    $0x000004,%edx
		add    %edx,%edi
		shl    $0x000002,%edx
		add    %edx,%edi
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %edx
		add    %esi,%ecx
		mov    %esi,%eax
		shr    $0x000002,%esi
		and    $0x000003,%eax
		je     _013047_jump
		push   %edi
		push   %ebx
		mov    _012fde_func(%eax),%al
		mov    %ecx,%ebx
		shr    $0x000002,%ebx
		cmp    %esi,%ebx
		jne    _013036_jump
		mov    %ecx,%ebx
		and    $0x000003,%ebx
		mov    _012fe2_jump(%ebx),%ah
		and    %ah,%al

	_013036_jump:
		pop    %ebx
		out    %al,(%dx)
		add    %esi,%edi
		mov    %ebx,%eax

	_01303c_jump:
		movb   $0x000000,(%edi)
		add    $0x000050,%edi
		dec    %eax
		jne    _01303c_jump
		pop    %edi
		inc    %esi

	_013047_jump:
		mov    %ecx,%eax
		shr    $0x000002,%eax
		sub    %esi,%eax
		jl     _0130ac_jump
		je     _01308e_jump
		push   %edi
		push   %ecx
		push   %ebx
		add    %esi,%edi
		mov    %eax,%ecx
		mov    $0x000050,%esi
		mov    $0x00000f,%al
		sub    %ecx,%esi
		out    %al,(%dx)
		xor    %eax,%eax
		push   %edx
		mov    %ecx,%edx
		shr    $0x000002,%ecx
		and    $0x000003,%edx
		jne    _01307d_jump
		mov    %ecx,%edx

	_013072_jump:
		rep stos %eax,%es:(%edi)
		mov    %edx,%ecx
		add    %esi,%edi
		dec    %ebx
		jne    _013072_jump
		jmp    _01308a_jump

	_01307d_jump:
		push   %ecx
		rep stos %eax,%es:(%edi)
		mov    %edx,%ecx
		rep stos %al,%es:(%edi)
		pop    %ecx
		add    %esi,%edi
		dec    %ebx
		jne    _01307d_jump

	_01308a_jump:
		pop    %edx
		pop    %ebx
		pop    %ecx
		pop    %edi

	_01308e_jump:
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		and    $0x000003,%eax
		je     _0130ac_jump
		mov    _012fe2_jump(%eax),%al
		add    %ecx,%edi
		out    %al,(%dx)
		mov    %ebx,%eax

	_0130a3_jump:
		movb   $0x000000,(%edi)
		add    $0x000050,%edi
		dec    %eax
		jne    _0130a3_jump

	_0130ac_jump:
		popa   
		ret    



_0130ae_func:
		push   %ebp
		push   %edi
		push   %ecx
		push   %edx
		mov    %eax,%edi
		and    $0x000003,%eax
		mov    $0x000001,%ah
		mov    %al,%cl
		shl    %cl,%ah
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		sar    $0x000002,%edi
		mov    %ebx,%ecx
		shl    $0x000004,%ecx
		shl    $0x000006,%ebx
		add    %ebx,%ecx
		add    %ecx,%edi
		add    0x000008(%esp),%edi
		pop    %ebp
		pop    %ecx
		push   %edi
		mov    %ecx,%ebx
		inc    %ebx

	_0130de_jump:
		movb   $0x0000ff,(%edi)
		add    $0x000050,%edi
		dec    %ebx
		jne    _0130de_jump
		pop    %edi
		call   _012b30_func
		mov    %ecx,%ebx
		dec    %ebp
		push   %ecx
		mov    %ecx,%ebx
		shl    $0x000006,%ecx
		shl    $0x000004,%ebx
		add    %ecx,%ebx

	_0130fb_jump:
		movb   $0x0000ff,(%edi)
		movb   $0x0000ff,(%edi,%ebx,1)
		call   _012b30_func
		dec    %ebp
		jne    _0130fb_jump
		pop    %ecx
		inc    %ecx

	_01310c_jump:
		movb   $0x0000ff,(%edi)
		add    $0x000050,%edi
		dec    %ecx
		jne    _01310c_jump
		pop    %edi
		pop    %ebp
		ret    



_0131a9_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		jmp    _0131d7_jump

	_0131c6_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _01372f_jump

	_0131d7_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_0131df_jump:
		cmp    $0x000000,%ecx
		je     _013728_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _0131f9_jump
		sub    0x000018(%esp),%esi

	_0131f9_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _0134dd_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _013405_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _013684_jump

	_013405_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _013684_jump

	_0134dd_jump:
		test   $0x000002,%edi
		je     _013684_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_013684_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _013718_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_013718_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _0131df_jump

	_013728_jump:
		pop    %ebp
		pop    %ecx
		jmp    _0131c6_jump

	_01372f_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_013736_func:
		push   %ebp
		mov    %esi,%ebp
		push   %edx
		push   %eax
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		and    $0x0000fc,%al
		or     $0x000001,%al
		out    %al,(%dx)
		pop    %eax
		pop    %edx
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		mov    $0x00000f,%ah
		out    %ax,(%dx)
		mov    %ecx,%edi
		mov    $0x0ab000,%esi
		add    $0x000502,%edi
		add    $0x000502,%esi
		mov    $0x0000b8,%ecx

	_01376e_jump:
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		add    $0x00004c,%edi
		add    $0x00004c,%esi
		dec    %ecx
		jne    _01376e_jump
		cli    
		xor    %ecx,%ecx
		jmp    _013791_jump

	_013780_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000c,%cl
		jge    _013850_jump

	_013791_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_013799_jump:
		cmp    $0x000000,%ecx
		je     _013849_jump
		push   %ecx
		mov    0x000000(%ebp),%esi
		mov    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		or     %ecx,%ecx
		je     _01383f_jump
		shl    $0x000002,%ecx
		add    $0x000001,%ecx
		mov    %ecx,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		mov    %eax,%edx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsb %ds:(%esi),%es:(%edi)

	_01383f_jump:
		pop    %ecx
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _013799_jump

	_013849_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013780_jump

	_013850_jump:
		push   %edx
		push   %eax
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		and    $0x0000fc,%al
		out    %al,(%dx)
		pop    %eax
		pop    %edx
		pop    %ebp
		sti    
		ret    



_013864_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		mov    $0x000000,%cl
		jmp    _013894_jump

	_013883_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000e,%cl
		jge    _013dec_jump

	_013894_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_01389c_jump:
		cmp    $0x000000,%ecx
		je     _013de5_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _0138b6_jump
		sub    0x000018(%esp),%esi

	_0138b6_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _013b9a_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _013ac2_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _013d41_jump

	_013ac2_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _013d41_jump

	_013b9a_jump:
		test   $0x000002,%edi
		je     _013d41_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_013d41_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _013dd5_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_013dd5_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _01389c_jump

	_013de5_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013883_jump

	_013dec_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_013df3_func:
		push   %ebp
		pushl  0x000008(%ecx)
		pushl  0x000004(%ecx)
		pushl  (%ecx)
		mov    %esi,%ebp
		mov    %al,%ah
		push   %edx
		push   %eax
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %ax,(%dx)
		pop    %eax
		pop    %edx
		xor    %ecx,%ecx
		mov    $0x000000,%cl
		jmp    _013e23_jump

	_013e12_jump:
		add    $0x000080,%ebp
		inc    %cl
		cmp    $0x00000c,%cl
		jge    _01437b_jump

	_013e23_jump:
		push   %ecx
		push   %ebp
		mov    0x000000(%ebp),%ecx
		add    $0x000004,%ebp

	_013e2b_jump:
		cmp    $0x000000,%ecx
		je     _014374_jump
		push   %edi
		push   %ecx
		mov    0x000000(%ebp),%esi
		add    %ebx,%esi
		cmp    0x000014(%esp),%esi
		jb     _013e45_jump
		sub    0x000018(%esp),%esi

	_013e45_jump:
		add    0x000004(%ebp),%edi
		mov    0x000008(%ebp),%ecx
		push   %ebp
		push   %ebx
		push   %ecx
		push   %edx
		test   $0x000001,%edi
		je     _014129_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		dec    %ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		add    %ebx,%edi
		mov    (%esi),%ah
		mov    (%esi,%edx,1),%al
		add    %ebp,%esi
		mov    %ah,(%edi)
		mov    %al,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		inc    %edi
		inc    %esi
		test   $0x000002,%edi
		je     _014051_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		add    $0x000002,%esi
		add    $0x000002,%edi
		dec    %ecx
		jmp    _0142d0_jump

	_014051_jump:
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000004,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		jmp    _0142d0_jump

	_014129_jump:
		test   $0x000002,%edi
		je     _0142d0_jump
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		push   %esi
		push   %edi
		push   %ecx
		shl    $0x000002,%ecx
		sub    $0x000002,%ecx
		add    %ecx,%esi
		add    %ecx,%edi
		push   %ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ebp
		add    %edx,%ebp
		mov    $0x000050,%ecx
		mov    $0x0000a0,%ebx
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		add    $0x0000a0,%edi
		mov    (%esi),%ax
		mov    (%esi,%edx,1),%bx
		add    %ebp,%esi
		mov    %ax,(%edi)
		mov    %bx,(%edi,%ecx,1)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		pop    %esi
		dec    %ecx
		add    $0x000002,%esi
		add    $0x000002,%edi

	_0142d0_jump:
		push   %esi
		cmp    $0x000000,%ecx
		je     _014364_jump
		mov    %ecx,%ebx
		shl    $0x000002,%ebx
		mov    $0x000050,%eax
		sub    %ebx,%eax
		sub    %ebx,%edx
		mov    %ecx,%ebx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %edx,%esi
		add    %eax,%edi
		mov    %ebx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_014364_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		pop    %ebp
		pop    %ecx
		pop    %edi
		dec    %ecx
		add    $0x00000c,%ebp
		jmp    _013e2b_jump

	_014374_jump:
		pop    %ebp
		pop    %ecx
		jmp    _013e12_jump

	_01437b_jump:
		pop    %esi
		pop    %esi
		add    $0x000004,%esp
		pop    %ebp
		ret    



_014382_func:
		push   %ebp
		push   %ecx
		push   %ecx
		mov    %ecx,%ebp
		mov    %edx,%esi
		mov    $0x0000f0,%ecx
		movl   $0x00000e,0x000004(%esp)
		jmp    _0143a9_jump

	_014398_jump:
		decl   0x000004(%esp)
		je     _0143e1_jump
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _0143e1_jump
		add    0x000008(%ebx),%edi

	_0143a9_jump:
		push   %ebx
		push   %esi
		xor    %ebx,%ebx
		movl   $0x000014,0x000008(%esp)
		jmp    _0143c3_jump

	_0143b7_jump:
		add    $0x000006,%esi
		add    $0x000004,%edi
		decl   0x000008(%esp)
		je     _0143dd_jump

	_0143c3_jump:
		mov    0x000004(%esi),%bl
		cmp    $0x000002,%bl
		jne    _0143b7_jump
		mov    (%esi),%bx
		mov    0x000000(%ebp,%ebx,4),%edx
		cmp    $0x000000,%edx
		je     _0143b7_jump
		push   %edi
		call   *%edx
		pop    %edi
		jmp    _0143b7_jump

	_0143dd_jump:
		pop    %esi
		pop    %ebx
		jmp    _014398_jump

	_0143e1_jump:
		pop    %ecx
		pop    %ecx
		pop    %ebp
		ret    



_0143e5_func:
		push   %ebp
		push   %ecx
		push   %ecx
		mov    %ecx,%ebp
		mov    %edx,%esi
		mov    $0x0000f0,%ecx
		add    0x000008(%ebx),%edi
		add    $0x000050,%edi
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _014452_jump
		movl   $0x00000c,0x000004(%esp)
		jmp    _01441a_jump

	_014409_jump:
		decl   0x000004(%esp)
		je     _014452_jump
		add    0x000004(%ebx),%esi
		cmp    0x000014(%ebx),%esi
		jae    _014452_jump
		add    0x000008(%ebx),%edi

	_01441a_jump:
		push   %ebx
		push   %esi
		xor    %ebx,%ebx
		movl   $0x000014,0x000008(%esp)
		jmp    _014434_jump

	_014428_jump:
		add    $0x000006,%esi
		add    $0x000004,%edi
		decl   0x000008(%esp)
		je     _01444e_jump

	_014434_jump:
		mov    0x000004(%esi),%bl
		cmp    $0x000002,%bl
		jne    _014428_jump
		mov    (%esi),%bx
		mov    0x000000(%ebp,%ebx,4),%edx
		cmp    $0x000000,%edx
		je     _014428_jump
		push   %edi
		call   *%edx
		pop    %edi
		jmp    _014428_jump

	_01444e_jump:
		pop    %esi
		pop    %ebx
		jmp    _014409_jump

	_014452_jump:
		pop    %ecx
		pop    %ecx
		pop    %ebp
		ret    



_014456_func:
		pusha  
		mov    $0x000f02,%eax
		mov    $0x0003c4,%edx
		sub    $0x000002,%edi
		out    %ax,(%dx)
		mov    $0x000140,%ebx
		xor    %eax,%eax
		mov    %edi,%esi
		mov    $0x000011,%ecx
		add    $0x000050,%esi

	_014477_jump:
		mov    %eax,(%edi)
		mov    %eax,(%esi)
		mov    %eax,0x0000a0(%edi)
		mov    %eax,0x0000a0(%esi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%esi,%ebx,1)
		mov    %eax,0x0000a0(%edi,%ebx,1)
		mov    %eax,0x0000a0(%esi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,(%esi,%ebx,2)
		mov    %eax,0x0000a0(%edi,%ebx,2)
		mov    %eax,0x0000a0(%esi,%ebx,2)
		add    $0x0003c0,%edi
		add    $0x0003c0,%esi
		dec    %ecx
		jne    _014477_jump
		popa   
		ret    



_0144c0_func:
		pusha  
		push   %edi
		mov    $0x000f02,%eax
		mov    $0x0003c4,%edx
		sub    $0x000002,%edi
		out    %ax,(%dx)
		mov    $0x000140,%ebx
		xor    %eax,%eax
		mov    %edi,%esi
		mov    $0x000011,%ecx
		add    $0x000050,%esi

	_0144e2_jump:
		mov    %eax,(%edi)
		mov    %eax,(%esi)
		mov    %eax,0x0000a0(%edi)
		mov    %eax,0x0000a0(%esi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%esi,%ebx,1)
		mov    %eax,0x0000a0(%edi,%ebx,1)
		mov    %eax,0x0000a0(%esi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,(%esi,%ebx,2)
		mov    %eax,0x0000a0(%edi,%ebx,2)
		mov    %eax,0x0000a0(%esi,%ebx,2)
		add    $0x0003c0,%edi
		add    $0x0003c0,%esi
		dec    %ecx
		jne    _0144e2_jump
		pop    %edi
		cld    
		xor    %eax,%eax
		mov    $0x000140,%ecx
		rep stos %eax,%es:(%edi)
		add    $0x003700,%edi
		mov    $0x0000a0,%ecx
		rep stos %eax,%es:(%edi)
		popa   
		ret    



_014543_func:
		push   %edx
		mov    $0x0003d4,%dx
		mov    $0x00000c,%al
		out    %ax,(%dx)
		pop    %edx
		ret    



_01455b_func:
		pusha  
		mov    $0x000013,%ax
		int    $0x000010
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196a_data
		mov    $0x0003ce,%dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196b_data
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196c_data
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196d_data
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196e_data
		mov    $0x0003d4,%dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		in     (%dx),%al
		mov    %al,_09196f_data
		popa   
		ret    



_0145be_func:
		pusha  
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196a_data,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196b_data,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196c_data,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196d_data,%al
		out    %al,(%dx)
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196e_data,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196f_data,%al
		out    %al,(%dx)
		popa   
		ret    



_014617_func:
		pusha  
		mov    $0x0003ce,%dx
		mov    $0x000005,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196a_data,%al
		and    $0x0000ef,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000006,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196b_data,%al
		and    $0x0000fd,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000004,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196c_data,%al
		and    $0x0000f7,%al
		or     $0x000004,%al
		out    %al,(%dx)
		mov    $0x0003c4,%dx
		mov    $0x000002,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196d_data,%al
		out    %al,(%dx)
		mov    $0x0003d4,%dx
		mov    $0x000014,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196e_data,%al
		and    $0x0000bf,%al
		out    %al,(%dx)
		dec    %dx
		mov    $0x000017,%al
		out    %al,(%dx)
		inc    %dx
		mov    _09196f_data,%al
		or     $0x000040,%al
		out    %al,(%dx)
		popa   
		ret    



_01467c_func:
		pusha  
		mov    $0x000000,%eax
		mov    $0x000050,%ebx
		mov    $0x000140,%ecx
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		add    %ecx,%edi
		mov    %eax,(%edi)
		mov    %eax,(%edi,%ebx,1)
		mov    %eax,(%edi,%ebx,2)
		mov    %eax,0x000050(%edi,%ebx,2)
		popa   
		ret    



_0146c4_func:
		pusha  
		mov    $0x000050,%ebp
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		add    $0x000140,%edi
		mov    (%esi),%eax
		mov    0x000004(%esi),%ebx
		mov    0x000008(%esi),%ecx
		mov    0x00000c(%esi),%edx
		add    $0x000010,%esi
		mov    %eax,(%edi)
		mov    %ebx,(%edi,%ebp,1)
		mov    %ecx,(%edi,%ebp,2)
		mov    %edx,0x000050(%edi,%ebp,2)
		popa   
		ret    



_014746_func:
		pusha  
		mov    $0x000003,%ax
		int    $0x000010
		popa   
		ret    

_01474f_switch:
		.long   0

_014753_switch:
		.long   0

_014757_switch:
		.long   0

_01475b_switch:
		.long   0

_01475f_switch:
		.long   0

_014763_switch:
		.long   0

_014767_switch:
		.long   0

_01476b_switch:
		.long   0

_01476f_switch:
		.long   0

_014773_switch:
		.long   0

_014777_switch:
		.long   0

_01477b_switch:
		.long   0

_01477f_switch:
		.long   0

_014783_switch:
		.long   0




_014787_func:
		pusha  
		dec    %esi
		mov    %esi,_01476f_switch
		push   %ecx
		push   %edi
		mov    0x000020(%ecx),%ebx
		mov    0x000024(%ecx),%edx
		sar    $0x000002,%ebx
		mov    $0xa1a1a1a1,%eax
		inc    %ebx

	_0147a0_jump:
		mov    %ebx,%ecx
		rep stos %eax,%es:(%edi)
		dec    %edx
		jne    _0147a0_jump
		pop    %edi
		pop    %ecx
		mov    (%ecx),%eax
		mov    0x000004(%ecx),%ebx
		mov    %eax,_01474f_switch
		mov    %ebx,_014753_switch
		mov    0x000008(%ecx),%eax
		mov    0x00000c(%ecx),%ebx
		mov    %eax,_014757_switch
		mov    %ebx,_01475b_switch
		mov    0x000010(%ecx),%eax
		mov    0x000014(%ecx),%ebx
		mov    %eax,_01475f_switch
		mov    %ebx,_014763_switch
		mov    0x000018(%ecx),%eax
		mov    0x00001c(%ecx),%ebx
		mov    %eax,_014767_switch
		mov    %ebx,_01476b_switch
		mov    %ebx,%edx
		add    %eax,%edx
		mov    %edx,_014783_switch
		mov    0x00002c(%ecx),%ebx
		mov    0x000030(%ecx),%eax
		mov    %ebx,_01477f_switch
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _014783_switch
		mov    %eax,_01477b_switch
		mov    _01476f_switch,%esi
		add    0x000028(%ecx),%edi
		mov    _014757_switch,%eax
		mov    _01475b_switch,%ebx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %edx,%edx
		cmp    %ebx,%eax
		jbe    _01490b_jump
		mov    _01476b_switch,%ebx
		push   %eax
		mov    _01477f_switch,%eax
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _014757_switch
		mov    %eax,_014777_switch
		mov    %eax,_014773_switch
		pop    %eax
		xor    %edx,%edx

	_01485a_jump:
		push   %ecx
		push   %edi
		push   %ebp
		push   %ebx
		push   %edx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %ebx,%ebx

	_014865_jump:
		push   %ebx
		shr    $0x000010,%ebx
		mov    (%esi,%ebx,1),%edx
		inc    %ebp
		pop    %ebx
		cmpb   $0x0000a1,(%edi)
		jne    _014875_jump
		mov    %dh,(%edi)

	_014875_jump:
		add    _014777_switch,%ebx
		add    _01475b_switch,%ecx
		cmp    %eax,%ebp
		jge    _0148a1_jump
		add    _01474f_switch,%edi
		cmp    _014757_switch,%ecx
		jbe    _014865_jump
		add    _014753_switch,%edi
		sub    _014757_switch,%ecx
		jmp    _014865_jump

	_0148a1_jump:
		pop    %edx
		pop    %ebx
		pop    %ebp
		pop    %edi
		pop    %ecx
		inc    %ebp
		mov    _01476f_switch,%esi
		add    _014767_switch,%ecx
		add    _014763_switch,%edi
		add    _01477b_switch,%edx
		push   %edx
		shr    $0x000010,%edx

	_0148c3_jump:
		je     _0148ce_jump
		add    _01477f_switch,%esi
		dec    %edx
		jmp    _0148c3_jump

	_0148ce_jump:
		mov    _014773_switch,%edx
		mov    %edx,_014777_switch
		pop    %edx
		cmp    %ebx,%ebp
		jge    _0149e0_jump
		cmp    $0x000000,%ecx
		jle    _01485a_jump
		add    _01475f_switch,%edi
		dec    %ebp
		sub    _014783_switch,%ecx
		sub    _014763_switch,%edi
		subl   $0x000040,_014777_switch
		jmp    _01485a_jump

	_01490b_jump:
		mov    _01477f_switch,%eax
		sar    $0x00001f,%edx
		shl    $0x000010,%eax
		divl   _01475b_switch
		mov    %eax,_014777_switch
		mov    %eax,_014773_switch
		xor    %edx,%edx
		mov    _014767_switch,%ebx
		mov    _01475b_switch,%eax

	_014933_jump:
		push   %ecx
		push   %edi
		push   %ebp
		push   %ebx
		push   %edx
		xor    %ecx,%ecx
		xor    %ebp,%ebp
		xor    %ebx,%ebx

	_01493e_jump:
		push   %ebx
		shr    $0x000010,%ebx
		mov    (%esi,%ebx,1),%edx
		inc    %ebp
		pop    %ebx
		cmpb   $0x000081,(%edi)
		jne    _01494e_jump
		mov    %dh,(%edi)

	_01494e_jump:
		add    _014777_switch,%ebx
		add    _014757_switch,%ecx
		cmp    %eax,%ebp
		jge    _014977_jump
		add    _014753_switch,%edi
		cmp    $0x000000,%ecx
		jle    _01493e_jump
		add    _01474f_switch,%edi
		sub    _01475b_switch,%ecx
		jmp    _01493e_jump

	_014977_jump:
		pop    %edx
		pop    %ebx
		pop    %ebp
		pop    %edi
		pop    %ecx
		inc    %ebp
		mov    _01476f_switch,%esi
		add    _01476b_switch,%ecx
		add    _01475f_switch,%edi
		add    _01477b_switch,%edx
		push   %edx
		shr    $0x000010,%edx

	_014999_jump:
		je     _0149a4_jump
		add    _01477f_switch,%esi
		dec    %edx
		jmp    _014999_jump

	_0149a4_jump:
		mov    _014773_switch,%edx
		mov    %edx,_014777_switch
		pop    %edx
		cmp    %ebx,%ebp
		jge    _0149e0_jump
		cmp    _014767_switch,%ecx
		jle    _014933_jump
		add    _014763_switch,%edi
		dec    %ebp
		sub    _014783_switch,%ecx
		sub    _01475f_switch,%edi
		subl   $0x000040,_014777_switch
		jmp    _014933_jump

	_0149e0_jump:
		popa   
		ret    



_014a16_func:
		push   %ecx
		mov    $0x003e80,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %ecx
		ret    



_014a20_func:
		imul   $0x000180,%ebx,%ebx
		add    %ebx,%edi
		add    %eax,%edi
		movw   $0x000c00,0x000001(%edi)
		movl   $0xc0e0a00,0x000180(%edi)
		movl   $0x0a0900,0x000300(%edi)
		movw   $0x000000,0x000481(%edi)
		ret    



_014a4e_func:
		pusha  
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %eax,%edi
		mov    $0x000000,%eax
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_014a65_jump:
		push   %ecx
		mov    %edx,%ecx
		test   $0x000001,%ecx
		je     _014a72_jump
		stos   %al,%es:(%edi)
		dec    %ecx

	_014a72_jump:
		test   $0x000002,%ecx
		je     _014a7f_jump
		stos   %ax,%es:(%edi)
		sub    $0x000002,%ecx

	_014a7f_jump:
		sar    $0x000002,%ecx
		rep stos %eax,%es:(%edi)
		add    %ebx,%edi
		pop    %ecx
		loop   _014a65_jump
		popa   
		ret    



_014a8b_func:
		cmp    $0x000002,%eax
		je     _014ad0_jump
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %esi,%edi
		mov    %edi,%esi
		add    $0x000141,%esi
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_014aa9_jump:
		push   %ecx
		mov    %edx,%ecx

	_014aac_jump:
		mov    (%esi),%al
		mov    %al,%ah
		and    $0x0000e0,%ah
		sub    $0x000005,%al
		xor    %al,%ah
		and    $0x0000e0,%ah
		je     _014ac0_jump
		mov    %ah,%al
		and    $0x0000e0,%al

	_014ac0_jump:
		mov    %al,(%edi)
		inc    %edi
		inc    %esi
		dec    %ecx
		jne    _014aac_jump
		add    %ebx,%edi
		add    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _014aa9_jump
		ret    

	_014ad0_jump:
		add    %ecx,%ebx
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %edx,%edi
		add    %esi,%edi
		sub    $0x000141,%edi
		mov    %edi,%esi
		sub    $0x000141,%esi
		mov    $0x000140,%ebx
		sub    %edx,%ebx

	_014af3_jump:
		push   %ecx
		mov    %edx,%ecx

	_014af6_jump:
		mov    (%esi),%al
		mov    %al,%ah
		and    $0x0000e0,%ah
		add    $0x000005,%al
		xor    %al,%ah
		and    $0x0000e0,%ah
		je     _014b0a_jump
		mov    %ah,%al
		or     $0x00001f,%al

	_014b0a_jump:
		mov    %al,(%edi)
		dec    %edi
		dec    %esi
		dec    %ecx
		jne    _014af6_jump
		sub    %ebx,%edi
		sub    %ebx,%esi
		pop    %ecx
		dec    %ecx
		jne    _014af3_jump
		ret    



_014b1a_func:
		imul   $0x000140,%ebx,%ebx
		add    %ebx,%edi
		add    %esi,%edi
		dec    %edx
		mov    %ecx,%ebx
		push   %edi

	_014b28_jump:
		mov    %al,(%edi)
		add    $0x000140,%edi
		dec    %ecx
		jne    _014b28_jump
		mov    %edx,%ecx
		sub    $0x000140,%edi
		inc    %edi
		xchg   %al,%ah
		rep stos %al,%es:(%edi)
		add    $0x00013f,%edi
		sub    %edx,%edi
		mov    %edx,%ecx
		inc    %ecx
		rep stos %al,%es:(%edi)
		pop    %edi
		xchg   %al,%ah
		mov    %edx,%ecx
		inc    %ecx
		rep stos %al,%es:(%edi)
		mov    %ebx,%ecx
		dec    %ecx
		mov    %ah,%al
		add    $0x00013f,%edi

	_014b60_jump:
		mov    %al,(%edi)
		mov    %al,-0x00013f(%edi)
		add    $0x000140,%edi
		dec    %ecx
		jne    _014b60_jump
		mov    %al,-0x00013f(%edi)
		ret    



_014b78_func:
		imul   0x000004(%esp),%ebx
		add    %ebx,%esi
		add    %eax,%esi
		imul   $0x000140,%edx,%edx
		add    %edx,%edi
		add    %ecx,%edi
		mov    $0x000140,%ebx
		sub    0x000008(%esp),%ebx
		mov    0x000004(%esp),%edx
		sub    0x000008(%esp),%edx
		mov    0x00000c(%esp),%eax

	_014ba0_jump:
		mov    0x000008(%esp),%ecx
		test   $0x000001,%ecx
		je     _014bae_jump
		movsb  %ds:(%esi),%es:(%edi)
		dec    %ecx

	_014bae_jump:
		test   $0x000002,%ecx
		je     _014bbb_jump
		movsw  %ds:(%esi),%es:(%edi)
		sub    $0x000002,%ecx

	_014bbb_jump:
		sar    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    %ebx,%edi
		add    %edx,%esi
		dec    %eax
		jne    _014ba0_jump
		ret    $0x00000c



_014bca_func:
		push   %ecx
		push   %eax
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    %esi,%edi
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		pop    %eax
		pop    %ecx
		ret    

	_014be5_jump:
		inc    %eax
		add    %eax,(%eax)
	_014be9_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %al,0x000001(%eax)
		add    %al,(%eax)



_014bed_func:
		push   %ecx
		push   %eax
		mov    $0x003e80,%ecx
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		pop    %eax
		pop    %ecx
		ret    



_014bfb_func:
		pusha  
		sub    $0x000004,%esp
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_014c09_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _014be5_jump,%ebx
		add    _014be9_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _014c09_jump
		add    $0x000004,%esp
		popa   
		ret    



_014c26_func:
		pusha  
		mov    $0x000140,%ebx
		lea    0x000140(%edx),%eax
		shr    %ecx

	_014c34_jump:
		movl   $0x000000,(%edi)
		movl   $0x000000,(%edi,%edx,1)
		mov    %edi,%esi
		movl   $0x000000,(%edi,%ebx,1)
		movl   $0x000000,(%edi,%eax,1)
		dec    %ecx
		lea    (%esi,%ebx,2),%edi
		jne    _014c34_jump
		popa   
		ret    



_014c59_func:
		pusha  
		cmp    $0x000000,%ecx
		jle    _014cb2_jump
		cmp    $0x000000,%ebx
		jle    _014cb2_jump
		sub    $0x000008,%esp
		mov    %ebx,0x000004(%esp)
		mov    %edx,%eax
		mov    %ecx,(%esp)
		mov    %esi,%ebp
		shrl   $0x000003,(%esp)
		and    $0x000007,%ecx
		je     _014c7e_jump
		incl   (%esp)

	_014c7e_jump:
		mov    %edi,%ebx
		mov    (%esp),%ecx
		push   %ebx
		push   %edx

	_014c85_jump:
		mov    (%esi),%edx
		mov    0x000004(%esi),%ebx
		mov    %edx,(%edi)
		mov    %ebx,0x000004(%edi)
		add    $0x000008,%esi
		add    $0x000008,%edi
		sub    $0x000001,%ecx
		jne    _014c85_jump
		pop    %edx
		pop    %ebx
		lea    0x000000(%ebp,%edx,1),%esi
		lea    (%edx,%eax,1),%edx
		lea    0x000140(%ebx),%edi
		decl   0x000004(%esp)
		jne    _014c7e_jump
		add    $0x000008,%esp

	_014cb2_jump:
		popa   
		ret    



_014dc3_func:
		pusha  
		mov    0x000200(%esi),%eax
		sub    $0x000004,%esp
		movl   $0x000004,(%esp)

	_014dd4_jump:
		test   $0x40000000,%eax
		jne    _014e1f_jump
		test   $0x80000000,%eax
		jne    _014f32_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_014e1f_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		test   $0x10000000,%eax
		jne    _014e73_jump
		test   $0x20000000,%eax
		jne    _014f4d_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_014e73_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		test   $0x4000000,%eax
		jne    _014ec7_jump
		test   $0x8000000,%eax
		jne    _014f68_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_014ec7_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		test   $0x1000000,%eax
		jne    _014f1b_jump
		test   $0x2000000,%eax
		jne    _014f83_jump
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)

	_014f1b_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		shl    $0x000008,%eax
		decl   (%esp)
		jne    _014dd4_jump
		jmp    _014f9b_jump

	_014f32_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _014e1f_jump

	_014f4d_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _014e73_jump

	_014f68_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _014ec7_jump

	_014f83_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		jmp    _014f1b_jump

	_014f9b_jump:
		add    $0x000004,%esp
		popa   
		ret    



_014fa0_func:
		pusha  
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		mov    0x000010(%esi),%ebx
		mov    0x000014(%esi),%ecx
		mov    0x000018(%esi),%edx
		mov    0x00001c(%esi),%ebp
		mov    %ebx,0x000140(%edi)
		mov    %ecx,0x000144(%edi)
		mov    %edx,0x000148(%edi)
		mov    %ebp,0x00014c(%edi)
		mov    0x000020(%esi),%ebx
		mov    0x000024(%esi),%ecx
		mov    0x000028(%esi),%edx
		mov    0x00002c(%esi),%ebp
		mov    %ebx,0x000280(%edi)
		mov    %ecx,0x000284(%edi)
		mov    %edx,0x000288(%edi)
		mov    %ebp,0x00028c(%edi)
		mov    0x000030(%esi),%ebx
		mov    0x000034(%esi),%ecx
		mov    0x000038(%esi),%edx
		mov    0x00003c(%esi),%ebp
		mov    %ebx,0x0003c0(%edi)
		mov    %ecx,0x0003c4(%edi)
		mov    %edx,0x0003c8(%edi)
		mov    %ebp,0x0003cc(%edi)
		mov    0x000040(%esi),%ebx
		mov    0x000044(%esi),%ecx
		mov    0x000048(%esi),%edx
		mov    0x00004c(%esi),%ebp
		mov    %ebx,0x000500(%edi)
		mov    %ecx,0x000504(%edi)
		mov    %edx,0x000508(%edi)
		mov    %ebp,0x00050c(%edi)
		mov    0x000050(%esi),%ebx
		mov    0x000054(%esi),%ecx
		mov    0x000058(%esi),%edx
		mov    0x00005c(%esi),%ebp
		mov    %ebx,0x000640(%edi)
		mov    %ecx,0x000644(%edi)
		mov    %edx,0x000648(%edi)
		mov    %ebp,0x00064c(%edi)
		mov    0x000060(%esi),%ebx
		mov    0x000064(%esi),%ecx
		mov    0x000068(%esi),%edx
		mov    0x00006c(%esi),%ebp
		mov    %ebx,0x000780(%edi)
		mov    %ecx,0x000784(%edi)
		mov    %edx,0x000788(%edi)
		mov    %ebp,0x00078c(%edi)
		mov    0x000070(%esi),%ebx
		mov    0x000074(%esi),%ecx
		mov    0x000078(%esi),%edx
		mov    0x00007c(%esi),%ebp
		mov    %ebx,0x0008c0(%edi)
		mov    %ecx,0x0008c4(%edi)
		mov    %edx,0x0008c8(%edi)
		mov    %ebp,0x0008cc(%edi)
		mov    0x000080(%esi),%ebx
		mov    0x000084(%esi),%ecx
		mov    0x000088(%esi),%edx
		mov    0x00008c(%esi),%ebp
		mov    %ebx,0x000a00(%edi)
		mov    %ecx,0x000a04(%edi)
		mov    %edx,0x000a08(%edi)
		mov    %ebp,0x000a0c(%edi)
		mov    0x000090(%esi),%ebx
		mov    0x000094(%esi),%ecx
		mov    0x000098(%esi),%edx
		mov    0x00009c(%esi),%ebp
		mov    %ebx,0x000b40(%edi)
		mov    %ecx,0x000b44(%edi)
		mov    %edx,0x000b48(%edi)
		mov    %ebp,0x000b4c(%edi)
		mov    0x0000a0(%esi),%ebx
		mov    0x0000a4(%esi),%ecx
		mov    0x0000a8(%esi),%edx
		mov    0x0000ac(%esi),%ebp
		mov    %ebx,0x000c80(%edi)
		mov    %ecx,0x000c84(%edi)
		mov    %edx,0x000c88(%edi)
		mov    %ebp,0x000c8c(%edi)
		mov    0x0000b0(%esi),%ebx
		mov    0x0000b4(%esi),%ecx
		mov    0x0000b8(%esi),%edx
		mov    0x0000bc(%esi),%ebp
		mov    %ebx,0x000dc0(%edi)
		mov    %ecx,0x000dc4(%edi)
		mov    %edx,0x000dc8(%edi)
		mov    %ebp,0x000dcc(%edi)
		mov    0x0000c0(%esi),%ebx
		mov    0x0000c4(%esi),%ecx
		mov    0x0000c8(%esi),%edx
		mov    0x0000cc(%esi),%ebp
		mov    %ebx,0x000f00(%edi)
		mov    %ecx,0x000f04(%edi)
		mov    %edx,0x000f08(%edi)
		mov    %ebp,0x000f0c(%edi)
		mov    0x0000d0(%esi),%ebx
		mov    0x0000d4(%esi),%ecx
		mov    0x0000d8(%esi),%edx
		mov    0x0000dc(%esi),%ebp
		mov    %ebx,0x001040(%edi)
		mov    %ecx,0x001044(%edi)
		mov    %edx,0x001048(%edi)
		mov    %ebp,0x00104c(%edi)
		mov    0x0000e0(%esi),%ebx
		mov    0x0000e4(%esi),%ecx
		mov    0x0000e8(%esi),%edx
		mov    0x0000ec(%esi),%ebp
		mov    %ebx,0x001180(%edi)
		mov    %ecx,0x001184(%edi)
		mov    %edx,0x001188(%edi)
		mov    %ebp,0x00118c(%edi)
		mov    0x0000f0(%esi),%ebx
		mov    0x0000f4(%esi),%ecx
		mov    0x0000f8(%esi),%edx
		mov    0x0000fc(%esi),%ebp
		mov    %ebx,0x0012c0(%edi)
		mov    %ecx,0x0012c4(%edi)
		mov    %edx,0x0012c8(%edi)
		mov    %ebp,0x0012cc(%edi)
		popa   
		ret    

_015235_switch:
		.long   0




_015239_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_015235_switch
		cmp    _0cc49c_data,%eax
		jl     _015288_jump
		add    %eax,%edx
		cmp    _0cc498_data,%edx
		ja     _015271_jump
		mov    $0x000004,%cl

	_015257_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _0cc4a4_data,%ebx
		jl     _0152c1_jump

	_015263_jump:
		add    %ebx,%edx
		cmp    _0cc4a0_data,%edx
		ja     _0152ad_jump

	_01526d_jump:
		clc    
		ret    

	_01526f_jump:
		stc    
		ret    

	_015271_jump:
		cmp    _0cc498_data,%eax
		jae    _01526f_jump
		mov    _0cc498_data,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _01530e_jump

	_015288_jump:
		sub    _0cc49c_data,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _01526f_jump
		and    $0x00fffc,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		lea    (%esi,%eax,1),%esi
		lea    (%edi,%eax,1),%edi
		mov    _0cc49c_data,%eax
		shr    $0x000002,%cl
		jmp    _015257_jump

	_0152ad_jump:
		cmp    _0cc4a0_data,%ebx
		jae    _01526f_jump
		mov    _0cc4a0_data,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _01526d_jump

	_0152c1_jump:
		add    %ebx,%edx
		cmp    _0cc4a4_data,%edx
		jle    _01526f_jump
		xor    %edx,%edx
		sub    _0cc4a4_data,%ebx
		mov    %ch,%dl
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _015235_switch,%eax
		mul    %bx
		add    %eax,%esi
		mov    _014be5_jump,%eax
		mul    %bx
		add    %eax,%edi

	_0152f6_jump:
		shll   $0x000002,0x000008(%esp)
		dec    %ebx
		jne    _0152f6_jump
		pop    %eax
		mov    _0cc4a4_data,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _015263_jump

	_01530e_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		shr    $0x000002,%cl
		and    $0x000003,%edx
		je     _015257_jump
		inc    %cl
		jmp    _015257_jump



_015325_func:
		pusha  
		mov    $0x001010,%ecx
		sub    $0x000005,%esp
		mov    0x000200(%esi),%ebp
		mov    %ebp,(%esp)
		call   _015239_func
		jb     _0154b8_jump
		mov    (%esp),%eax
		mov    %ch,0x000004(%esp)
		cmp    $0x000003,%cl
		je     _0153da_jump
		cmp    $0x000002,%cl
		je     _01543b_jump
		cmp    $0x000001,%cl
		je     _015484_jump

	_015364_jump:
		test   $0x40000000,%eax
		jne    _015388_jump
		test   $0x80000000,%eax
		je     _01539f_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)

	_015388_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _015364_jump
		jmp    _0154b8_jump

	_01539f_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x00010c(%esi),%ebp
		mov    0x000008(%esi),%ebx
		mov    0x00000c(%esi),%edx
		and    %ecx,0x000008(%edi)
		and    %ebp,0x00000c(%edi)
		or     %ebx,0x000008(%edi)
		or     %edx,0x00000c(%edi)
		jmp    _015388_jump

	_0153da_jump:
		test   $0x40000000,%eax
		jne    _0153f8_jump
		test   $0x80000000,%eax
		je     _01540f_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)

	_0153f8_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _0153da_jump
		jmp    _0154b8_jump

	_01540f_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		mov    0x000108(%esi),%ecx
		mov    0x000008(%esi),%ebx
		and    %ecx,0x000008(%edi)
		or     %ebx,0x000008(%edi)
		jmp    _0153f8_jump

	_01543b_jump:
		test   $0x40000000,%eax
		jne    _015453_jump
		test   $0x80000000,%eax
		je     _015467_jump
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)

	_015453_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _01543b_jump
		jmp    _0154b8_jump

	_015467_jump:
		mov    0x000100(%esi),%ecx
		mov    0x000104(%esi),%ebp
		mov    (%esi),%ebx
		mov    0x000004(%esi),%edx
		and    %ecx,(%edi)
		and    %ebp,0x000004(%edi)
		or     %ebx,(%edi)
		or     %edx,0x000004(%edi)
		jmp    _015453_jump

	_015484_jump:
		test   $0x40000000,%eax
		jne    _015496_jump
		test   $0x80000000,%eax
		je     _0154aa_jump
		mov    (%esi),%ebx
		mov    %ebx,(%edi)

	_015496_jump:
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		shl    $0x000002,%eax
		decb   0x000004(%esp)
		jne    _015484_jump
		jmp    _0154b8_jump

	_0154aa_jump:
		mov    0x000100(%esi),%ecx
		mov    (%esi),%ebx
		and    %ecx,(%edi)
		or     %ebx,(%edi)
		jmp    _015496_jump

	_0154b8_jump:
		add    $0x000005,%esp
		popa   
		ret    



_0154bd_func:
		pusha  
		mov    $0x001010,%ecx
		sub    $0x000005,%esp
		movl   $0x000000,(%esp)
		call   _015239_func
		jb     _015563_jump
		mov    %ch,0x000004(%esp)
		cmp    $0x000003,%cl
		je     _015512_jump
		cmp    $0x000002,%cl
		je     _015533_jump
		cmp    $0x000001,%cl
		je     _01554e_jump

	_0154eb_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    0x00000c(%esi),%ebp
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		mov    %ebp,0x00000c(%edi)
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _0154eb_jump
		jmp    _015563_jump

	_015512_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    0x000008(%esi),%edx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		mov    %edx,0x000008(%edi)
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _015512_jump
		jmp    _015563_jump

	_015533_jump:
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		mov    %ebx,(%edi)
		mov    %ecx,0x000004(%edi)
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _015533_jump
		jmp    _015563_jump

	_01554e_jump:
		mov    (%esi),%ebx
		mov    %ebx,(%edi)
		add    _014be5_jump,%edi
		add    $0x000010,%esi
		decb   0x000004(%esp)
		jne    _01554e_jump
		jmp    _015563_jump

	_015563_jump:
		add    $0x000005,%esp
		popa   
		ret    



_015568_func:
		pusha  
		add    _091b00_data(,%ebx,4),%eax
		mov    %esi,%edx
		mov    %dl,(%edi,%eax,1)
		popa   
		ret    

_015577_switch:
		.long   0

_01557b_switch:
		.long   0

_01557f_switch:
		.long   0

_015583_switch:
		.long   0




_015587_func:
		mov    %eax,_015577_switch
		mov    %ebx,_01557b_switch
		mov    %ecx,_01557f_switch
		mov    %edx,_015583_switch
		ret    



_01559f_func:
		push   %eax
		push   %edi
		cmp    _01557f_switch,%eax
		jl     _0155cc_jump
		cmp    _015583_switch,%eax
		ja     _0155cc_jump
		cmp    _015577_switch,%ebx
		jl     _0155cc_jump
		cmp    _01557b_switch,%ebx
		ja     _0155cc_jump
		add    _091b00_data(,%ebx,4),%eax
		movb   $0x000005,(%edi,%eax,1)

	_0155cc_jump:
		pop    %edi
		pop    %eax
		ret    



_0155cf_func:
		push   %eax
		push   %edi
		cmp    _01557f_switch,%eax
		jl     _0155fc_jump
		cmp    _015583_switch,%eax
		ja     _0155fc_jump
		cmp    _015577_switch,%ebx
		jl     _0155fc_jump
		cmp    _01557b_switch,%ebx
		ja     _0155fc_jump
		add    _091b00_data(,%ebx,4),%eax
		movb   $0x000007,(%edi,%eax,1)

	_0155fc_jump:
		pop    %edi
		pop    %eax
		ret    



_0155ff_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _015638_jump
		cmp    _015583_switch,%eax
		ja     _015638_jump
		cmp    _015577_switch,%ebx
		jl     _015638_jump
		cmp    _01557b_switch,%ebx
		ja     _015638_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000807,(%edi)
		movw   $0x000706,0x000140(%edi)

	_015638_jump:
		pop    %eax
		pop    %edi
		ret    



_01563b_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _015681_jump
		cmp    _015583_switch,%eax
		ja     _015681_jump
		cmp    _015577_switch,%ebx
		jl     _015681_jump
		cmp    _01557b_switch,%ebx
		ja     _015681_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000608,0x000140(%edi)
		movb   $0x000006,0x000142(%edi)
		movb   $0x000006,0x000001(%edi)
		movb   $0x000006,0x000281(%edi)

	_015681_jump:
		pop    %eax
		pop    %edi
		ret    



_015684_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _0156b1_jump
		cmp    _015583_switch,%eax
		ja     _0156b1_jump
		cmp    _015577_switch,%ebx
		jl     _0156b1_jump
		cmp    _01557b_switch,%ebx
		ja     _0156b1_jump
		add    _091b00_data(,%ebx,4),%eax
		movb   $0x000003,(%edi,%eax,1)

	_0156b1_jump:
		pop    %eax
		pop    %edi
		ret    



_0156b4_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _015702_jump
		cmp    _015583_switch,%eax
		ja     _015702_jump
		cmp    _015577_switch,%ebx
		jl     _015702_jump
		cmp    _01557b_switch,%ebx
		ja     _015702_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000505,0x000001(%edi)
		movl   $0x5070705,0x000140(%edi)
		movl   $0x5070705,0x000280(%edi)
		movw   $0x000505,0x0003c1(%edi)

	_015702_jump:
		pop    %eax
		pop    %edi
		ret    



_015705_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _01573b_jump
		cmp    _015583_switch,%eax
		ja     _01573b_jump
		cmp    _015577_switch,%ebx
		jl     _01573b_jump
		cmp    _01557b_switch,%ebx
		ja     _01573b_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movb   $0x000005,0x000140(%edi)
		movb   $0x000004,0x000001(%edi)

	_01573b_jump:
		pop    %eax
		pop    %edi
		ret    



_01573e_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _01578c_jump
		cmp    _015583_switch,%eax
		ja     _01578c_jump
		cmp    _015577_switch,%ebx
		jl     _01578c_jump
		cmp    _01557b_switch,%ebx
		ja     _01578c_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000606,0x000001(%edi)
		movl   $0x6080806,0x000140(%edi)
		movl   $0x6080806,0x000280(%edi)
		movw   $0x000606,0x0003c1(%edi)

	_01578c_jump:
		pop    %eax
		pop    %edi
		ret    



_01578f_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _0157d9_jump
		cmp    _015583_switch,%eax
		ja     _0157d9_jump
		cmp    _015577_switch,%ebx
		jl     _0157d9_jump
		cmp    _01557b_switch,%ebx
		ja     _0157d9_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000204,0x000001(%edi)
		movw   $0x000305,0x000140(%edi)
		movb   $0x000002,0x000142(%edi)
		movw   $0x000603,0x000280(%edi)

	_0157d9_jump:
		pop    %eax
		pop    %edi
		ret    



_0157dc_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _015850_jump
		cmp    _015583_switch,%eax
		ja     _015850_jump
		cmp    _015577_switch,%ebx
		jl     _015850_jump
		cmp    _01557b_switch,%ebx
		ja     _015850_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000606,0x000002(%edi)
		movl   $0x7080807,0x000141(%edi)
		movl   $0x8080806,0x000280(%edi)
		movl   $0x8080806,0x0003c0(%edi)
		movl   $0x7080807,0x000501(%edi)
		movw   $0x000606,0x000642(%edi)
		movw   $0x000608,0x000284(%edi)
		movw   $0x000608,0x0003c4(%edi)

	_015850_jump:
		pop    %eax
		pop    %edi
		ret    



_015853_func:
		push   %edi
		push   %eax
		cmp    _01557f_switch,%eax
		jl     _0158ad_jump
		cmp    _015583_switch,%eax
		ja     _0158ad_jump
		cmp    _015577_switch,%ebx
		jl     _0158ad_jump
		cmp    _01557b_switch,%ebx
		ja     _0158ad_jump
		add    _091b00_data(,%ebx,4),%eax
		add    %eax,%edi
		movw   $0x000203,0x000002(%edi)
		movb   $0x000003,0x000141(%edi)
		movw   $0x000402,0x000142(%edi)
		movw   $0x000405,0x000280(%edi)
		movb   $0x000003,0x000282(%edi)
		movw   $0x000604,0x0003c0(%edi)

	_0158ad_jump:
		pop    %eax
		pop    %edi
		ret    

	_0158b0_jump:
		inc    %eax
		add    %eax,(%eax)
	_0158b4_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %al,0x000001(%eax)
		add    %al,(%eax)

_0158b8_switch:
		.long   0




_0158bc_func:
		pusha  
		cli    
		cld    
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0cec3a_data
		sbbw   $0x000000,_0cec3a_data
		shr    %al
		movw   $0x000001,_0cec3c_data
		sbbw   $0x000000,_0cec3c_data
		shr    %al
		movw   $0x000001,_0cec34_data
		sbbw   $0x000000,_0cec34_data
		shr    %al
		movw   $0x000001,_0cec36_data
		sbbw   $0x000000,_0cec36_data
		mov    _095b9c_data,%ax
		cmp    $0x000001,%ax
		je     _01598d_jump
		and    $0x000003,%ebx
		jne    _015971_jump
		movw   $0x000000,_0ceb8e_data
		movw   $0x000000,_0ceb8c_data
		mov    $0x0007d0,%ebx
		call   _016e5a_func
		mov    %eax,_0158b8_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_01594a_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0ceb8e_data,%ax
		je     _015990_jump

	_015959_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0ceb8c_data,%ax
		je     _0159a3_jump

	_015967_jump:
		dec    %ebx
		je     _015971_jump
		and    $0x000003,%ebp
		jne    _01594a_jump
		jmp    _01598d_jump

	_015971_jump:
		mov    _0ceb96_data,%bx
		mov    %bx,_0ceb8e_data
		mov    _0ceb94_data,%bx
		mov    %bx,_0ceb8c_data

	_01598d_jump:
		sti    
		popa   
		ret    

	_015990_jump:
		call   _016e5a_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0ceb8e_data
		jmp    _015959_jump

	_0159a3_jump:
		call   _016e5a_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0ceb8c_data
		jmp    _015967_jump



_0159b6_func:
		pusha  
		cli    
		cld    
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0cec34_data
		sbbw   $0x000000,_0cec34_data
		shr    %al
		movw   $0x000001,_0cec36_data
		sbbw   $0x000000,_0cec36_data
		shr    %al
		movw   $0x000001,_0cec3a_data
		sbbw   $0x000000,_0cec3a_data
		shr    %al
		movw   $0x000001,_0cec3c_data
		sbbw   $0x000000,_0cec3c_data
		mov    _095b9c_data,%ax
		cmp    $0x000001,%ax
		je     _01598d_jump
		and    $0x00000c,%ebx
		jne    _015a6f_jump
		movw   $0x000000,_0ceb8e_data
		movw   $0x000000,_0ceb8c_data
		mov    $0x0007d0,%ebx
		call   _016e5a_func
		mov    %eax,_0158b8_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_015a48_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0ceb8e_data,%ax
		je     _015a8e_jump

	_015a57_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0ceb8c_data,%ax
		je     _015aa1_jump

	_015a65_jump:
		dec    %ebx
		je     _015a6f_jump
		and    $0x00000c,%ebp
		jne    _015a48_jump
		jmp    _015a8b_jump

	_015a6f_jump:
		mov    _0ceb96_data,%bx
		mov    %bx,_0ceb8e_data
		mov    _0ceb94_data,%bx
		mov    %bx,_0ceb8c_data

	_015a8b_jump:
		sti    
		popa   
		ret    

	_015a8e_jump:
		call   _016e5a_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0ceb8e_data
		jmp    _015a57_jump

	_015aa1_jump:
		call   _016e5a_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0ceb8c_data
		jmp    _015a65_jump



_015ab4_func:
		pusha  
		cli    
		cld    
		movw   $0x000000,_0ceb8e_data
		movw   $0x000000,_0ceb8c_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0cec3a_data
		sbbw   $0x000000,_0cec3a_data
		shr    %al
		movw   $0x000001,_0cec3c_data
		sbbw   $0x000000,_0cec3c_data
		shr    %al
		movw   $0x000001,_0cec34_data
		sbbw   $0x000000,_0cec34_data
		shr    %al
		movw   $0x000001,_0cec36_data
		sbbw   $0x000000,_0cec36_data
		and    $0x000003,%ebx
		jne    _015b53_jump
		mov    $0x0007d0,%ebx
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_015b2c_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		je     _015b3b_jump
		incw   _0ceb8e_data

	_015b3b_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		je     _015b49_jump
		incw   _0ceb8c_data

	_015b49_jump:
		dec    %ebx
		je     _015b53_jump
		and    $0x000003,%ebp
		jne    _015b2c_jump
		jmp    _015b6f_jump

	_015b53_jump:
		mov    _0ceb96_data,%bx
		mov    %bx,_0ceb8e_data
		mov    _0ceb94_data,%bx
		mov    %bx,_0ceb8c_data

	_015b6f_jump:
		sti    
		popa   
		ret    



_015b72_func:
		pusha  
		cli    
		cld    
		movw   $0x000000,_0ceb8e_data
		movw   $0x000000,_0ceb8c_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebx
		shr    $0x000005,%al
		movw   $0x000001,_0cec34_data
		sbbw   $0x000000,_0cec34_data
		shr    %al
		movw   $0x000001,_0cec36_data
		sbbw   $0x000000,_0cec36_data
		shr    %al
		movw   $0x000001,_0cec3a_data
		sbbw   $0x000000,_0cec3a_data
		shr    %al
		movw   $0x000001,_0cec3c_data
		sbbw   $0x000000,_0cec3c_data
		and    $0x00000c,%ebx
		jne    _015c1f_jump
		mov    $0x0007d0,%ebx
		mov    $0x0000ff,%al
		out    %al,(%dx)

	_015bea_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0ceb8e_data,%ax
		je     _015c00_jump
		incw   _0ceb8e_data

	_015c00_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0ceb8c_data,%ax
		je     _015c15_jump
		incw   _0ceb8c_data

	_015c15_jump:
		dec    %ebx
		je     _015c1f_jump
		and    $0x00000c,%ebp
		jne    _015bea_jump
		jmp    _015c3b_jump

	_015c1f_jump:
		mov    _0ceb96_data,%bx
		mov    %bx,_0ceb8e_data
		mov    _0ceb94_data,%bx
		mov    %bx,_0ceb8c_data

	_015c3b_jump:
		sti    
		popa   
		ret    



_015c3e_func:
		pusha  
		cli    
		cld    
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx
		mov    $0x0000ff,%eax
		out    %al,(%dx)

	_015c50_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000003,%ebp
		je     _015c63_jump
		dec    %ebx
		jne    _015c50_jump

	_015c5b_jump:
		popa   
		mov    $0x000000,%eax
		jmp    _015c71_jump

	_015c63_jump:
		cmp    $0x0007d0,%ebx
		je     _015c5b_jump
		popa   
		mov    $0x000001,%eax

	_015c71_jump:
		sti    
		ret    



_015c73_func:
		pusha  
		cli    
		cld    
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx
		mov    $0x0000ff,%eax
		out    %al,(%dx)
		in     (%dx),%al

	_015c86_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x00000c,%ebp
		je     _015c99_jump
		dec    %ebx
		jne    _015c86_jump

	_015c91_jump:
		popa   
		mov    $0x000000,%eax
		jmp    _015ca7_jump

	_015c99_jump:
		cmp    $0x0007d0,%ebx
		je     _015c91_jump
		popa   
		mov    $0x000001,%eax

	_015ca7_jump:
		sti    
		ret    



_015ca9_func:
		pusha  
		cli    
		cld    
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		movw   $0x000000,_0ceb8e_data
		movw   $0x000000,_0ceb8c_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		shr    $0x000005,%al
		movw   $0x000001,_0cec3a_data
		sbbw   $0x000000,_0cec3a_data
		shr    %al
		movw   $0x000001,_0cec3c_data
		sbbw   $0x000000,_0cec3c_data
		shr    %al
		movw   $0x000001,_0cec34_data
		sbbw   $0x000000,_0cec34_data
		shr    %al
		movw   $0x000001,_0cec36_data
		sbbw   $0x000000,_0cec36_data
		mov    0x000004(%esp),%eax
		and    $0x000003,%ebp
		jne    _015df7_jump
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %eax,0x000004(%esp)
		call   _016e5a_func
		mov    %eax,_0158b8_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)
		mov    0x000004(%esp),%eax
		mov    %esi,%ebx
		mov    %edi,%edx

	_015d47_jump:
		mov    %edx,0x000008(%esp)
		mov    %eax,0x000004(%esp)
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0ceb8e_data,%ax
		je     _015e3b_jump

	_015d66_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0ceb8c_data,%ax
		je     _015e51_jump

	_015d78_jump:
		mov    0x000008(%esp),%edx
		mov    0x000004(%esp),%eax
		and    $0x000003,%ebp
		je     _015e1d_jump
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _0158b0_jump,%ebx
		add    _0158b4_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _015d47_jump
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx

	_015daa_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000001,%eax
		add    _0ceb8e_data,%ax
		je     _015e67_jump

	_015dbd_jump:
		mov    %ebp,%eax
		and    $0x000002,%eax
		add    _0ceb8c_data,%ax
		je     _015e7d_jump

	_015dcf_jump:
		dec    %ebx
		je     _015dd9_jump
		and    $0x000003,%ebp
		jne    _015daa_jump
		jmp    _015df5_jump

	_015dd9_jump:
		mov    _0ceb96_data,%bx
		mov    %bx,_0ceb8e_data
		mov    _0ceb94_data,%bx
		mov    %bx,_0ceb8c_data

	_015df5_jump:
		jmp    _015e35_jump

	_015df7_jump:
		mov    _0ceb96_data,%bx
		mov    %bx,_0ceb8e_data
		mov    _0ceb94_data,%bx
		mov    %bx,_0ceb8c_data
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_015e1d_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _0158b0_jump,%ebx
		add    _0158b4_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _015e1d_jump

	_015e35_jump:
		add    $0x00000c,%esp
		sti    
		popa   
		ret    

	_015e3b_jump:
		call   _016e5a_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0ceb8e_data
		jmp    _015d66_jump

	_015e51_jump:
		call   _016e5a_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0ceb8c_data
		jmp    _015d78_jump

	_015e67_jump:
		call   _016e5a_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0ceb8e_data
		jmp    _015dbd_jump

	_015e7d_jump:
		call   _016e5a_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0ceb8c_data
		jmp    _015dcf_jump



_015e93_func:
		pusha  
		cli    
		cld    
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		movw   $0x000000,_0ceb8e_data
		movw   $0x000000,_0ceb8c_data
		xor    %eax,%eax
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		shr    $0x000005,%al
		movw   $0x000001,_0cec3a_data
		sbbw   $0x000000,_0cec3a_data
		shr    %al
		movw   $0x000001,_0cec3c_data
		sbbw   $0x000000,_0cec3c_data
		shr    %al
		movw   $0x000001,_0cec34_data
		sbbw   $0x000000,_0cec34_data
		shr    %al
		movw   $0x000001,_0cec36_data
		sbbw   $0x000000,_0cec36_data
		mov    0x000004(%esp),%eax
		and    $0x00000c,%ebp
		jne    _015fe1_jump
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %eax,0x000004(%esp)
		call   _016e5a_func
		mov    %eax,_0158b8_switch
		mov    $0x0000ff,%al
		out    %al,(%dx)
		mov    0x000004(%esp),%eax
		mov    %esi,%ebx
		mov    %edi,%edx

	_015f31_jump:
		mov    %edx,0x000008(%esp)
		mov    %eax,0x000004(%esp)
		mov    $0x000201,%dx
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0ceb8e_data,%ax
		je     _016025_jump

	_015f50_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0ceb8c_data,%ax
		je     _01603b_jump

	_015f62_jump:
		mov    0x000008(%esp),%edx
		mov    0x000004(%esp),%eax
		and    $0x00000c,%ebp
		je     _016007_jump
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _0158b0_jump,%ebx
		add    _0158b4_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _015f31_jump
		mov    $0x0007d0,%ebx
		mov    $0x000201,%dx

	_015f94_jump:
		in     (%dx),%al
		mov    %eax,%ebp
		and    $0x000004,%eax
		add    _0ceb8e_data,%ax
		je     _016051_jump

	_015fa7_jump:
		mov    %ebp,%eax
		and    $0x000008,%eax
		add    _0ceb8c_data,%ax
		je     _016067_jump

	_015fb9_jump:
		dec    %ebx
		je     _015fc3_jump
		and    $0x00000c,%ebp
		jne    _015f94_jump
		jmp    _015fdf_jump

	_015fc3_jump:
		mov    _0ceb96_data,%bx
		mov    %bx,_0ceb8e_data
		mov    _0ceb94_data,%bx
		mov    %bx,_0ceb8c_data

	_015fdf_jump:
		jmp    _01601f_jump

	_015fe1_jump:
		mov    _0ceb96_data,%bx
		mov    %bx,_0ceb8e_data
		mov    _0ceb94_data,%bx
		mov    %bx,_0ceb8c_data
		shr    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    %esi,%ebx
		mov    %edi,%edx

	_016007_jump:
		mov    (%esp),%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		add    _0158b0_jump,%ebx
		add    _0158b4_jump,%edx
		mov    %ebx,%esi
		mov    %edx,%edi
		dec    %eax
		jne    _016007_jump

	_01601f_jump:
		add    $0x00000c,%esp
		sti    
		popa   
		ret    

	_016025_jump:
		call   _016e5a_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0ceb8e_data
		jmp    _015f50_jump

	_01603b_jump:
		call   _016e5a_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0ceb8c_data
		jmp    _015f62_jump

	_016051_jump:
		call   _016e5a_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0ceb8e_data
		jmp    _015fa7_jump

	_016067_jump:
		call   _016e5a_func
		sub    _0158b8_switch,%eax
		mov    %ax,_0ceb8c_data
		jmp    _015fb9_jump



_01607d_func:
		push   %bx
		pushfw 
		mov    %sp,%ax
		and    $0x00fffc,%sp
		pushf  
		pushf  
		pop    %ebx
		or     $0x040000,%ebx
		push   %ebx
		popf   
		pushf  
		pop    %ebx
		popf   
		mov    %ax,%sp
		test   $0x040000,%ebx
		je     _0160d7_jump
		pushf  
		pop    %eax
		mov    %eax,%ebx
		xor    $0x200000,%eax
		push   %eax
		popf   
		pushf  
		pop    %eax
		push   %ebx
		popf   
		and    $0x200000,%eax
		and    $0x200000,%ebx
		cmp    %ebx,%eax
		je     _0160d0_jump
		mov    $0x000001,%eax
		cpuid  
		shr    $0x000008,%ax
		and    $0x00000f,%eax
		jmp    _0160dc_jump

	_0160d0_jump:
		mov    $0x000004,%eax
		jmp    _0160dc_jump

	_0160d7_jump:
		mov    $0x000003,%eax

	_0160dc_jump:
		popfw  
		pop    %bx
		ret    

	_0160e1_jump:
		or     %al,(%eax)
		add    %al,(%eax)

	_0160e5_jump:
		cmp    %al,(%ecx)
		add    %al,(%eax)

_0160e9_switch:
		.long   0


	_0160ed_jump:
		enter  $0x000000,$0x000000



_0160f1_func:
		movl   $0x000008,_0160e1_jump
		movl   $0x000138,_0160e5_jump
		movl   $0x000000,_0160e9_switch
		movl   $0x0000c8,_0160ed_jump
		ret    



_01611a_func:
		push   %ebp
		push   %edi
		mov    _0160e1_jump,%ebp
		mov    %ebp,(%eax)
		mov    _0160e5_jump,%edi
		mov    %edi,(%ebx)
		mov    _0160e9_switch,%ebp
		mov    %ebp,(%ecx)
		mov    _0160ed_jump,%edi
		mov    %edi,(%edx)
		pop    %edi
		pop    %ebp
		ret    



_016157_func:
		cmp    $0x000000,%eax
		jge    _016161_jump
		mov    $0x000000,%eax

	_016161_jump:
		cmp    $0x000140,%eax
		jle    _01616d_jump
		mov    $0x000140,%eax

	_01616d_jump:
		mov    %eax,_0160e1_jump
		cmp    $0x000000,%ebx
		jge    _01617c_jump
		mov    $0x000000,%ebx

	_01617c_jump:
		cmp    $0x000140,%ebx
		jle    _016189_jump
		mov    $0x000140,%ebx

	_016189_jump:
		mov    %ebx,_0160e5_jump
		cmp    $0x000000,%ecx
		jge    _016199_jump
		mov    $0x000000,%ecx

	_016199_jump:
		cmp    $0x0000c8,%ecx
		jle    _0161a6_jump
		mov    $0x0000c8,%ecx

	_0161a6_jump:
		mov    %ecx,_0160e9_switch
		cmp    $0x000000,%edx
		jge    _0161b6_jump
		mov    $0x000000,%edx

	_0161b6_jump:
		cmp    $0x0000c8,%edx
		jle    _0161c3_jump
		mov    $0x0000c8,%edx

	_0161c3_jump:
		mov    %edx,_0160ed_jump
		ret    



_0161ca_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		cmp    _0160e1_jump,%eax
		jl     _016214_jump

	_0161dc_jump:
		add    %eax,%edx
		cmp    _0160e5_jump,%edx
		ja     _016200_jump

	_0161e6_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _0160e9_switch,%ebx
		jl     _016246_jump

	_0161f2_jump:
		add    %ebx,%edx
		cmp    _0160ed_jump,%edx
		ja     _016232_jump

	_0161fc_jump:
		clc    
		ret    

	_0161fe_jump:
		stc    
		ret    

	_016200_jump:
		cmp    _0160e5_jump,%eax
		jae    _0161fe_jump
		mov    _0160e5_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _0161e6_jump

	_016214_jump:
		sub    _0160e1_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _0161fe_jump
		and    $0x00ffff,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		add    %eax,%esi
		mov    _0160e1_jump,%eax
		jmp    _0161dc_jump

	_016232_jump:
		cmp    _0160ed_jump,%ebx
		jae    _0161fe_jump
		mov    _0160ed_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _0161fc_jump

	_016246_jump:
		add    %ebx,%edx
		cmp    _0160e9_switch,%edx
		jle    _0161fe_jump
		sub    _0160e9_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _092144_data,%eax
		mul    %bx
		add    %eax,%esi
		pop    %eax
		mov    _0160e9_switch,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _0161f2_jump



_016280_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		cmp    _0160e1_jump,%eax
		jl     _0162d1_jump

	_016292_jump:
		add    %eax,%edx
		cmp    _0160e5_jump,%edx
		ja     _0162b5_jump

	_01629c_jump:
		movzbl %ch,%edx
		cmp    _0160e9_switch,%ebx
		jl     _016301_jump

	_0162a7_jump:
		add    %ebx,%edx
		cmp    _0160ed_jump,%edx
		ja     _0162ed_jump

	_0162b1_jump:
		clc    
		ret    

	_0162b3_jump:
		stc    
		ret    

	_0162b5_jump:
		cmp    _0160e5_jump,%eax
		jae    _0162b3_jump
		mov    _0160e5_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		add    _092144_data,%esi
		sub    %edx,%esi
		jmp    _01629c_jump

	_0162d1_jump:
		sub    _0160e1_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _0162b3_jump
		and    $0x00ffff,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		mov    _0160e1_jump,%eax
		jmp    _016292_jump

	_0162ed_jump:
		cmp    _0160ed_jump,%ebx
		jae    _0162b3_jump
		mov    _0160ed_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _0162b1_jump

	_016301_jump:
		add    %ebx,%edx
		cmp    _0160e9_switch,%edx
		jle    _0162b3_jump
		sub    _0160e9_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _092144_data,%eax
		mul    %bx
		add    %eax,%esi
		pop    %eax
		mov    _0160e9_switch,%ebx
		xor    %edx,%edx
		mov    %ch,%dl
		jmp    _0162a7_jump

_01633b_switch:
		.long   0

_01633f_switch:
		.long   0




_016343_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		jmp    _01635a_jump



_01634f_func:
		call   _0161ca_func
		jb     _0164b5_jump

	_01635a_jump:
		push   %ebp
		mov    _092144_data,%edx
		mov    %edx,_01633b_switch
		add    _091e20_data(,%ebx,4),%edi
		movzbl %ch,%edx
		mov    _091e20_data(,%edx,4),%ebx
		add    %edi,%ebx
		and    $0x0000ff,%ecx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0163db_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_01633f_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi

	_0163b7_jump:
		xor    %ebp,%ebp

	_0163b9_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0163c3_jump
		mov    %ah,(%edi)

	_0163c3_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0163b9_jump
		add    _01633f_switch,%edi
		add    _01633b_switch,%esi
		cmp    %ebx,%edi
		jb     _0163b7_jump
		pop    %edi
		pop    %esi

	_0163db_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016426_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_01633f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0163ff_jump
		inc    %edi
		mov    $0x000001,%al

	_0163ff_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_016402_jump:
		xor    %ebp,%ebp

	_016404_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01640e_jump
		mov    %ah,(%edi)

	_01640e_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016404_jump
		add    _01633f_switch,%edi
		add    _01633b_switch,%esi
		cmp    %ebx,%edi
		jb     _016402_jump
		pop    %edi
		pop    %esi

	_016426_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016471_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_01633f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _01644a_jump
		inc    %edi
		mov    $0x000001,%al

	_01644a_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_01644d_jump:
		xor    %ebp,%ebp

	_01644f_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016459_jump
		mov    %ah,(%edi)

	_016459_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _01644f_jump
		add    _01633f_switch,%edi
		add    _01633b_switch,%esi
		cmp    %ebx,%edi
		jb     _01644d_jump
		pop    %edi
		pop    %esi

	_016471_jump:
		pop    %ecx
		inc    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0164b4_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_01633f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016491_jump
		inc    %edi
		mov    $0x000001,%al

	_016491_jump:
		out    %al,(%dx)

	_016492_jump:
		xor    %ebp,%ebp

	_016494_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01649e_jump
		mov    %ah,(%edi)

	_01649e_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016494_jump
		add    _01633f_switch,%edi
		add    _01633b_switch,%esi
		cmp    %ebx,%edi
		jb     _016492_jump

	_0164b4_jump:
		pop    %ebp

	_0164b5_jump:
		ret    



_0164b6_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		jmp    _0164cd_jump



_0164c2_func:
		call   _016280_func
		jb     _016633_jump

	_0164cd_jump:
		push   %ebp
		mov    _092144_data,%edx
		mov    %edx,_01633b_switch
		add    _091e20_data(,%ebx,4),%edi
		movzbl %ch,%edx
		mov    _091e20_data(,%edx,4),%ebx
		add    %edi,%ebx
		and    $0x0000ff,%ecx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		add    %ecx,%esi
		dec    %esi
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016553_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_01633f_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi

	_01652f_jump:
		xor    %ebp,%ebp

	_016531_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01653b_jump
		mov    %ah,(%edi)

	_01653b_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016531_jump
		add    _01633f_switch,%edi
		add    _01633b_switch,%esi
		cmp    %ebx,%edi
		jb     _01652f_jump
		pop    %edi
		pop    %esi

	_016553_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0165a0_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_01633f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016579_jump
		inc    %edi
		mov    $0x000001,%al

	_016579_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_01657c_jump:
		xor    %ebp,%ebp

	_01657e_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016588_jump
		mov    %ah,(%edi)

	_016588_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _01657e_jump
		add    _01633f_switch,%edi
		add    _01633b_switch,%esi
		cmp    %ebx,%edi
		jb     _01657c_jump
		pop    %edi
		pop    %esi

	_0165a0_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0165ed_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_01633f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0165c6_jump
		inc    %edi
		mov    $0x000001,%al

	_0165c6_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi

	_0165c9_jump:
		xor    %ebp,%ebp

	_0165cb_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0165d5_jump
		mov    %ah,(%edi)

	_0165d5_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0165cb_jump
		add    _01633f_switch,%edi
		add    _01633b_switch,%esi
		cmp    %ebx,%edi
		jb     _0165c9_jump
		pop    %edi
		pop    %esi

	_0165ed_jump:
		pop    %ecx
		dec    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016632_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_01633f_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _01660f_jump
		inc    %edi
		mov    $0x000001,%al

	_01660f_jump:
		out    %al,(%dx)

	_016610_jump:
		xor    %ebp,%ebp

	_016612_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01661c_jump
		mov    %ah,(%edi)

	_01661c_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016612_jump
		add    _01633f_switch,%edi
		add    _01633b_switch,%esi
		cmp    %ebx,%edi
		jb     _016610_jump

	_016632_jump:
		pop    %ebp

	_016633_jump:
		ret    

_016634_switch:
		.long   0

_016638_switch:
		.long   0




_01663c_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092140_data
		call   _0161ca_func
		jb     _0167d2_jump
		push   %ebp
		mov    _092144_data,%edx
		mov    %edx,_016634_switch
		xor    %edx,%edx
		add    _091e20_data(,%ebx,4),%edi
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		and    $0x0000ff,%ecx
		add    %edi,%ebx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0166df_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016638_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_0166b8_jump:
		xor    %ebp,%ebp

	_0166ba_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0166c6_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_0166c6_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0166ba_jump
		add    _016638_switch,%edi
		add    _016634_switch,%esi
		cmp    %ebx,%edi
		jb     _0166b8_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_0166df_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016733_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016638_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016703_jump
		inc    %edi
		mov    $0x000001,%al

	_016703_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_01670c_jump:
		xor    %ebp,%ebp

	_01670e_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01671a_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_01671a_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _01670e_jump
		add    _016638_switch,%edi
		add    _016634_switch,%esi
		cmp    %ebx,%edi
		jb     _01670c_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016733_jump:
		pop    %ecx
		inc    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016787_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016638_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016757_jump
		inc    %edi
		mov    $0x000001,%al

	_016757_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_016760_jump:
		xor    %ebp,%ebp

	_016762_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01676e_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_01676e_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _016762_jump
		add    _016638_switch,%edi
		add    _016634_switch,%esi
		cmp    %ebx,%edi
		jb     _016760_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016787_jump:
		pop    %ecx
		inc    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0167d1_jump
		mov    $0x000050,%ebp
		sub    %ecx,%ebp
		mov    %ebp,_016638_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0167a7_jump
		inc    %edi
		mov    $0x000001,%al

	_0167a7_jump:
		out    %al,(%dx)

	_0167a8_jump:
		xor    %ebp,%ebp
		mov    _092140_data,%eax

	_0167af_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0167bb_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_0167bb_jump:
		inc    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jb     _0167af_jump
		add    _016638_switch,%edi
		add    _016634_switch,%esi
		cmp    %ebx,%edi
		jb     _0167a8_jump

	_0167d1_jump:
		pop    %ebp

	_0167d2_jump:
		ret    



_0167d3_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092140_data
		call   _016280_func
		jb     _016974_jump
		push   %ebp
		mov    _092144_data,%edx
		mov    %edx,_016634_switch
		xor    %edx,%edx
		add    _091e20_data(,%ebx,4),%edi
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		and    $0x0000ff,%ecx
		add    %edi,%ebx
		push   %ecx
		mov    %eax,%ecx
		shr    $0x000002,%eax
		add    %eax,%edi
		and    $0x000003,%ecx
		mov    $0x000001,%ah
		shl    %cl,%ah
		pop    %ecx
		add    %ecx,%esi
		dec    %esi
		push   %ecx
		add    $0x000003,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _01687b_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016638_switch
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    %ah,%al
		inc    %edx
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_016854_jump:
		xor    %ebp,%ebp

	_016856_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _016862_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_016862_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016856_jump
		add    _016638_switch,%edi
		add    _016634_switch,%esi
		cmp    %ebx,%edi
		jb     _016854_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_01687b_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000002,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _0168d1_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016638_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0168a1_jump
		inc    %edi
		mov    $0x000001,%al

	_0168a1_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_0168aa_jump:
		xor    %ebp,%ebp

	_0168ac_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _0168b8_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_0168b8_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _0168ac_jump
		add    _016638_switch,%edi
		add    _016634_switch,%esi
		cmp    %ebx,%edi
		jb     _0168aa_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_0168d1_jump:
		pop    %ecx
		dec    %esi
		push   %ecx
		add    $0x000001,%ecx
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016927_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016638_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _0168f7_jump
		inc    %edi
		mov    $0x000001,%al

	_0168f7_jump:
		out    %al,(%dx)
		push   %esi
		push   %edi
		push   %eax
		mov    _092140_data,%eax

	_016900_jump:
		xor    %ebp,%ebp

	_016902_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01690e_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_01690e_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016902_jump
		add    _016638_switch,%edi
		add    _016634_switch,%esi
		cmp    %ebx,%edi
		jb     _016900_jump
		pop    %eax
		pop    %edi
		pop    %esi

	_016927_jump:
		pop    %ecx
		dec    %esi
		shr    $0x000002,%ecx
		cmp    $0x000000,%ecx
		jle    _016973_jump
		neg    %ecx
		mov    $0x000050,%ebp
		add    %ecx,%ebp
		mov    %ebp,_016638_switch
		add    %al,%al
		cmp    $0x000010,%al
		jne    _016949_jump
		inc    %edi
		mov    $0x000001,%al

	_016949_jump:
		out    %al,(%dx)
		mov    _092140_data,%eax

	_01694f_jump:
		xor    %ebp,%ebp

	_016951_jump:
		mov    (%esi,%ebp,4),%ah
		cmp    $0x0000a0,%ah
		jae    _01695d_jump
		or     %al,%ah
		mov    %ah,(%edi)

	_01695d_jump:
		dec    %ebp
		inc    %edi
		cmp    %ecx,%ebp
		jg     _016951_jump
		add    _016638_switch,%edi
		add    _016634_switch,%esi
		cmp    %ebx,%edi
		jb     _01694f_jump

	_016973_jump:
		pop    %ebp

	_016974_jump:
		ret    



_016975_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		jmp    _01698d_jump

	_016981_jump:
		call   _0161ca_func
		jb     _0169f9_jump
		cmp    $0x000000,%cl
		jbe    _0169f9_jump

	_01698d_jump:
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx
		xor    %eax,%eax

	_0169c2_jump:
		xor    %ebp,%ebp

	_0169c4_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _0169e1_jump
		mov    %al,(%edi,%ebp,1)
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _0169c4_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _0169c2_jump
		pop    %ebp
		ret    

	_0169e1_jump:
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		cmp    %ecx,%ebp
		jl     _0169c4_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _0169c2_jump
		pop    %ebp

	_0169f9_jump:
		ret    



_0169fa_func:
		call   _0161ca_func
		jb     _016a57_jump
		cmp    $0x000000,%cl
		jbe    _016a57_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx

	_016a39_jump:
		xor    %ebp,%ebp

	_016a3b_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x000000,%al
		je     _016a45_jump
		mov    %al,(%edi,%ebp,1)

	_016a45_jump:
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016a3b_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016a39_jump
		pop    %ebp

	_016a57_jump:
		ret    



_016a59_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_092144_data
		jmp    _016a71_jump

	_016a65_jump:
		call   _016280_func
		jb     _016ae4_jump
		cmp    $0x000000,%cl
		jbe    _016ae4_jump

	_016a71_jump:
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx
		xor    %eax,%eax

	_016aa6_jump:
		xor    %ebp,%ebp
		push   %edi

	_016aa9_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016ac9_jump
		mov    %al,-0x000001(%edi,%ecx,1)
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _016aa9_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016aa6_jump
		pop    %ebp
		ret    

	_016ac9_jump:
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		sub    %eax,%edi
		cmp    %ecx,%ebp
		jl     _016aa9_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016aa6_jump
		pop    %ebp

	_016ae4_jump:
		ret    



_016ae5_func:
		call   _016280_func
		jb     _016b46_jump
		cmp    $0x000000,%cl
		jbe    _016b46_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx

	_016b24_jump:
		xor    %ebp,%ebp
		push   %edi

	_016b27_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x000000,%al
		je     _016b32_jump
		mov    %al,-0x000001(%edi,%ecx,1)

	_016b32_jump:
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _016b27_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016b24_jump
		pop    %ebp

	_016b46_jump:
		ret    



_016b47_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092140_data
		call   _0161ca_func
		jb     _016be5_jump
		cmp    $0x000000,%cl
		jbe    _016be5_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx
		mov    _092140_data,%ah

	_016ba1_jump:
		xor    %ebp,%ebp

	_016ba3_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016bc2_jump
		or     %ah,%al
		mov    %al,(%edi,%ebp,1)
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016ba3_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016ba1_jump
		pop    %ebp
		ret    

	_016bc2_jump:
		and    $0x0000ff,%eax
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		mov    _092140_data,%ah
		cmp    %ecx,%ebp
		jl     _016ba3_jump
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016ba1_jump
		pop    %ebp

	_016be5_jump:
		ret    



_016be6_func:
		lea    0x000000(,%edx,8),%edx
		mov    %edx,_092140_data
		call   _016280_func
		jb     _016c8b_jump
		cmp    $0x000000,%cl
		jbe    _016c8b_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		add    %eax,%edi
		and    $0x0000ff,%ecx
		push   %ebp
		mov    _092144_data,%edx
		mov    _092140_data,%ah

	_016c40_jump:
		xor    %ebp,%ebp
		push   %edi

	_016c43_jump:
		mov    (%esi,%ebp,1),%al
		cmp    $0x0000a0,%al
		jae    _016c65_jump
		or     %ah,%al
		mov    %al,-0x000001(%edi,%ecx,1)
		inc    %ebp
		dec    %edi
		cmp    %ecx,%ebp
		jl     _016c43_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016c40_jump
		pop    %ebp
		ret    

	_016c65_jump:
		and    $0x0000ff,%eax
		sub    $0x0000a0,%eax
		add    %eax,%ebp
		sub    %eax,%edi
		mov    _092140_data,%ah
		cmp    %ecx,%ebp
		jl     _016c43_jump
		pop    %edi
		add    $0x000140,%edi
		add    %edx,%esi
		cmp    %ebx,%edi
		jb     _016c40_jump
		pop    %ebp

	_016c8b_jump:
		ret    

_016c8c_switch:
		.long   0




_016c90_func:
		xor    %edx,%edx
		mov    %cl,%dl
		mov    %edx,_016c8c_switch
		cmp    _0160e1_jump,%eax
		jl     _016cde_jump
		add    %eax,%edx
		cmp    _0160e5_jump,%edx
		ja     _016cca_jump
		shr    $0x000002,%cl

	_016caf_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		cmp    _0160e9_switch,%ebx
		jl     _016d18_jump

	_016cbb_jump:
		add    %ebx,%edx
		cmp    _0160ed_jump,%edx
		ja     _016d04_jump

	_016cc5_jump:
		clc    
		ret    

	_016cc7_jump:
		pop    %eax

	_016cc8_jump:
		stc    
		ret    

	_016cca_jump:
		cmp    _0160e5_jump,%eax
		jae    _016cc8_jump
		mov    _0160e5_jump,%edx
		sub    %eax,%edx
		mov    %dl,%cl
		jmp    _016d52_jump

	_016cde_jump:
		push   %eax
		sub    _0160e1_jump,%eax
		neg    %eax
		cmp    %eax,%edx
		jle    _016cc7_jump
		and    $0x00fffc,%eax
		sub    %eax,%edx
		mov    %dl,%cl
		mov    %eax,%edx
		pop    %eax
		add    %edx,%eax
		add    %edx,0x000004(%esp)
		add    %edx,%esi
		shr    $0x000002,%cl
		jmp    _016caf_jump

	_016d04_jump:
		cmp    _0160ed_jump,%ebx
		jae    _016cc8_jump
		mov    _0160ed_jump,%edx
		sub    %ebx,%edx
		mov    %dl,%ch
		jmp    _016cc5_jump

	_016d18_jump:
		add    %ebx,%edx
		cmp    _0160e9_switch,%edx
		jle    _016cc8_jump
		sub    _0160e9_switch,%ebx
		movzbl %ch,%edx
		neg    %ebx
		and    $0x00ffff,%ebx
		sub    %ebx,%edx
		mov    %dl,%ch
		push   %eax
		mov    _016c8c_switch,%eax
		mul    %bx
		add    %eax,%esi
		add    %eax,0x000008(%esp)
		pop    %eax
		mov    _0160e9_switch,%ebx
		jmp    _016cbb_jump

	_016d52_jump:
		xor    %edx,%edx
		mov    %cl,%dl
		shr    $0x000002,%cl
		and    $0x000003,%edx
		je     _016caf_jump
		inc    %cl
		jmp    _016caf_jump



_016d6a_func:
		sub    $0x00000c,%esp
		mov    %edx,(%esp)
		call   _016c90_func
		jb     _016de3_jump
		cmp    $0x000000,%cl
		jbe    _016de3_jump
		mov    _091e20_data(,%ebx,4),%edx
		lea    0x000000(,%edx,4),%edx
		add    %edx,%edi
		xor    %edx,%edx
		mov    %ch,%dl
		mov    _091e20_data(,%edx,4),%ebx
		lea    0x000000(,%ebx,4),%ebx
		add    %edi,%ebx
		mov    %ebx,0x000004(%esp)
		add    %eax,%edi
		mov    (%esp),%edx
		and    $0x0000ff,%ecx
		push   %ebp
		xor    %ebx,%ebx

	_016db2_jump:
		xor    %ebp,%ebp

	_016db4_jump:
		mov    (%esi,%ebp,4),%eax
		cmp    $0x000000,%eax
		je     _016dc5_jump
		mov    (%edx,%ebp,4),%ebx
		and    %ebx,(%edi,%ebp,4)
		or     %eax,(%edi,%ebp,4)

	_016dc5_jump:
		inc    %ebp
		cmp    %ecx,%ebp
		jb     _016db4_jump
		add    $0x000140,%edi
		add    _016c8c_switch,%esi
		add    _016c8c_switch,%edx
		cmp    0x000008(%esp),%edi
		jb     _016db2_jump
		pop    %ebp

	_016de3_jump:
		add    $0x00000c,%esp
		ret    



_016de7_func:
		push   %edx
		push   %eax
		mov    $0x0003da,%dx

	_016ded_jump:
		in     (%dx),%al
		test   $0x000008,%ax
		je     _016ded_jump
		pop    %eax
		pop    %edx
		ret    



_016df7_func:
		push   %edx
		push   %eax
		mov    $0x0003da,%dx

	_016dfd_jump:
		in     (%dx),%al
		test   $0x000008,%ax
		jne    _016dfd_jump
		pop    %eax
		pop    %edx
		ret    



_016e07_func:
		movl   $0x000000,_092158_data
		movl   $0x000000,_092154_data
		movl   $0x000000,_092150_data
		push   %eax
		in     $0x000061,%al
		or     $0x000003,%al
		out    %al,$0x000061
		movl   $0x00ffff,_092148_data
		mov    $0x0000b4,%al
		out    %al,$0x000043
		mov    _092148_data,%eax
		out    %al,$0x000042
		mov    %ah,%al
		out    %al,$0x000042
		pop    %eax
		ret    



_016e47_func:
		push   %eax
		in     $0x000061,%al
		and    $0x0000fc,%al
		out    %al,$0x000061
		mov    $0x0000b4,%al
		out    %al,$0x000043
		mov    $0x000000,%al
		out    %al,$0x000042
		out    %al,$0x000042
		pop    %eax
		ret    



_016e5a_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000080,%eax
		out    %al,$0x000043
		nop
		in     $0x000042,%al
		mov    %al,%ah
		in     $0x000042,%al
		xchg   %al,%ah
		mov    _092148_data,%ebx
		sub    %eax,%ebx
		mov    %ebx,%eax
		cmp    _092150_data,%eax
		jg     _016ea6_jump
		jne    _016e9a_jump
		mov    _092158_data,%edx
		inc    %edx
		cmp    $0x000014,%edx
		jle    _016e9a_jump
		movl   $0x000000,_092148_data
		xor    %edx,%edx

	_016e9a_jump:
		mov    _092148_data,%ebx
		add    %ebx,_092154_data

	_016ea6_jump:
		mov    %eax,_092150_data
		add    _092154_data,%eax
		mov    %edx,_092158_data
		pop    %edx
		pop    %ebx
		ret    



_016eba_func:
		mov    $0x000001,%ecx
		cmpl   $0x000000,_092148_data
		je     _016ed4_jump
		dec    %ecx
		dec    %ecx

	_016eca_jump:
		call   _016e5a_func
		inc    %ecx
		cmp    %ebx,%eax
		jle    _016eca_jump

	_016ed4_jump:
		ret    



_016ed5_func:
		call   _016e07_func
		ret    



_016ee0_func:
		push   %esi
		push   %edi
		mov    %ebx,%esi
		xor    %ah,%ah
		xor    %dh,%dh
		and    $0x00000f,%al
		and    $0x00000f,%dl
		mov    %ax,_0c1920_data
		mov    %dx,_0c1922_data
		mov    $0x000010,%eax
		mov    _0c1920_data,%edx
		mov    _0c191e_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sub    %edx,%eax
		mov    %ebx,%edx
		lea    0x000000(,%eax,4),%edi
		sar    $0x00001f,%edx
		add    %eax,%edi
		mov    %ebx,%eax
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0ccba4_data,%edx
		shl    $0x000004,%edi
		sub    %eax,%edx
		lea    -0x0004ff(%edx,%edi,1),%eax
		mov    %eax,_0c1924_data
		cmpb   $0x000000,_0cee61_data
		je     _016f55_jump
		xor    %edx,%edx
		mov    %edx,_0c1928_data
		jmp    _016f62_jump

	_016f55_jump:
		movswl %si,%eax
		add    $0x000010,%eax
		sub    %ebx,%eax
		mov    %eax,_0c1928_data

	_016f62_jump:
		mov    _0c1920_data,%edx
		movswl %cx,%eax
		sar    $0x000010,%edx
		add    $0x000010,%eax
		sub    %edx,%eax
		mov    %eax,_0c192c_data
		mov    _0c1928_data,%eax
		mov    %eax,%edx
		mov    $0x000004,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0ccc24_data,%ebx
		shr    $0x000002,%ebx
		imul   %edx,%ebx
		mov    _0c1928_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		add    _0ccc30_data,%eax
		mov    _0ccc0c_data,%esi
		add    %eax,%ebx
		mov    _0c192c_data,%eax
		imul   %esi,%eax
		add    %eax,%ebx
		mov    _0c1920_data,%ax
		xor    %ah,%ah
		and    $0x000003,%al
		movswl %ax,%ecx
		mov    $0x000003,%eax
		sub    %ecx,%eax
		mov    %eax,%ecx
		mov    $0x000001,%eax
		shl    %cl,%eax
		mov    %ebx,_0c1930_data
		mov    %eax,_0c1934_data
		pop    %edi
		pop    %esi
		ret    



_016fec_func:
		push   %edx
		mov    %al,%dl
		cmpb   $0x000000,_0cee62_data
		je     _017006_jump
		cmpb   $0x000001,_0ceea6_data
		je     _017006_jump
		call   _070008_func

	_017006_jump:
		mov    $_0ca300_data,%eax
		call   _040ec0_func
		cmpb   $0x000000,_0ceea6_data
		jne    _01702e_jump
		call   _058838_func
		cmpb   $0x000000,_0ceea6_data
		jne    _017033_jump
		call   _058a18_func
		jmp    _017033_jump

	_01702e_jump:
		call   _059410_func

	_017033_jump:
		call   _0465c0_func
		test   %dl,%dl
		jne    _017046_jump
		mov    $_0c1a00_data,%eax
		call   _05a6c4_func

	_017046_jump:
		pop    %edx
		ret    



_017048_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,(%esp)
		mov    $0x000001,%ah
		xor    %dl,%dl
		mov    %ah,_0ceedd_data
		call   _059550_func
		mov    %dl,_0cee9f_data
		xor    %edx,%edx
		mov    %edx,_0cc3d8_data
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		mov    %dx,_0ceb8a_data
		mov    _0cee97_data,%dh
		mov    %bx,_0ceb88_data
		test   %dh,%dh
		je     _017095_jump
		call   _0702d8_func

	_017095_jump:
		cmpb   $0x000000,_0ceec4_data
		je     _0175db_jump
		cmpw   $0x000000,_0cecc4_data
		jne    _0175db_jump
		cmpw   $0x000000,_0cecda_data
		jne    _0175db_jump
		cmpb   $0x000002,_0cee79_data
		je     _0175db_jump
		call   _016ed5_func
		cmpb   $0x000000,_0cee92_data
		je     _0170de_jump
		call   _016de7_func

	_0170de_jump:
		cmpb   $0x000000,_0cee93_data
		je     _0170f0_jump
		call   _016e5a_func
		mov    %eax,0x000004(%esp)

	_0170f0_jump:
		cmpb   $0x000000,_0cee93_data
		je     _017106_jump
		mov    0x000004(%esp),%ebx
		movzwl _0cec38_data,%ebp
		add    %ebx,%ebp

	_017106_jump:
		call   _053818_func
		cmpb   $0x000020,_0ceec4_data
		jb     _017122_jump
		cmpb   $0x000000,_0ceea6_data
		jne    _017122_jump
		call   _03c4f8_func

	_017122_jump:
		call   _03b6bc_func
		cmpw   $0x000000,_095b4e_data
		jne    _0171e1_jump
		cmpw   $0x000000,_095b50_data
		jne    _0171e1_jump
		mov    _0cc4a4_data,%eax
		mov    _0cc4a4_data,%edx
		shl    $0x000008,%eax
		shl    $0x000006,%edx
		mov    _0cc49c_data,%ecx
		add    %edx,%eax
		mov    _0cee69_data,%bh
		add    %ecx,%eax
		cmp    $0x000001,%bh
		jne    _0171af_jump
		cmpb   $0x000000,_095b9a_data
		je     _0171af_jump
		mov    _0cc4a0_data,%edx
		mov    _0cc4a4_data,%ebx
		mov    _0cc49c_data,%ecx
		mov    _095b10_data,%edi
		mov    _0cc534_data,%esi
		sub    %ebx,%edx
		add    %eax,%edi
		mov    %edx,%ebx
		mov    _0cc498_data,%edx
		add    %eax,%esi
		sub    %ecx,%edx
		mov    %ebx,%eax
		mov    %edx,%ecx
		call   *_0cc510_data
		jmp    _01722c_jump

	_0171af_jump:
		mov    _0cc4a0_data,%ecx
		mov    _0cc4a4_data,%esi
		mov    _0cc498_data,%edx
		mov    _0cc49c_data,%edi
		sub    %esi,%ecx
		sub    %edi,%edx
		mov    _095b10_data,%edi
		mov    _0cc534_data,%esi
		add    %eax,%edi
		add    %eax,%esi
		mov    %ecx,%eax
		mov    %edx,%ecx
		jmp    _017227_jump

	_0171e1_jump:
		cmpb   $0x000001,_0cee69_data
		jne    _017211_jump
		cmpb   $0x000000,_095b9a_data
		je     _017211_jump
		mov    $0x000140,%ecx
		mov    _0cc4a0_data,%eax
		mov    _095b10_data,%edi
		mov    _0cc534_data,%esi
		call   *_0cc510_data
		jmp    _01722c_jump

	_017211_jump:
		mov    $0x000140,%ecx
		mov    _0cc4a0_data,%eax
		mov    _095b10_data,%edi
		mov    _0cc534_data,%esi

	_017227_jump:
		call   _014bfb_func

	_01722c_jump:
		cmpb   $0x000000,_0cee93_data
		je     _01723a_jump
		call   _016e5a_func

	_01723a_jump:
		cmpb   $0x000000,_0cee97_data
		je     _017248_jump
		call   _0702d8_func

	_017248_jump:
		cmpb   $0x000000,_0cee69_data
		jne    _017256_jump
		call   _040b64_func

	_017256_jump:
		mov    _0cec2c_data,%dl
		xor    %ebx,%ebx

	_01725e_jump:
		mov    %ebx,%eax
		call   _016fec_func
		mov    _0cecc4_data,%cx
		cmp    %cx,%bx
		jne    _017286_jump
		cmp    _0cecda_data,%cx
		jne    _017286_jump
		cmp    _0ceec1_data,%cl
		jne    _017286_jump
		mov    $0x000001,%al
		jmp    _017288_jump

	_017286_jump:
		mov    %bl,%al

	_017288_jump:
		mov    %al,0x000008(%esp)
		test   %al,%al
		je     _017297_jump
		dec    %dl
		cmp    $0x0000ff,%dl
		jne    _01725e_jump

	_017297_jump:
		cmpb   $0x000000,_0cee93_data
		je     _0172a5_jump
		call   _016e5a_func

	_0172a5_jump:
		call   _046638_func
		cmpb   $0x000000,_095b56_data
		je     _017317_jump
		cmpb   $0x000001,_0cee64_data
		jne    _017317_jump
		mov    _0cecfe_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0cec2a_data,%bx
		mov    _0cec26_data,%dx
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		call   _074498_func
		xor    %eax,%eax
		mov    _0cc4a4_data,%cx
		mov    _0cc4a0_data,%ax
		xor    %ebx,%ebx
		push   %eax
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cc498_data,%ax
		mov    _0cc49c_data,%bx
		push   %eax
		xor    %eax,%eax
		mov    _0cec2a_data,%dx
		mov    _0cec26_data,%ax
		call   _073850_func
		jmp    _017329_jump

	_017317_jump:
		mov    _0ccba4_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e88,%ecx
		rep stos %eax,%es:(%edi)

	_017329_jump:
		cmpw   $0x000000,_0cec4a_data
		je     _01735a_jump
		mov    _0cc498_data,%edx
		mov    _0cc49c_data,%ecx
		mov    _0cc4a0_data,%ebx
		mov    _0cc4a4_data,%eax
		sub    $0x000004,%edx
		sub    $0x000006,%ebx
		call   _015587_func
		call   _019ab4_func

	_01735a_jump:
		mov    $_0c1a00_data,%edx
		mov    _0cc534_data,%eax
		call   _05afc0_func
		call   _01aaa0_func
		cmpb   $0x000000,_0cee93_data
		je     _01737c_jump
		call   _016e5a_func

	_01737c_jump:
		call   _0197b4_func
		cmpb   $0x000000,_0cee93_data
		je     _01738f_jump
		call   _016e5a_func

	_01738f_jump:
		call   _019e98_func
		xor    %eax,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    _0cc4a0_data,%ax
		xor    %edx,%edx
		push   %eax
		xor    %eax,%eax
		mov    _0cc4a4_data,%cx
		mov    _0cc498_data,%ax
		mov    _0cc49c_data,%bx
		push   %eax
		xor    %eax,%eax
		mov    _0cec2a_data,%dx
		mov    _0cec26_data,%ax
		call   _074158_func
		cmpw   $0x000000,_0cec4a_data
		je     _0173dd_jump
		call   _019c90_func

	_0173dd_jump:
		mov    _0cc534_data,%eax
		call   _046a14_func
		mov    _0cc498_data,%eax
		mov    _0cc49c_data,%esi
		sub    %esi,%eax
		lea    0x000004(%eax),%edx
		mov    _0cc4a0_data,%ecx
		mov    _0cc534_data,%eax
		mov    _0cc4a4_data,%edi
		lea    (%esi,%eax,1),%ebx
		mov    %edi,%eax
		sub    %edi,%ecx
		shl    $0x000008,%eax
		shl    $0x000006,%edi
		add    %ebx,%eax
		add    %eax,%edi
		sub    $0x000004,%edi
		call   _014c26_func
		cmpb   $0x000000,_0cee9c_data
		je     _017431_jump
		call   _01ab6c_func
		jmp    _01743b_jump

	_017431_jump:
		mov    _0ccd18_data,%eax
		call   _019220_func

	_01743b_jump:
		cmpb   $0x000000,_0cee58_data
		je     _017449_jump
		call   _0191e4_func

	_017449_jump:
		mov    _0ccd18_data,%eax
		call   _01b1bc_func
		cmpb   $0x000000,_0cee85_data
		je     _017461_jump
		call   _034db0_func

	_017461_jump:
		mov    $0x000001,%eax
		call   _0406e0_func
		test   %al,%al
		je     _0174ad_jump
		cmpw   $0x000000,_0ced22_data
		jne    _0174ad_jump
		cmpb   $0x000000,_095b4c_data
		jne    _0174ad_jump
		call   _0264c0_func
		test   %al,%al
		jne    _0174ad_jump
		cmpb   $0x000000,_0cee79_data
		jne    _0174ad_jump
		cmpb   $0x000000,_0ceea6_data
		jne    _0174ad_jump
		cmpb   $0x000040,_0ceec4_data
		jne    _0174ad_jump
		movb   $0x000001,_095b4c_data

	_0174ad_jump:
		call   _040784_func
		test   %ax,%ax
		jne    _0174fd_jump
		call   _040714_func
		test   %ax,%ax
		jne    _0174fd_jump
		call   _0407f4_func
		test   %ax,%ax
		jne    _0174fd_jump
		call   _040864_func
		test   %ax,%ax
		jne    _0174fd_jump
		call   _0408d4_func
		test   %ax,%ax
		jne    _0174fd_jump
		call   _040960_func
		test   %ax,%ax
		jne    _0174fd_jump
		call   _0409ec_func
		test   %ax,%ax
		jne    _0174fd_jump
		call   _040a78_func
		test   %ax,%ax
		je     _017505_jump

	_0174fd_jump:
		xor    %ecx,%ecx
		mov    %ecx,_0cc3d8_data

	_017505_jump:
		mov    _0cc3d8_data,%esi
		inc    %esi
		mov    %esi,_0cc3d8_data
		cmp    $0x000708,%esi
		jl     _017521_jump
		movb   $0x000002,_0cee7a_data

	_017521_jump:
		cmpl   $0x005460,_0cc3d8_data
		jl     _017534_jump
		movb   $0x000001,_0cee95_data

	_017534_jump:
		cmpb   $0x000000,_0cee95_data
		je     _017565_jump
		mov    _095b4c_data,%bl
		test   %bl,%bl
		jne    _017565_jump
		cmpb   $0x000041,_0ceecb_data
		jne    _01755f_jump
		xor    %edx,%edx
		call   _03771c_func
		mov    %edx,_0cc3d8_data
		jmp    _017565_jump

	_01755f_jump:
		mov    %bl,_0cee95_data

	_017565_jump:
		mov    (%esp),%eax
		call   _03637c_func
		cmpb   $0x000000,_0cee93_data
		je     _017095_jump
		cmpb   $0x000000,_0cee92_data
		je     _017095_jump
		cmpb   $0x000000,0x000008(%esp)
		je     _017095_jump
		mov    %ebp,%ebx
		call   _016eba_func
		test   %ecx,%ecx
		jne    _017095_jump
		mov    $0x000001,%eax
		call   _016fec_func
		mov    _0cdae8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0175bf_jump
		incw   _0cdaea_data

	_0175bf_jump:
		call   _046ad8_func
		cmpb   $0x000000,_0cee92_data
		je     _017095_jump
		call   _016df7_func
		jmp    _017095_jump

	_0175db_jump:
		xor    %dh,%dh
		mov    %dh,_0ceedd_data
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0175f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cee62_data
		je     _01760b_jump
		cmpb   $0x000001,_0ceea6_data
		je     _01760b_jump
		call   _070008_func

	_01760b_jump:
		mov    $_0ca300_data,%eax
		call   _040ec0_func
		cmpb   $0x000000,_0ceea6_data
		jne    _017633_jump
		call   _058838_func
		cmpb   $0x000000,_0ceea6_data
		jne    _017638_jump
		call   _058a18_func
		jmp    _017638_jump

	_017633_jump:
		call   _059410_func

	_017638_jump:
		cmpb   $0x000000,_0ceea6_data
		jne    _017669_jump
		mov    _0cecee_data,%ecx
		mov    _0cecf2_data,%ebx
		mov    _0cece8_data,%edx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03a954_func

	_017669_jump:
		cmpb   $0x000001,_0cee64_data
		jne    _017696_jump
		call   _047304_func
		mov    _0cec2e_data,%bx
		test   %bx,%bx
		jge    _01769f_jump
		mov    _0cec2a_data,%ax
		mov    %ebx,%ecx
		add    %eax,%ecx
		mov    %cx,_0cec2e_data
		jmp    _01769f_jump

	_017696_jump:
		xor    %edx,%edx
		mov    %dx,_0cec2e_data

	_01769f_jump:
		cmpb   $0x000000,_095b56_data
		je     _0176f1_jump
		cmpb   $0x000001,_0cee64_data
		jne    _0176f1_jump
		mov    _0cecfe_data,%esi
		sar    $0x000010,%esi
		mov    $0x000003,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %eax,%edx
		mov    _0cec26_data,%bx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0cec2c_data,%ecx
		sar    $0x000010,%ecx
		movswl %dx,%ebx
		mov    _0cece8_data,%edx
		mov    %esi,%eax
		sar    $0x000010,%edx
		jmp    _017706_jump

	_0176f1_jump:
		mov    _0cece8_data,%edx
		mov    _0cecfe_data,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax

	_017706_jump:
		call   _016ee0_func
		mov    _0cece8_data,%edx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03b1b0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_017728_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,(%esp)
		mov    $0x000001,%dl
		xor    %ah,%ah
		xor    %ebx,%ebx
		mov    %ah,0x000008(%esp)
		mov    %dl,_0ceedd_data
		xor    %dh,%dh
		call   _059550_func
		mov    %dh,_0cee9f_data
		xor    %edx,%edx
		mov    %bx,_0ceb88_data
		mov    %edx,_0cc3d8_data
		mov    $0x000001,%edx
		mov    _0cee97_data,%bl
		mov    %dx,_0ceb8a_data
		test   %bl,%bl
		je     _01777b_jump
		call   _0702d8_func

	_01777b_jump:
		cmpb   $0x000000,_0ceec4_data
		je     _017b8a_jump
		cmpw   $0x000000,_0cecc4_data
		jne    _017b8a_jump
		cmpw   $0x000000,_0cecda_data
		jne    _017b8a_jump
		cmpb   $0x000002,_0cee79_data
		je     _017b8a_jump
		call   _016ed5_func
		call   _03a350_func
		cmpb   $0x000000,_0cee93_data
		je     _0177cd_jump
		call   _016e5a_func
		mov    %eax,0x000004(%esp)

	_0177cd_jump:
		cmpb   $0x000000,_0cee93_data
		je     _0177e3_jump
		mov    0x000004(%esp),%ebx
		movzwl _0cec38_data,%ebp
		add    %ebx,%ebp

	_0177e3_jump:
		call   _053818_func
		cmpb   $0x000020,_0ceec4_data
		jb     _0177ff_jump
		cmpb   $0x000000,_0ceea6_data
		jne    _0177ff_jump
		call   _03c4f8_func

	_0177ff_jump:
		call   _03b6bc_func
		cmpb   $0x000000,_0cee97_data
		je     _017812_jump
		call   _0702d8_func

	_017812_jump:
		cmpl   $0x000001,_0ccd14_data
		jne    _017831_jump
		mov    _0cece8_data,%edx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03a614_func

	_017831_jump:
		call   _040b64_func
		mov    _0cec2c_data,%dl
		xor    %ebx,%ebx

	_01783e_jump:
		call   _0175f0_func
		mov    _0cecc4_data,%di
		cmp    %di,%bx
		jne    _017864_jump
		cmp    _0cecda_data,%di
		jne    _017864_jump
		cmp    _0ceec1_data,%bl
		jne    _017864_jump
		mov    $0x000001,%al
		jmp    _017866_jump

	_017864_jump:
		mov    %bl,%al

	_017866_jump:
		mov    %al,0x00000c(%esp)
		test   %al,%al
		je     _017875_jump
		dec    %dl
		cmp    $0x0000ff,%dl
		jne    _01783e_jump

	_017875_jump:
		cmpb   $0x000000,_0cee93_data
		je     _017883_jump
		call   _016e5a_func

	_017883_jump:
		cmpb   $0x000000,_095b56_data
		je     _0178ad_jump
		cmpb   $0x000001,_0cee64_data
		jne    _0178ad_jump
		mov    _0cece8_data,%edx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03abf0_func
		jmp    _0178f4_jump

	_0178ad_jump:
		cmpb   $0x000000,_095b56_data
		je     _0178d7_jump
		cmpb   $0x000002,_0cee64_data
		jne    _0178d7_jump
		mov    _0cece8_data,%edx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03abf0_func
		jmp    _0178f4_jump

	_0178d7_jump:
		mov    _0ccba4_data,%edi
		mov    $0x0003ce,%edx
		mov    $0x000a04,%ax
		out    %ax,(%dx)
		mov    $0x000000,%eax
		mov    $0x000fa0,%ecx
		rep stos %eax,%es:(%edi)

	_0178f4_jump:
		cmpw   $0x000000,_0cec4a_data
		je     _017903_jump
		call   _019ab4_func

	_017903_jump:
		mov    _0cece8_data,%edx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03acb8_func
		call   _01aaa0_func
		cmpb   $0x000000,_0cee93_data
		je     _01792c_jump
		call   _016e5a_func

	_01792c_jump:
		call   _0197b4_func
		cmpb   $0x000000,_0cee93_data
		je     _01793f_jump
		call   _016e5a_func

	_01793f_jump:
		call   _019e98_func
		cmpw   $0x000000,_0cec4a_data
		je     _017953_jump
		call   _019c90_func

	_017953_jump:
		cmpb   $0x000000,_0cee9c_data
		je     _017963_jump
		call   _01ab6c_func
		jmp    _01796d_jump

	_017963_jump:
		mov    _0ccd18_data,%eax
		call   _019220_func

	_01796d_jump:
		cmpb   $0x000000,_0cee58_data
		je     _01797b_jump
		call   _0191e4_func

	_01797b_jump:
		mov    _0ccd18_data,%eax
		call   _01b1bc_func
		cmpb   $0x000000,_0cee5d_data
		je     _01799b_jump
		mov    _0ccba4_data,%edi
		call   _0144c0_func
		jmp    _0179a6_jump

	_01799b_jump:
		mov    _0ccba4_data,%edi
		call   _014456_func

	_0179a6_jump:
		cmpb   $0x000000,_0cee85_data
		je     _0179f9_jump
		call   _034db0_func
		cmpb   $0x000000,_095b56_data
		je     _0179cd_jump
		cmpb   $0x000002,_0cee64_data
		jne    _0179cd_jump
		movb   $0x000001,0x000008(%esp)
		jmp    _0179f9_jump

	_0179cd_jump:
		cmpb   $0x000000,_095b56_data
		je     _0179f9_jump
		cmpb   $0x000001,_0cee5d_data
		jne    _0179f9_jump
		mov    _0ccc24_data,%edx
		mov    _0ccc0c_data,%ebx
		mov    _0ccc30_data,%esi
		shr    $0x000002,%edx
		call   _01268a_func

	_0179f9_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _017a69_jump
		mov    _0cee5d_data,%eax
		sar    $0x000018,%eax
		mov    _0ce38d_data(%eax),%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		je     _017a63_jump
		call   _01cb80_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _045e88_func
		mov    %eax,_0ccc1c_data
		mov    _0cee5d_data,%eax
		sar    $0x000018,%eax
		mov    _0ce38d_data(%eax),%eax
		sar    $0x000018,%eax
		call   _0458a4_func
		mov    _0ccc24_data,%edx
		mov    _0ccc0c_data,%ebx
		mov    _0ccc30_data,%esi
		shr    $0x000002,%edx
		call   _01268a_func
		xor    %esi,%esi
		mov    %esi,_0cccfc_data

	_017a63_jump:
		xor    %al,%al
		mov    %al,0x000008(%esp)

	_017a69_jump:
		call   _040784_func
		test   %ax,%ax
		jne    _017ab9_jump
		call   _040714_func
		test   %ax,%ax
		jne    _017ab9_jump
		call   _0407f4_func
		test   %ax,%ax
		jne    _017ab9_jump
		call   _040864_func
		test   %ax,%ax
		jne    _017ab9_jump
		call   _0408d4_func
		test   %ax,%ax
		jne    _017ab9_jump
		call   _040960_func
		test   %ax,%ax
		jne    _017ab9_jump
		call   _0409ec_func
		test   %ax,%ax
		jne    _017ab9_jump
		call   _040a78_func
		test   %ax,%ax
		je     _017ac1_jump

	_017ab9_jump:
		xor    %edi,%edi
		mov    %edi,_0cc3d8_data

	_017ac1_jump:
		mov    _0cc3d8_data,%eax
		inc    %eax
		mov    %eax,_0cc3d8_data
		cmp    $0x000708,%eax
		jl     _017ada_jump
		movb   $0x000002,_0cee7a_data

	_017ada_jump:
		cmpl   $0x005460,_0cc3d8_data
		jl     _017aed_jump
		movb   $0x000001,_0cee95_data

	_017aed_jump:
		cmpb   $0x000000,_0cee95_data
		je     _017b1e_jump
		mov    _095b4c_data,%bl
		test   %bl,%bl
		jne    _017b1e_jump
		cmpb   $0x000041,_0ceecb_data
		jne    _017b18_jump
		xor    %ecx,%ecx
		call   _03771c_func
		mov    %ecx,_0cc3d8_data
		jmp    _017b1e_jump

	_017b18_jump:
		mov    %bl,_0cee95_data

	_017b1e_jump:
		mov    (%esp),%eax
		call   _03637c_func
		cmpb   $0x000000,_0cee93_data
		je     _01777b_jump
		cmpb   $0x000000,_0cee92_data
		je     _01777b_jump
		cmpb   $0x000000,0x00000c(%esp)
		je     _01777b_jump
		mov    %ebp,%ebx
		call   _016eba_func
		test   %ecx,%ecx
		jne    _01777b_jump
		call   _0175f0_func
		mov    _0cdae8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _017b73_jump
		incw   _0cdaea_data

	_017b73_jump:
		cmpb   $0x000000,_0cee92_data
		je     _01777b_jump
		call   _016df7_func
		jmp    _01777b_jump

	_017b8a_jump:
		xor    %dh,%dh
		mov    %dh,_0ceedd_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_017cbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		call   _07afc0_func
		mov    $0x3eb00000,%ecx
		mov    %eax,%esi
		xor    %ebx,%ebx
		call   _07b8ff_func
		call   _07baef_func
		push   %edx
		push   %eax
		push   $_0c00b0_data
		call   _07bc8c_func
		mov    _0cee6a_data,%al
		add    $0x00000c,%esp
		cmp    $0x000003,%al
		jb     _017d27_jump
		jbe    _017cfa_jump
		cmp    $0x000004,%al
		je     _017d20_jump
		jmp    _017d27_jump

	_017cfa_jump:
		push   $_0c00d4_data
		call   _07bc8c_func
		add    $0x000004,%esp
		push   $_0c00f0_data
		call   _07bc8c_func
		add    $0x000004,%esp
		mov    $0xffffffff,%eax
		call   _07bcaf_func
		jmp    _017d5f_jump

	_017d20_jump:
		push   $_0c0110_data
		jmp    _017d57_jump

	_017d27_jump:
		mov    _0cee6a_data,%ah
		cmp    $0x000005,%ah
		jne    _017d39_jump
		push   $_0c012c_data
		jmp    _017d57_jump

	_017d39_jump:
		jbe    _017d52_jump
		xor    %eax,%eax
		mov    _0cee6a_data,%al
		push   %eax
		push   $_0c014c_data
		call   _07bc8c_func
		add    $0x000008,%esp
		jmp    _017d5f_jump

	_017d52_jump:
		push   $_0c0170_data

	_017d57_jump:
		call   _07bc8c_func
		add    $0x000004,%esp

	_017d5f_jump:
		mov    _0cee5c_data,%al
		cmp    $0x000081,%al
		jb     _017d77_jump
		jbe    _017d93_jump
		cmp    $0x000082,%al
		jbe    _017da2_jump
		cmp    $0x000083,%al
		je     _017dc0_jump
		jmp    _017df9_jump

	_017d77_jump:
		test   %al,%al
		jbe    _017d84_jump
		cmp    $0x000001,%al
		je     _017db1_jump
		jmp    _017df9_jump

	_017d84_jump:
		push   $_0c0190_data
		call   _07bc8c_func
		add    $0x000004,%esp
		jmp    _017df9_jump

	_017d93_jump:
		push   $_0c01a8_data
		call   _07bc8c_func
		add    $0x000004,%esp
		jmp    _017df9_jump

	_017da2_jump:
		push   $_0c01c8_data
		call   _07bc8c_func
		add    $0x000004,%esp
		jmp    _017df9_jump

	_017db1_jump:
		push   $_0c01ec_data
		call   _07bc8c_func
		add    $0x000004,%esp
		jmp    _017df9_jump

	_017dc0_jump:
		mov    _0cee57_data,%dh
		cmp    $0x000004,%dh
		jne    _017ddf_jump
		xor    %eax,%eax
		mov    _0cee56_data,%al
		push   %eax
		xor    %eax,%eax
		mov    %dh,%al
		push   %eax
		push   $_0c020c_data
		jmp    _017df1_jump

	_017ddf_jump:
		xor    %eax,%eax
		mov    _0cee56_data,%al
		push   %eax
		xor    %eax,%eax
		mov    %dh,%al
		push   %eax
		push   $_0c0224_data

	_017df1_jump:
		call   _07bc8c_func
		add    $0x00000c,%esp

	_017df9_jump:
		xor    %bl,%bl
		mov    %bl,_0cee5d_data
		cmp    $0x200000,%esi
		jae    _017e18_jump
		mov    $_0c0240_data,%eax
		call   _01f3a4_func
		jmp    _017ef6_jump

	_017e18_jump:
		cmp    $0x300000,%esi
		jb     _017e29_jump
		cmpb   $0x000004,_0cee6a_data
		ja     _017e93_jump

	_017e29_jump:
		mov    $0x000001,%al
		mov    $0x000002,%bh
		mov    $0x007000,%ebp
		xor    %cl,%cl
		mov    $0x062c00,%edx
		mov    %cl,_0cee77_data
		mov    %cl,_0cee76_data
		mov    %al,_0cee62_data
		mov    %al,_0cee5e_data
		mov    %cl,_0cee63_data
		mov    %al,_095b15_data
		mov    %al,_0cee5d_data
		mov    %bh,_0cee64_data
		mov    %ebp,_0cccb4_data
		mov    %edx,_0cccec_data
		mov    $0x04ec00,%eax
		mov    $0x03b800,%ebx
		mov    $0x0d0c00,%ecx
		mov    %eax,_0ccce8_data
		mov    %ebx,_0ccce0_data
		mov    %ecx,_0ccce4_data
		jmp    _017ef6_jump

	_017e93_jump:
		mov    $0x000001,%cl
		mov    $0x022000,%edx
		mov    $0x058400,%esi
		mov    $0x0d0c00,%edi
		mov    %bl,_0cee76_data
		mov    %bl,_0cee63_data
		mov    %bl,_095b15_data
		mov    $_04d800_jump,%ebx
		mov    %cl,_0cee77_data
		mov    %cl,_0cee62_data
		mov    %cl,_0cee5e_data
		mov    %cl,_0cee64_data
		mov    %edx,_0cccb4_data
		mov    %esi,_0ccce0_data
		mov    %edi,_0ccce4_data
		mov    $0x0f4c00,%ecx
		mov    %ebx,_0ccce8_data
		mov    %ecx,_0cccec_data

	_017ef6_jump:
		cmpb   $0x000000,_0cee62_data
		je     _017fb1_jump
		push   $_0c0254_data
		call   _07bc8c_func
		add    $0x000004,%esp
		call   _03d4f0_func
		test   %eax,%eax
		je     _017f27_jump
		xor    %ch,%ch
		mov    %ch,_0cee5e_data
		mov    %ch,_0cee62_data

	_017f27_jump:
		cmpb   $0x000000,_0cee62_data
		je     _017f47_jump
		call   _03d560_func
		test   %eax,%eax
		je     _017f47_jump
		xor    %dl,%dl
		mov    %dl,_0cee5e_data
		mov    %dl,_0cee62_data

	_017f47_jump:
		cmpb   $0x000000,_0cee62_data
		je     _017fa4_jump
		call   _03da2c_func
		push   %eax
		push   $_0c0270_data
		call   _07bc8c_func
		add    $0x000008,%esp
		call   _03da34_func
		mov    (%eax),%esi
		push   %esi
		push   $_0c0288_data
		call   _07bc8c_func
		add    $0x000008,%esp
		call   _03da3c_func
		mov    (%eax),%edi
		push   %edi
		push   $_0c0298_data
		call   _07bc8c_func
		add    $0x000008,%esp
		call   _03da44_func
		mov    (%eax),%ebp
		push   %ebp
		push   $_0c02a8_data
		call   _07bc8c_func
		add    $0x000008,%esp
		jmp    _017fb1_jump

	_017fa4_jump:
		push   $_0c02b8_data
		call   _07bc8c_func
		add    $0x000004,%esp

	_017fb1_jump:
		push   $_0c02d8_data
		call   _07bc8c_func
		mov    _0cee77_data,%bh
		add    $0x000004,%esp
		test   %bh,%bh
		je     _017fcf_jump
		push   $_0c02dc_data
		jmp    _017fd4_jump

	_017fcf_jump:
		push   $_0c02fc_data

	_017fd4_jump:
		call   _07bc8c_func
		add    $0x000004,%esp
		cmpb   $0x000000,_0cee62_data
		je     _017ffc_jump
		cmpb   $0x000000,_0cee97_data
		je     _017ff5_jump
		push   $_0c0314_data
		jmp    _018011_jump

	_017ff5_jump:
		push   $_0c032c_data
		jmp    _018011_jump

	_017ffc_jump:
		cmpb   $0x000000,_0cee97_data
		je     _01800c_jump
		push   $_0c0348_data
		jmp    _018011_jump

	_01800c_jump:
		push   $_0c0364_data

	_018011_jump:
		call   _07bc8c_func
		add    $0x000004,%esp
		cmpb   $0x000000,_0cee64_data
		je     _018031_jump
		push   $_0c037c_data
		call   _07bc8c_func
		add    $0x000004,%esp
		jmp    _01803e_jump

	_018031_jump:
		push   $_0c0394_data
		call   _07bc8c_func
		add    $0x000004,%esp

	_01803e_jump:
		push   $_0c02d8_data
		call   _07bc8c_func
		xor    %edx,%edx
		add    $0x000004,%esp
		mov    $0x000064,%esi

	_018052_jump:
		mov    $0x000001,%eax
		call   _0406e0_func
		test   %al,%al
		je     _01807e_jump

	_018060_jump:
		call   _041128_func
		push   $_0c02d8_data
		call   _07bc8c_func
		add    $0x000004,%esp
		call   _018090_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01807e_jump:
		mov    %esi,%eax
		inc    %edx
		call   _07bcde_func
		cmp    $0x000028,%edx
		jl     _018052_jump
		jmp    _018060_jump



_018090_func:
		push   %edx
		xor    %ah,%ah
		mov    $0x000300,%edx
		mov    %ah,_0cee58_data
		mov    $0x000010,%eax
		call   _07b7cc_func
		mov    %eax,_0ccc78_data
		test   %eax,%eax
		jne    _0180bb_jump
		mov    $_0c03a4_data,%eax
		call   _01f3a4_func

	_0180bb_jump:
		mov    $0x000008,%edx
		mov    $0x000200,%eax
		call   _07b7cc_func
		mov    %eax,_0ccd04_data
		test   %eax,%eax
		jne    _0180dd_jump
		mov    $_0c03c4_data,%eax
		call   _01f3a4_func

	_0180dd_jump:
		cmpb   $0x000000,_0cee77_data
		sete   %al
		xor    %dh,%dh
		mov    %al,_095b15_data
		mov    %dh,_0cee5a_data
		pop    %edx
		ret    



_0180f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		call   _03c7bc_func
		mov    $0x0b8000,%edx
		push   $_0c041c_data
		mov    $_0c03e4_data,%ebx
		mov    $_0c03f8_data,%ebp
		call   _07bc8c_func
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)
		add    $0x000004,%esp

	_01812a_jump:
		add    $0x000002,%edx
		movb   $0x00001e,-0x000001(%edx)
		cmp    $0x0b80a0,%edx
		jne    _01812a_jump
		mov    (%esp),%esi
		mov    0x000004(%esp),%ebx
		xor    %edx,%edx
		jmp    _01814e_jump

	_018144_jump:
		add    $0x000002,%esi
		mov    (%ebx),%cl
		inc    %ebx
		inc    %edx
		mov    %cl,-0x000002(%esi)

	_01814e_jump:
		mov    0x000004(%esp),%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		cmp    %ecx,%edx
		jb     _018144_jump
		mov    (%esp),%edx
		mov    %ebp,%esi
		xor    %ebx,%ebx
		jmp    _01817c_jump

	_018169_jump:
		mov    (%esi),%cl
		mov    0x00005f(%edx),%ah
		add    $0x000002,%edx
		inc    %esi
		or     $0x000080,%ah
		mov    %cl,0x00005c(%edx)
		inc    %ebx
		mov    %ah,0x00005d(%edx)

	_01817c_jump:
		mov    %ebp,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		cmp    %ecx,%ebx
		jb     _018169_jump
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018198_func:
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    $_0c0420_data,%eax
		call   _07bce3_jump
		mov    $_0c042c_data,%eax
		mov    $_0cee56_data,%edx
		call   _07bce3_jump
		call   _0180f8_func
		mov    $_0cee57_data,%eax
		mov    $_0ced3e_data,%edi
		call   _07ae90_func
		mov    %al,_0cee5c_data
		mov    $0x000001,%ah
		mov    (%esi),%esi
		mov    %ah,_095b9e_data
		mov    %ah,_0cee97_data
		push   %edi

	_0181df_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0181f7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0181df_jump

	_0181f7_jump:
		pop    %edi
		call   _018200_func
		pop    %edi
		pop    %esi
		ret    



_018200_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %ah,%ah
		mov    %ah,(%esp)
		call   _01607d_func
		mov    %al,_0cee6a_data
		mov    $0x000001,%eax
		call   _069118_func
		mov    _095b9e_data,%al
		mov    %al,_0cee97_data
		test   %al,%al
		je     _01824c_jump
		push   $_0c043c_data
		call   _07bc8c_func
		add    $0x000004,%esp
		call   _070458_func
		mov    _0cee97_data,%al
		mov    %al,_095b9e_data

	_01824c_jump:
		mov    $0x000001,%dh
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		mov    %dh,_0cee94_data
		call   _041140_func
		mov    $_036948_func,%eax
		mov    $0x0000c8,%edx
		call   _07bd3b_func
		call   _068fe0_func
		call   _017cbc_func
		xor    %eax,%eax
		call   _016157_func
		call   _058304_func
		call   _035b1c_func
		call   _06ec04_func
		mov    $0x000001,%bl
		call   _035650_func
		mov    %bl,_0cee7a_data
		xor    %bh,%bh
		mov    $0x000003,%ch
		mov    %bh,_0cee79_data
		call   _047438_func
		mov    %bl,_0cee79_data
		call   _035a40_func
		mov    _0cee97_data,%al
		mov    %ch,_0cee89_data
		test   %al,%al
		je     _0182ca_jump
		call   _01cb80_func

	_0182ca_jump:
		mov    $0x0000c8,%ebp

	_0182cf_jump:
		cmpb   $0x000000,_0ceebf_data
		jne    _018669_jump
		call   _0363f0_jump
		call   _0665f0_func
		call   _05a7a0_func
		call   _03521c_func
		cmpb   $0x000000,_0ceec1_data
		jne    _018610_jump
		cmpw   $0x000000,_0ce39a_data
		jl     _018610_jump
		cmpw   $0x000000,_0cecda_data
		je     _018610_jump
		mov    $0x000001,%eax
		mov    $0x000140,%ebx
		call   _069118_func
		call   _068a7c_func
		call   _0160f1_func
		call   _034ae0_func
		mov    %ebp,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _016157_func
		cmpb   $0x000000,_0cee7a_data
		je     _0183c1_jump
		mov    $0x000001,%ecx
		mov    $0x000004,%ebx
		xor    %edi,%edi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %cx,_0cecda_data
		mov    %cx,_0cecc4_data
		mov    %di,_0cecd4_data
		mov    %di,_0cecc0_data
		mov    %cx,_0cec82_data
		mov    %bx,_0cec74_data
		mov    _0cec70_data,%bh
		mov    _0cec71_data,%cl
		mov    _0cec74_data,%dl
		mov    _0cec82_data,%al
		and    $0x000000,%bh
		and    $0x0000fc,%cl
		mov    %bh,_0cec70_data
		mov    %cl,_0cec71_data
		xor    %ch,%ch
		call   _0356c8_func
		mov    %ch,_0ca315_data
		mov    %ch,_0cee79_data

	_0183c1_jump:
		call   _035fb8_func
		cmpb   $0x000000,_0cee62_data
		je     _0183e5_jump
		cmpb   $0x000000,_0cee5e_data
		jne    _0183e5_jump
		mov    _0cec80_data,%eax
		sar    $0x000010,%eax
		call   _03d7c0_func

	_0183e5_jump:
		mov    $0x000001,%edi

	_0183ea_jump:
		cmpb   $0x000000,_0ceec1_data
		jne    _0185f5_jump
		cmpw   $0x000000,_0cecda_data
		jne    _0185f5_jump
		cmpw   $0x000000,_0cecc4_data
		je     _0185f5_jump
		mov    $0x000005,%eax
		call   _03c904_func
		call   _016ed5_func
		call   _0360d0_func
		mov    %esp,%eax
		call   _035bd4_func
		cmpb   $0x000000,_095b15_data
		jne    _01844b_jump
		cmpw   $0x000006,_0cecd4_data
		jne    _01844b_jump
		cmpw   $0x000004,_0cecc0_data
		je     _018454_jump

	_01844b_jump:
		call   _0264c0_func
		test   %al,%al
		je     _018459_jump

	_018454_jump:
		call   _0476c4_func

	_018459_jump:
		mov    _0cecc2_data,%eax
		sar    $0x000010,%eax
		call   _058444_func
		call   _03811c_func
		call   _077c5c_func
		call   _03bd64_func
		cmpb   $0x000000,_0cee6e_data
		je     _01848d_jump
		mov    $_0c7088_data,%edx
		mov    $0x000002,%eax
		call   _03b4b0_func

	_01848d_jump:
		cmpb   $0x000000,_0ceec1_data
		jne    _0185df_jump
		cmpw   $0x000000,_0cecc4_data
		jne    _0185df_jump
		cmpw   $0x000000,_0cecda_data
		jne    _0185df_jump
		mov    $0x00000f,%eax
		call   _03c904_func
		call   _058728_func
		call   _058770_func
		call   _035688_func
		cmpb   $0x000000,_0cee7a_data
		jne    _0184df_jump
		movb   $0x000001,_0cee79_data

	_0184df_jump:
		call   _0477b0_func
		mov    _095b15_data,%dh
		mov    %al,_095b56_data
		test   %dh,%dh
		jne    _018538_jump
		call   _0476c4_func
		xor    %eax,%eax
		mov    _0cee8f_data,%al
		call   _03c7cc_func
		xor    %eax,%eax
		mov    $0x000001,%ebx
		mov    _095b54_data,%al
		xor    %dl,%dl
		call   _0475dc_func
		call   _05b340_func
		mov    %esp,%eax
		mov    %dx,_095b9c_data
		call   _017048_func
		mov    %bx,_095b9c_data
		call   _05b3b0_func
		jmp    _01859e_jump

	_018538_jump:
		call   _0160f1_func
		xor    %eax,%eax
		mov    _0cee8f_data,%al
		call   _03c6a0_func
		xor    %eax,%eax
		mov    _095b54_data,%al
		call   _0475dc_func
		mov    _0cece8_data,%edx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03a614_func
		mov    _0ccc24_data,%edx
		mov    _0ccc0c_data,%ebx
		mov    _0ccc30_data,%esi
		shr    $0x000002,%edx
		call   _01268a_func
		xor    %esi,%esi
		mov    %esp,%eax
		mov    %si,_095b9c_data
		call   _017728_func
		movw   $0x000001,_095b9c_data

	_01859e_jump:
		cmpb   $0x000000,_0cee62_data
		je     _0185ac_jump
		call   _06ece0_func

	_0185ac_jump:
		mov    $0x000140,%ebx
		xor    %eax,%eax
		mov    %ebp,%edx
		mov    _0cee8f_data,%al
		xor    %ecx,%ecx
		call   _03c7cc_func
		xor    %eax,%eax
		call   _016157_func
		call   _035688_func
		xor    %bh,%bh
		call   _067908_func
		mov    %bh,_095b98_data
		jmp    _01848d_jump

	_0185df_jump:
		call   _058634_func
		call   _0363f0_jump
		mov    %di,_0cecda_data
		jmp    _0183ea_jump

	_0185f5_jump:
		cmpb   $0x000000,_0cee97_data
		je     _018603_jump
		call   _01cb80_func

	_018603_jump:
		mov    $0x000001,%bh
		call   _036418_func
		mov    %bh,_0ceec1_data

	_018610_jump:
		call   _0363f4_func
		mov    $0x000001,%ecx
		xor    %edi,%edi
		mov    %cx,_0cecda_data
		mov    %cx,_0cecc4_data
		mov    %di,_0cecd4_data
		mov    _0cee7a_data,%cl
		mov    %di,_0cecc0_data
		test   %cl,%cl
		je     _018652_jump
		mov    _0cee79_data,%ch
		test   %ch,%ch
		jne    _018652_jump
		mov    %ch,_0cee7a_data

	_018652_jump:
		cmpb   $0x000000,_0cee79_data
		je     _0182cf_jump
		call   _03548c_func
		jmp    _0182cf_jump

	_018669_jump:
		cmpb   $0x000000,_0cee62_data
		je     _01867c_jump
		call   _06ece0_func
		call   _03d980_func

	_01867c_jump:
		call   _036428_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018690_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%esi
		mov    %dl,0x000018(%esp)
		mov    %bl,0x000014(%esp)
		mov    %cl,0x000010(%esp)
		mov    _0cec92_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _01884f_jump
		mov    _0cec8c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _01884f_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    _0cda08_data,%ebx
		movsbl (%eax,%edx,8),%edx
		mov    _0cda00_data,%eax
		add    %ebx,%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x00000e,%edx
		sbb    %edx,%eax
		sar    $0x00000e,%eax
		mov    _0cec94_data,%di
		sub    0x000028(%esi),%di
		shl    $0x000004,%edi
		mov    0x00002c(%esi),%cx
		mov    %di,0x000008(%esp)
		mov    _0cec8e_data,%di
		sub    %ecx,%edi
		mov    %eax,%edx
		mov    0x000008(%esp),%eax
		shl    $0x000004,%edi
		test   %ax,%ax
		jne    _018736_jump
		test   %di,%di
		je     _01884f_jump

	_018736_jump:
		test   %edx,%edx
		je     _01884f_jump
		movswl %di,%ebp
		mov    %ebp,%eax
		test   %eax,%eax
		jge    _018749_jump
		neg    %eax

	_018749_jump:
		mov    %eax,%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _018758_jump
		neg    %eax

	_018758_jump:
		cmp    %ebx,%eax
		jge    _01875e_jump
		mov    %ebx,%eax

	_01875e_jump:
		mov    %eax,(%esp)
		mov    -0x000002(%esp),%eax
		mov    %edx,%ebx
		sar    $0x000010,%eax
		mov    $0x000004,%cl
		cmp    %ebx,%eax
		jle    _018772_jump
		mov    %ebx,%eax

	_018772_jump:
		mov    %eax,0x000004(%esp)
		mov    (%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		mov    0x000004(%esp),%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    0x000008(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000004,%cl
		mov    %ax,0x00000c(%esp)
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _01885b_jump
		xor    %eax,%eax
		mov    $0x0000ff,%ebx
		mov    0x000014(%esp),%al
		mov    0x00003e(%esi),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax
		imul   %eax,%edx
		xor    %ebx,%ebx
		mov    0x00000a(%esp),%eax
		mov    0x000014(%esp),%bl
		sar    $0x000010,%eax
		imul   %ebx,%eax
		add    %eax,%edx
		mov    $0x0000ff,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x00006d(%esi),%dh
		mov    %ax,0x000040(%esi)
		cmp    $0x000002,%dh
		jne    _01880f_jump
		cmp    0x000004(%esp),%ebp
		jg     _01880f_jump
		movb   $0x0000ff,0x000010(%esp)

	_01880f_jump:
		xor    %eax,%eax
		mov    $0x0000ff,%ebx
		mov    0x000010(%esp),%al
		mov    0x000040(%esi),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax
		mov    %edx,%ebx
		imul   %eax,%ebx
		xor    %eax,%eax
		movswl %di,%edx
		mov    0x000010(%esp),%al
		imul   %eax,%edx
		add    %ebx,%edx
		mov    $0x0000ff,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_01884f_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)

	_01885b_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_018864_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0cec92_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		cmp    $0xffff8300,%ebx
		jne    _018897_jump
		mov    _0cec8c_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffff8300,%ebx
		jne    _018897_jump
		cmpw   $0x000000,0x000048(%edx)
		jne    _0188bc_jump
		jmp    _0188b7_jump

	_018897_jump:
		mov    _0cec92_data,%ebx
		mov    0x000028(%edx),%ecx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jne    _0188bc_jump
		mov    _0cec8c_data,%ebx
		mov    0x00002c(%edx),%esi
		sar    $0x000010,%ebx
		cmp    %esi,%ebx
		jne    _0188bc_jump

	_0188b7_jump:
		mov    $0x000001,%eax

	_0188bc_jump:
		test   %ax,%ax
		je     _0188c8_jump
		movb   $0x000001,_0ceeb1_data

	_0188c8_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0188d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ebx,%ebx
		mov    0x00002c(%eax),%cx
		mov    0x000069(%eax),%bl
		movzbw 0x000068(%eax),%si
		add    %ecx,%ebx
		mov    0x000028(%eax),%dx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%esi

	_0188f0_jump:
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_092224_data(%edx)
		jne    _01892d_jump
		mov    _0cecc8_data,%edx
		sar    $0x000010,%edx
		movswl %bx,%ecx
		add    $0x0000c8,%edx
		cmp    %edx,%ecx
		jg     _01892d_jump
		add    $0x000010,%ebx
		movswl %bx,%eax
		sar    $0x000004,%eax
		jmp    _0188f0_jump

	_01892d_jump:
		and    $0x0000f0,%bl
		and    $0x00000f,%esi
		mov    %ebx,%ecx
		movswl %si,%edx
		and    $0x0000ff,%eax
		xor    %ebx,%ebx
		call   _02494c_func
		add    %ecx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01894c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cecd8_data,%dx
		mov    _0cecb2_data,%bx
		mov    _0cecb0_data,%cx
		mov    _0cecca_data,%di
		cmpb   $0x000000,_095b15_data
		jne    _0189d6_jump
		mov    _0cc49c_data,%eax
		neg    %eax
		movswl %cx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jge    _018993_jump
		mov    _0cc49c_data,%cx
		neg    %ecx
		add    $0x000008,%ecx

	_018993_jump:
		movswl %dx,%eax
		movswl %cx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jle    _0189a5_jump
		mov    %edx,%ecx
		add    $0x000008,%ecx

	_0189a5_jump:
		mov    _0cc49c_data,%eax
		neg    %eax
		movswl %bx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jge    _0189c2_jump
		mov    _0cc49c_data,%bx
		neg    %ebx
		add    $0x000008,%ebx

	_0189c2_jump:
		movswl %dx,%eax
		movswl %bx,%esi
		add    $0x000008,%eax
		cmp    %eax,%esi
		jle    _0189f2_jump
		mov    %edx,%ebx
		add    $0x000008,%ebx
		jmp    _0189f2_jump

	_0189d6_jump:
		test   %cx,%cx
		jge    _0189dd_jump
		xor    %ecx,%ecx

	_0189dd_jump:
		cmp    %dx,%cx
		jle    _0189e4_jump
		mov    %edx,%ecx

	_0189e4_jump:
		test   %bx,%bx
		jge    _0189eb_jump
		xor    %ebx,%ebx

	_0189eb_jump:
		cmp    %dx,%bx
		jle    _0189f2_jump
		mov    %edx,%ebx

	_0189f2_jump:
		mov    _0cecac_data,%eax
		mov    _0cc4a4_data,%esi
		sar    $0x000010,%eax
		neg    %esi
		cmp    %esi,%eax
		jge    _018a1d_jump
		mov    _0cc4a4_data,%ax
		mov    %eax,%esi
		mov    %ax,_0cecae_data
		neg    %esi
		mov    %si,_0cecae_data

	_018a1d_jump:
		mov    _0cecae_data,%ax
		cmp    %di,%ax
		jle    _018a2f_jump
		mov    %di,_0cecae_data

	_018a2f_jump:
		mov    _0cecb2_data,%esi
		mov    _0cc4a4_data,%eax
		sar    $0x000010,%esi
		neg    %eax
		cmp    %eax,%esi
		jge    _018a57_jump
		mov    _0cc4a4_data,%ax
		mov    %ax,_0cecb4_data
		neg    %eax
		mov    %ax,_0cecb4_data

	_018a57_jump:
		mov    _0cecb4_data,%ax
		cmp    %di,%ax
		jle    _018a69_jump
		mov    %di,_0cecb4_data

	_018a69_jump:
		mov    %di,_0cecca_data
		mov    %cx,_0cecb0_data
		mov    %bx,_0cecb2_data
		mov    %dx,_0cecd8_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018a8c_func:
		push   %edx
		mov    _0cecaa_data,%dx
		mov    %dx,_0cecb0_data
		mov    _0cecb8_data,%dx
		mov    %dx,_0cecb2_data
		call   _0188d0_func
		mov    _0cc4a0_data,%dx
		sub    _0cc4a4_data,%dx
		mov    %ax,_0cec62_data
		sub    %edx,%eax
		sub    $0x000010,%eax
		mov    %ax,_0cecae_data
		mov    _0cecca_data,%ax
		mov    %ax,_0cecb4_data
		call   _01894c_func
		pop    %edx
		ret    



_018ae0_func:
		adc    $0x15181716,%eax
		sbb    %edx,(%esi)
		adc    $0x56525153,%eax
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ebp
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ebp),%eax
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		and    $0x00003f,%dh
		mov    %dx,0x000010(%esp)
		mov    0x00000e(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x00006b(%ebp),%dl
		imul   %ebx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    %eax,(%esp)
		xor    %edx,%edx
		mov    _0ccba4_data,%eax
		mov    %edx,0x000014(%esp)
		mov    %eax,0x00000c(%esp)
		jmp    _018c8f_jump

	_018b46_jump:
		mov    (%esp),%edx
		xor    %eax,%eax
		mov    0x000038(%ebp),%bx
		mov    0x000002(%edx),%al
		add    %ebx,%eax
		movswl %ax,%edx
		mov    0x000058(%ebp),%eax
		sar    $0x000010,%eax
		call   _01d170_func
		mov    (%esp),%edx
		mov    %eax,%esi
		xor    %ah,%ah
		mov    0x000003(%edx),%al
		test   %ax,%ax
		je     _018c7d_jump
		and    $0x00ffff,%eax
		imul   $0x00000c,%eax,%eax
		mov    0x000000(%ebp),%ebx
		add    %eax,%ebx
		cmpb   $0x000000,0x000004(%ebx)
		je     _018c7d_jump
		testb  $0x000008,0x000081(%ebp)
		jne    _018ba5_jump
		mov    (%esp),%edx
		xor    %eax,%eax
		mov    0x000036(%ebp),%cx
		mov    0x000001(%edx),%al
		add    %ecx,%eax
		jmp    _018bed_jump

	_018ba5_jump:
		cmpw   $0x000100,0x00005a(%ebp)
		jne    _018bc9_jump
		cmpw   $0x000005,0x000014(%esp)
		jne    _018bc9_jump
		mov    0x00006a(%ebp),%dh
		cmp    $0x000010,%dh
		ja     _018bc9_jump
		cmp    $0x00000e,%dh
		jb     _018bc9_jump
		mov    $0xfffffff0,%eax
		jmp    _018bcb_jump

	_018bc9_jump:
		xor    %eax,%eax

	_018bcb_jump:
		mov    (%esp),%edi
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    0x000068(%ebp),%dl
		mov    0x000001(%edi),%cl
		add    %edx,%edx
		sub    %ecx,%edx
		mov    %edx,%ecx
		xor    %edx,%edx
		mov    0x000005(%ebx),%dl
		sub    %edx,%ecx
		mov    0x000036(%ebp),%dx
		add    %ecx,%eax
		add    %edx,%eax

	_018bed_jump:
		mov    0x000081(%ebp),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    (%esp),%edi
		xor    %ecx,%ecx
		and    $0x0000ff,%edx
		mov    (%edi),%cl
		xor    %ecx,%edx
		jne    _018c12_jump
		mov    _0cc4f4_data,%edx
		jmp    _018c18_jump

	_018c12_jump:
		mov    _0cc508_data,%edx

	_018c18_jump:
		mov    %edx,0x000004(%esp)
		movswl %ax,%edx
		mov    0x000058(%ebp),%eax
		sar    $0x000010,%eax
		call   _01d134_func
		cwtl   
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x000058(%ebp),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		movswl %si,%edi
		call   _01d0cc_func
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		shl    $0x000008,%ecx
		call   _01d0cc_func
		mov    0x000008(%ebp),%esi
		mov    (%ebx),%edx
		add    %ecx,%eax
		xor    %ecx,%ecx
		add    %edx,%esi
		mov    %ax,%cx
		mov    0x00000a(%ebx),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %edi,%ebx
		mov    0x00000c(%esp),%edi
		mov    %al,%dl
		mov    0x000008(%esp),%eax
		call   *0x000004(%esp)

	_018c7d_jump:
		mov    0x000014(%esp),%esi
		mov    (%esp),%ebx
		inc    %esi
		add    $0x000004,%ebx
		mov    %esi,0x000014(%esp)
		mov    %ebx,(%esp)

	_018c8f_jump:
		xor    %edx,%edx
		mov    0x00000e(%esp),%eax
		mov    0x000014(%esp),%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _018b46_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_018cae_jump:
		ret    



_018cb0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x00000b(%ebx),%al
		shl    $0x000005,%al
		shr    $0x000007,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x00001c(%esp),%dl
		xor    %edx,%eax
		je     _018cef_jump
		mov    _0cc4f4_data,%eax
		jmp    _018cf4_jump

	_018cef_jump:
		mov    _0cc508_data,%eax

	_018cf4_jump:
		mov    %eax,(%esp)
		mov    0x000058(%esi),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d170_func
		movswl %ax,%ecx
		mov    0x000058(%esi),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		call   _01d134_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%esi),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d0cc_func
		shl    $0x000008,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x000058(%esi),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d0cc_func
		add    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    _0ccba4_data,%eax
		mov    %eax,0x000004(%esp)
		mov    0x000008(%esi),%eax
		mov    (%ebx),%esi
		add    %eax,%esi
		mov    0x00000a(%ebx),%al
		shr    $0x000004,%al
		mov    %ecx,%ebx
		movzbl %al,%ebp
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %ebp,%edx
		mov    0x000004(%esp),%edi
		call   *(%esp)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_018d7c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x00000b(%ebx),%al
		shl    $0x000005,%al
		shr    $0x000007,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x00001c(%esp),%dl
		xor    %edx,%eax
		je     _018dbb_jump
		mov    _0cc4e0_data,%eax
		jmp    _018dc0_jump

	_018dbb_jump:
		mov    _0cc4fc_data,%eax

	_018dc0_jump:
		mov    %eax,(%esp)
		mov    0x000058(%esi),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d170_func
		movswl %ax,%ecx
		mov    0x000058(%esi),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		call   _01d134_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%esi),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d0cc_func
		shl    $0x000008,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    0x000058(%esi),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d0cc_func
		add    0x000008(%esp),%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    _0ccba4_data,%eax
		mov    %eax,0x000004(%esp)
		mov    0x000008(%esi),%eax
		mov    (%ebx),%esi
		add    %eax,%esi
		mov    0x00000a(%ebx),%al
		shr    $0x000004,%al
		mov    %ecx,%ebx
		movzbl %al,%ebp
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %ebp,%edx
		mov    0x000004(%esp),%edi
		call   *(%esp)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_018e48_func:
		cmpb   $0x000000,_0cdbc2_data
		je     _018cae_jump
		mov    _0cdb20_data,%eax
		jmp    _018ae8_func



_018e60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    _095b15_data,%ah
		cmp    $0x000001,%ah
		jne    _018e82_jump
		cmp    _0cee5d_data,%ah
		jne    _018e82_jump
		mov    $0x000010,%eax
		jmp    _018e84_jump

	_018e82_jump:
		xor    %eax,%eax

	_018e84_jump:
		mov    %eax,%edi
		mov    _0cec70_data,%eax
		mov    $0x000001,%edx
		sar    $0x000010,%eax
		mov    %dx,_0cec76_data
		cmp    $0xffffffff,%eax
		je     _018f18_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%esi
		add    %eax,%esi
		cmpb   $0x000000,0x00007f(%esi)
		jne    _018f18_jump
		xor    %eax,%eax
		mov    $0x00003d,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000036(%esi)
		mov    $0x000005,%edx
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		lea    0x000004(%esp),%ecx
		mov    %edx,%eax
		lea    0x000008(%esp),%ebx
		add    %edi,%eax
		mov    %esp,%edx
		mov    %ax,0x000038(%esi)
		lea    0x00000c(%esp),%eax
		call   _01611a_func
		mov    $0x000064,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %edx,%ebx
		call   _016157_func
		mov    %esi,%eax
		call   _018ae8_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _016157_func

	_018f18_jump:
		mov    _0cec88_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _018f9e_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%esi
		add    %eax,%esi
		cmpb   $0x000000,0x00007f(%esi)
		jne    _018f9e_jump
		xor    %eax,%eax
		mov    $0x000042,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000036(%esi)
		mov    $0x00000e,%edx
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		lea    0x000004(%esp),%ecx
		mov    %edx,%eax
		lea    0x000008(%esp),%ebx
		add    %edi,%eax
		mov    %esp,%edx
		mov    %ax,0x000038(%esi)
		lea    0x00000c(%esp),%eax
		call   _01611a_func
		mov    $0x000064,%edx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %edx,%ebx
		call   _016157_func
		mov    %esi,%eax
		call   _018ae8_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _016157_func

	_018f9e_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_018fa8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		cmpb   $0x000000,_095b15_data
		jne    _018fc8_jump
		mov    $0x000004,%ebx
		xor    %esi,%esi
		mov    %ebx,0x000004(%esp)
		jmp    _018fe2_jump

	_018fc8_jump:
		movl   $0x000008,0x000004(%esp)
		cmpb   $0x000001,_0cee5d_data
		jne    _018fe0_jump
		mov    $0x000008,%esi
		jmp    _018fe2_jump

	_018fe0_jump:
		xor    %esi,%esi

	_018fe2_jump:
		cmpb   $0x000000,_0ceead_data
		je     _01919c_jump
		mov    0x000076(%edi),%bl
		test   %bl,%bl
		je     _01919c_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000077(%edi),%al
		mov    %bl,%dl
		mov    %eax,%ebx
		sub    %edx,%ebx
		imul   $0x000006,%ebx,%edx
		mov    $0x00001d,%ebx
		sub    %eax,%ebx
		imul   $0x000006,%ebx,%eax
		mov    %eax,(%esp)
		mov    _0cc4a0_data,%ax
		sub    $0x000013,%eax
		sub    %esi,%eax
		movswl %ax,%ecx
		mov    _0cc49c_data,%ax
		mov    0x000004(%esp),%ebx
		sub    $0x000004,%eax
		add    %ebx,%eax
		add    $0x000014,%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		push   $0x000001
		sub    %edx,%eax
		mov    $0x00003d,%edx
		movswl %ax,%ebx
		mov    _0cdb20_data,%eax
		call   _018cb0_func
		mov    _0cc4a0_data,%ax
		sub    $0x000014,%eax
		sub    %esi,%eax
		movswl %ax,%ecx
		mov    _0cc49c_data,%ax
		mov    0x000004(%esp),%ebx
		sub    $0x000004,%eax
		add    %ebx,%eax
		mov    (%esp),%edx
		add    $0x000015,%eax
		push   $0x000001
		sub    %edx,%eax
		mov    $0x00003c,%edx
		movswl %ax,%ebx
		mov    _0cdb20_data,%eax
		call   _018cb0_func
		mov    0x000060(%edi),%ax
		cmp    $0x0000bb,%ax
		jb     _0190fb_jump
		jbe    _019142_jump
		cmp    $0x0000da,%ax
		jb     _0190d5_jump
		jbe    _019150_jump
		cmp    $0x0000e3,%ax
		jb     _0190c6_jump
		jbe    _01912d_jump
		cmp    $0x0000e7,%ax
		je     _019150_jump
		jmp    _01915c_jump

	_0190c6_jump:
		cmp    $0x0000df,%ax
		je     _019150_jump
		jmp    _01915c_jump

	_0190d5_jump:
		cmp    $0x0000d4,%ax
		jb     _0190f0_jump
		jbe    _019150_jump
		cmp    $0x0000d5,%ax
		je     _01913b_jump
		jmp    _01915c_jump

	_0190f0_jump:
		cmp    $0x0000c6,%ax
		je     _019134_jump
		jmp    _01915c_jump

	_0190fb_jump:
		cmp    $0x00004a,%ax
		jb     _01911f_jump
		jbe    _019157_jump
		cmp    $0x000096,%ax
		jb     _019117_jump
		jbe    _019149_jump
		cmp    $0x0000b4,%ax
		je     _019157_jump
		jmp    _01915c_jump

	_019117_jump:
		cmp    $0x000062,%ax
		je     _01913b_jump
		jmp    _01915c_jump

	_01911f_jump:
		cmp    $0x00002e,%ax
		jb     _01915c_jump
		jbe    _019134_jump
		cmp    $0x000032,%ax
		jne    _01915c_jump

	_01912d_jump:
		movb   $0x00002c,0x000008(%esp)
		jmp    _01915c_jump

	_019134_jump:
		movb   $0x00006c,0x000008(%esp)
		jmp    _01915c_jump

	_01913b_jump:
		movb   $0x00006e,0x000008(%esp)
		jmp    _01915c_jump

	_019142_jump:
		movb   $0x000071,0x000008(%esp)
		jmp    _01915c_jump

	_019149_jump:
		movb   $0x00006d,0x000008(%esp)
		jmp    _01915c_jump

	_019150_jump:
		movb   $0x000070,0x000008(%esp)
		jmp    _01915c_jump

	_019157_jump:
		movb   $0x00006f,0x000008(%esp)

	_01915c_jump:
		mov    _0cc4a0_data,%ax
		sub    $0x00001e,%eax
		sub    %esi,%eax
		mov    0x000004(%esp),%ebx
		movswl %ax,%ecx
		mov    _0cc49c_data,%ax
		push   $0x000001
		add    %ebx,%eax
		xor    %edx,%edx
		sub    $0x000004,%eax
		mov    0x00000c(%esp),%dl
		movswl %ax,%ebx
		mov    _0cdb20_data,%eax
		call   _01f3e4_func
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0cdb20_data,%eax
		call   _018cb0_func

	_01919c_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0191e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    $_0c0488_data,%eax
		xor    %ecx,%ecx
		call   _01a178_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    $_0c0494_data,%eax
		call   _01a178_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019220_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edi
		cmpw   $0x000005,_0ceca4_data
		jne    _019260_jump
		mov    _0cec5a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0195e3_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%esi
		add    %esi,%eax
		call   _028014_func
		jmp    _0195e3_jump

	_019260_jump:
		call   _03ed94_func
		cmpb   $0x000040,_0ceec4_data
		je     _019281_jump
		cmpw   $0x000000,_095b50_data
		jne    _019281_jump
		movw   $0x00012c,_095b50_data

	_019281_jump:
		mov    _095b50_data,%si
		test   %si,%si
		jle    _019296_jump
		mov    %esi,%eax
		dec    %eax
		mov    %ax,_095b50_data

	_019296_jump:
		cmpw   $0x000000,_095b4e_data
		jne    _0192b2_jump
		cmpw   $0x000000,_095b50_data
		jne    _0192b2_jump
		test   %edi,%edi
		jne    _0195e3_jump

	_0192b2_jump:
		mov    $0x000023,%esi
		mov    _095b15_data,%dl
		mov    $0x00004d,%eax
		test   %dl,%dl
		jne    _0193ff_jump
		cmpl   $0x000010,_0cc49c_data
		jg     _0192e0_jump
		cmpl   $0x000005,_0cc4a4_data
		jle    _0193ff_jump

	_0192e0_jump:
		cmpw   $0x000000,_0cec76_data
		je     _0192fd_jump
		mov    $0x000055,%eax
		xor    %edx,%edx
		mov    $0x00002d,%esi
		mov    %dx,_0cec76_data

	_0192fd_jump:
		mov    _0cc4a4_data,%edx
		movswl %si,%ecx
		sub    $0x000005,%edx
		cmp    %ecx,%edx
		jge    _019359_jump
		push   $0x000000
		mov    _0cc4a2_data,%ecx
		movswl %ax,%ebx
		xor    %edx,%edx
		push   $0x0000ff
		mov    $0x00000d,%eax
		sar    $0x000010,%ecx
		add    $0x000005,%esi
		call   _019f4c_func
		push   $0x000000
		mov    _0cc4a4_data,%bx
		mov    _0cc49c_data,%ax
		mov    _0cc4a2_data,%edx
		push   $0x0000ff
		sub    $0x00000f,%eax
		sub    %ebx,%esi
		sar    $0x000010,%edx
		movswl %si,%ecx
		movswl %ax,%ebx
		jmp    _019365_jump

	_019359_jump:
		push   $0x000000
		movswl %ax,%ebx
		push   $0x0000ff
		xor    %edx,%edx

	_019365_jump:
		mov    $0x00000d,%eax
		call   _019f4c_func
		mov    _0cc4a4_data,%eax
		sub    $0x000005,%eax
		cmp    $0x000017,%eax
		jge    _0193df_jump
		push   $0x000000
		mov    $0x000044,%ebx
		mov    _0cc4a4_data,%ax
		mov    $0x000004,%edx
		sub    $0x000004,%eax
		push   $0x0000ff
		movswl %ax,%ecx
		mov    $0x0000f1,%eax
		call   _019f4c_func
		mov    $0x00001c,%eax
		mov    _0cc4a4_data,%cx
		push   $0x000000
		sub    %ecx,%eax
		mov    _0cc498_data,%si
		movswl %ax,%ecx
		mov    $0x000138,%eax
		mov    _0cc4a2_data,%edx
		sub    %esi,%eax
		push   $0x0000ff
		movswl %ax,%ebx
		mov    _0cc496_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		jmp    _0193fa_jump

	_0193df_jump:
		push   $0x000000
		mov    $0x000017,%ecx
		mov    $0x000044,%ebx
		push   $0x0000ff
		mov    $0x000004,%edx
		mov    $0x0000f1,%eax

	_0193fa_jump:
		call   _019f4c_func

	_0193ff_jump:
		mov    _0cecc0_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %esi,%eax
		mov    _0cc1f0_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmp    $0xfffffffe,%edi
		jne    _019540_jump
		mov    _095b15_data,%dh
		cmp    $0x000001,%dh
		jne    _01943c_jump
		cmp    _0cee5d_data,%dh
		jne    _01943c_jump
		mov    $0x000010,%eax
		jmp    _01943e_jump

	_01943c_jump:
		xor    %eax,%eax

	_01943e_jump:
		push   $0x000001
		mov    %eax,0x000004(%esp)
		add    $0x000005,%eax
		mov    $0x000010,%ebx
		movswl %ax,%edi
		mov    $0x00001b,%edx
		mov    %edi,%ecx
		mov    %esi,%eax
		call   _018d7c_func
		push   $0x000001
		mov    $0x0000f4,%ebx
		mov    $0x000038,%edx
		mov    %edi,%ecx
		mov    %esi,%eax
		call   _018d7c_func
		push   $0x000001
		mov    $0x000037,%ebx
		mov    _0ce39c_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d7c_func
		push   $0x000001
		mov    $0x000046,%ebx
		mov    _0ce39d_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d7c_func
		cmpb   $0x0000ff,_0cdb0a_data
		je     _019506_jump
		cmpb   $0x000000,_0ceec1_data
		jne    _019506_jump
		mov    (%esp),%eax
		push   $0x000001
		add    $0x00001b,%eax
		mov    $0x000023,%ebx
		movswl %ax,%edi
		mov    _0ce39f_data,%al
		xor    %edx,%edx
		add    $0x000011,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d7c_func
		cmpb   $0x000004,_0ce3a3_data
		jne    _019506_jump
		push   $0x000001
		mov    $0x00003b,%ebx
		mov    _0ce39e_data,%al
		xor    %edx,%edx
		add    $0x000014,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d7c_func

	_019506_jump:
		mov    (%esp),%eax
		push   $0x000001
		add    $0x000005,%eax
		mov    $0x000114,%ebx
		movswl %ax,%edi
		mov    _0ce3a1_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d7c_func
		push   $0x000001
		mov    $0x000122,%ebx
		mov    _0ce3a2_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    %edi,%ecx
		jmp    _0195bb_jump

	_019540_jump:
		mov    _0cc4a0_data,%ax
		sub    $0x000020,%eax
		movswl %ax,%ecx
		mov    _0cc49c_data,%ax
		push   $0x000001
		add    $0x00000e,%eax
		mov    $0x000038,%edx
		movswl %ax,%ebx
		mov    %esi,%eax
		call   _018d7c_func
		mov    _0cc4a0_data,%ax
		sub    $0x000020,%eax
		movswl %ax,%ecx
		mov    _0cc49c_data,%ax
		add    $0x00002e,%eax
		movswl %ax,%ebx
		mov    _0ce3a1_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d7c_func
		mov    _0cc4a0_data,%ax
		sub    $0x000020,%eax
		movswl %ax,%ecx
		mov    _0cc49c_data,%ax
		add    $0x00003c,%eax
		movswl %ax,%ebx
		mov    _0ce3a2_data,%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001

	_0195bb_jump:
		mov    %al,%dl
		mov    %esi,%eax
		call   _018d7c_func
		mov    _0cec70_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0195de_jump
		mov    _0cec88_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0195e3_jump

	_0195de_jump:
		call   _018e60_func

	_0195e3_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0195ec_func:
		push   %ebx
		push   %edi
		mov    _0ccc34_data,%edi
		movswl %dx,%ebx
		cwtl   
		sub    $0x000002,%ebx
		call   _014a20_func
		pop    %edi
		pop    %ebx
		ret    



_01964c_func:
		push   %esi
		mov    0x000006(%esp),%esi
		sar    $0x000010,%esi
		push   %esi
		movswl %cx,%ecx
		push   $0x000007
		add    $0x000008,%ebx
		add    $0x000008,%eax
		push   %ecx
		movswl %bx,%ecx
		movswl %dx,%ebx
		movswl %ax,%edx
		mov    $_0195ec_func,%eax
		call   _01ef3c_func
		pop    %esi
		ret    $0x000004



_01967c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%ebp),%edx
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		xor    %ecx,%ecx
		and    $0x00003f,%dh
		mov    %dx,%cx
		xor    %edx,%edx
		mov    0x00006b(%ebp),%dl
		imul   %ecx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    %eax,0x000004(%esp)
		test   %bl,%bl
		jne    _0196d1_jump
		mov    $0x000005,%ebx
		mov    $0x000003,%eax
		mov    %ebx,0x000010(%esp)
		jmp    _0196dc_jump

	_0196d1_jump:
		mov    $0x000002,%edx
		xor    %eax,%eax
		mov    %edx,0x000010(%esp)

	_0196dc_jump:
		mov    0x000010(%esp),%ecx
		mov    %eax,0x00000c(%esp)
		cmp    %cx,%ax
		ja     _0197ac_jump

	_0196ed_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%ax
		mov    0x000004(%esp),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %ecx,%ecx
		mov    0x000002(%eax),%cl
		add    0x000038(%ebp),%cx
		xor    %edx,%edx
		mov    0x000003(%eax),%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000000(%ebp),%ebx
		add    %edx,%ebx
		cmpb   $0x000000,0x000004(%ebx)
		je     _019796_jump
		mov    0x000001(%eax),%al
		mov    0x000036(%ebp),%si
		xor    %ah,%ah
		add    %eax,%esi
		mov    0x000058(%ebp),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		call   _01d170_func
		movswl %ax,%ecx
		mov    0x000058(%ebp),%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		call   _01d134_func
		movswl %ax,%edi
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000006(%ebx),%dl
		sar    $0x000010,%eax
		call   _01d0cc_func
		mov    %eax,%esi
		xor    %edx,%edx
		mov    0x000058(%ebp),%eax
		mov    0x000005(%ebx),%dl
		sar    $0x000010,%eax
		shl    $0x000008,%esi
		call   _01d0cc_func
		add    %esi,%eax
		and    $0x00ffff,%eax
		mov    (%ebx),%esi
		mov    %eax,0x000008(%esp)
		add    0x000008(%ebp),%esi
		mov    0x00000a(%ebx),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %ecx,%ebx
		mov    0x000008(%esp),%ecx
		mov    %al,%dl
		mov    %edi,%eax
		mov    (%esp),%edi
		call   *_0cc4f4_data

	_019796_jump:
		mov    0x00000c(%esp),%esi
		inc    %esi
		mov    0x000010(%esp),%edi
		mov    %esi,0x00000c(%esp)
		cmp    %di,%si
		jbe    _0196ed_jump

	_0197ac_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0197b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		movl   $0x000007,0x000010(%esp)
		mov    $0x001000,%ebp

	_0197ca_jump:
		mov    _0ce3a2_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%esi
		add    %eax,%esi
		mov    _0ce46c_data,%ax
		xor    %edi,%edi
		test   %ax,%ax
		jle    _019957_jump

	_0197f1_jump:
		cmpw   $0x000001,0x000010(%esp)
		jne    _019810_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000080,_092264_data(,%eax,4)
		je     _019810_jump
		mov    %esi,%eax
		call   _018fa8_func

	_019810_jump:
		xor    %eax,%eax
		mov    0x000010(%esp),%ebx
		mov    0x00007e(%esi),%al
		cmp    %bx,%ax
		jne    _01992c_jump
		cmpw   $0x00009d,0x000060(%esi)
		jne    _019850_jump
		cmpw   $0x000005,_0cecd4_data
		jne    _019850_jump
		cmpw   $0x000008,_0cecc0_data
		jne    _019850_jump
		cmpl   $0x00012c,0x000028(%esi)
		jl     _01992c_jump
		jmp    _019925_jump

	_019850_jump:
		mov    0x000060(%esi),%bx
		cmp    $0x000051,%bx
		jne    _019871_jump
		mov    $0x000001,%ebx
		mov    _0ccba4_data,%edx
		mov    %esi,%eax
		call   _01967c_func
		jmp    _01992c_jump

	_019871_jump:
		cmp    $0x0000fe,%bx
		jne    _0198c6_jump
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _019884_jump
		neg    %eax

	_019884_jump:
		mov    _094762_data(,%eax,2),%edx
		mov    0x000073(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		shl    $0x000009,%edx
		cmp    $0x000000,%eax
		je     _0198a5_jump
		mov    $0x000001,%eax
		jg     _0198a5_jump
		neg    %eax

	_0198a5_jump:
		neg    %eax
		imul   %eax,%edx
		mov    $0x000168,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ebp,%ecx
		movswl %ax,%edx
		mov    %ebp,%ebx
		mov    %esi,%eax
		call   _01b814_func
		jmp    _01992c_jump

	_0198c6_jump:
		cmp    $0x0000fc,%bx
		je     _0198db_jump
		cmp    $0x0000fb,%bx
		je     _0198db_jump
		cmp    $0x0000ad,%bx
		jne    _019925_jump

	_0198db_jump:
		mov    %esp,%edx
		lea    0x00000c(%esp),%ecx
		lea    0x000004(%esp),%ebx
		lea    0x000008(%esp),%eax
		call   _01611a_func
		mov    0x00000c(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    _0cc4a0_data,%edx
		mov    0x000008(%esp),%eax
		sub    $0x000028,%edx
		call   _016157_func
		mov    %esi,%eax
		call   _018ae8_func
		mov    (%esp),%edx
		mov    0x00000c(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%eax
		call   _016157_func
		jmp    _01992c_jump

	_019925_jump:
		mov    %esi,%eax
		call   _018ae8_func

	_01992c_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0ce3a2_data(,%eax,2),%esi
		sar    $0x000010,%esi
		imul   $0x000084,%esi,%esi
		mov    _0cc1f0_data,%eax
		mov    _0ce46c_data,%cx
		add    %eax,%esi
		cmp    %cx,%di
		jl     _0197f1_jump

	_019957_jump:
		mov    0x000010(%esp),%esi
		cmp    $0x000003,%si
		jne    _0199d7_jump
		cmpb   $0x000000,_0ceea6_data
		jne    _0199b0_jump
		mov    _0cec2a_data,%ebx
		mov    _0cdae8_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		lea    0x000000(,%ebx,2),%ecx
		mov    %edx,%eax
		add    $0x000002,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		cmp    %ebx,%edx
		jle    _0199b0_jump
		cmpw   $0x00005a,_0cdaea_data
		jle    _019a25_jump
		testb  $0x000080,_0cec71_data
		jne    _019a25_jump

	_0199b0_jump:
		testb  $0x000004,_0cdb15_data
		je     _019a25_jump
		cmpl   $0x000000,_0cdab8_data
		je     _019a25_jump
		mov    $_0cda94_data,%eax
		call   _018ae8_func
		call   _018e48_func
		jmp    _019a25_jump

	_0199d7_jump:
		cmp    $0x000002,%si
		jne    _019a25_jump
		cmpb   $0x000000,_0ceec0_data
		je     _019a25_jump
		xor    %ecx,%ecx
		xor    %esi,%esi
		jmp    _019a19_jump

	_0199ec_jump:
		movswl %cx,%eax
		mov    _0cda1e_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%edx
		mov    _0cc1f0_data,%eax
		add    %edx,%eax
		cmp    0x000024(%eax),%esi
		je     _019a18_jump
		mov    _0ccba4_data,%edx
		mov    %esi,%ebx
		call   _01967c_func

	_019a18_jump:
		inc    %ecx

	_019a19_jump:
		xor    %eax,%eax
		mov    _0ceec0_data,%al
		cmp    %ax,%cx
		jl     _0199ec_jump

	_019a25_jump:
		mov    0x000010(%esp),%ebx
		dec    %ebx
		mov    %ebx,0x000010(%esp)
		cmp    $0x000001,%bx
		jge    _0197ca_jump
		mov    _0ce3a2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0ce46c_data,%si
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		xor    %edi,%edi
		add    %edx,%eax
		test   %si,%si
		jle    _019a9a_jump

	_019a60_jump:
		cmpb   $0x000000,0x00007e(%eax)
		jne    _019a75_jump
		cmpw   $0x0000f5,0x000060(%eax)
		jne    _019a75_jump
		call   _018ae8_func
		jmp    _019a9a_jump

	_019a75_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0ce3a2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%edx
		add    %edx,%eax
		cmp    _0ce46c_data,%di
		jl     _019a60_jump

	_019a9a_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_019aa4_switch:
		.long   _019bcf_case
		.long   _019bc7_case
		.long   _019bbf_case
		.long   _019bb7_case




_019ab4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000028,%esp
		mov    $0x0000aa,%edx
		mov    $0x000003,%ebx
		mov    $0x000020,%ecx
		mov    _0cec80_data,%ax
		mov    $0x000004,%esi
		mov    %eax,0x00000c(%esp)
		mov    _0cec7e_data,%ax
		mov    %bx,0x000014(%esp)
		mov    %eax,0x000010(%esp)
		mov    $0x0000a0,%eax
		mov    %cx,0x000004(%esp)
		call   _01d0bc_func
		mov    $0x000006,%edx
		mov    %esi,0x000008(%esp)
		mov    %edx,0x000018(%esp)

	_019b05_jump:
		mov    0x000002(%esp),%ebx
		mov    $0x010000,%eax
		sar    $0x000010,%ebx
		mov    %eax,%edx
		add    $0x000100,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000024(%esp)
		mov    0x000022(%esp),%eax
		mov    _0cec7e_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    %eax,%ebx
		imul   %edx,%ebx
		sar    $0x000008,%ebx
		sub    %ebx,%edx
		mov    %dx,0x000020(%esp)
		mov    _0cec7c_data,%edx
		sar    $0x000010,%edx
		imul   %edx,%eax
		mov    0x000008(%esp),%ecx
		mov    0x000018(%esp),%esi
		mov    _0cecd4_data,%di
		dec    %ecx
		dec    %esi
		sar    $0x000008,%eax
		mov    0x000012(%esp),%ebx
		sub    %eax,%edx
		sar    $0x000010,%ebx
		mov    %dx,0x00001c(%esp)
		mov    _0ca316_data(,%ebx,2),%edx
		mov    %esi,0x000018(%esp)
		sar    $0x000010,%edx
		mov    _0ccd04_data,%eax
		shl    $0x000003,%edx
		mov    _0ca358_data(,%ebx,2),%si
		add    %eax,%edx
		mov    _0ca318_data(,%ebx,2),%ax
		mov    %ecx,0x000008(%esp)
		add    %eax,%esi
		cmp    $0x000001,%di
		je     _019bdf_jump
		cmp    $0x000003,%cx
		ja     _019bd7_jump
		xor    %ebx,%ebx
		mov    %cx,%bx
		jmp    *%cs:_019aa4_switch(,%ebx,4)

	_019bb7_case:
		mov    _0cc51c_data,%ebx
		jmp    _019c05_jump

	_019bbf_case:
		mov    _0cc520_data,%ebx
		jmp    _019c05_jump

	_019bc7_case:
		mov    _0cc4f0_data,%ebx
		jmp    _019c05_jump

	_019bcf_case:
		mov    _0cc4f8_data,%ebx
		jmp    _019c05_jump

	_019bd7_jump:
		mov    _0cc4ec_data,%ebx
		jmp    _019c05_jump

	_019bdf_jump:
		mov    0x000018(%esp),%ebx
		cmp    $0x000005,%bx
		jne    _019bf1_jump
		mov    _0cc524_data,%ebx
		jmp    _019c05_jump

	_019bf1_jump:
		cmp    $0x000002,%bx
		jle    _019bff_jump
		mov    _0cc4d4_data,%ebx
		jmp    _019c05_jump

	_019bff_jump:
		mov    _0cc4cc_data,%ebx

	_019c05_jump:
		mov    %ebx,(%esp)
		mov    %eax,%ecx
		cmp    %si,%ax
		jge    _019c4e_jump

	_019c0f_jump:
		mov    (%edx),%ebx
		mov    0x000022(%esp),%edi
		sar    $0x000010,%ebx
		sar    $0x000010,%edi
		imul   %edi,%ebx
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000008,%ebx
		add    %eax,%ebx
		movswl (%edx),%eax
		imul   %eax,%edi
		mov    0x00001e(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    $0x000008,%edx
		add    %edi,%eax
		mov    _0ccba4_data,%edi
		inc    %ecx
		call   *(%esp)
		cmp    %si,%cx
		jl     _019c0f_jump

	_019c4e_jump:
		mov    0x000014(%esp),%edi
		mov    0x000004(%esp),%eax
		inc    %edi
		add    $0x000020,%eax
		mov    %di,0x000014(%esp)
		mov    %ax,0x000004(%esp)
		cmp    $0x0000c0,%ax
		jl     _019b05_jump
		mov    0x00000c(%esp),%eax
		mov    %ax,_0cec80_data
		mov    0x000010(%esp),%eax
		mov    %ax,_0cec7e_data
		add    $0x000028,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019c90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    _0cec80_data,%ax
		mov    %eax,0x00001c(%esp)
		mov    _0cec7e_data,%ax
		mov    $0x0000aa,%edx
		mov    %eax,0x000020(%esp)
		mov    $0x0000a0,%eax
		mov    $0xffffffc0,%ebx
		call   _01d0bc_func
		xor    %edx,%edx
		mov    %bx,0x000008(%esp)
		mov    %dx,(%esp)
		mov    $0x010000,%ebp

	_019cd1_jump:
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		mov    _0ca316_data(,%ebx,2),%eax
		sar    $0x000010,%eax
		mov    _0ccd04_data,%ecx
		shl    $0x000003,%eax
		add    %eax,%ecx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    %ebp,%edx
		lea    0x000100(%eax),%edi
		sar    $0x00001f,%edx
		mov    %ebp,%eax
		idiv   %edi
		mov    %eax,%esi
		movswl %ax,%edi
		mov    _0cec7e_data,%eax
		mov    %edi,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		sar    $0x000008,%edx
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    _0cec7c_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%edi
		sar    $0x000008,%edi
		sub    %edi,%eax
		mov    _0ca358_data(,%ebx,2),%dx
		mov    %ax,0x000010(%esp)
		mov    _0ca318_data(,%ebx,2),%ax
		mov    _0cecd4_data,%bx
		add    %eax,%edx
		cmp    $0x000001,%bx
		je     _019e0c_jump
		cmpw   $0x000000,(%esp)
		jne    _019db7_jump
		mov    %eax,0x000018(%esp)
		cmp    %dx,%ax
		jge    _019e5b_jump

	_019d6b_jump:
		mov    (%ecx),%ebx
		movswl %si,%eax
		sar    $0x000010,%ebx
		imul   %eax,%ebx
		mov    0x00000e(%esp),%edi
		sar    $0x000010,%edi
		sar    $0x000008,%ebx
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %eax,%edi
		mov    0x00000a(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0ccba4_data,%edi
		call   *_0cc500_data
		mov    0x000018(%esp),%ebx
		inc    %ebx
		add    $0x000008,%ecx
		mov    %ebx,0x000018(%esp)
		cmp    %bx,%dx
		jle    _019e5b_jump
		jmp    _019d6b_jump

	_019db7_jump:
		mov    %eax,0x000014(%esp)
		cmp    %dx,%ax
		jge    _019e5b_jump

	_019dc4_jump:
		mov    (%ecx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %edi,%eax
		mov    0x00000a(%esp),%edi
		sar    $0x000008,%eax
		sar    $0x000010,%edi
		add    %edi,%eax
		mov    _0ccba4_data,%edi
		call   *_0cc504_data
		mov    0x000014(%esp),%edi
		inc    %edi
		add    $0x000008,%ecx
		mov    %edi,0x000014(%esp)
		cmp    %di,%dx
		jle    _019e5b_jump
		jmp    _019dc4_jump

	_019e0c_jump:
		mov    %eax,0x000004(%esp)
		cmp    %dx,%ax
		jge    _019e5b_jump

	_019e15_jump:
		mov    (%ecx),%edi
		movswl %si,%eax
		sar    $0x000010,%edi
		imul   %eax,%edi
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		sar    $0x000008,%edi
		add    %edi,%ebx
		movswl (%ecx),%edi
		imul   %eax,%edi
		mov    0x00000a(%esp),%eax
		sar    $0x000008,%edi
		sar    $0x000010,%eax
		add    %edi,%eax
		mov    _0ccba4_data,%edi
		call   *_0cc518_data
		mov    0x000004(%esp),%eax
		inc    %eax
		add    $0x000008,%ecx
		mov    %eax,0x000004(%esp)
		cmp    %ax,%dx
		jg     _019e15_jump

	_019e5b_jump:
		mov    (%esp),%ecx
		mov    0x000008(%esp),%esi
		inc    %ecx
		add    $0x000020,%esi
		mov    %cx,(%esp)
		mov    %si,0x000008(%esp)
		cmp    $0x000020,%si
		jl     _019cd1_jump
		mov    0x00001c(%esp),%eax
		mov    %ax,_0cec80_data
		mov    0x000020(%esp),%eax
		mov    %ax,_0cec7e_data
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019e98_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    %dx,(%esp)

	_019ea6_jump:
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000282,%edx,%edx
		cmpw   $0x000000,_0c90f0_data(%edx)
		je     _019f30_jump
		add    $_0c8e70_data,%edx
		xor    %ecx,%ecx

	_019ec9_jump:
		mov    0x000009(%edx),%bl
		cmp    $0x000080,%bl
		jb     _019f26_jump
		mov    (%edx),%esi
		mov    _0cc480_data,%eax
		sar    $0x000010,%esi
		shl    $0x000006,%eax
		cmp    %eax,%esi
		jle    _019f26_jump
		xor    %eax,%eax
		mov    0x000006(%edx),%al
		test   %eax,%eax
		jge    _019eed_jump
		neg    %eax

	_019eed_jump:
		cmp    $0x000080,%ax
		jl     _019ef7_jump
		mov    $0x000058,%al
		jmp    _019f09_jump

	_019ef7_jump:
		and    $0x00007f,%bl
		cwtl   
		and    $0x0000ff,%ebx
		sar    $0x000005,%eax
		add    $0x000004,%ebx
		add    %ebx,%eax

	_019f09_jump:
		mov    _0ccba4_data,%edi
		mov    (%edx),%ebx
		movzbl %al,%esi
		sar    $0x000010,%ebx
		movswl (%edx),%eax
		sar    $0x000006,%ebx
		sar    $0x000006,%eax
		call   *_0cc4e8_data

	_019f26_jump:
		inc    %ecx
		add    $0x00000a,%edx
		cmp    $0x000040,%cx
		jl     _019ec9_jump

	_019f30_jump:
		mov    (%esp),%ebx
		inc    %ebx
		mov    %bx,(%esp)
		cmp    $0x000008,%bx
		jl     _019ea6_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_019f4c_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %ax,0x00000c(%esp)
		mov    %dx,(%esp)
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000008(%esp)
		test   %ax,%ax
		jge    _019f7b_jump
		mov    %ebx,%esi
		xor    %edi,%edi
		add    %eax,%esi
		mov    %di,0x00000c(%esp)
		mov    %si,0x000004(%esp)
		jmp    _019f88_jump

	_019f7b_jump:
		cmp    $0x000140,%ax
		jle    _019f88_jump
		movw   $0x000140,0x00000c(%esp)

	_019f88_jump:
		mov    0x00000a(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0x000140,%eax
		jle    _019faf_jump
		mov    $0x000140,%eax
		mov    0x00000c(%esp),%edx
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)

	_019faf_jump:
		mov    (%esp),%ebx
		test   %bx,%bx
		jge    _019fcc_jump
		mov    0x000008(%esp),%edi
		mov    %ebx,%eax
		add    %ebx,%edi
		xor    %ebx,%eax
		mov    %di,0x000008(%esp)
		mov    %ax,(%esp)
		jmp    _019fd9_jump

	_019fcc_jump:
		cmp    $0x0000c8,%bx
		jle    _019fd9_jump
		movw   $0x0000c8,(%esp)

	_019fd9_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0x0000c8,%eax
		jle    _019fff_jump
		mov    $0x0000c8,%eax
		mov    (%esp),%edx
		sub    %edx,%eax
		mov    %ax,0x000008(%esp)

	_019fff_jump:
		cmpw   $0x000000,0x000004(%esp)
		jle    _01a16d_jump
		cmpw   $0x000000,0x000008(%esp)
		jle    _01a16d_jump
		cmpb   $0x0000ff,0x00001c(%esp)
		jne    _01a0b0_jump
		cmpb   $0x000001,_095b14_data
		jne    _01a054_jump
		mov    0x000002(%esp),%ecx
		mov    0x000006(%esp),%ebx
		mov    -0x000002(%esp),%edx
		mov    0x00000a(%esp),%esi
		mov    _0ccba4_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%esi
		call   _012fe6_func
		jmp    _01a0b0_jump

	_01a054_jump:
		mov    0x000020(%esp),%dh
		test   %dh,%dh
		je     _01a089_jump
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%esi
		xor    %eax,%eax
		mov    _0ccba4_data,%edi
		mov    %dh,%al
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		call   _014a8b_func
		jmp    _01a0b0_jump

	_01a089_jump:
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    _0ccba4_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _014a4e_func

	_01a0b0_jump:
		mov    0x000020(%esp),%bl
		cmp    $0x000001,%bl
		jne    _01a104_jump
		cmp    _095b14_data,%bl
		jne    _01a0ed_jump
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    _0ccba4_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _0130ae_func
		jmp    _01a16d_jump

	_01a0ed_jump:
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%esi
		mov    $0x002026,%eax
		jmp    _01a156_jump

	_01a104_jump:
		cmp    $0x000002,%bl
		jne    _01a16d_jump
		cmpb   $0x000001,_095b14_data
		jne    _01a141_jump
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    _0ccba4_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _0130ae_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_01a141_jump:
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    0x00000a(%esp),%esi
		mov    $0x002620,%eax

	_01a156_jump:
		mov    _0ccba4_data,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		call   _014b1a_func

	_01a16d_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01a178_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,(%esp)
		mov    %dx,0x00001c(%esp)
		mov    %cl,0x000024(%esp)
		cmp    $0x000002,%cl
		jne    _01a1ae_jump
		mov    $0x00000f,%ecx
		mov    $0x000001,%esi
		mov    $0x000008,%edi
		mov    %ecx,0x000014(%esp)
		mov    %si,0x000010(%esp)
		mov    %di,0x000008(%esp)
		jmp    _01a1ef_jump

	_01a1ae_jump:
		cmp    $0x000001,%cl
		jne    _01a1d2_jump
		mov    $0x000017,%edi
		mov    $0x000003,%eax
		mov    $0x00000a,%edx
		mov    %edi,0x000014(%esp)
		mov    %ax,0x000010(%esp)
		mov    %dx,0x000008(%esp)
		jmp    _01a1ef_jump

	_01a1d2_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%ecx
		mov    $0x00000c,%esi
		mov    %edx,0x000014(%esp)
		mov    %cx,0x000010(%esp)
		mov    %si,0x000008(%esp)

	_01a1ef_jump:
		mov    0x00001c(%esp),%eax
		mov    %ax,0x000018(%esp)
		mov    (%esp),%eax
		mov    (%eax),%dh
		mov    %ebx,0x00000c(%esp)
		test   %dh,%dh
		je     _01a3a4_jump
		xor    %eax,%eax
		mov    %ax,0x000020(%esp)
		jmp    _01a38e_jump

	_01a215_jump:
		cmp    $0x00002f,%bl
		jne    _01a25f_jump
		mov    0x00000e(%esp),%ecx
		xor    %eax,%eax
		mov    0x000006(%esp),%ebx
		mov    0x000024(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    0x000004(%esp),%eax
		call   _01ebec_func
		cwtl   
		mov    0x00001a(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000020(%esp),%ebx
		mov    %dx,0x000018(%esp)
		cmp    $0x000001,%bx
		jle    _01a25b_jump
		mov    0x000014(%esp),%eax
		add    %eax,0x00000c(%esp)

	_01a25b_jump:
		xor    %bl,%bl
		jmp    _01a285_jump

	_01a25f_jump:
		cmp    $0x000020,%bl
		jne    _01a277_jump
		mov    0x000008(%esp),%eax
		mov    0x000018(%esp),%edx
		add    %eax,%edx
		xor    %bl,%bl
		mov    %dx,0x000018(%esp)
		jmp    _01a285_jump

	_01a277_jump:
		mov    %bl,%al
		and    $0x0000ff,%eax
		call   _01eadc_func
		mov    %al,%bl

	_01a285_jump:
		test   %bl,%bl
		je     _01a389_jump
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    %bl,%cl
		mov    0x000024(%esp),%al
		mov    %ecx,%edx
		call   _01ea14_func
		mov    %eax,%edx
		mov    0x000024(%esp),%bh
		cmp    $0x000001,%bh
		jbe    _01a2b3_jump
		cmp    $0x000002,%bh
		je     _01a30b_jump
		jmp    _01a35f_jump

	_01a2b3_jump:
		jne    _01a2b8_jump
		add    $0x000029,%bl

	_01a2b8_jump:
		xor    %eax,%eax
		mov    %bl,%al
		imul   $0x00000c,%eax,%eax
		mov    _0ce210_data,%ebp
		add    %eax,%ebp
		xor    %eax,%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000006(%ebp),%al
		sub    %eax,%ebx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000004(%esp)
		xor    %ah,%ah
		mov    _0ccba4_data,%edi
		mov    0x000006(%ebp),%al
		xor    %ecx,%ecx
		shl    $0x000008,%eax
		mov    0x000000(%ebp),%esi
		add    %edx,%eax
		movswl %bx,%ebx
		mov    %ax,%cx
		xor    %edx,%edx
		mov    _0ce214_data,%eax
		mov    0x000038(%esp),%dl
		add    %eax,%esi
		mov    0x000004(%esp),%eax
		jmp    _01a359_jump

	_01a30b_jump:
		imul   $0x00000c,%ecx,%ecx
		mov    _0cdb24_data,%ebp
		add    %ecx,%ebp
		xor    %eax,%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		mov    0x000016(%esp),%edx
		sar    $0x000010,%edx
		mov    _0ccba4_data,%edi
		mov    %edx,0x000004(%esp)
		xor    %dh,%dh
		mov    _0cdb28_data,%esi
		mov    0x000006(%ebp),%dl
		xor    %ecx,%ecx
		shl    $0x000008,%edx
		movswl %bx,%ebx
		add    %edx,%eax
		mov    0x000000(%ebp),%edx
		mov    %ax,%cx
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x000004(%esp),%eax
		mov    0x000038(%esp),%dl

	_01a359_jump:
		call   *_0cc4e4_data

	_01a35f_jump:
		mov    0x000009(%ebp),%al
		and    $0x00000f,%al
		xor    %edx,%edx
		and    $0x0000ff,%eax
		mov    0x000007(%ebp),%dl
		add    %edx,%eax
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000018(%esp)

	_01a389_jump:
		incw   0x000020(%esp)

	_01a38e_jump:
		mov    0x00001e(%esp),%edx
		mov    (%esp),%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    (%eax),%bl
		test   %bl,%bl
		jne    _01a215_jump

	_01a3a4_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01a3b0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%ebp
		mov    %dx,0x000014(%esp)
		mov    %cl,0x00001c(%esp)
		xor    %ah,%ah
		mov    %ah,0x000018(%esp)
		cmp    $0x000002,%cl
		jne    _01a3ea_jump
		mov    $0x00000f,%edi
		mov    $0x000001,%eax
		mov    $0x000008,%edx
		mov    %edi,0x000004(%esp)
		mov    %ax,(%esp)
		mov    %dx,0x00000c(%esp)
		jmp    _01a429_jump

	_01a3ea_jump:
		cmp    $0x000001,%cl
		jne    _01a40d_jump
		mov    $0x000017,%eax
		mov    $0x000003,%edx
		mov    $0x00000a,%ecx
		mov    %eax,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %cx,0x00000c(%esp)
		jmp    _01a429_jump

	_01a40d_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%ecx
		mov    $0x00000c,%edi
		mov    %edx,0x000004(%esp)
		mov    %cx,(%esp)
		mov    %di,0x00000c(%esp)

	_01a429_jump:
		mov    %ebx,0x000010(%esp)
		mov    0x000000(%ebp),%bl
		mov    0x000014(%esp),%edi
		test   %bl,%bl
		je     _01a5ac_jump
		xor    %ebx,%ebx
		mov    %bx,0x000008(%esp)
		jmp    _01a598_jump

	_01a448_jump:
		cmp    $0x00002f,%bh
		jne    _01a491_jump
		mov    -0x000002(%esp),%ecx
		xor    %eax,%eax
		mov    0x00000a(%esp),%ebx
		mov    0x00001c(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    %ebp,%eax
		call   _01ebec_func
		cwtl   
		mov    0x000012(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000008(%esp),%eax
		mov    %edx,%edi
		cmp    $0x000001,%ax
		jle    _01a489_jump
		mov    0x000004(%esp),%eax
		add    %eax,0x000010(%esp)

	_01a489_jump:
		xor    %ah,%ah
		mov    %ah,0x000018(%esp)
		jmp    _01a4b4_jump

	_01a491_jump:
		cmp    $0x000020,%bh
		jne    _01a4a4_jump
		xor    %al,%al
		mov    0x00000c(%esp),%ecx
		mov    %al,0x000018(%esp)
		add    %ecx,%edi
		jmp    _01a4b4_jump

	_01a4a4_jump:
		mov    %bh,%al
		and    $0x0000ff,%eax
		call   _01eadc_func
		mov    %al,0x000018(%esp)

	_01a4b4_jump:
		cmpb   $0x000000,0x000018(%esp)
		je     _01a593_jump
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00001c(%esp),%bl
		mov    0x000018(%esp),%dl
		mov    %ebx,%eax
		call   _01ea14_func
		lea    0x000018(%esp),%edx
		mov    %ebx,%eax
		call   _01ebe4_func
		cmp    $0x000001,%bl
		jbe    _01a4ec_jump
		cmp    $0x000002,%bl
		je     _01a52e_jump
		jmp    _01a575_jump

	_01a4ec_jump:
		movzbl 0x000018(%esp),%esi
		imul   $0x00000c,%esi,%esi
		mov    _0ce210_data,%eax
		add    %eax,%esi
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00001c(%esp),%edx
		mov    0x000006(%esi),%al
		sub    %eax,%edx
		movswl %di,%ebx
		movswl %dx,%ecx
		mov    %esi,%eax
		mov    _0ce214_data,%edx
		jmp    _01a570_jump

	_01a52e_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    _0cdb24_data,%esi
		add    %eax,%esi
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00001c(%esp),%edx
		mov    0x000006(%esi),%al
		sub    %eax,%edx
		movswl %di,%ebx
		movswl %dx,%ecx
		mov    %esi,%eax
		mov    _0cdb28_data,%edx

	_01a570_jump:
		call   _01baf8_func

	_01a575_jump:
		mov    0x000009(%esi),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		add    %edx,%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		movswl %di,%edi
		sub    %edx,%eax
		add    %eax,%edi

	_01a593_jump:
		incw   0x000008(%esp)

	_01a598_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		lea    (%edx,%ebp,1),%eax
		mov    (%eax),%bh
		test   %bh,%bh
		jne    _01a448_jump

	_01a5ac_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000010



_01a5b8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,0x000004(%esp)
		mov    %dx,0x00000c(%esp)
		xor    %ah,%ah
		mov    0x00003c(%esp),%dl
		mov    %ah,0x000028(%esp)
		cmp    $0x000002,%dl
		jne    _01a5f5_jump
		mov    $0x00000f,%edi
		mov    $0x000001,%eax
		mov    $0x000008,%edx
		mov    %edi,0x000020(%esp)
		mov    %ax,0x000010(%esp)
		mov    %dx,0x000014(%esp)
		jmp    _01a636_jump

	_01a5f5_jump:
		cmp    $0x000001,%dl
		jne    _01a619_jump
		mov    $0x000017,%eax
		mov    $0x000003,%edx
		mov    $0x00000a,%esi
		mov    %eax,0x000020(%esp)
		mov    %dx,0x000010(%esp)
		mov    %si,0x000014(%esp)
		jmp    _01a636_jump

	_01a619_jump:
		mov    $0x000024,%edx
		mov    $0x000003,%esi
		mov    $0x00000c,%edi
		mov    %edx,0x000020(%esp)
		mov    %si,0x000010(%esp)
		mov    %di,0x000014(%esp)

	_01a636_jump:
		mov    0x00000c(%esp),%eax
		mov    %ax,0x000008(%esp)
		mov    0x000004(%esp),%eax
		mov    %ebx,0x000024(%esp)
		cmpb   $0x000000,(%eax)
		je     _01a825_jump
		xor    %ebx,%ebx
		mov    %cx,0x000018(%esp)
		mov    %bx,0x00001c(%esp)
		jmp    _01a80e_jump

	_01a661_jump:
		cmp    $0x00002f,%cl
		jne    _01a6af_jump
		mov    0x00000e(%esp),%ecx
		xor    %eax,%eax
		mov    0x000012(%esp),%ebx
		mov    0x00003c(%esp),%al
		sar    $0x000010,%ecx
		push   %eax
		sar    $0x000010,%ebx
		mov    0x000008(%esp),%eax
		call   _01ebec_func
		cwtl   
		mov    0x00000a(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x00001c(%esp),%esi
		mov    %dx,0x000008(%esp)
		cmp    $0x000001,%si
		jle    _01a6a7_jump
		mov    0x000020(%esp),%eax
		add    %eax,0x000024(%esp)

	_01a6a7_jump:
		xor    %dl,%dl
		mov    %dl,0x000028(%esp)
		jmp    _01a6d8_jump

	_01a6af_jump:
		cmp    $0x000020,%cl
		jne    _01a6cb_jump
		mov    0x000014(%esp),%eax
		mov    0x000008(%esp),%ecx
		add    %eax,%ecx
		xor    %ah,%ah
		mov    %cx,0x000008(%esp)
		mov    %ah,0x000028(%esp)
		jmp    _01a6d8_jump

	_01a6cb_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _01eadc_func
		mov    %al,0x000028(%esp)

	_01a6d8_jump:
		cmpb   $0x000000,0x000028(%esp)
		je     _01a7f6_jump
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00003c(%esp),%bl
		mov    0x000028(%esp),%dl
		mov    %ebx,%eax
		call   _01ea14_func
		lea    0x000028(%esp),%edx
		mov    %eax,%esi
		mov    %ebx,%eax
		call   _01ebe4_func
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000005,%cl
		call   _05bd50_func
		test   %ax,%ax
		js     _01a71b_jump
		sar    %cl,%ax
		jmp    _01a724_jump

	_01a71b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01a724_jump:
		cmp    $0x000001,%bl
		jbe    _01a733_jump
		cmp    $0x000002,%bl
		je     _01a774_jump
		jmp    _01a7cd_jump

	_01a733_jump:
		movzbl 0x000028(%esp),%ebp
		imul   $0x00000c,%ebp,%ebp
		mov    _0ce210_data,%edx
		add    %edx,%ebp
		xor    %edx,%edx
		mov    0x000024(%esp),%ebx
		mov    0x000006(%ebp),%dl
		mov    _0ccba4_data,%edi
		sub    %edx,%ebx
		xor    %dh,%dh
		xor    %ecx,%ecx
		shl    $0x000008,%edx
		add    %ebx,%eax
		add    %esi,%edx
		movswl %ax,%ebx
		mov    %dx,%cx
		mov    0x000000(%ebp),%esi
		mov    _0ce214_data,%edx
		mov    0x000006(%esp),%eax
		jmp    _01a7bc_jump

	_01a774_jump:
		movzbl 0x000028(%esp),%ebp
		imul   $0x00000c,%ebp,%ebp
		mov    _0cdb24_data,%edx
		add    %edx,%ebp
		xor    %edx,%edx
		mov    0x000024(%esp),%ebx
		mov    0x000006(%ebp),%dl
		mov    _0ccba4_data,%edi
		sub    %edx,%ebx
		xor    %ecx,%ecx
		mov    %ebx,%edx
		add    %ebx,%eax
		xor    %bh,%dh
		cwtl   
		mov    0x000006(%ebp),%dl
		mov    %eax,(%esp)
		shl    $0x000008,%edx
		mov    0x000006(%esp),%eax
		add    %esi,%edx
		mov    _0cdb28_data,%esi
		mov    %dx,%cx
		mov    0x000000(%ebp),%edx
		mov    (%esp),%ebx

	_01a7bc_jump:
		add    %edx,%esi
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000040(%esp),%dl
		call   *_0cc4e4_data

	_01a7cd_jump:
		mov    0x000009(%ebp),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%ebp),%al
		add    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %dx,0x000008(%esp)

	_01a7f6_jump:
		mov    0x000018(%esp),%eax
		mov    0x00001c(%esp),%edx
		add    $0x000020,%eax
		inc    %edx
		mov    %ax,0x000018(%esp)
		mov    %dx,0x00001c(%esp)

	_01a80e_jump:
		mov    0x00001a(%esp),%edx
		mov    0x000004(%esp),%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		mov    (%ebx),%cl
		test   %cl,%cl
		jne    _01a661_jump

	_01a825_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01a830_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    0x0000c8(%eax),%ax
		mov    0x0000ca(%esi),%dx
		mov    0x0000cc(%esi),%bx
		mov    0x0000ce(%esi),%cx
		sub    $0x000003,%eax
		sub    $0x000003,%edx
		add    $0x000006,%ebx
		add    $0x000006,%ecx
		cmpb   $0x000000,0x0000d5(%esi)
		je     _01a8f8_jump
		movzbl 0x0000d6(%esi),%edi
		movswl %cx,%ecx
		push   %edi
		movswl %bx,%ebx
		push   $0x0000ff
		movswl %dx,%edx
		cwtl   
		call   _019f4c_func
		mov    0x0000d6(%esi),%ah
		cmp    $0x000001,%ah
		jne    _01a8bf_jump
		xor    %eax,%eax
		mov    0x0000d7(%esi),%al
		push   %eax
		mov    0x0000d2(%esi),%ax
		dec    %eax
		movswl %ax,%ebx
		mov    0x0000d0(%esi),%ax
		xor    %ecx,%ecx
		dec    %eax
		mov    0x0000d4(%esi),%cl
		movswl %ax,%edx
		jmp    _01a940_jump

	_01a8bf_jump:
		cmp    $0x000002,%ah
		jne    _01a91d_jump
		xor    %eax,%eax
		mov    0x0000d7(%esi),%al
		push   %eax
		mov    0x0000d2(%esi),%ax
		inc    %eax
		movswl %ax,%ebx
		mov    0x0000d0(%esi),%ax
		xor    %ecx,%ecx
		inc    %eax
		mov    0x0000d4(%esi),%cl
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01a178_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01a8f8_jump:
		cmpb   $0x000000,0x0000d6(%esi)
		je     _01a91d_jump
		movzbl 0x0000d6(%esi),%edi
		movswl %cx,%ecx
		push   %edi
		movswl %bx,%ebx
		push   $0x0000fe
		movswl %dx,%edx
		cwtl   
		call   _019f4c_func

	_01a91d_jump:
		mov    0x0000d0(%esi),%ebx
		mov    0x0000ce(%esi),%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x0000d7(%esi),%al
		sar    $0x000010,%edx
		push   %eax
		mov    0x0000d4(%esi),%cl

	_01a940_jump:
		mov    %esi,%eax
		call   _01a178_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01a950_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpb   $0x000001,_095b14_data
		jne    _01a972_jump
		mov    $0x003e80,%ecx
		mov    _0ccba4_data,%edi
		call   _012783_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01a972_jump:
		mov    $0x00fa00,%ebx
		mov    _0cc534_data,%eax
		xor    %edx,%edx
		call   _07c050_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01a988_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,0x000008(%esp)
		mov    %edx,%ecx
		mov    _0cec42_data,%eax
		mov    %esp,%edi
		sar    $0x000010,%eax
		mov    $_0c8df8_data,%edx
		shl    $0x000002,%eax
		mov    $_018ae0_func,%esi
		add    %eax,%edx
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    (%edx),%ah
		mov    %edx,%esi
		inc    %ah
		mov    0x000001(%edx),%bl
		mov    %ah,(%edx)
		cmp    %bl,%ah
		jbe    _01a9e2_jump
		mov    $0x000007,%eax
		call   _0690e0_func
		mov    %eax,%ebx
		mov    $0x000005,%eax
		movb   $0x000000,(%edx)
		call   _0690e0_func
		mov    %al,0x000001(%edx)
		mov    %bl,0x000002(%edx)
		mov    %bl,0x000003(%edx)

	_01a9e2_jump:
		mov    0x000008(%esp),%edx
		mov    _0ced00_data,%bx
		mov    0x000002(%esi),%al
		sub    %ebx,%edx
		mov    _0cecea_data,%di
		xor    %ah,%ah
		sub    %edi,%ecx
		add    %eax,%edx
		add    %ecx,%eax
		test   %dx,%dx
		jle    _01aa80_jump
		movswl %dx,%ecx
		mov    $0x000140,%edx
		sub    %ecx,%edx
		test   %edx,%edx
		jle    _01aa80_jump
		test   %ax,%ax
		jle    _01aa80_jump
		movswl %ax,%ebx
		mov    $0x0000c8,%eax
		sub    %ebx,%eax
		test   %eax,%eax
		jle    _01aa80_jump
		xor    %eax,%eax
		mov    0x000003(%esi),%al
		mov    (%esp,%eax,1),%al
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%esi
		sub    %eax,%esi
		mov    _0cdb20_data,%eax
		shl    $0x000002,%esi
		mov    (%eax),%edx
		add    %esi,%edx
		movzbw 0x000006(%edx),%si
		movzbw 0x000005(%edx),%di
		shl    $0x000008,%esi
		add    %edi,%esi
		mov    0x000008(%eax),%eax
		movzwl %si,%ebp
		mov    (%edx),%esi
		add    %eax,%esi
		mov    0x00000a(%edx),%al
		shr    $0x000004,%al
		xor    %edx,%edx
		mov    _0ccba4_data,%edi
		mov    %al,%dl
		mov    %ecx,%eax
		mov    %ebp,%ecx
		call   *_0cc4f4_data

	_01aa80_jump:
		mov    _0cec44_data,%ax
		cmp    $0x00001e,%ax
		jge    _01aa96_jump
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0cec44_data

	_01aa96_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01aaa0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		cmpb   $0x000007,_0cdb01_data
		jne    _01ab62_jump
		testb  $0x000004,_0cdb15_data
		je     _01ab62_jump
		mov    _0cec84_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    %esp,%ecx
		add    %ebx,%eax
		mov    _0cc1f0_data,%esi
		shl    $0x000002,%eax
		xor    %edx,%edx
		add    %eax,%esi
		lea    0x000004(%esp),%eax
		mov    %dx,_0cec44_data
		push   %eax
		lea    0x00000c(%esp),%eax
		mov    $0x000001,%edx
		push   %eax
		lea    0x000014(%esp),%ebx
		mov    $_0cda94_data,%eax
		call   _01d710_func
		mov    0x000006(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		mov    0x000028(%esi),%cx
		mov    %eax,%edi
		mov    0x000002(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		xor    %ebx,%ebx
		add    %edx,%eax
		mov    0x000068(%esi),%bl
		sub    $0x000006,%eax
		add    %ecx,%ebx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000074(%esi),%al
		push   $0x000080
		add    %ecx,%eax
		push   $0x000005
		cwtl   
		movswl %bx,%ecx
		push   %eax
		movswl %dx,%ebx
		mov    $_01a988_func,%eax
		movswl %di,%edx
		call   _01ef3c_func

	_01ab62_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ab6c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000d8,%esp
		push   $0x000000
		mov    $0x000010,%ecx
		mov    $0x000140,%ebx
		push   $0x0000ff
		xor    %edx,%edx
		xor    %eax,%eax
		call   _019f4c_func
		push   $0x000000
		mov    $0x000028,%ecx
		mov    $0x000140,%ebx
		push   $0x0000ff
		mov    $0x0000a0,%edx
		xor    %eax,%eax
		call   _019f4c_func
		cmpb   $0x0000ff,_0ceea4_data
		je     _01acd6_jump
		mov    _0cec62_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cc1f0_data,%ebp
		add    %edx,%eax
		xor    %edx,%edx
		shl    $0x000002,%eax
		mov    _0ceea4_data,%dl
		add    %eax,%ebp
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    $_0cb978_data,%esi
		sub    %edx,%eax
		mov    $0x0000d8,%ecx
		shl    $0x000003,%eax
		mov    %esp,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01acd6_jump
		testb  $0x000004,0x000081(%ebp)
		je     _01accf_jump
		xor    %eax,%eax
		mov    $0x0000be,%edx
		mov    0x000069(%ebp),%al
		sub    %eax,%edx
		xor    %ebx,%ebx
		mov    %dx,0x000038(%ebp)
		mov    0x000068(%ebp),%bl
		add    0x000036(%ebp),%bx
		mov    0x0000c6(%esp),%eax
		movswl %bx,%esi
		sar    $0x000010,%eax
		lea    -0x000008(%esi),%edx
		cmp    %eax,%edx
		jle    _01ac78_jump
		mov    0x0000ca(%esp),%edi
		sar    $0x000010,%edi
		add    %eax,%edi
		cmp    %edi,%esi
		jge    _01ac78_jump
		sub    %eax,%edx
		mov    $0x000007,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cwtl   
		xor    %cl,%cl
		mov    %cl,(%esp,%eax,1)
		jmp    _01ac95_jump

	_01ac78_jump:
		mov    0x0000c6(%esp),%eax
		mov    0x0000ca(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		movswl %bx,%eax
		cmp    %edx,%eax
		jl     _01ac9c_jump

	_01ac95_jump:
		mov    %esp,%eax
		call   _01a830_func

	_01ac9c_jump:
		xor    %eax,%eax
		mov    0x000038(%ebp),%cx
		mov    0x000069(%ebp),%al
		push   $0x000000
		add    %ecx,%eax
		push   $0x0000ff
		sub    $0x000014,%eax
		mov    $0x000012,%ecx
		movswl %ax,%edx
		movswl %bx,%eax
		mov    $0x00001e,%ebx
		call   _019f4c_func
		mov    %ebp,%eax
		call   _018ae8_func
		jmp    _01acd6_jump

	_01accf_jump:
		mov    %esp,%eax
		call   _01a830_func

	_01acd6_jump:
		mov    _0cee9e_data,%ch
		cmp    $0x0000ff,%ch
		je     _01ad21_jump
		xor    %edx,%edx
		mov    %ch,%dl
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    $_0cb978_data,%esi
		sub    %edx,%eax
		mov    %esp,%edi
		shl    $0x000003,%eax
		mov    $0x0000d8,%ecx
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01ad21_jump
		mov    %esp,%eax
		call   _01a830_func

	_01ad21_jump:
		add    $0x0000d8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ad30_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		movswl %dx,%ebp
		shl    $0x000002,%ebp
		xor    %ebx,%ebx
		mov    _0ccd08_data(%ebp),%bl
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%eax
		mov    %ebx,%edx
		mov    %ax,(%esp)
		sar    $0x00001f,%edx
		mov    %ebx,%eax
		idiv   %ecx
		mov    _0cebea_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		add    $0x00001c,%edx
		mov    %dx,0x000004(%esp)
		mov    _0cec04_data,%dx
		push   $0x000001
		add    %edx,%eax
		movswl %si,%ebx
		sub    $0x000017,%eax
		mov    $0x00001b,%edx
		movswl %ax,%ecx
		mov    $_0cdb30_data,%eax
		call   _018cb0_func
		mov    _0cdb30_data,%eax
		mov    0x000149(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cebea_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cec04_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000004(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0cdb30_data,%eax
		call   _018cb0_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0cdb30_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cebea_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cec04_data,%cx
		xor    %edx,%edx
		add    %ecx,%eax
		mov    0x000008(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0cdb30_data,%eax
		call   _018cb0_func
		xor    %edx,%edx
		mov    _0ccd0b_data(%ebp),%dl
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x00001c,%edx
		mov    %dx,0x000004(%esp)
		mov    _0cdb30_data,%eax
		mov    0x000155(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cebea_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cec04_data,%dx
		add    $0x00000a,%esi
		add    %edx,%eax
		movswl %si,%ebx
		sub    $0x000017,%eax
		mov    $0x000039,%edx
		movswl %ax,%ecx
		mov    $_0ccd1c_data,%eax
		call   _018cb0_func
		mov    _0ccd1c_data,%edx
		xor    %eax,%eax
		mov    0x0002b1(%edx),%al
		add    %eax,%esi
		mov    _0cebea_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cec04_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000008(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0cdb30_data,%eax
		call   _018cb0_func
		xor    %edx,%edx
		mov    _0ccd0a_data(%ebp),%dl
		lea    0x000000(,%edx,4),%ebx
		sub    %edx,%ebx
		shl    $0x000003,%ebx
		add    %ebx,%edx
		shl    $0x000002,%edx
		mov    $0x000066,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %ax,%ebx
		mov    $0x000064,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x00000a,%ecx
		add    $0x00001c,%eax
		mov    %ebx,%edx
		mov    %ax,0x000008(%esp)
		sar    $0x00001f,%edx
		mov    %ebx,%eax
		idiv   %ecx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%edx
		mov    %dx,(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x00001c,%edx
		mov    _0cdb30_data,%eax
		mov    %dx,0x000004(%esp)
		mov    0x0001c1(%eax),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cebea_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		xor    %edx,%edx
		mov    _0cec04_data,%cx
		mov    0x00000c(%esp),%dl
		add    %ecx,%eax
		add    $0x00000a,%esi
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0cdb30_data,%eax
		call   _018cb0_func
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cdb30_data,%edx
		mov    0x000005(%edx,%eax,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cebea_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cec04_data,%dx
		movswl %si,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    $0x000017,%eax
		mov    0x000004(%esp),%dl
		movswl %ax,%ecx
		mov    $_0cdb30_data,%eax
		call   _018cb0_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0cdb30_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cebea_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000001
		mov    _0cec04_data,%bx
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000008(%esp),%dl
		sub    $0x000017,%eax
		movswl %si,%ebx
		movswl %ax,%ecx
		mov    $_0cdb30_data,%eax
		call   _018cb0_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    _0cdb30_data,%eax
		mov    0x000005(%eax,%ebx,4),%al
		xor    %ah,%ah
		add    %eax,%esi
		mov    _0cebea_data,%ax
		add    $0x000017,%eax
		imul   %edi,%eax
		push   $0x000002
		mov    _0cec04_data,%cx
		movswl %si,%edx
		add    %ecx,%eax
		mov    $0x000001,%ecx
		movswl %ax,%ebx
		mov    $_0c04a8_data,%eax
		call   _01a178_func
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01b074_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cebfe_data,%cx
		mov    _0cebea_data,%ax
		dec    %ecx
		add    $0x000017,%eax
		imul   %ecx,%eax
		mov    _0cec04_data,%dx
		push   $0x000000
		add    %edx,%eax
		mov    $0x00000a,%ebx
		sub    $0x000017,%eax
		mov    $0x000002,%edx
		movswl %ax,%ecx
		mov    $_0ccd1c_data,%eax
		call   _018cb0_func
		mov    _0cec02_data,%bx
		test   %bx,%bx
		je     _01b0f5_jump
		mov    %ebx,%ecx
		mov    _0cebea_data,%ax
		dec    %ecx
		add    $0x000017,%eax
		imul   %eax,%ecx
		push   $0x000000
		mov    _0cec04_data,%si
		mov    $0x000001,%edx
		add    %esi,%ecx
		mov    $0x00000a,%ebx
		sub    $0x000017,%ecx
		mov    $_0ccd1c_data,%eax
		movswl %cx,%ecx
		call   _018cb0_func

	_01b0f5_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b1bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000024,%esp
		mov    %eax,%ebx
		mov    _0cecc0_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmp    $0xfffffffe,%ebx
		je     _01b3e0_jump
		mov    $0x00003c,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    $0x00000a,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000258,%ecx
		mov    %dl,0x000018(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    $0x00000a,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x001770,%ecx
		mov    %dl,0x000014(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%edx
		mov    $0x00000a,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ah,%ah
		mov    %ah,0x00001c(%esp)
		mov    _0cc4a0_data,%ax
		sub    $0x000020,%eax
		push   $0x000005
		movswl %ax,%ebx
		mov    _0cc498_data,%ax
		mov    $0x000002,%ecx
		sub    $0x000034,%eax
		mov    %dl,0x000024(%esp)
		movswl %ax,%edx
		mov    _0c2524_data,%eax
		call   _01a178_func
		mov    0x000020(%esp),%dl
		test   %dl,%dl
		je     _01b2a9_jump
		mov    _0cc4a0_data,%ax
		sub    $0x00001e,%eax
		movswl %ax,%ecx
		mov    _0cc498_data,%ax
		sub    $0x000032,%eax
		movswl %ax,%ebx
		mov    %dl,%al
		add    $0x00001c,%al
		xor    %edx,%edx
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018cb0_func
		movb   $0x00000f,0x00001c(%esp)

	_01b2a9_jump:
		mov    _0cc4a0_data,%ax
		sub    $0x00001e,%eax
		movswl %ax,%ecx
		mov    _0cc498_data,%ax
		movzbw 0x00001c(%esp),%di
		sub    $0x000032,%eax
		add    %edi,%eax
		movswl %ax,%ebx
		mov    0x000014(%esp),%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018cb0_func
		mov    _0cc4a0_data,%ax
		sub    $0x00001e,%eax
		movswl %ax,%ecx
		mov    _0cc498_data,%ax
		sub    $0x000023,%eax
		add    %edi,%eax
		movswl %ax,%ebx
		mov    0x000018(%esp),%al
		xor    %edx,%edx
		add    $0x00001c,%al
		push   $0x000001
		mov    %al,%dl
		mov    %esi,%eax
		call   _018cb0_func
		mov    _0ccd14_data,%edx
		cmp    $0x000064,%edx
		jg     _01b3b1_jump
		xor    %eax,%eax
		mov    _0cee9b_data,%al
		push   %eax
		mov    _0c2518_data,%edi
		push   %edi
		lea    0x000008(%esp),%eax
		xor    %esi,%esi
		push   %eax
		mov    %esi,_0cdab8_data
		call   _07c07b_func
		mov    _0cee45_data,%bl
		add    $0x00000c,%esp
		cmp    $0x000004,%bl
		jae    _01b3e0_jump
		mov    _095ba9_data,%al
		mov    _095ba8_data,%bh
		add    %al,%bh
		mov    %bh,_095ba8_data
		cmp    $0x000005,%bh
		jbe    _01b376_jump
		mov    %al,%dl
		neg    %dl
		mov    %dl,_095ba9_data
		movb   $0x000005,_095ba8_data
		jmp    _01b388_jump

	_01b376_jump:
		test   %bh,%bh
		jne    _01b388_jump
		neg    %al
		mov    %al,_095ba9_data
		movb   $0x000001,_095ba8_data

	_01b388_jump:
		xor    %eax,%eax
		mov    $0x000002,%ecx
		mov    _095ba8_data,%al
		mov    $0x000064,%ebx
		push   %eax
		mov    $0x0000a0,%edx
		lea    0x000004(%esp),%eax
		call   _01a178_func
		add    $0x000024,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01b3b1_jump:
		cmp    $0x0000a0,%edx
		jg     _01b3e0_jump
		cmp    $0x000078,%edx
		jle    _01b3e0_jump
		mov    %esp,%edi
		push   $0x000005
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    $_0c04ac_data,%esi
		lea    0x000004(%esp),%eax
		xor    %ecx,%ecx
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   _01a178_func

	_01b3e0_jump:
		add    $0x000024,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b3ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000008,%esp
		cmpw   $0x0000ff,_0cec68_data
		jne    _01b43c_jump
		cmpb   $0x000000,_0cee78_data
		je     _01b421_jump
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b6,%ebx
		mov    $0x0000b5,%edx
		mov    $_0c04b4_data,%eax
		jmp    _01b560_jump

	_01b421_jump:
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b6,%ebx
		mov    $0x0000b5,%edx
		mov    $_0c04c4_data,%eax
		jmp    _01b560_jump

	_01b43c_jump:
		push   $0x000001
		mov    $0x0000a2,%ecx
		mov    $0x000092,%ebx
		mov    $0x00001b,%edx
		mov    $_0cdb30_data,%eax
		call   _018cb0_func
		push   $0x000000
		mov    $0x000022,%ecx
		mov    $0x000016,%ebx
		push   $0x0000ff
		mov    $0x0000a2,%edx
		mov    $0x000092,%eax
		call   _019f4c_func
		xor    %ebx,%ebx
		mov    _0cee88_data,%bl
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %ax,0x000004(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		mov    $0x0000bc,%ebx
		mov    0x000008(%esp),%al
		mov    %dx,0x000004(%esp)
		add    $0x00001c,%al
		xor    %edx,%edx
		mov    $0x0000a2,%ecx
		mov    %al,%dl
		mov    $_0cdb30_data,%eax
		call   _018cb0_func
		push   $0x000001
		mov    0x000004(%esp),%al
		mov    $0x0000a2,%ecx
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x0000cb,%ebx
		mov    %al,%dl
		mov    $_0cdb30_data,%eax
		call   _018cb0_func
		mov    _0cec66_data,%ebx
		sar    $0x000010,%ebx
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %ax,0x000004(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		mov    $0x000034,%ebx
		mov    0x000008(%esp),%al
		mov    %dx,0x000004(%esp)
		add    $0x00001c,%al
		xor    %edx,%edx
		mov    $0x0000a2,%ecx
		mov    %al,%dl
		mov    $_0cdb30_data,%eax
		call   _018cb0_func
		push   $0x000001
		mov    0x000004(%esp),%al
		mov    $0x0000a2,%ecx
		xor    %edx,%edx
		add    $0x00001c,%al
		mov    $0x000043,%ebx
		mov    %al,%dl
		mov    $_0cdb30_data,%eax
		call   _018cb0_func
		push   $0x000002
		mov    $0x000002,%ecx
		mov    $0x0000b8,%ebx
		mov    $0x000058,%edx
		mov    $_0c04d0_data,%eax

	_01b560_jump:
		call   _01a178_func
		mov    $_0cda94_data,%eax
		call   _018ae8_func
		mov    $_0ce18c_data,%eax
		call   _018ae8_func
		testb  $0x000004,_0ccd9d_data
		je     _01b58c_jump
		mov    $_0ccd1c_data,%eax
		call   _018ae8_func

	_01b58c_jump:
		add    $0x000008,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01b594_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000068,%esp
		mov    0x000078(%esp),%esi
		mov    %eax,0x000054(%esp)
		mov    %edx,0x00003c(%esp)
		mov    0x00007c(%esp),%eax
		mov    0x000088(%esp),%edi
		mov    %ebx,%edx
		mov    %di,0x000060(%esp)
		cmp    %bx,%si
		jge    _01b5cb_jump
		mov    0x000080(%esp),%edi
		mov    %esi,%edx
		mov    %di,0x000060(%esp)

	_01b5cb_jump:
		mov    0x000080(%esp),%edi
		cmp    %di,%dx
		jle    _01b5de_jump
		mov    %edi,%edx
		mov    %si,0x000060(%esp)

	_01b5de_jump:
		mov    0x000088(%esp),%edi
		cmp    %di,%dx
		jle    _01b5f1_jump
		mov    %edi,%edx
		mov    %bx,0x000060(%esp)

	_01b5f1_jump:
		mov    0x00008c(%esp),%edi
		mov    %cx,0x00005c(%esp)
		mov    %di,0x000064(%esp)
		cmp    %cx,%ax
		jge    _01b618_jump
		mov    0x000084(%esp),%edi
		mov    %ax,0x00005c(%esp)
		mov    %di,0x000064(%esp)

	_01b618_jump:
		mov    0x000084(%esp),%edi
		cmp    0x00005c(%esp),%di
		jge    _01b630_jump
		mov    %di,0x00005c(%esp)
		mov    %ax,0x000064(%esp)

	_01b630_jump:
		mov    0x00008c(%esp),%edi
		cmp    0x00005c(%esp),%di
		jge    _01b648_jump
		mov    %di,0x00005c(%esp)
		mov    %cx,0x000064(%esp)

	_01b648_jump:
		mov    0x00005e(%esp),%edi
		sar    $0x000010,%edi
		cwtl   
		mov    %edi,0x000034(%esp)
		movswl %si,%esi
		mov    0x000034(%esp),%ebp
		movswl %dx,%edi
		mov    %eax,0x000034(%esp)
		sub    %edi,%ebp
		movswl %cx,%eax
		mov    %ebp,%edi
		mov    0x000034(%esp),%ebp
		mov    %esi,0x000034(%esp)
		sub    %eax,%ebp
		movswl %bx,%esi
		mov    %ebp,%eax
		mov    0x000034(%esp),%ebp
		sub    %esi,%ebp
		mov    %ebp,0x000058(%esp)
		test   %eax,%eax
		jge    _01b696_jump
		mov    %edi,%esi
		mov    %edi,0x000048(%esp)
		neg    %esi
		neg    %eax
		mov    %esi,0x000048(%esp)
		jmp    _01b69a_jump

	_01b696_jump:
		mov    %edi,0x000048(%esp)

	_01b69a_jump:
		cmpl   $0x000000,0x000058(%esp)
		jge    _01b6b6_jump
		mov    0x000058(%esp),%esi
		mov    $0xffffffff,%ebp
		neg    %esi
		mov    %ebp,0x000040(%esp)
		mov    %esi,0x000058(%esp)
		jmp    _01b6be_jump

	_01b6b6_jump:
		movl   $0x000001,0x000040(%esp)

	_01b6be_jump:
		mov    0x000082(%esp),%esi
		sar    $0x000010,%esi
		mov    %esi,0x000034(%esp)
		mov    0x000034(%esp),%ebp
		movswl %cx,%esi
		sub    %esi,%ebp
		mov    %ebp,%esi
		mov    0x00007e(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,0x000034(%esp)
		movswl %bx,%ebp
		mov    %ebp,0x000038(%esp)
		mov    0x000034(%esp),%ebp
		sub    0x000038(%esp),%ebp
		mov    %ebp,0x000050(%esp)
		test   %esi,%esi
		jge    _01b709_jump
		mov    %edi,%ebp
		mov    %edi,0x000044(%esp)
		neg    %ebp
		neg    %esi
		mov    %ebp,0x000044(%esp)
		jmp    _01b70d_jump

	_01b709_jump:
		mov    %edi,0x000044(%esp)

	_01b70d_jump:
		cmpl   $0x000000,0x000050(%esp)
		jge    _01b722_jump
		movl   $0xffffffff,0x00004c(%esp)
		negl   0x000050(%esp)
		jmp    _01b72a_jump

	_01b722_jump:
		movl   $0x000001,0x00004c(%esp)

	_01b72a_jump:
		test   %eax,%eax
		jne    _01b72f_jump
		inc    %eax

	_01b72f_jump:
		test   %esi,%esi
		jne    _01b734_jump
		inc    %esi

	_01b734_jump:
		mov    0x000040(%esp),%ebp
		mov    %eax,0x00000c(%esp)
		mov    0x00004c(%esp),%eax
		mov    %ebp,(%esp)
		mov    0x000048(%esp),%ebp
		mov    %eax,0x000010(%esp)
		mov    0x000044(%esp),%eax
		mov    %ebp,0x000004(%esp)
		mov    0x000058(%esp),%ebp
		mov    %eax,0x000014(%esp)
		mov    0x000050(%esp),%eax
		mov    %ebp,0x000008(%esp)
		mov    0x00005a(%esp),%ebp
		mov    %eax,0x000018(%esp)
		mov    0x000062(%esp),%eax
		sar    $0x000010,%ebp
		sar    $0x000010,%eax
		sub    %ebp,%eax
		mov    %eax,0x000024(%esp)
		movswl %cx,%eax
		sub    %ebp,%eax
		mov    %edi,0x000020(%esp)
		imul   %eax,%edi
		movswl %dx,%ecx
		movswl %bx,%eax
		mov    %esi,0x00001c(%esp)
		sub    %ecx,%eax
		mov    %ecx,0x000038(%esp)
		add    %edi,%eax
		mov    0x000054(%esp),%ecx
		mov    %eax,0x000028(%esp)
		xor    %eax,%eax
		mov    0x000005(%ecx),%al
		mov    %eax,0x00002c(%esp)
		xor    %eax,%eax
		mov    0x000006(%ecx),%al
		mov    %eax,0x000030(%esp)
		mov    0x00003c(%esp),%esi
		mov    (%ecx),%ecx
		mov    _0ccbf8_data,%edi
		add    %ecx,%esi
		mov    %esp,%ecx
		mov    0x00005c(%esp),%ebx
		call   _014787_func
		mov    0x000064(%esp),%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000060(%esp),%eax
		shl    $0x000008,%ebx
		sub    %edx,%eax
		xor    %ecx,%ecx
		add    %ebx,%eax
		mov    %ax,%cx
		mov    0x000054(%esp),%eax
		mov    _0ccba4_data,%edi
		mov    _0ccbf8_data,%esi
		mov    0x00000a(%eax),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %ebp,%ebx
		mov    %al,%dl
		mov    0x000038(%esp),%eax
		call   *_0cc4f4_data
		add    $0x000068,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000018



_01b814_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000060,%esp
		mov    %eax,0x000008(%esp)
		mov    %dx,0x00005c(%esp)
		mov    %bx,0x000028(%esp)
		mov    %cx,0x000054(%esp)
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000008(%esp),%edx
		shl    $0x000002,%eax
		mov    0x000004(%edx),%edx
		add    %eax,%edx
		mov    0x000008(%edx),%ax
		mov    %edx,0x00000c(%esp)
		and    $0x00003f,%ah
		xor    %edx,%edx
		mov    0x000008(%esp),%ebx
		mov    %ax,%dx
		xor    %eax,%eax
		mov    0x00006b(%ebx),%al
		imul   %edx,%eax
		mov    0x00000c(%esp),%edx
		shl    $0x000002,%eax
		mov    (%edx),%edx
		add    %eax,%edx
		mov    %edx,(%esp)
		testb  $0x000020,0x000081(%ebx)
		je     _01b8db_jump
		lea    0x000010(%esp),%eax
		lea    0x00001c(%esp),%ecx
		xor    %edx,%edx
		push   %eax
		lea    0x000018(%esp),%eax
		mov    0x000075(%ebx),%dl
		push   %eax
		mov    %ebx,%eax
		lea    0x000028(%esp),%ebx
		call   _01d710_func
		mov    0x00001e(%esp),%edx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000012(%esp),%edx
		mov    0x000008(%esp),%ebx
		sar    $0x000010,%edx
		add    $0x000008,%eax
		sar    %edx
		mov    _0cecea_data,%cx
		add    %edx,%eax
		mov    0x00001c(%esp),%edx
		mov    %eax,0x000030(%esp)
		xor    %eax,%eax
		sub    %ecx,%edx
		mov    0x000074(%ebx),%al
		add    %eax,%edx
		mov    %edx,0x000018(%esp)
		jmp    _01b947_jump

	_01b8db_jump:
		lea    0x000034(%esp),%eax
		lea    0x000038(%esp),%ecx
		lea    0x00003c(%esp),%ebx
		push   %eax
		lea    0x000044(%esp),%edx
		mov    0x00000c(%esp),%eax
		call   _01d294_func
		mov    0x000040(%esp),%eax
		sub    _0ced00_data,%ax
		mov    0x00003c(%esp),%ebx
		add    $0x000008,%eax
		mov    0x000036(%esp),%edx
		mov    %ax,0x000040(%esp)
		mov    _0cecea_data,%ax
		sar    $0x000010,%edx
		sub    %eax,%ebx
		mov    0x00003e(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %bx,0x00003c(%esp)
		mov    %eax,0x000030(%esp)
		mov    0x000032(%esp),%eax
		mov    0x00003a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		mov    %eax,0x000018(%esp)

	_01b947_jump:
		xor    %esi,%esi
		mov    %si,0x000024(%esp)
		jmp    _01bad0_jump

	_01b953_jump:
		mov    (%esp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x000003(%esi),%al
		test   %ax,%ax
		je     _01bacb_jump
		cwtl   
		imul   $0x00000c,%eax,%eax
		mov    0x000008(%esp),%ebp
		mov    0x000008(%esp),%edx
		mov    0x000008(%esp),%ebx
		mov    0x000000(%ebp),%ebp
		mov    0x000036(%edx),%di
		xor    %edx,%edx
		mov    0x000038(%ebx),%cx
		mov    0x000002(%esi),%dl
		xor    %ebx,%ebx
		add    %ecx,%edx
		add    %eax,%ebp
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    0x000001(%esi),%al
		mov    0x000005(%ebp),%bl
		add    %edi,%eax
		mov    0x000030(%esp),%edi
		mov    %eax,%esi
		mov    0x000006(%ebp),%cl
		sub    %edi,%esi
		add    %ebx,%eax
		mov    %si,0x00002c(%esp)
		mov    %si,0x000048(%esp)
		sub    %edi,%eax
		mov    0x000018(%esp),%esi
		mov    0x000026(%esp),%edi
		mov    %ax,0x000058(%esp)
		mov    %edx,%eax
		sar    $0x000010,%edi
		sub    %esi,%eax
		add    %ecx,%edx
		mov    %ax,0x000050(%esp)
		mov    %ax,0x00004c(%esp)
		mov    %edi,%ecx
		sub    %esi,%edx
		mov    0x000052(%esp),%eax
		mov    0x00005a(%esp),%esi
		mov    %dx,0x000044(%esp)
		lea    0x000050(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		mov    %eax,0x000004(%esp)
		push   %eax
		mov    %esi,%ebx
		lea    0x000030(%esp),%eax
		call   _01bc80_func
		mov    0x000004(%esp),%ebx
		lea    0x00004c(%esp),%edx
		lea    0x000058(%esp),%eax
		push   %ebx
		mov    %edi,%ecx
		mov    %esi,%ebx
		call   _01bc80_func
		mov    0x000004(%esp),%ecx
		lea    0x000044(%esp),%edx
		lea    0x000048(%esp),%eax
		push   %ecx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _01bc80_func
		mov    0x000030(%esp),%eax
		mov    0x00002c(%esp),%edx
		mov    0x000058(%esp),%ebx
		mov    0x000048(%esp),%ecx
		mov    0x000050(%esp),%esi
		mov    0x00004c(%esp),%edi
		add    %eax,%edx
		add    %eax,%ebx
		add    %eax,%ecx
		mov    0x000018(%esp),%eax
		mov    %dx,0x00002c(%esp)
		mov    %bx,0x000058(%esp)
		mov    0x000044(%esp),%edx
		add    %eax,%esi
		add    %eax,%edi
		add    %eax,%edx
		mov    %di,0x00004c(%esp)
		mov    %dx,0x000044(%esp)
		mov    %ebx,%eax
		mov    %edi,%edx
		mov    0x000044(%esp),%edi
		sub    %esi,%edx
		mov    0x00002c(%esp),%ebx
		add    %edi,%edx
		sub    %ebx,%eax
		movswl %dx,%edx
		add    %ecx,%eax
		push   %edx
		cwtl   
		push   %eax
		mov    0x00004a(%esp),%eax
		sar    $0x000010,%eax
		mov    %cx,0x000050(%esp)
		push   %eax
		mov    0x000052(%esp),%eax
		mov    %si,0x00005c(%esp)
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ebx
		push   %eax
		mov    0x00005a(%esp),%eax
		mov    0x00005e(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00006a(%esp),%eax
		mov    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x000008(%edx),%edx
		mov    %ebp,%eax
		call   _01b594_func

	_01bacb_jump:
		incw   0x000024(%esp)

	_01bad0_jump:
		mov    0x00000c(%esp),%eax
		mov    0x000008(%eax),%ax
		xor    %edx,%edx
		and    $0x00003f,%ah
		mov    %ax,%dx
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _01b953_jump
		add    $0x000060,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_01baf8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    0x000009(%eax),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %al,%dl
		movswl %bx,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		sar    %eax
		add    %edx,%eax
		mov    %eax,0x000024(%esp)
		mov    0x000009(%esi),%al
		xor    %edx,%edx
		shr    $0x000004,%al
		mov    %al,%dl
		movswl %cx,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000008(%esi),%dl
		inc    %eax
		sar    %edx
		add    %edx,%eax
		mov    0x000024(%esp),%edx
		mov    %eax,0x000020(%esp)
		mov    %ebx,%eax
		sub    %edx,%eax
		mov    %ax,0x00001c(%esp)
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		add    %ebx,%eax
		sub    %edx,%eax
		mov    %ax,0x000008(%esp)
		mov    0x00001c(%esp),%eax
		mov    0x000020(%esp),%edi
		mov    %ax,0x000018(%esp)
		mov    %ecx,%eax
		mov    0x000036(%esp),%ebp
		sub    %edi,%eax
		sar    $0x000010,%ebp
		mov    %ax,0x000010(%esp)
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    %ebp,%ebx
		mov    0x000006(%esi),%al
		lea    0x000010(%esp),%edx
		add    %eax,%ecx
		mov    0x00003e(%esp),%eax
		sub    %edi,%ecx
		mov    0x00003a(%esp),%edi
		sar    $0x000010,%eax
		mov    %cx,0x000014(%esp)
		mov    %eax,0x000004(%esp)
		push   %eax
		sar    $0x000010,%edi
		lea    0x000020(%esp),%eax
		mov    %edi,%ecx
		call   _01bc80_func
		mov    0x000004(%esp),%ebx
		lea    0x00000c(%esp),%edx
		lea    0x000008(%esp),%eax
		push   %ebx
		mov    %edi,%ecx
		mov    %ebp,%ebx
		call   _01bc80_func
		mov    0x000004(%esp),%ecx
		lea    0x000014(%esp),%edx
		lea    0x000018(%esp),%eax
		push   %ecx
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _01bc80_func
		mov    0x000024(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    0x000008(%esp),%ebx
		mov    0x000018(%esp),%ecx
		mov    0x000010(%esp),%edi
		add    %eax,%edx
		add    %eax,%ebx
		add    %eax,%ecx
		mov    0x000020(%esp),%eax
		mov    %dx,0x00001c(%esp)
		mov    %bx,0x000008(%esp)
		mov    %cx,0x000018(%esp)
		mov    0x00000c(%esp),%edx
		mov    0x000014(%esp),%ebx
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %eax,%edx
		add    %eax,%ebx
		mov    0x000008(%esp),%eax
		mov    %dx,0x00000c(%esp)
		mov    0x000018(%esp),%edx
		sub    %ecx,%eax
		add    %eax,%edx
		mov    0x00000c(%esp),%eax
		sub    %edi,%eax
		add    %ebx,%eax
		cwtl   
		push   %eax
		movswl %dx,%eax
		mov    %bx,0x000018(%esp)
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		mov    %di,0x00001c(%esp)
		push   %eax
		mov    0x00001a(%esp),%eax
		mov    0x00001e(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x00001a(%esp),%eax
		mov    0x00002e(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01b594_func
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_01bc80_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		movswl %cx,%edx
		movswl (%eax),%eax
		imul   %edx,%eax
		sar    $0x00000c,%eax
		mov    0x000016(%esp),%edx
		mov    %eax,%ecx
		sar    $0x000010,%edx
		movswl (%esi),%eax
		imul   %edx,%eax
		sar    $0x00000c,%eax
		lea    0x000008(%esp),%edx
		mov    %ax,(%esp)
		movswl %bx,%eax
		lea    0x000004(%esp),%ebx
		call   _05bdcc_func
		mov    0x000002(%esp),%ebx
		movswl %cx,%edx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		imul   %eax,%ecx
		sub    %ecx,%ebx
		sar    $0x000009,%ebx
		mov    %bx,(%edi)
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   %edx,%eax
		add    %ebx,%eax
		sar    $0x000009,%eax
		mov    %ax,(%esi)
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01bd10_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    0x000010(%esp),%ebp
		movzbl 0x00006d(%eax),%esi
		lea    0x000000(,%esi,4),%edi
		mov    0x00000c(%eax),%esi
		add    %esi,%edi
		movzbl 0x00006c(%eax),%esi
		mov    (%edi),%edi
		shl    $0x000003,%esi
		add    %edi,%esi
		testb  $0x000040,0x000007(%esi)
		je     _01bd5b_jump
		mov    0x000028(%eax),%si
		add    $0x000045,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000026,%eax
		mov    %ax,(%ebx)
		movw   $0x000015,(%ecx)
		movw   $0x00001e,0x000000(%ebp)
		jmp    _01bda9_jump

	_01bd5b_jump:
		testb  $0x000080,0x000007(%esi)
		je     _01bd88_jump
		mov    0x000028(%eax),%si
		add    $0x000045,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000056,%eax
		mov    %ax,(%ebx)
		movw   $0x000022,(%ecx)
		movw   $0x00000a,0x000000(%ebp)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_01bd88_jump:
		mov    0x000028(%eax),%si
		add    $0x000047,%esi
		mov    %si,(%edx)
		mov    0x00002c(%eax),%ax
		add    $0x000047,%eax
		mov    %ax,(%ebx)
		movw   $0x00001d,(%ecx)
		movw   $0x000013,0x000000(%ebp)

	_01bda9_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01bdb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%edi
		call   _01d380_func
		mov    %ax,0x000018(%esp)
		mov    %edi,%eax
		call   _01d4b0_func
		mov    %ax,0x00001c(%esp)
		cmpb   $0x000000,0x00006d(%edi)
		jne    _01bded_jump
		mov    0x00006c(%edi),%dl
		cmp    $0x00001b,%dl
		je     _01be01_jump
		cmp    $0x000018,%dl
		je     _01be01_jump
		cmp    $0x00001e,%dl
		je     _01be01_jump
		cmp    $0x00000b,%dl
		je     _01be01_jump

	_01bded_jump:
		cmpb   $0x000001,0x00006d(%edi)
		jne    _01beb4_jump
		cmpb   $0x000002,0x00006c(%edi)
		jne    _01beb4_jump

	_01be01_jump:
		cmpb   $0x000000,_0cdbc2_data
		je     _01bed5_jump
		mov    _0cdb20_data,%esi
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%bx
		mov    0x00002c(%esi),%dx
		add    %eax,%ebx
		mov    %edx,%ecx
		mov    %bx,0x000010(%esp)
		xor    %eax,%eax
		xor    %edx,%ecx
		mov    0x000069(%esi),%al
		xor    %ebx,%ebx
		mov    0x000068(%edi),%cl
		mov    0x000074(%esi),%bl
		mov    0x000028(%edi),%si
		add    %edx,%eax
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    %si,0x000014(%esp)
		mov    0x000069(%edi),%cl
		mov    0x00002c(%edi),%si
		add    %edx,%ebx
		add    %ecx,%esi
		xor    %ecx,%ecx
		mov    0x00002c(%edi),%dx
		mov    0x000074(%edi),%cl
		add    %edx,%ecx
		add    $0x000005,%esi
		sub    $0x000005,%ecx
		cmp    %si,%ax
		jle    _01be72_jump
		cmp    %si,%bx
		jg     _01bed5_jump

	_01be72_jump:
		cmp    %cx,%ax
		jge    _01be7c_jump
		cmp    %cx,%bx
		jl     _01bed5_jump

	_01be7c_jump:
		mov    0x000012(%esp),%ecx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		lea    0x00003c(%ecx),%esi
		cmp    %esi,%ebx
		jg     _01bed5_jump
		sub    $0x00003c,%ecx
		cmp    %ecx,%ebx
		jl     _01bed5_jump
		mov    $0x000019,%ebx
		mov    %edi,%eax
		movw   $0x000000,0x000040(%edi)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%edi)
		call   _01d374_func
		jmp    _01bed5_jump

	_01beb4_jump:
		cmpb   $0x000000,0x00006d(%edi)
		jne    _01bed5_jump
		cmpb   $0x00001a,0x00006c(%edi)
		jne    _01bed5_jump
		cmpb   $0x000000,_0cdbc2_data
		jne    _01bed5_jump
		mov    $0x00001b,%edx
		mov    %edi,%eax
		call   _01d364_func

	_01bed5_jump:
		cmpb   $0x000001,0x00006d(%edi)
		jne    _01bf55_jump
		cmpb   $0x000002,0x00006c(%edi)
		jne    _01bf55_jump
		mov    %edi,%eax
		call   _053c34_func
		xor    %edx,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _024c98_func
		mov    %al,%bl
		testb  $0x000001,_092224_data(%ebx)
		je     _01bf4e_jump
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		xor    %ebx,%ebx
		shr    $0x000007,%al
		mov    $0x000001,%ecx
		mov    %al,%bl
		sub    %ebx,%ecx
		mov    %cl,%al
		mov    0x000081(%edi),%ch
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		xor    %edx,%edx
		mov    %ch,%ah
		mov    %ch,0x000081(%edi)
		or     %al,%ah
		mov    $0x000018,%ebx
		mov    %ah,0x000081(%edi)
		mov    %edi,%eax
		call   _01d374_func
		mov    %edi,%eax
		call   _053c34_func

	_01bf4e_jump:
		mov    %edi,%eax
		call   _0252c0_func

	_01bf55_jump:
		mov    0x00001a(%esp),%esi
		mov    0x000016(%esp),%ecx
		mov    %edi,%eax
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		mov    %esi,%ebx
		mov    %ecx,%edx
		call   _01d624_func
		test   %ax,%ax
		je     _01c02d_jump
		mov    %esi,%ebx
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _01c02d_jump
		cmpb   $0x000001,0x00006d(%edi)
		jne    _01bfed_jump
		cmpb   $0x000002,0x00006c(%edi)
		jne    _01bfed_jump
		mov    $0x000015,%ebx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		xor    %ebx,%ebx
		shr    $0x000007,%al
		mov    $0x000001,%ecx
		mov    %al,%bl
		sub    %ebx,%ecx
		movw   $0x000000,0x000040(%edi)
		mov    %cl,%al
		mov    0x000081(%edi),%cl
		and    $0x000001,%al
		and    $0x0000f7,%cl
		shl    $0x000003,%al
		mov    %cl,0x000081(%edi)
		mov    %cl,%ch
		movw   $0x000000,0x000042(%edi)
		or     %al,%ch
		mov    %ch,0x000081(%edi)
		jmp    _01c18e_jump

	_01bfed_jump:
		mov    0x00006d(%edi),%dl
		cmp    $0x000002,%dl
		jne    _01c18e_jump
		mov    0x00006c(%edi),%dh
		cmp    $0x000003,%dh
		je     _01c00e_jump
		cmp    $0x000001,%dh
		je     _01c00e_jump
		cmp    %dl,%dh
		jne    _01c18e_jump

	_01c00e_jump:
		mov    $0x00000c,%ebx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%edi)
		movw   $0x000000,0x000042(%edi)
		jmp    _01c18e_jump

	_01c02d_jump:
		cmpb   $0x000002,0x00006d(%edi)
		jne    _01c050_jump
		cmpb   $0x000001,0x00006c(%edi)
		jne    _01c050_jump
		cmpb   $0x000000,0x00006b(%edi)
		jne    _01c050_jump
		movw   $0x000000,0x000040(%edi)
		movw   $0x00fff6,0x000042(%edi)
		jmp    _01c18e_jump

	_01c050_jump:
		cmpb   $0x000000,0x00006d(%edi)
		jne    _01c18e_jump
		cmpb   $0x000014,0x00006c(%edi)
		jne    _01c18e_jump
		cmpb   $0x00001b,0x00006b(%edi)
		jne    _01c18e_jump
		mov    _0cc1f0_data,%esi
		mov    _0cc1f4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _01c18e_jump

	_01c086_jump:
		cmpw   $0x0000c4,0x000060(%esi)
		jne    _01c17e_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _01c17e_jump
		lea    0x000004(%esp),%ebx
		lea    0x000008(%esp),%ecx
		push   %ebx
		lea    0x000004(%esp),%ebx
		mov    $0x000002,%edx
		push   %ebx
		mov    %edi,%eax
		lea    0x000014(%esp),%ebx
		call   _01d710_func
		andb   $0x0000f7,0x000081(%esi)
		xor    %ebx,%ebx
		mov    0x00000a(%esp),%ecx
		mov    0x000068(%esi),%bl
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		sar    %ebx
		add    %ebx,%ecx
		mov    %ecx,0x000028(%esi)
		mov    %ecx,%ebx
		mov    %cx,0x00003c(%esi)
		xor    %ecx,%ebx
		mov    0x000006(%esp),%ecx
		mov    0x000069(%esi),%bl
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x000081(%esi),%ah
		mov    %ecx,%ebx
		mov    0x000002(%esp),%ecx
		movw   $0x000000,0x000040(%esi)
		or     $0x000004,%ah
		movw   $0x000020,0x000042(%esi)
		sar    $0x000010,%ecx
		movl   $0x000001,0x000024(%esi)
		sar    %ecx
		mov    %ah,0x000081(%esi)
		add    %ecx,%ebx
		mov    %ebx,0x00002c(%esi)
		mov    %esi,%eax
		mov    %bx,0x00003e(%esi)
		call   _01f304_func
		mov    _0cdaa0_data,%ecx
		mov    0x000081(%esi),%dl
		xor    %ebx,%ebx
		movw   $0x00ffff,0x000046(%esi)
		mov    _0cdb01_data,%bl
		movw   $0x000000,0x000048(%esi)
		shl    $0x000002,%ebx
		or     $0x000010,%dl
		add    %ecx,%ebx
		mov    %dl,0x000081(%esi)
		xor    %ecx,%ecx
		mov    (%ebx),%ebx
		mov    _0cdb00_data,%cl
		mov    0x000007(%ebx,%ecx,8),%dh
		test   $0x000040,%dh
		setne  %al
		mov    %al,_0ceee4_data
		mov    %esi,%eax
		call   _01c3ac_func
		jmp    _01c18e_jump

	_01c17e_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %bx,%ax
		jl     _01c086_jump

	_01c18e_jump:
		cmpb   $0x000000,0x00006d(%edi)
		jne    _01c1cc_jump
		mov    0x00006c(%edi),%bh
		cmp    $0x000014,%bh
		je     _01c1a6_jump
		cmp    $0x00000d,%bh
		je     _01c1a6_jump
		cmp    $0x000017,%bh
		jne    _01c1cc_jump

	_01c1a6_jump:
		mov    _0cdabc_data,%ebx
		mov    0x000028(%edi),%esi
		lea    0x000081(%edi),%ecx
		cmp    %esi,%ebx
		setg   %al
		and    $0x000001,%al
		mov    (%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,(%ecx)
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,(%ecx)

	_01c1cc_jump:
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c1d8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    0x000076(%eax),%ah
		dec    %ah
		mov    %ah,0x000076(%ecx)
		jne    _01c257_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01c207_jump
		mov    0x00006c(%ecx),%dh
		cmp    $0x00000c,%dh
		je     _01c225_jump
		cmp    $0x00000d,%dh
		je     _01c225_jump
		cmp    $0x000017,%dh
		je     _01c225_jump
		cmp    $0x000014,%dh
		je     _01c225_jump

	_01c207_jump:
		mov    0x00006d(%ecx),%ah
		cmp    $0x000002,%ah
		jne    _01c22c_jump
		mov    0x00006c(%ecx),%dl
		cmp    %ah,%dl
		je     _01c225_jump
		cmp    $0x000003,%dl
		je     _01c225_jump
		cmp    $0x00001c,%dl
		je     _01c225_jump
		cmp    $0x000007,%dl
		jne    _01c22c_jump

	_01c225_jump:
		mov    $0x000013,%ebx
		jmp    _01c231_jump

	_01c22c_jump:
		mov    $0x000012,%ebx

	_01c231_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%al
		mov    %al,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01c257_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _01c263_jump
		cmpb   $0x000002,0x00006c(%ecx)
		je     _01c288_jump

	_01c263_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01c2a7_jump
		mov    0x00006c(%ecx),%al
		cmp    $0x00000b,%al
		je     _01c288_jump
		cmp    $0x00001d,%al
		je     _01c288_jump
		cmp    $0x00001a,%al
		je     _01c288_jump
		cmp    $0x000019,%al
		je     _01c288_jump
		cmp    $0x00001b,%al
		je     _01c288_jump
		cmp    $0x000018,%al
		je     _01c288_jump
		cmp    $0x00001e,%al
		jne    _01c2a7_jump

	_01c288_jump:
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000042(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01c2a7_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01c2ed_jump
		mov    0x00006c(%ecx),%dl
		cmp    $0x00000c,%dl
		je     _01c2c4_jump
		cmp    $0x00000d,%dl
		je     _01c2c4_jump
		cmp    $0x000017,%dl
		je     _01c2c4_jump
		cmp    $0x000014,%dl
		jne    _01c2ed_jump

	_01c2c4_jump:
		mov    _0cdabc_data,%edx
		cmp    0x000028(%ecx),%edx
		jle    _01c2d8_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _01c2df_jump

	_01c2d8_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_01c2df_jump:
		mov    $0x000011,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func

	_01c2ed_jump:
		pop    %ecx
		pop    %ebx
		ret    



_01c2f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _01c314_jump
		mov    0x00006c(%eax),%dh
		cmp    $0x00000d,%dh
		je     _01c306_jump
		cmp    $0x00000c,%dh
		jne    _01c314_jump

	_01c306_jump:
		mov    $0x000014,%edx
		call   _01d364_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c314_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _01c320_jump
		cmpb   $0x00000b,0x00006c(%eax)
		je     _01c338_jump

	_01c320_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _01c32c_jump
		cmpb   $0x00001e,0x00006c(%eax)
		je     _01c338_jump

	_01c32c_jump:
		cmpb   $0x000001,0x00006d(%eax)
		jne    _01c3a6_jump
		cmpb   $0x000002,0x00006c(%eax)
		jne    _01c3a6_jump

	_01c338_jump:
		mov    _0cdabc_data,%edx
		mov    0x000028(%eax),%ebx
		cmp    %ebx,%edx
		setg   %dl
		mov    %dl,%dh
		mov    0x000081(%eax),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		cmp    %dh,%dl
		setne  %dl
		and    $0x0000ff,%edx
		je     _01c3a6_jump
		mov    _0cdabc_data,%ebx
		mov    0x000028(%eax),%ecx
		lea    0x000081(%eax),%edx
		cmp    %ecx,%ebx
		setg   %bl
		and    $0x0000ff,%ebx
		and    $0x000001,%bl
		mov    (%edx),%bh
		and    $0x0000f7,%bh
		mov    %bh,(%edx)
		shl    $0x000003,%bl
		mov    %bh,%cl
		or     %bl,%cl
		mov    %cl,(%edx)
		mov    $0x000018,%ebx
		movw   $0x000000,0x000040(%eax)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%eax)
		call   _01d374_func

	_01c3a6_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c3ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000001,0x000070(%eax)
		je     _01c618_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%di
		mov    0x000068(%esi),%al
		add    %eax,%edi
		xor    %eax,%eax
		mov    _0cdabc_data,%dx
		mov    _0cdafc_data,%al
		add    %edx,%eax
		sub    %edi,%eax
		mov    _0ceee4_data,%bl
		mov    %eax,%edi
		test   %bl,%bl
		je     _01c40a_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0cdac0_data,%cx
		mov    _0cdafd_data,%bl
		add    %ecx,%ebx
		sub    %eax,%ebx
		jmp    _01c429_jump

	_01c40a_jump:
		xor    %eax,%eax
		mov    _0cdafd_data,%al
		mov    _0cdac0_data,%edx
		sar    %eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%al
		add    %ebp,%eax
		sub    %eax,%edx
		mov    %edx,%ebx

	_01c429_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _01c432_jump
		neg    %eax

	_01c432_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _01c43d_jump
		neg    %eax

	_01c43d_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    0x000069(%esi),%dl
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x00002c(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0cdac0_data,%ecx
		mov    _0cdafd_data,%al
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _01c5dd_jump
		mov    _0cdabc_data,%ecx
		mov    0x000028(%esi),%ebp
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%dl
		mov    _0cdafc_data,%al
		add    %ebp,%edx
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _01c493_jump
		testb  $0x000008,0x000081(%esi)
		je     _01c4c2_jump

	_01c493_jump:
		mov    _0cdabc_data,%ecx
		mov    0x000028(%esi),%ebp
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000068(%esi),%al
		mov    _0cdafc_data,%dl
		add    %ebp,%eax
		add    %ecx,%edx
		cmp    %eax,%edx
		jge    _01c5dd_jump
		testb  $0x000008,0x000081(%esi)
		je     _01c5dd_jump

	_01c4c2_jump:
		cmpw   $0x000000,(%esp)
		jle    _01c4f0_jump
		mov    $0x000005,%cl
		mov    %edi,%eax
		mov    -0x000002(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000005,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_01c4f0_jump:
		mov    0x000040(%esi),%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    $0x000020,%ebx
		cmp    $0x000000,%eax
		je     _01c50e_jump
		mov    $0x000001,%eax
		jg     _01c50e_jump
		neg    %eax

	_01c50e_jump:
		add    %edx,%eax
		cmp    %ebx,%eax
		jle    _01c516_jump
		mov    %ebx,%eax

	_01c516_jump:
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jge    _01c51e_jump
		mov    %ebx,%eax

	_01c51e_jump:
		mov    %ax,0x000042(%esi)
		test   %ax,%ax
		je     _01c561_jump
		mov    0x00003e(%esi),%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    $0x000020,%ebx
		cmp    $0x000000,%eax
		je     _01c545_jump
		mov    $0x000001,%eax
		jg     _01c545_jump
		neg    %eax

	_01c545_jump:
		add    %edx,%eax
		cmp    %ebx,%eax
		jle    _01c54d_jump
		mov    %ebx,%eax

	_01c54d_jump:
		mov    $0xffffffe0,%ebx
		cmp    %ebx,%eax
		jge    _01c558_jump
		mov    %ebx,%eax

	_01c558_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c647_jump

	_01c561_jump:
		testb  $0x000008,0x000081(%esi)
		je     _01c5a5_jump
		mov    $0xffffffe0,%edx
		mov    0x000040(%esi),%cx
		mov    $0x000020,%ebx
		cmp    %cx,%di
		setg   %al
		mov    %eax,%ecx
		mov    0x00003e(%esi),%eax
		and    $0x0000ff,%ecx
		sar    $0x000010,%eax
		sub    %ecx,%eax
		cmp    %ebx,%eax
		jle    _01c594_jump
		mov    %ebx,%eax

	_01c594_jump:
		mov    %edx,%ebx
		cmp    %ebx,%eax
		jge    _01c59c_jump
		mov    %ebx,%eax

	_01c59c_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c647_jump

	_01c5a5_jump:
		mov    $0xffffffe0,%edx
		mov    0x000040(%esi),%cx
		mov    $0x000020,%ebx
		cmp    %cx,%di
		setl   %al
		mov    %eax,%ecx
		mov    0x00003e(%esi),%eax
		and    $0x0000ff,%ecx
		sar    $0x000010,%eax
		add    %ecx,%eax
		cmp    %ebx,%eax
		jle    _01c5cf_jump
		mov    %ebx,%eax

	_01c5cf_jump:
		mov    %edx,%ebx
		cmp    %ebx,%eax
		jge    _01c5d7_jump
		mov    %ebx,%eax

	_01c5d7_jump:
		mov    %ax,0x000040(%esi)
		jmp    _01c647_jump

	_01c5dd_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		mov    $0x000020,%ebx
		add    %eax,%eax
		cmp    %ebx,%eax
		jle    _01c5f0_jump
		mov    %ebx,%eax

	_01c5f0_jump:
		mov    $0xffffffe0,%ebx
		cmp    %ebx,%eax
		jge    _01c5fb_jump
		mov    %ebx,%eax

	_01c5fb_jump:
		mov    %ax,0x000040(%esi)
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		mov    $0x000020,%ebx
		add    %eax,%eax
		cmp    %ebx,%eax
		jle    _01c612_jump
		mov    %ebx,%eax

	_01c612_jump:
		mov    %ax,0x000042(%esi)
		jmp    _01c647_jump

	_01c618_jump:
		mov    _0cdabc_data,%ecx
		mov    0x000028(%esi),%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%dl
		mov    _0cdafc_data,%al
		add    %ebx,%edx
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _01c63e_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _01c647_jump

	_01c63e_jump:
		jge    _01c647_jump
		orb    $0x000008,0x000081(%esi)

	_01c647_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _01c66e_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _01c66e_jump
		testb  $0x000008,0x000081(%esi)
		je     _01c665_jump
		mov    $0xffffffff,%eax
		jmp    _01c66a_jump

	_01c665_jump:
		mov    $0x000001,%eax

	_01c66a_jump:
		mov    %ax,0x000040(%esi)

	_01c66e_jump:
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01c67a_jump
		neg    %eax

	_01c67a_jump:
		movswl %ax,%edx
		mov    0x000040(%esi),%ebx
		lea    0x000000(,%edx,4),%edi
		sar    $0x000010,%ebx
		sub    %edx,%edi
		cmp    %ebx,%edi
		jge    _01c696_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _01c6cb_jump

	_01c696_jump:
		lea    0x000000(,%ebx,4),%eax
		lea    0x000000(,%edx,4),%ecx
		sub    %ebx,%eax
		cmp    %eax,%ecx
		jge    _01c6b0_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _01c6cb_jump

	_01c6b0_jump:
		shl    $0x000002,%ebx
		cmp    %ebx,%edi
		jge    _01c6bd_jump
		movb   $0x00000b,0x00006b(%esi)
		jmp    _01c6cb_jump

	_01c6bd_jump:
		cmp    %eax,%edx
		jge    _01c6c7_jump
		movb   $0x00000a,0x00006b(%esi)
		jmp    _01c6cb_jump

	_01c6c7_jump:
		movb   $0x000009,0x00006b(%esi)

	_01c6cb_jump:
		cmpw   $0x000000,0x000040(%esi)
		jle    _01c6ea_jump
		mov    0x000081(%esi),%dl
		test   $0x000008,%dl
		je     _01c6ea_jump
		mov    %dl,%bh
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%esi)
		jmp    _01c707_jump

	_01c6ea_jump:
		cmpw   $0x000000,0x000040(%esi)
		jge    _01c707_jump
		mov    0x000081(%esi),%dh
		test   $0x000008,%dh
		jne    _01c707_jump
		mov    %dh,%bl
		or     $0x000008,%bl
		mov    %bl,0x000081(%esi)

	_01c707_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c714_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000007,0x00006c(%eax)
		jne    _01c73e_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c73e_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01c750_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _01c750_jump
		movw   $0x000000,0x000052(%ecx)

	_01c750_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000001,%al
		jbe    _01c763_jump
		cmp    $0x000002,%al
		je     _01c80d_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c763_jump:
		test   %al,%al
		jne    _01c770_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _01c777_jump

	_01c770_jump:
		orb    $0x000008,0x000081(%ecx)

	_01c777_jump:
		mov    %ecx,%eax
		call   _053c34_func
		mov    0x00006d(%ecx),%dh
		movw   $0x000001,0x000050(%ecx)
		test   %dh,%dh
		jne    _01c799_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func

	_01c799_jump:
		mov    0x00006d(%ecx),%bl
		cmp    $0x000001,%bl
		jne    _01c86f_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		test   %bl,_092224_data(%eax)
		je     _01c7fb_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _01c7de_jump
		mov    0x000081(%ecx),%dl
		mov    $0x000001,%ebx
		or     $0x000008,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    $0x000002,%edx
		jmp    _01c7f6_jump

	_01c7de_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		and    $0x0000f7,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax

	_01c7f6_jump:
		call   _05efb0_func

	_01c7fb_jump:
		mov    %ecx,%eax
		call   _053c34_func
		mov    %ecx,%eax
		call   _0252c0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c80d_jump:
		mov    0x00006d(%ecx),%al
		test   %al,%al
		jbe    _01c81c_jump
		cmp    $0x000001,%al
		je     _01c839_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c81c_jump:
		cmpb   $0x000004,0x00006c(%ecx)
		jne    _01c828_jump
		movw   $0x000000,0x000052(%ecx)

	_01c828_jump:
		cmpb   $0x000008,0x00006c(%ecx)
		jne    _01c86f_jump
		mov    %ecx,%eax
		call   _024e28_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c839_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		jne    _01c862_jump
		mov    %ecx,%eax
		call   _053c34_func
		mov    %ecx,%eax
		call   _0252c0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c862_jump:
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		call   _0252c0_func

	_01c86f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01c874_func:
		push   %edx
		mov    %eax,%edx
		call   _01c714_func
		cmpb   $0x000000,0x00006d(%edx)
		jne    _01c89c_jump
		cmpb   $0x000003,0x00006c(%edx)
		jne    _01c89c_jump
		cmpw   $0x000000,0x000052(%edx)
		jne    _01c89c_jump
		mov    %edx,%eax
		call   _01c8a0_func
		movw   $0x000001,0x000052(%edx)

	_01c89c_jump:
		pop    %edx
		ret    



_01c8a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0cc1f0_data,%esi
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _01c9f5_jump

	_01c8c2_jump:
		cmpw   $0x000042,0x000060(%esi)
		jne    _01c9e5_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _01c9e5_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		mov    0x000081(%esi),%dh
		movw   $0x000000,0x000042(%esi)
		test   $0x000008,%dh
		je     _01c910_jump
		mov    $0xfffffffd,%eax
		jmp    _01c915_jump

	_01c910_jump:
		mov    $0x000003,%eax

	_01c915_jump:
		mov    %ax,0x000040(%esi)
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %edi,%eax
		call   _01d710_func
		mov    0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    $0x000001,%ebx
		mov    0x000081(%esi),%al
		movb   $0x000004,0x00007e(%esi)
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		movb   $0x000000,0x00006d(%esi)
		mov    %al,%dl
		mov    %esi,%eax
		movb   $0x000009,0x00006c(%esi)
		call   _05efb0_func
		mov    %esi,%eax
		call   _01db8c_func
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f304_func
		mov    0x000081(%esi),%bh
		movb   $0x000009,0x00006b(%esi)
		and    $0x0000bf,%bh
		mov    %bh,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01c9e5_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _01c8c2_jump

	_01c9f5_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ca00_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _01ca33_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%ecx),%dh
		movb   $0x000000,0x00006b(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_01ca33_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01ca54_jump
		mov    0x00006c(%ecx),%dh
		cmp    $0x000002,%dh
		je     _01ca50_jump
		cmp    $0x000003,%dh
		je     _01ca50_jump
		cmp    $0x000004,%dh
		je     _01ca50_jump
		cmp    $0x000005,%dh
		jne    _01ca54_jump

	_01ca50_jump:
		movb   $0x0000ff,0x00007c(%ecx)

	_01ca54_jump:
		mov    _0cdb20_data,%eax
		movw   $0x000000,0x000050(%ecx)
		cmpw   $0x000000,0x000040(%eax)
		jle    _01ca80_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		orb    $0x000008,0x000081(%ecx)
		jmp    _01ca95_jump

	_01ca80_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		andb   $0x0000f7,0x000081(%ecx)

	_01ca95_jump:
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _05f050_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		movb   $0x000000,0x00006b(%ecx)
		call   _05f050_func
		pop    %ecx
		pop    %ebx
		ret    



_01cac0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000001,0x00006d(%eax)
		jne    _01cb2a_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _01cb2a_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _01cb2a_jump
		mov    0x000081(%ecx),%dh
		movb   $0x000000,0x00006b(%ecx)
		test   $0x000008,%dh
		jne    _01cb00_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		or     $0x000008,%bh
		mov    $0x000003,%edx
		mov    %bh,0x000081(%ecx)
		mov    $0x000001,%ebx
		jmp    _01cb14_jump

	_01cb00_jump:
		mov    %dh,%bl
		and    $0x0000f7,%bl
		mov    %bl,0x000081(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_01cb14_jump:
		call   _05efb0_func
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _05f050_func

	_01cb2a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01cb30_func:
		push   %edx
		xor    %edx,%edx
		mov    %edx,_0ceee8_data
		pop    %edx
		mov    %eax,%eax



_01cb3c_func:
		ret    



_01cb40_func:
		push   %edx
		cmpb   $0x000000,_0cee70_data
		je     _01cb52_jump
		xor    %dl,%dl
		mov    %dl,_0cee97_data

	_01cb52_jump:
		cmpb   $0x000000,_0cee97_data
		je     _01cb65_jump
		mov    $0x000002,%eax
		call   _02a164_func

	_01cb65_jump:
		pop    %edx
		mov    %eax,%eax



_01cb68_func:
		ret    



_01cb6c_func:
		cmpb   $0x000000,_0cee62_data
		je     _01cb68_func
		mov    $0x000008,%eax
		jmp    _07026c_jump



_01cb80_func:
		push   %edx
		cmpb   $0x000000,_0cee97_data
		je     _01cb99_jump
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _02a00c_func

	_01cb99_jump:
		xor    %edx,%edx
		mov    %edx,_0cccfc_data
		call   _01cb30_func
		pop    %edx
		ret    



_01cbd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		mov    (%ebx),%ecx
		shl    $0x000003,%edx
		add    %edx,%ecx
		testb  $0x000010,0x000007(%ecx)
		je     _01cbf8_jump
		cmpb   $0x000000,0x00006b(%eax)
		jmp    _01cc1f_jump

	_01cbf8_jump:
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x00000a(%ebx,%edx,4),%dx
		and    $0x00ffff,%edx
		mov    0x00006b(%eax),%al
		and    $0x0000ff,%eax
		dec    %edx
		cmp    %edx,%eax

	_01cc1f_jump:
		sete   %al
		and    $0x0000ff,%eax
		je     _01cc42_jump
		mov    0x000005(%ecx),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _01cc42_jump
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01cc42_jump:
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01ccb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0cc1f2_data,%ebp
		mov    _0cc1f0_data,%esi
		sar    $0x000010,%ebp
		xor    %edi,%edi
		test   %ebp,%ebp
		jle    _01cd33_jump

	_01ccd6_jump:
		cmpw   $0x00003a,0x000060(%esi)
		je     _01cd28_jump
		mov    %edi,%eax
		mov    %edi,%edx
		sar    $0x000004,%eax
		and    $0x00000f,%edx
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		shl    $0x000002,%eax
		and    $0x0000ff,%edx
		add    $_0cc398_data,%eax
		call   _05bcb4_func
		mov    0x000004(%esp),%eax
		mov    %eax,0x000024(%esi)
		mov    (%esp),%al
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%esi)
		shl    $0x000002,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)

	_01cd28_jump:
		inc    %edi
		add    $0x000084,%esi
		cmp    %ebp,%edi
		jl     _01ccd6_jump

	_01cd33_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01cd40_switch:
		.long   _01cf7b_case
		.long   _01cf8c_case
		.long   _01cf95_case
		.long   _01cf81_case

_01cd50_switch:
		.long   _01cfe6_case
		.long   _01cff7_case
		.long   _01d000_case
		.long   _01cfec_case




_01cd60_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %bl,0x000024(%esp)
		mov    %ecx,0x000018(%esp)
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		shl    $0x000002,%eax
		mov    0x00000c(%edx),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%edi),%al
		mov    (%edx),%ebp
		shl    $0x000003,%eax
		add    %eax,%ebp
		xor    %edx,%edx
		mov    0x000002(%ebp),%dl
		mov    0x000005(%ebp),%al
		mov    %dx,0x000008(%esp)
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x00006b(%edi),%dl
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _01ce44_jump
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%edi),%ebx
		mov    0x00000a(%ebx,%eax,4),%bl
		testb  $0x000010,0x000007(%ebp)
		je     _01cdd5_jump
		mov    $0xffffffff,%eax
		jmp    _01cdda_jump

	_01cdd5_jump:
		mov    $0x000001,%eax

	_01cdda_jump:
		xor    %ecx,%ecx
		movswl %dx,%edx
		mov    %bl,%cl
		add    %eax,%edx
		dec    %ecx
		movswl %dx,%eax
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jl     _01cdf8_jump
		cmp    %ecx,%eax
		jg     _01cdf8_jump
		mov    $0x000001,%eax
		jmp    _01cdfa_jump

	_01cdf8_jump:
		xor    %eax,%eax

	_01cdfa_jump:
		test   %eax,%eax
		jne    _01ce44_jump
		mov    0x000003(%ebp),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000004(%ebp),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000002(%edx),%al
		mov    %al,%bl
		mov    %ax,0x000008(%esp)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%edi),%ebx
		mov    0x000007(%edx),%cl
		mov    0x00000a(%ebx,%eax,4),%al
		test   $0x000010,%cl
		je     _01ce42_jump
		xor    %edx,%edx
		mov    %al,%dl
		dec    %edx
		jmp    _01ce44_jump

	_01ce42_jump:
		xor    %edx,%edx

	_01ce44_jump:
		xor    %eax,%eax
		mov    0x00006b(%edi),%al
		mov    %ax,0x000010(%esp)
		xor    %eax,%eax
		mov    0x00006a(%edi),%al
		lea    0x000014(%esp),%ecx
		mov    %ax,0x000020(%esp)
		mov    0x000008(%esp),%al
		lea    0x00000c(%esp),%ebx
		mov    %al,0x00006a(%edi)
		lea    0x000004(%esp),%eax
		mov    %dl,0x00006b(%edi)
		push   %eax
		lea    0x000020(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x00002c(%esp),%dl
		mov    %edi,%eax
		call   _01d710_func
		mov    0x000020(%esp),%al
		mov    %al,0x00006a(%edi)
		mov    0x000010(%esp),%al
		mov    %al,0x00006b(%edi)
		mov    0x000018(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000028(%esi),%cx
		add    %edx,%ebx
		sub    %ecx,%ebx

	_01ce9f_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _01ceaa_jump
		neg    %eax

	_01ceaa_jump:
		cmp    $0x000010,%eax
		jl     _01cee1_jump
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _01cebf_jump
		mov    $0x000001,%eax
		jg     _01cebf_jump
		neg    %eax

	_01cebf_jump:
		shl    $0x000004,%eax
		mov    0x000028(%esi),%ecx
		add    %eax,%ecx
		mov    %edx,%eax
		mov    %ecx,0x000028(%esi)
		cmp    $0x000000,%eax
		je     _01ceda_jump
		mov    $0x000001,%eax
		jg     _01ceda_jump
		neg    %eax

	_01ceda_jump:
		shl    $0x000004,%eax
		sub    %eax,%ebx
		jmp    _01ce9f_jump

	_01cee1_jump:
		mov    0x000014(%esp),%ecx
		mov    0x000038(%esp),%eax
		mov    0x00002c(%esi),%dx
		add    %eax,%ecx
		sub    %edx,%ecx

	_01cef1_jump:
		movswl %cx,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _01cefc_jump
		neg    %eax

	_01cefc_jump:
		cmp    $0x000010,%eax
		jl     _01cf33_jump
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _01cf11_jump
		mov    $0x000001,%eax
		jg     _01cf11_jump
		neg    %eax

	_01cf11_jump:
		shl    $0x000004,%eax
		mov    0x00002c(%esi),%ebp
		add    %eax,%ebp
		mov    %edx,%eax
		mov    %ebp,0x00002c(%esi)
		cmp    $0x000000,%eax
		je     _01cf2c_jump
		mov    $0x000001,%eax
		jg     _01cf2c_jump
		neg    %eax

	_01cf2c_jump:
		shl    $0x000004,%eax
		sub    %eax,%ecx
		jmp    _01cef1_jump

	_01cf33_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		mov    _092265_data(,%eax,4),%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		mov    _092265_data(,%eax,4),%al
		shl    $0x000003,%dl
		shl    $0x000003,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		add    %eax,%eax
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebp
		mov    %dl,%al
		add    %ebp,%eax
		cmp    $0x000003,%eax
		ja     _01cfa2_jump
		jmp    *%cs:_01cd40_switch(,%eax,4)

	_01cf7b_case:
		add    0x000040(%edi),%bx
		jmp    _01cfa2_jump

	_01cf81_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%ebx
		jmp    _01cf9b_jump

	_01cf8c_case:
		add    0x000040(%edi),%bx
		shl    $0x000004,%ebx
		jmp    _01cfa2_jump

	_01cf95_case:
		mov    0x00003e(%edi),%eax
		sar    $0x000010,%eax

	_01cf9b_jump:
		call   _053bb0_func
		add    %eax,%ebx

	_01cfa2_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		mov    _092265_data(,%eax,4),%al
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000060(%edi),%ax
		mov    _092265_data(,%eax,4),%al
		shl    $0x000002,%dl
		shl    $0x000002,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		add    %eax,%eax
		and    $0x0000ff,%edx
		add    %edx,%eax
		cmp    $0x000003,%eax
		ja     _01d00d_jump
		jmp    *%cs:_01cd50_switch(,%eax,4)

	_01cfe6_case:
		add    0x000042(%edi),%cx
		jmp    _01d00d_jump

	_01cfec_case:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%ecx
		jmp    _01d006_jump

	_01cff7_case:
		add    0x000042(%edi),%cx
		shl    $0x000004,%ecx
		jmp    _01d00d_jump

	_01d000_case:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax

	_01d006_jump:
		call   _053bb0_func
		add    %eax,%ecx

	_01d00d_jump:
		mov    %bx,0x000040(%esi)
		mov    %cx,0x000042(%esi)
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01d020_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cc1f0_data,%eax
		mov    _0cc1f4_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _01d049_jump

	_01d038_jump:
		cmp    0x000060(%eax),%cx
		je     _01d049_jump
		inc    %edx
		add    $0x000084,%eax
		cmp    %bx,%dx
		jl     _01d038_jump

	_01d049_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01d084_func:
		push   %esi
		push   %edi
		mov    %eax,%esi
		add    (%ecx),%dx
		mov    0x00002c(%eax),%ax
		and    $0x00000f,%dh
		mov    0x00003e(%esi),%di
		mov    %eax,%esi
		movswl %dx,%eax
		sar    $0x000003,%eax
		cwtl   
		sub    %edi,%esi
		call   _05bd90_func
		movswl %ax,%edi
		movswl %bx,%eax
		imul   %edi,%eax
		sar    $0x000009,%eax
		mov    %dx,(%ecx)
		sub    %esi,%eax
		pop    %edi
		pop    %esi
		ret    



_01d0bc_func:
		mov    %ax,_0cec80_data
		mov    %dx,_0cec7e_data
		ret    



_01d0cc_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cmpb   $0x000000,_0ceea7_data
		jne    _01d0de_jump
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_01d0de_jump:
		movswl %ax,%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		add    $0x000100,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d10c_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		movswl %ax,%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		add    $0x000100,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%ecx
		imul   %ecx,%eax
		sar    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d134_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0cec7e_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d170_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0cec7c_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000008,%edx
		sbb    %edx,%eax
		sar    $0x000008,%eax
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d1ac_func:
		mov    %al,_0ceea7_data
		ret    



_01d1b4_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0cec7e_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		shl    $0x000008,%edx
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d1ec_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		cwtl   
		lea    0x000100(%eax),%ecx
		mov    $0x010000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		movswl %bx,%edx
		mov    _0cec7c_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		shl    $0x000008,%edx
		mov    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_01d224_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%ecx
		shl    $0x000002,%eax
		lea    (%ecx,%eax,1),%esi
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		lea    0x000000(,%eax,8),%ecx
		mov    (%esi),%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    0x000004(%ebx),%ebx
		mov    0x000002(%eax),%cl
		mov    0x000005(%eax),%dh
		lea    0x000000(,%ecx,4),%eax
		and    $0x00000f,%dh
		sub    %ecx,%eax
		movzbw %dh,%si
		imul   0x00000a(%ebx,%eax,4),%si
		xor    %ebx,%ebx
		mov    %dl,%bl
		imul   %esi,%ebx
		xor    %eax,%eax
		mov    %dh,%al
		mov    _0cee3d_data(%eax),%al
		xor    %ah,%ah
		sub    %eax,%ebx
		mov    %ebx,%eax
		inc    %eax
		test   %ax,%ax
		jle    _01d28a_jump
		cwtl   
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_01d28a_jump:
		mov    $0x000001,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01d294_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %edx,%esi
		mov    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x000004(%ebx,%edx,4),%edx
		xor    %ebx,%ebx
		mov    0x00006b(%eax),%bl
		shl    $0x000002,%ebx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000002(%edx),%bl
		mov    %bx,(%ecx)
		xor    %ebx,%ebx
		mov    0x000018(%esp),%ebp
		mov    0x000003(%edx),%bl
		mov    %bx,0x000000(%ebp)
		testb  $0x000008,0x000081(%eax)
		jne    _01d2e7_jump
		xor    %ebx,%ebx
		mov    0x000028(%eax),%cx
		mov    (%edx),%bl
		add    %ebx,%ecx
		jmp    _01d317_jump

	_01d2e7_jump:
		xor    %ebx,%ebx
		mov    0x000068(%eax),%bl
		add    %ebx,%ebx
		mov    %ebx,(%esp)
		mov    0x000028(%eax),%bx
		add    (%esp),%ebx
		mov    %ebx,(%esp)
		xor    %ebx,%ebx
		mov    (%edx),%bl
		mov    %ebx,0x000004(%esp)
		mov    (%esp),%ebx
		sub    0x000004(%esp),%ebx
		mov    %ebx,0x000004(%esp)
		mov    (%ecx),%bx
		mov    0x000004(%esp),%ecx
		sub    %ebx,%ecx

	_01d317_jump:
		mov    %cx,(%esi)
		mov    0x000001(%edx),%dl
		mov    0x00002c(%eax),%ax
		xor    %dh,%dh
		add    %edx,%eax
		mov    %ax,(%edi)
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01d364_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006c(%eax)
		ret    



_01d36c_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006d(%eax)
		ret    



_01d374_func:
		movb   $0x000001,0x000073(%eax)
		mov    %dl,0x00006d(%eax)
		mov    %bl,0x00006c(%eax)
		ret    



_01d380_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x00008a,%ax
		jb     _01d3fc_jump
		jbe    _01d49a_jump
		cmp    $0x0000ae,%ax
		jb     _01d3d3_jump
		jbe    _01d493_jump
		cmp    $0x0000bd,%ax
		jb     _01d3c4_jump
		jbe    _01d473_jump
		cmp    $0x0000e1,%ax
		jb     _01d4a8_jump
		cmp    $0x0000e2,%ax
		jbe    _01d493_jump
		jmp    _01d4a8_jump

	_01d3c4_jump:
		cmp    $0x0000b8,%ax
		je     _01d493_jump
		jmp    _01d4a8_jump

	_01d3d3_jump:
		cmp    $0x00008c,%ax
		jb     _01d4a8_jump
		jbe    _01d4a1_jump
		cmp    $0x00009a,%ax
		jb     _01d4a8_jump
		cmp    $0x00009b,%ax
		jbe    _01d49a_jump
		jmp    _01d4a8_jump

	_01d3fc_jump:
		cmp    $0x000031,%ax
		jb     _01d429_jump
		jbe    _01d481_jump
		cmp    $0x00006a,%ax
		jb     _01d4a8_jump
		jbe    _01d47a_jump
		cmp    $0x00007b,%ax
		je     _01d488_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d429_jump:
		cmp    $0x000016,%ax
		jb     _01d4a8_jump
		jbe    _01d442_jump
		cmp    $0x00002d,%ax
		je     _01d461_jump
		mov    $0x000028,%eax
		pop    %edx
		ret    

	_01d442_jump:
		mov    _0cecd4_data,%ax
		cmp    $0x000001,%ax
		jb     _01d4a8_jump
		jbe    _01d4a8_jump
		cmp    $0x000002,%ax
		jne    _01d4a8_jump
		mov    $0x000040,%eax
		pop    %edx
		ret    

	_01d461_jump:
		mov    _0cecd4_data,%ax
		cmp    $0x000001,%ax
		jb     _01d473_jump
		jbe    _01d473_jump
		cmp    $0x000002,%ax

	_01d473_jump:
		mov    $0x000012,%eax
		pop    %edx
		ret    

	_01d47a_jump:
		mov    $0x000046,%eax
		pop    %edx
		ret    

	_01d481_jump:
		mov    $0x000080,%eax
		pop    %edx
		ret    

	_01d488_jump:
		mov    0x000075(%edx),%al
		cmp    $0x000005,%al
		jb     _01d4a8_jump
		cmp    $0x000007,%al
		ja     _01d4a8_jump

	_01d493_jump:
		mov    $0x000050,%eax
		pop    %edx
		ret    

	_01d49a_jump:
		mov    $0x000068,%eax
		pop    %edx
		ret    

	_01d4a1_jump:
		mov    $0x000024,%eax
		pop    %edx
		ret    

	_01d4a8_jump:
		mov    $0x000028,%eax
		pop    %edx
		ret    



_01d4b0_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000060(%eax),%ax
		cmp    $0x00008c,%ax
		jb     _01d527_jump
		jbe    _01d5f9_jump
		cmp    $0x0000b8,%ax
		jb     _01d504_jump
		jbe    _01d603_jump
		cmp    $0x0000c3,%ax
		jb     _01d4f5_jump
		jbe    _01d60d_jump
		cmp    $0x0000e1,%ax
		jb     _01d617_jump
		cmp    $0x0000e2,%ax
		jbe    _01d603_jump
		jmp    _01d617_jump

	_01d4f5_jump:
		cmp    $0x0000bd,%ax
		je     _01d5b3_jump
		jmp    _01d617_jump

	_01d504_jump:
		cmp    $0x00009a,%ax
		jb     _01d617_jump
		cmp    $0x00009b,%ax
		jbe    _01d5ef_jump
		cmp    $0x0000ae,%ax
		je     _01d603_jump
		jmp    _01d617_jump

	_01d527_jump:
		cmp    $0x000031,%ax
		jb     _01d561_jump
		jbe    _01d5d1_jump
		cmp    $0x00007b,%ax
		jb     _01d553_jump
		jbe    _01d5bd_jump
		cmp    $0x00008a,%ax
		je     _01d5ef_jump
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d553_jump:
		cmp    $0x00006a,%ax
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d561_jump:
		cmp    $0x000016,%ax
		jb     _01d617_jump
		jbe    _01d57d_jump
		cmp    $0x00002d,%ax
		je     _01d5a1_jump
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d57d_jump:
		mov    _0cecd4_data,%ax
		cmp    $0x000001,%ax
		jb     _01d617_jump
		jbe    _01d617_jump
		cmp    $0x000002,%ax
		mov    $0x000028,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d5a1_jump:
		mov    _0cecd4_data,%ax
		cmp    $0x000001,%ax
		jb     _01d5b3_jump
		jbe    _01d5b3_jump
		cmp    $0x000002,%ax

	_01d5b3_jump:
		mov    $0x000012,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d5bd_jump:
		mov    0x000075(%ebx),%al
		cmp    $0x000005,%al
		jb     _01d61c_jump
		jbe    _01d5e5_jump
		cmp    $0x000007,%al
		ja     _01d61c_jump
		cmpw   $0x000000,0x000042(%ebx)
		jle    _01d5db_jump

	_01d5d1_jump:
		mov    $0x000040,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d5db_jump:
		mov    $0x00004e,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d5e5_jump:
		mov    $0x000048,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d5ef_jump:
		mov    $0x000068,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d5f9_jump:
		mov    $0x000020,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d603_jump:
		mov    $0x000060,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d60d_jump:
		mov    $0x00005a,%edx
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    

	_01d617_jump:
		mov    $0x000028,%edx

	_01d61c_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_01d624_func:
		push   %ecx
		push   %esi
		movswl %bx,%ebx
		movswl %dx,%edx
		mov    0x00002c(%eax),%ecx
		mov    0x000028(%eax),%esi
		add    %ecx,%ebx
		add    %esi,%edx
		sar    $0x000004,%ebx
		sar    $0x000004,%edx
		movswl %bx,%ebx
		movswl %dx,%eax
		mov    %ebx,%edx
		call   _01e0e4_func
		and    $0x0000ff,%eax
		mov    _092224_data(%eax),%al
		shl    $0x000002,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		pop    %esi
		pop    %ecx
		ret    



_01d660_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    %ebx,%edx
		mov    0x000008(%esi),%bx
		and    $0x00003f,%bh
		xor    %ecx,%ecx
		and    $0x00ffff,%ebx
		mov    0x00006b(%eax),%cl
		imul   %ecx,%ebx
		lea    0x000000(,%ebx,4),%ecx
		mov    (%esi),%ebx
		mov    0x000008(%edx),%si
		and    $0x003fff,%esi
		movzwl %si,%ebp
		movswl %di,%esi
		imul   %ebp,%esi
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    0x000075(%eax),%cl
		mov    (%edx),%edx
		shl    $0x000002,%ecx
		shl    $0x000002,%esi
		add    %ecx,%ebx
		add    %esi,%edx
		movzbl 0x000003(%ebx),%esi
		add    %edx,%ecx
		lea    0x000000(,%esi,4),%edx
		sub    %esi,%edx
		mov    (%eax),%esi
		movzbw 0x000005(%esi,%edx,4),%si
		testb  $0x000008,0x000081(%eax)
		je     _01d6ea_jump
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		add    %edx,%edx
		sub    %esi,%edx
		mov    %edx,%edi
		movzbw 0x000001(%ecx),%si
		sub    %esi,%edi
		mov    %edi,%esi
		movzbw 0x000001(%ebx),%di
		sub    %edi,%edx
		jmp    _01d6f4_jump

	_01d6ea_jump:
		xor    %edx,%edx
		movzbw 0x000001(%ecx),%si
		mov    0x000001(%ebx),%dl

	_01d6f4_jump:
		mov    0x000002(%ebx),%bl
		mov    0x000002(%ecx),%cl
		xor    %bh,%bh
		xor    %ch,%ch
		sub    %esi,%edx
		sub    %ecx,%ebx
		mov    %dx,0x00004e(%eax)
		mov    %bx,0x00004c(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_01d710_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %dx,0x000004(%esp)
		mov    %ebx,%esi
		mov    %ecx,%edi
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		shl    $0x000002,%edx
		mov    0x000004(%eax),%ebx
		add    %ebx,%edx
		mov    0x000008(%edx),%bx
		xor    %ecx,%ecx
		and    $0x00003f,%bh
		mov    %bx,%cx
		xor    %ebx,%ebx
		mov    0x00006b(%eax),%bl
		imul   %ecx,%ebx
		mov    (%edx),%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %ecx,%ecx
		mov    0x000003(%ebx),%dl
		mov    %dl,%cl
		mov    %dl,0x000008(%esp)
		lea    0x000000(,%ecx,4),%edx
		sub    %ecx,%edx
		shl    $0x000002,%edx
		mov    (%eax),%ecx
		add    %ecx,%edx
		cmpb   $0x000000,0x000008(%esp)
		je     _01d84b_jump
		cmpb   $0x000000,0x000004(%edx)
		je     _01d84b_jump
		xor    %ecx,%ecx
		mov    0x000007(%edx),%cl
		mov    0x000020(%esp),%ebp
		mov    %cx,0x000000(%ebp)
		xor    %ecx,%ecx
		mov    0x000024(%esp),%ebp
		mov    0x000008(%edx),%cl
		mov    %cx,0x000000(%ebp)
		mov    0x000081(%eax),%cl
		shl    $0x000004,%cl
		shr    $0x000007,%cl
		movzbl %cl,%ebp
		mov    0x00000b(%edx),%cl
		shl    $0x000005,%cl
		shr    $0x000007,%cl
		mov    %cl,0x00000c(%esp)
		xor    %ecx,%ecx
		mov    0x00000c(%esp),%cl
		xor    %ebp,%ecx
		je     _01d802_jump
		xor    %ecx,%ecx
		mov    0x000001(%ebx),%cl
		mov    %ecx,(%esp)
		mov    0x000009(%edx),%cl
		and    $0x00000f,%cl
		mov    (%esp),%ebp
		and    $0x0000ff,%ecx
		add    %ecx,%ebp
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		add    %ecx,%ecx
		sub    %ebp,%ecx
		mov    %ecx,(%esp)
		xor    %ecx,%ecx
		mov    (%esp),%ebp
		mov    0x000005(%edx),%cl
		sub    %ecx,%ebp
		mov    %ebp,%ecx
		mov    0x000028(%eax),%ebp
		jmp    _01d816_jump

	_01d802_jump:
		mov    0x000001(%ebx),%cl
		mov    0x000028(%eax),%ebp
		add    %ecx,%ebp
		mov    0x000009(%edx),%cl
		and    $0x00000f,%cl
		and    $0x0000ff,%ecx

	_01d816_jump:
		add    %ecx,%ebp
		mov    %ebp,(%esp)
		mov    (%esp),%ecx
		mov    %cx,(%esi)
		mov    0x000002(%ebx),%bl
		mov    0x000009(%edx),%dl
		and    $0x0000ff,%ebx
		shr    $0x000004,%dl
		and    $0x0000ff,%edx
		add    %ebx,%edx
		add    0x00002c(%eax),%edx
		mov    $0x000001,%al
		mov    %dx,(%edi)
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_01d84b_jump:
		xor    %al,%al
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_01d858_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    0x000018(%esp),%ebp
		mov    %eax,%esi
		mov    %edx,%edi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		shl    $0x000002,%eax
		mov    %eax,(%esp)
		mov    (%esp),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%edx),%eax
		add    (%esp),%eax
		testb  $0x000040,0x000007(%eax)
		je     _01d8b7_jump
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000040,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x00000e,0x000000(%ebp)
		jmp    _01d973_jump

	_01d8b7_jump:
		mov    0x00006d(%esi),%dh
		cmp    $0x000005,%dh
		jne    _01d8e7_jump
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x00002e,0x000000(%ebp)
		jmp    _01d973_jump

	_01d8e7_jump:
		cmp    $0x000007,%dh
		jne    _01d950_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		cmp    $0x000020,%ax
		jle    _01d8fa_jump
		sub    $0x000020,%eax

	_01d8fa_jump:
		cmp    $0x000009,%ax
		jle    _01d92b_jump
		cmp    $0x000017,%ax
		jge    _01d92b_jump
		mov    0x000028(%esi),%ax
		add    $0x000040,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000036,%eax
		mov    %ax,(%ebx)
		movw   $0x000024,(%ecx)
		movw   $0x000014,0x000000(%ebp)
		jmp    _01d973_jump

	_01d92b_jump:
		mov    0x000028(%esi),%ax
		add    $0x000046,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%ebx)
		movw   $0x000014,(%ecx)
		movw   $0x000028,0x000000(%ebp)
		jmp    _01d973_jump

	_01d950_jump:
		mov    0x000028(%esi),%ax
		add    $0x000048,%eax
		mov    %ax,(%edi)
		mov    0x00002c(%esi),%ax
		add    $0x000018,%eax
		mov    %ax,(%ebx)
		movw   $0x000010,(%ecx)
		movw   $0x000036,0x000000(%ebp)

	_01d973_jump:
		cmpw   $0x000000,0x00005a(%esi)
		je     _01da13_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    %eax,0x000004(%esp)
		mov    0x000028(%esi),%ax
		add    0x000004(%esp),%eax
		mov    %ax,0x000004(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		call   _01d0bc_func
		mov    0x000058(%esi),%eax
		movswl (%edi),%edx
		sar    $0x000010,%eax
		call   _01d134_func
		mov    %ax,(%edi)
		mov    0x000058(%esi),%eax
		movswl (%ebx),%edx
		sar    $0x000010,%eax
		call   _01d170_func
		mov    %ax,(%ebx)
		mov    0x000058(%esi),%eax
		movswl (%ecx),%edx
		sar    $0x000010,%eax
		call   _01d10c_func
		mov    %ax,(%ecx)
		mov    0x000058(%esi),%eax
		movswl 0x000000(%ebp),%edx
		sar    $0x000010,%eax
		call   _01d10c_func
		mov    %ax,0x000000(%ebp)
		xor    %eax,%eax
		mov    0x000038(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000036(%esi),%cx
		mov    0x000068(%esi),%al
		add    %ecx,%eax
		cwtl   
		call   _01d0bc_func

	_01da13_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01da1c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,(%esp)
		movw   $0x000006,0x000008(%esp)
		lea    0x000004(%esp),%edx
		push   %edx
		mov    %edi,%edx
		call   _01d294_func
		cmpb   $0x000002,0x00006d(%esi)
		jne    _01da57_jump
		mov    0x00006c(%esi),%dl
		test   %dl,%dl
		je     _01da50_jump
		cmp    $0x000004,%dl
		jne    _01da57_jump

	_01da50_jump:
		movw   $0x000003,0x000008(%esp)

	_01da57_jump:
		mov    0x00001c(%esp),%edx
		mov    (%esp),%ebx
		mov    %ebp,%ecx
		push   %edx
		mov    %esi,%eax
		mov    0x00000a(%esp),%edx
		push   %ebx
		sar    $0x000010,%edx
		mov    %edi,%ebx
		call   _01d710_func
		mov    (%edi),%ax
		mov    0x000020(%esp),%edx
		sub    $0x000007,%eax
		mov    %ax,(%edx)
		mov    0x00001c(%esp),%edx
		mov    0x000000(%ebp),%ax
		mov    (%edx),%cx
		mov    0x000024(%esp),%edx
		add    %ecx,%eax
		mov    %ax,(%edx)
		mov    (%esp),%eax
		mov    (%eax),%ax
		mov    0x000028(%esp),%edx
		add    $0x00000e,%eax
		mov    %ax,(%edx)
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    0x00002c(%esp),%eax
		sar    %edx
		mov    %dx,(%eax)
		mov    (%edi),%ax
		add    $0x000004,%eax
		mov    (%esp),%edx
		mov    %ax,(%edi)
		subw   $0x000008,(%edx)
		mov    0x000000(%ebp),%cx
		add    $0x000004,%ecx
		mov    0x00001c(%esp),%edx
		mov    %cx,0x000000(%ebp)
		subw   $0x000008,(%edx)
		cmpb   $0x000000,0x00006d(%esi)
		jne    _01dae6_jump
		cmpb   $0x000010,0x00006c(%esi)
		je     _01daf2_jump

	_01dae6_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _01db08_jump
		cmpb   $0x000013,0x00006c(%esi)
		jne    _01db08_jump

	_01daf2_jump:
		mov    0x00001c(%esp),%ecx
		mov    (%esp),%eax
		push   %ecx
		mov    %edi,%ebx
		xor    %edx,%edx
		push   %eax
		mov    %ebp,%ecx
		mov    %esi,%eax
		call   _01d710_func

	_01db08_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000014



_01db14_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0cdabc_data,%ebx
		mov    _0cdafc_data,%dl
		mov    0x000028(%eax),%ecx
		add    %ebx,%edx
		xor    %ebx,%ebx
		sub    %ecx,%edx
		mov    0x000068(%eax),%bl
		sub    %ebx,%edx
		test   %edx,%edx
		jle    _01db42_jump
		orb    $0x000008,0x000081(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01db42_jump:
		andb   $0x0000f7,0x000081(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01db50_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x000009,%ax
		jb     _01db6f_jump
		jbe    _01db75_jump
		cmp    $0x000090,%ax
		jb     _01db80_jump
		jbe    _01db75_jump
		cmp    $0x0000a5,%ax
		je     _01db75_jump
		jmp    _01db80_jump

	_01db6f_jump:
		cmp    $0x000003,%ax
		jne    _01db80_jump

	_01db75_jump:
		cmpb   $0x000001,0x00007b(%edx)
		sete   %al
		xor    %ah,%ah
		pop    %edx
		ret    

	_01db80_jump:
		cmpb   $0x000001,0x00007b(%edx)
		setae  %al
		xor    %ah,%ah
		pop    %edx
		ret    



_01db8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cecea_data,%bx
		mov    0x00002c(%eax),%dx
		sub    %ebx,%edx
		mov    %dx,0x000038(%eax)
		mov    _0ced00_data,%cx
		mov    0x000028(%eax),%dx
		sub    %ecx,%edx
		add    $0x000008,%edx
		mov    %dx,0x000036(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01dbb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		movb   $0x0000ff,(%esp)
		mov    0x000060(%ecx),%ax
		cmp    $0x000046,%ax
		jb     _01dc34_jump
		jbe    _01de8b_jump
		cmp    $0x00009c,%ax
		jb     _01dc0a_jump
		jbe    _01dfe2_jump
		cmp    $0x0000c3,%ax
		jb     _01dbfb_jump
		jbe    _01e019_jump
		cmp    $0x0000d9,%ax
		je     _01df4c_jump
		jmp    _01e091_jump

	_01dbfb_jump:
		cmp    $0x0000a5,%ax
		je     _01dd66_jump
		jmp    _01e091_jump

	_01dc0a_jump:
		cmp    $0x00007b,%ax
		jb     _01dc25_jump
		jbe    _01dc93_jump
		cmp    $0x000098,%ax
		je     _01df8f_jump
		jmp    _01e091_jump

	_01dc25_jump:
		cmp    $0x000064,%ax
		je     _01df6f_jump
		jmp    _01e091_jump

	_01dc34_jump:
		cmp    $0x000023,%ax
		jb     _01dc6e_jump
		jbe    _01de4a_jump
		cmp    $0x00003c,%ax
		jb     _01dc5f_jump
		cmp    $0x00003d,%ax
		jbe    _01dee0_jump
		cmp    $0x000041,%ax
		je     _01df25_jump
		jmp    _01e091_jump

	_01dc5f_jump:
		cmp    $0x00002b,%ax
		je     _01de4a_jump
		jmp    _01e091_jump

	_01dc6e_jump:
		cmp    $0x000009,%ax
		jb     _01dc89_jump
		jbe    _01dd66_jump
		cmp    $0x000014,%ax
		je     _01ddf9_jump
		jmp    _01e091_jump

	_01dc89_jump:
		test   %ax,%ax
		je     _01dcef_jump
		jmp    _01e091_jump

	_01dc93_jump:
		mov    0x000075(%ecx),%dh
		cmp    $0x000001,%dh
		je     _01dcae_jump
		cmp    $0x000002,%dh
		je     _01dcae_jump
		cmp    $0x000004,%dh
		je     _01dcae_jump
		cmp    $0x000007,%dh
		jne    _01e091_jump

	_01dcae_jump:
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01dccd_jump
		mov    0x000081(%ecx),%al
		mov    $0x000003,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e091_jump

	_01dccd_jump:
		cmp    $0x000001,%ah
		jne    _01e091_jump
		mov    0x000081(%ecx),%bl
		mov    $0x000002,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e091_jump

	_01dcef_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01dd25_jump
		mov    0x00006c(%ecx),%dl
		cmp    $0x000003,%dl
		je     _01e091_jump
		cmp    $0x000001,%dl
		je     _01e091_jump
		cmp    $0x000005,%dl
		je     _01e091_jump
		cmp    $0x000004,%dl
		je     _01e091_jump
		cmp    $0x000006,%dl
		je     _01e091_jump

	_01dd25_jump:
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01dd44_jump
		mov    0x000081(%ecx),%al
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e091_jump

	_01dd44_jump:
		cmp    $0x000001,%ah
		jne    _01e091_jump
		mov    0x000081(%ecx),%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e091_jump

	_01dd66_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01dd81_jump
		mov    0x00006c(%ecx),%bl
		cmp    $0x000003,%bl
		je     _01e091_jump
		cmp    $0x000001,%bl
		je     _01e091_jump

	_01dd81_jump:
		mov    0x000081(%ecx),%al
		test   $0x000010,%al
		je     _01ddc2_jump
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01dda4_jump
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e091_jump

	_01dda4_jump:
		cmp    $0x000001,%ah
		jne    _01e091_jump
		mov    %al,%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e091_jump

	_01ddc2_jump:
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01dddb_jump
		mov    $0x000006,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e091_jump

	_01dddb_jump:
		cmp    $0x000001,%ah
		jne    _01e091_jump
		mov    %al,%bl
		mov    $0x000005,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e091_jump

	_01ddf9_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01de09_jump
		cmpb   $0x000003,0x00006c(%ecx)
		je     _01e091_jump

	_01de09_jump:
		mov    0x000070(%ecx),%dh
		test   %dh,%dh
		jne    _01de29_jump
		mov    0x000081(%ecx),%dl
		mov    $0x000001,%ah
		or     $0x000008,%dl
		mov    %ah,(%esp)
		mov    %dl,0x000081(%ecx)
		jmp    _01e091_jump

	_01de29_jump:
		cmp    $0x000001,%dh
		jne    _01e091_jump
		mov    0x000081(%ecx),%al
		xor    %bh,%bh
		and    $0x0000f7,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e091_jump

	_01de4a_jump:
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01de69_jump
		mov    0x000081(%ecx),%al
		mov    $0x000005,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e091_jump

	_01de69_jump:
		cmp    $0x000001,%ah
		jne    _01e091_jump
		mov    0x000081(%ecx),%bl
		mov    $0x000004,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e091_jump

	_01de8b_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01de9b_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _01e091_jump

	_01de9b_jump:
		mov    0x000081(%ecx),%al
		test   $0x000010,%al
		je     _01e091_jump
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01dec2_jump
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e091_jump

	_01dec2_jump:
		cmp    $0x000001,%ah
		jne    _01e091_jump
		mov    %al,%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e091_jump

	_01dee0_jump:
		mov    0x000081(%ecx),%al
		test   $0x000010,%al
		je     _01e091_jump
		mov    0x000070(%ecx),%ah
		test   %ah,%ah
		jne    _01df07_jump
		mov    $0x000001,%bh
		or     $0x000008,%al
		mov    %bh,(%esp)
		mov    %al,0x000081(%ecx)
		jmp    _01e091_jump

	_01df07_jump:
		cmp    $0x000001,%ah
		jne    _01e091_jump
		mov    %al,%bl
		xor    %dh,%dh
		and    $0x0000f7,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000081(%ecx)
		jmp    _01e091_jump

	_01df25_jump:
		cmpb   $0x000000,0x000070(%ecx)
		jne    _01df3b_jump
		orb    $0x000008,0x000081(%ecx)
		movb   $0x000002,(%esp)
		jmp    _01e091_jump

	_01df3b_jump:
		andb   $0x0000f7,0x000081(%ecx)
		xor    %dh,%dh
		mov    %dh,(%esp)
		jmp    _01e091_jump

	_01df4c_jump:
		mov    0x000081(%ecx),%dl
		test   $0x000008,%dl
		jne    _01df64_jump
		mov    %dl,%bl
		or     $0x000008,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _01df6f_jump

	_01df64_jump:
		mov    %dl,%dh
		and    $0x0000f7,%dh
		mov    %dh,0x000081(%ecx)

	_01df6f_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01df7f_jump
		cmpb   $0x000003,0x00006c(%ecx)
		je     _01e091_jump

	_01df7f_jump:
		mov    $0x000003,%dh
		movw   $0x000000,0x00004a(%ecx)
		mov    %dh,(%esp)
		jmp    _01e091_jump

	_01df8f_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01df9f_jump
		cmpb   $0x000002,0x00006c(%ecx)
		je     _01e091_jump

	_01df9f_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d374_func
		mov    0x000081(%ecx),%bl
		test   $0x000008,%bl
		jne    _01dfcd_jump
		mov    %bl,%ah
		mov    $0x000003,%dl
		or     $0x000008,%ah
		mov    %dl,(%esp)
		mov    %ah,0x000081(%ecx)
		jmp    _01e091_jump

	_01dfcd_jump:
		mov    %bl,%bh
		mov    $0x000002,%al
		and    $0x0000f7,%bh
		mov    %al,(%esp)
		mov    %bh,0x000081(%ecx)
		jmp    _01e091_jump

	_01dfe2_jump:
		mov    0x000070(%ecx),%dl
		test   %dl,%dl
		jne    _01dff9_jump
		movb   $0x000002,(%esp)
		orb    $0x000008,0x000081(%ecx)
		jmp    _01e091_jump

	_01dff9_jump:
		cmp    $0x000001,%dl
		jne    _01e091_jump
		mov    0x000081(%ecx),%bh
		and    $0x0000f7,%bh
		mov    %dl,(%esp)
		mov    %bh,0x000081(%ecx)
		jmp    _01e091_jump

	_01e019_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e025_jump
		cmpb   $0x000018,0x00006c(%ecx)
		je     _01e091_jump

	_01e025_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e031_jump
		cmpb   $0x000012,0x00006c(%ecx)
		je     _01e091_jump

	_01e031_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _01e03d_jump
		cmpb   $0x000013,0x00006c(%ecx)
		je     _01e091_jump

	_01e03d_jump:
		mov    $0x000018,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		movw   $0x000000,0x000042(%ecx)
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)

	_01e091_jump:
		cmpb   $0x0000ff,(%esp)
		je     _01e0dd_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000010,_092265_data(,%eax,4)
		je     _01e0b8_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		call   _053bb0_func
		cwtl   
		sub    %eax,0x000028(%ecx)
		jmp    _01e0c6_jump

	_01e0b8_jump:
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)

	_01e0c6_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    (%esp),%dl
		movw   $0x000000,0x000040(%ecx)
		call   _05efb0_func

	_01e0dd_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e0e4_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    _0cda86_data,%ecx
		movswl %ax,%esi
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    %esi,%eax
		dec    %ecx
		cmp    %ebx,%eax
		jl     _01e107_jump
		cmp    %ecx,%eax
		jg     _01e107_jump
		mov    $0x000001,%eax
		jmp    _01e109_jump

	_01e107_jump:
		xor    %eax,%eax

	_01e109_jump:
		test   %eax,%eax
		je     _01e15c_jump
		mov    _0cda88_data,%ecx
		movswl %dx,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		dec    %ecx
		cmp    %ebx,%eax
		jl     _01e12d_jump
		cmp    %ecx,%eax
		jg     _01e12d_jump
		mov    $0x000001,%eax
		jmp    _01e12f_jump

	_01e12d_jump:
		xor    %eax,%eax

	_01e12f_jump:
		test   %eax,%eax
		je     _01e15c_jump
		mov    _0cda86_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		add    %esi,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_01e15c_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01e164_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		cmpw   $0x000017,0x000060(%eax)
		jne    _01e187_jump
		testb  $0x000002,_0cec71_data
		je     _01e183_jump
		mov    $0x000004,%dl
		jmp    _01e189_jump

	_01e183_jump:
		mov    $0x000008,%dl
		jmp    _01e189_jump

	_01e187_jump:
		mov    $0x000010,%dl

	_01e189_jump:
		movzbw 0x000068(%esi),%di
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%edi
		mov    0x00002c(%esi),%bx
		add    %eax,%ebx
		mov    $0x000004,%cl
		mov    %ebx,%eax
		mov    %ebx,0x000010(%esp)
		test   %ax,%ax
		js     _01e1b1_jump
		sar    %cl,%ax
		jmp    _01e1ba_jump

	_01e1b1_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e1ba_jump:
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %ax,0x000014(%esp)
		mov    %edi,%eax
		test   %ax,%ax
		js     _01e1cf_jump
		sar    %cl,%ax
		jmp    _01e1d8_jump

	_01e1cf_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e1d8_jump:
		mov    %ax,0x00000c(%esp)
		mov    %ax,0x000008(%esp)
		mov    %edi,%eax
		xor    %dh,%dh
		mov    $0x000004,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _01e1f4_jump
		sar    %cl,%ax
		jmp    _01e1fd_jump

	_01e1f4_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e1fd_jump:
		mov    %ax,(%esp)
		mov    %edi,%eax
		mov    $0x000004,%cl
		add    %edx,%eax
		test   %ax,%ax
		js     _01e211_jump
		sar    %cl,%ax
		jmp    _01e21a_jump

	_01e211_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01e21a_jump:
		mov    %ax,0x000004(%esp)
		mov    %ebx,%eax
		mov    0x00000a(%esp),%ecx
		dec    %eax
		sar    $0x000010,%ecx
		movswl %ax,%edx
		mov    %ecx,%eax
		movswl %bx,%ebx
		call   _01e0e4_func
		mov    %al,0x000065(%esi)
		mov    -0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		call   _01e0e4_func
		mov    0x00006d(%esi),%dl
		mov    %al,0x000063(%esi)
		cmp    $0x000002,%dl
		jne    _01e27d_jump
		mov    0x000010(%esp),%eax
		xor    %ah,%ah
		and    $0x00000f,%edi
		and    $0x00000f,%al
		mov    %ebx,%edx
		movswl %ax,%ebp
		mov    %ecx,%eax
		movswl %di,%edi
		call   _01e0e4_func
		and    $0x0000ff,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _024968_func
		cwtl   
		jmp    _01e28b_jump

	_01e27d_jump:
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _01e0e4_func
		and    $0x0000ff,%eax

	_01e28b_jump:
		mov    0x000012(%esp),%edx
		mov    %al,0x000062(%esi)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _01e0e4_func
		mov    %al,0x000064(%esi)
		mov    0x000014(%esp),%eax
		inc    %eax
		movswl %ax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		call   _01e0e4_func
		mov    %al,0x000066(%esi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e2ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		call   _01e164_func
		movzbw 0x000068(%ebx),%si
		mov    0x000028(%ebx),%dx
		movzbw 0x000069(%ebx),%di
		mov    0x00002c(%ebx),%cx
		mov    0x000060(%ebx),%ax
		add    %edx,%esi
		add    %ecx,%edi
		cmp    $0x000017,%ax
		jne    _01e372_jump
		mov    $0xffffffff,%edx
		mov    _0cdaf6_data,%cl
		mov    %dx,_0cdae4_data
		cmp    $0x00000c,%cl
		jb     _01e357_jump
		jbe    _01e361_jump
		cmp    $0x000012,%cl
		jb     _01e34b_jump
		cmp    $0x000017,%cl
		jbe    _01e36a_jump
		cmp    $0x000019,%cl
		jbe    _01e372_jump
		cmp    $0x00001e,%cl
		je     _01e36a_jump
		jmp    _01e372_jump

	_01e34b_jump:
		cmp    $0x00000e,%cl
		jb     _01e372_jump
		cmp    $0x00000f,%cl
		jbe    _01e361_jump
		jmp    _01e372_jump

	_01e357_jump:
		cmp    $0x000002,%cl
		jb     _01e372_jump
		cmp    $0x000007,%cl
		ja     _01e372_jump

	_01e361_jump:
		movb   $0x000001,_0ceebe_data
		jmp    _01e372_jump

	_01e36a_jump:
		xor    %ah,%ah
		mov    %ah,_0ceebe_data

	_01e372_jump:
		xor    %eax,%eax
		mov    0x000062(%ebx),%al
		testb  $0x000002,_092224_data(%eax)
		jne    _01e5f9_jump
		cmpw   $0x000017,0x000060(%ebx)
		jne    _01e3a9_jump
		mov    _0cdae6_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		jmp    _01e3be_jump

	_01e3a9_jump:
		movswl %di,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func

	_01e3be_jump:
		mov    0x00006d(%ebx),%cl
		cmp    $0x000002,%cl
		jne    _01e3ea_jump
		xor    %edx,%edx
		mov    %al,%dl
		test   %cl,_092224_data(%edx)
		jne    _01e3ea_jump
		movswl %di,%eax
		add    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func

	_01e3ea_jump:
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000002,_092224_data(%edx)
		je     _01e3fe_jump
		xor    %ah,%ah
		jmp    _01e5fe_jump

	_01e3fe_jump:
		xor    %eax,%eax
		mov    0x000064(%ebx),%al
		mov    _092224_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,2),%edx
		xor    %eax,%eax
		mov    0x000063(%ebx),%al
		mov    _092224_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		and    $0x0000ff,%eax
		add    %edx,%eax
		mov    %al,%cl
		cmp    $0x000003,%al
		jne    _01e44b_jump
		mov    %esi,%eax
		xor    %ah,%ah
		and    $0x00000f,%al
		cmp    $0x000008,%ax
		jge    _01e449_jump
		mov    $0x000001,%cl
		jmp    _01e44b_jump

	_01e449_jump:
		mov    $0x000002,%cl

	_01e44b_jump:
		test   %cl,%cl
		je     _01e5f9_jump
		mov    0x000060(%ebx),%ax
		dec    %cl
		cmp    $0x000017,%ax
		jne    _01e4ed_jump
		cmpb   $0x000001,_0ceebe_data
		jne    _01e5f9_jump
		test   %cl,%cl
		je     _01e479_jump
		add    $0x000010,%esi
		jmp    _01e47c_jump

	_01e479_jump:
		sub    $0x000010,%esi

	_01e47c_jump:
		movswl %di,%eax
		sub    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _01e5f9_jump
		cmpb   $0x000002,_0cdb01_data
		je     _01e4cc_jump
		mov    _0cdb15_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%cl
		je     _01e4c6_jump
		movw   $0x000000,0x000050(%ebx)
		jmp    _01e4cc_jump

	_01e4c6_jump:
		movw   $0x000001,0x000050(%ebx)

	_01e4cc_jump:
		test   %cl,%cl
		setne  %al
		and    $0x0000ff,%eax
		inc    %eax
		mov    _0cdaf6_data(%eax),%al
		mov    %al,_0cdaf6_data
		xor    %eax,%eax
		mov    0x000062(%ebx),%al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01e4ed_jump:
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _01e5f9_jump
		cmpb   $0x000002,0x00006d(%ebx)
		setne  %al
		and    $0x0000ff,%eax
		je     _01e5f9_jump
		cmpw   $0x000000,0x000060(%ebx)
		jne    _01e527_jump
		testb  $0x000010,0x000081(%ebx)
		jne    _01e5ee_jump

	_01e527_jump:
		mov    0x000060(%ebx),%cx
		cmp    $0x000009,%cx
		je     _01e5ee_jump
		cmp    $0x0000a5,%cx
		je     _01e5ee_jump
		cmp    $0x000014,%cx
		je     _01e5ee_jump
		cmp    $0x000023,%cx
		je     _01e5ee_jump
		cmp    $0x00002b,%cx
		je     _01e5ee_jump
		cmp    $0x00003c,%cx
		je     _01e5ee_jump
		cmp    $0x00003d,%cx
		je     _01e5ee_jump
		cmp    $0x000041,%cx
		jne    _01e583_jump
		cmpw   $0x000000,0x000050(%ebx)
		jne    _01e5ee_jump

	_01e583_jump:
		mov    0x000060(%ebx),%dx
		cmp    $0x000046,%dx
		je     _01e5ee_jump
		cmp    $0x000064,%dx
		je     _01e5ee_jump
		cmp    $0x0000d9,%dx
		je     _01e5ee_jump
		cmp    $0x000098,%dx
		je     _01e5ee_jump
		cmp    $0x00009c,%dx
		je     _01e5ee_jump
		cmp    $0x0000c3,%dx
		je     _01e5ee_jump
		cmp    $0x00007b,%dx
		jne    _01e5f9_jump
		mov    0x000075(%ebx),%cl
		cmp    $0x000001,%cl
		je     _01e5d5_jump
		cmp    $0x000004,%cl
		je     _01e5d5_jump
		cmp    $0x000007,%cl
		jne    _01e5f9_jump
		cmpb   $0x000002,0x00007d(%ebx)
		jne    _01e5f9_jump

	_01e5d5_jump:
		cmpb   $0x000000,0x00006d(%ebx)
		jne    _01e5e1_jump
		cmpb   $0x000004,0x00006c(%ebx)
		je     _01e5e8_jump

	_01e5e1_jump:
		mov    $0x000001,%eax
		jmp    _01e5ea_jump

	_01e5e8_jump:
		xor    %eax,%eax

	_01e5ea_jump:
		test   %eax,%eax
		je     _01e5f9_jump

	_01e5ee_jump:
		mov    %ebx,%eax
		call   _01dbb8_func
		movb   $0x00000f,0x000062(%ebx)

	_01e5f9_jump:
		xor    %eax,%eax
		mov    0x000062(%ebx),%al

	_01e5fe_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01e604_func:
		movb   $0x000000,0x000071(%eax)
		movb   $0x000000,0x000072(%eax)
		ret    



_01e610_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _01e62f_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01e626_jump
		neg    %eax

	_01e626_jump:
		cmp    $0x000020,%eax
		jge    _01e62f_jump
		add    %dx,0x000040(%ecx)

	_01e62f_jump:
		cmpw   $0x000006,0x000060(%ecx)
		jne    _01e64d_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _01e642_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _01e66f_jump

	_01e642_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		jmp    _01e663_jump

	_01e64d_jump:
		mov    0x00006d(%ecx),%dl
		cmp    $0x000002,%dl
		jne    _01e65a_jump
		cmp    0x00006c(%ecx),%dl
		je     _01e66f_jump

	_01e65a_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_01e663_jump:
		call   _01d374_func
		mov    %ecx,%eax
		call   _01e604_func

	_01e66f_jump:
		pop    %ecx
		pop    %ebx
		ret    



_01e674_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%edx
		call   _01cbd0_func
		test   %al,%al
		je     _01e6d7_jump
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    _0ceca4_data,%bx
		mov    %ah,0x000081(%edx)
		cmp    $0x000005,%bx
		jne    _01e6ad_jump
		cmpw   $0x0000a1,0x000060(%edx)
		je     _01e6b8_jump

	_01e6ad_jump:
		mov    0x000032(%edx),%eax
		sar    $0x000010,%eax
		call   _01f334_func

	_01e6b8_jump:
		mov    0x000060(%edx),%si
		cmp    $0x0000aa,%si
		je     _01e6c9_jump
		cmp    $0x00004b,%si
		jne    _01e6d7_jump

	_01e6c9_jump:
		movl   $0xffff8300,0x000028(%edx)
		movl   $0xffff8300,0x00002c(%edx)

	_01e6d7_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_01e6dc_func:
		push   %ebx
		push   %edx
		mov    0x000076(%eax),%dl
		mov    _0cdbc3_data,%dh
		cmp    %dh,%dl
		jae    _01e6f2_jump
		movb   $0x000000,0x000076(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_01e6f2_jump:
		mov    %dl,%bl
		sub    %dh,%bl
		mov    %bl,0x000076(%eax)
		pop    %edx
		pop    %ebx
		ret    



_01e6fc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %cx,0x000014(%esp)
		movw   $0x000000,(%edx)
		xor    %eax,%eax
		movw   $0x000000,(%ebx)
		mov    _0cdafc_data,%al
		mov    0x00004e(%esi),%dx
		mov    0x000028(%esi),%bx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %ax,0x000010(%esp)
		xor    %eax,%eax
		mov    0x00004c(%esi),%cx
		mov    _0cdafd_data,%al
		mov    0x00002c(%esi),%dx
		add    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00000e(%esp),%ebx
		mov    0x000069(%esi),%al
		sar    $0x000010,%ebx
		sub    %eax,%edx
		mov    %ebx,%eax
		mov    %dx,0x00000c(%esp)
		test   %eax,%eax
		jge    _01e766_jump
		neg    %eax

	_01e766_jump:
		mov    0x00000a(%esp),%ecx
		mov    %eax,%edx
		sar    $0x000010,%ecx
		mov    %ax,0x000018(%esp)
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _01e77c_jump
		neg    %eax

	_01e77c_jump:
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    %ax,0x00001c(%esp)
		cmpw   $0x000000,0x000010(%esp)
		je     _01e8b5_jump
		cmpw   $0x000000,0x00000c(%esp)
		je     _01e8b5_jump
		cmp    (%esp),%dx
		jle    _01e848_jump
		mov    -0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		sar    $0x00001f,%edx
		mov    %eax,0x000004(%esp)
		mov    %ebx,%eax
		idivl  0x000004(%esp)
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %eax,%ecx
		cmpw   $0x000000,0x000010(%esp)
		jle    _01e7df_jump
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01e7e8_jump

	_01e7df_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01e7e8_jump:
		mov    0x00002e(%esp),%edx
		mov    %ax,(%edi)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %ax,0x000000(%ebp)
		test   %ax,%ax
		jne    _01e922_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _01e82f_jump
		movl   $0x000010,0x000008(%esp)
		jmp    _01e837_jump

	_01e82f_jump:
		movl   $0xfffffff0,0x000008(%esp)

	_01e837_jump:
		mov    0x000008(%esp),%eax
		movswl (%edi),%edx
		add    %eax,%edx
		mov    %dx,(%edi)
		jmp    _01e922_jump

	_01e848_jump:
		movswl %dx,%eax
		mov    %eax,0x000004(%esp)
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %eax,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    0x00000c(%esp),%edx
		mov    %eax,%ebx
		test   %dx,%dx
		jle    _01e87b_jump
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01e884_jump

	_01e87b_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01e884_jump:
		mov    0x000012(%esp),%edx
		mov    %ax,0x000000(%ebp)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000004(%esp)
		mov    %ax,(%edi)
		jmp    _01e922_jump

	_01e8b5_jump:
		mov    0x00000c(%esp),%edx
		test   %dx,%dx
		jne    _01e8f3_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _01e8d1_jump
		mov    0x000012(%esp),%edx
		sar    $0x000010,%edx
		neg    %edx
		jmp    _01e8d8_jump

	_01e8d1_jump:
		mov    0x000012(%esp),%edx
		sar    $0x000010,%edx

	_01e8d8_jump:
		mov    %dx,(%edi)
		cmpw   $0x000000,0x000010(%esp)
		jle    _01e8ea_jump
		mov    $0x000001,%ebx
		jmp    _01e8ef_jump

	_01e8ea_jump:
		mov    $0xffffffff,%ebx

	_01e8ef_jump:
		xor    %ecx,%ecx
		jmp    _01e922_jump

	_01e8f3_jump:
		jle    _01e8fe_jump
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		jmp    _01e907_jump

	_01e8fe_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		neg    %eax

	_01e907_jump:
		mov    0x00000c(%esp),%ecx
		xor    %ebx,%ebx
		mov    %ax,0x000000(%ebp)
		test   %cx,%cx
		jle    _01e91d_jump
		mov    $0x000001,%ecx
		jmp    _01e922_jump

	_01e91d_jump:
		mov    $0xffffffff,%ecx

	_01e922_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _01e931_jump
		cmpw   $0x000000,(%edi)
		jg     _01e940_jump

	_01e931_jump:
		testb  $0x000008,0x000081(%esi)
		je     _01e950_jump
		cmpw   $0x000000,(%edi)
		jge    _01e950_jump

	_01e940_jump:
		negw   (%edi)
		cmpw   $0x000000,0x000000(%ebp)
		jne    _01e950_jump
		movw   $0x000002,0x000000(%ebp)

	_01e950_jump:
		mov    0x00004e(%esi),%ax
		mov    0x00004c(%esi),%dx
		add    %ebx,%ebx
		add    %ecx,%ecx
		add    %ebx,%eax
		add    %ecx,%edx
		mov    %ax,0x00004e(%esi)
		mov    %dx,0x00004c(%esi)
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01ea14_func:
		push   %ebx
		cmp    $0x000001,%al
		jbe    _01ea1f_jump
		cmp    $0x000002,%al
		je     _01ea39_jump
		jmp    _01ea51_jump

	_01ea1f_jump:
		jne    _01ea24_jump
		add    $0x000029,%dl

	_01ea24_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0ce210_data,%ebx
		jmp    _01ea4c_jump

	_01ea39_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0cdb24_data,%ebx

	_01ea4c_jump:
		shl    $0x000002,%eax
		add    %eax,%ebx

	_01ea51_jump:
		xor    %eax,%eax
		mov    0x000005(%ebx),%al
		pop    %ebx
		ret    



_01ea58_func:
		push   %ebx
		cmp    $0x000001,%al
		jbe    _01ea63_jump
		cmp    $0x000002,%al
		je     _01ea7d_jump
		jmp    _01ea95_jump

	_01ea63_jump:
		jne    _01ea68_jump
		add    $0x000029,%dl

	_01ea68_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0ce210_data,%ebx
		jmp    _01ea90_jump

	_01ea7d_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0cdb24_data,%ebx

	_01ea90_jump:
		shl    $0x000002,%eax
		add    %eax,%ebx

	_01ea95_jump:
		mov    0x000009(%ebx),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x000007(%ebx),%dl
		and    $0x0000ff,%eax
		add    %edx,%eax
		pop    %ebx
		ret    



_01eaa8_func:
		push   %ebx
		push   %edx
		mov    _0c04d4_data,%dh
		xor    %eax,%eax

	_01eab2_jump:
		add    $0x0000d8,%eax
		mov    %dh,%dl
		xor    %bl,%bl
		mov    %dh,_0cb8a0_data(%eax)
		mov    %bl,_0cb976_data(%eax)
		xor    %dh,%dl
		mov    %dl,_0cb975_data(%eax)
		cmp    $0x000870,%eax
		jne    _01eab2_jump
		pop    %edx
		pop    %ebx
		ret    



_01eadc_func:
		push   %edx
		xor    %ah,%ah
		cmp    $0x000061,%al
		jb     _01eaec_jump
		cmp    $0x00007a,%al
		ja     _01eaec_jump
		mov    %al,%ah
		sub    $0x00005d,%ah

	_01eaec_jump:
		cmp    $0x000030,%al
		jb     _01eaf9_jump
		cmp    $0x000039,%al
		ja     _01eaf9_jump
		mov    %al,%ah
		sub    $0x000012,%ah

	_01eaf9_jump:
		mov    %al,%dl
		cmp    $0x00003f,%al
		jb     _01eb61_jump
		jbe    _01eb93_jump
		cmp    $0x000081,%al
		jb     _01eb3f_jump
		jbe    _01ebd5_jump
		cmp    $0x000094,%al
		jb     _01eb33_jump
		jbe    _01ebcf_jump
		cmp    $0x00009c,%al
		jb     _01ebdd_jump
		jbe    _01ebdb_jump
		cmp    $0x0000f8,%al
		je     _01ebbd_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb33_jump:
		cmp    $0x000084,%al
		je     _01ebdb_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb3f_jump:
		cmp    $0x00007c,%al
		jb     _01eb55_jump
		jbe    _01ebc9_jump
		cmp    $0x00007e,%al
		je     _01ebb7_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb55_jump:
		cmp    $0x00005e,%al
		je     _01ebb7_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb61_jump:
		cmp    $0x000027,%al
		jb     _01eb7d_jump
		jbe    _01ebab_jump
		cmp    $0x00002e,%al
		jb     _01eb75_jump
		jbe    _01eb9f_jump
		cmp    $0x00003a,%al
		je     _01eba5_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb75_jump:
		cmp    $0x00002a,%al
		je     _01ebc3_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb7d_jump:
		cmp    $0x000023,%al
		jb     _01eb8b_jump
		jbe    _01ebb1_jump
		cmp    $0x000025,%al
		je     _01ebbd_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb8b_jump:
		cmp    $0x000021,%al
		je     _01eb99_jump
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb93_jump:
		mov    $0x000001,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb99_jump:
		mov    $0x000002,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01eb9f_jump:
		mov    $0x000003,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01eba5_jump:
		mov    $0x000028,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebab_jump:
		mov    $0x000029,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebb1_jump:
		mov    $0x00002f,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebb7_jump:
		mov    $0x00002e,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebbd_jump:
		mov    $0x00002d,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebc3_jump:
		mov    $0x000030,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebc9_jump:
		mov    $0x000031,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebcf_jump:
		mov    $0x00002b,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebd5_jump:
		mov    $0x00002c,%ah
		mov    %ah,%al
		pop    %edx
		ret    

	_01ebdb_jump:
		mov    $0x00002a,%ah

	_01ebdd_jump:
		mov    %ah,%al
		pop    %edx
		ret    



_01ebe4_func:
		cmp    $0x000001,%al
		jne    _01ebeb_jump
		addb   $0x000029,(%edx)

	_01ebeb_jump:
		ret    



_01ebec_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %ebx,%esi
		mov    %ecx,(%esp)
		mov    %edx,%ecx
		xor    %ebx,%ebx
		jmp    _01ec30_jump

	_01ebfe_jump:
		cmp    $0x00002f,%dl
		je     _01ec3c_jump
		cmp    $0x000020,%dl
		jne    _01ec0c_jump
		add    %esi,%ebx
		jmp    _01ec30_jump

	_01ec0c_jump:
		mov    %dl,%al
		and    $0x0000ff,%eax
		call   _01eadc_func
		test   %al,%al
		je     _01ec30_jump
		xor    %edx,%edx
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		call   _01ea58_func
		sub    (%esp),%eax
		add    %eax,%ebx

	_01ec30_jump:
		inc    %ecx
		movswl %cx,%eax
		add    %edi,%eax
		mov    (%eax),%dl
		test   %dl,%dl
		jne    _01ebfe_jump

	_01ec3c_jump:
		mov    %ebx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_01ec48_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000ec,%esp
		mov    %eax,%ebp
		mov    0x0000d4(%eax),%al
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,0x0000d4(%esp)
		mov    %edx,0x0000c8(%esp)
		mov    %edx,0x0000e4(%esp)
		mov    %edx,0x0000e0(%esp)
		mov    %edx,0x0000d0(%esp)
		mov    %al,0x0000e8(%esp)
		cmp    $0x000002,%al
		jne    _01ecb5_jump
		mov    $0x00000f,%edx
		mov    $0x000001,%ecx
		mov    $0x000008,%esi
		mov    %edx,0x0000d8(%esp)
		mov    %ecx,0x0000dc(%esp)
		mov    %esi,0x0000cc(%esp)
		jmp    _01ed03_jump

	_01ecb5_jump:
		cmp    $0x000001,%al
		jne    _01ecdf_jump
		mov    $0x000017,%esi
		mov    $0x000003,%edi
		mov    $0x00000a,%eax
		mov    %esi,0x0000d8(%esp)
		mov    %edi,0x0000dc(%esp)
		mov    %eax,0x0000cc(%esp)
		jmp    _01ed03_jump

	_01ecdf_jump:
		mov    $0x000024,%eax
		mov    $0x000003,%edx
		mov    $0x00000c,%ecx
		mov    %eax,0x0000d8(%esp)
		mov    %edx,0x0000dc(%esp)
		mov    %ecx,0x0000cc(%esp)

	_01ed03_jump:
		mov    $0x0000c8,%ecx
		mov    %esp,%edi
		mov    %ebp,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,(%esp)
		je     _01ee9f_jump
		xor    %ecx,%ecx
		jmp    _01ede9_jump

	_01ed2d_jump:
		cmp    $0x00002f,%dl
		jne    _01ed8b_jump
		mov    $0x000001,%esi
		mov    0x0000c8(%esp),%edi
		mov    0x0000d4(%esp),%eax
		add    %esi,%edi
		mov    %esi,0x0000d0(%esp)
		mov    %edi,0x0000c8(%esp)
		cmp    %ax,%bx
		jle    _01ed62_jump
		mov    %bx,0x0000d4(%esp)

	_01ed62_jump:
		mov    0x0000e0(%esp),%eax
		mov    0x0000e4(%esp),%edx
		xor    %ebx,%ebx
		cmp    %dx,%ax
		jle    _01ed7e_jump
		mov    %eax,0x0000e4(%esp)

	_01ed7e_jump:
		xor    %esi,%esi
		xor    %al,%al
		mov    %esi,0x0000e0(%esp)
		jmp    _01edb8_jump

	_01ed8b_jump:
		cmp    $0x000020,%dl
		jne    _01edac_jump
		mov    0x0000cc(%esp),%edi
		mov    0x0000e0(%esp),%edx
		xor    %al,%al
		inc    %edx
		add    %edi,%ebx
		mov    %edx,0x0000e0(%esp)
		jmp    _01edb8_jump

	_01edac_jump:
		mov    %dl,%al
		and    $0x0000ff,%eax
		call   _01eadc_func

	_01edb8_jump:
		test   %al,%al
		je     _01ede8_jump
		xor    %edx,%edx
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x0000e8(%esp),%al
		mov    0x0000e0(%esp),%edi
		call   _01ea58_func
		mov    0x0000dc(%esp),%edx
		inc    %edi
		sub    %edx,%eax
		mov    %edi,0x0000e0(%esp)
		add    %eax,%ebx

	_01ede8_jump:
		inc    %ecx

	_01ede9_jump:
		movswl %cx,%eax
		mov    (%esp,%eax,1),%dl
		test   %dl,%dl
		jne    _01ed2d_jump
		mov    0x0000c8(%esp),%edi
		test   %di,%di
		jne    _01ee19_jump
		mov    $0x000001,%edx
		mov    %bx,0x0000d4(%esp)
		mov    %edx,0x0000c8(%esp)
		jmp    _01ee23_jump

	_01ee19_jump:
		mov    %edi,%eax
		dec    %eax
		mov    %eax,0x0000c8(%esp)

	_01ee23_jump:
		cmpw   $0x000000,0x0000d0(%esp)
		je     _01ee4e_jump
		mov    0x0000d2(%esp),%eax
		mov    0x0000ce(%ebp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dx,0x0000c8(%ebp)
		jmp    _01ee5c_jump

	_01ee4e_jump:
		mov    0x0000d0(%ebp),%ax
		mov    %ax,0x0000c8(%ebp)

	_01ee5c_jump:
		mov    0x0000d4(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,0x0000cc(%ebp)
		mov    0x0000d8(%esp),%ecx
		mov    0x0000d2(%ebp),%ax
		sub    %ecx,%eax
		add    $0x000002,%eax
		mov    %ax,0x0000ca(%ebp)
		mov    0x0000c8(%esp),%eax
		imul   %ecx,%eax
		sub    $0x000002,%eax
		mov    %ax,0x0000ce(%ebp)

	_01ee9f_jump:
		add    $0x0000ec,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01eeac_switch:
		.long   _01eefe_case
		.long   _01ef08_case
		.long   _01ef12_case
		.long   _01ef1c_case




_01eebc_func:
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		cmp    $0x0000ff,%bx
		jne    _01eee4_jump
		xor    %al,%al
		jmp    _01eed8_jump

	_01eecd_jump:
		cmp    $0x000024,%ah
		jne    _01eed6_jump
		xor    %ebx,%ebx
		mov    %al,%bl

	_01eed6_jump:
		inc    %al

	_01eed8_jump:
		xor    %edx,%edx
		mov    %al,%dl
		add    %ecx,%edx
		mov    (%edx),%ah
		test   %ah,%ah
		jne    _01eecd_jump

	_01eee4_jump:
		cmp    $0x0000ff,%bx
		je     _01ef23_jump
		cmp    $0x000003,%si
		ja     _01ef23_jump
		xor    %edx,%edx
		mov    %si,%dx
		jmp    *%cs:_01eeac_switch(,%edx,4)

	_01eefe_case:
		movswl %bx,%edx
		movb   $0x000061,(%ecx,%edx,1)
		pop    %esi
		pop    %ecx
		ret    

	_01ef08_case:
		movswl %bx,%edx
		movb   $0x000062,(%ecx,%edx,1)
		pop    %esi
		pop    %ecx
		ret    

	_01ef12_case:
		movswl %bx,%edx
		movb   $0x000063,(%ecx,%edx,1)
		pop    %esi
		pop    %ecx
		ret    

	_01ef1c_case:
		movswl %bx,%edx
		movb   $0x000064,(%ecx,%edx,1)

	_01ef23_jump:
		pop    %esi
		pop    %ecx
		ret    



_01ef28_func:
		push   %ebx
		push   %ecx
		mov    (%eax),%bx
		mov    (%edx),%cx
		mov    %bx,(%edx)
		mov    %cx,(%eax)
		pop    %ecx
		pop    %ebx
		ret    



_01ef3c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,0x000008(%esp)
		mov    %dx,0x000014(%esp)
		mov    %bx,0x000024(%esp)
		mov    %cx,0x00001c(%esp)
		mov    0x000040(%esp),%eax
		mov    0x000012(%esp),%ecx
		mov    %eax,0x000018(%esp)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sub    %ecx,%eax
		mov    0x000022(%esp),%edi
		mov    %eax,%ecx
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%edi
		sar    $0x000010,%eax
		sub    %edi,%eax
		xor    %esi,%esi
		mov    %eax,%edi
		test   %ecx,%ecx
		je     _01efa0_jump
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %eax,%eax
		jge    _01ef94_jump
		neg    %eax

	_01ef94_jump:
		cmp    $0x000001,%eax
		jge    _01efa0_jump
		mov    $0x000001,%ebx
		jmp    _01efa2_jump

	_01efa0_jump:
		xor    %ebx,%ebx

	_01efa2_jump:
		cmp    $0x000001,%bx
		jne    _01f11e_jump
		test   %ecx,%ecx
		jge    _01efd2_jump
		lea    0x00001c(%esp),%edx
		lea    0x000014(%esp),%eax
		mov    %ebx,%esi
		call   _01ef28_func
		neg    %ecx
		lea    0x00003c(%esp),%edx
		lea    0x000024(%esp),%eax
		neg    %edi
		call   _01ef28_func
		jmp    _01efe9_jump

	_01efd2_jump:
		jne    _01efe9_jump
		test   %edi,%edi
		jge    _01efe9_jump
		lea    0x00003c(%esp),%edx
		lea    0x000024(%esp),%eax
		mov    %ebx,%esi
		call   _01ef28_func
		neg    %edi

	_01efe9_jump:
		test   %edi,%edi
		jle    _01eff7_jump
		movl   $0x000001,0x000004(%esp)
		jmp    _01f009_jump

	_01eff7_jump:
		jge    _01f003_jump
		movl   $0xffffffff,0x000004(%esp)
		jmp    _01f009_jump

	_01f003_jump:
		xor    %ebp,%ebp
		mov    %ebp,0x000004(%esp)

	_01f009_jump:
		mov    %edi,%eax
		test   %eax,%eax
		jge    _01f011_jump
		neg    %eax

	_01f011_jump:
		mov    %eax,%edi
		lea    (%eax,%eax,1),%ebp
		add    %edi,%edi
		sub    %ecx,%eax
		mov    %di,0x00000c(%esp)
		add    %eax,%eax
		sub    %ecx,%ebp
		mov    %ax,0x000010(%esp)
		test   %si,%si
		je     _01f0ac_jump
		mov    0x00001a(%esp),%esi
		mov    0x000012(%esp),%eax
		mov    0x000042(%esp),%edx
		sar    $0x000010,%esi
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %esi,%eax
		imul   %edx,%eax
		negl   0x000004(%esp)
		mov    $0x000007,%cl
		mov    0x00003a(%esp),%edi
		test   %eax,%eax
		je     _01f05d_jump
		sar    %cl,%eax
		jmp    _01f063_jump

	_01f05d_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f063_jump:
		mov    0x00001a(%esp),%esi
		sar    $0x000010,%esi
		lea    (%esi,%eax,1),%ecx
		inc    %esi
		sar    $0x000010,%edi

	_01f071_jump:
		cmp    %ecx,%esi
		jl     _01f293_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f08d_jump
		mov    0x00000e(%esp),%eax
		mov    0x000004(%esp),%edx
		sar    $0x000010,%eax
		add    %edx,%edi
		jmp    _01f094_jump

	_01f08d_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax

	_01f094_jump:
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01f0a9_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01f0a9_jump:
		dec    %esi
		jmp    _01f071_jump

	_01f0ac_jump:
		mov    0x000012(%esp),%esi
		mov    0x00001a(%esp),%edx
		mov    0x000042(%esp),%eax
		sar    $0x000010,%esi
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %esi,%edx
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x000022(%esp),%edi
		test   %eax,%eax
		je     _01f0d4_jump
		sar    %cl,%eax
		jmp    _01f0da_jump

	_01f0d4_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f0da_jump:
		mov    0x000012(%esp),%esi
		sar    $0x000010,%esi
		lea    (%esi,%eax,1),%ecx
		inc    %esi
		sar    $0x000010,%edi

	_01f0e8_jump:
		cmp    %ecx,%esi
		jg     _01f293_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f0ff_jump
		add    0x000004(%esp),%edi
		mov    0x00000e(%esp),%eax
		jmp    _01f103_jump

	_01f0ff_jump:
		mov    0x00000a(%esp),%eax

	_01f103_jump:
		sar    $0x000010,%eax
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01f11b_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01f11b_jump:
		inc    %esi
		jmp    _01f0e8_jump

	_01f11e_jump:
		test   %edi,%edi
		jge    _01f147_jump
		lea    0x00001c(%esp),%edx
		lea    0x000014(%esp),%eax
		mov    $0x000001,%esi
		call   _01ef28_func
		neg    %ecx
		lea    0x00003c(%esp),%edx
		lea    0x000024(%esp),%eax
		neg    %edi
		call   _01ef28_func
		jmp    _01f161_jump

	_01f147_jump:
		jne    _01f161_jump
		test   %ecx,%ecx
		jge    _01f161_jump
		lea    0x00001c(%esp),%edx
		lea    0x000014(%esp),%eax
		mov    $0x000001,%esi
		call   _01ef28_func
		neg    %ecx

	_01f161_jump:
		test   %ecx,%ecx
		jle    _01f16e_jump
		movl   $0x000001,(%esp)
		jmp    _01f17e_jump

	_01f16e_jump:
		jge    _01f179_jump
		movl   $0xffffffff,(%esp)
		jmp    _01f17e_jump

	_01f179_jump:
		xor    %edx,%edx
		mov    %edx,(%esp)

	_01f17e_jump:
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _01f186_jump
		neg    %eax

	_01f186_jump:
		mov    %eax,%ecx
		lea    (%eax,%eax,1),%ebp
		add    %ecx,%ecx
		sub    %edi,%eax
		mov    %cx,0x000020(%esp)
		add    %eax,%eax
		sub    %edi,%ebp
		mov    %ax,0x000028(%esp)
		test   %si,%si
		je     _01f224_jump
		mov    0x00003a(%esp),%edi
		mov    (%esp),%edx
		mov    0x000022(%esp),%eax
		sar    $0x000010,%edi
		neg    %edx
		sar    $0x000010,%eax
		mov    %edx,(%esp)
		mov    0x000042(%esp),%edx
		sub    %edi,%eax
		sar    $0x000010,%edx
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x00001a(%esp),%esi
		test   %eax,%eax
		je     _01f1d6_jump
		sar    %cl,%eax
		jmp    _01f1dc_jump

	_01f1d6_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f1dc_jump:
		mov    0x00003a(%esp),%edi
		sar    $0x000010,%edi
		lea    (%edi,%eax,1),%ecx
		inc    %edi
		sar    $0x000010,%esi

	_01f1ea_jump:
		cmp    %ecx,%edi
		jl     _01f293_jump
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f205_jump
		mov    0x000026(%esp),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		add    %edx,%esi
		jmp    _01f20c_jump

	_01f205_jump:
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax

	_01f20c_jump:
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01f221_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01f221_jump:
		dec    %edi
		jmp    _01f1ea_jump

	_01f224_jump:
		mov    0x000022(%esp),%edi
		mov    0x00003a(%esp),%eax
		mov    0x000042(%esp),%edx
		sar    $0x000010,%edi
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edi,%eax
		imul   %edx,%eax
		mov    $0x000007,%cl
		mov    0x000012(%esp),%esi
		test   %eax,%eax
		je     _01f24c_jump
		sar    %cl,%eax
		jmp    _01f252_jump

	_01f24c_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_01f252_jump:
		mov    0x000022(%esp),%edi
		sar    $0x000010,%edi
		lea    (%edi,%eax,1),%ecx
		inc    %edi
		sar    $0x000010,%esi
		cmp    %ecx,%edi
		jg     _01f293_jump

	_01f264_jump:
		inc    %ebx
		test   %ebp,%ebp
		jle    _01f272_jump
		add    (%esp),%esi
		mov    0x000026(%esp),%eax
		jmp    _01f276_jump

	_01f272_jump:
		mov    0x00001e(%esp),%eax

	_01f276_jump:
		sar    $0x000010,%eax
		add    %eax,%ebp
		cmp    0x000018(%esp),%bx
		jle    _01f28e_jump
		movswl %di,%edx
		movswl %si,%eax
		call   *0x000008(%esp)
		xor    %ebx,%ebx

	_01f28e_jump:
		inc    %edi
		cmp    %ecx,%edi
		jle    _01f264_jump

	_01f293_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_01f29c_func:
		push   %edx
		mov    _0cec78_data,%ah
		mov    _0cec79_data,%dl
		and    $0x000000,%ah
		and    $0x0000f0,%dl
		mov    %ah,_0cec78_data
		mov    %dl,_0cec79_data
		pop    %edx
		ret    



_01f2c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cdaa0_data,%eax
		mov    (%eax),%edx
		mov    0x00000c(%eax),%ebx
		mov    0x000002(%edx),%cl
		mov    0x0001c2(%edx),%dl
		mov    %dl,0x0000a2(%ebx)
		mov    (%eax),%edx
		mov    0x0001c2(%edx),%bl
		mov    %bl,0x000002(%edx)
		mov    (%eax),%eax
		mov    %cl,0x0001c2(%eax)
		mov    $0x000001,%al
		mov    _0ceeb5_data,%ah
		sub    %ah,%al
		mov    %al,_0ceeb5_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f304_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cc1fc_data,%dx
		movswl %dx,%ebx
		lea    0x000000(,%ebx,2),%ecx
		inc    %edx
		mov    _0cc1f8_data,%ebx
		mov    0x000034(%eax),%ax
		mov    %dx,_0cc1fc_data
		mov    %ax,(%ecx,%ebx,1)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f334_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		mov    _0cc1fc_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _01f36b_jump

	_01f348_jump:
		movswl %ax,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    _0cc1f8_data,%edx
		cmp    (%edx,%ebx,1),%cx
		je     _01f36b_jump
		mov    _0cc1fc_data,%bx
		inc    %eax
		cmp    %bx,%ax
		jl     _01f348_jump

	_01f36b_jump:
		mov    _0cc1fc_data,%di
		cmp    %di,%ax
		jge    _01f39f_jump
		mov    %edi,%edx
		dec    %edx
		mov    %dx,_0cc1fc_data
		mov    _0cc1fa_data,%ebx
		sar    $0x000010,%ebx
		mov    _0cc1f8_data,%edx
		add    %ebx,%ebx
		lea    (%edx,%ebx,1),%ecx
		movswl %ax,%ebx
		mov    (%ecx),%ax
		mov    %ax,(%edx,%ebx,2)

	_01f39f_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f3a4_func:
		push   %edx
		mov    %eax,%edx
		call   _03c7bc_func
		push   %edx
		push   $_0c04d8_data
		call   _07bc8c_func
		mov    _0cee94_data,%ah
		add    $0x000008,%esp
		cmp    $0x000001,%ah
		je     _01f3d7_jump
		push   $_0c04f8_data
		call   _07bc8c_func
		add    $0x000004,%esp
		call   _07c0ab_func

	_01f3d7_jump:
		mov    $0xffffffff,%eax
		call   _07bcaf_func
		pop    %edx
		ret    



_01f3e4_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    %dl,(%esp)
		xor    %eax,%eax
		jmp    _01f401_jump

	_01f3f2_jump:
		imul   $0x00000c,%edx,%ecx
		mov    (%ebx),%edx
		mov    0x000004(%ecx,%edx,1),%dl
		cmp    (%esp),%dl
		je     _01f410_jump
		inc    %eax

	_01f401_jump:
		xor    %ecx,%ecx
		movswl %ax,%edx
		mov    0x000044(%ebx),%cx
		cmp    %ecx,%edx
		jl     _01f3f2_jump
		xor    %al,%al

	_01f410_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_01f420_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    _0cec9e_data,%eax
		mov    _0cec9a_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %di,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0cecb8_data,%eax
		mov    _0cec9c_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %eax,%ebx
		movswl %si,%eax
		sub    %eax,%ebx
		test   %dx,%dx
		setg   %al
		mov    %al,0x000004(%esp)
		test   %bx,%bx
		setg   %al
		mov    %al,(%esp)
		cmpb   $0x000000,0x000004(%esp)
		jne    _01f47d_jump
		neg    %edx

	_01f47d_jump:
		cmpb   $0x000000,(%esp)
		jne    _01f485_jump
		neg    %ebx

	_01f485_jump:
		cmp    $0x0000c8,%dx
		jle    _01f4be_jump
		mov    $0x000001,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _01f49a_jump
		sar    %cl,%ax
		jmp    _01f4a3_jump

	_01f49a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01f4a3_jump:
		mov    $0x000001,%cl
		mov    %eax,%edx
		mov    %ebx,%eax
		test   %ax,%ax
		js     _01f4b3_jump
		sar    %cl,%ax
		jmp    _01f4bc_jump

	_01f4b3_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_01f4bc_jump:
		mov    %eax,%ebx

	_01f4be_jump:
		test   %bx,%bx
		jne    _01f4ed_jump
		cmpb   $0x000000,0x000004(%esp)
		je     _01f4d4_jump
		mov    $0x00001b,%eax
		jmp    _01f58a_jump

	_01f4d4_jump:
		test   %dx,%dx
		je     _01f4e3_jump
		mov    $0x000009,%eax
		jmp    _01f58a_jump

	_01f4e3_jump:
		mov    $0xffffffff,%eax
		jmp    _01f58a_jump

	_01f4ed_jump:
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cmpb   $0x000000,0x000004(%esp)
		je     _01f54c_jump
		cmpb   $0x000000,(%esp)
		je     _01f537_jump
		cmp    $0x0000ff,%ax
		jle    _01f527_jump
		mov    $0x00001b,%eax
		jmp    _01f58a_jump

	_01f527_jump:
		cwtl   
		mov    _094784_data(%eax),%al
		xor    %ah,%ah
		add    $0x00001b,%eax
		jmp    _01f58a_jump

	_01f537_jump:
		cmp    $0x0000ff,%ax
		jle    _01f541_jump
		xor    %eax,%eax
		jmp    _01f58a_jump

	_01f541_jump:
		cwtl   
		mov    _094784_data(%eax),%al
		xor    %ah,%ah
		jmp    _01f58a_jump

	_01f54c_jump:
		cmpb   $0x000000,(%esp)
		je     _01f56f_jump
		cmp    $0x0000ff,%ax
		jle    _01f55f_jump
		mov    $0x000012,%eax
		jmp    _01f58a_jump

	_01f55f_jump:
		cwtl   
		mov    _094784_data(%eax),%al
		xor    %ah,%ah
		add    $0x000012,%eax
		jmp    _01f58a_jump

	_01f56f_jump:
		cmp    $0x0000ff,%ax
		jle    _01f57c_jump
		mov    $0x000009,%eax
		jmp    _01f58a_jump

	_01f57c_jump:
		cwtl   
		mov    _094784_data(%eax),%al
		xor    %ah,%ah
		add    $0x000009,%eax

	_01f58a_jump:
		movswl %ax,%ebx
		movswl %si,%edx
		movswl %di,%eax
		call   _0775d0_func
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_01f5a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x000008(%esp),%edx
		push   %edx
		lea    0x000004(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %edx
		lea    0x000014(%esp),%ebx
		mov    $0x00000e,%edx
		call   _01d710_func
		mov    0x000006(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %ax,%edx
		mov    -0x000002(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %ebx,%eax
		cwtl   
		call   _01f420_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f5f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x000008(%esp),%edx
		push   %edx
		lea    0x000004(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %edx
		lea    0x000014(%esp),%ebx
		mov    $0x00000e,%edx
		call   _01d710_func
		mov    0x000006(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %ax,%edx
		mov    -0x000002(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %ebx,%eax
		cwtl   
		call   _01f420_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f650_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x00000f,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    0x000002(%esp),%ebx
		add    %edx,%eax
		sar    $0x000010,%ebx
		movswl %ax,%edx
		mov    0x000006(%esp),%eax
		sar    %ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		cwtl   
		call   _01f420_func
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x00000e,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    %ebx,%eax
		cwtl   
		call   _01f420_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01f6f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0cdabc_data,%ebx
		mov    _0cdafc_data,%dl
		mov    0x000028(%eax),%ecx
		add    %ebx,%edx
		mov    0x000068(%eax),%al
		sub    %ecx,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		test   %edx,%edx
		setg   %al
		xor    %ah,%ah
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_01f888_switch:
		.long   _01f944_case
		.long   _01f9bd_case
		.long   _01f9bd_case
		.long   _01f966_case
		.long   _01f9fd_case
		.long   _01f9fd_case
		.long   _01fa94_case
		.long   _01fb14_case
		.long   _01fb14_case
		.long   _01fad4_case
		.long   _01fb14_case
		.long   _01fb14_case
		.long   _01fbf3_case
		.long   _01fc08_case
		.long   _01fc2f_case

_01f8c4_switch:
		.long   _01fb4c_case
		.long   _01fb32_case
		.long   _01fb5c_case
		.long   _01fb4c_case
		.long   _01fb32_case

_01f8d8_switch:
		.long   _01fbcc_case
		.long   _01fbbf_case
		.long   _01fc82_case
		.long   _01fbe6_case
		.long   _01fbd9_case




_01f8ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		movzbw 0x00006c(%eax),%si
		shl    $0x000002,%edx
		mov    0x00000c(%eax),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0cee3d_data(%eax),%al
		mov    %esi,%edx
		test   %al,%al
		sete   %al
		sub    $0x000002,%edx
		mov    %al,%ah
		cmp    $0x00000e,%dx
		ja     _01fc82_case
		and    $0x00ffff,%edx
		jmp    *%cs:_01f888_switch(,%edx,4)

	_01f944_case:
		cmpb   $0x00000e,0x00006b(%ecx)
		jne    _01fc82_case
		test   %al,%al
		je     _01fc82_case
		mov    %ecx,%eax
		call   _01f650_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01f966_case:
		cmpb   $0x000016,0x00006b(%ecx)
		jne    _01fc82_case
		cmpb   $0x000000,0x000076(%ecx)
		jne    _01f990_jump
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01f990_jump:
		mov    $0x000001,%eax
		call   _0690e0_func
		test   %ax,%ax
		jne    _01fa7a_jump

	_01f9a3_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01f9bd_case:
		cmpb   $0x000013,0x00006b(%ecx)
		jne    _01fc82_case
		test   %ah,%ah
		je     _01fc82_case
		incw   _0cec5a_data
		cmp    $0x000004,%si
		jne    _01f9e3_jump
		mov    %ecx,%eax
		call   _01f5f8_func

	_01f9e3_jump:
		cmp    $0x000003,%si
		jne    _01fc82_case
		mov    %ecx,%eax
		call   _01f5a0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01f9fd_case:
		cmpb   $0x000014,0x00006b(%ecx)
		jne    _01fc82_case
		cmpb   $0x000000,0x000076(%ecx)
		jne    _01fa27_jump
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fa27_jump:
		mov    _0cec5a_data,%ax
		cmp    $0x000001,%ax
		jb     _01fa70_jump
		jbe    _01fa3d_jump
		cmp    $0x000003,%ax
		je     _01fa52_jump
		jmp    _01fa70_jump

	_01fa3d_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _01d364_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fa52_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ecx,%ecx
		call   _01d364_func
		mov    %cx,_0cec5a_data
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fa70_jump:
		cmp    $0x000006,%si
		jne    _01f9a3_jump

	_01fa7a_jump:
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fa94_case:
		mov    %ecx,%eax
		call   _01f6f4_func
		test   %ax,%ax
		je     _01faba_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01faba_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fad4_case:
		mov    %ecx,%eax
		call   _01f6f4_func
		test   %ax,%ax
		je     _01fafa_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fafa_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fb14_case:
		cmpb   $0x000014,0x000070(%ecx)
		jne    _01fb64_jump
		mov    %esi,%eax
		sub    $0x000009,%eax
		cmp    $0x000004,%ax
		ja     _01fb5c_case
		and    $0x00ffff,%eax
		jmp    *%cs:_01f8c4_switch(,%eax,4)

	_01fb32_case:
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01fb3e_jump
		neg    %eax

	_01fb3e_jump:
		mov    %eax,%ebx
		mov    %ax,0x000040(%ecx)
		neg    %ebx
		mov    %bx,0x000040(%ecx)
		jmp    _01fb5c_case

	_01fb4c_case:
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _01fb58_jump
		neg    %eax

	_01fb58_jump:
		mov    %ax,0x000040(%ecx)

	_01fb5c_case:
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_01fb64_jump:
		xor    %eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000069(%ecx),%al
		mov    0x000068(%ecx),%dl
		mov    %ax,(%esp)
		mov    %al,%bl
		mov    %ecx,%eax
		movzbw 0x000068(%ecx),%di
		call   _02ec10_func
		test   %ax,%ax
		je     _01fc82_case
		mov    -0x000002(%esp),%ebx
		movswl %di,%edx
		mov    %ecx,%eax
		sar    $0x000010,%ebx
		call   _01d624_func
		test   %ax,%ax
		je     _01fc82_case
		sub    $0x000009,%esi
		cmp    $0x000004,%si
		ja     _01fc82_case
		xor    %eax,%eax
		mov    %si,%ax
		jmp    *%cs:_01f8d8_switch(,%eax,4)

	_01fbbf_case:
		movb   $0x000009,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fbcc_case:
		movb   $0x00000a,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fbd9_case:
		movb   $0x00000c,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fbe6_case:
		movb   $0x00000d,0x00006c(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fbf3_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fc08_case:
		mov    0x00006b(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x00001d,%dl
		jae    _01fc1d_jump
		mov    $0xfffffffc,%eax
		jmp    _01fc22_jump

	_01fc1d_jump:
		mov    $0xfffffff8,%eax

	_01fc22_jump:
		mov    %ax,0x000042(%ecx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_01fc2f_case:
		mov    %ecx,%eax
		movw   $0x00fff8,0x000042(%ecx)
		call   _01cbd0_func
		test   %al,%al
		je     _01fc82_case
		mov    _0cece8_data,%eax
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebx
		mov    0x000069(%ecx),%dl
		sar    $0x000010,%eax
		add    %ebx,%edx
		cmp    %eax,%edx
		jge    _01fc82_case
		mov    0x000081(%ecx),%ah
		and    $0x0000fb,%ah
		mov    $0x000001,%edx
		mov    %ah,0x000081(%ecx)
		mov    $_0cda94_data,%eax
		movl   $0x000000,0x000024(%ecx)
		call   _076124_func
		mov    %dx,_0cecc4_data

	_01fc82_case:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_01fc8c_func:
		push   %ebx
		push   %edx
		mov    0x00006c(%eax),%dl
		test   %dl,%dl
		jne    _01fcb9_jump
		xor    %dh,%dh
		mov    %dx,_0cec5a_data
		mov    0x000081(%eax),%dh
		and    $0x0000f7,%dh
		mov    $0x000001,%ebx
		mov    %dh,0x000081(%eax)
		mov    %ebx,%edx
		call   _05efb0_func

	_01fcb9_jump:
		pop    %edx
		pop    %ebx
		ret    



_01fcbc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmp    $0x000002,%dx
		jne    _01fd1e_jump
		call   _01f6f4_func
		mov    0x00006c(%ebx),%cl
		mov    %eax,%edx
		cmp    $0x000005,%cl
		je     _01fceb_jump
		cmp    $0x000006,%cl
		jne    _01fcdf_jump
		test   %ax,%ax
		je     _01fceb_jump

	_01fcdf_jump:
		cmpb   $0x000007,0x00006c(%ebx)
		jne    _01fd1e_jump
		cmp    $0x000001,%dx
		jne    _01fd1e_jump

	_01fceb_jump:
		mov    0x000076(%ebx),%dl
		dec    %dl
		mov    _0cdb20_data,%eax
		mov    %dl,0x000076(%ebx)
		xor    %edx,%edx
		mov    0x000036(%eax),%bx
		mov    0x000068(%eax),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000038(%eax),%cx
		mov    0x000069(%eax),%dl
		call   _0772d8_func
		add    %ecx,%edx
		movswl %bx,%eax
		movswl %dx,%edx
		call   _0779d0_func

	_01fd1e_jump:
		pop    %ecx
		pop    %ebx
		ret    



_01fd24_func:
		movw   $0x000028,_0cdaea_data
		call   _01f6f4_func
		test   %ax,%ax
		je     _01fd3d_jump
		mov    $0x000001,%eax
		ret    

	_01fd3d_jump:
		mov    $0xffffffff,%eax
		ret    



_01fd50_func:
		push   %ebx
		push   %edx
		mov    _0ceeec_data,%dx
		cmp    $0x000002,%dx
		jb     _01fd7e_jump
		jbe    _01fd69_jump
		cmp    $0x000003,%dx
		je     _01fd72_jump
		jmp    _01fd7e_jump

	_01fd69_jump:
		mov    $0x000001,%ebx
		mov    %ebx,%edx
		jmp    _01fd85_jump

	_01fd72_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		jmp    _01fd85_jump

	_01fd7e_jump:
		mov    $0x000001,%edx
		xor    %ebx,%ebx

	_01fd85_jump:
		call   _01d374_func
		pop    %edx
		pop    %ebx
		ret    



_01fd90_func:
		push   %ebx
		mov    %eax,%ebx
		cmp    $0x000006,%dx
		jne    _01fded_jump
		cmpw   $0x000000,0x000050(%eax)
		jne    _01fded_jump
		mov    _0cdb20_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jle    _01fdc3_jump
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d364_func
		mov    0x00003a(%ebx),%eax
		sar    $0x000010,%eax
		add    $0x000047,%eax
		jmp    _01fdd8_jump

	_01fdc3_jump:
		mov    $0x000005,%edx
		mov    %ebx,%eax
		call   _01d364_func
		mov    0x00003a(%ebx),%eax
		sar    $0x000010,%eax
		sub    $0x000055,%eax

	_01fdd8_jump:
		mov    %eax,0x000028(%ebx)
		movw   $0x000000,0x000056(%ebx)
		movw   $0x0000ff,0x000050(%ebx)
		movb   $0x0000ff,0x00006b(%ebx)
		pop    %ebx
		ret    

	_01fded_jump:
		cmp    $0x000001,%dx
		jle    _01fe12_jump
		mov    _0cdb20_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jle    _01fe06_jump
		mov    $0x000007,%edx
		jmp    _01fe0b_jump

	_01fe06_jump:
		mov    $0x000006,%edx

	_01fe0b_jump:
		mov    %ebx,%eax
		call   _01d364_func

	_01fe12_jump:
		pop    %ebx
		ret    

_01fe14_switch:
		.long   _020027_case
		.long   _01ff38_case
		.long   _01ff69_case
		.long   _01ff9a_case
		.long   _01ffcb_case
		.long   _01fff9_case




_01fe2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ebp
		mov    0x000050(%eax),%dx
		dec    %edx
		mov    %dx,0x000050(%eax)
		test   %dx,%dx
		jge    _01fe4b_jump
		movw   $0x000000,0x000050(%eax)

	_01fe4b_jump:
		cmpb   $0x000003,_0ceef0_data
		jne    _020078_jump
		mov    _0cc1f0_data,%esi
		mov    0x000081(%ebp),%al
		movl   $0x000000,0x000024(%ebp)
		and    $0x0000fb,%al
		mov    _0cc1f4_data,%dx
		mov    %al,0x000081(%ebp)
		xor    %eax,%eax
		test   %dx,%dx
		jle    _02025a_jump

	_01fe85_jump:
		cmpw   $0x0000d3,0x000060(%esi)
		jne    _02005e_jump
		xor    %edi,%edi

	_01fe93_jump:
		lea    0x000004(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		movswl %di,%edx
		mov    %ebp,%eax
		call   _01d710_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		test   %di,%di
		jne    _01fee6_jump
		mov    %di,0x000040(%esi)
		mov    %di,0x000042(%esi)
		jmp    _01ff19_jump

	_01fee6_jump:
		mov    $0x000004,%eax
		mov    $0x000002,%edx
		call   _0690e0_func
		sub    %ax,%dx
		mov    %dx,0x000040(%esi)
		jne    _01ff04_jump
		movw   $0x000001,0x000040(%esi)

	_01ff04_jump:
		mov    $0x000003,%eax
		mov    $0xfffffffc,%edx
		call   _0690e0_func
		sub    %eax,%edx
		mov    %dx,0x000042(%esi)

	_01ff19_jump:
		movb   $0x000000,0x000071(%esi)
		movb   $0x000005,0x000072(%esi)
		cmp    $0x000005,%di
		ja     _020048_jump
		xor    %eax,%eax
		mov    %di,%ax
		jmp    *%cs:_01fe14_switch(,%eax,4)

	_01ff38_case:
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movb   $0x00002b,0x000069(%esi)
		movb   $0x000019,0x000068(%esi)
		mov    0x000081(%esi),%cl
		movb   $0x00001f,0x00006a(%esi)
		and    $0x0000f7,%cl
		mov    %cl,0x000081(%esi)
		jmp    _020048_jump

	_01ff69_case:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movb   $0x000011,0x000069(%esi)
		movb   $0x00000c,0x000068(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x000021,0x00006a(%esi)
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%esi)
		jmp    _020048_jump

	_01ff9a_case:
		mov    $0x00000b,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movb   $0x000007,0x000069(%esi)
		movb   $0x000007,0x000068(%esi)
		mov    0x000081(%esi),%bl
		movb   $0x000022,0x00006a(%esi)
		and    $0x0000f7,%bl
		mov    %bl,0x000081(%esi)
		jmp    _020048_jump

	_01ffcb_case:
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movb   $0x00001c,0x000069(%esi)
		movb   $0x000011,0x000068(%esi)
		mov    0x000081(%esi),%dh
		movb   $0x000020,0x00006a(%esi)
		and    $0x0000f7,%dh
		mov    %dh,0x000081(%esi)
		jmp    _020048_jump

	_01fff9_case:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movb   $0x000011,0x000069(%esi)
		movb   $0x00000c,0x000068(%esi)
		mov    0x000081(%esi),%dl
		movb   $0x000021,0x00006a(%esi)
		or     $0x000008,%dl
		mov    %dl,0x000081(%esi)
		jmp    _020048_jump

	_020027_case:
		mov    $0x000015,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%esi),%ch
		movb   $0x000025,0x00006a(%esi)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%esi)

	_020048_jump:
		inc    %edi
		add    $0x000084,%esi
		cmp    $0x000006,%di
		jge    _02025a_jump
		jmp    _01fe93_jump

	_02005e_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _01fe85_jump
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020078_jump:
		mov    0x00006c(%ebp),%dl
		cmp    $0x000007,%dl
		je     _02025a_jump
		cmp    $0x000006,%dl
		je     _02025a_jump
		cmp    $0x000003,%dl
		je     _02025a_jump
		lea    0x000004(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %ebp,%eax
		call   _01d710_func
		push   $0x000020
		mov    0x00000c(%esp),%ecx
		mov    0x000004(%esp),%esi
		mov    0x000010(%esp),%edi
		mov    _0ceef6_data,%eax
		push   $0x000020
		sar    $0x000010,%eax
		add    $0x000005,%ecx
		add    $0x000005,%esi
		sub    $0x00000a,%edi
		push   %eax
		mov    %cx,0x000014(%esp)
		mov    %si,0x00000c(%esp)
		mov    _0ceef4_data,%eax
		mov    %di,0x000018(%esp)
		sar    $0x000010,%eax
		mov    0x000016(%esp),%ebx
		push   %eax
		mov    0x000014(%esp),%eax
		mov    0x00000e(%esp),%edx
		sub    $0x00000a,%eax
		sar    $0x000010,%ebx
		mov    %ax,0x000014(%esp)
		sar    $0x000010,%edx
		mov    0x000012(%esp),%ecx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02015d_jump
		cmpb   $0x000000,_0ceef0_data
		jne    _02015d_jump
		mov    $0x000001,%cl
		mov    _0cef02_data,%dx
		movw   $0x000004,0x000056(%ebp)
		inc    %edx
		mov    %cl,_0ceef0_data
		mov    %dx,_0cef02_data
		cmp    $0x000006,%dx
		jl     _020154_jump
		mov    %edx,%ecx
		dec    %ecx
		mov    %cx,_0cef02_data

	_020154_jump:
		xor    %esi,%esi
		mov    %si,_0ceefe_data

	_02015d_jump:
		xor    %edx,%edx
		mov    0x00006a(%ebp),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000004(%ebp),%eax
		mov    0x00000a(%edx,%eax,1),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebp),%dl
		cmp    %eax,%edx
		jne    _0201bc_jump
		xor    %eax,%eax
		mov    0x00006d(%ebp),%al
		mov    0x00000c(%ebp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ebp),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _0201bc_jump
		mov    $0x000001,%al
		jmp    _0201be_jump

	_0201bc_jump:
		xor    %al,%al

	_0201be_jump:
		mov    0x00006c(%ebp),%ah
		cmp    $0x000004,%ah
		jb     _02025a_jump
		jbe    _0201db_jump
		cmp    $0x000005,%ah
		je     _020210_jump
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0201db_jump:
		test   %al,%al
		je     _02025a_jump
		mov    0x000056(%ebp),%dx
		inc    %edx
		mov    %dx,0x000056(%ebp)
		cmp    $0x000004,%dx
		jge    _020209_jump
		mov    $0x000005,%edx
		mov    %ebp,%eax
		call   _01d364_func
		mov    0x00003a(%ebp),%eax
		sar    $0x000010,%eax
		sub    $0x000055,%eax
		jmp    _020257_jump

	_020209_jump:
		mov    $0x000006,%edx
		jmp    _02024a_jump

	_020210_jump:
		test   %al,%al
		je     _02025a_jump
		mov    0x000056(%ebp),%di
		inc    %edi
		mov    %di,0x000056(%ebp)
		cmp    $0x000004,%di
		jge    _020245_jump
		mov    $0x000004,%edx
		mov    %ebp,%eax
		call   _01d364_func
		mov    0x00003a(%ebp),%eax
		sar    $0x000010,%eax
		add    $0x000047,%eax
		mov    %eax,0x000028(%ebp)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020245_jump:
		mov    $0x000007,%edx

	_02024a_jump:
		mov    %ebp,%eax
		call   _01d364_func
		mov    0x00003a(%ebp),%eax
		sar    $0x000010,%eax

	_020257_jump:
		mov    %eax,0x000028(%ebp)

	_02025a_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020264_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		cmpw   $0x000000,0x000042(%eax)
		jle    _0202bb_jump
		xor    %eax,%eax
		mov    0x00002c(%ebx),%edx
		mov    0x000069(%ebx),%al
		add    %edx,%eax
		cmp    $0x000108,%eax
		jle    _0202bb_jump
		mov    0x00003e(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,0x000040(%ebx)
		mov    0x000040(%ebx),%edx
		sar    $0x000010,%edx
		neg    %edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,0x000042(%ebx)
		test   %ax,%ax
		jne    _0202b1_jump
		movb   $0x0000ff,0x000072(%ebx)

	_0202b1_jump:
		mov    $0x000005,%al
		mov    0x000071(%ebx),%ah
		sub    %ah,%al
		mov    %al,0x000071(%ebx)

	_0202bb_jump:
		pop    %edx
		pop    %ebx
		ret    



_0202c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    $0x000054,%eax
		call   _06fa30_func
		mov    0x000028(%edx),%ebx
		movw   $0x00ffff,0x000040(%edx)
		add    $0x000014,%ebx
		mov    %edx,%eax
		mov    %ebx,0x000028(%edx)
		call   _07900c_func
		mov    0x000028(%edx),%ecx
		movw   $0x000001,0x000040(%edx)
		sub    $0x000028,%ecx
		mov    %edx,%eax
		mov    %ecx,0x000028(%edx)
		call   _07900c_func
		mov    0x000028(%edx),%esi
		add    $0x000014,%esi
		mov    %edx,%eax
		mov    %esi,0x000028(%edx)
		call   _076f4c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020314_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000032(%eax),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		mov    0x000050(%ecx),%ax
		cmp    $0x000002,%ax
		jb     _020340_jump
		jbe    _02035e_jump
		cmp    $0x000004,%ax
		je     _020390_jump
		jmp    _0203da_jump

	_020340_jump:
		test   %ax,%ax
		jne    _0203da_jump
		mov    $0x000003,%al
		mov    0x000071(%ecx),%bl
		movw   $0x00fffb,0x000042(%ecx)
		sub    %bl,%al
		mov    %al,0x000071(%ecx)
		jmp    _0203da_jump

	_02035e_jump:
		mov    $0x000003,%al
		mov    0x000071(%ecx),%dl
		movw   $0x00fffb,0x000042(%ecx)
		sub    %dl,%al
		mov    0x000081(%ecx),%dh
		mov    %al,0x000071(%ecx)
		test   $0x000008,%dh
		je     _020380_jump
		mov    $0xffffff7e,%eax
		jmp    _020385_jump

	_020380_jump:
		mov    $0x000019,%eax

	_020385_jump:
		add    0x000028(%ecx),%eax
		mov    %ax,_0cef0a_data
		jmp    _0203da_jump

	_020390_jump:
		mov    %ecx,%eax
		call   _0202c0_func
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000034(%ecx),%dx
		cmp    _0cdade_data,%dx
		jne    _0203da_jump
		movw   $0x00ffff,_0cdade_data
		mov    $0x000002,%ebx
		mov    $_0cda94_data,%eax
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d374_func

	_0203da_jump:
		mov    %ecx,%eax
		call   _0255d0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0203e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _020502_jump

	_020405_jump:
		cmpw   $0x00007a,0x000060(%ecx)
		jne    _0204f2_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0204f2_jump
		mov    0x000081(%ebx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		mov    _0cef04_data,%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		test   $0x000001,%al
		jne    _02044d_jump
		mov    0x000081(%ecx),%al
		or     $0x000008,%al
		mov    $0xffffffec,%edx
		mov    %al,0x000081(%ecx)
		jmp    _020461_jump

	_02044d_jump:
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    $0x000104,%edx
		mov    %ah,0x000081(%ecx)

	_020461_jump:
		mov    %ecx,%eax
		call   _05c74c_func
		movswl %dx,%eax
		movw   $0x00ffff,0x000046(%ecx)
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%ebx),%eax
		sub    $0x000014,%eax
		mov    %eax,0x00002c(%ecx)
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f304_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		mov    0x000081(%ecx),%dl
		movb   $0x000002,0x00006d(%ecx)
		and    $0x0000bf,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000081(%ecx),%dh
		movb   $0x000002,0x00006c(%ecx)
		test   $0x000008,%dh
		je     _0204cb_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		jmp    _0204d4_jump

	_0204cb_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_0204d4_jump:
		call   _05efb0_func
		mov    %ecx,%eax
		call   _01db8c_func
		cmpw   $0x000000,_095bac_data
		jne    _020502_jump
		movb   $0x000001,0x000076(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0204f2_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _020405_jump

	_020502_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020508_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,0x000004(%esp)
		mov    _0cc1f0_data,%esi
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _020811_jump

	_02052d_jump:
		cmpw   $0x000061,0x000060(%esi)
		jne    _020801_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _020801_jump
		cmpw   $0x000004,0x000004(%esp)
		jne    _020553_jump
		andb   $0x0000df,0x000081(%esi)
		jmp    _02055a_jump

	_020553_jump:
		orb    $0x000020,0x000081(%esi)

	_02055a_jump:
		cmpw   $0x000000,0x000004(%esp)
		sete   %al
		lea    0x000010(%esp),%ecx
		xor    %ah,%ah
		mov    0x000081(%esi),%bl
		mov    %eax,%edx
		and    $0x0000f7,%bl
		lea    0x000008(%esp),%eax
		add    $0x000008,%edx
		mov    %bl,0x000081(%esi)
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		movswl %dx,%edx
		mov    %edi,%eax
		call   _01d710_func
		mov    0x000004(%esp),%ebx
		cmp    $0x000001,%bx
		jne    _02062c_jump
		mov    -0x000002(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		mov    0x000081(%edi),%bl
		add    %eax,%edx
		test   $0x000008,%bl
		je     _0205d0_jump
		mov    $0x000040,%eax
		jmp    _0205d5_jump

	_0205d0_jump:
		mov    $0xffffffc0,%eax

	_0205d5_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000028,%eax
		mov    %eax,0x00002c(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _0205f7_jump
		mov    $0x00000c,%eax
		jmp    _0205fc_jump

	_0205f7_jump:
		mov    $0xfffffff4,%eax

	_0205fc_jump:
		movw   $0x000000,0x000042(%esi)
		mov    %ax,0x000040(%esi)
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,0x000081(%esi)
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _020780_jump

	_02062c_jump:
		test   %bx,%bx
		jne    _0206bc_jump
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		mov    0x000081(%edi),%ch
		add    %eax,%edx
		test   $0x000008,%ch
		je     _020660_jump
		mov    $0x000009,%eax
		jmp    _020665_jump

	_020660_jump:
		mov    $0xfffffff7,%eax

	_020665_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000028,%eax
		mov    %eax,0x00002c(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _020687_jump
		mov    $0x000002,%eax
		jmp    _02068c_jump

	_020687_jump:
		mov    $0xfffffffe,%eax

	_02068c_jump:
		movw   $0x00fffb,0x000042(%esi)
		mov    %ax,0x000040(%esi)
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _020780_jump

	_0206bc_jump:
		cmp    $0x000003,%bx
		jne    _0206f2_jump
		testb  $0x000008,0x000081(%edi)
		je     _0206d2_jump
		mov    $0x000078,%edx
		jmp    _0206d7_jump

	_0206d2_jump:
		mov    $0xffffffdc,%edx

	_0206d7_jump:
		mov    0x000028(%edi),%eax
		add    %edx,%eax
		mov    %eax,0x000028(%esi)
		mov    0x00002c(%edi),%eax
		sub    $0x0000b9,%eax
		movw   $0x000004,0x000042(%esi)
		jmp    _020777_jump

	_0206f2_jump:
		cmp    $0x00000a,%bx
		jge    _02071e_jump
		mov    _0cdabc_data,%eax
		mov    %eax,0x000028(%esi)
		cmp    $0x000028,%eax
		jge    _02070c_jump
		movl   $0x000028,0x000028(%esi)

	_02070c_jump:
		cmpl   $0x0000c8,0x000028(%esi)
		jle    _020769_jump
		movl   $0x0000c8,0x000028(%esi)
		jmp    _020769_jump

	_02071e_jump:
		testb  $0x000008,0x000081(%edi)
		je     _02074b_jump
		xor    %edx,%edx
		mov    _0ceefa_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    $0x0000f0,%edx
		add    %eax,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		jmp    _020769_jump

	_02074b_jump:
		xor    %edx,%edx
		mov    _0ceefa_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %edx,%eax
		add    %eax,%eax
		sub    $0x000014,%eax
		mov    %eax,0x000028(%esi)

	_020769_jump:
		mov    0x00002c(%edi),%eax
		sub    $0x0000c8,%eax
		movw   $0x000000,0x000042(%esi)

	_020777_jump:
		mov    %eax,0x00002c(%esi)
		movw   $0x000000,0x000040(%esi)

	_020780_jump:
		mov    0x000004(%esp),%ebx
		movw   $0x000026,0x000056(%esi)
		cmp    $0x000003,%bx
		je     _020796_jump
		movb   $0x00000a,0x000072(%esi)
		jmp    _02079a_jump

	_020796_jump:
		movb   $0x000007,0x000072(%esi)

	_02079a_jump:
		cmpw   $0x000000,0x000004(%esp)
		jne    _0207a6_jump
		movb   $0x000003,0x000072(%esi)

	_0207a6_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		movb   $0x000002,0x00006d(%esi)
		mov    %ebx,%edx
		movb   $0x000006,0x00006c(%esi)
		call   _05efb0_func
		mov    %esi,%eax
		call   _01db8c_func
		mov    0x000081(%esi),%al
		or     $0x000004,%al
		mov    0x000004(%esp),%edi
		mov    %al,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f304_func
		movb   $0x000000,0x000071(%esi)
		cmp    $0x00000a,%di
		jge    _0207f3_jump
		mov    %di,0x000050(%esi)
		jmp    _020811_jump

	_0207f3_jump:
		movw   $0x000004,0x000050(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_020801_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _02052d_jump

	_020811_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02081c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0208e6_jump

	_020837_jump:
		cmpw   $0x000061,0x000060(%ecx)
		jne    _0208d6_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0208d6_jump
		movl   $0xffffffd8,0x000028(%ecx)
		movl   $0x0000a0,0x00002c(%ecx)
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		mov    $0x000001,%ebx
		mov    0x000028(%ecx),%ax
		movw   $0x000026,0x000056(%ecx)
		add    $0x000019,%eax
		movb   $0x000003,0x000072(%ecx)
		mov    %ax,_0cef0a_data
		mov    0x000081(%ecx),%ah
		movb   $0x000002,0x00006d(%ecx)
		and    $0x0000f7,%ah
		mov    %ebx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movb   $0x000006,0x00006c(%ecx)
		call   _05efb0_func
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000024,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f304_func
		movb   $0x000000,0x000071(%ecx)
		movw   $0x000002,0x000050(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0208d6_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _020837_jump

	_0208e6_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0208ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		call   _01db8c_func
		movl   $0x000000,0x000024(%edx)
		mov    $0x00000a,%bl
		movw   $0x000000,0x000050(%edx)
		mov    $0x000001,%cl
		mov    0x000081(%edx),%ah
		movb   $0x00000a,0x000072(%edx)
		xor    %esi,%esi
		or     $0x000004,%ah
		mov    %bl,_0ceed9_data
		mov    %cl,_0ceefa_data
		mov    %si,_0cef06_data
		mov    %si,_0cec92_data
		xor    %ebx,%ebx
		mov    %ah,0x000081(%edx)
		mov    $0xffffffff,%eax
		mov    %bx,_0ceefc_data
		mov    %bx,_0cef02_data
		mov    %bx,_0ceefe_data
		mov    %bx,_0cef04_data
		mov    %bx,_0ceeec_data
		xor    %dl,%dl
		mov    %bx,_0ceef4_data
		mov    %dl,_0ceed6_data
		mov    %dl,_0ceed1_data
		mov    %ax,_0ceeee_data
		xor    %bh,%bh
		mov    $0x00270f,%edx
		mov    %bh,_0ceef0_data
		mov    %dx,_0cef0a_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020998_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpw   $0x000000,_0ceefc_data
		je     _020a08_jump
		call   _0202c0_func
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000034(%ecx),%bx
		cmp    _0cdade_data,%bx
		jne    _0209f4_jump
		mov    $0xffffffff,%esi
		mov    $0x000002,%ebx
		mov    $_0cda94_data,%eax
		mov    %si,_0cdade_data
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d374_func

	_0209f4_jump:
		xor    %edi,%edi
		mov    $0x00270f,%eax
		mov    %di,_0ceefc_data
		mov    %ax,_0cef0a_data

	_020a08_jump:
		cmpw   $0x000003,0x000050(%ecx)
		jne    _020a31_jump
		mov    0x000056(%ecx),%bx
		dec    %bx
		mov    %bx,0x000056(%ecx)
		jne    _020a31_jump
		mov    0x000081(%ecx),%dl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)

	_020a31_jump:
		mov    0x000040(%ecx),%di
		mov    $0x000014,%eax
		test   %di,%di
		jge    _020a44_jump
		mov    $0xffffffec,%eax

	_020a44_jump:
		xor    %edx,%edx
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%dl
		cwtl   
		add    %ebx,%edx
		add    %edx,%eax
		mov    0x00002c(%ecx),%edx
		mov    _0cda86_data,%ebx
		add    $0x000028,%edx
		sar    $0x000010,%ebx
		sar    $0x000004,%edx
		imul   %ebx,%edx
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _020bd2_jump
		mov    0x000050(%ecx),%ax
		test   %ax,%ax
		jbe    _020bb6_jump
		cmp    $0x000001,%ax
		jne    _020bd2_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020ac6_jump
		neg    %eax

	_020ac6_jump:
		cmp    $0x00000c,%eax
		jne    _020aed_jump
		cmpw   $0x000000,0x000040(%ecx)
		jle    _020ad9_jump
		mov    $0xfffffff3,%eax
		jmp    _020ade_jump

	_020ad9_jump:
		mov    $0x00000d,%eax

	_020ade_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		jmp    _020bd2_jump

	_020aed_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020af9_jump
		neg    %eax

	_020af9_jump:
		cmp    $0x00000d,%eax
		jne    _020b21_jump
		cmpw   $0x000000,0x000040(%ecx)
		jle    _020b0c_jump
		mov    $0xfffffff2,%eax
		jmp    _020b11_jump

	_020b0c_jump:
		mov    $0x00000e,%eax

	_020b11_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020b21_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020b2d_jump
		neg    %eax

	_020b2d_jump:
		cmp    $0x00000e,%eax
		jne    _020b55_jump
		cmpw   $0x000000,0x000040(%ecx)
		jle    _020b40_jump
		mov    $0xfffffff1,%eax
		jmp    _020b45_jump

	_020b40_jump:
		mov    $0x00000f,%eax

	_020b45_jump:
		movw   $0x000000,0x000042(%ecx)
		mov    %ax,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020b55_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _020b61_jump
		neg    %eax

	_020b61_jump:
		cmp    $0x00000f,%eax
		jne    _020bd2_jump
		mov    %ecx,%eax
		call   _0202c0_func
		mov    0x000081(%ecx),%bl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		mov    0x000034(%ecx),%dx
		cmp    _0cdade_data,%dx
		jne    _020bd2_jump
		movw   $0x00ffff,_0cdade_data
		mov    $0x000002,%ebx
		mov    $_0cda94_data,%eax
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020bb6_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000002,0x000050(%ecx)

	_020bd2_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020bd8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0cc1f0_data,%esi
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _020d2f_jump

	_020bfa_jump:
		cmpw   $0x000079,0x000060(%esi)
		jne    _020d1f_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _020d1f_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		movw   $0x000000,0x000042(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbw (%edx,%eax,8),%ax
		testb  $0x000008,0x000081(%esi)
		je     _020c5b_jump
		cwtl   
		jmp    _020c5e_jump

	_020c5b_jump:
		cwtl   
		neg    %eax

	_020c5e_jump:
		mov    %ax,0x000040(%esi)
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x00000a,%edx
		mov    %edi,%eax
		call   _01d710_func
		mov    0x000006(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    0x000081(%edi),%bl
		mov    %eax,%edx
		test   $0x000008,%bl
		je     _020cab_jump
		mov    $0x000010,%eax
		jmp    _020cb0_jump

	_020cab_jump:
		mov    $0xfffffff0,%eax

	_020cb0_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _05efb0_func
		mov    %esi,%eax
		call   _01db8c_func
		mov    0x000081(%esi),%bh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f304_func
		mov    %esi,%eax
		call   _076f4c_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020d1f_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _020bfa_jump

	_020d2f_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_020d38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0cc1f0_data,%esi
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _020f5b_jump

	_020d5a_jump:
		cmpw   $0x000087,0x000060(%esi)
		jne    _020f4b_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _020f4b_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		mov    0x000081(%esi),%dh
		movw   $0x000000,0x000042(%esi)
		test   $0x000008,%dh
		jne    _020daa_jump
		movw   $0x000007,0x000040(%esi)
		jmp    _020db0_jump

	_020daa_jump:
		movw   $0x00fff9,0x000040(%esi)

	_020db0_jump:
		lea    0x000004(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000010(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000003,%edx
		call   _01d710_func
		testb  $0x000008,0x000081(%edi)
		jne    _020ddc_jump
		xor    %ecx,%ecx
		mov    %cx,0x000008(%esp)

	_020ddc_jump:
		mov    0x00000a(%esp),%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%edx
		mov    0x000028(%esi),%ax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%esi)
		sub    $0x000008,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _05efb0_func
		mov    %esi,%eax
		call   _01db8c_func
		mov    0x000081(%esi),%bh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f304_func
		mov    0x000105(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,0x000105(%esi)
		mov    %cl,%ch
		add    $0x000084,%esi
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		mov    0x000081(%esi),%al
		movw   $0x000000,0x000042(%esi)
		test   $0x000008,%al
		jne    _020e92_jump
		movw   $0x000007,0x000040(%esi)
		jmp    _020e98_jump

	_020e92_jump:
		movw   $0x00fff9,0x000040(%esi)

	_020e98_jump:
		lea    0x000004(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000010(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		mov    $0x000002,%edx
		call   _01d710_func
		testb  $0x000008,0x000081(%edi)
		jne    _020ec4_jump
		xor    %edi,%edi
		mov    %di,0x000008(%esp)

	_020ec4_jump:
		mov    0x00000a(%esp),%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%edx
		mov    0x000028(%esi),%ax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%esi)
		sub    $0x000008,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _05efb0_func
		mov    %esi,%eax
		call   _01db8c_func
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f304_func
		mov    %esi,%eax
		call   _076f4c_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020f4b_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _020d5a_jump

	_020f5b_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_020f80_switch:
		.long   _020fc2_case
		.long   _020fdb_case
		.long   _020ff4_case
		.long   _02100e_case
		.long   _021028_case
		.long   _021041_case
		.long   _02105a_case
		.long   _021084_case




_020fa0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cef00_data,%ax
		cmp    $0x000007,%ax
		ja     _021099_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_020f80_switch(,%eax,4)

	_020fc2_case:
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x000001,_0ceed6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020fdb_case:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x000002,_0ceed6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_020ff4_case:
		mov    $0x000006,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000003,%ch
		call   _01d374_func
		mov    %ch,_0ceed6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02100e_case:
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000004,%cl
		call   _01d374_func
		mov    %cl,_0ceed6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021028_case:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x000005,_0ceed6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021041_case:
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x00000c,_0ceed6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02105a_case:
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d374_func
		movb   $0x00000b,_0ceed6_data
		mov    $0x000001,%dh
		movw   $0x000023,0x000056(%ecx)
		mov    %dh,_0ceefa_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_021084_case:
		mov    $0x000016,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x00000d,_0ceed6_data

	_021099_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0210a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ceefe_data,%cx
		mov    %eax,%edx
		inc    %ecx
		cmp    $0x000007,%cx
		jge    _0210df_jump
		mov    _0cef00_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		lea    0x000000(,%eax,4),%ebx
		movswl %cx,%eax
		mov    _095bae_data(%ebx,%eax,4),%ax
		mov    %ax,_0cef00_data
		jmp    _0210e8_jump

	_0210df_jump:
		movw   $0x0000ff,_0cef00_data

	_0210e8_jump:
		cmpw   $0x0000ff,_0cef00_data
		jne    _021115_jump
		mov    _0cef00_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		mov    _095bae_data(,%eax,4),%ax
		xor    %ecx,%ecx
		mov    %ax,_0cef00_data

	_021115_jump:
		mov    _0cef00_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		lea    0x000000(,%eax,4),%ebx
		movswl %cx,%eax
		mov    _095bb0_data(%ebx,%eax,4),%al
		mov    %al,_0ceed9_data
		mov    %edx,%eax
		mov    %cx,_0ceefe_data
		call   _020fa0_func
		mov    _0ceefe_data,%cx
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021158_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,_0ceed9_data
		je     _02118a_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _05efb0_func
		movb   $0x000006,_0ceed6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02118a_jump:
		mov    %ecx,%eax
		call   _0210a0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021198_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		movw   $0x000000,0x000042(%eax)
		mov    $0x000006,%edx
		movw   $0x000000,0x000040(%eax)
		call   _0255d0_func
		mov    %ebx,%eax
		call   _01d364_func
		mov    %ebx,%eax
		mov    $0x000001,%edx
		call   _053ac8_func
		mov    %dx,_0cec90_data
		pop    %edx
		pop    %ebx
		ret    

_0211d0_switch:
		.long   _021545_case
		.long   _0215b3_case
		.long   _021623_case
		.long   _021740_case
		.long   _0217b0_case
		.long   _021818_case
		.long   _02188d_case
		.long   _0218ba_case
		.long   _021970_case
		.long   _0219e8_case
		.long   _021a89_case
		.long   _021acb_case
		.long   _021b8a_case
		.long   _021c1b_case




_021208_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    $0x000001,%ah
		mov    _0cef06_data,%dx
		mov    %ah,_0ceead_data
		test   %dx,%dx
		je     _021254_jump
		mov    _0cef08_data,%bx
		dec    %ebx
		mov    %bx,_0cef08_data
		test   %bx,%bx
		jge    _021254_jump
		mov    $0x000032,%edi
		mov    %esi,%eax
		mov    %di,_0cef08_data
		call   _0203e8_func
		decw   _0cef06_data

	_021254_jump:
		mov    %esp,%eax
		mov    $_0ceef8_data,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $_0ceef6_data,%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x000028(%esi),%ax
		mov    %eax,0x000004(%esp)
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %eax,(%esp)
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _0212d7_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _0212d7_jump
		movb   $0x000001,_0ceed5_data
		jmp    _0212df_jump

	_0212d7_jump:
		xor    %dh,%dh
		mov    %dh,_0ceed5_data

	_0212df_jump:
		cmpb   $0x000002,_0ceef0_data
		jne    _02133f_jump
		cmpb   $0x000000,_0ceed5_data
		je     _02133f_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000077(%esi),%al
		mov    0x000076(%esi),%dl
		dec    %eax
		cmp    %eax,%edx
		jne    _021319_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		mov    $0x000007,%ch
		call   _05efb0_func
		mov    %ch,_0ceed6_data

	_021319_jump:
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0ceef2_data,%bl
		mov    _0ceef1_data,%dl
		call   _01d374_func
		movb   $0x000001,_0ceed9_data
		mov    _0ceef4_data,%al
		mov    %al,0x000070(%esi)

	_02133f_jump:
		cmpb   $0x000001,_0ceef0_data
		jne    _0213c8_jump
		mov    0x00006d(%esi),%al
		mov    $0x000009,%ebx
		mov    %al,_0ceef1_data
		mov    0x00006c(%esi),%al
		xor    %edx,%edx
		mov    %al,_0ceef2_data
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000002,%dl
		mov    0x000076(%esi),%bl
		xor    %eax,%eax
		mov    %dl,_0ceef0_data
		dec    %bl
		mov    0x000070(%esi),%al
		movw   $0x000000,0x000040(%esi)
		xor    %dh,%dh
		mov    %bl,0x000076(%esi)
		mov    %dh,_0ceed5_data
		mov    %ax,_0ceef4_data
		cmp    $0x000001,%bl
		jae    _0213c8_jump
		mov    $0x000003,%cl
		mov    $0x000014,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    %cl,_0ceef0_data
		call   _01d374_func
		mov    $0x0001a4,%edx
		movw   $0x000000,0x000040(%esi)
		mov    $0x000001,%ch
		mov    %dx,_0ceef4_data
		mov    %ch,_0ceeba_data

	_0213c8_jump:
		cmpb   $0x000003,_0ceef0_data
		jne    _02140f_jump
		mov    _0ceef4_data,%ax
		dec    %eax
		mov    %ax,_0ceef4_data
		cmp    $0x000001,%ax
		jge    _021ce7_jump
		movb   $0x000001,_0ceeb8_data
		mov    _0cec78_data,%ch
		mov    $0x0003e7,%ebx
		or     $0x000008,%ch
		mov    %bx,_0ceef4_data
		mov    %ch,_0cec78_data
		jmp    _021ce7_jump

	_02140f_jump:
		mov    0x000070(%esi),%al
		cmp    $0x000001,%al
		jb     _021425_jump
		jbe    _021434_jump
		cmp    $0x000002,%al
		je     _02152b_jump
		jmp    _021ccd_jump

	_021425_jump:
		test   %al,%al
		jne    _021ccd_jump
		andb   $0x0000f7,0x000081(%esi)

	_021434_jump:
		cmpb   $0x000001,0x000070(%esi)
		jne    _021441_jump
		orb    $0x000008,0x000081(%esi)

	_021441_jump:
		mov    %esi,%eax
		call   _053c34_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _02149d_jump
		mov    0x000081(%esi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    $0x000006,%edx
		mov    %bh,(%eax)
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000008,%cl
		call   _05efb0_func
		mov    %cl,_0ceed6_data

	_02149d_jump:
		cmpb   $0x000007,_0ceed6_data
		jne    _02151f_jump
		testb  $0x000008,0x000081(%esi)
		je     _0214ba_jump
		mov    $0x00000a,%eax
		jmp    _0214bf_jump

	_0214ba_jump:
		mov    $0xfffffff6,%eax

	_0214bf_jump:
		mov    _0cef08_data,%edx
		sar    $0x000010,%edx
		add    $0x000004,%edx
		add    %edx,%eax
		cmp    0x000028(%esi),%eax
		jle    _02151f_jump
		testb  $0x000008,0x000081(%esi)
		je     _0214e2_jump
		mov    $0x00000a,%eax
		jmp    _0214e7_jump

	_0214e2_jump:
		mov    $0xfffffff6,%eax

	_0214e7_jump:
		mov    _0cef08_data,%edx
		sar    $0x000010,%edx
		sub    $0x000004,%edx
		mov    0x000028(%esi),%ebx
		add    %edx,%eax
		cmp    %ebx,%eax
		jge    _02151f_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		movb   $0x000009,_0ceed6_data

	_02151f_jump:
		mov    %esi,%eax
		call   _0252c0_func
		jmp    _021ccd_jump

	_02152b_jump:
		mov    _0ceed6_data,%al
		cmp    $0x00000d,%al
		ja     _021ccd_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0211d0_switch(,%eax,4)

	_021545_case:
		cmpb   $0x000000,_0ceefa_data
		je     _021563_jump
		mov    $0x000001,%dl
		call   _02081c_func
		mov    %dl,_0ceed1_data
		xor    %dh,%dh
		mov    %dh,_0ceefa_data

	_021563_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _021ccd_jump
		cmpb   $0x000000,_0ceed1_data
		je     _021ccd_jump
		movb   $0x000000,0x00006b(%esi)
		mov    _095bb0_data,%al
		xor    %ecx,%ecx
		mov    %al,_0ceed9_data
		mov    _095bae_data,%ax
		mov    %cx,_0cef02_data
		mov    %ax,_0cef00_data
		mov    %esi,%eax
		mov    %cx,_0ceefe_data
		call   _020fa0_func
		jmp    _021ccd_jump

	_0215b3_case:
		mov    0x00006c(%esi),%bh
		cmp    $0x000004,%bh
		jne    _02160a_jump
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _02160a_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %bh,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _02160a_jump
		cmpw   $0x000000,_0cec92_data
		jne    _02160a_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		mov    %bx,_0cec92_data
		call   _020508_func

	_02160a_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _021ccd_jump
		mov    %esi,%eax
		call   _021158_func
		jmp    _021ccd_jump

	_021623_case:
		cmpb   $0x00000b,0x00006c(%esi)
		jne    _021663_jump
		cmpb   $0x000017,0x00006b(%esi)
		jne    _021663_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _021663_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _020508_func

	_021663_jump:
		cmpb   $0x000003,0x00006c(%esi)
		jne    _0216e9_jump
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _0216e9_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _0216e9_jump
		cmpw   $0x000000,_0cec92_data
		jne    _0216e9_jump
		mov    $0x000001,%edi
		mov    $0x000003,%edx
		mov    %esi,%eax
		mov    %di,_0cec92_data
		call   _020508_func
		cmpw   $0x000000,_095bac_data
		jne    _0216d6_jump
		mov    $0x000003,%edx
		jmp    _0216db_jump

	_0216d6_jump:
		mov    $0x000001,%edx

	_0216db_jump:
		xor    %eax,%eax
		mov    _0ceed9_data,%al
		add    %edx,%eax
		mov    %al,_0ceed9_data

	_0216e9_jump:
		cmpb   $0x00000a,0x00006c(%esi)
		jne    _021716_jump
		cmpb   $0x000000,_0ceed5_data
		je     _021716_jump
		mov    _0ceed9_data,%al
		dec    %al
		mov    %al,_0ceed9_data
		je     _021716_jump
		mov    $0x00000a,%edx
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01d364_func

	_021716_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x00000b,%dl
		jne    _021ccd_jump
		cmpb   $0x000000,_0ceed5_data
		je     _021ccd_jump
		mov    %dl,_0ceed6_data
		movw   $0x000023,0x000056(%esi)
		jmp    _021ccd_jump

	_021740_case:
		mov    0x00006c(%esi),%bl
		cmp    $0x000006,%bl
		jne    _021797_jump
		cmpb   $0x000040,0x00006b(%esi)
		jne    _021797_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %bl,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _021797_jump
		cmpw   $0x000000,_095bac_data
		setne  %al
		and    $0x0000ff,%eax
		xor    %ebx,%ebx
		add    $0x000003,%eax
		mov    %bx,_0cef08_data
		mov    %ax,_0cef06_data

	_021797_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _021ccd_jump
		mov    %esi,%eax
		call   _021158_func
		jmp    _021ccd_jump

	_0217b0_case:
		cmpb   $0x000007,0x00006c(%esi)
		jne    _0217ff_jump
		cmpb   $0x00002c,0x00006b(%esi)
		jne    _0217ff_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _0217ff_jump
		mov    %esi,%eax
		call   _020d38_func
		mov    0x000032(%esi),%edx
		mov    $0x000072,%eax
		sar    $0x000010,%edx
		call   _06f35c_func

	_0217ff_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _021ccd_jump
		mov    %esi,%eax
		call   _021158_func
		jmp    _021ccd_jump

	_021818_case:
		cmpb   $0x000002,0x00006c(%esi)
		jne    _021863_jump
		cmpb   $0x000015,0x00006b(%esi)
		jne    _021863_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _021863_jump
		mov    %esi,%eax
		call   _020bd8_func
		mov    0x000032(%esi),%edx
		mov    $0x000072,%eax
		sar    $0x000010,%edx
		call   _06f35c_func

	_021863_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _021ccd_jump
		mov    $0x000001,%edx
		mov    $0x00000a,%ch
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01d364_func
		mov    %ch,_0ceed6_data
		jmp    _021ccd_jump

	_02188d_case:
		cmpb   $0x000000,_0ceed5_data
		je     _021ccd_jump
		mov    _0ceed9_data,%ah
		dec    %ah
		mov    %ah,_0ceed9_data
		jne    _021ccd_jump
		mov    %esi,%eax
		call   _0210a0_func
		jmp    _021ccd_jump

	_0218ba_case:
		cmpb   $0x000008,0x00006c(%esi)
		jne    _0218fc_jump
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _0218fc_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _0218fc_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _020508_func
		jmp    _021ccd_jump

	_0218fc_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _021ccd_jump
		mov    _0ceed9_data,%bh
		dec    %bh
		mov    %bh,_0ceed9_data
		jne    _02195f_jump
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _021949_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _05efb0_func
		jmp    _021ccd_jump

	_021949_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _05efb0_func
		jmp    _021ccd_jump

	_02195f_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d364_func
		jmp    _021ccd_jump

	_021970_case:
		cmpb   $0x000000,_0ceed5_data
		je     _021ccd_jump
		cmpb   $0x000009,0x00006c(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _021ccd_jump
		cmpb   $0x000000,_0ceefa_data
		jne    _0219da_jump
		mov    _0cef00_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		xor    %edi,%edi
		mov    _095bb0_data(,%eax,4),%dl
		mov    _095bae_data(,%eax,4),%ax
		mov    %di,_0ceefe_data
		mov    %ax,_0cef00_data
		mov    %esi,%eax
		mov    %dl,_0ceed9_data
		call   _020fa0_func
		jmp    _021ccd_jump

	_0219da_jump:
		mov    %esi,%eax
		call   _0210a0_func
		xor    %al,%al
		jmp    _021cc8_jump

	_0219e8_case:
		cmpb   $0x000014,0x00006b(%esi)
		jne    _021a2d_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _021a2d_jump
		cmpb   $0x000009,0x00006c(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _021a2d_jump
		movw   $0x000001,_0ceefc_data

	_021a2d_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _021ccd_jump
		cmpb   $0x000002,_0ceef0_data
		je     _021ccd_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _021a6a_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		jmp    _021a74_jump

	_021a6a_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx

	_021a74_jump:
		mov    %esi,%eax
		call   _05efb0_func
		xor    %esi,%esi
		mov    %si,_0ceefc_data
		jmp    _021ccd_jump

	_021a89_case:
		cmpb   $0x000000,_0ceed5_data
		je     _021ccd_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		movb   $0x000000,0x00006b(%esi)
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _021949_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _05efb0_func
		jmp    _021ccd_jump

	_021acb_case:
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%al
		jb     _021ae1_jump
		jbe    _021ae9_jump
		cmp    $0x000006,%al
		je     _021b4c_jump
		jmp    _021ccd_jump

	_021ae1_jump:
		test   %al,%al
		jne    _021ccd_jump

	_021ae9_jump:
		mov    0x000056(%esi),%dx
		dec    %edx
		mov    %dx,0x000056(%esi)
		cmp    $0x000001,%dx
		jle    _021b22_jump
		movw   $0x00fff8,0x000042(%esi)
		mov    0x000081(%esi),%dh
		movb   $0x000000,0x000071(%esi)
		test   $0x000008,%dh
		je     _021b14_jump
		mov    $0x000004,%eax
		jmp    _021b19_jump

	_021b14_jump:
		mov    $0xfffffffc,%eax

	_021b19_jump:
		mov    %ax,0x000040(%esi)
		jmp    _021ccd_jump

	_021b22_jump:
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _01d364_func
		testb  $0x000008,0x000081(%esi)
		je     _021b3e_jump
		mov    $0x000002,%eax
		jmp    _021b43_jump

	_021b3e_jump:
		mov    $0xfffffffe,%eax

	_021b43_jump:
		mov    %ax,0x000040(%esi)
		jmp    _021ccd_jump

	_021b4c_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _021ccd_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _021949_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _05efb0_func
		jmp    _021ccd_jump

	_021b8a_case:
		cmpb   $0x000004,0x00006c(%esi)
		jne    _021bed_jump
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _021bed_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _021bed_jump
		cmpw   $0x000000,_0cec92_data
		jne    _021bed_jump
		movw   $0x000001,_0cec92_data
		xor    %eax,%eax
		mov    _0ceefa_data,%al
		add    $0x00000a,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _020508_func
		incb   _0ceefa_data

	_021bed_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _021ccd_jump
		cmpb   $0x000003,_0ceefa_data
		jne    _021ccd_jump
		xor    %ch,%ch
		mov    %esi,%eax
		mov    %ch,_0ceefa_data
		call   _021158_func
		jmp    _021ccd_jump

	_021c1b_case:
		cmpb   $0x000016,0x00006c(%esi)
		jne    _021ccd_jump
		cmpb   $0x00003f,0x00006b(%esi)
		jne    _021c5f_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _021c5f_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _020508_func

	_021c5f_jump:
		cmpb   $0x00000e,0x00006b(%esi)
		jne    _021caf_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _021caf_jump
		cmpw   $0x000000,_0cec92_data
		jne    _021caf_jump
		mov    $0x000001,%ecx
		mov    $0x000003,%edx
		mov    %esi,%eax
		mov    %cx,_0cec92_data
		call   _020508_func

	_021caf_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _021ccd_jump
		mov    $0x00000b,%ch
		mov    $0x000001,%al
		movw   $0x000023,0x000056(%esi)
		mov    %ch,_0ceed6_data

	_021cc8_jump:
		mov    %al,_0ceefa_data

	_021ccd_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _021ce7_jump
		cmpb   $0x000002,_0ceef0_data
		jne    _021ce7_jump
		xor    %bh,%bh
		mov    %bh,_0ceef0_data

	_021ce7_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_021cf0_func:
		push   %ebx
		mov    %eax,%ebx
		cmp    $0x000009,%dx
		jne    _021d17_jump
		mov    $0x000008,%edx
		call   _01d364_func
		mov    $0x000007,%ah
		mov    $0x000002,%dl
		movb   $0x000000,0x00006b(%ebx)
		mov    %ah,_0ceed6_data
		mov    %dl,_0ceed9_data

	_021d17_jump:
		pop    %ebx
		ret    

_021d1c_switch:
		.long   _021f43_case
		.long   _022009_case
		.long   _022096_case
		.long   _022133_case
		.long   _02234d_case
		.long   _0224df_case




_021d34_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		movzbw 0x000068(%eax),%di
		mov    0x000028(%eax),%dx
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000074(%esi),%al
		add    %edx,%edi
		add    %ebx,%eax
		xor    %edx,%edx
		add    $0x000040,%eax
		mov    0x00006a(%esi),%dl
		mov    %ax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _021db4_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _021db4_jump
		movb   $0x000001,_0ceed5_data
		jmp    _021dbc_jump

	_021db4_jump:
		xor    %dh,%dh
		mov    %dh,_0ceed5_data

	_021dbc_jump:
		cmpb   $0x000002,_0ceed6_data
		jae    _021e33_jump
		cmpb   $0x000002,0x00006d(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _021e33_jump
		mov    _0cec9a_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		mov    $0x000010,%ecx
		sub    %eax,%edx
		mov    $0xfffffff0,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _021dfc_jump
		cmp    %ecx,%eax
		jg     _021dfc_jump
		mov    $0x000001,%eax
		jmp    _021dfe_jump

	_021dfc_jump:
		xor    %eax,%eax

	_021dfe_jump:
		test   %eax,%eax
		je     _021e33_jump
		mov    -0x000002(%esp),%eax
		mov    _0cec9c_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    $0x000020,%eax
		cmp    %eax,%edx
		jge    _021e33_jump
		mov    $0x000010,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)

	_021e33_jump:
		mov    0x00006d(%esi),%ch
		cmp    $0x000001,%ch
		jne    _021e84_jump
		cmpb   $0x000000,_0ceed6_data
		jne    _021e4a_jump
		mov    %ch,_0ceed6_data

	_021e4a_jump:
		mov    %esi,%eax
		call   _053c34_func
		cmpb   $0x000004,_0ceed6_data
		jae    _021e61_jump
		mov    %esi,%eax
		call   _0252c0_func

	_021e61_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _021e84_jump
		xor    %eax,%eax
		mov    _0ceeea_data,%edx
		mov    0x00006c(%esi),%al
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		je     _021e84_jump
		mov    %esi,%eax
		call   _01fd50_func

	_021e84_jump:
		cmpw   $0x000008,_0ceeee_data
		jge    _021f1d_jump
		mov    _0ceed6_data,%bl
		test   %bl,%bl
		je     _021f1d_jump
		cmp    $0x000005,%bl
		je     _021f1d_jump
		mov    _0cecb8_data,%ax
		cmp    _0cecd8_data,%ax
		jne    _021ed1_jump
		mov    _0cecfe_data,%eax
		movswl %di,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _021ec9_jump
		mov    %ebx,%eax

	_021ec9_jump:
		mov    %ax,_0cecb8_data
		jmp    _021edf_jump

	_021ed1_jump:
		cmp    %ax,%di
		jle    _021edf_jump
		movw   $0x000001,_0ceef4_data

	_021edf_jump:
		cmpw   $0x000000,_0ceef4_data
		je     _021f29_jump
		cmpb   $0x000001,0x00006d(%esi)
		jne    _021f07_jump
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    _0cecb8_data,%bx
		inc    %eax
		add    %eax,%ebx
		mov    %bx,_0cecb8_data
		jmp    _021f29_jump

	_021f07_jump:
		mov    _0cecb8_data,%dx
		mov    0x000040(%esi),%ax
		add    %eax,%edx
		mov    %dx,_0cecb8_data
		jmp    _021f29_jump

	_021f1d_jump:
		mov    _0cecd8_data,%ax
		mov    %ax,_0cecb8_data

	_021f29_jump:
		mov    _0ceed6_data,%al
		cmp    $0x000005,%al
		ja     _022710_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_021d1c_switch(,%eax,4)

	_021f43_case:
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000002,_092224_data(%eax)
		jne    _021f55_jump
		mov    $0x00003c,%al
		jmp    _021f57_jump

	_021f55_jump:
		mov    $0x000028,%al

	_021f57_jump:
		xor    %edx,%edx
		mov    0x000062(%esi),%dl
		testb  $0x000002,_092224_data(%edx)
		jne    _021fc1_jump
		xor    %edx,%edx
		movswl %di,%ebx
		mov    %al,%dl
		mov    _0cec9a_data,%eax
		add    %ebx,%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jle    _022710_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _022710_jump
		cmpw   $0x000000,_0ceeec_data
		je     _022710_jump
		mov    0x000081(%esi),%bh
		mov    $0x000002,%edx
		or     $0x000008,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		mov    $0x000001,%ebx
		call   _01d374_func
		movw   $0x000002,0x000042(%esi)
		jmp    _022710_jump

	_021fc1_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _022710_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _022710_jump
		movswl %di,%edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		mov    _0cec9a_data,%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jle    _022710_jump
		mov    $0x000001,%dh
		mov    %esi,%eax
		mov    %dh,_0ceed6_data
		call   _01fd50_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022009_case:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _022710_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		lea    0x000008(%eax),%edx
		mov    _0cda86_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		add    %ecx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cda90_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _022710_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fff8,0x000042(%esi)
		movw   $0x000003,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022096_case:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _022710_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		mov    _0cda86_data,%ebx
		add    $0x000008,%eax
		sar    $0x000010,%ebx
		sar    $0x000004,%eax
		imul   %eax,%ebx
		mov    0x000028(%esi),%edx
		xor    %eax,%eax
		sub    $0x000008,%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cda90_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _022710_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    $0xffffffff,%ecx
		movw   $0x000000,0x000042(%esi)
		mov    %cx,_0ceeee_data
		movw   $0x000000,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022133_case:
		mov    _0cecb6_data,%eax
		mov    $0x0015cc,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _022146_jump
		mov    %ebx,%eax

	_022146_jump:
		mov    _0cec9a_data,%edx
		mov    %ax,_0cecb8_data
		movswl %di,%eax
		sar    $0x000010,%edx
		add    $0x000020,%eax
		cmp    %eax,%edx
		jle    _02220a_jump
		mov    _0ceeec_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02220a_jump
		mov    (%esp),%edx
		cmp    _0cec9e_data,%dx
		jge    _02220a_jump
		mov    _0ceeea_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0221a3_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01fd50_func
		mov    %bx,_0ceeee_data
		jmp    _02220a_jump

	_0221a3_jump:
		mov    0x000050(%esi),%bx
		cmp    $0x0000c8,%bx
		jge    _0221de_jump
		mov    %ebx,%ecx
		inc    %ecx
		mov    %cx,0x000050(%esi)
		cmp    $0x0000c8,%cx
		jne    _0221de_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		mov    %dx,_0ceeec_data
		call   _01fd50_func
		mov    %bx,_0ceeee_data
		movw   $0x0000ff,0x000050(%esi)

	_0221de_jump:
		mov    _0ced00_data,%ax
		mov    %ax,_0cecb8_data
		cmp    %ax,%di
		jle    _02220a_jump
		mov    _0cdad2_data,%ebx
		mov    $0x000001,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _022203_jump
		mov    %ebx,%eax

	_022203_jump:
		add    %ax,_0cecb8_data

	_02220a_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _022226_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _022226_jump
		cmpb   $0x000010,0x00006c(%esi)
		jne    _022226_jump
		mov    %esi,%eax
		call   _01fd50_func

	_022226_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _022242_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _022242_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _022242_jump
		mov    %esi,%eax
		call   _01fd50_func

	_022242_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _022710_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%al
		add    %ebp,%eax
		mov    _0cda86_data,%ebx
		add    $0x000008,%eax
		sar    $0x000010,%ebx
		sar    $0x000004,%eax
		imul   %eax,%ebx
		mov    0x000028(%esi),%edx
		xor    %eax,%eax
		sub    $0x000008,%edx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cda90_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _0222c5_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movw   $0x00fffa,0x000042(%esi)
		mov    %esi,%eax
		movw   $0x000003,0x000040(%esi)
		call   _01d374_func
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)

	_0222c5_jump:
		cmpb   $0x000002,0x00006d(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _022710_jump
		mov    _0cec9a_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		mov    $0x000010,%ecx
		sub    %eax,%edx
		mov    $0xfffffff0,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _022300_jump
		cmp    %ecx,%eax
		jg     _022300_jump
		mov    $0x000001,%eax
		jmp    _022302_jump

	_022300_jump:
		xor    %eax,%eax

	_022302_jump:
		test   %eax,%eax
		je     _022710_jump
		mov    -0x000002(%esp),%edx
		mov    _0cec9c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    $0x000020,%edx
		cmp    %edx,%eax
		jge    _022327_jump
		mov    $0x000010,%ebx
		jmp    _02232c_jump

	_022327_jump:
		mov    $0x000001,%ebx

	_02232c_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000042(%esi)
		mov    0x000042(%esi),%ax
		mov    %ax,0x000040(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02234d_case:
		mov    _0cecb6_data,%ax
		cmp    _0ceef8_data,%ax
		jle    _022366_jump
		mov    %eax,%ecx
		dec    %ecx
		mov    %cx,_0cecb6_data

	_022366_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _0223eb_jump
		mov    0x00006d(%esi),%ah
		cmp    $0x000002,%ah
		jne    _022395_jump
		cmp    0x00006c(%esi),%ah
		jne    _022395_jump
		mov    $0x000001,%ecx
		mov    %esi,%eax
		mov    %cx,_0ceeec_data
		call   _01fd50_func
		jmp    _0223eb_jump

	_022395_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0223eb_jump
		cmpb   $0x000005,0x00006c(%esi)
		jne    _0223eb_jump
		mov    _0ceef6_data,%ax
		inc    %eax
		mov    %ax,_0ceef6_data
		cmp    $0x000003,%ax
		jge    _0223c9_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %bx,_0ceeec_data
		call   _01fd50_func
		jmp    _0223eb_jump

	_0223c9_jump:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000005,%bh
		mov    _0cecea_data,%ax
		mov    %bh,_0ceed6_data
		mov    %ax,_0ceef8_data

	_0223eb_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _0224ad_jump
		testb  $0x000008,0x000081(%esi)
		je     _022405_jump
		mov    $0x000010,%eax
		jmp    _02240a_jump

	_022405_jump:
		mov    $0xfffffff0,%eax

	_02240a_jump:
		mov    0x000028(%esi),%ebx
		mov    0x00002c(%esi),%ecx
		xor    %edx,%edx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%esi),%dl
		mov    0x000069(%esi),%al
		add    %edx,%ebx
		add    %ecx,%eax
		mov    _0cda86_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ebx
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _0224ad_jump
		mov    0x000081(%esi),%al
		movw   $0x000000,0x000042(%esi)
		shl    $0x000004,%al
		movw   $0x000000,0x000040(%esi)
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,0x000081(%esi)
		or     %al,%bl
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		mov    $0x000005,%ebx
		call   _01d374_func

	_0224ad_jump:
		mov    _0cec9e_data,%eax
		mov    _0cec9a_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %di,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _0224cf_jump
		neg    %eax

	_0224cf_jump:
		cmp    $0x0000fa,%eax
		jle    _022710_jump
		jmp    _0226d4_jump

	_0224df_case:
		mov    _0ceeee_data,%cx
		test   %cx,%cx
		jge    _022515_jump
		mov    %ecx,%eax
		inc    %ax
		mov    %ax,_0ceeee_data
		jne    _0224ff_jump
		mov    _0cecca_data,%ax
		jmp    _02250f_jump

	_0224ff_jump:
		xor    %edx,%edx
		mov    _0ceef8_data,%ax
		mov    _0cee42_data,%dl
		sub    %edx,%eax

	_02250f_jump:
		mov    %ax,_0cecb6_data

	_022515_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _02253d_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02253d_jump
		cmpb   $0x000005,0x00006c(%esi)
		jne    _02253d_jump
		mov    $0x000003,%ebx
		mov    %esi,%eax
		mov    %bx,_0ceeec_data
		call   _01fd50_func

	_02253d_jump:
		mov    0x00006d(%esi),%dl
		test   %dl,%dl
		jne    _02259b_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _02259b_jump
		cmpb   $0x000000,_0ceed5_data
		je     _022565_jump
		movw   $0x000002,_0ceeec_data
		mov    %esi,%eax
		call   _01fd50_func
		jmp    _02259b_jump

	_022565_jump:
		cmpb   $0x000015,0x00006b(%esi)
		jne    _02259b_jump
		xor    %eax,%eax
		mov    %dl,%al
		shl    $0x000002,%eax
		mov    0x00000c(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _02259b_jump
		movw   $0x00ffe2,_0ceeee_data

	_02259b_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _0226ab_jump
		testb  $0x000008,0x000081(%esi)
		je     _0225b5_jump
		mov    $0x000010,%eax
		jmp    _0225ba_jump

	_0225b5_jump:
		mov    $0xfffffff0,%eax

	_0225ba_jump:
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		lea    (%eax,%edx,1),%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		add    $0x000008,%eax
		mov    _0cda86_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		imul   %edx,%eax
		sar    $0x000004,%ebx
		add    %ebx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _0226ab_jump
		cmpw   $0x000003,_0ceeec_data
		jne    _022659_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movw   $0x00fffe,0x000042(%esi)
		movw   $0x000004,0x000040(%esi)
		mov    _0cecca_data,%ax
		movb   $0x0000ff,0x000072(%esi)
		mov    %ax,_0cecb6_data
		mov    _0cecd8_data,%ax
		movb   $0x000000,0x000071(%esi)
		mov    %ax,_0cecb8_data
		jmp    _0226ab_jump

	_022659_jump:
		mov    0x000081(%esi),%al
		movw   $0x000000,0x000042(%esi)
		shl    $0x000004,%al
		movw   $0x000000,0x000040(%esi)
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,0x000081(%esi)
		or     %al,%bl
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		mov    $0x000005,%ebx
		call   _01d374_func

	_0226ab_jump:
		mov    _0cec9e_data,%eax
		mov    _0cec9a_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		movswl %di,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _0226cd_jump
		neg    %eax

	_0226cd_jump:
		cmp    $0x000190,%eax
		jle    _022710_jump

	_0226d4_jump:
		mov    _0cecca_data,%ax
		mov    0x000081(%esi),%cl
		xor    %bh,%bh
		movl   $0x000000,0x000024(%esi)
		mov    %bh,_0ceedb_data
		and    $0x0000fb,%cl
		mov    %bh,_0ceed6_data
		mov    %ax,_0cecb6_data
		mov    _0cecd8_data,%ax
		mov    %cl,0x000081(%esi)
		mov    %ax,_0cecb8_data

	_022710_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02271c_func:
		mov    0x000076(%eax),%al
		xor    %ah,%ah
		mov    %ax,_0ceeec_data
		ret    

_022728_switch:
		.long   _022775_case
		.long   _022787_case
		.long   _0227a6_case
		.long   _0227db_case




_022738_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpw   $0x000001,0x000042(%eax)
		jle    _022845_jump
		movw   $0x000000,0x000042(%eax)
		movw   $0x000000,0x000040(%eax)
		call   _0255d0_func
		mov    _0ceed6_data,%al
		cmp    $0x000003,%al
		ja     _022845_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_022728_switch(,%eax,4)

	_022775_case:
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d364_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022787_case:
		mov    %ebx,%eax
		mov    $0x000002,%dh
		call   _01fd50_func
		mov    _0ceeec_data,%ax
		mov    %dh,_0ceed6_data
		mov    %ax,0x000040(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0227a6_case:
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d364_func
		mov    $0x000003,%dl
		mov    $0xffffffff,%ecx
		mov    %dl,_0ceed6_data
		mov    0x000028(%ebx),%edx
		movw   $0x000000,0x000050(%ebx)
		sub    $0x000020,%edx
		mov    %cx,_0ceeec_data
		mov    %edx,0x000028(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0227db_case:
		mov    $0x000002,%edx
		mov    $0x0002b3,%esi
		movb   $0x000005,0x000072(%ebx)
		mov    _0ceeee_data,%cx
		movb   $0x000000,0x000071(%ebx)
		mov    %ebx,%eax
		movw   $0x000002,0x000040(%ebx)
		inc    %ecx
		xor    %edi,%edi
		mov    %cx,_0ceeee_data
		call   _01d364_func
		mov    _0cecea_data,%ax
		mov    %si,_0ceef8_data
		mov    %di,_0ceef6_data
		movw   $0x000000,0x000040(%ebx)
		mov    %ax,_0cecb6_data
		cmp    %si,%ax
		jge    _022837_jump
		mov    %si,_0cecb6_data

	_022837_jump:
		mov    $0x000004,%ah
		movw   $0x000000,0x000042(%ebx)
		mov    %ah,_0ceed6_data

	_022845_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02284c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006a(%eax),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jne    _0228a8_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _0228a8_jump
		movb   $0x000001,_0ceed5_data
		jmp    _0228b0_jump

	_0228a8_jump:
		xor    %dh,%dh
		mov    %dh,_0ceed5_data

	_0228b0_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _0228e7_jump
		mov    %ecx,%eax
		call   _053c34_func
		mov    %ecx,%eax
		call   _0252c0_func
		cmpb   $0x000000,_0ceed5_data
		je     _0228e7_jump
		xor    %eax,%eax
		mov    _0ceeea_data,%edx
		mov    0x00006c(%ecx),%al
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		je     _0228e7_jump
		mov    %ecx,%eax
		call   _01fd50_func

	_0228e7_jump:
		mov    _0ceed6_data,%al
		test   %al,%al
		jbe    _0228fd_jump
		cmp    $0x000001,%al
		je     _0229bf_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0228fd_jump:
		andb   $0x0000f7,0x000081(%ecx)
		cmpb   $0x000002,0x00006d(%ecx)
		je     _022911_jump
		mov    %ecx,%eax
		call   _0252c0_func

	_022911_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _022933_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _022933_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		mov    %dx,_0ceeec_data
		call   _01fd50_func

	_022933_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _022a34_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%esi
		mov    0x000069(%ecx),%al
		add    %esi,%eax
		mov    _0cda86_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		mov    0x000028(%ecx),%ebx
		xor    %edx,%edx
		sub    $0x000008,%ebx
		mov    0x000068(%ecx),%dl
		add    %ebx,%edx
		sar    $0x000004,%edx
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cda90_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _022a34_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d374_func
		movb   $0x000005,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		movw   $0x00fffe,0x000040(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0229bf_jump:
		cmp    0x00006d(%ecx),%al
		jne    _022a34_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %eax,%edx
		add    $0x000008,%edx
		mov    _0cda86_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _022a34_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000042(%ecx)
		mov    $0x000002,%dh
		movw   $0x000000,0x000040(%ecx)
		mov    %dh,_0ceed6_data

	_022a34_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022a3c_func:
		push   %edx
		mov    %eax,%edx
		cmpw   $0x000001,0x000042(%eax)
		jle    _022a6e_jump
		movw   $0x000000,0x000042(%eax)
		movw   $0x000000,0x000040(%eax)
		call   _0252c0_func
		mov    _0ceed6_data,%al
		test   %al,%al
		jne    _022a6e_jump
		mov    %edx,%eax
		call   _01fd50_func
		movb   $0x000001,_0ceed6_data

	_022a6e_jump:
		pop    %edx
		ret    



_022a70_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x000081(%eax),%ah
		xor    %edx,%edx
		or     $0x000008,%ah
		mov    0x00006a(%ebx),%dl
		mov    %ah,0x000081(%ebx)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ebx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ebx),%dl
		cmp    %eax,%edx
		jne    _022ae1_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		lea    0x000000(,%eax,8),%ecx
		mov    (%edx),%eax
		mov    0x000005(%ecx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _022ae1_jump
		movb   $0x000001,_0ceed5_data
		jmp    _022ae9_jump

	_022ae1_jump:
		xor    %dh,%dh
		mov    %dh,_0ceed5_data

	_022ae9_jump:
		mov    0x00006d(%ebx),%ch
		test   %ch,%ch
		jne    _022b45_jump
		cmpb   $0x000007,0x00006c(%ebx)
		jne    _022b2a_jump
		cmpb   $0x00002c,0x00006b(%ebx)
		jne    _022b2a_jump
		xor    %eax,%eax
		mov    %ch,%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ebx),%dl
		mov    0x000005(%eax,%edx,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _022b2a_jump
		mov    %ebx,%eax
		call   _020d38_func

	_022b2a_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _022b45_jump
		cmpb   $0x000000,0x00006c(%ebx)
		jne    _022b45_jump
		mov    $0x000007,%edx
		mov    %ebx,%eax
		call   _01d364_func

	_022b45_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022b4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		test   %al,%al
		jbe    _022b60_jump
		cmp    $0x000001,%al
		je     _022b67_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022b60_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_022b67_jump:
		cmpb   $0x000001,0x000070(%ecx)
		jne    _022b74_jump
		orb    $0x000008,0x000081(%ecx)

	_022b74_jump:
		mov    %ecx,%eax
		call   _053c34_func
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %eax,%edx
		mov    _0cda86_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		cwtl   
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0cda90_data,%eax
		movw   $0x000000,0x000042(%ecx)
		mov    0x000002(%eax,%edx,2),%al
		and    $0x0000ff,%eax
		testb  $0x000020,_092224_data(%eax)
		je     _022ca5_jump
		mov    _0cc1f0_data,%edx
		mov    _0cc1f4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _022c8f_jump

	_022be5_jump:
		cmpw   $0x000073,0x000060(%edx)
		jne    _022c7f_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _022c7f_jump
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movw   $0x000000,0x000040(%edx)
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%edx)
		mov    0x000028(%ecx),%eax
		sub    $0x000020,%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%ecx),%eax
		sub    $0x000030,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		call   _01db8c_func
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f304_func
		movw   $0x0000ff,0x000056(%edx)
		movw   $0x00001e,0x000050(%edx)
		movw   $0x00001e,0x000052(%edx)
		movb   $0x000000,0x00006d(%edx)
		movb   $0x000004,0x00006c(%edx)
		movb   $0x000000,0x00006b(%edx)
		movw   $0x00ffff,0x000046(%edx)
		movw   $0x000000,0x000048(%edx)
		jmp    _022c8f_jump

	_022c7f_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _022be5_jump

	_022c8f_jump:
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)

	_022ca5_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022cac_func:
		push   %edx
		mov    0x000070(%eax),%dl
		cmp    $0x000002,%dl
		jb     _022cca_jump
		jbe    _022cc4_jump
		cmp    $0x000003,%dl
		jne    _022cca_jump
		movw   $0x00ffff,0x000042(%eax)
		pop    %edx
		ret    

	_022cc4_jump:
		movw   $0x000000,0x000042(%eax)

	_022cca_jump:
		pop    %edx
		ret    



_022cd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    _0cc1e8_data,%ecx
		movswl (%ecx),%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0cc1f0_data,%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		mov    _0cc1ec_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _022db6_jump
		mov    _0cc1ec_data,%si

	_022d0a_jump:
		cmpw   $0x000082,0x000060(%ecx)
		jne    _022d8a_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _022d8a_jump
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000028(%ebx),%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%ebx),%edx
		movw   $0x000000,0x000042(%ecx)
		mov    %edx,0x00002c(%ecx)
		xor    %ebx,%ebx
		mov    0x000042(%ecx),%ax
		xor    %edx,%edx
		mov    0x00006e(%ecx),%bl
		mov    0x00006f(%ecx),%dl
		mov    %ax,0x000040(%ecx)
		mov    %ecx,%eax
		call   _01d374_func
		mov    %ecx,%eax
		call   _01db8c_func
		mov    %ecx,%eax
		call   _01db14_func
		movw   $0x00ffff,0x000046(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000048(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f304_func
		andb   $0x0000bf,0x000081(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_022d8a_jump:
		inc    %eax
		movswl %ax,%ecx
		lea    0x000000(,%ecx,2),%edx
		mov    _0cc1e8_data,%ecx
		movswl (%ecx,%edx,1),%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0cc1f0_data,%edx
		add    %edx,%ecx
		cmp    %si,%ax
		jl     _022d0a_jump

	_022db6_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022dbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		testb  $0x000004,0x00007d(%eax)
		je     _022e3f_jump
		mov    %ecx,%eax
		call   _01d380_func
		mov    %eax,%esi
		mov    %ecx,%eax
		call   _01d4b0_func
		movswl %si,%esi
		movswl %ax,%edi
		mov    %esi,%edx
		mov    %edi,%ebx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _022e14_jump
		mov    %edi,%ebx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _022e14_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _05efb0_func

	_022e14_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    0x000040(%ecx),%dx
		mov    %ax,0x000042(%ecx)
		test   %dx,%dx
		jle    _022e36_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _022e3f_jump

	_022e36_jump:
		jge    _022e3f_jump
		andb   $0x0000f7,0x000081(%ecx)

	_022e3f_jump:
		testb  $0x000008,0x00007d(%ecx)
		je     _022e55_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_022e55_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022e5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x0000ff,%dl
		mov    0x000070(%eax),%dh
		test   %dh,%dh
		jne    _022e7b_jump
		mov    0x000081(%eax),%cl
		or     $0x000008,%cl
		mov    $0x000003,%dl
		mov    %cl,0x000081(%eax)
		jmp    _022e91_jump

	_022e7b_jump:
		cmp    $0x000001,%dh
		jne    _022e91_jump
		mov    0x000081(%eax),%bh
		and    $0x0000f7,%bh
		mov    $0x000002,%dl
		mov    %bh,0x000081(%eax)

	_022e91_jump:
		cmp    $0x0000ff,%dl
		je     _022ea6_jump
		mov    $0x000001,%ebx
		and    $0x0000ff,%edx
		call   _05efb0_func

	_022ea6_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022eac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		cmpb   $0x000000,0x00006d(%eax)
		jne    _022ecf_jump
		cmpb   $0x000004,0x00006c(%esi)
		jne    _022ecf_jump
		mov    %esi,%eax
		call   _053c34_func
		negw   0x000040(%esi)
		jmp    _022fea_jump

	_022ecf_jump:
		cmpb   $0x000000,0x000070(%esi)
		jne    _022ede_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _022ee5_jump

	_022ede_jump:
		orb    $0x000008,0x000081(%esi)

	_022ee5_jump:
		testb  $0x000002,0x00007d(%esi)
		je     _022f32_jump
		mov    %esi,%eax
		call   _053c34_func
		xor    %edx,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   _024c98_func
		mov    %al,%cl
		testb  $0x000001,_092224_data(%ecx)
		je     _022f2b_jump
		cmpb   $0x000000,0x000070(%esi)
		jne    _022f1a_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _022f24_jump

	_022f1a_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_022f24_jump:
		mov    %esi,%eax
		call   _05efb0_func

	_022f2b_jump:
		mov    %esi,%eax
		call   _0252c0_func

	_022f32_jump:
		testb  $0x000001,0x00007d(%esi)
		je     _022fd7_jump
		mov    $0x000028,%ebx
		lea    0x00004a(%esi),%ecx
		mov    $0x000030,%edx
		mov    %esi,%eax
		call   _01d084_func
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01d380_func
		mov    %eax,%ecx
		mov    %esi,%eax
		call   _01d4b0_func
		movswl %cx,%ecx
		movswl %ax,%edi
		mov    %ecx,%edx
		mov    %edi,%ebx
		mov    %esi,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _022fd0_jump
		mov    %edi,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _022fd0_jump
		mov    0x00003e(%esi),%ecx
		mov    0x000028(%esi),%edx
		sar    $0x000010,%ecx
		sub    %ecx,%edx
		mov    %edx,0x000028(%esi)
		cmpb   $0x000000,0x000070(%esi)
		jne    _022fb8_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _05efb0_func
		orb    $0x000008,0x000081(%esi)
		jmp    _022fd0_jump

	_022fb8_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _05efb0_func
		andb   $0x0000f7,0x000081(%esi)

	_022fd0_jump:
		mov    %esi,%eax
		call   _053c34_func

	_022fd7_jump:
		testb  $0x000010,0x00007d(%esi)
		je     _022fea_jump
		mov    %esi,%eax
		call   _053c34_func
		movw   $0x000000,0x000042(%esi)

	_022fea_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_022ff0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		testb  $0x000010,0x00007d(%eax)
		je     _0230a8_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02300c_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _023020_jump

	_02300c_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _0230a8_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _0230a8_jump

	_023020_jump:
		mov    0x00007f(%esi),%cl
		cmp    $0x0000ff,%cl
		jne    _02305b_jump
		mov    0x00002c(%esi),%ecx
		mov    0x000040(%esi),%ebx
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _023048_jump
		cmp    %ecx,%eax
		jg     _023048_jump
		mov    $0x000001,%eax
		jmp    _02304a_jump

	_023048_jump:
		xor    %eax,%eax

	_02304a_jump:
		test   %eax,%eax
		jne    _023055_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _0230a8_jump

	_023055_jump:
		movb   $0x00003c,0x00007f(%esi)
		jmp    _0230a8_jump

	_02305b_jump:
		test   %cl,%cl
		jne    _02309b_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _023082_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _02308c_jump

	_023082_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_02308c_jump:
		mov    %esi,%eax
		call   _05efb0_func
		movw   $0x000000,0x000042(%esi)
		jmp    _0230a8_jump

	_02309b_jump:
		mov    %cl,%al
		movw   $0x000000,0x000042(%esi)
		dec    %al
		mov    %al,0x00007f(%esi)

	_0230a8_jump:
		cmpb   $0x000004,0x000075(%esi)
		jne    _02311d_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0230be_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _0230ca_jump

	_0230be_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02311d_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _02311d_jump

	_0230ca_jump:
		cmpb   $0x000000,0x00007b(%esi)
		je     _02310c_jump
		mov    0x00002c(%esi),%ecx
		mov    0x000040(%esi),%ebx
		mov    0x00004e(%esi),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _0230f0_jump
		cmp    %ecx,%eax
		jg     _0230f0_jump
		mov    $0x000001,%eax
		jmp    _0230f2_jump

	_0230f0_jump:
		xor    %eax,%eax

	_0230f2_jump:
		test   %eax,%eax
		je     _02311d_jump
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000042(%esi)
		jmp    _02311d_jump

	_02310c_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func

	_02311d_jump:
		testb  $0x000002,0x00007d(%esi)
		je     _023164_jump
		cmpw   $0x000000,0x000040(%esi)
		je     _023164_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _023164_jump
		cmpb   $0x000000,0x000070(%esi)
		jne    _023153_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _02315d_jump

	_023153_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_02315d_jump:
		mov    %esi,%eax
		call   _05efb0_func

	_023164_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02316c_func:
		push   %edx
		mov    0x000070(%eax),%dl
		cmp    $0x000002,%dl
		jb     _02318c_jump
		jbe    _023198_jump
		cmp    $0x000014,%dl
		jb     _023198_jump
		jbe    _023185_jump
		cmp    $0x00001e,%dl
		je     _023193_jump
		pop    %edx
		ret    

	_023185_jump:
		call   _022dbc_func
		pop    %edx
		ret    

	_02318c_jump:
		call   _022eac_func
		pop    %edx
		ret    

	_023193_jump:
		call   _022ff0_func

	_023198_jump:
		pop    %edx
		ret    



_02319c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _023222_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    _0cdb20_data,%eax
		movw   $0x000000,0x000042(%ecx)
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jl     _0231ee_jump
		jle    _0231dc_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _0231f5_jump

	_0231dc_jump:
		testb  $0x000008,0x000081(%eax)
		je     _0231ee_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _0231f5_jump

	_0231ee_jump:
		orb    $0x000008,0x000081(%ecx)

	_0231f5_jump:
		mov    %ecx,%eax
		call   _022cd0_func
		testb  $0x000008,0x000081(%ecx)
		je     _023211_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _02321b_jump

	_023211_jump:
		mov    $0x000001,%ebx
		mov    $0x000003,%edx

	_02321b_jump:
		mov    %ecx,%eax
		call   _05efb0_func

	_023222_jump:
		pop    %ecx
		pop    %ebx
		ret    

_023228_switch:
		.long   _023451_case
		.long   _0233c9_case
		.long   _0232a8_case
		.long   _023495_case
		.long   _023495_case
		.long   _023264_case




_023240_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000075(%eax),%al
		sub    $0x000002,%al
		cmp    $0x000005,%al
		ja     _023495_case
		and    $0x0000ff,%eax
		jmp    *%cs:_023228_switch(,%eax,4)

	_023264_case:
		mov    0x00006d(%esi),%ah
		cmp    $0x000001,%ah
		jne    _023495_case
		cmp    0x00006c(%esi),%ah
		jne    _023495_case
		cmpb   $0x000002,_0cdb01_data
		setne  %al
		and    $0x0000ff,%eax
		je     _023495_case
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _05efb0_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0232a8_case:
		cmpb   $0x000002,_0cdb01_data
		je     _023495_case
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x00007a(%esi),%al
		mov    0x000004(%esp),%ebx
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		mov    %eax,%ecx
		add    %eax,%ecx
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000008(%esp)
		xor    %eax,%eax
		mov    (%esp),%edi
		mov    0x00007a(%esi),%al
		add    %eax,%edi
		mov    %di,(%esp)
		cmpb   $0x000001,0x00006d(%esi)
		jne    _023495_case
		cmpb   $0x000000,0x00006c(%esi)
		jne    _023495_case
		mov    _0cecb8_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0cec9e_data,%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    _0cec9c_data,%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%edx
		push   %eax
		mov    _0cec9a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _023495_case
		xor    %edx,%edx
		mov    _0cec9e_data,%ax
		mov    0x000074(%esi),%dl
		sub    %edx,%eax
		mov    %ax,0x000050(%esi)
		mov    0x00002c(%esi),%edx
		mov    0x00004e(%esi),%eax
		sub    $0x000010,%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _023495_case
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000004,%edx
		call   _01db14_func
		mov    %esi,%eax
		call   _05efb0_func
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%edx
		movb   $0x000006,0x000072(%esi)
		dec    %edx
		mov    %edx,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0233c9_case:
		mov    0x00006d(%esi),%ch
		test   %ch,%ch
		jne    _023495_case
		cmpb   $0x000000,0x00006c(%esi)
		jne    _023495_case
		cmpb   $0x000002,_0cdb01_data
		setne  %al
		and    $0x0000ff,%eax
		je     _023495_case
		mov    %esi,%eax
		call   _01db14_func
		xor    %eax,%eax
		mov    _0cdac0_data,%dx
		mov    _0cdb08_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		mov    %dx,0x000050(%esi)
		mov    0x00002c(%esi),%eax
		mov    0x00004e(%esi),%edx
		sub    $0x000010,%eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jge    _023495_case
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esi,%eax
		call   _05efb0_func
		movb   $0x000006,0x000072(%esi)
		movb   $0x0000ff,0x00007f(%esi)
		mov    0x00002c(%esi),%ebx
		mov    %ch,0x000071(%esi)
		dec    %ebx
		mov    %ebx,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_023451_case:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _023495_case
		cmpb   $0x000000,0x00006c(%esi)
		jne    _023495_case
		cmpb   $0x000002,_0cdb01_data
		setne  %al
		and    $0x0000ff,%eax
		je     _023495_case
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    $0x000004,%edx
		call   _01db14_func
		mov    %esi,%eax
		call   _05efb0_func
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ecx
		movb   $0x000006,0x000072(%esi)
		dec    %ecx
		mov    %ecx,0x00002c(%esi)

	_023495_case:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0234a0_func:
		push   %edx
		mov    _0cecd2_data,%edx
		mov    _0cecbe_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		shl    $0x000005,%edx
		dec    %eax
		sub    $0x000020,%edx
		add    %edx,%eax
		mov    _0ca388_data(,%eax,2),%ax
		pop    %edx
		ret    



_0234c8_func:
		push   %ebx
		push   %edx
		push   %edi
		push   %ebp
		cmpw   $0x000000,_0cec4e_data
		je     _023591_jump
		mov    _0cecd2_data,%eax
		mov    _0cecbe_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000005,%eax
		dec    %edx
		sub    $0x000020,%eax
		mov    _0ccd14_data,%ebx
		add    %eax,%edx
		cmp    $0x000001,%ebx
		jne    _023522_jump
		mov    _0ca386_data(,%edx,2),%eax
		sar    $0x000010,%eax
		mov    %eax,_0ccd18_data
		cmp    $0xfffffffe,%eax
		je     _023522_jump
		mov    %eax,%ebx
		shl    $0x000004,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		mov    %eax,_0ccd18_data

	_023522_jump:
		mov    _0ca386_data(,%edx,2),%edx
		sar    $0x000010,%edx
		cmp    $0xfffffffe,%edx
		je     _023591_jump
		cmpl   $0x000000,_0ccd18_data
		je     _023591_jump
		mov    _0ccd14_data,%edi
		cmp    $0x000078,%edi
		jle    _023591_jump
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    $0x000001,%ebp
		shl    $0x000002,%eax
		lea    -0x000078(%edi),%edx
		mov    %ebp,_0cdab8_data
		sub    %edx,%eax
		mov    %eax,_0ccd18_data
		jne    _023591_jump
		cmpb   $0x000000,_0cee9b_data
		je     _023591_jump
		mov    _0ccd00_data,%al
		xor    %ebx,%ebx
		mov    %al,_0ce3a0_data
		mov    $_0cda94_data,%eax
		mov    %bx,_0cece4_data
		call   _076124_func
		call   _03b8d0_func

	_023591_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    



_023598_func:
		dec    %eax
		dec    %edx
		shl    $0x000005,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    $_0ca520_data,%eax
		jmp    _05bd28_jump



_0235b0_func:
		dec    %eax
		dec    %edx
		shl    $0x000005,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    %ax,%dx
		mov    $_0ca520_data,%eax
		jmp    _05bce8_jump



_0235c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cee9a_data,%ah
		test   %ah,%ah
		jbe    _023626_jump
		cmpw   $0x000000,_0cec4e_data
		jne    _023626_jump
		cmpb   $0x000000,_0cee41_data
		jne    _023626_jump
		mov    %ah,%dh
		mov    _0ce3a0_data,%bl
		dec    %dh
		inc    %bl
		mov    %dh,_0cee9a_data
		mov    %bl,_0ce3a0_data
		cmp    $0x000063,%bl
		jbe    _023626_jump
		mov    %bl,%cl
		sub    $0x000064,%cl
		mov    %cl,_0ce3a0_data
		call   _0774e8_func
		mov    %ax,_0cec72_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _023626_jump
		call   _056394_func

	_023626_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02362c_func:
		push   %edx
		xor    %eax,%eax

	_02362f_jump:
		inc    %eax
		xor    %dl,%dl
		mov    %dl,_0ca51f_data(%eax)
		cmp    $0x000018,%eax
		jl     _02362f_jump
		pop    %edx
		ret    



_023640_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x000001,%eax
		call   _0531e8_func
		call   _040b64_func
		cmpw   $0x000000,_0cec58_data
		jne    _0236c0_jump
		call   _03b880_func
		mov    $0x00003c,%ebx
		mov    _0cecd4_data,%cx
		mov    _0cecc0_data,%ax
		mov    _0ccd14_data,%edx
		dec    %ecx
		dec    %eax
		shl    $0x000005,%ecx
		sub    $0x000078,%edx
		add    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %cx,%eax
		mov    _0ca386_data(,%eax,2),%ebx
		mov    _0ccd18_data,%eax
		push   %edx
		mov    %eax,%edx
		mov    $0x00003c,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		sar    $0x000010,%ebx
		dec    %ebx
		sub    %eax,%ebx
		push   %ebx
		push   $_0c0510_data
		push   $_0cef0c_data
		call   _07c07b_func
		add    $0x000010,%esp

	_0236c0_jump:
		mov    _0cecbe_data,%edx
		mov    _0cecd2_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _023598_func
		test   %al,%al
		je     _02377b_jump
		cmpw   $0x000000,_0ced22_data
		jne    _023702_jump
		cmpb   $0x000000,_0cee41_data
		jne    _023702_jump
		mov    $0x0000bf,%ebx
		mov    $0x000080,%edx
		xor    %eax,%eax
		call   _03b564_func

	_023702_jump:
		cmpw   $0x000000,_0ced22_data
		jne    _023726_jump
		cmpb   $0x000000,_0cee43_data
		jne    _023726_jump
		mov    $0x0000ef,%ebx
		mov    $0x0000c0,%edx
		xor    %eax,%eax
		call   _03b564_func

	_023726_jump:
		call   _03bbec_func
		push   $0x000005
		mov    $0x00003c,%ebx
		mov    $0x0000a0,%edx
		mov    _0c251c_data,%eax
		xor    %ecx,%ecx
		call   _01a178_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x00006e,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2520_data,%eax
		call   _01a178_func
		push   $0x000005
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    $_0cef0c_data,%eax
		xor    %ecx,%ecx
		call   _01a178_func
		jmp    _023827_jump

	_02377b_jump:
		cmpw   $0x000000,_0ced22_data
		jne    _02379f_jump
		cmpb   $0x000000,_0cee41_data
		jne    _02379f_jump
		mov    $0x0000bf,%ebx
		mov    $0x000080,%edx
		xor    %eax,%eax
		call   _03b564_func

	_02379f_jump:
		cmpw   $0x000000,_0ced22_data
		jne    _0237c3_jump
		cmpb   $0x000000,_0cee43_data
		jne    _0237c3_jump
		mov    $0x0000ef,%ebx
		mov    $0x0000c0,%edx
		xor    %eax,%eax
		call   _03b564_func

	_0237c3_jump:
		call   _03bbec_func
		cmpw   $0x00000f,_0cec58_data
		jne    _0237f9_jump
		call   _07721c_func
		movw   $0x00004b,0x000036(%eax)
		movw   $0x000032,0x000038(%eax)
		mov    %eax,_0cef20_data
		movl   $0x000001,0x000024(%eax)
		call   _0544fc_func
		call   _056394_func

	_0237f9_jump:
		cmpw   $0x000014,_0cec58_data
		jle    _023827_jump
		mov    _0cef20_data,%eax
		call   _0544fc_func
		mov    _0cef20_data,%eax
		call   _01e674_func
		mov    _0cef20_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _023827_jump
		call   _018ae8_func

	_023827_jump:
		mov    _0cec58_data,%bx
		xor    %edx,%edx
		cmp    $0x0001f4,%bx
		je     _023869_jump
		call   _0408d4_func
		test   %ax,%ax
		jne    _02385f_jump
		call   _040960_func
		test   %ax,%ax
		jne    _02385f_jump
		call   _0409ec_func
		test   %ax,%ax
		jne    _02385f_jump
		call   _040a78_func
		test   %ax,%ax
		je     _023878_jump

	_02385f_jump:
		cmpw   $0x000032,_0cec58_data
		jle    _023878_jump

	_023869_jump:
		mov    $_0cda94_data,%eax
		mov    $0x000001,%edx
		call   _076124_func

	_023878_jump:
		mov    _0cec58_data,%si
		inc    %esi
		mov    %edx,%eax
		mov    %si,_0cec58_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023890_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cec58_data,%dx
		xor    %ebx,%ebx
		test   %dx,%dx
		jge    _0239c5_jump
		mov    %edx,%ecx
		inc    %ecx
		mov    %cx,_0cec58_data
		mov    _0cec56_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0239c5_jump
		mov    _095b14_data,%ah
		mov    %ecx,%edi
		xor    %esi,%esi
		inc    %edi
		mov    %si,_0cece4_data
		mov    %di,_0cec58_data
		cmp    $0x000001,%ah
		jne    _0238f1_jump
		xor    %eax,%eax
		mov    _0cee8f_data,%al
		mov    $0x000001,%ebx
		call   _03c7cc_func

	_0238f1_jump:
		mov    $0x00fa00,%edx
		mov    $_0cccf0_data,%eax
		call   _07b3e0_func
		mov    _0cecbe_data,%edx
		mov    _0cecd2_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _023598_func
		test   %al,%al
		je     _023926_jump
		mov    $_0cccf0_data,%eax
		call   _035e88_func
		jmp    _023930_jump

	_023926_jump:
		mov    $_0cccf0_data,%eax
		call   _035e88_func

	_023930_jump:
		mov    $_0c7088_data,%eax
		call   _03bad8_func
		call   _03b8f8_func
		call   _01cb68_func
		cmpb   $0x000000,_0cee62_data
		je     _02395c_jump
		call   _06ece0_func
		mov    $0x000006,%eax
		call   _07026c_jump

	_02395c_jump:
		mov    $_023640_func,%eax
		call   _03b948_func
		cmpb   $0x000000,_0cee62_data
		je     _023974_jump
		call   _03d9d0_func

	_023974_jump:
		call   _03b8d0_func
		mov    _0ccd00_data,%al
		xor    %edx,%edx
		mov    %al,_0ce3a0_data
		mov    %edx,_0ccd00_data
		mov    _0cecbe_data,%edx
		mov    _0cecd2_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0235b0_func
		test   %ebx,%ebx
		je     _0239b1_jump
		xor    %eax,%eax
		mov    _0cee8f_data,%al
		call   _03c6a0_func

	_0239b1_jump:
		call   _03b8f8_func
		call   _03bb4c_func
		mov    $_0cccf0_data,%eax
		call   _07b6ec_func

	_0239c5_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0239d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    %dx,(%esp)

	_0239df_jump:
		xor    %esi,%esi

	_0239e1_jump:
		mov    $0x000040,%eax
		movswl %si,%edi
		sub    %edi,%eax
		imul   %eax,%eax
		mov    -0x000002(%esp),%ebp
		mov    $0x000040,%edx
		sar    $0x000010,%ebp
		sub    %ebp,%edx
		imul   %edx,%edx
		add    %edx,%eax
		call   _07b8f2_func
		call   _07c0da_func
		call   _07c140_func
		mov    $0xbca1af28,%ebx
		mov    $0x3fbaf286,%ecx
		and    $0x0000ff,%eax
		shl    $0x000007,%ebp
		call   _07b8ff_func
		call   _07baef_func
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		call   _07c3fa_func
		call   _07b938_func
		mov    $0x40440000,%ecx
		xor    %ebx,%ebx
		inc    %esi
		call   _07baef_func
		call   _07c140_func
		mov    %al,_0d9334_data(%edi,%ebp,1)
		cmp    $0x000080,%si
		jl     _0239e1_jump
		mov    (%esp),%ebx
		inc    %ebx
		mov    %bx,(%esp)
		cmp    $0x000080,%bx
		jl     _0239df_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023a7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %al,%ch
		cmpb   $0x000000,_0cee7c_data
		jne    _023a95_jump
		movb   $0x00004a,_0dd634_data
		jmp    _023a9c_jump

	_023a95_jump:
		movb   $0x000070,_0dd634_data

	_023a9c_jump:
		movzbl _0dd634_data,%edi
		xor    %eax,%eax

	_023aa5_jump:
		movswl %ax,%ebx
		lea    (%ebx,%ebx,2),%edx
		add    %edi,%ebx
		lea    (%ebx,%ebx,2),%ebx
		mov    _095c5a_data(%edx),%cl
		mov    %cl,_0c7388_data(%ebx)
		mov    _095c59_data(%edx),%cl
		mov    _095c58_data(%edx),%dl
		mov    %cl,_0c7389_data(%ebx)
		inc    %eax
		mov    %dl,_0c738a_data(%ebx)
		cmp    $0x000010,%ax
		jl     _023aa5_jump
		test   %ch,%ch
		je     _023b01_jump
		lea    0x00000f(%edi),%ecx
		mov    $_0c7388_data,%esi
		mov    %edi,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_023b01_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023b08_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %ebx,%edi
		mov    %cx,0x00000c(%esp)
		mov    %esp,%ebp
		mov    _0ccba4_data,%ebx
		movswl %dx,%edx
		movswl %ax,%ecx
		lea    0x000000(,%edx,4),%eax
		add    %ebx,%ecx
		add    %edx,%eax
		mov    0x000030(%esp),%bl
		shl    $0x000006,%eax
		mov    %bl,(%esp)
		mov    0x000038(%esp),%bl
		lea    (%ecx,%eax,1),%edx
		mov    $0x000140,%eax
		mov    %bl,0x000001(%esp)
		mov    0x000040(%esp),%bl
		sub    %edi,%eax
		mov    %bl,0x000002(%esp)
		mov    0x000048(%esp),%bl
		mov    %eax,0x000014(%esp)
		mov    %bl,0x000003(%esp)
		xor    %ebx,%ebx
		lea    0x000004(%esp),%eax
		mov    %ebx,0x000010(%esp)
		jmp    _023c7c_jump

	_023b6d_jump:
		mov    0x000000(%ebp),%esi
		add    $0x1010101,%esi
		mov    %esi,%ebx
		mov    %esi,0x000000(%ebp)
		and    $0x7f7f7f7f,%ebx
		mov    %ebx,0x000000(%ebp)
		mov    0x00002c(%esp),%bl
		mov    %bl,0x000004(%esp)
		mov    0x000034(%esp),%bl
		mov    %bl,0x000005(%esp)
		mov    0x00003c(%esp),%bl
		mov    %bl,0x000006(%esp)
		mov    0x000044(%esp),%bl
		mov    %bl,0x000007(%esp)
		xor    %ebx,%ebx
		jmp    _023c5a_jump

	_023bab_jump:
		mov    (%eax),%ecx
		add    $0x1010101,%ecx
		mov    %ecx,%esi
		mov    %ecx,(%eax)
		and    $0x7f7f7f7f,%esi
		xor    %ecx,%ecx
		mov    %esi,(%eax)
		mov    (%esp),%cl
		movzbl 0x000004(%esp),%esi
		shl    $0x000007,%ecx
		mov    _0d9334_data(%ecx,%esi,1),%cl
		mov    0x00004c(%esp),%ch
		add    %ch,%cl
		mov    %cl,0x000018(%esp)
		xor    %ecx,%ecx
		mov    0x000001(%esp),%cl
		movzbl 0x000005(%esp),%esi
		shl    $0x000007,%ecx
		add    %ecx,%esi
		mov    0x000018(%esp),%cl
		mov    _0d9334_data(%esi),%ch
		add    %ch,%cl
		mov    %cl,0x000018(%esp)
		xor    %ecx,%ecx
		mov    0x000002(%esp),%cl
		mov    %ecx,%esi
		xor    %ecx,%ecx
		shl    $0x000007,%esi
		mov    0x000006(%esp),%cl
		add    %ecx,%esi
		mov    0x000018(%esp),%cl
		add    _0d9334_data(%esi),%cl
		movzbl 0x000003(%esp),%esi
		mov    %cl,0x000018(%esp)
		xor    %ecx,%ecx
		shl    $0x000007,%esi
		mov    0x000007(%esp),%cl
		add    %ecx,%esi
		mov    0x000018(%esp),%cl
		add    _0d9334_data(%esi),%cl
		mov    %ecx,%esi
		xor    %ecx,%ecx
		and    $0x0000ff,%esi
		mov    _0dd634_data,%cl
		sar    $0x000004,%esi
		add    %ecx,%esi
		mov    %esi,0x000008(%esp)
		inc    %edx
		mov    0x000008(%esp),%cl
		inc    %ebx
		mov    %cl,-0x000001(%edx)

	_023c5a_jump:
		xor    %esi,%esi
		movswl %di,%ecx
		mov    %bx,%si
		cmp    %ecx,%esi
		jl     _023bab_jump
		mov    0x000010(%esp),%esi
		xor    %ecx,%ecx
		inc    %esi
		mov    0x000014(%esp),%cx
		mov    %esi,0x000010(%esp)
		add    %ecx,%edx

	_023c7c_jump:
		xor    %ecx,%ecx
		mov    0x00000a(%esp),%esi
		mov    0x000010(%esp),%cx
		sar    $0x000010,%esi
		cmp    %esi,%ecx
		jl     _023b6d_jump
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000024



_023c9c_func:
		push   %esi
		push   %edi
		mov    %eax,%esi
		cmpb   $0x000000,0x00000c(%esp)
		je     _023dc9_jump
		incw   _095c88_data
		subw   $0x000002,_095c8a_data
		incw   _095c8c_data
		subw   $0x000002,_095c8e_data
		addw   $0x000003,_095c90_data
		subw   $0x000002,_095c92_data
		incw   _095c94_data
		subw   $0x000003,_095c96_data
		mov    _095c98_data,%di
		mov    _095c86_data,%eax
		add    $0x000005,%edi
		sar    $0x000010,%eax
		mov    %di,_095c98_data
		call   _05bd90_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0dd640_data
		mov    _095c88_data,%eax
		sar    $0x000010,%eax
		call   _05bd50_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0dd63e_data
		mov    _095c8a_data,%eax
		sar    $0x000010,%eax
		call   _05bd50_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0dd644_data
		mov    _095c8c_data,%eax
		sar    $0x000010,%eax
		call   _05bd90_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0dd642_data
		mov    _095c8e_data,%eax
		sar    $0x000010,%eax
		call   _05bd50_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0dd63c_data
		mov    _095c90_data,%eax
		sar    $0x000010,%eax
		call   _05bd90_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0dd63a_data
		mov    _095c92_data,%eax
		sar    $0x000010,%eax
		call   _05bd50_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0dd638_data
		mov    _095c94_data,%eax
		sar    $0x000010,%eax
		call   _05bd90_func
		cwtl   
		add    $0x000020,%eax
		sar    $0x000004,%eax
		mov    %ax,_0dd636_data

	_023dc9_jump:
		sub    $0x000003,%esi
		sub    $0x000003,%edx
		add    $0x000006,%ebx
		add    $0x000006,%ecx
		test   %si,%si
		jge    _023de0_jump
		add    %esi,%ebx
		xor    %esi,%esi
		jmp    _023df6_jump

	_023de0_jump:
		movswl %si,%eax
		movswl %bx,%edi
		add    %edi,%eax
		cmp    $0x000140,%eax
		jle    _023df6_jump
		mov    $0x000140,%ebx
		sub    %esi,%ebx

	_023df6_jump:
		test   %dx,%dx
		jge    _023e01_jump
		xor    %edx,%edx
		add    %esi,%ecx
		jmp    _023e17_jump

	_023e01_jump:
		movswl %dx,%edi
		movswl %cx,%eax
		add    %edi,%eax
		cmp    $0x000140,%eax
		jle    _023e17_jump
		mov    $0x0000c8,%ecx
		sub    %edx,%ecx

	_023e17_jump:
		mov    _095c96_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0dd634_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0dd636_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0dd638_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0dd63a_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0dd63c_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0dd63e_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0dd640_data,%eax
		sar    $0x000010,%eax
		movswl %cx,%ecx
		push   %eax
		mov    _0dd642_data,%eax
		movswl %bx,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		push   %eax
		movswl %si,%eax
		call   _023b08_func
		pop    %edi
		pop    %esi
		ret    $0x000004



_023e80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    $0x000001,%eax
		call   _069118_func
		cmpb   $0x000000,_0cee7c_data
		jne    _023ea4_jump
		movb   $0x00004a,_0dd634_data
		jmp    _023eab_jump

	_023ea4_jump:
		movb   $0x000070,_0dd634_data

	_023eab_jump:
		xor    %eax,%eax

	_023ead_jump:
		movswl %ax,%edx
		lea    (%edx,%edx,2),%ebx
		movzbl _095c9a_data(%ebx),%edi
		sar    $0x000002,%edi
		mov    %edi,(%esp)
		movzbl _0dd634_data,%edi
		add    %edi,%edx
		lea    (%edx,%edx,2),%edx
		mov    (%esp),%cl
		mov    %cl,_0c7388_data(%edx)
		xor    %ecx,%ecx
		mov    _095c9c_data(%ebx),%cl
		sar    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%cl
		mov    _095c9b_data(%ebx),%bl
		mov    %cl,_0c7389_data(%edx)
		and    $0x0000ff,%ebx
		sar    $0x000002,%ebx
		inc    %eax
		mov    %bl,_0c738a_data(%edx)
		cmp    $0x000010,%ax
		jl     _023ead_jump
		lea    0x00000f(%edi),%ecx
		mov    $_0c7388_data,%esi
		mov    %edi,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		xor    %esi,%esi

	_023f2c_jump:
		xor    %eax,%eax

	_023f2e_jump:
		movswl %si,%edx
		imul   $0x000258,%edx,%ebx
		xor    %ecx,%ecx
		mov    _0dd634_data,%cl
		movswl %ax,%edx
		inc    %eax
		mov    %cx,_0cef24_data(%ebx,%edx,2)
		cmp    $0x00012c,%ax
		jl     _023f2e_jump
		inc    %esi
		cmp    $0x000046,%si
		jl     _023f2c_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_023f64_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %cx,0x00000c(%esp)
		mov    _0ccba4_data,%esi
		cwtl   
		movswl %dx,%ecx
		add    %eax,%esi
		lea    0x000000(,%ecx,4),%eax
		xor    %edi,%edi
		add    %ecx,%eax
		xor    %edx,%edx
		shl    $0x000006,%eax
		mov    _0dd634_data,%dl
		add    %eax,%esi
		xor    %eax,%eax
		mov    %esi,0x000008(%esp)
		call   _069118_func
		test   %bx,%bx
		jle    _023ff7_jump

	_023fa3_jump:
		mov    $0x00000a,%eax
		call   _0690e0_func
		cmp    $0x000005,%ax
		jge    _023fca_jump
		mov    $0x000001,%eax
		call   _0690e0_func
		imul   $0x00000f,%eax,%eax
		xor    %edx,%edx
		mov    _0dd634_data,%dl
		add    %eax,%edx

	_023fca_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000258,%eax,%esi
		inc    %eax
		imul   $0x000258,%eax,%eax
		movswl %di,%ecx
		mov    %dx,_0cef24_data(%esi,%ecx,2)
		inc    %edi
		mov    %dx,_0cef24_data(%eax,%ecx,2)
		cmp    %bx,%di
		jl     _023fa3_jump

	_023ff7_jump:
		mov    $0x000001,%edi
		jmp    _024164_jump

	_024001_jump:
		xor    %edx,%edx
		test   %bx,%bx
		jle    _024163_jump

	_02400c_jump:
		test   %dx,%dx
		jne    _024082_jump
		movswl %di,%eax
		lea    -0x000001(%eax),%ecx
		imul   $0x000258,%ecx,%ecx
		mov    %ecx,0x000004(%esp)
		movswl %bx,%ecx
		mov    0x000004(%esp),%esi
		add    %ecx,%ecx
		add    %esi,%ecx
		imul   $0x000258,%eax,%esi
		inc    %eax
		imul   $0x000258,%eax,%eax
		mov    _0cef20_data(%ecx),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,(%esp)
		movswl %dx,%ecx
		add    %ecx,%ecx
		mov    _0cef22_data(%ecx,%esi,1),%ebp
		sar    $0x000010,%ebp
		mov    _0cef24_data(%ecx,%esi,1),%esi
		sar    $0x000010,%esi
		add    (%esp),%ebp
		mov    _0cef22_data(%ecx,%eax,1),%eax
		add    %ebp,%esi
		sar    $0x000010,%eax
		add    %esi,%eax
		add    0x000004(%esp),%ecx
		sar    $0x000002,%eax
		mov    %ax,_0cef24_data(%ecx)
		jmp    _024159_jump

	_024082_jump:
		movswl %bx,%eax
		movswl %dx,%ecx
		lea    -0x000001(%eax),%esi
		lea    0x000000(,%ecx,2),%eax
		cmp    %esi,%ecx
		jne    _0240fd_jump
		movswl %di,%ecx
		imul   $0x000258,%ecx,%esi
		mov    _0cef20_data(%esi,%eax,1),%ebp
		mov    _0cef22_data(%esi,%eax,1),%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		add    %esi,%ebp
		lea    0x000001(%ecx),%esi
		imul   $0x000258,%esi,%esi
		dec    %ecx
		imul   $0x000258,%ecx,%ecx
		mov    %ebp,(%esp)
		mov    _0cef22_data(%esi),%ebp
		sar    $0x000010,%ebp
		mov    _0cef22_data(%esi,%eax,1),%esi
		mov    %ebp,0x000004(%esp)
		mov    (%esp),%ebp
		sar    $0x000010,%esi
		add    0x000004(%esp),%ebp
		add    %ebp,%esi
		sar    $0x000002,%esi
		mov    %esi,0x000004(%esp)
		mov    0x000004(%esp),%esi
		mov    %si,_0cef24_data(%ecx,%eax,1)
		jmp    _024159_jump

	_0240fd_jump:
		movswl %di,%esi
		imul   $0x000258,%esi,%ecx
		mov    _0cef20_data(%ecx,%eax,1),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,(%esp)
		mov    _0cef22_data(%ecx,%eax,1),%ebp
		sar    $0x000010,%ebp
		mov    _0cef24_data(%ecx,%eax,1),%ecx
		add    (%esp),%ebp
		sar    $0x000010,%ecx
		add    %ecx,%ebp
		lea    0x000001(%esi),%ecx
		imul   $0x000258,%ecx,%ecx
		dec    %esi
		imul   $0x000258,%esi,%esi
		mov    _0cef22_data(%ecx,%eax,1),%ecx
		sar    $0x000010,%ecx
		add    %ebp,%ecx
		sar    $0x000002,%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%ecx
		mov    %cx,_0cef24_data(%esi,%eax,1)

	_024159_jump:
		inc    %edx
		cmp    %bx,%dx
		jl     _02400c_jump

	_024163_jump:
		inc    %edi

	_024164_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		movswl %di,%ecx
		add    $0x000002,%eax
		cmp    %eax,%ecx
		jl     _024001_jump
		mov    0x00000c(%esp),%edx
		xor    %edi,%edi
		test   %dx,%dx
		jle    _0241cf_jump

	_024184_jump:
		xor    %eax,%eax
		test   %bx,%bx
		jle    _0241b1_jump

	_02418b_jump:
		movswl %di,%ecx
		imul   $0x000258,%ecx,%ecx
		movswl %ax,%esi
		mov    _0cef24_data(%ecx,%esi,2),%dl
		mov    0x000008(%esp),%ecx
		mov    %dl,(%ecx)
		lea    0x000001(%ecx),%edx
		inc    %eax
		mov    %edx,0x000008(%esp)
		cmp    %bx,%ax
		jl     _02418b_jump

	_0241b1_jump:
		mov    $0x000140,%ecx
		movswl %bx,%eax
		mov    0x000008(%esp),%ebp
		sub    %eax,%ecx
		inc    %edi
		add    %ecx,%ebp
		mov    0x00000c(%esp),%ecx
		mov    %ebp,0x000008(%esp)
		cmp    %cx,%di
		jl     _024184_jump

	_0241cf_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0241d8_func:
		push   %esi
		push   %edi
		sub    $0x000003,%eax
		sub    $0x000003,%edx
		add    $0x000006,%ebx
		add    $0x000006,%ecx
		test   %ax,%ax
		jge    _0241f1_jump
		add    %eax,%ebx
		xor    %eax,%eax
		jmp    _024208_jump

	_0241f1_jump:
		movswl %ax,%edi
		movswl %bx,%esi
		add    %edi,%esi
		cmp    $0x000140,%esi
		jle    _024208_jump
		mov    $0x000140,%ebx
		sub    %eax,%ebx

	_024208_jump:
		test   %dx,%dx
		jge    _024213_jump
		xor    %edx,%edx
		add    %eax,%ecx
		jmp    _02422a_jump

	_024213_jump:
		movswl %dx,%edi
		movswl %cx,%esi
		add    %edi,%esi
		cmp    $0x000140,%esi
		jle    _02422a_jump
		mov    $0x0000c8,%ecx
		sub    %edx,%ecx

	_02422a_jump:
		movswl %cx,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		cwtl   
		call   _023f64_func
		pop    %edi
		pop    %esi
		ret    



_02423c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ceec7_data,%ch
		xor    %eax,%eax

	_024247_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		imul   $0x000300,%edx,%ebx
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		mov    _0c7388_data(%edx,%ebx,1),%cl
		mov    %cl,_0dd334_data(%edx)
		mov    _0c7389_data(%edx,%ebx,1),%cl
		mov    _0c738a_data(%edx,%ebx,1),%bl
		mov    %cl,_0dd335_data(%edx)
		inc    %eax
		mov    %bl,_0dd336_data(%edx)
		cmp    $0x000050,%ax
		jl     _024247_jump
		mov    $0x000046,%eax
		mov    %al,%dl
		add    %al,%dl
		mov    %dl,%bl
		sub    $0x00008c,%bl
		mov    %dl,%bh
		neg    %bh
		add    $0x00000a,%bh

	_02429a_jump:
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		xor    %cl,%cl
		mov    %bh,_0dd334_data(%edx)
		inc    %eax
		mov    %bl,_0dd335_data(%edx)
		add    $0x000002,%bl
		mov    %cl,_0dd336_data(%edx)
		sub    $0x000002,%bh
		cmp    $0x000066,%ax
		jl     _02429a_jump
		mov    $0x000066,%eax

	_0242c6_jump:
		xor    %edx,%edx
		mov    %ch,%dl
		imul   $0x000300,%edx,%ebx
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		mov    _0c7388_data(%edx,%ebx,1),%cl
		mov    %cl,_0dd334_data(%edx)
		mov    _0c7389_data(%edx,%ebx,1),%cl
		mov    _0c738a_data(%edx,%ebx,1),%bl
		mov    %cl,_0dd335_data(%edx)
		inc    %eax
		mov    %bl,_0dd336_data(%edx)
		cmp    $0x000070,%ax
		jl     _0242c6_jump
		mov    $0x000070,%eax

	_024309_jump:
		movswl %ax,%ebx
		lea    -0x000070(%ebx),%edx
		lea    (%edx,%edx,2),%edx
		lea    (%ebx,%ebx,2),%ebx
		mov    _095c5a_data(%edx),%cl
		mov    %cl,_0dd334_data(%ebx)
		mov    _095c59_data(%edx),%cl
		mov    _095c58_data(%edx),%dl
		mov    %cl,_0dd335_data(%ebx)
		inc    %eax
		mov    %dl,_0dd336_data(%ebx)
		cmp    $0x000080,%ax
		jl     _024309_jump
		mov    $0x000080,%eax
		mov    %al,%dl
		sub    $0x000080,%dl

	_02434a_jump:
		movswl %ax,%ebx
		lea    (%ebx,%ebx,2),%ebx
		mov    %dl,_0dd334_data(%ebx)
		mov    %dl,_0dd335_data(%ebx)
		inc    %eax
		mov    %dl,_0dd336_data(%ebx)
		inc    %dl
		cmp    $0x0000c0,%ax
		jl     _02434a_jump
		mov    $0x0000c0,%eax
		xor    %cl,%cl

	_024372_jump:
		movswl %ax,%ebx
		lea    (%ebx,%ebx,2),%edx
		mov    %cl,_0dd334_data(%edx)
		mov    %cl,_0dd335_data(%edx)
		lea    -0x0000c0(%ebx),%edx
		cmp    $0x000003,%edx
		jg     _024394_jump
		mov    $0x000003,%edx

	_024394_jump:
		mov    %dl,%bl
		movswl %ax,%edx
		lea    (%edx,%edx,2),%edx
		inc    %eax
		mov    %bl,_0dd336_data(%edx)
		cmp    $0x000100,%ax
		jl     _024372_jump
		cmpb   $0x000000,_0cee98_data
		je     _0243e2_jump
		mov    $0x000010,%ah
		mov    $0x00000e,%dl
		mov    $0x000031,%bl
		mov    $0x00002d,%cl
		mov    %ah,_0dd394_data
		mov    %dl,_0dd395_data
		mov    %bl,_0dd3a6_data
		mov    %cl,_0dd3a8_data
		mov    $0x00000d,%dh
		mov    $0x00002f,%bh
		mov    %dh,_0dd396_data
		mov    %bh,_0dd3a7_data

	_0243e2_jump:
		mov    %ch,_0ceec7_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0243ec_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,(%esp)
		mov    %dl,0x000008(%esp)
		cmpb   $0x000001,_095b14_data
		jne    _0244a7_jump
		xor    %ebx,%ebx
		mov    %bx,0x000004(%esp)
		mov    $0x000003,%ebp

	_024414_jump:
		mov    (%esp),%esi
		mov    0x000004(%esp),%ah
		xor    %ebx,%ebx
		mov    _0cc528_data,%edx
		mov    0x000004(%esp),%bx
		xor    %ecx,%ecx
		add    %edx,%ebx
		mov    $0x0003ce,%edx
		mov    $0x000004,%al
		out    %ax,(%dx)

	_024435_jump:
		mov    0x000008(%esp),%dh
		mov    (%esi),%al
		test   %dh,%dh
		je     _024480_jump
		movzbl _0ceec7_data,%edi
		imul   $0x000300,%edi,%edi
		xor    %edx,%edx
		mov    %al,%dl
		lea    (%edx,%edx,2),%edx
		add    %edi,%edx
		xor    %eax,%eax
		mov    _0c7389_data(%edx),%al
		movzbl _0c7388_data(%edx),%edi
		mov    _0c738a_data(%edx),%dl
		add    %edi,%eax
		and    $0x0000ff,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		add    $0x000080,%eax

	_024480_jump:
		mov    %al,(%ebx)
		inc    %ecx
		add    $0x000004,%ebx
		inc    %esi
		cmp    $0x003e80,%cx
		jb     _024435_jump
		mov    0x000004(%esp),%edx
		inc    %edx
		mov    %dx,0x000004(%esp)
		cmp    $0x000004,%dx
		jae    _02452f_jump
		jmp    _024414_jump

	_0244a7_jump:
		mov    (%esp),%esi
		mov    _0cc528_data,%edi
		test   %dl,%dl
		je     _02451a_jump
		xor    %edx,%edx
		mov    %dx,0x000004(%esp)

	_0244bb_jump:
		xor    %edx,%edx
		mov    _0ceec7_data,%dl
		imul   $0x000300,%edx,%edx
		mov    (%esi),%al
		and    $0x0000ff,%eax
		lea    (%eax,%eax,2),%eax
		add    %edx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0c7388_data(%eax),%bl
		mov    _0c7389_data(%eax),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0c738a_data(%eax),%dl
		add    %ebx,%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000004(%esp),%ecx
		inc    %edi
		inc    %esi
		inc    %ecx
		add    $0x000080,%eax
		mov    %cx,0x000004(%esp)
		mov    %al,-0x000001(%edi)
		cmp    $0x00fa00,%cx
		jae    _02452f_jump
		jmp    _0244bb_jump

	_02451a_jump:
		mov    $0x00fa00,%ecx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_02452f_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_024538_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %ax,0x000008(%esp)
		mov    %dx,0x000004(%esp)
		mov    %ecx,%esi
		xor    %ah,%ah
		mov    $0x000004,%edx
		and    $0x000003,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000008(%esp),%edx
		add    %eax,%edx
		mov    %ebx,%eax
		mov    %dx,0x000008(%esp)
		xor    %bh,%ah
		mov    $0x000004,%edx
		and    $0x000003,%al
		sub    %eax,%edx
		add    %edx,%ebx
		mov    $0x000140,%edx
		movswl %bx,%eax
		mov    0x000006(%esp),%ecx
		sub    %eax,%edx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		add    _0ccba4_data,%ecx
		mov    0x000002(%esp),%edx
		sar    $0x000002,%eax
		sar    $0x000010,%edx
		mov    %ax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    %bx,(%esp)
		shl    $0x000006,%eax
		sar    $0x000002,%bx
		add    %ecx,%eax
		xor    %ecx,%ecx
		test   %si,%si
		jle    _0245ee_jump

	_0245b6_jump:
		xor    %edx,%edx
		test   %bx,%bx
		jle    _0245dc_jump

	_0245bd_jump:
		mov    (%eax),%edi
		test   %edi,%edi
		je     _0245cd_jump
		lea    0x40404040(%edi),%ebp
		mov    %ebp,(%eax)
		jmp    _0245d3_jump

	_0245cd_jump:
		movl   $0xc8c8c8c8,(%eax)

	_0245d3_jump:
		inc    %edx
		add    $0x000004,%eax
		cmp    %bx,%dx
		jl     _0245bd_jump

	_0245dc_jump:
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000002,%edx
		inc    %ecx
		add    %edx,%eax
		cmp    %si,%cx
		jl     _0245b6_jump

	_0245ee_jump:
		mov    -0x000002(%esp),%edx
		mov    0x000002(%esp),%ebx
		mov    $0x002026,%eax
		mov    _0ccba4_data,%edi
		movswl %si,%ecx
		mov    0x000006(%esp),%esi
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		call   _014b1a_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_024620_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%esi
		cmpb   $0x000000,0x00001c(%esp)
		je     _024638_jump
		movw   $0x002026,0x000008(%esp)
		jmp    _02463f_jump

	_024638_jump:
		movw   $0x002620,0x000008(%esp)

	_02463f_jump:
		movswl %bx,%edi
		movswl %si,%esi
		movswl %ax,%ebp
		mov    %edi,(%esp)
		mov    %esi,%ebx
		movswl %cx,%edi
		mov    %ebp,%eax
		mov    %edi,0x000004(%esp)
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    _0ccba4_data,%edi
		call   _014a4e_func
		mov    0x000006(%esp),%eax
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    _0ccba4_data,%edi
		mov    %esi,%ebx
		sar    $0x000010,%eax
		mov    %ebp,%esi
		call   _014b1a_func
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_024690_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ceec7_data,%bh
		cmpb   $0x000000,_0cee7c_data
		je     _0246e7_jump
		cmpb   $0x000000,_095b4b_data
		jne    _0246e7_jump
		xor    %al,%al
		mov    $0x00003f,%ah

	_0246af_jump:
		mov    %al,%bl
		xor    %edx,%edx
		add    %al,%bl
		mov    %bh,%dl
		imul   $0x000300,%edx,%ecx
		xor    %edx,%edx
		mov    %al,%dl
		add    $0x000046,%edx
		lea    (%edx,%edx,2),%edx
		mov    %ah,_0c7388_data(%ecx,%edx,1)
		mov    %bl,_0c7389_data(%ecx,%edx,1)
		sub    $0x000002,%ah
		xor    %bl,%bl
		inc    %al
		mov    %bl,_0c738a_data(%ecx,%edx,1)
		cmp    $0x000020,%al
		jb     _0246af_jump

	_0246e7_jump:
		mov    %bh,_0ceec7_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0246f4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    0x000030(%esp),%edi
		mov    %eax,%esi
		mov    %dx,0x00000c(%esp)
		mov    %bx,0x000010(%esp)
		mov    %cx,0x000018(%esp)
		mov    0x00002c(%esp),%ecx
		mov    0x000034(%esp),%edx
		mov    _0ccba4_data,%ebp
		cwtl   
		add    %eax,%ebp
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		inc    %eax
		lea    0x000000(,%eax,4),%ebx
		add    %eax,%ebx
		inc    %ebp
		shl    $0x000006,%ebx
		add    %ebx,%ebp
		cmp    %di,%dx
		jle    _024740_jump
		mov    %edi,%edx
		jmp    _024749_jump

	_024740_jump:
		cmp    %cx,%dx
		jge    _024749_jump
		xor    %edx,%edx
		jmp    _02474b_jump

	_024749_jump:
		sub    %ecx,%edx

	_02474b_jump:
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000008,%ebx
		sar    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _024760_jump
		mov    %ebx,%eax

	_024760_jump:
		mov    0x000010(%esp),%ebx
		sub    %eax,%ebx
		mov    %ax,0x000008(%esp)
		mov    %ebx,%eax
		sub    $0x000003,%eax
		movswl %dx,%edx
		cwtl   
		imul   %eax,%edx
		movswl %di,%ebx
		movswl %cx,%eax
		sub    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000016(%esp),%ecx
		mov    _0ccba4_data,%edi
		sar    $0x000010,%ecx
		movswl %si,%edx
		mov    0x00000a(%esp),%ebx
		inc    %edx
		sar    $0x000010,%ebx
		movswl %si,%esi
		add    %edx,%eax
		mov    0x00000e(%esp),%edx
		mov    %ax,0x000014(%esp)
		mov    $0x002026,%eax
		sar    $0x000010,%edx
		call   _014b1a_func
		xor    %dh,%dh
		xor    %ah,%ah
		jmp    _024802_jump

	_0247bf_jump:
		xor    %dl,%dl
		xor    %al,%al
		jmp    _0247e1_jump

	_0247c5_jump:
		mov    %ah,%cl
		add    $0x000046,%cl
		mov    %cl,0x000000(%ebp)
		xor    %ecx,%ecx
		sar    $0x000005,%ebx
		mov    %al,%cl
		cmp    %ebx,%ecx
		jle    _0247dc_jump
		xor    %al,%al
		inc    %ah

	_0247dc_jump:
		inc    %dl
		inc    %ebp
		inc    %al

	_0247e1_jump:
		mov    0x00000e(%esp),%ecx
		sar    $0x000010,%ecx
		movzbl %dl,%esi
		lea    -0x000002(%ecx),%ebx
		cmp    %ebx,%esi
		jl     _0247c5_jump
		mov    $0x000140,%ebx
		sub    %ecx,%ebx
		inc    %dh
		add    $0x000002,%ebx
		xor    %ah,%ah
		add    %ebx,%ebp

	_024802_jump:
		mov    0x000016(%esp),%esi
		xor    %ebx,%ebx
		sar    $0x000010,%esi
		mov    %dh,%bl
		lea    -0x000002(%esi),%ecx
		cmp    %ecx,%ebx
		jl     _0247bf_jump
		mov    0x000006(%esp),%eax
		mov    _0ccba4_data,%edi
		lea    -0x000003(%esi),%ebp
		sar    $0x000010,%eax
		mov    0x000012(%esp),%esi
		mov    %eax,0x000004(%esp)
		mov    0x00000a(%esp),%eax
		mov    %ebp,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		inc    %eax
		mov    0x000004(%esp),%edx
		mov    %eax,(%esp)
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _014a4e_func
		mov    $0x000308,%eax
		mov    0x000004(%esp),%edx
		mov    (%esp),%ebx
		mov    _0ccba4_data,%edi
		mov    %ebp,%ecx
		call   _014b1a_func
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_02486c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %ax,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %ebx,%esi
		mov    %ecx,%edi
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		mov    _0ccba4_data,%ecx
		add    %ebx,%eax
		mov    _0ccba4_data,%ebp
		shl    $0x000006,%eax
		xor    %edx,%edx
		mov    %eax,%ebx
		add    %eax,%ecx
		mov    %ebp,%eax
		call   _07c050_func
		mov    -0x000002(%esp),%ebx
		mov    $0x0000c8,%ebp
		sar    $0x000010,%ebx
		sub    %ebx,%ebp
		lea    0x000000(,%ebp,4),%eax
		add    %eax,%ebp
		lea    0x000000(,%ebx,4),%eax
		mov    _0ccba4_data,%edx
		add    %ebx,%eax
		shl    $0x000006,%ebp
		shl    $0x000006,%eax
		mov    %ebp,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _07c050_func
		mov    0x000004(%esp),%edx
		cmp    (%esp),%dx
		jge    _024924_jump
		movswl %si,%ebx

	_0248ef_jump:
		xor    %eax,%eax
		test   %si,%si
		jle    _024900_jump

	_0248f6_jump:
		inc    %eax
		movb   $0x000000,(%ecx)
		inc    %ecx
		cmp    %si,%ax
		jl     _0248f6_jump

	_024900_jump:
		movswl %di,%eax
		sub    %ebx,%eax
		add    %eax,%ecx
		mov    %edi,%eax
		cmp    $0x000140,%di
		jge    _02491b_jump

	_024910_jump:
		inc    %eax
		movb   $0x000000,(%ecx)
		inc    %ecx
		cmp    $0x000140,%ax
		jl     _024910_jump

	_02491b_jump:
		mov    (%esp),%eax
		inc    %edx
		cmp    %ax,%dx
		jl     _0248ef_jump

	_024924_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_024930_func:
		movswl %dx,%edx
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx
		cwtl   
		call   _01e0e4_func
		cmp    $0x00000f,%al
		sete   %al
		xor    %ah,%ah
		ret    



_02494c_func:
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		movswl %ax,%esi
		movswl %bx,%edx
		movswl %cx,%eax
		call   *_0c21a8_data(,%esi,4)
		sub    %ebx,%eax
		pop    %esi
		pop    %ecx
		ret    



_024968_func:
		push   %ecx
		mov    %eax,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		cwtl   
		call   _02494c_func
		test   %ax,%ax
		jg     _024980_jump
		mov    %ecx,%eax
		pop    %ecx
		ret    

	_024980_jump:
		xor    %eax,%eax
		pop    %ecx
		ret    

_024984_switch:
		.long   _024ac6_case
		.long   _024ac6_case
		.long   _024ad6_case
		.long   _024ae9_case
		.long   _024afc_case
		.long   _024afc_case
		.long   _024b13_case
		.long   _024b13_case
		.long   _024ac6_case
		.long   _024b22_case
		.long   _024ac6_case
		.long   _024bef_case
		.long   _024bef_case
		.long   _024bef_case
		.long   _024b22_case
		.long   _024b22_case
		.long   _024bef_case
		.long   _024bef_case
		.long   _024ad6_case
		.long   _024ae9_case
		.long   _024afc_case
		.long   _024afc_case
		.long   _024b13_case
		.long   _024b13_case
		.long   _024ac6_case
		.long   _024ac6_case
		.long   _024bef_case
		.long   _024bef_case
		.long   _024bef_case
		.long   _024bef_case
		.long   _024b22_case




_024a00_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %dl,0x000008(%esp)
		xor    %edx,%edx
		mov    %edx,(%esp)
		mov    0x000060(%eax),%dx
		xor    %ebx,%ebx
		cmp    $0x000017,%dx
		jne    _024a7d_jump
		testb  $0x000002,_0cec71_data
		je     _024a7d_jump
		xor    %eax,%eax
		mov    $0x000001,%cl
		mov    0x000008(%esp),%al
		xor    %edx,%edx
		test   %ax,%ax
		js     _024a3b_jump
		sar    %cl,%ax
		jmp    _024a44_jump

	_024a3b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024a44_jump:
		mov    _0cdb01_data,%dl
		mov    _0cdaa0_data,%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    (%ecx),%ecx
		mov    _0cdb00_data,%dl
		mov    %al,0x000008(%esp)
		testb  $0x000040,0x000007(%ecx,%edx,8)
		jne    _024a7d_jump
		test   %al,%al
		je     _024a74_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    _024a79_jump

	_024a74_jump:
		mov    $0x000001,%edx

	_024a79_jump:
		mov    %dl,0x000008(%esp)

	_024a7d_jump:
		xor    %eax,%eax
		mov    0x00002c(%edi),%dx
		mov    0x000069(%edi),%al
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		mov    0x000002(%esp),%eax
		movzbw 0x000068(%edi),%si
		sar    $0x000010,%eax
		mov    0x000028(%edi),%cx
		sar    $0x000004,%eax
		add    %ecx,%esi
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		cmp    $0x00001e,%al
		ja     _024bef_case
		and    $0x0000ff,%eax
		jmp    *%cs:_024984_switch(,%eax,4)

	_024ac6_case:
		mov    $0x000008,%eax
		sub    0x000042(%edi),%ax
		add    %eax,%ebx
		jmp    _024bef_case

	_024ad6_case:
		cmpw   $0x000000,0x000040(%edi)
		jl     _024bef_case
		add    $0x000011,%ebx
		jmp    _024bef_case

	_024ae9_case:
		cmpw   $0x000000,0x000040(%edi)
		jg     _024bef_case
		add    $0x000011,%ebx
		jmp    _024bef_case

	_024afc_case:
		cmpw   $0x000000,0x000040(%edi)
		jl     _024b0b_jump
		add    $0x000011,%ebx
		jmp    _024bef_case

	_024b0b_jump:
		add    $0x000002,%ebx
		jmp    _024bef_case

	_024b13_case:
		cmpw   $0x000000,0x000040(%edi)
		jg     _024b0b_jump
		add    $0x000011,%ebx
		jmp    _024bef_case

	_024b22_case:
		mov    0x000062(%edi),%al
		cmp    $0x000002,%al
		jb     _024b38_jump
		cmp    $0x000003,%al
		jbe    _024b35_jump
		cmp    $0x000012,%al
		jb     _024b38_jump
		cmp    $0x000013,%al
		ja     _024b38_jump

	_024b35_jump:
		add    $0x000008,%ebx

	_024b38_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000010,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		cmp    $0x00000a,%al
		jb     _024b94_jump
		jbe    _024bac_jump
		cmp    $0x000013,%al
		jb     _024b7d_jump
		jbe    _024bbd_jump
		cmp    $0x000016,%al
		jb     _024bc9_jump
		cmp    $0x000017,%al
		jbe    _024bd9_jump
		cmp    $0x000019,%al
		jbe    _024bac_jump
		jmp    _024bec_jump

	_024b7d_jump:
		cmp    $0x00000c,%al
		jb     _024bec_jump
		jbe    _024be9_jump
		cmp    $0x000012,%al
		je     _024bb1_jump
		jmp    _024bec_jump

	_024b94_jump:
		cmp    $0x000003,%al
		jb     _024ba8_jump
		jbe    _024bbd_jump
		cmp    $0x000006,%al
		jb     _024bc9_jump
		cmp    $0x000007,%al
		jbe    _024bd9_jump
		cmp    $0x000008,%al
		je     _024bac_jump
		jmp    _024bec_jump

	_024ba8_jump:
		cmp    $0x000001,%al
		ja     _024bb1_jump

	_024bac_jump:
		add    $0x000009,%ebx
		jmp    _024bef_case

	_024bb1_jump:
		cmpw   $0x000000,0x000040(%edi)
		jl     _024bef_case
		add    $0x000019,%ebx
		jmp    _024bef_case

	_024bbd_jump:
		cmpw   $0x000000,0x000040(%edi)
		jg     _024bef_case
		add    $0x000019,%ebx
		jmp    _024bef_case

	_024bc9_jump:
		cmpw   $0x000000,0x000040(%edi)
		jl     _024b0b_jump
		add    $0x000011,%ebx
		jmp    _024bef_case

	_024bd9_jump:
		cmpw   $0x000000,0x000040(%edi)
		jg     _024b0b_jump
		add    $0x000011,%ebx
		jmp    _024bef_case

	_024be9_jump:
		inc    %ebx
		jmp    _024bef_case

	_024bec_jump:
		add    $0x000008,%ebx

	_024bef_case:
		mov    $0x000004,%cl
		mov    %ebx,%eax
		mov    0x000008(%esp),%dl
		test   %ax,%ax
		js     _024c01_jump
		sar    %cl,%ax
		jmp    _024c0a_jump

	_024c01_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024c0a_jump:
		sub    %al,%dl
		mov    %dl,0x000008(%esp)
		cmp    $0x000080,%dl
		jbe    _024c1b_jump
		xor    %cl,%cl
		mov    %cl,0x000008(%esp)

	_024c1b_jump:
		mov    $0x000004,%cl
		mov    %esi,%eax
		mov    0x000004(%esp),%edi
		test   %ax,%ax
		js     _024c2d_jump
		sar    %cl,%ax
		jmp    _024c36_jump

	_024c2d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024c36_jump:
		sub    %ebx,%edi
		mov    $0x000004,%cl
		mov    %edi,%eax
		test   %ax,%ax
		js     _024c46_jump
		sar    %cl,%ax
		jmp    _024c4f_jump

	_024c46_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024c4f_jump:
		xor    %ebx,%ebx
		xor    %cl,%cl
		jmp    _024c77_jump

	_024c55_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		sub    %ebx,%eax
		mov    %edi,%edx
		shl    $0x000004,%eax
		sub    %eax,%edx
		movswl %dx,%edx
		movswl %si,%eax
		call   _024930_func
		test   %ax,%ax
		je     _024c76_jump
		inc    %cl

	_024c76_jump:
		inc    %ebx

	_024c77_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		cmp    %eax,%ebx
		jle    _024c55_jump
		test   %cl,%cl
		je     _024c8c_jump
		movl   $0x00000f,(%esp)

	_024c8c_jump:
		mov    (%esp),%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_024c98_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _024cb5_jump
		mov    $0x000001,%eax
		jg     _024cb5_jump
		neg    %eax

	_024cb5_jump:
		mov    %eax,%ecx
		test   %ax,%ax
		je     _024e1b_jump
		cmpw   $0x000017,0x000060(%esi)
		jne    _024cf8_jump
		mov    _0cec71_data,%ah
		mov    $0x000004,%dh
		test   $0x000002,%ah
		je     _024cdd_jump
		mov    $0x000008,%eax
		mov    $0x000002,%dh
		jmp    _024ce2_jump

	_024cdd_jump:
		mov    $0x00000e,%eax

	_024ce2_jump:
		mov    _0cdae2_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _024cfd_jump
		xor    %ebx,%ebx
		mov    %dh,%bl
		sub    %ebx,%eax
		jmp    _024cfd_jump

	_024cf8_jump:
		mov    $0x00000e,%eax

	_024cfd_jump:
		test   %cx,%cx
		jge    _024d04_jump
		neg    %eax

	_024d04_jump:
		test   %dl,%dl
		je     _024d0a_jump
		neg    %eax

	_024d0a_jump:
		cwtl   
		mov    0x000028(%esi),%ebx
		add    %eax,%ebx
		mov    0x000028(%esi),%di
		mov    %ebx,0x000028(%esi)
		test   %dl,%dl
		jne    _024d4a_jump
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		mov    _092265_data(,%edx,4),%bl
		mov    0x000040(%esi),%ax
		test   $0x000010,%bl
		je     _024d46_jump
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _024d3d_jump
		sar    %cl,%ax
		jmp    _024d46_jump

	_024d3d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024d46_jump:
		cwtl   
		sub    %eax,0x000028(%esi)

	_024d4a_jump:
		testb  $0x000020,0x000081(%esi)
		je     _024d73_jump
		lea    0x000010(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		jmp    _024d79_jump

	_024d73_jump:
		xor    %ecx,%ecx
		mov    %ecx,0x000008(%esp)

	_024d79_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000074(%esi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %eax,%edx
		mov    $0x000004,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _024d99_jump
		sar    %cl,%ax
		jmp    _024da2_jump

	_024d99_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024da2_jump:
		mov    0x000060(%esi),%bx
		mov    %eax,%edx
		cmp    $0x000017,%bx
		jne    _024df8_jump
		xor    %ebx,%ebx
		mov    _0cdb01_data,%bl
		mov    _0cdaa0_data,%ecx
		shl    $0x000002,%ebx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    _0cdb00_data,%bl
		mov    %ecx,(%esp)
		lea    0x000000(,%ebx,8),%ecx
		mov    (%esp),%ebx
		mov    (%ebx),%ebx
		testb  $0x000040,0x000007(%ecx,%ebx,1)
		je     _024df8_jump
		xor    %eax,%eax
		mov    $0x000001,%cl
		mov    %dl,%al
		test   %ax,%ax
		js     _024def_jump
		sar    %cl,%ax
		jmp    _024df8_jump

	_024def_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_024df8_jump:
		test   %al,%al
		je     _024dfe_jump
		dec    %al

	_024dfe_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _024a00_func
		mov    %al,%dl
		movswl %di,%eax
		mov    %eax,0x000028(%esi)
		mov    %dl,%al
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_024e1b_jump:
		xor    %dl,%dl
		mov    %dl,%al
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_024e28_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000002,_092224_data(%eax)
		jne    _02516d_jump
		mov    0x000060(%ecx),%ax
		cmp    $0x000028,%ax
		jb     _024e9a_jump
		jbe    _0250d7_jump
		cmp    $0x00007a,%ax
		jb     _024e7b_jump
		jbe    _0250d7_jump
		cmp    $0x0000a5,%ax
		jb     _02514f_jump
		jbe    _0250c4_jump
		cmp    $0x0000ac,%ax
		je     _025130_jump
		jmp    _02514f_jump

	_024e7b_jump:
		cmp    $0x000041,%ax
		jb     _02514f_jump
		jbe    _0250ff_jump
		cmp    $0x000064,%ax
		je     _0250f4_jump
		jmp    _02514f_jump

	_024e9a_jump:
		cmp    $0x000003,%ax
		jb     _024ec1_jump
		jbe    _025071_jump
		cmp    $0x000009,%ax
		jb     _02514f_jump
		jbe    _0250c4_jump
		cmp    $0x000017,%ax
		je     _024ecf_jump
		jmp    _02514f_jump

	_024ec1_jump:
		test   %ax,%ax
		je     _025090_jump
		jmp    _02514f_jump

	_024ecf_jump:
		call   _0692b8_func
		cmpb   $0x00000c,_0ceec2_data
		je     _02514f_jump
		cmpb   $0x00000c,_0ceec6_data
		je     _02514f_jump
		cmpb   $0x00000c,_0ceec5_data
		je     _02514f_jump
		cmpb   $0x000005,_0cdb01_data
		je     _02514f_jump
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    _0cdaa0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdb00_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _024f53_jump
		xor    %edx,%edx
		mov    _0cdacc_data,%bx
		mov    %dx,_0cdad6_data
		mov    _0cdac0_data,%edx
		add    $0x000010,%ebx
		add    $0x000010,%edx
		mov    %bx,_0cdacc_data
		mov    %edx,_0cdac0_data

	_024f53_jump:
		cmpb   $0x000000,_0cee99_data
		je     _024f8c_jump
		cmpb   $0x000000,_0cdb01_data
		jne    _024f7d_jump
		cmpb   $0x000028,_0cdb00_data
		jne    _024f7d_jump
		mov    $0x00001a,%ebx
		mov    $0x000002,%edx
		jmp    _025033_jump

	_024f7d_jump:
		mov    $0x00001c,%ebx
		mov    $0x000002,%edx
		jmp    _025033_jump

	_024f8c_jump:
		cmpb   $0x000001,_0cdb01_data
		jne    _024fcb_jump
		mov    _0cdb00_data,%ah
		cmp    $0x000009,%ah
		je     _024fa5_jump
		cmp    $0x00000b,%ah
		jne    _024fcb_jump

	_024fa5_jump:
		mov    _0cdb15_data,%dh
		test   $0x000008,%dh
		sete   %al
		mov    %dh,%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,_0cdb15_data
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,_0cdb15_data

	_024fcb_jump:
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _024fd9_jump
		neg    %eax

	_024fd9_jump:
		cmp    $0x000002,%eax
		jg     _02501f_jump
		xor    %eax,%eax
		call   _069c78_func
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    _0cdaa0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdb00_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _025013_jump
		mov    $0x000018,%ebx
		mov    $0x000002,%edx
		jmp    _025033_jump

	_025013_jump:
		mov    $0x000021,%ebx
		mov    $0x000002,%edx
		jmp    _025033_jump

	_02501f_jump:
		mov    $0x000001,%eax
		mov    $0x000020,%ebx
		mov    $0x000002,%edx
		call   _069c78_func

	_025033_jump:
		mov    %ecx,%eax
		call   _01d374_func
		xor    %esi,%esi
		mov    _0ceebe_data,%ah
		mov    %si,_0cece8_data
		test   %ah,%ah
		je     _025057_jump
		cmpw   $0x000000,_0cecc8_data
		je     _025065_jump

	_025057_jump:
		movw   $0x000001,_0cdadc_data
		jmp    _02514f_jump

	_025065_jump:
		mov    %si,_0cdadc_data
		jmp    _02514f_jump

	_025071_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		jmp    _02514a_jump

	_025090_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d36c_func
		cmpb   $0x000002,0x00006c(%ecx)
		je     _0250b3_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d364_func
		jmp    _02514f_jump

	_0250b3_jump:
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d364_func
		jmp    _02514f_jump

	_0250c4_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d374_func
		jmp    _02514f_jump

	_0250d7_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		movb   $0x000007,0x000072(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _02514f_jump

	_0250f4_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		jmp    _02514a_jump

	_0250ff_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		movb   $0x0000ff,0x00007c(%ecx)
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _02514f_jump

	_025130_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d374_func
		mov    $0x00000f,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx

	_02514a_jump:
		call   _05efb0_func

	_02514f_jump:
		movw   $0x000000,0x000052(%ecx)
		mov    0x000060(%ecx),%bx
		movb   $0x000000,0x000071(%ecx)
		cmp    $0x000028,%bx
		je     _02516d_jump
		cmp    $0x00007a,%bx
		je     _02516d_jump
		movb   $0x000000,0x000072(%ecx)

	_02516d_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025174_func:
		push   %ecx
		push   %edx
		xor    %dl,%dl
		cmpb   $0x000009,0x000062(%eax)
		jne    _0251a2_jump
		cmpw   $0x000000,0x000042(%eax)
		jl     _0251a2_jump
		mov    0x000060(%eax),%cx
		cmp    $0x000017,%cx
		je     _0251a0_jump
		mov    %ecx,%eax
		and    $0x00ffff,%eax
		testb  $0x000008,_092266_data(,%eax,4)
		je     _0251a2_jump

	_0251a0_jump:
		mov    $0x000001,%dl

	_0251a2_jump:
		mov    %dl,%al
		pop    %edx
		pop    %ecx
		ret    



_0251a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    0x000062(%eax),%dl
		xor    %cl,%cl
		cmp    $0x000009,%dl
		jne    _025239_jump
		cmpw   $0x000000,0x000042(%eax)
		jl     _025239_jump
		mov    0x000060(%eax),%bx
		cmp    $0x000017,%bx
		jne    _025223_jump
		mov    $0x000001,%cl
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %cl,_0ceec3_data
		call   _01d374_func
		call   _069ec0_func
		mov    $0xffffffff,%edx
		mov    $0x0000f9,%eax
		mov    $0x00000c,%esi
		call   _06f35c_func
		mov    _0cdad6_data,%di
		mov    $_0cda94_data,%eax
		sub    $0x000003,%edi
		mov    %si,_0cece8_data
		mov    %di,_0cdad6_data
		call   _077f04_func
		jmp    _025239_jump

	_025223_jump:
		xor    %edx,%edx
		mov    %bx,%dx
		testb  $0x000008,_092266_data(,%edx,4)
		je     _025239_jump
		call   _02ec54_func
		mov    $0x000001,%cl

	_025239_jump:
		mov    %cl,%al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_025244_switch:
		.long   _025480_case
		.long   _025480_case
		.long   _025436_case
		.long   _025442_case
		.long   _025449_case
		.long   _02545a_case
		.long   _02546b_case
		.long   _025474_case
		.long   _025480_case
		.long   _0253e6_case
		.long   _025480_case
		.long   _025480_case
		.long   _0254d8_case
		.long   _025480_case
		.long   _0253e6_case
		.long   _0253e6_case
		.long   _025480_case
		.long   _025480_case
		.long   _025436_case
		.long   _025442_case
		.long   _025449_case
		.long   _02545a_case
		.long   _02546b_case
		.long   _025474_case
		.long   _025480_case
		.long   _025480_case
		.long   _025480_case
		.long   _025480_case
		.long   _025480_case
		.long   _025480_case
		.long   _0253e6_case




_0252c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000001,_092266_data(,%eax,4)
		jne    _0252e5_jump
		cmp    $0x000017,%ax
		jne    _0255c3_jump

	_0252e5_jump:
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000010,_092265_data(,%eax,4)
		je     _02530a_jump
		cmp    $0x000017,%ax
		je     _02530a_jump
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		call   _053bb0_func
		mov    %eax,%edi
		jmp    _02530e_jump

	_02530a_jump:
		mov    0x000040(%ecx),%di

	_02530e_jump:
		xor    %eax,%eax
		mov    0x000028(%ecx),%dx
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000008(%esp)
		mov    0x000069(%ecx),%al
		mov    0x00002c(%ecx),%dx
		mov    0x000060(%ecx),%si
		add    %eax,%edx
		mov    0x000008(%esp),%eax
		mov    %dx,0x000010(%esp)
		mov    %edx,%ebx
		xor    %ah,%ah
		xor    %dh,%bh
		and    $0x00000f,%al
		and    $0x00000f,%bl
		add    %edi,%eax
		cmp    $0x000017,%si
		jne    _025381_jump
		mov    _0cdae2_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _025381_jump
		test   %di,%di
		jle    _025363_jump
		mov    $0x00000f,%eax
		jmp    _025367_jump

	_025363_jump:
		jge    _025367_jump
		xor    %eax,%eax

	_025367_jump:
		xor    %edx,%edx
		mov    0x000062(%ecx),%dl
		lea    0x000000(,%edx,4),%esi
		cwtl   
		movswl %bx,%edx
		call   *_0c1fa8_data(%esi)
		mov    %eax,%ebx
		jmp    _025397_jump

	_025381_jump:
		xor    %edx,%edx
		mov    0x000062(%ecx),%dl
		lea    0x000000(,%edx,4),%esi
		cwtl   
		movswl %bx,%edx
		call   *_0c1fa8_data(%esi)

	_025397_jump:
		sub    %ebx,%eax
		mov    0x000010(%esp),%ebx
		add    %eax,%ebx
		mov    %ax,0x00000c(%esp)
		movswl %bx,%eax
		mov    0x000008(%esp),%esi
		sar    $0x000004,%eax
		add    %edi,%esi
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		mov    %eax,(%esp)
		xor    %bh,%bh
		mov    (%esp),%eax
		and    $0x00000f,%bl
		cwtl   
		and    $0x00000f,%esi
		call   _01e0e4_func
		mov    %al,0x000014(%esp)
		cmp    $0x00001e,%al
		ja     _025480_case
		and    $0x0000ff,%eax
		jmp    *%cs:_025244_switch(,%eax,4)

	_0253e6_case:
		mov    0x00000e(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		sub    $0x000010,%eax
		mov    0x000006(%esp),%ebp
		sar    $0x000004,%eax
		sar    $0x000010,%ebp
		movswl %ax,%edx
		movswl %di,%eax
		add    %ebp,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%edi
		movswl %bx,%edx
		movswl %si,%eax
		call   *_0c20a8_data(%edi)
		mov    %ebx,%edx
		sub    $0x000010,%edx
		jmp    _0254de_jump

	_025436_case:
		mov    $0x00000f,%edx
		sub    %esi,%edx
		jmp    _0254e0_jump

	_025442_case:
		mov    %esi,%edx
		jmp    _0254e0_jump

	_025449_case:
		movswl %si,%eax
		mov    $0x00000f,%edx
		sar    %eax
		sub    %eax,%edx
		jmp    _0254e0_jump

	_02545a_case:
		movswl %si,%eax
		mov    $0x000007,%edx
		sar    %eax
		sub    %eax,%edx
		jmp    _0254e0_jump

	_02546b_case:
		movswl %si,%eax
		sar    %eax
		mov    %eax,%edx
		jmp    _0254e0_jump

	_025474_case:
		movswl %si,%eax
		sar    %eax
		add    $0x000008,%eax
		mov    %eax,%edx
		jmp    _0254e0_jump

	_025480_case:
		mov    0x000010(%esp),%eax
		mov    0x00000c(%esp),%esi
		mov    0x000008(%esp),%edx
		add    %esi,%eax
		add    %edx,%edi
		add    $0x000010,%eax
		mov    %edi,%edx
		mov    %eax,%esi
		xor    %dh,%dh
		cwtl   
		and    $0x00000f,%dl
		sar    $0x000004,%eax
		mov    %dx,0x000004(%esp)
		movswl %ax,%edx
		movswl %di,%eax
		sar    $0x000004,%eax
		and    $0x00000f,%esi
		cwtl   
		sub    $0x000010,%esi
		call   _01e0e4_func
		movzbl %al,%edi
		mov    0x000002(%esp),%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		call   *_0c21a8_data(,%edi,4)
		sub    %esi,%eax
		cmp    $0x000002,%ax
		jle    _0254dc_jump

	_0254d8_case:
		mov    %ebx,%edx
		jmp    _0254e0_jump

	_0254dc_jump:
		mov    %ebx,%edx

	_0254de_jump:
		add    %eax,%edx

	_0254e0_jump:
		mov    %ecx,%eax
		call   _0251a8_func
		test   %al,%al
		jne    _0255c3_jump
		mov    0x000060(%ecx),%di
		cmp    $0x000017,%di
		jne    _0255b0_jump
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _025570_jump
		cmpb   $0x000002,_0cdb01_data
		setne  %al
		and    $0x0000ff,%eax
		je     _025570_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _025527_jump
		neg    %eax

	_025527_jump:
		cmp    $0x000002,%eax
		jle    _025570_jump
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _025538_jump
		neg    %eax

	_025538_jump:
		cmp    $0x000010,%eax
		jge    _025570_jump
		xor    %eax,%eax
		mov    0x000014(%esp),%al
		testb  $0x000002,_092224_data(%eax)
		jne    _025570_jump
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000042(%ecx),%si
		call   _01d374_func
		movb   $0x000001,_0ceec3_data
		call   _069ec0_func
		mov    %si,0x000042(%ecx)
		jmp    _0255c3_jump

	_025570_jump:
		cmpb   $0x000003,_0cdb01_data
		jne    _025582_jump
		cmpb   $0x000020,_0cdb00_data
		je     _025589_jump

	_025582_jump:
		mov    $0x000001,%eax
		jmp    _02558b_jump

	_025589_jump:
		xor    %eax,%eax

	_02558b_jump:
		test   %eax,%eax
		je     _0255c3_jump
		cmpb   $0x000003,_0cdb01_data
		jne    _0255a1_jump
		cmpb   $0x000016,_0cdb00_data
		je     _0255a8_jump

	_0255a1_jump:
		mov    $0x000001,%eax
		jmp    _0255aa_jump

	_0255a8_jump:
		xor    %eax,%eax

	_0255aa_jump:
		test   %eax,%eax
		je     _0255c3_jump
		jmp    _0255b2_jump

	_0255b0_jump:
		je     _0255c3_jump

	_0255b2_jump:
		add    0x00000c(%esp),%edx
		sub    %ebx,%edx
		mov    %ecx,%eax
		mov    %dx,0x000042(%ecx)
		call   _024e28_func

	_0255c3_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0255d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		mov    0x000028(%ebx),%dx
		mov    0x00002c(%ebx),%si
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    0x000069(%ebx),%cl
		mov    0x000068(%ebx),%al
		add    %esi,%ecx
		add    %edx,%eax
		mov    %ecx,%esi
		mov    %eax,%edi
		movswl %cx,%edx
		and    $0x00fff0,%esi
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx
		cwtl   
		and    $0x00000f,%edi
		call   _01e0e4_func
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%ebp
		xor    %edx,%edx
		movswl %di,%eax
		call   *_0c1ea8_data(%ebp)
		cmpw   $0x000017,0x000060(%ebx)
		je     _02563e_jump
		movswl %si,%edx
		cwtl   
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%ebx),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%ebx)
		jmp    _025646_jump

	_02563e_jump:
		add    %esi,%eax
		sub    %ecx,%eax
		mov    %ax,0x000042(%ebx)

	_025646_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025650_func:
		mov    %edx,%eax
		inc    %eax
		ret    



_025654_func:
		mov    $0x00000f,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		lea    0x000000(%eax),%eax

	_025660_jump:
		ret    



_025664_func:
		cwtl   
		mov    $0x00000f,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		ret    



_025674_func:
		cwtl   
		mov    $0x000007,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %edx,%eax
		ret    



_025684_func:
		cwtl   
		sar    %eax
		ret    



_025688_func:
		cwtl   
		sar    %eax
		add    $0x000008,%eax
		ret    

	_025690_jump:
		mov    %edx,%eax
		ret    

	_025694_jump:
		xor    %eax,%eax
		ret    



_025698_func:
		mov    $0x000010,%eax
		ret    

_0256a0_switch:
		.long   _0258bb_case
		.long   _0258bb_case
		.long   _02574c_case
		.long   _025779_case
		.long   _0257a6_case
		.long   _0257d7_case
		.long   _02580d_case
		.long   _025843_case
		.long   _0258bb_case
		.long   _025885_case
		.long   _0258bb_case
		.long   _0258bb_case
		.long   _025874_case
		.long   _0258bb_case
		.long   _025885_case
		.long   _025885_case
		.long   _0258bb_case
		.long   _0258bb_case
		.long   _02574c_case
		.long   _025779_case
		.long   _0257a6_case
		.long   _0257d7_case
		.long   _02580d_case
		.long   _025843_case
		.long   _0258bb_case
		.long   _0258bb_case
		.long   _0258bb_case
		.long   _0258bb_case
		.long   _0258bb_case
		.long   _0258bb_case
		.long   _025885_case




_02571c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_025654_func,%esi
		mov    $_025660_jump,%edi
		mov    $_025664_func,%ecx
		xor    %al,%al
		mov    $_025688_func,%ebx

	_025738_jump:
		cmp    $0x00001e,%al
		ja     _0258bb_case
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_0256a0_switch(,%edx,4)

	_02574c_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,_0c1fa8_data(,%edx,4)
		mov    %esi,_0c20a8_data(,%edx,4)
		mov    %esi,_0c21a8_data(,%edx,4)
		mov    %esi,_0c1ea8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025738_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025779_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edi,_0c1fa8_data(,%edx,4)
		mov    %edi,_0c20a8_data(,%edx,4)
		mov    %edi,_0c21a8_data(,%edx,4)
		mov    %edi,_0c1ea8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025738_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0257a6_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ecx,_0c1fa8_data(,%edx,4)
		mov    %ecx,_0c20a8_data(,%edx,4)
		mov    %ecx,_0c21a8_data(,%edx,4)
		mov    %ecx,_0c1ea8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025738_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0257d7_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_025674_func,%ebp
		mov    %ebp,_0c1fa8_data(,%edx,4)
		mov    %ebp,_0c20a8_data(,%edx,4)
		mov    %ebp,_0c21a8_data(,%edx,4)
		mov    %ebp,_0c1ea8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025738_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02580d_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_025684_func,%ebp
		mov    %ebp,_0c1fa8_data(,%edx,4)
		mov    %ebp,_0c20a8_data(,%edx,4)
		mov    %ebp,_0c21a8_data(,%edx,4)
		mov    %ebp,_0c1ea8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025738_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025843_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebx,_0c1fa8_data(,%edx,4)
		mov    %ebx,_0c20a8_data(,%edx,4)
		mov    %ebx,_0c21a8_data(,%edx,4)
		mov    %ebx,_0c1ea8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025738_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_025874_case:
		xor    %edx,%edx
		mov    %al,%dl
		movl   $_025690_jump,_0c1fa8_data(,%edx,4)
		jmp    _0258ca_jump

	_025885_case:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_025694_jump,%ebp
		mov    %ebp,_0c1fa8_data(,%edx,4)
		mov    %ebp,_0c20a8_data(,%edx,4)
		mov    %ebp,_0c21a8_data(,%edx,4)
		mov    %ebp,_0c1ea8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025738_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0258bb_case:
		xor    %edx,%edx
		mov    %al,%dl
		movl   $_025650_func,_0c1fa8_data(,%edx,4)

	_0258ca_jump:
		movl   $_025698_func,_0c20a8_data(,%edx,4)
		movl   $_025690_jump,_0c21a8_data(,%edx,4)
		movl   $_025694_jump,_0c1ea8_data(,%edx,4)
		inc    %al
		cmp    $0x000040,%al
		jb     _025738_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_025900_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000044,%esp
		mov    %eax,%ecx
		mov    _0dd650_data,%eax
		mov    %eax,0x000010(%esp)
		call   _010010_func
		mov    0x000010(%esp),%eax
		movw   $0x000000,0x000006(%eax)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _025932_jump
		mov    %ebx,%eax

	_025932_jump:
		mov    0x000010(%esp),%ebx
		mov    %ax,0x000008(%ebx)
		test   %dx,%dx
		jl     _02594f_jump
		mov    $0x000001,%eax
		movswl %dx,%ebx
		cmp    %ebx,%eax
		jge    _02594d_jump
		mov    %ebx,%eax

	_02594d_jump:
		jmp    _025961_jump

	_02594f_jump:
		movswl %dx,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _02595f_jump
		mov    %ebx,%eax

	_02595f_jump:
		neg    %eax

	_025961_jump:
		mov    0x000010(%esp),%edx
		mov    %ax,0x00000a(%edx)
		xor    %eax,%eax
		mov    $0x000046,%ebx
		mov    %cx,%ax
		cmp    %ebx,%eax
		jle    _025979_jump
		mov    %ebx,%eax

	_025979_jump:
		mov    %eax,%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jge    _025986_jump
		mov    %ebx,%eax

	_025986_jump:
		mov    %al,0x00000c(%edx)
		xor    %eax,%eax
		mov    0x000001(%edx),%al
		call   _07b8ff_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54524550,%eax
		mov    $0x400921fb,%edx
		call   _07c468_func
		mov    %edx,0x000014(%esp)
		mov    0x000010(%esp),%edx
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%edx),%al
		call   _07b8ff_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54524550,%eax
		mov    $0x401921fb,%edx
		call   _07c468_func
		mov    $0xbff921fb,%ebx
		mov    %eax,0x000020(%esp)
		mov    0x000010(%esp),%eax
		mov    %edx,0x000008(%esp)
		mov    $0x54524550,%edx
		mov    0x000020(%eax),%eax
		mov    %ebx,0x00001c(%esp)
		mov    %eax,0x000018(%esp)
		xor    %ah,%ah
		mov    %edx,0x000004(%esp)
		mov    %ah,0x000034(%esp)

	_0259f8_jump:
		mov    0x000010(%esp),%edx
		xor    %eax,%eax
		mov    0x00000c(%edx),%al
		call   _07b8ff_func
		mov    %eax,%edi
		mov    %edx,%esi
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		call   _07c3fa_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07baef_func
		mov    %eax,0x000024(%esp)
		mov    %edx,0x00002c(%esp)
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		call   _07c421_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07baef_func
		mov    %eax,0x000028(%esp)
		mov    %edx,0x000030(%esp)
		xor    %edi,%edi
		xor    %bh,%bh
		xor    %esi,%esi
		mov    %bh,0x000040(%esp)

	_025a58_jump:
		mov    0x000028(%esp),%eax
		mov    0x000030(%esp),%edx
		call   _07c66e_func
		mov    %eax,0x00000c(%esp)
		mov    %edx,%ebp
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07c3fa_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00000c(%esp),%eax
		mov    %ebp,%edx
		call   _07baef_func
		call   _07c13c_func
		mov    0x000018(%esp),%edx
		mov    %ax,(%edx)
		mov    0x000024(%esp),%eax
		mov    0x00002c(%esp),%edx
		call   _07c13c_func
		mov    0x000018(%esp),%edx
		mov    %ax,0x000002(%edx)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07c421_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00000c(%esp),%eax
		mov    %ebp,%edx
		call   _07baef_func
		call   _07c13c_func
		mov    0x000018(%esp),%edx
		mov    0x000020(%esp),%ebx
		lea    0x00000a(%edx),%ecx
		mov    %ax,0x000004(%edx)
		mov    %ecx,0x000018(%esp)
		mov    %edi,%eax
		mov    %esi,%edx
		mov    0x000008(%esp),%ecx
		call   _07b938_func
		mov    %eax,%edi
		mov    0x000040(%esp),%al
		mov    %edx,%esi
		inc    %al
		mov    0x000010(%esp),%edx
		mov    %al,0x000040(%esp)
		cmp    (%edx),%al
		jbe    _025a58_jump
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    (%esp),%ebx
		mov    0x000014(%esp),%ecx
		call   _07b938_func
		mov    %edx,0x00001c(%esp)
		mov    0x000034(%esp),%dl
		inc    %dl
		mov    %eax,0x000004(%esp)
		mov    %dl,0x000034(%esp)
		mov    %dl,%al
		mov    0x000010(%esp),%edx
		cmp    0x000001(%edx),%al
		jbe    _0259f8_jump
		mov    0x000010(%esp),%eax
		mov    0x000010(%esp),%ebx
		xor    %ecx,%ecx
		mov    0x000002(%eax),%dx
		mov    0x000024(%ebx),%ebx
		test   %dx,%dx
		jbe    _025b90_jump

	_025b46_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%esi
		mov    %cx,%dx
		movzbl (%esi),%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ecx,%edx
		add    %eax,%edx
		mov    %edx,%eax
		mov    %dx,(%ebx)
		inc    %edx
		mov    0x000010(%esp),%esi
		mov    %dx,0x000002(%ebx)
		xor    %dh,%dh
		mov    (%esi),%dl
		add    %eax,%edx
		add    $0x000002,%edx
		mov    %dx,0x000004(%ebx)
		xor    %dh,%dh
		mov    (%esi),%dl
		add    %edx,%eax
		inc    %eax
		mov    %ax,0x000006(%ebx)
		inc    %ecx
		mov    0x000002(%esi),%si
		add    $0x000034,%ebx
		cmp    %si,%cx
		jb     _025b46_jump

	_025b90_jump:
		mov    0x000010(%esp),%eax
		mov    _0dd652_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    (%eax),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0dd654_data,%edx
		mov    %al,0x00003c(%esp)
		xor    %ebx,%ebx
		mov    0x000010(%esp),%eax
		sar    $0x000010,%edx
		mov    0x000001(%eax),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %cl,%cl
		mov    0x000010(%esp),%edx
		mov    %al,%bh
		mov    0x000010(%esp),%eax
		mov    %cl,0x000038(%esp)
		mov    0x000001(%edx),%ch
		mov    0x000024(%eax),%eax
		test   %ch,%ch
		jbe    _025c8f_jump

	_025be3_jump:
		mov    0x000010(%esp),%edx
		mov    (%edx),%cl
		xor    %bl,%bl
		test   %cl,%cl
		jbe    _025c78_jump

	_025bf3_jump:
		xor    %dh,%dh
		xor    %ch,%ch
		mov    0x00003c(%esp),%dl
		mov    %bl,%cl
		imul   %ecx,%edx
		movzbw 0x000038(%esp),%si
		mov    %bh,%cl
		imul   %esi,%ecx
		cmpw   $0x000100,_0dd654_data
		jg     _025c1f_jump
		mov    0x000010(%esp),%esi
		mov    0x000018(%esi),%esi
		jmp    _025c3c_jump

	_025c1f_jump:
		cmp    $0x0000a0,%dx
		jae    _025c2f_jump
		mov    0x000010(%esp),%esi
		mov    0x000018(%esi),%esi
		jmp    _025c3c_jump

	_025c2f_jump:
		mov    0x000010(%esp),%esi
		mov    0x00001c(%esi),%esi
		sub    $0x0000a0,%edx

	_025c3c_jump:
		mov    %esi,0x000008(%eax)
		mov    %dl,0x00002e(%eax)
		mov    %dl,0x00002c(%eax)
		mov    %cl,%dh
		mov    %cl,0x000033(%eax)
		add    %bh,%dh
		mov    %cl,0x00002d(%eax)
		dec    %dh
		mov    %dh,0x000031(%eax)
		mov    0x00003c(%esp),%ch
		mov    %dh,0x00002f(%eax)
		add    %ch,%dl
		dec    %dl
		mov    %dl,0x000032(%eax)
		mov    %dl,0x000030(%eax)
		mov    0x000010(%esp),%edx
		inc    %bl
		mov    (%edx),%cl
		add    $0x000034,%eax
		cmp    %cl,%bl
		jb     _025bf3_jump

	_025c78_jump:
		mov    0x000038(%esp),%dl
		inc    %dl
		mov    0x000010(%esp),%ecx
		mov    %dl,0x000038(%esp)
		cmp    0x000001(%ecx),%dl
		jb     _025be3_jump

	_025c8f_jump:
		mov    0x000010(%esp),%eax
		movb   $0x000001,0x00000d(%eax)
		add    $0x000044,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_025ca0_case:
		push   %edx
		mov    _0dd650_data,%edx
		test   %edx,%edx
		je     _025cda_jump
		cmpl   $0x000000,0x000020(%edx)
		je     _025cb9_jump
		lea    0x000020(%edx),%eax
		call   _07b7dc_func

	_025cb9_jump:
		cmpl   $0x000000,0x000024(%edx)
		je     _025cc7_jump
		lea    0x000024(%edx),%eax
		call   _07b7dc_func

	_025cc7_jump:
		cmpl   $0x000000,_0dd650_data
		je     _025cda_jump
		mov    $_0dd650_data,%eax
		call   _07b7dc_func

	_025cda_jump:
		pop    %edx
		ret    



_025cdc_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,(%esp)
		mov    %edx,%edi
		mov    %ebx,0x000008(%esp)
		mov    %cx,0x000004(%esp)
		mov    $0x000100,%edx
		mov    $0x0000c8,%ebx
		mov    $0x000020,%eax
		xor    %cl,%cl
		mov    %dx,_0dd654_data
		xor    %edx,%edx
		mov    %bx,_0dd656_data
		mov    %dx,_0dd65a_data
		mov    0x00001c(%esp),%edx
		mov    %ax,_0dd658_data
		test   %edx,%edx
		je     _025e02_jump
		cmpl   $0x000000,0x000020(%esp)
		je     _025e02_jump
		mov    $0x00003c,%eax
		call   _07b7c4_func
		mov    %eax,%edx
		mov    %eax,_0dd650_data
		test   %eax,%eax
		je     _025e02_jump
		xor    %ebx,%ebx
		mov    %eax,%esi
		mov    (%esp),%bx
		mov    $0x000002,%eax
		cmp    %ebx,%eax
		jge    _025d60_jump
		mov    %ebx,%eax

	_025d60_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    $0x000001,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _025d72_jump
		mov    %ebx,%eax

	_025d72_jump:
		mov    %al,0x000001(%edx)
		mov    (%esp),%eax
		imul   %edi,%eax
		mov    %ax,0x000002(%edx)
		mov    (%esp),%eax
		inc    %edi
		inc    %eax
		imul   %edi,%eax
		mov    %ax,0x000004(%edx)
		mov    0x00001c(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x000010(%edx)
		mov    0x000020(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000014(%edx)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		call   _07b7c4_func
		mov    %eax,0x000024(%edx)
		test   %eax,%eax
		je     _025e02_jump
		xor    %ebx,%ebx
		mov    0x000004(%edx),%bx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		call   _07b7c4_func
		mov    %eax,0x000020(%edx)
		test   %eax,%eax
		je     _025e02_jump
		mov    _0cc528_data,%eax
		mov    _0dd654_data,%bx
		mov    %eax,0x000018(%edx)
		cmp    $0x000100,%bx
		jg     _025df8_jump
		movl   $0x000000,0x00001c(%edx)
		jmp    _025e00_jump

	_025df8_jump:
		add    $0x00c800,%eax
		mov    %eax,0x00001c(%edx)

	_025e00_jump:
		mov    $0x000001,%cl

	_025e02_jump:
		test   %cl,%cl
		je     _025e93_jump
		cmpw   $0x000100,_0dd654_data
		jg     _025e4a_jump
		mov    _0dd658_data,%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		shl    $0x000006,%eax
		mov    0x000010(%esi),%ebx
		mov    _0dd652_data,%edi
		add    %ebx,%eax
		mov    _0dd656_data,%ebx
		mov    0x000018(%esi),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edi
		add    %ebx,%eax
		mov    %edi,%ebx
		jmp    _025e6a_jump

	_025e4a_jump:
		mov    $0x0000a0,%ebx
		mov    0x000018(%esi),%edx
		mov    0x000010(%esi),%eax
		call   _07a010_func
		mov    $0x0000a0,%ebx
		mov    0x000010(%esi),%eax
		mov    0x00001c(%esi),%edx
		add    $0x0000a0,%eax

	_025e6a_jump:
		call   _07a010_func
		mov    0x000002(%esp),%edx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000018(%esp),%bx
		mov    0x000008(%esp),%ax
		sar    $0x000010,%edx
		call   _025900_func
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c

	_025e93_jump:
		call   _025ca0_case
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_025ea4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    _0dd650_data,%esi
		mov    0x00000d(%esi),%ah
		mov    0x000020(%esi),%ecx
		cmp    $0x000001,%ah
		jne    _026046_jump
		cmpw   $0x000000,0x00000a(%esi)
		jl     _025ed5_jump
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		mov    %eax,0x00000c(%esp)
		jmp    _025ee7_jump

	_025ed5_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000008(%esi),%dx
		mov    0x000006(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x00000c(%esp)

	_025ee7_jump:
		mov    _0dd652_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    (%esi),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0dd654_data,%edx
		mov    %al,0x000038(%esp)
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000001(%esi),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %al,0x000024(%esp)
		mov    _0dd658_data,%eax
		sar    $0x000010,%eax
		xor    %bl,%bl
		sub    $0x000064,%eax
		mov    %bl,0x000034(%esp)
		mov    %eax,0x000010(%esp)

	_025f2d_jump:
		mov    _0dd656_data,%ebp
		xor    %dl,%dl
		sar    $0x000010,%ebp
		mov    %dl,0x000030(%esp)
		sub    $0x0000a0,%ebp

	_025f42_jump:
		mov    0x000002(%ecx),%edi
		movswl (%ecx),%edx
		sar    $0x000010,%edi
		shl    $0x000009,%edx
		add    $0x000200,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    (%ecx),%edx
		sar    $0x000010,%edx
		shl    $0x000009,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%edi
		mov    %ebp,%edx
		mov    0x00000c(%esp),%eax
		sub    %ebx,%edx
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000008(%esi),%ax
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		add    $0x0000a0,%ebx
		mov    0x000010(%esp),%edx
		add    %ebx,%eax
		mov    0x00000c(%esp),%ebx
		sub    %edi,%edx
		imul   %ebx,%edx
		mov    %ax,0x000006(%ecx)
		mov    %edx,%eax
		xor    %ebx,%ebx
		sar    $0x00001f,%edx
		mov    0x000008(%esi),%bx
		idiv   %ebx
		add    $0x00000a,%ecx
		add    $0x000064,%edi
		mov    0x000030(%esp),%dh
		add    %edi,%eax
		inc    %dh
		mov    %ax,-0x000002(%ecx)
		xor    %eax,%eax
		mov    %dh,0x000030(%esp)
		mov    0x000038(%esp),%al
		mov    (%esi),%bl
		add    %eax,%ebp
		cmp    %bl,%dh
		jbe    _025f42_jump
		mov    0x000010(%esp),%edx
		mov    0x000034(%esp),%bh
		xor    %eax,%eax
		inc    %bh
		mov    0x000024(%esp),%al
		mov    %bh,0x000034(%esp)
		add    %eax,%edx
		mov    0x000001(%esi),%ah
		mov    %edx,0x000010(%esp)
		cmp    %ah,%bh
		jbe    _025f2d_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _026009_jump
		neg    %eax

	_026009_jump:
		mov    0x000006(%esi),%di
		add    %eax,%edi
		mov    0x000008(%esi),%dx
		mov    %di,0x000006(%esi)
		cmp    %dx,%di
		jbe    _026356_jump
		cmpw   $0x000000,0x00000a(%esi)
		jge    _026030_jump
		movb   $0x000002,0x00000d(%esi)
		jmp    _026356_jump

	_026030_jump:
		movw   $0x000000,0x000006(%esi)
		mov    0x000006(%esi),%bx
		mov    %ebx,%eax
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026046_jump:
		cmp    $0x000002,%ah
		jne    _026093_jump
		movw   $0x0000a0,0x000028(%esi)
		movw   $0x000064,0x00002a(%esi)
		movw   $0x000008,0x00002c(%esi)
		movw   $0x00000a,0x00002e(%esi)
		movb   $0x000000,0x000034(%esi)
		movb   $0x000000,0x000035(%esi)
		movb   $0x000000,0x000036(%esi)
		movw   $0x000000,0x000030(%esi)
		movw   $0x000000,0x000032(%esi)
		movb   $0x000000,0x00000d(%esi)
		movw   $0x000000,0x000006(%esi)
		movw   $0x0003e8,0x000008(%esi)
		movb   $0x000000,0x000037(%esi)
		movb   $0x000000,0x000038(%esi)

	_026093_jump:
		cmpb   $0x000000,0x000036(%esi)
		je     _0260ac_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0260a5_jump
		neg    %eax

	_0260a5_jump:
		shl    $0x000002,%eax
		add    %ax,0x000032(%esi)

	_0260ac_jump:
		xor    %eax,%eax
		mov    0x00000c(%esi),%al
		mov    $0x000140,%edx
		add    $0x000004,%eax
		sub    %eax,%edx
		mov    0x00002e(%esi),%bx
		mov    %edx,%eax
		xor    %edx,%edx
		inc    %ebx
		mov    0x000028(%esi),%dx
		mov    %bx,0x00002e(%esi)
		cmp    %eax,%edx
		jle    _0260f6_jump
		cmpb   $0x000000,0x000035(%esi)
		jne    _0260f6_jump
		mov    0x00002c(%esi),%ax
		neg    %eax
		inc    %eax
		mov    %ax,0x00002c(%esi)
		mov    0x000038(%esi),%al
		movb   $0x000001,0x000035(%esi)
		test   %al,%al
		je     _0260f0_jump
		movb   $0x000001,0x000037(%esi)

	_0260f0_jump:
		movb   $0x000001,0x000038(%esi)
		jmp    _026140_jump

	_0260f6_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x00000c(%esi),%al
		mov    0x000028(%esi),%dx
		add    $0x000004,%eax
		cmp    %eax,%edx
		jge    _02611f_jump
		cmpb   $0x000000,0x000035(%esi)
		jne    _02611f_jump
		mov    0x00002c(%esi),%ax
		neg    %eax
		movb   $0x000001,0x000035(%esi)
		dec    %eax
		mov    %ax,0x00002c(%esi)
		jmp    _026140_jump

	_02611f_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00000c(%esi),%dl
		mov    0x000028(%esi),%ax
		add    $0x000004,%edx
		cmp    %edx,%eax
		jg     _02613c_jump
		mov    $0x000140,%ebx
		sub    %edx,%ebx
		cmp    %ebx,%eax
		jge    _026140_jump

	_02613c_jump:
		movb   $0x000000,0x000035(%esi)

	_026140_jump:
		xor    %eax,%eax
		mov    0x00000c(%esi),%al
		mov    $0x0000c8,%edx
		add    $0x000003,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		xor    %edx,%edx
		mov    0x00002a(%esi),%dx
		cmp    %eax,%edx
		jle    _026180_jump
		cmpb   $0x000000,0x000034(%esi)
		jne    _026180_jump
		cmpb   $0x000000,0x000037(%esi)
		jne    _026180_jump
		mov    0x00002e(%esi),%ax
		movb   $0x000001,0x000034(%esi)
		neg    %eax
		movb   $0x000001,0x000036(%esi)
		add    $0x000002,%eax
		mov    %ax,0x00002e(%esi)
		jmp    _0261b3_jump

	_026180_jump:
		xor    %edx,%edx
		mov    0x00000c(%esi),%dl
		mov    $0x0000c8,%eax
		lea    0x000003(%edx),%ebx
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002a(%esi),%ax
		cmp    %ebx,%eax
		jg     _0261a1_jump
		movb   $0x000000,0x000034(%esi)
		jmp    _0261b3_jump

	_0261a1_jump:
		add    $0x0000cb,%edx
		cmp    %edx,%eax
		jl     _0261b3_jump
		mov    0x000008(%esi),%ax
		mov    %ax,0x000006(%esi)

	_0261b3_jump:
		mov    0x00002a(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0261d4_jump
		neg    %eax

	_0261d4_jump:
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ax
		add    %edx,%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%edx
		mov    %ax,0x000028(%esi)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _026204_jump
		neg    %eax

	_026204_jump:
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x00002a(%esi),%ax
		add    %edx,%eax
		mov    %ax,0x00002a(%esi)
		lea    0x000020(%esp),%ebx
		mov    0x00002e(%esi),%eax
		lea    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		call   _05bdcc_func
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000008(%esp)
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000020(%esp),%ebx
		mov    %eax,0x000018(%esp)
		mov    0x000030(%esi),%eax
		lea    0x00001c(%esp),%edx
		sar    $0x000010,%eax
		call   _05bdcc_func
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000014(%esp)
		mov    0x00001e(%esp),%eax
		xor    %dh,%dh
		sar    $0x000010,%eax
		mov    %dh,0x00002c(%esp)
		mov    %eax,0x000004(%esp)

	_02626b_jump:
		xor    %dl,%dl
		mov    %dl,0x000028(%esp)

	_026271_jump:
		mov    0x000014(%esp),%ebx
		movswl (%ecx),%eax
		imul   %eax,%ebx
		mov    (%ecx),%edx
		mov    0x000004(%esp),%ebp
		sar    $0x000010,%edx
		imul   %edx,%ebp
		add    %ebp,%ebx
		imul   0x000004(%esp),%eax
		imul   0x000014(%esp),%edx
		mov    0x000002(%ecx),%edi
		sar    $0x000010,%edi
		neg    %edi
		sub    %edx,%eax
		mov    0x000008(%esp),%edx
		imul   %edi,%edx
		sar    $0x000009,%eax
		mov    %edx,(%esp)
		mov    0x000018(%esp),%edx
		imul   %eax,%edx
		add    (%esp),%edx
		imul   0x000018(%esp),%edi
		imul   0x000008(%esp),%eax
		sub    %eax,%edi
		sar    $0x000009,%edi
		mov    %edx,%eax
		add    $0x000200,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		movzwl 0x000028(%esi),%ebp
		mov    %ebx,%edx
		add    %ebp,%eax
		sar    $0x00001f,%edx
		mov    %ax,0x000006(%ecx)
		mov    %ebx,%eax
		idiv   %edi
		movzwl 0x00002a(%esi),%ebp
		add    $0x00000a,%ecx
		add    %ebp,%eax
		mov    0x000028(%esp),%dh
		mov    %ax,-0x000002(%ecx)
		inc    %dh
		mov    (%esi),%bl
		mov    %dh,0x000028(%esp)
		cmp    %bl,%dh
		jbe    _026271_jump
		mov    0x00002c(%esp),%bh
		inc    %bh
		mov    0x000001(%esi),%ah
		mov    %bh,0x00002c(%esp)
		cmp    %ah,%bh
		jbe    _02626b_jump
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _026325_jump
		neg    %eax

	_026325_jump:
		mov    0x000030(%esi),%dx
		add    %eax,%eax
		add    %eax,%edx
		mov    0x000008(%esi),%eax
		sar    $0x000010,%eax
		mov    %dx,0x000030(%esi)
		test   %eax,%eax
		jge    _02633d_jump
		neg    %eax

	_02633d_jump:
		mov    0x000006(%esi),%bx
		add    %eax,%ebx
		mov    0x000008(%esi),%cx
		mov    %bx,0x000006(%esi)
		cmp    %cx,%bx
		jbe    _026356_jump
		movw   $0x000000,0x000006(%esi)

	_026356_jump:
		mov    0x000006(%esi),%bx
		mov    %ebx,%eax
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026368_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    _0dd650_data,%eax
		xor    %edi,%edi
		mov    %eax,0x00000c(%esp)
		mov    0x000020(%eax),%ecx
		mov    0x000002(%eax),%bx
		mov    0x000024(%eax),%edx
		test   %bx,%bx
		jbe    _0264aa_jump
		lea    0x000008(%edx),%ebx

	_026392_jump:
		xor    %eax,%eax
		mov    (%edx),%ax
		imul   $0x00000a,%eax,%eax
		mov    0x000004(%ecx,%eax,1),%esi
		mov    0x000006(%ecx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000020(%esp)
		xor    %eax,%eax
		mov    0x000006(%edx),%ax
		imul   $0x00000a,%eax,%eax
		sar    $0x000010,%esi
		mov    %esi,0x000014(%esp)
		lea    (%ecx,%eax,1),%esi
		mov    0x000004(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000024(%esp)
		xor    %eax,%eax
		mov    0x000004(%edx),%ax
		imul   $0x00000a,%eax,%eax
		mov    0x000004(%ecx,%eax,1),%ebp
		mov    0x000006(%ecx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00001c(%esp)
		xor    %eax,%eax
		mov    0x000002(%edx),%ax
		imul   $0x00000a,%eax,%eax
		sar    $0x000010,%ebp
		dec    %ebp
		mov    %ebp,0x000018(%esp)
		mov    0x000004(%ecx,%eax,1),%ebp
		sar    $0x000010,%ebp
		mov    0x000006(%esi),%esi
		dec    %ebp
		sar    $0x000010,%esi
		mov    %ebp,0x000010(%esp)
		mov    0x000014(%esp),%ebp
		mov    0x000006(%ecx,%eax,1),%eax
		sub    0x000018(%esp),%ebp
		sar    $0x000010,%eax
		mov    %ebp,0x000004(%esp)
		mov    %esi,%ebp
		sub    %eax,%ebp
		mov    %ebp,(%esp)
		mov    0x000004(%esp),%ebp
		imul   (%esp),%ebp
		mov    %ebp,0x000004(%esp)
		mov    0x000020(%esp),%ebp
		sub    0x00001c(%esp),%ebp
		mov    %ebp,(%esp)
		mov    0x000024(%esp),%ebp
		sub    0x000010(%esp),%ebp
		mov    %ebp,0x000008(%esp)
		mov    (%esp),%ebp
		imul   0x000008(%esp),%ebp
		mov    %ebp,0x000008(%esp)
		mov    0x000004(%esp),%ebp
		cmp    0x000008(%esp),%ebp
		jge    _026492_jump
		mov    %esi,0x000018(%edx)
		mov    0x000014(%esp),%ebp
		mov    %eax,0x000028(%edx)
		mov    0x000018(%esp),%esi
		mov    %ebp,0x00000c(%edx)
		mov    0x000020(%esp),%ebp
		mov    %esi,0x00001c(%edx)
		mov    0x00001c(%esp),%esi
		mov    %ebp,0x000010(%edx)
		mov    0x000024(%esp),%ebp
		mov    %esi,0x000020(%edx)
		mov    0x000010(%esp),%esi
		mov    %ebp,0x000014(%edx)
		mov    0x00000c(%esp),%eax
		mov    %esi,0x000024(%edx)
		mov    %ebx,%esi
		mov    0x000014(%eax),%eax
		call   _010045_func

	_026492_jump:
		mov    0x00000c(%esp),%eax
		add    $0x000034,%ebx
		inc    %edi
		mov    0x000002(%eax),%si
		add    $0x000034,%edx
		cmp    %si,%di
		jb     _026392_jump

	_0264aa_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0264c0_func:
		mov    _095fa0_data,%al
		ret    



_0264d0_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_095fa0_data
		je     _026512_jump
		mov    $0x000016,%edx
		mov    _0cec74_data,%ax
		mov    $0x000001,%ebx
		mov    %ax,_0dd708_data
		mov    %dx,_0cec74_data
		mov    _0cec82_data,%ax
		mov    %bx,_0cecd4_data
		mov    %ax,_0dd706_data
		mov    %bx,_0cec82_data

	_026512_jump:
		pop    %edx
		pop    %ebx
		ret    



_026518_func:
		xor    %ah,%ah
		mov    %ah,_095f9d_data
		ret    



_026524_func:
		mov    _0dd708_data,%ax
		mov    %ax,_0cec74_data
		mov    _0dd706_data,%ax
		mov    %ax,_0cec82_data
		ret    



_026540_func:
		push   %edx
		mov    $0x000007,%edx
		xor    %ah,%ah
		mov    %dx,_0cecd4_data
		mov    %ah,_095fa0_data
		pop    %edx
		ret    



_026558_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _095f86_data,%dx
		mov    _095f88_data,%cl
		mov    _095f8a_data,%si
		mov    _095f8c_data,%di
		test   %dx,%dx
		jge    _026582_jump
		add    $0x000048,%edx
		jmp    _02658b_jump

	_026582_jump:
		cmp    $0x000048,%dx
		jle    _02658b_jump
		sub    $0x000048,%edx

	_02658b_jump:
		mov    $0x000012,%ebx
		movswl %dx,%eax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jl     _0265c3_jump
		movswl %dx,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _095d02_data(%eax),%si
		mov    _095d04_data(%eax),%ax
		mov    %eax,%edi
		jmp    _026664_jump

	_0265c3_jump:
		mov    $0x000024,%ebx
		sub    %edx,%ebx
		test   %bx,%bx
		jl     _0265f8_jump
		movswl %bx,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _095d02_data(%eax),%si
		mov    _095d04_data(%eax),%ax
		neg    %esi
		mov    %eax,%edi
		jmp    _026664_jump

	_0265f8_jump:
		mov    $0x000036,%ebx
		sub    %eax,%ebx
		test   %ebx,%ebx
		jl     _026631_jump
		mov    %edx,%eax
		sub    $0x000024,%eax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    %cl,%bl
		add    %eax,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    _095d02_data(%eax),%si
		mov    _095d04_data(%eax),%ax
		mov    %eax,%edi
		neg    %esi
		jmp    _026662_jump

	_026631_jump:
		mov    $0x000048,%eax
		sub    %edx,%eax
		test   %ax,%ax
		jl     _026664_jump
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		add    %ebx,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _095d02_data(%eax),%si
		mov    _095d04_data(%eax),%ax
		mov    %eax,%edi

	_026662_jump:
		neg    %edi

	_026664_jump:
		mov    %di,_095f8c_data
		mov    %si,_095f8a_data
		mov    %cl,_095f88_data
		mov    %dx,_095f86_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026688_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_095f86_data
		mov    %ah,_095f88_data
		mov    %dx,_095f8c_data
		mov    %dx,_095f8a_data
		pop    %edx
		ret    



_0266b8_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000012,%edx
		xor    %ah,%ah
		mov    %dx,_095f86_data
		mov    %ah,_095f88_data
		call   _026558_func
		pop    %edx
		ret    



_0266e4_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    _095f88_data,%ah
		inc    %ah
		mov    %ah,_095f88_data
		cmp    $0x000007,%ah
		jbe    _02670d_jump
		movb   $0x000007,_095f88_data

	_02670d_jump:
		call   _026558_func
		pop    %edx
		ret    



_026714_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000024,%eax
		mov    _095f86_data,%dx
		sub    %edx,%eax
		mov    %ax,_095f86_data
		call   _026558_func
		pop    %edx
		ret    



_026740_func:
		push   %edx
		movw   $0x000000,0x000042(%eax)
		mov    0x000042(%eax),%dx
		mov    %dx,0x000040(%eax)
		mov    $0x000048,%eax
		mov    _095f86_data,%dx
		sub    %edx,%eax
		mov    %ax,_095f86_data
		call   _026558_func
		pop    %edx
		ret    



_02676c_func:
		push   %ecx
		mov    %eax,%ecx
		movswl %dx,%eax
		movswl %bx,%edx
		mov    %eax,0x000028(%ecx)
		mov    %edx,0x00002c(%ecx)
		mov    $0x000008,%cl
		shl    %cl,%eax
		mov    $0x000008,%cl
		mov    %eax,_095f90_data
		mov    %edx,%eax
		shl    %cl,%eax
		mov    %eax,_095f94_data
		pop    %ecx
		ret    



_02680c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _095f9e_data,%cl
		xor    %ebx,%ebx
		xor    %eax,%eax
		cmp    $0x000005,%cl
		ja     _02682a_jump
		cmpb   $0x000000,_095f9f_data
		je     _026865_jump

	_02682a_jump:
		cmpb   $0x000005,_095f9e_data
		jbe    _02683b_jump
		xor    %ah,%ah
		mov    %ah,_095f9e_data

	_02683b_jump:
		mov    $0x000101,%eax
		call   _0690e0_func
		xor    %cl,%cl
		mov    %eax,%ebx
		mov    $0x000101,%eax
		sub    $0x000080,%ebx
		call   _0690e0_func
		sub    $0x000080,%eax
		mov    %cl,_095f9f_data

	_026865_jump:
		mov    _095f88_data,%ecx
		movswl %bx,%ebx
		sar    $0x000010,%ecx
		add    %ecx,%ebx
		mov    _095f90_data,%ecx
		add    %ebx,%ecx
		mov    _095f8a_data,%ebx
		cwtl   
		sar    $0x000010,%ebx
		mov    _095f94_data,%esi
		add    %ebx,%eax
		mov    %ecx,_095f90_data
		add    %eax,%esi
		mov    %ecx,%eax
		mov    $0x000008,%cl
		mov    %esi,_095f94_data
		test   %eax,%eax
		je     _0268a7_jump
		sar    %cl,%eax
		jmp    _0268ad_jump

	_0268a7_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_0268ad_jump:
		cwtl   
		mov    $0x000008,%cl
		mov    %eax,0x000028(%edx)
		mov    _095f94_data,%eax
		test   %eax,%eax
		je     _0268c0_jump
		sar    %cl,%eax
		jmp    _0268c6_jump

	_0268c0_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_0268c6_jump:
		cwtl   
		mov    %eax,0x00002c(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0268d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x000013,%eax
		call   _0690e0_func
		mov    %al,%cl
		xor    %ah,%ah

	_0268e1_jump:
		mov    %ah,%al
		add    %cl,%al
		cmp    $0x000014,%al
		jb     _0268eb_jump
		sub    $0x000014,%al

	_0268eb_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0dd666_data(,%edx,8),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0cc1f0_data,%edx
		add    %ebx,%edx
		cmp    _095cd0_data,%al
		je     _026948_jump
		mov    0x000050(%edx),%bx
		cmp    $0x000002,%bx
		je     _026925_jump
		cmp    $0x000001,%bx
		je     _026925_jump
		cmp    $0x000003,%bx
		jne    _026948_jump

	_026925_jump:
		mov    $0x000002,%bh
		movb   $0x00000a,0x000076(%edx)
		mov    %al,_095cd0_data
		mov    0x000050(%edx),%al
		mov    %bh,_095ccf_data
		mov    %al,_095cd1_data
		movw   $0x000006,0x000050(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_026948_jump:
		inc    %ah
		cmp    $0x000014,%ah
		jb     _0268e1_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026954_func:
		push   %edx
		cmpb   $0x000005,_095cd3_data
		jb     _02697c_jump
		mov    _095ccf_data,%dl
		cmp    $0x000001,%dl
		jne    _026970_jump
		call   _0268d0_func
		pop    %edx
		ret    

	_026970_jump:
		cmp    $0x000002,%dl
		je     _02697c_jump
		movb   $0x000001,_095ccf_data

	_02697c_jump:
		pop    %edx
		ret    

_026980_switch:
		.long   _026a53_case
		.long   _026a4e_case
		.long   _026a58_case
		.long   _026a62_case
		.long   _026a5d_case
		.long   _026a6c_case
		.long   _026a6c_case
		.long   _026a6c_case
		.long   _026a6c_case
		.long   _026a6c_case
		.long   _026a6c_case
		.long   _026a67_case




_0269b0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		mov    %ecx,%ebp
		mov    %edx,%eax
		mov    0x000020(%esp),%edx
		mov    0x000004(%esi),%ebx
		mov    0x000020(%ebx),%cx
		and    $0x00003f,%ch
		mov    %ecx,0x000008(%esp)
		xor    %ecx,%ecx
		mov    0x000008(%esp),%cx
		mov    %ecx,(%esp)
		mov    _095cf0_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,0x000004(%esp)
		mov    (%esp),%ecx
		imul   0x000004(%esp),%ecx
		add    $0x000018,%ebx
		cwtl   
		mov    (%ebx),%ebx
		shl    $0x000002,%ecx
		shl    $0x000002,%eax
		add    %ecx,%ebx
		add    %eax,%ebx
		xor    %ecx,%ecx
		mov    0x000003(%ebx),%al
		mov    %al,%cl
		mov    %al,0x00000c(%esp)
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		shl    $0x000002,%eax
		mov    (%esi),%ecx
		add    %ecx,%eax
		cmpb   $0x000000,0x00000c(%esp)
		je     _026a73_jump
		cmpb   $0x000000,0x000004(%eax)
		je     _026a73_jump
		xor    %ecx,%ecx
		mov    0x000001(%ebx),%cl
		mov    %cx,(%edi)
		mov    0x000002(%ebx),%bl
		xor    %bh,%bh
		mov    %bx,0x000000(%ebp)
		mov    0x000004(%eax),%al
		sub    $0x000027,%al
		cmp    $0x00000b,%al
		ja     _026a6c_case
		and    $0x0000ff,%eax
		jmp    *%cs:_026980_switch(,%eax,4)

	_026a4e_case:
		movb   $0x000002,(%edx)
		jmp    _026a6f_jump

	_026a53_case:
		movb   $0x000001,(%edx)
		jmp    _026a6f_jump

	_026a58_case:
		movb   $0x000003,(%edx)
		jmp    _026a6f_jump

	_026a5d_case:
		movb   $0x000004,(%edx)
		jmp    _026a6f_jump

	_026a62_case:
		movb   $0x000005,(%edx)
		jmp    _026a6f_jump

	_026a67_case:
		movb   $0x000007,(%edx)
		jmp    _026a6f_jump

	_026a6c_case:
		movb   $0x000000,(%edx)

	_026a6f_jump:
		mov    $0x000001,%al
		jmp    _026a75_jump

	_026a73_jump:
		xor    %al,%al

	_026a75_jump:
		xor    %ah,%ah
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

_026a80_switch:
		.long   _026ac0_case
		.long   _026ada_case
		.long   _026ae3_case
		.long   _026aec_case
		.long   _026af5_case
		.long   _026b07_case
		.long   _026b13_case
		.long   _026b0d_case




_026aa0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000050(%eax),%ax
		cmp    $0x000007,%ax
		ja     _026b59_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_026a80_switch(,%eax,4)

	_026ac0_case:
		mov    0x000081(%edx),%al
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%edx)
		jmp    _026b59_jump

	_026ada_case:
		movb   $0x000001,0x00006b(%edx)
		jmp    _026b59_jump

	_026ae3_case:
		movb   $0x000000,0x00006b(%edx)
		jmp    _026b59_jump

	_026aec_case:
		movb   $0x000002,0x00006b(%edx)
		jmp    _026b59_jump

	_026af5_case:
		cmpb   $0x000005,0x000076(%edx)
		ja     _026b01_jump
		movb   $0x000007,0x00006b(%edx)
		jmp    _026b59_jump

	_026b01_jump:
		movb   $0x000003,0x00006b(%edx)
		jmp    _026b59_jump

	_026b07_case:
		movb   $0x000004,0x00006b(%edx)
		jmp    _026b59_jump

	_026b0d_case:
		movb   $0x000005,0x00006b(%edx)
		jmp    _026b59_jump

	_026b13_case:
		mov    0x000004(%edx),%eax
		mov    0x000016(%eax),%ax
		and    $0x00ffff,%eax
		xor    %ebx,%ebx
		dec    %eax
		mov    0x00006b(%edx),%bl
		cmp    %eax,%ebx
		jne    _026b49_jump
		mov    0x000076(%edx),%bh
		movb   $0x000000,0x00006b(%edx)
		dec    %bh
		mov    %bh,0x000076(%edx)
		jne    _026b59_jump
		xor    %eax,%eax
		mov    _095cd1_data,%al
		mov    %ax,0x000050(%edx)
		call   _0268d0_func
		jmp    _026b59_jump

	_026b49_jump:
		mov    _0cee41_data,%ah
		cmp    $0x000001,%ah
		jne    _026b59_jump
		add    %ah,%bl
		mov    %bl,0x00006b(%edx)

	_026b59_jump:
		cmpw   $0x000000,0x000050(%edx)
		je     _026bbe_jump
		mov    0x000054(%edx),%eax
		sar    $0x000010,%eax
		mov    _0cecfe_data,%ebx
		mov    _0dd662_data(,%eax,8),%ecx
		mov    _095cf6_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		add    %eax,%ebx
		xor    %eax,%eax
		add    %ecx,%ebx
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		mov    0x000054(%edx),%eax
		mov    %ebx,0x000028(%edx)
		sar    $0x000010,%eax
		mov    _0cece8_data,%ebx
		mov    _0dd664_data(,%eax,8),%ecx
		mov    _095cf8_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		add    %eax,%ebx
		xor    %eax,%eax
		add    %ecx,%ebx
		mov    0x000069(%edx),%al
		sub    %eax,%ebx
		mov    %ebx,0x00002c(%edx)

	_026bbe_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026bc4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0cc1f0_data,%esi
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _026c72_jump

	_026be6_jump:
		cmpw   $0x00000b,0x000060(%esi)
		jne    _026c62_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _026c62_jump
		mov    %esp,%edx
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		lea    0x000010(%esp),%edx
		call   _01d294_func
		movb   $0x000000,0x00006b(%esi)
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    0x000081(%esi),%ah
		mov    0x000006(%esp),%ebx
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%esi)
		add    %edx,%ebx
		xor    %edx,%edx
		or     $0x000004,%ah
		mov    0x000069(%esi),%dl
		mov    %ah,0x000081(%esi)
		sub    %edx,%ebx
		mov    %esi,%eax
		mov    %ebx,0x00002c(%esi)
		call   _01f304_func
		jmp    _026c72_jump

	_026c62_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _026be6_jump

	_026c72_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_026c7c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %bl,(%esp)
		mov    %cl,0x000004(%esp)
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _026d54_jump

	_026ca3_jump:
		cmp    0x000060(%ecx),%dx
		jne    _026d44_jump
		mov    0x000024(%ecx),%edi
		test   %edi,%edi
		jne    _026d44_jump
		mov    0x000028(%esi),%ebp
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%dl
		mov    0x000068(%ecx),%bl
		add    %ebp,%edx
		sub    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x000028(%ecx)
		xor    %edx,%edx
		mov    0x00002c(%esi),%eax
		mov    0x000069(%esi),%dl
		mov    0x000069(%ecx),%bl
		add    %eax,%edx
		mov    %ecx,%eax
		sub    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x00002c(%ecx)
		xor    %edx,%edx
		mov    0x000004(%esp),%bl
		mov    (%esp),%dl
		call   _01d374_func
		mov    0x000081(%ecx),%ah
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebx
		mov    0x000068(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		add    %ebx,%edx
		mov    _0cece8_data,%ebx
		movw   $0x000000,0x000040(%ecx)
		sar    $0x000010,%ebx
		or     $0x000004,%ah
		sub    %ebx,%edx
		mov    %ah,0x000081(%ecx)
		cmp    $0x000064,%edx
		setl   %al
		movb   $0x000001,0x00007e(%ecx)
		movw   $0x000000,0x00005e(%ecx)
		xor    %ah,%ah
		mov    %edi,0x000030(%ecx)
		inc    %eax
		mov    %ax,0x000042(%ecx)
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_026d44_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jl     _026ca3_jump

	_026d54_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_026d5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    $0x000001,%ah
		mov    _0ce3a3_data,%dl
		mov    %ah,_095ccf_data
		cmp    $0x000004,%dl
		je     _026d80_jump
		mov    $0x000052,%edx
		mov    $0x000006,%bl
		mov    $0x000002,%al
		jmp    _026dc5_jump

	_026d80_jump:
		mov    _0cdb20_data,%eax
		mov    0x00006e(%eax),%dh
		cmp    $0x000001,%dh
		je     _026d97_jump
		cmp    $0x000003,%dh
		je     _026d97_jump
		cmp    $0x000005,%dh
		jne    _026da2_jump

	_026d97_jump:
		mov    $0x00005f,%edx
		mov    $0x000005,%bl
		mov    $0x000007,%al
		jmp    _026dc5_jump

	_026da2_jump:
		cmp    $0x00000c,%dh
		je     _026db2_jump
		mov    $0x00005f,%edx
		mov    $0x000005,%bl
		mov    $0x00000e,%al
		jmp    _026dc5_jump

	_026db2_jump:
		mov    $0x0000a1,%edx
		mov    $0x000007,%eax
		mov    $0x000005,%bl
		call   _0690e0_func
		add    $0x000018,%al

	_026dc5_jump:
		xor    %ecx,%ecx
		mov    %al,%cl
		and    $0x0000ff,%ebx
		and    $0x00ffff,%edx
		mov    %esi,%eax
		call   _026c7c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_026de4_switch:
		.long   _026f60_case
		.long   _026f8c_case
		.long   _026fb8_case
		.long   _02700b_case
		.long   _027051_case
		.long   _026fb8_case
		.long   _027072_case




_026e00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		mov    _0ced00_data,%dx
		mov    0x000028(%eax),%ax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0cecea_data,%cx
		mov    0x000068(%ebp),%al
		xor    %bh,%bh
		add    %edx,%eax
		mov    %bh,0x000020(%esp)
		add    $0x000008,%eax
		mov    0x00002c(%ebp),%dx
		mov    %ax,0x00001c(%esp)
		xor    %eax,%eax
		sub    %ecx,%edx
		mov    0x000069(%ebp),%al
		mov    %bh,_0dd724_data
		add    %eax,%edx
		xor    %bl,%bl
		mov    %dx,0x000008(%esp)

	_026e52_jump:
		cmpb   $0x000001,_0dd724_data
		jae    _0271db_jump
		xor    %edx,%edx
		mov    %bl,%dl
		mov    _0dd666_data(,%edx,8),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc1f0_data,%ecx
		add    %ecx,%edx
		cmpw   $0x000000,0x000050(%edx)
		je     _0271d0_jump
		cmp    _095cf0_data,%bl
		je     _0271d0_jump
		mov    _0ced00_data,%di
		xor    %ecx,%ecx
		mov    0x000028(%edx),%ax
		mov    0x000068(%edx),%cl
		sub    %edi,%eax
		add    %eax,%ecx
		add    $0x000008,%ecx
		movswl %cx,%eax
		mov    0x00001a(%esp),%ecx
		sar    $0x000010,%ecx
		sub    %eax,%ecx
		mov    %cx,0x000014(%esp)
		mov    0x000012(%esp),%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _026ec9_jump
		neg    %eax

	_026ec9_jump:
		mov    %eax,%esi
		mov    %eax,0x00000c(%esp)
		cmp    $0x000015,%ax
		jg     _0271d0_jump
		mov    _0cecea_data,%ax
		mov    0x00002c(%edx),%cx
		sub    %eax,%ecx
		mov    %ecx,0x000004(%esp)
		xor    %ecx,%ecx
		mov    0x000004(%esp),%eax
		mov    0x000069(%edx),%cl
		add    %eax,%ecx
		mov    0x000006(%esp),%eax
		movswl %cx,%ecx
		sar    $0x000010,%eax
		sub    %ecx,%eax
		mov    %ax,0x000018(%esp)
		mov    0x000016(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _026f14_jump
		neg    %eax

	_026f14_jump:
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    %eax,0x000010(%esp)
		cmp    $0x000015,%si
		jg     _0271d0_jump
		imul   %edi,%edi
		imul   %ecx,%ecx
		mov    _095f98_data,%esi
		add    %edi,%ecx
		cmp    %esi,%ecx
		jg     _0271d0_jump
		mov    0x000050(%edx),%ax
		dec    %eax
		mov    %bl,_095cf0_data
		cmp    $0x000006,%ax
		ja     _0270a9_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_026de4_switch(,%eax,4)

	_026f60_case:
		movw   $0x000002,0x000050(%edx)
		xor    %dl,%dl
		mov    %dl,_095f9e_data
		mov    _095cd3_data,%dh
		mov    $0x0000c1,%eax
		inc    %dh
		mov    %ax,_095ccc_data
		mov    %dh,_095cd3_data
		jmp    _0270a9_jump

	_026f8c_case:
		xor    %al,%al
		mov    $0x0000c1,%edi
		mov    %al,_095f9e_data
		mov    _095cd3_data,%ah
		movw   $0x000003,0x000050(%edx)
		inc    %ah
		mov    %di,_095ccc_data
		mov    %ah,_095cd3_data
		jmp    _0270a9_jump

	_026fb8_case:
		mov    %edx,%eax
		call   _0772d8_func
		mov    _095cd3_data,%cl
		mov    _095cd2_data,%ah
		inc    %cl
		dec    %ah
		mov    %cl,_095cd3_data
		mov    0x000050(%edx),%cx
		mov    %ah,_095cd2_data
		cmp    $0x000006,%cx
		jne    _026fec_jump
		mov    %edx,%eax
		call   _026d5c_func

	_026fec_jump:
		mov    $0x00000e,%esi
		xor    %ch,%ch
		movw   $0x000000,0x000050(%edx)
		mov    %ch,_095f9e_data
		mov    %si,_095ccc_data
		jmp    _0270a9_jump

	_02700b_case:
		movw   $0x0000d6,_095ccc_data
		mov    _095f9e_data,%ah
		inc    %ah
		mov    0x000076(%edx),%cl
		mov    %ah,_095f9e_data
		dec    %cl
		mov    %cl,0x000076(%edx)
		jne    _0270a9_jump
		mov    %edx,%eax
		call   _0772d8_func
		movw   $0x000000,0x000050(%edx)
		mov    $0x00000e,%edx
		mov    %cl,_095f9e_data
		mov    %dx,_095ccc_data
		jmp    _0270a9_jump

	_027051_case:
		mov    %ebp,%eax
		call   _0266e4_func
		mov    _095f9e_data,%al
		mov    $0x000036,%edi
		inc    %al
		mov    %di,_095ccc_data
		mov    %al,_095f9e_data
		jmp    _0270a9_jump

	_027072_case:
		mov    $0x000001,%edx
		mov    $0x000036,%ecx
		mov    _095cfa_data,%si
		mov    %dx,_095cf6_data
		mov    %cx,_095ccc_data
		mov    _095f9e_data,%ch
		sub    $0x000005,%esi
		inc    %ch
		mov    %si,_095cfa_data
		mov    %ch,_095f9e_data

	_0270a9_jump:
		xor    %eax,%eax
		mov    _0dd724_data,%al
		xor    %cl,%cl
		mov    %cl,_0dd660_data(,%eax,8)
		mov    0x000010(%esp),%edx
		mov    %cl,_0dd661_data(,%eax,8)
		cmp    0x00000c(%esp),%dx
		jg     _02712a_jump
		mov    _095f88_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _0270e1_jump
		mov    $0x000001,%eax
		jg     _0270e1_jump
		neg    %eax

	_0270e1_jump:
		mov    %eax,%edx
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _0270f8_jump
		mov    $0x000001,%eax
		jg     _0270f8_jump
		neg    %eax

	_0270f8_jump:
		cmp    %eax,%edx
		jne    _027118_jump
		mov    $0x000001,%dh
		mov    0x000020(%esp),%cl
		xor    %eax,%eax
		add    %dh,%cl
		mov    _0dd724_data,%al
		mov    %cl,0x000020(%esp)
		mov    %dh,_0dd661_data(,%eax,8)
		jmp    _02712a_jump

	_027118_jump:
		xor    %eax,%eax
		mov    $0x000001,%dl
		mov    _0dd724_data,%al
		add    %dl,%bh
		mov    %dl,_0dd660_data(,%eax,8)

	_02712a_jump:
		mov    0x00000c(%esp),%eax
		cmp    0x000010(%esp),%ax
		jg     _02718e_jump
		mov    _095f8a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _02714b_jump
		mov    $0x000001,%eax
		jg     _02714b_jump
		neg    %eax

	_02714b_jump:
		mov    %eax,%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _027162_jump
		mov    $0x000001,%eax
		jg     _027162_jump
		neg    %eax

	_027162_jump:
		cmp    %eax,%edx
		jne    _02717a_jump
		xor    %eax,%eax
		mov    $0x000001,%dl
		mov    _0dd724_data,%al
		add    %dl,%bh
		mov    %dl,_0dd660_data(,%eax,8)
		jmp    _02718e_jump

	_02717a_jump:
		xor    %eax,%eax
		mov    _0dd724_data,%al
		mov    $0x000001,%ch
		mov    %ch,_0dd661_data(,%eax,8)
		add    %ch,0x000020(%esp)

	_02718e_jump:
		xor    %eax,%eax
		mov    _0dd724_data,%al
		mov    0x000014(%esp),%edx
		mov    %dx,_0dd65c_data(,%eax,8)
		mov    0x000018(%esp),%edx
		mov    %dx,_0dd65e_data(,%eax,8)
		mov    %al,%dh
		mov    %bl,_0dd662_data(,%eax,8)
		inc    %dh
		mov    _095f9c_data,%bl
		mov    %dh,_0dd724_data
		cmp    %bl,%dh
		jbe    _0271db_jump
		mov    %dh,_095f9c_data
		jmp    _0271db_jump

	_0271d0_jump:
		inc    %bl
		cmp    $0x000014,%bl
		jb     _026e52_jump

	_0271db_jump:
		cmpb   $0x000000,_0dd724_data
		je     _02720a_jump
		test   %bh,%bh
		je     _0271ef_jump
		mov    %ebp,%eax
		call   _026714_func

	_0271ef_jump:
		cmpb   $0x000000,0x000020(%esp)
		je     _0271fd_jump
		mov    %ebp,%eax
		call   _026740_func

	_0271fd_jump:
		mov    _095cca_data,%eax
		sar    $0x000010,%eax
		call   _06fa30_func

	_02720a_jump:
		mov    _0dd724_data,%al
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02721c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,0x000008(%esp)
		mov    %esi,%eax
		call   _01db8c_func
		xor    %eax,%eax
		mov    0x000036(%esi),%dx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sub    $0x000008,%eax
		mov    0x000038(%esi),%bx
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    $0x00002e,%edx
		mov    0x000069(%esi),%al
		mov    %dx,0x000004(%esp)
		add    %eax,%ebx
		mov    $_0cda94_data,%eax
		mov    $0x000002,%edx
		call   _01db8c_func
		movzbw _0cdafc_data,%di
		mov    _0cdaca_data,%cx
		sub    $0x000008,%ebx
		add    %ecx,%edi
		mov    _0cdb01_data,%cl
		mov    _0cdacc_data,%ax
		test   %cl,%cl
		jne    _027296_jump
		cmpb   $0x000004,_0cdb00_data
		je     _0272a9_jump

	_027296_jump:
		mov    _0cdb01_data,%cl
		cmp    $0x000001,%cl
		jne    _0272c7_jump
		cmp    _0cdb00_data,%cl
		jne    _0272c7_jump

	_0272a9_jump:
		mov    _095cf0_data,%cl
		sub    $0x000016,%edi
		add    $0x000020,%eax
		cmp    $0x000019,%cl
		je     _027321_jump
		movb   $0x000019,0x000008(%esp)
		jmp    _027321_jump

	_0272c7_jump:
		cmpb   $0x000000,_0cdb01_data
		jne    _0272d9_jump
		cmpb   $0x000014,_0cdb00_data
		je     _0272fd_jump

	_0272d9_jump:
		cmpb   $0x000003,_0cdb01_data
		jne    _0272eb_jump
		cmpb   $0x000011,_0cdb00_data
		je     _0272fd_jump

	_0272eb_jump:
		cmpb   $0x000003,_0cdb01_data
		jne    _027321_jump
		cmpb   $0x000012,_0cdb00_data
		jne    _027321_jump

	_0272fd_jump:
		mov    0x000004(%esp),%ecx
		add    $0x000020,%ecx
		sub    $0x000026,%edi
		mov    %cx,0x000004(%esp)
		mov    _095cf0_data,%cl
		add    $0x00004a,%eax
		cmp    $0x00001a,%cl
		je     _027321_jump
		movb   $0x00001a,0x000008(%esp)

	_027321_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _027434_jump
		movswl %dx,%edx
		push   %edx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		push   %edx
		cwtl   
		mov    $0x000010,%ecx
		push   %eax
		movswl %di,%eax
		movswl %bx,%edx
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _027434_jump
		cmpw   $0x000000,_095f8c_data
		jl     _027434_jump
		cmpb   $0x000005,_095cd2_data
		ja     _027387_jump
		cmpw   $0x000003,_095cf2_data
		je     _027387_jump
		movb   $0x000001,_095f88_data
		jmp    _02738e_jump

	_027387_jump:
		xor    %al,%al
		mov    %al,_095f88_data

	_02738e_jump:
		mov    (%esp),%eax
		add    $0x000010,%eax
		sub    %edi,%eax
		movswl %ax,%edx
		mov    %edx,%eax
		mov    0x000004(%esp),%ebx
		shl    $0x000004,%eax
		add    $0x00000f,%ebx
		sub    %edx,%eax
		mov    %bx,0x000004(%esp)
		lea    0x000000(,%eax,8),%edx
		mov    0x000002(%esp),%ebx
		neg    %edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x4062c000,%ecx
		xor    %ebx,%ebx
		call   _07b8f2_func
		call   _07b938_func
		mov    $0x9999999a,%ebx
		mov    $0x3fc99999,%ecx
		call   _07baef_func
		call   _07c13c_func
		mov    %ax,_095f86_data
		call   _026558_func
		mov    %esi,%eax
		call   _026bc4_func
		mov    $0x00002c,%eax
		mov    0x000008(%esp),%dl
		call   _06fa30_func
		cmp    $0x000019,%dl
		jne    _027423_jump
		mov    $0x000032,%ebx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func

	_027423_jump:
		mov    0x000008(%esp),%al
		xor    %dh,%dh
		mov    %al,_095cf0_data
		mov    %dh,_095f9e_data

	_027434_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027440_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _095cfa_data,%dx
		mov    _095cfe_data,%bx
		mov    _095cf6_data,%cx
		cmpb   $0x000001,_095cce_data
		jne    _0274b2_jump
		dec    %cx
		jne    _0274b2_jump
		add    %ebx,%edx
		mov    _0dd714_data,%bx
		mov    $0x0001f4,%ecx
		cmp    %bx,%dx
		jl     _027487_jump
		mov    %ebx,%edx
		xor    %ebx,%ebx
		mov    %bx,_095cfc_data
		jmp    _0274b2_jump

	_027487_jump:
		mov    _0dd712_data,%si
		cmp    %si,%dx
		jg     _0274a4_jump
		mov    $0x000001,%ebx
		xor    %eax,%eax
		mov    %esi,%edx
		mov    %ax,_095cfc_data
		jmp    _0274b2_jump

	_0274a4_jump:
		xor    %edi,%edi
		mov    $0x000001,%ebx
		mov    %di,_095cfc_data

	_0274b2_jump:
		mov    %cx,_095cf6_data
		mov    %bx,_095cfe_data
		mov    %dx,_095cfa_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0274d0_switch:
		.long   _02780a_case
		.long   _02780a_case
		.long   _02780a_case
		.long   _02781b_case
		.long   _02781f_case
		.long   _02781f_case
		.long   _027812_case




_0274ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		mov    $0xfffffec0,%edx
		mov    $0xffffff38,%ebx
		mov    $0x000140,%ecx
		mov    $0x0000c8,%esi
		xor    %ah,%ah
		mov    %edx,(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %esi,0x000010(%esp)
		mov    %ah,_095cce_data
		mov    %ah,_095ccf_data
		mov    $0x000014,%dh
		xor    %al,%al
		mov    %dh,_095cd0_data
		xor    %ebx,%ebx

	_027534_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %bx,_0dd664_data(,%edx,8)
		mov    %bx,_0dd666_data(,%edx,8)
		mov    %bl,_0dd66a_data(,%edx,8)
		inc    %al
		mov    %bx,_0dd668_data(,%edx,8)
		cmp    $0x000014,%al
		jb     _027534_jump
		mov    _0cc1f0_data,%edi
		mov    _0cc1f4_data,%ax
		movw   $0x000064,0x000056(%ebp)
		xor    %bl,%bl
		xor    %esi,%esi
		mov    %bl,0x00001c(%esp)
		mov    %eax,0x000008(%esp)
		test   %ax,%ax
		jle    _027668_jump

	_027584_jump:
		mov    0x00001c(%esp),%bh
		cmp    $0x000014,%bh
		jae    _027668_jump
		cmpw   $0x000100,0x000060(%edi)
		jne    _027654_jump
		lea    0x000020(%esp),%eax
		lea    0x000014(%esp),%ecx
		xor    %edx,%edx
		push   %eax
		mov    %bh,%dl
		lea    0x00001c(%esp),%ebx
		mov    %ebp,%eax
		call   _0269b0_func
		test   %ax,%ax
		jne    _0275cd_jump
		mov    $0x000080,%edx
		mov    %eax,0x000014(%esp)
		xor    %ah,%ah
		mov    %edx,0x000018(%esp)
		mov    %ah,0x000020(%esp)

	_0275cd_jump:
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		mov    0x000018(%esp),%eax
		shl    $0x000003,%edx
		add    $0x00002a,%eax
		mov    %ax,_0dd664_data(%edx)
		mov    0x000014(%esp),%eax
		add    $0x000009,%eax
		mov    %ax,_0dd666_data(%edx)
		mov    0x000020(%esp),%al
		mov    %al,_0dd66a_data(%edx)
		mov    (%esp),%ecx
		mov    _0dd664_data(%edx),%ax
		mov    %si,_0dd668_data(%edx)
		cmp    %cx,%ax
		jle    _02761b_jump
		mov    %eax,(%esp)
		jmp    _027626_jump

	_02761b_jump:
		cmp    0x000004(%esp),%ax
		jge    _027626_jump
		mov    %eax,0x000004(%esp)

	_027626_jump:
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		shl    $0x000003,%edx
		mov    0x00000c(%esp),%ecx
		mov    _0dd666_data(%edx),%ax
		cmp    %cx,%ax
		jle    _027645_jump
		mov    %eax,0x00000c(%esp)
		jmp    _027650_jump

	_027645_jump:
		cmp    0x000010(%esp),%ax
		jge    _027650_jump
		mov    %eax,0x000010(%esp)

	_027650_jump:
		incb   0x00001c(%esp)

	_027654_jump:
		mov    0x000008(%esp),%edx
		inc    %esi
		add    $0x000084,%edi
		cmp    %dx,%si
		jl     _027584_jump

	_027668_jump:
		mov    0x000004(%esp),%ebx
		cmp    $0x00000c,%bx
		jg     _02767d_jump
		xor    %esi,%esi
		mov    %si,_0dd710_data
		jmp    _02768a_jump

	_02767d_jump:
		mov    $0x00000c,%eax
		sub    %ebx,%eax
		mov    %ax,_0dd710_data

	_02768a_jump:
		mov    (%esp),%edi
		cmp    $0x000124,%di
		jle    _02769f_jump
		xor    %ebx,%ebx
		mov    %bx,_0dd716_data
		jmp    _0276ac_jump

	_02769f_jump:
		mov    $0x000124,%eax
		sub    %edi,%eax
		mov    %ax,_0dd716_data

	_0276ac_jump:
		mov    0x000010(%esp),%ecx
		cmp    $0x000008,%cx
		jg     _0276c1_jump
		xor    %edi,%edi
		mov    %di,_0dd712_data
		jmp    _0276ce_jump

	_0276c1_jump:
		mov    $0x000008,%eax
		sub    %ecx,%eax
		mov    %ax,_0dd712_data

	_0276ce_jump:
		cmpw   $0x000078,0x00000c(%esp)
		jle    _0276e1_jump
		xor    %ebx,%ebx
		mov    %bx,_0dd714_data
		jmp    _0276f2_jump

	_0276e1_jump:
		mov    $0x000078,%eax
		mov    0x00000c(%esp),%edx
		sub    %edx,%eax
		mov    %ax,_0dd714_data

	_0276f2_jump:
		mov    _095cf0_data,%eax
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		add    %eax,%eax
		mov    %cx,_095cfa_data
		mov    _095cd4_data(%eax),%dx
		mov    _095b15_data,%cl
		mov    %dx,_095cf8_data
		cmp    $0x000001,%cl
		jne    _02773b_jump
		mov    %edx,%esi
		sub    $0x000008,%esi
		mov    _0cee5d_data,%ch
		mov    %si,_095cf8_data
		cmp    %cl,%ch
		jne    _02773b_jump
		mov    %dx,_095cfa_data

	_02773b_jump:
		xor    %al,%al
		xor    %bl,%bl
		mov    %al,_095cd2_data
		mov    $0x000004,%bh
		xor    %esi,%esi

	_027748_jump:
		xor    %eax,%eax
		mov    %bl,%al
		mov    _0dd666_data(,%eax,8),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc1f0_data,%ecx
		mov    _0dd662_data(,%eax,8),%edi
		add    %ecx,%edx
		mov    _0cecfe_data,%ecx
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		add    %edi,%ecx
		movzbl 0x000068(%edx),%edi
		sub    %edi,%ecx
		mov    %ecx,%edi
		mov    _095cf6_data,%ecx
		sar    $0x000010,%ecx
		add    %ecx,%edi
		mov    %edi,0x000028(%edx)
		mov    _0dd664_data(,%eax,8),%ecx
		mov    _0cece8_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%edi
		add    %edi,%ecx
		movzbl 0x000069(%edx),%edi
		sub    %edi,%ecx
		mov    _095cf8_data,%edi
		sar    $0x000010,%edi
		add    %edi,%ecx
		mov    %ecx,0x00002c(%edx)
		mov    _0dd66a_data(,%eax,8),%al
		movl   $0x000001,0x000024(%edx)
		xor    %ah,%ah
		mov    0x000081(%edx),%cl
		mov    %ax,0x000050(%edx)
		mov    %bl,%al
		or     %bh,%cl
		mov    %ax,0x000056(%edx)
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _01f304_func
		mov    %bh,0x00007e(%edx)
		mov    0x000050(%edx),%ax
		mov    %si,0x000040(%edx)
		dec    %eax
		mov    %si,0x000042(%edx)
		cmp    $0x000006,%ax
		ja     _02781f_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0274d0_switch(,%eax,4)

	_02780a_case:
		incb   _095cd2_data
		jmp    _02781f_case

	_027812_case:
		movb   $0x000002,_095cce_data
		jmp    _02781f_case

	_02781b_case:
		movb   $0x000014,0x000076(%edx)

	_02781f_case:
		mov    %edx,%eax
		inc    %bl
		call   _026aa0_func
		cmp    $0x000014,%bl
		jb     _027748_jump
		xor    %ah,%ah
		mov    %ah,_095cd3_data
		mov    %ah,_095f9f_data
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02784c_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %al,%al

	_027851_jump:
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    _0dd666_data(,%ebx,8),%ecx
		sar    $0x000010,%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0cc1f0_data,%edx
		andb   $0x0000fb,0x000081(%ecx,%edx,1)
		mov    _0dd666_data(,%ebx,8),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		inc    %al
		movl   $0x000000,0x000024(%edx,%ebx,1)
		cmp    $0x000014,%al
		jb     _027851_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027898_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		movw   $0x000005,_0ceca4_data
		call   _026524_func
		call   _026518_func
		cmpb   $0x000000,_095b15_data
		jne    _0278c6_jump
		xor    %esi,%esi
		mov    %si,_0ced00_data
		jmp    _0278cf_jump

	_0278c6_jump:
		movw   $0x00fffb,_0ced00_data

	_0278cf_jump:
		mov    _0ced00_data,%ax
		mov    %ax,_0cecb8_data
		mov    %ax,_0cecaa_data
		mov    _095cf0_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		add    %eax,%eax
		mov    %bx,_095cfa_data
		mov    _095cd4_data(%eax),%dx
		mov    %bx,_0dd720_data
		mov    %dx,_095cf8_data
		xor    %edx,%edx
		mov    $0x000038,%ebx
		mov    _0cdafc_data,%dl
		mov    %bx,_0dd71c_data
		sub    %edx,%ebx
		mov    $0x000018,%edi
		sub    $0x000008,%ebx
		mov    $0x000020,%esi
		mov    %bx,_0dd718_data
		mov    $0x000108,%ebx
		mov    %di,_0cecea_data
		sub    %edx,%ebx
		mov    %di,_0cecb6_data
		mov    %ebx,%edx
		mov    %di,_0cecac_data
		sub    $0x000008,%edx
		mov    %si,_0dd722_data
		mov    %dx,_0dd71e_data
		mov    _095b15_data,%dl
		mov    %si,_0dd71a_data
		test   %dl,%dl
		jne    _027980_jump
		addw   $0x000008,_0ced00_data
		jmp    _027a04_jump

	_027980_jump:
		mov    _095cf8_data,%si
		sub    $0x000008,%esi
		mov    _0cee5d_data,%dh
		mov    %si,_095cf8_data
		cmp    $0x000001,%dh
		jne    _0279b5_jump
		mov    _095ce2_data(%eax),%ax
		mov    $0x00000a,%edi
		mov    %ax,_095cfa_data
		mov    %di,_0dd720_data

	_0279b5_jump:
		mov    $0xfffffff8,%eax
		mov    _0dd722_data,%dx
		mov    _0dd71a_data,%bx
		mov    _0dd718_data,%si
		mov    _0dd71e_data,%di
		mov    %ax,_0dd71c_data
		sub    $0x000008,%edx
		add    $0x000008,%ebx
		sub    $0x000008,%esi
		sub    $0x000008,%edi
		mov    %dx,_0dd722_data
		mov    %bx,_0dd71a_data
		mov    %si,_0dd718_data
		mov    %di,_0dd71e_data

	_027a04_jump:
		mov    %ecx,%eax
		movb   $0x000000,0x00007e(%ecx)
		call   _026688_func
		mov    _0cece8_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0cdafd_data,%dl
		add    $0x0000c0,%eax
		sub    %edx,%eax
		mov    _0ccd14_data,%edx
		mov    %eax,_0cdac0_data
		cmp    $0x000002,%edx
		jne    _027a6c_jump
		mov    0x000004(%ecx),%eax
		mov    0x000022(%eax),%ax
		dec    %eax
		mov    $0x000001,%ebx
		cwtl   
		mov    $0x000003,%edx
		call   _0690e0_func
		mov    %ax,_095cf2_data
		mov    %ax,_095cf4_data
		mov    %ecx,%eax
		movb   $0x000003,0x000076(%ecx)
		call   _0274ec_func
		mov    $_0cda94_data,%eax
		jmp    _027a7a_jump

	_027a6c_jump:
		cmp    $0x000032,%edx
		jne    _027a7f_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_027a7a_jump:
		call   _01d374_func

	_027a7f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027a88_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %edx,%edx
		mov    _0cdb01_data,%ah
		mov    %dx,_095cfe_data
		mov    %dx,_095cfc_data
		test   %ah,%ah
		jne    _027ab5_jump
		cmpb   $0x000004,_0cdb00_data
		je     _027ad0_jump

	_027ab5_jump:
		mov    _0cdb01_data,%dh
		cmp    $0x000001,%dh
		jne    _027beb_jump
		cmp    _0cdb00_data,%dh
		jne    _027beb_jump

	_027ad0_jump:
		mov    %esi,%eax
		call   _026688_func
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		call   _01d710_func
		testb  $0x000008,_0cdb15_data
		jne    _027b0d_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000002,%eax
		jmp    _027b0f_jump

	_027b0d_jump:
		xor    %eax,%eax

	_027b0f_jump:
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		mov    0x000008(%esp),%ecx
		add    $0x000005,%eax
		sub    %eax,%ecx
		mov    0x000002(%esp),%edx
		mov    %cx,0x000008(%esp)
		sar    $0x000010,%edx
		mov    0x000006(%esp),%ebx
		mov    %esi,%eax
		sar    $0x000010,%ebx
		call   _02676c_func
		cmpb   $0x000000,0x00007e(%esi)
		jne    _027b67_jump
		mov    %esi,%eax
		call   _0772d8_func
		mov    $0x0000c2,%eax
		call   _06fa30_func

	_027b67_jump:
		movb   $0x000002,0x00007e(%esi)
		mov    0x000081(%esi),%ch
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ch
		mov    %ch,0x000081(%esi)
		call   _0408d4_func
		test   %ax,%ax
		je     _027beb_jump
		mov    %esi,%eax
		mov    $0x000002,%ebx
		call   _0266b8_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000032,%ebx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		cmpb   $0x000002,_095cce_data
		jne    _027bdc_jump
		mov    $0x000001,%dl
		mov    $0x000001,%edi
		xor    %esi,%esi
		mov    %dl,_095cce_data
		mov    %si,_095cfc_data
		mov    %di,_095cfe_data
		jmp    _027be4_jump

	_027bdc_jump:
		xor    %ah,%ah
		mov    %ah,_095cce_data

	_027be4_jump:
		movb   $0x000014,_095cf0_data

	_027beb_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027bf4_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0cdaca_data,%bx
		mov    _0cdafc_data,%dl
		add    %ebx,%edx
		sub    %edx,%eax
		testb  $0x000008,_0cdb15_data
		je     _027c17_jump
		test   %ax,%ax
		jge    _027c25_jump

	_027c17_jump:
		testb  $0x000008,_0cdb15_data
		jne    _027c2a_jump
		test   %ax,%ax
		jg     _027c2a_jump

	_027c25_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    

	_027c2a_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_027c30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _095cd2_data,%ah
		test   %ah,%ah
		jne    _027ce9_jump
		mov    0x000056(%ecx),%di
		mov    %ah,0x00007e(%ecx)
		dec    %edi
		mov    %ecx,%eax
		mov    %di,0x000056(%ecx)
		call   _026688_func
		cmpw   $0x000000,0x000056(%ecx)
		jne    _027eff_jump
		call   _02784c_func
		mov    0x000004(%ecx),%eax
		mov    0x000022(%eax),%ax
		incw   _095cf2_data
		and    $0x00ffff,%eax
		mov    _095cf0_data,%edx
		dec    %eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jle    _027c92_jump
		xor    %ebx,%ebx
		mov    %bx,_095cf2_data

	_027c92_jump:
		mov    _095cf2_data,%ax
		cmp    _095cf4_data,%ax
		jne    _027cc4_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000064,0x000056(%ecx)
		call   _01d374_func
		mov    $0x00006b,%eax
		call   _06fa30_func
		jmp    _027eff_jump

	_027cc4_jump:
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _0274ec_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d374_func
		mov    $0x000069,%eax
		call   _06fa30_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027ce9_jump:
		mov    _0ced00_data,%dx
		mov    0x000028(%ecx),%ax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		mov    _0cecea_data,%bx
		add    %eax,%edx
		mov    0x00002c(%ecx),%ax
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		add    $0x000008,%edx
		add    %eax,%ebx
		movswl %dx,%eax
		mov    _0dd718_data,%edx
		mov    $0x000140,%esi
		sar    $0x000010,%edx
		sub    %edx,%esi
		mov    %esi,%edx
		lea    0x000008(%eax),%esi
		cmp    %edx,%esi
		jl     _027d65_jump
		cmpb   $0x000016,_095cf0_data
		je     _027ef3_jump
		mov    %ecx,%eax
		call   _026714_func
		mov    $0x000016,%ah
		xor    %dl,%dl
		mov    %ah,_095cf0_data
		mov    $0x00002d,%eax
		mov    %dl,_095f9e_data
		call   _06fa30_func
		jmp    _027ef3_jump

	_027d65_jump:
		mov    _0dd720_data,%edx
		lea    -0x000008(%eax),%esi
		sar    $0x000010,%edx
		cmp    %edx,%esi
		jg     _027db5_jump
		cmpb   $0x000015,_095cf0_data
		je     _027ef3_jump
		mov    %ecx,%eax
		mov    $0x000015,%bl
		call   _026714_func
		mov    %bl,_095cf0_data
		xor    %bh,%bh
		mov    $0x00002d,%eax
		mov    %bh,_095f9e_data
		call   _06fa30_func
		mov    %ecx,%eax
		call   _02680c_func
		call   _026954_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027db5_jump:
		mov    _0dd71e_data,%esi
		movswl %bx,%edx
		sar    $0x000010,%esi
		lea    -0x000008(%edx),%edi
		cmp    %esi,%edi
		jg     _027e1b_jump
		cmpb   $0x000017,_095cf0_data
		je     _027ef3_jump
		mov    %ecx,%eax
		mov    $0x000017,%bh
		call   _026740_func
		mov    _095f9e_data,%al
		mov    %bh,_095cf0_data
		test   %al,%al
		je     _027df7_jump
		mov    %al,%ah
		inc    %ah
		mov    %ah,_095f9e_data

	_027df7_jump:
		mov    $0x00002d,%eax
		mov    $0x000001,%dl
		call   _06fa30_func
		mov    %dl,_095f9f_data
		mov    %ecx,%eax
		call   _02680c_func
		call   _026954_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027e1b_jump:
		mov    _0cdaca_data,%esi
		sar    $0x000010,%esi
		add    $0x000008,%edx
		add    $0x000040,%esi
		cmp    %esi,%edx
		jle    _027ee1_jump
		cmpw   $0x000000,_0cdad4_data
		je     _027e8e_jump
		call   _027bf4_func
		test   %al,%al
		je     _027e8e_jump
		cmpb   $0x000000,_0cdb01_data
		jne    _027e57_jump
		cmpb   $0x000004,_0cdb00_data
		je     _027e68_jump

	_027e57_jump:
		mov    _0cdb01_data,%al
		cmp    $0x000001,%al
		jne    _027e8e_jump
		cmp    _0cdb00_data,%al
		jne    _027e8e_jump

	_027e68_jump:
		mov    $0x000011,%ebx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		mov    %ecx,%eax
		call   _02680c_func
		call   _026954_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027e8e_jump:
		mov    _0dd71e_data,%eax
		mov    $0x0000c8,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %bx,%edx
		cmp    %eax,%edx
		jl     _027eec_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    %ecx,%eax
		movb   $0x000000,0x00007e(%ecx)
		call   _026688_func
		cmpb   $0x000001,_095cce_data
		jne    _027ef3_jump
		movb   $0x000002,_095cce_data
		mov    %ecx,%eax
		call   _02680c_func
		call   _026954_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_027ee1_jump:
		mov    %ecx,%eax
		call   _026e00_func
		test   %al,%al
		jne    _027ef3_jump

	_027eec_jump:
		mov    %ecx,%eax
		call   _02721c_func

	_027ef3_jump:
		mov    %ecx,%eax
		call   _02680c_func
		call   _026954_func

	_027eff_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027f08_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000002,_095ccf_data
		jne    _027f40_jump
		xor    %edx,%edx
		mov    _095cd0_data,%dl
		mov    _0dd666_data(,%edx,8),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		xor    %ecx,%ecx
		add    %ebx,%edx
		mov    _0cc1f0_data,%ebx
		mov    _095cd1_data,%cl
		mov    %cx,0x000050(%ebx,%edx,4)

	_027f40_jump:
		xor    %dh,%dh
		mov    0x000076(%eax),%bl
		mov    %dh,_095ccf_data
		dec    %bl
		mov    %bl,0x000076(%eax)
		jne    _027f6b_jump
		mov    $0x000004,%ebx
		xor    %edx,%edx
		movw   $0x000064,0x000056(%eax)
		call   _01d374_func
		mov    $0x000016,%eax
		jmp    _027f7c_jump

	_027f6b_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x00000f,%eax

	_027f7c_jump:
		call   _06fa30_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_027f88_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%edx
		movb   $0x000000,0x00007e(%eax)
		xor    %ebx,%ebx
		call   _026688_func
		mov    %bx,_095cfe_data
		mov    0x000056(%edx),%si
		mov    %bx,_095cfc_data
		dec    %si
		mov    %si,0x000056(%edx)
		jne    _02800d_jump
		cmpb   $0x000000,0x000076(%edx)
		je     _027fbd_jump
		call   _056394_func

	_027fbd_jump:
		movw   $0x000001,_0ceca4_data
		call   _02784c_func
		mov    0x000081(%edx),%bl
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bl
		mov    $_0cda94_data,%eax
		mov    %bl,0x000081(%edx)
		mov    $0x000002,%ebx
		mov    $0x000003,%edx
		call   _01d374_func
		movw   $0x000001,_0cecda_data
		call   _026524_func
		call   _026540_func
		call   _03b8d0_func

	_02800d_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_028014_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000076(%eax)
		jbe    _028097_jump
		mov    $0x000140,%ebx
		mov    _095b15_data,%dl
		mov    $0x0000c8,%edi
		cmp    $0x000001,%dl
		jne    _028050_jump
		cmp    _0cee5d_data,%dl
		jne    _028050_jump
		mov    $0x00013d,%ebx
		mov    $0x0000c0,%edi

	_028050_jump:
		mov    $0x000001,%cl
		mov    %cl,0x00001c(%esp)
		cmp    0x000076(%esi),%cl
		jae    _028097_jump
		sub    $0x00001c,%ebx
		mov    %bx,0x000018(%esp)

	_028063_jump:
		xor    %ebx,%ebx
		mov    0x00001c(%esp),%bl
		imul   $0x000014,%ebx,%ebx
		push   $0x000001
		mov    %edi,%eax
		mov    $0x00000b,%edx
		sub    %ebx,%eax
		mov    0x00001a(%esp),%ebx
		movswl %ax,%ecx
		sar    $0x000010,%ebx
		mov    %esi,%eax
		call   _018cb0_func
		mov    0x00001c(%esp),%al
		inc    %al
		mov    %al,0x00001c(%esp)
		cmp    0x000076(%esi),%al
		jb     _028063_jump

	_028097_jump:
		cmpb   $0x000014,_095cd2_data
		ja     _028170_jump
		movl   $0x000010,0x000014(%esp)
		mov    _095b15_data,%dh
		mov    $0x0000af,%eax
		cmp    $0x000001,%dh
		jne    _0280d2_jump
		cmp    _0cee5d_data,%dh
		jne    _0280d2_jump
		mov    $0x00000c,%ebx
		mov    $0x0000a9,%eax
		mov    %ebx,0x000014(%esp)

	_0280d2_jump:
		push   $0x000001
		mov    _0cecc0_data,%edx
		mov    _0cc1f0_data,%edi
		sar    $0x000010,%edx
		movswl %ax,%ebp
		mov    %edx,%ebx
		mov    0x000018(%esp),%eax
		shl    $0x000005,%ebx
		mov    %ebp,%ecx
		add    %edx,%ebx
		sub    $0x000002,%eax
		shl    $0x000002,%ebx
		mov    $0x000039,%edx
		add    %ebx,%edi
		movswl %ax,%ebx
		mov    %edi,%eax
		call   _018cb0_func
		mov    0x000014(%esp),%eax
		mov    $0x00000a,%ecx
		xor    %edx,%edx
		add    $0x000027,%eax
		mov    _095cd2_data,%dl
		movswl %ax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		add    $0x00001c,%eax
		xor    %edx,%edx
		mov    %ebp,%ecx
		mov    %al,%dl
		mov    %edi,%eax
		call   _018cb0_func
		mov    0x000014(%esp),%eax
		mov    $0x00000a,%ecx
		xor    %edx,%edx
		add    $0x000036,%eax
		mov    _095cd2_data,%dl
		movswl %ax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		push   $0x000001
		add    $0x00001c,%edx
		and    $0x0000ff,%edx
		mov    %ebp,%ecx
		mov    %edi,%eax
		call   _018cb0_func

	_028170_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _028238_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000001,%dl
		jb     _028238_jump
		jbe    _028192_jump
		cmp    $0x000004,%dl
		je     _0281eb_jump
		jmp    _028238_jump

	_028192_jump:
		mov    _0ccd14_data,%eax
		and    $0x00003f,%eax
		cmp    $0x000020,%eax
		jge    _028238_jump
		mov    _0c2598_data,%edx
		push   %edx
		push   $_0c0520_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    $0x000064,%ebx
		xor    %ecx,%ecx
		push   $0x000000
		mov    $0x0000a0,%edx
		lea    0x000004(%esp),%eax
		call   _01a178_func
		push   $0x000000
		mov    $0x000002,%ecx
		mov    $0x000096,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2578_data,%eax
		jmp    _028233_jump

	_0281eb_jump:
		cmpb   $0x000000,_095f9d_data
		je     _028207_jump
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0c24a8_data,%eax
		jmp    _028231_jump

	_028207_jump:
		cmpb   $0x000000,0x000076(%esi)
		jne    _028220_jump
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0c24a8_data,%eax
		jmp    _028231_jump

	_028220_jump:
		push   $0x000000
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0c251c_data,%eax

	_028231_jump:
		xor    %ecx,%ecx

	_028233_jump:
		call   _01a178_func

	_028238_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_028244_switch:
		.long   _0282c0_case
		.long   _0282cb_case
		.long   _0282d6_case
		.long   _0282e1_case
		.long   _0282ec_case




_028258_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%eax
		call   _0406e0_func
		test   %al,%al
		je     _02829e_jump
		mov    _095f9d_data,%ah
		test   %ah,%ah
		jne    _02829e_jump
		mov    $0x000001,%dl
		mov    $0x000004,%ebx
		mov    %ah,0x000076(%ecx)
		mov    %dl,_095f9d_data
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000064,0x000056(%ecx)
		call   _01d374_func
		mov    $0x000016,%eax
		call   _06fa30_func

	_02829e_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0282f3_jump
		mov    0x00006c(%ecx),%bl
		cmp    $0x00000a,%bl
		je     _0282f3_jump
		mov    %bl,%al
		cmp    $0x000004,%bl
		ja     _0282f3_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_028244_switch(,%eax,4)

	_0282c0_case:
		mov    %ecx,%eax
		call   _027898_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0282cb_case:
		mov    %ecx,%eax
		call   _027a88_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0282d6_case:
		mov    %ecx,%eax
		call   _027c30_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0282e1_case:
		mov    %ecx,%eax
		call   _027f08_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0282ec_case:
		mov    %ecx,%eax
		call   _027f88_func

	_0282f3_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0282f8_func:
		push   %edx
		mov    %eax,%edx
		call   _027440_func
		mov    %edx,%eax
		call   _026aa0_func
		pop    %edx
		ret    



_02830c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cdb01_data
		jne    _028323_jump
		cmpb   $0x000004,_0cdb00_data
		je     _02833e_jump

	_028323_jump:
		mov    _0cdb01_data,%dh
		cmp    $0x000001,%dh
		jne    _0284b0_jump
		cmp    _0cdb00_data,%dh
		jne    _0284b0_jump

	_02833e_jump:
		call   _040784_func
		test   %ax,%ax
		je     _0283c1_jump
		mov    _0cdb15_data,%ch
		test   $0x000008,%ch
		jne    _028370_jump
		mov    %ch,%al
		mov    _0cdad4_data,%di
		or     $0x000008,%al
		neg    %edi
		mov    %al,_0cdb15_data
		mov    %di,_0cdad4_data

	_028370_jump:
		cmpb   $0x000000,_0cdb01_data
		jne    _0283a1_jump
		cmpb   $0x000004,_0cdb00_data
		jne    _0283a1_jump
		mov    $0x000001,%ebx
		mov    $_0cda94_data,%eax
		mov    %ebx,%edx
		call   _01d374_func
		movw   $0x000010,_0cdad4_data
		jmp    _028517_jump

	_0283a1_jump:
		mov    _0cdad2_data,%ebx
		sar    $0x000010,%ebx
		mov    $0x00002f,%eax
		inc    %ebx
		cmp    %ebx,%eax
		jle    _0283b6_jump
		mov    %ebx,%eax

	_0283b6_jump:
		mov    %ax,_0cdad4_data
		jmp    _028517_jump

	_0283c1_jump:
		call   _040714_func
		test   %ax,%ax
		je     _028449_jump
		mov    _0cdb15_data,%dh
		test   $0x000008,%dh
		je     _0283f5_jump
		mov    %dh,%bl
		mov    _0cdad4_data,%cx
		and    $0x0000f7,%bl
		neg    %ecx
		mov    %bl,_0cdb15_data
		mov    %cx,_0cdad4_data

	_0283f5_jump:
		cmpb   $0x000000,_0cdb01_data
		jne    _028429_jump
		cmpb   $0x000004,_0cdb00_data
		jne    _028429_jump
		mov    $0x000001,%ebx
		mov    $_0cda94_data,%eax
		mov    %ebx,%edx
		mov    $0xfffffff0,%esi
		call   _01d374_func
		mov    %si,_0cdad4_data
		jmp    _028517_jump

	_028429_jump:
		mov    _0cdad2_data,%ebx
		sar    $0x000010,%ebx
		mov    $0xffffffd1,%eax
		dec    %ebx
		cmp    %ebx,%eax
		jge    _02843e_jump
		mov    %ebx,%eax

	_02843e_jump:
		mov    %ax,_0cdad4_data
		jmp    _028517_jump

	_028449_jump:
		mov    _0cdad4_data,%dx
		test   %dx,%dx
		jle    _028469_jump
		mov    _0cdad2_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		dec    %ebx
		cmp    %ebx,%eax
		jge    _028467_jump
		mov    %ebx,%eax

	_028467_jump:
		jmp    _02847d_jump

	_028469_jump:
		jge    _028483_jump
		mov    _0cdad2_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		inc    %ebx
		cmp    %ebx,%eax
		jle    _02847d_jump
		mov    %ebx,%eax

	_02847d_jump:
		mov    %ax,_0cdad4_data

	_028483_jump:
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _028491_jump
		neg    %eax

	_028491_jump:
		cmp    $0x000010,%eax
		jge    _028517_jump
		mov    $0x000004,%ebx
		mov    $_0cda94_data,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _028517_jump

	_0284b0_jump:
		cmpb   $0x000003,_0cdb01_data
		jne    _0284c2_jump
		cmpb   $0x000012,_0cdb00_data
		je     _0284d4_jump

	_0284c2_jump:
		cmpb   $0x000000,_0cdb01_data
		jne    _0284fb_jump
		cmpb   $0x000014,_0cdb00_data
		jne    _0284fb_jump

	_0284d4_jump:
		mov    $_0cda94_data,%eax
		call   _053c34_func
		call   _0408d4_func
		test   %ax,%ax
		je     _028517_jump
		mov    $0x000004,%ebx
		mov    $_0cda94_data,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _028517_jump

	_0284fb_jump:
		cmpb   $0x000003,_0cdb01_data
		jne    _028517_jump
		cmpb   $0x000011,_0cdb00_data
		jne    _028517_jump
		mov    $_0cda94_data,%eax
		call   _053c34_func

	_028517_jump:
		mov    _0dd716_data,%eax
		mov    _0cdabc_data,%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _028543_jump
		cmpw   $0x000000,_0cdad4_data
		jge    _028543_jump
		xor    %esi,%esi
		mov    %eax,_0cdabc_data
		mov    %si,_0cdad4_data
		jmp    _02858b_jump

	_028543_jump:
		mov    _0dd71c_data,%eax
		mov    _0cdabc_data,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jg     _02856f_jump
		cmpw   $0x000000,_0cdad4_data
		jle    _02856f_jump
		xor    %ecx,%ecx
		mov    %eax,_0cdabc_data
		mov    %cx,_0cdad4_data
		jmp    _02858b_jump

	_02856f_jump:
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		call   _053bb0_func
		mov    _0cdabc_data,%ecx
		cwtl   
		add    %eax,%ecx
		mov    %ecx,_0cdabc_data

	_02858b_jump:
		push   $_0cecba_data
		mov    $_0ceca0_data,%ecx
		mov    $_0cec9e_data,%ebx
		mov    $_0cec9c_data,%edx
		mov    $_0cda94_data,%eax
		call   _01d858_func
		call   _02e518_func
		mov    $_0cda94_data,%eax
		call   _0544fc_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0285c0_func:
		movw   $0x000000,0x000040(%eax)
		movw   $0x00fff8,0x000042(%eax)
		ret    



_0285d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02861f_jump
		cmpb   $0x000007,0x00006c(%eax)
		jne    _02861f_jump
		mov    0x00006b(%eax),%bl
		test   %bl,%bl
		jne    _02861f_jump
		xor    %edx,%edx
		mov    %bl,%dl
		shl    $0x000002,%edx
		mov    0x00000c(%eax),%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		lea    0x000000(,%edx,8),%ecx
		mov    (%ebx),%edx
		mov    0x000005(%ecx,%edx,1),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		cmpb   $0x000000,_0cee3d_data(%edx)
		jne    _02861f_jump
		movb   $0x000005,0x00007e(%eax)
		call   _028bac_func

	_02861f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028624_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		call   _01e6dc_func
		mov    0x000076(%ebx),%ah
		test   %ah,%ah
		jne    _02869a_jump
		mov    %ah,0x00006f(%ebx)
		mov    0x000028(%ebx),%ax
		mov    %ax,0x00003c(%ebx)
		mov    0x00002c(%ebx),%ax
		mov    $0x00000c,%edx
		mov    %ax,0x00003e(%ebx)
		mov    %ebx,%eax
		movb   $0x000008,0x00006e(%ebx)
		call   _01d364_func
		mov    $0x000005,%dl
		movb   $0x000007,0x000078(%ebx)
		call   _028854_func
		mov    $0x000011,%eax
		mov    _0ceea3_data,%cl
		mov    %dl,_0ceeaa_data
		mov    0x000032(%ebx),%edx
		inc    %cl
		sar    $0x000010,%edx
		mov    %cl,_0ceea3_data
		call   _06f35c_func
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		mov    %ebx,_0cda04_data
		call   _071350_func
		pop    %ecx
		pop    %ebx
		ret    

	_02869a_jump:
		mov    $0x00000a,%edx
		mov    %ebx,%eax
		call   _01d364_func
		pop    %ecx
		pop    %ebx
		ret    



_0286ac_func:
		push   %ebx
		push   %edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000020,%dl
		je     _0286cf_jump
		cmp    $0x000021,%dl
		je     _0286cf_jump
		cmp    $0x000022,%dl
		je     _0286cf_jump
		cmp    $0x000023,%dl
		je     _0286cf_jump
		cmp    $0x000024,%dl
		je     _0286cf_jump
		cmp    $0x000025,%dl
		jne    _028702_jump

	_0286cf_jump:
		mov    0x00006b(%eax),%bl
		cmp    $0x000029,%bl
		jne    _0286ea_jump
		mov    0x000032(%eax),%edx
		mov    $0x0000c0,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		pop    %edx
		pop    %ebx
		ret    

	_0286ea_jump:
		cmp    $0x000040,%bl
		jne    _02871d_jump
		mov    0x000032(%eax),%edx
		mov    $0x0000c1,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		pop    %edx
		pop    %ebx
		ret    

	_028702_jump:
		cmp    $0x000026,%dl
		jne    _02871d_jump
		mov    0x000081(%eax),%dh
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%eax)

	_02871d_jump:
		pop    %edx
		pop    %ebx
		ret    



_028720_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ce3a2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0ce46c_data,%cx
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%edx
		test   %cx,%cx
		jle    _02884e_jump

	_028751_jump:
		cmpw   $0x0000c5,0x000060(%edx)
		jne    _028823_jump
		cmpw   $0x000000,_0cebaa_data
		jne    _028778_jump
		mov    $0x000001,%ecx
		call   _0701ac_func
		mov    %cx,_0cebaa_data

	_028778_jump:
		mov    _0cecf4_data,%ax
		mov    %ax,_0ced00_data
		mov    _0cecf0_data,%ax
		mov    %ax,_0cecea_data
		mov    %edx,%eax
		call   _0544fc_func
		mov    0x00006c(%edx),%ah
		cmp    $0x000020,%ah
		je     _0287b8_jump
		cmp    $0x000021,%ah
		je     _0287b8_jump
		cmp    $0x000022,%ah
		je     _0287b8_jump
		cmp    $0x000023,%ah
		je     _0287b8_jump
		cmp    $0x000024,%ah
		je     _0287b8_jump
		cmp    $0x000025,%ah
		jne    _0287df_jump

	_0287b8_jump:
		mov    0x00006b(%edx),%cl
		cmp    $0x000029,%cl
		jne    _0287cd_jump
		mov    0x000032(%edx),%edx
		mov    $0x0000c0,%eax
		sar    $0x000010,%edx
		jmp    _028814_jump

	_0287cd_jump:
		cmp    $0x000040,%cl
		jne    _028819_jump
		mov    0x000032(%edx),%edx
		mov    $0x0000c1,%eax
		sar    $0x000010,%edx
		jmp    _028814_jump

	_0287df_jump:
		cmp    $0x000026,%ah
		jne    _028819_jump
		xor    %al,%al
		mov    %al,_0ceea6_data
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		xor    %esi,%esi
		mov    %ah,0x000081(%edx)
		mov    $0xffffffff,%edx
		mov    $0x00003d,%eax
		mov    %si,_0cebaa_data

	_028814_jump:
		call   _06f35c_func

	_028819_jump:
		mov    $0x000001,%eax
		call   _0531e8_func

	_028823_jump:
		inc    %ebx
		movswl %bx,%edx
		mov    _0ce3a2_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc1f0_data,%eax
		mov    _0ce46c_data,%si
		add    %eax,%edx
		cmp    %si,%bx
		jl     _028751_jump

	_02884e_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028854_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cc1f0_data,%ebx
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _02898f_jump

	_028870_jump:
		cmpw   $0x0000c5,0x000060(%ebx)
		jne    _02897f_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _02897f_jump
		mov    _0cecfe_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ebx),%al
		add    $0x0000a0,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%ebx)
		mov    %edx,%eax
		mov    %dx,0x00003c(%ebx)
		xor    %edx,%eax
		mov    _0cece8_data,%edx
		mov    0x000069(%ebx),%al
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%ebx)
		sub    %eax,%edx
		mov    0x000081(%ebx),%ah
		mov    %edx,0x00002c(%ebx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ebx)
		mov    %ebx,%eax
		mov    %dx,0x00003e(%ebx)
		call   _01f304_func
		andb   $0x0000ef,0x000081(%ebx)
		xor    %edx,%edx
		mov    _0ceea2_data,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _094a4d_data(,%eax,4),%al
		xor    %edx,%edx
		add    $0x000020,%al
		mov    %al,%dl
		mov    %ebx,%eax
		call   _01d364_func
		xor    %edx,%edx
		mov    _0ceea2_data,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		cmpb   $0x000006,_094a4d_data(%eax)
		jne    _028929_jump
		movb   $0x000005,_094a4d_data(%eax)

	_028929_jump:
		xor    %edx,%edx
		mov    _0ceea2_data,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x000001,%bh
		mov    _094a4d_data(,%eax,4),%cl
		xor    %esi,%esi
		add    %bh,%cl
		mov    %bh,_0ceea6_data
		mov    %cl,_094a4d_data(,%eax,4)
		mov    _0cecf4_data,%ax
		mov    %si,_0cecf6_data
		mov    %ax,_0ced00_data
		mov    _0cecf0_data,%ax
		mov    %si,_0cecf8_data
		mov    %ax,_0cecea_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02897f_jump:
		inc    %eax
		add    $0x000084,%ebx
		cmp    %dx,%ax
		jl     _028870_jump

	_02898f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028994_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%ebp
		mov    %dl,0x000018(%esp)
		mov    $0x000003,%eax
		call   _01d020_func
		xor    %edi,%edi
		mov    %eax,%esi
		add    $0x000738,%eax
		mov    0x000060(%ebp),%dx
		mov    %eax,(%esp)
		cmp    $0x000017,%dx
		jne    _0289e4_jump
		xor    %eax,%eax
		mov    _0cdafe_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0cda98_data,%eax
		mov    0x000008(%eax,%edx,4),%al
		mov    %al,0x000014(%esp)
		jmp    _028b97_jump

	_0289e4_jump:
		movb   $0x000001,0x000014(%esp)
		cmp    (%esp),%esi
		jb     _0289f7_jump
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0289f7_jump:
		cmpl   $0x000000,0x000024(%esi)
		jne    _028b91_jump
		cmpw   $0x000003,0x000060(%esi)
		jne    _028b91_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		movw   $0x000014,0x000056(%esi)
		movl   $0x000001,0x000024(%esi)
		mov    0x000081(%esi),%dl
		movb   $0x000000,0x000071(%esi)
		or     $0x000004,%dl
		mov    %dl,0x000081(%esi)
		movswl %di,%edx
		movb   $0x000005,0x000072(%esi)
		mov    _095fb2_data(,%edx,2),%bx
		mov    %bx,0x000042(%esi)
		mov    _095fa4_data(,%edx,2),%dx
		mov    %esi,%eax
		mov    %dx,0x000040(%esi)
		call   _01f304_func
		cmpw   $0x000000,0x000040(%esi)
		jle    _028a9c_jump
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%ebx
		mov    0x000040(%esi),%dl
		mov    %dl,(%ebx)
		mov    %dl,%bl
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		neg    %bl
		mov    %bl,0x000001(%edx)
		mov    0x000081(%esi),%bl
		mov    %esi,%eax
		or     $0x000008,%bl
		mov    $0x000002,%edx
		mov    %bl,0x000081(%esi)
		mov    $0x000001,%ebx
		jmp    _028ad0_jump

	_028a9c_jump:
		mov    0x00000c(%esi),%edx
		mov    0x000040(%esi),%bl
		mov    0x000008(%edx),%edx
		neg    %bl
		mov    %bl,(%edx)
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%ebx
		mov    0x000040(%esi),%dl
		mov    %dl,0x000001(%ebx)
		mov    0x000081(%esi),%dh
		mov    %esi,%eax
		and    $0x0000f7,%dh
		mov    $0x000001,%ebx
		mov    %dh,0x000081(%esi)
		mov    $0x000002,%edx

	_028ad0_jump:
		call   _05efb0_func
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		mov    (%edx),%al
		mov    %al,0x000008(%edx)
		mov    0x00000c(%esi),%edx
		mov    0x000008(%edx),%edx
		mov    0x000001(%edx),%al
		mov    %al,0x000009(%edx)
		lea    0x00000c(%esp),%edx
		push   %edx
		lea    0x00000c(%esp),%edx
		xor    %ebx,%ebx
		push   %edx
		movswl %di,%edx
		mov    0x00001c(%esp),%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    0x000018(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		movswl %dx,%edx
		mov    %ebp,%eax
		call   _01d710_func
		mov    0x000006(%esp),%edx
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x00000a(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		mov    %esi,%eax
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,0x00002c(%esi)
		call   _01db8c_func
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		movb   $0x000000,0x00006b(%esi)
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		inc    %edi
		mov    0x000002(%ebx,%edx,8),%al
		mov    0x000081(%esi),%bh
		xor    %edx,%edx
		mov    %al,0x00006a(%esi)
		and    $0x0000bf,%bh
		mov    0x000018(%esp),%dl
		mov    %bh,0x000081(%esi)
		cmp    %dx,%di
		je     _028ba0_jump

	_028b91_jump:
		add    $0x000084,%esi

	_028b97_jump:
		cmp    (%esp),%esi
		jb     _0289f7_jump

	_028ba0_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_028bac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		mov    _0cc1f0_data,%edx
		mov    _0cc1f4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _028c2d_jump

	_028bc6_jump:
		cmpw   $0x00003b,0x000060(%edx)
		jne    _028c21_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _028c21_jump
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f304_func
		mov    0x000028(%ecx),%eax
		mov    %eax,0x000028(%edx)
		mov    _0ced00_data,%di
		mov    0x000028(%edx),%ax
		mov    0x00002c(%ecx),%ecx
		sub    %edi,%eax
		mov    %ecx,0x00002c(%edx)
		mov    %ax,0x000036(%edx)
		mov    _0cecea_data,%bx
		mov    0x00002c(%edx),%ax
		movw   $0x00fffc,0x000042(%edx)
		sub    %ebx,%eax
		mov    %ax,0x000038(%edx)
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028c21_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _028bc6_jump

	_028c2d_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028c34_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000056(%eax),%dx
		test   %dx,%dx
		je     _028c49_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x000056(%eax)

	_028c49_jump:
		cmpb   $0x000000,_0ceebd_data
		je     _028c6d_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%bl
		testb  $0x000002,0x000007(%eax,%ebx,8)
		jne    _028c80_jump

	_028c6d_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _028c9a_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _028c9a_jump
		cmpw   $0x000002,0x000042(%ecx)
		jle    _028c9a_jump

	_028c80_jump:
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff6,0x000042(%ecx)

	_028c9a_jump:
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x00006d(%ecx),%al
		mov    0x00006c(%ecx),%bl
		shl    $0x000008,%eax
		add    %ebx,%eax
		lea    0x000081(%ecx),%ebx
		cmp    $0x000003,%eax
		jb     _028ce9_jump
		cmp    $0x000005,%eax
		jbe    _028df8_jump
		cmp    $0x000200,%eax
		jb     _028cde_jump
		cmp    $0x000201,%eax
		jbe    _028d76_jump
		cmp    $0x000202,%eax
		je     _028d70_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028cde_jump:
		cmp    $0x000100,%eax
		je     _028d26_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028ce9_jump:
		cmp    $0x000001,%eax
		jbe    _028df8_jump
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _028df8_jump
		mov    0x000081(%ecx),%dh
		mov    %ebx,%eax
		test   $0x000008,%dh
		sete   %bl
		and    $0x000001,%bl
		mov    (%eax),%bh
		and    $0x0000f7,%bh
		mov    %bh,(%eax)
		shl    $0x000003,%bl
		mov    %bh,%cl
		or     %bl,%cl
		mov    %cl,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028d26_jump:
		mov    %ecx,%eax
		call   _053c34_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _028d65_jump
		mov    0x000081(%ecx),%dh
		mov    %ebx,%eax
		test   $0x000008,%dh
		sete   %bl
		and    $0x000001,%bl
		mov    (%eax),%bh
		and    $0x0000f7,%bh
		mov    %bh,(%eax)
		shl    $0x000003,%bl
		mov    %bh,%dl
		or     %bl,%dl
		mov    %dl,(%eax)

	_028d65_jump:
		mov    %ecx,%eax
		call   _0252c0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_028d70_jump:
		movw   $0x000000,0x000040(%ecx)

	_028d76_jump:
		cmpb   $0x00000a,0x000062(%ecx)
		jne    _028d98_jump
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff6,0x000042(%ecx)
		jmp    _028dd4_jump

	_028d98_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _028dd4_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _028dd4_jump
		cmpb   $0x000000,_0ceebd_data
		jne    _028dce_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d364_func

	_028dce_jump:
		movw   $0x000000,0x000042(%ecx)

	_028dd4_jump:
		cmpw   $0x000000,0x000040(%ecx)
		je     _028df8_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _028df8_jump
		movw   $0x000000,0x000040(%ecx)

	_028df8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_028dfc_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000001,0x000007(%ebx,%edx,8)
		je     _028e25_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _05efb0_func

	_028e25_jump:
		pop    %edx
		pop    %ebx
		ret    



_028e30_func:
		mov    _0dddfc_data,%al
		ret    



_028e50_func:
		mov    %al,_0dddfc_data
		ret    



_028e70_func:
		push   %edx
		mov    %eax,%edx
		mov    $0x00002f,%eax
		call   _063f58_func
		pop    %edx
		ret    



_028e80_func:
		test   $0x000080,%ah
		je     _028e88_jump
		xor    %ah,%ah
		ret    

	_028e88_jump:
		mov    $0x000100,%eax
		ret    



_028e90_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    %esi,%ecx
		xor    %dl,%dl
		shr    $0x000010,%ecx

	_028ea3_jump:
		movw   $0x001510,_0dd7a2_data
		xor    %ah,%ah
		mov    %cx,_0dd7b4_data
		mov    (%esp),%al
		mov    %si,_0dd7a4_data
		mov    %ax,_0dd7a6_data
		mov    $_0dd7a2_data,%eax
		inc    %dl
		call   _028e70_func
		cmp    $0x00000a,%dl
		je     _028edf_jump
		mov    %edi,%gs
		testb  $0x000080,%gs:0x000004(%ebx)
		jne    _028ea3_jump

	_028edf_jump:
		mov    %edi,%gs
		xor    %eax,%eax
		mov    %gs:0x000003(%ebx),%ax
		call   _028e80_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    



_028ef4_func:
		push   %ecx
		push   %esi
		mov    %edx,%esi
		mov    %eax,%ecx
		mov    %edx,%gs
		movb   $0x00000d,%gs:(%ecx)
		movb   $0x000000,%gs:0x000001(%ecx)
		movw   $0x000000,%gs:0x000003(%ecx)
		xor    %al,%al
		mov    %bl,%gs:0x000002(%ecx)
		mov    %esi,%gs

	_028f14_jump:
		xor    %edx,%edx
		mov    %al,%dl
		inc    %al
		movb   $0x000000,%gs:0x000005(%ecx,%edx,1)
		cmp    $0x000008,%al
		jb     _028f14_jump
		pop    %esi
		pop    %ecx
		ret    



_028f28_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %edx,(%esp)
		mov    %eax,%esi
		mov    %ebx,%edi
		xor    %ebx,%ebx
		mov    %cl,%bl
		call   _028ef4_func
		mov    (%esp),%gs
		movb   $0x000000,%gs:0x00000d(%esi)
		movw   $0x000000,%gs:0x000014(%esi)
		movl   $0x000000,%gs:0x000016(%esi)
		mov    0x000010(%esp),%ebx
		mov    %di,%gs:0x00000e(%esi)
		mov    %bx,%gs:0x000012(%esi)
		shr    $0x000010,%edi
		mov    %di,%gs:0x000010(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_029144_func:
		push   %ebx
		push   %edx
		mov    $0x001500,%edx
		mov    $_0dd7a2_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0dd7a2_data
		mov    %bx,_0dd7a4_data
		mov    %bx,_0dd7a6_data
		call   _028e70_func
		mov    _0dd7a6_data,%al
		mov    %al,_0dddfc_data
		mov    _0dd7a4_data,%al
		pop    %edx
		pop    %ebx
		ret    



_029180_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _029144_func
		mov    %al,%dh
		mov    %al,_0ddddf_data
		xor    %dl,%dl
		mov    $0x00150b,%esi
		xor    %ecx,%ecx

	_029199_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %cl,_0ddde0_data(%ebx)
		test   %dh,%dh
		je     _0291dc_jump
		xor    %ah,%ah
		mov    %dl,%al
		mov    %si,_0dd7a2_data
		mov    %ax,_0dd7a6_data
		mov    $_0dd7a2_data,%eax
		mov    %cx,_0dd7a4_data
		call   _028e70_func
		cmp    _0dd7a2_data,%cx
		je     _0291dc_jump
		mov    $0x000001,%ah
		sub    %ah,%dh
		mov    %ah,_0ddde0_data(%ebx)

	_0291dc_jump:
		inc    %dl
		cmp    $0x00001a,%dl
		jb     _029199_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0291e8_jump:
		push   %edx
		mov    _0dd7b8_data,%dx
		xor    %al,%al
		test   %dx,%dx
		je     _029201_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _063f24_func

	_029201_jump:
		test   %al,%al
		je     _02920e_jump
		movw   $0x000102,_0dd7bc_data

	_02920e_jump:
		pop    %edx
		ret    



_029210_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x000100,%edx
		xor    %ah,%ah
		mov    %dx,_0dd7bc_data
		mov    %ah,_0dddff_data
		call   _0294f8_func
		cmp    $0x000001,%al
		jne    _029497_jump
		call   _029534_func
		cmp    $0x000001,%al
		jne    _029497_jump
		call   _029144_func
		test   %al,%al
		je     _02948c_jump
		mov    $0x000030,%esi
		mov    $0x000035,%edi
		mov    $0x00003c,%ebp
		mov    %dx,_0dd7bc_data
		call   _029180_func
		mov    $_0dd758_data,%edx
		mov    $0x00008a,%eax
		mov    $0x000043,%ecx
		call   _063ec0_func
		mov    %ax,_0dd7b8_data
		mov    %esi,_0dd790_data
		mov    %edi,_0dd784_data
		mov    %ebp,_0dd76c_data
		mov    %ecx,_0dd772_data
		xor    %edx,%edx
		mov    $0x00004e,%esi
		mov    %edx,_0dd79c_data
		mov    %edx,_0dd796_data
		mov    $0x00001a,%edx
		mov    $0x000059,%edi
		mov    %edx,_0dd78a_data
		mov    _0dd758_data,%edx
		mov    $0x00005b,%ebp
		mov    %edx,_0dd748_data
		add    $0x000030,%edx
		test   %ax,%ax
		sete   %bl
		mov    %edx,_0dd754_data
		mov    _0dd758_data,%edx
		mov    %ax,_0dd7a0_data
		add    $0x000035,%edx
		mov    %ax,_0dd79a_data
		mov    %edx,_0dd74c_data
		mov    _0dd758_data,%edx
		mov    %ax,_0dd794_data
		add    $0x00003c,%edx
		mov    %ax,_0dd788_data
		mov    %edx,_0dd744_data
		mov    _0dd758_data,%edx
		mov    %ax,_0dd770_data
		add    $0x00001a,%edx
		mov    %ax,_0dd78e_data
		mov    %edx,_0dd73c_data
		mov    _0dd758_data,%edx
		mov    %ax,_0dd776_data
		add    %ecx,%edx
		mov    %ax,_0dd764_data
		mov    %edx,_0dd738_data
		mov    _0dd758_data,%edx
		mov    %esi,_0dd760_data
		add    %esi,%edx
		mov    %ax,_0dd76a_data
		mov    %edx,_0dd740_data
		mov    _0dd758_data,%edx
		mov    %edi,_0dd766_data
		add    %edi,%edx
		mov    %ax,_0dd782_data
		mov    %edx,_0dd730_data
		mov    _0dd758_data,%edx
		mov    %ax,_0dd77c_data
		add    %ebp,%edx
		mov    $0x000064,%eax
		mov    %edx,_0dd750_data
		mov    _0dd758_data,%edx
		mov    %ebp,_0dd77e_data
		add    %eax,%edx
		mov    %eax,_0dd778_data
		mov    %edx,_0dd734_data
		test   %bl,%bl
		je     _0293c4_jump
		movw   $0x000101,_0dd7bc_data
		jmp    _0294a0_jump

	_0293c4_jump:
		call   _029144_func
		cmp    $0x000001,%al
		ja     _02943e_jump
		jmp    _029453_jump

	_0293d6_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    %edx,%eax
		call   _029ef4_func
		cmp    $0x000001,%al
		jne    _029435_jump
		mov    %edx,%eax
		call   _029d84_func
		cmp    $0x000001,%al
		jne    _029435_jump
		mov    %edx,%eax
		call   _029dcc_func
		test   %al,%al
		je     _029435_jump
		mov    %edx,%eax
		mov    %cl,_0dddff_data
		call   _02a188_func
		cmp    $0x000001,%al
		jne    _029435_jump
		mov    $0x000001,%eax
		call   _029db4_func
		test   %al,%al
		jne    _029435_jump
		mov    %cl,_0cee70_data
		call   _069018_func
		cmp    _0cee70_data,%cl
		jne    _02942f_jump
		mov    %bl,%bh

	_02942f_jump:
		mov    %cl,_0cee70_data

	_029435_jump:
		inc    %bl
		cmp    $0x00001a,%bl
		jb     _029442_jump
		jmp    _029446_jump

	_02943e_jump:
		xor    %bh,%bh
		xor    %cl,%cl

	_029442_jump:
		test   %bh,%bh
		je     _0293d6_jump

	_029446_jump:
		test   %bh,%bh
		je     _029453_jump
		xor    %eax,%eax
		mov    %bh,%al
		call   _028e50_func

	_029453_jump:
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _029d84_func
		test   %al,%al
		jne    _02946f_jump
		movw   $0x00000c,_0dd7bc_data

	_02946f_jump:
		call   _028e30_func
		and    $0x0000ff,%eax
		add    $0x000041,%eax
		push   %eax
		push   $_0c0630_data
		call   _07bc8c_func
		add    $0x000008,%esp
		jmp    _0294a0_jump

	_02948c_jump:
		movw   $0x000001,_0dd7bc_data
		jmp    _0294a0_jump

	_029497_jump:
		movw   $0x00000c,_0dd7bc_data

	_0294a0_jump:
		cmpw   $0x000100,_0dd7bc_data
		jne    _0294e5_jump
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _029ef4_func
		test   %al,%al
		jne    _0294c9_jump
		movw   $0x000001,_0dd7bc_data
		jmp    _0294e5_jump

	_0294c9_jump:
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _02a188_func
		test   %al,%al
		jne    _0294e5_jump
		movw   $0x000008,_0dd7bc_data

	_0294e5_jump:
		cmpw   $0x000100,_0dd7bc_data
		sete   %al
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0294f8_func:
		push   %ebx
		push   %edx
		mov    $0x001500,%edx
		mov    $_0dd7a2_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0dd7a2_data
		mov    %bx,_0dd7a4_data
		mov    %bx,_0dd7a6_data
		call   _028e70_func
		cmpw   $0x000000,_0dd7a4_data
		setne  %al
		and    $0x0000ff,%eax
		pop    %edx
		pop    %ebx
		ret    



_029534_func:
		push   %ebx
		push   %edx
		mov    $0x00150c,%edx
		mov    $_0dd7a2_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0dd7a2_data
		mov    %bx,_0dd7a4_data
		call   _028e70_func
		xor    %eax,%eax
		mov    _0dd7a4_data,%ax
		mov    %eax,%edx
		sar    $0x000004,%edx
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    _0dd7a4_data,%ax
		shl    $0x000002,%edx
		xor    %ah,%ah
		and    $0x00ffff,%eax
		add    %edx,%eax
		mov    %ax,_0dd7ba_data
		cmp    $0x0000d2,%ax
		setge  %al
		and    $0x0000ff,%eax
		pop    %edx
		pop    %ebx
		ret    



_0295a0_func:
		push   %ecx
		push   %esi
		mov    %dl,%cl
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    %eax,%edx
		lea    0x000000(,%eax,8),%esi
		xor    %eax,%edx
		mov    %cl,%dl
		add    %eax,%esi
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		xor    %edx,%edx
		add    %esi,%eax
		mov    %bl,%dl
		add    %edx,%eax
		sub    $0x000096,%eax
		pop    %esi
		pop    %ecx
		ret    



_0295e8_func:
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		and    $0x0000ff,%ecx
		mov    %dl,%al
		shl    $0x000010,%ecx
		shl    $0x000008,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    %bl,%cl
		add    %ecx,%eax
		pop    %ecx
		ret    



_029608_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %eax,%edx
		mov    $0x001194,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esi,%edx
		mov    %al,(%edi)
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00004b,%esi
		mov    %edx,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ebx,%edx
		mov    %al,0x000000(%ebp)
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %dl,(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_029648_func:
		push   %esi
		sub    $0x000004,%esp
		mov    %ecx,%esi
		mov    %eax,%ecx
		sar    $0x000010,%ecx
		and    $0x0000ff,%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%cl
		mov    %cl,(%edx)
		mov    %eax,%edx
		sar    $0x000008,%edx
		and    $0x0000ff,%edx
		mov    %dl,(%ebx)
		mov    %al,(%esi)
		add    $0x000004,%esp
		pop    %esi
		ret    



_029678_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00000c,%esp
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		mov    %esp,%edx
		call   _029608_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000008(%esp),%bl
		mov    0x000004(%esp),%dl
		mov    (%esp),%al
		call   _0295e8_func
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0296ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00000c,%esp
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		mov    %esp,%edx
		call   _029648_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000008(%esp),%bl
		mov    0x000004(%esp),%dl
		mov    (%esp),%al
		call   _0295a0_func
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0296e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    $0x000085,%ebx
		mov    _0dd78e_data,%dx
		mov    _0dd78a_data,%eax
		call   _028ef4_func
		mov    _0dd78e_data,%cx
		mov    _0dd78a_data,%ebx
		xor    %eax,%eax
		mov    _0dd73c_data,%edx
		mov    (%esp),%al
		call   _028e90_func
		mov    %ax,_0dd7bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02972c_func:
		push   %edx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		call   _0296e0_func
		mov    %ax,_0dd7bc_data
		mov    %edx,%eax
		call   _0296e0_func
		mov    %ax,_0dd7bc_data
		pop    %edx
		ret    



_029750_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    $0x000088,%ebx
		mov    _0dd78e_data,%dx
		mov    _0dd78a_data,%eax
		call   _028ef4_func
		mov    _0dd78e_data,%cx
		mov    _0dd78a_data,%ebx
		xor    %eax,%eax
		mov    _0dd73c_data,%edx
		mov    (%esp),%al
		call   _028e90_func
		mov    %ax,_0dd7bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02979c_func:
		push   %esi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dl,(%esp)
		mov    %ebx,%esi
		mov    $0x000084,%ebx
		mov    _0dd78e_data,%dx
		mov    _0dd78a_data,%eax
		call   _028ef4_func
		lgs    _0dd78a_data,%ebx
		mov    (%esp),%al
		mov    %al,%gs:0x00000d(%ebx)
		mov    _0dd73c_data,%edx
		mov    %ecx,%gs:0x000012(%ebx)
		xor    %eax,%eax
		mov    %gs,%ecx
		mov    0x000004(%esp),%al
		mov    %esi,%gs:0x00000e(%ebx)
		call   _028e90_func
		mov    %ax,_0dd7bc_data
		add    $0x000008,%esp
		pop    %esi
		ret    



_0297f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000002
		mov    $0x00000c,%ecx
		mov    _0dd730_data,%ebx
		mov    _0dd79a_data,%dx
		mov    _0dd796_data,%eax
		call   _028f28_func
		mov    _0dd76a_data,%gs
		xor    %eax,%eax
		mov    _0dd766_data,%ebx
		mov    (%esp),%al
		mov    _0dd79a_data,%cx
		movb   $0x000001,%gs:(%ebx)
		mov    _0dd748_data,%edx
		movb   $0x000000,%gs:0x000001(%ebx)
		mov    _0dd796_data,%ebx
		call   _028e90_func
		mov    %ax,_0dd7bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02985c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000002
		mov    $0x00000c,%ecx
		mov    _0dd730_data,%ebx
		mov    _0dd79a_data,%dx
		mov    _0dd796_data,%eax
		call   _028f28_func
		mov    _0dd76a_data,%gs
		xor    %eax,%eax
		mov    _0dd766_data,%ebx
		mov    (%esp),%al
		mov    _0dd79a_data,%cx
		movb   $0x000001,%gs:(%ebx)
		mov    _0dd748_data,%edx
		movb   $0x000001,%gs:0x000001(%ebx)
		mov    _0dd796_data,%ebx
		call   _028e90_func
		mov    %ax,_0dd7bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029920_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		push   $0x000001
		mov    $0x00000c,%ecx
		mov    _0dd754_data,%ebx
		mov    _0dd79a_data,%dx
		mov    _0dd796_data,%eax
		call   _028f28_func
		lgs    _0dd790_data,%eax
		mov    _0dd79a_data,%cx
		mov    _0dd796_data,%ebx
		movb   $0x000005,%gs:(%eax)
		xor    %eax,%eax
		mov    _0dd748_data,%edx
		mov    (%esp),%al
		call   _028e90_func
		mov    %ax,_0dd7bc_data
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02997c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%esi
		mov    %ebx,%ebp
		mov    %ecx,%edi
		push   $0x000007
		mov    $0x000003,%ecx
		mov    _0dd74c_data,%ebx
		mov    _0dd79a_data,%dx
		mov    _0dd796_data,%eax
		call   _028f28_func
		lgs    _0dd784_data,%eax
		movb   $0x00000a,%gs:(%eax)
		movb   $0x000000,%gs:0x000001(%eax)
		mov    _0dd79a_data,%cx
		movb   $0x000000,%gs:0x000002(%eax)
		mov    _0dd796_data,%ebx
		movl   $0x000000,%gs:0x000003(%eax)
		xor    %eax,%eax
		mov    _0dd748_data,%edx
		mov    (%esp),%al
		call   _028e90_func
		mov    %ax,_0dd7bc_data
		lgs    _0dd784_data,%edx
		mov    %gs:0x000001(%edx),%bl
		mov    %bl,(%esi)
		mov    %gs:0x000002(%edx),%bl
		mov    %bl,0x000000(%ebp)
		mov    %gs:0x000003(%edx),%edx
		mov    %edx,(%edi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_029a0c_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dl,(%esp)
		mov    %ebx,%edi
		mov    %ecx,%esi
		push   $0x000007
		mov    $0x000003,%ecx
		mov    _0dd744_data,%ebx
		mov    _0dd79a_data,%dx
		mov    _0dd796_data,%eax
		call   _028f28_func
		lgs    _0dd76c_data,%eax
		movb   $0x00000b,%gs:(%eax)
		mov    (%esp),%dl
		movl   $0x000000,%gs:0x000002(%eax)
		mov    _0dd79a_data,%cx
		movb   $0x000000,%gs:0x000006(%eax)
		mov    _0dd796_data,%ebx
		mov    %dl,%gs:0x000001(%eax)
		xor    %eax,%eax
		mov    _0dd748_data,%edx
		mov    0x000004(%esp),%al
		call   _028e90_func
		mov    %ax,_0dd7bc_data
		lgs    _0dd76c_data,%ebx
		mov    %gs:0x000002(%ebx),%edx
		mov    %edx,(%edi)
		mov    %gs:0x000006(%ebx),%dl
		mov    %dl,(%esi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_029a98_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %edx,%edi
		mov    %ebx,%esi
		mov    %ecx,%ebp
		push   $0x00000b
		mov    $0x000003,%ecx
		mov    _0dd740_data,%ebx
		mov    _0dd79a_data,%dx
		mov    _0dd796_data,%eax
		call   _028f28_func
		lgs    _0dd760_data,%eax
		mov    _0dd79a_data,%cx
		mov    _0dd796_data,%ebx
		movb   $0x00000c,%gs:(%eax)
		xor    %eax,%eax
		mov    _0dd748_data,%edx
		mov    0x000004(%esp),%al
		call   _028e90_func
		mov    %ax,_0dd7bc_data
		mov    _0dd764_data,%gs
		mov    %eax,%ebx
		mov    _0dd760_data,%eax
		mov    %gs:0x000002(%eax),%dl
		xor    %ecx,%ecx
		and    $0x0000f0,%dl
		mov    %dl,%cl
		sar    $0x000004,%ecx
		lea    0x000000(,%ecx,4),%edx
		add    %ecx,%edx
		mov    %gs:0x000002(%eax),%cl
		and    $0x00000f,%cl
		mov    %cl,(%esp)
		xor    %ecx,%ecx
		add    %edx,%edx
		mov    (%esp),%cl
		add    %ecx,%edx
		mov    %dl,(%edi)
		mov    %gs:0x000004(%eax),%dl
		mov    %dl,(%esi)
		mov    %gs:0x000005(%eax),%dl
		mov    %dl,0x000000(%ebp)
		mov    0x000018(%esp),%edx
		mov    %gs:0x000006(%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_029b50_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%esi
		push   $0x000005
		mov    $0x000003,%ecx
		mov    _0dd754_data,%ebx
		mov    _0dd79a_data,%dx
		mov    _0dd796_data,%eax
		call   _028f28_func
		lgs    _0dd790_data,%eax
		mov    _0dd79a_data,%cx
		movb   $0x000006,%gs:(%eax)
		mov    _0dd796_data,%ebx
		movl   $0x000000,%gs:0x000001(%eax)
		xor    %eax,%eax
		mov    _0dd748_data,%edx
		mov    (%esp),%al
		call   _028e90_func
		mov    %ax,_0dd7bc_data
		lgs    _0dd790_data,%edx
		mov    %gs:0x000001(%edx),%edx
		mov    %edx,(%esi)
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_029d34_func:
		push   %edx
		sub    $0x000004,%esp
		mov    %esp,%edx
		and    $0x0000ff,%eax
		call   _029b50_func
		mov    %ax,_0dd7bc_data
		mov    (%esp),%eax
		add    $0x000004,%esp
		pop    %edx
		ret    



_029d54_func:
		and    $0x0000ff,%eax
		call   _029d34_func
		test   $0x000001,%al
		sete   %al
		and    $0x0000ff,%eax
		ret    



_029d6c_func:
		and    $0x0000ff,%eax
		call   _029d34_func
		test   $0x000002,%al
		sete   %al
		and    $0x0000ff,%eax
		ret    



_029d84_func:
		and    $0x0000ff,%eax
		call   _029d34_func
		test   $0x000010,%al
		setne  %al
		and    $0x0000ff,%eax
		ret    



_029db4_func:
		and    $0x0000ff,%eax
		testb  $0x000040,_0ddd7b_data(%eax)
		sete   %al
		and    $0x0000ff,%eax
		ret    



_029dcc_func:
		and    $0x0000ff,%eax
		call   _029d34_func
		test   $0x000008,%ah
		jne    _029dec_jump
		cmpw   $0x000100,_0dd7bc_data
		jne    _029dec_jump
		mov    $0x000001,%eax
		ret    

	_029dec_jump:
		xor    %eax,%eax
		ret    



_029df0_func:
		push   %edx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		call   _029d6c_func
		cmp    $0x000001,%al
		jne    _029e0f_jump
		mov    %edx,%eax
		call   _0297f4_func
		mov    %ax,_0dd7bc_data
		pop    %edx
		ret    

	_029e0f_jump:
		movw   $0x000100,_0dd7bc_data
		pop    %edx
		ret    

	_029e1c_jump:
		push   %edx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,%eax
		call   _029d6c_func
		test   %al,%al
		jne    _029e46_jump
		mov    %edx,%eax
		call   _029d54_func
		cmp    $0x000001,%al
		jne    _029e46_jump
		mov    %edx,%eax
		call   _02985c_func
		mov    %ax,_0dd7bc_data
		pop    %edx
		ret    

	_029e46_jump:
		movw   $0x000100,_0dd7bc_data
		pop    %edx
		ret    

	_029ee8_jump:
		xor    %al,%al

	_029eea_jump:
		add    $0x00001c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_029ef4_func:
		and    $0x0000ff,%eax
		mov    _0ddde0_data(%eax),%al
		ret    



_029f00_func:
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		xor    %eax,%eax
		mov    (%esp),%al
		call   _02a188_func
		cmp    $0x000001,%al
		jne    _029ff0_jump
		cmp    _0dd8c1_data,%dl
		jb     _029fd7_jump
		cmp    _0dd8c2_data,%dl
		ja     _029fd7_jump
		movzbl %dl,%esi
		mov    %esi,%eax
		call   _029db4_func
		cmp    $0x000001,%al
		jne    _029fdc_jump
		xor    %eax,%eax
		mov    %bl,%al
		movzbl %cl,%edi
		shl    $0x000008,%eax
		add    %eax,%edi
		lea    0x000000(,%esi,4),%eax
		shl    $0x000008,%edi
		mov    _0dd8c7_data(%eax),%esi
		mov    _0dd8c2_data,%bh
		add    %esi,%edi
		cmp    %bh,%dl
		jae    _029f74_jump
		mov    _0dd8cb_data(%eax),%eax
		jmp    _029f79_jump

	_029f74_jump:
		mov    _0dd8c3_data,%eax

	_029f79_jump:
		cmp    %eax,%edi
		jge    _029fe7_jump
		movzbl (%esp),%esi
		mov    %esi,%eax
		call   _0296e0_func
		mov    %ax,_0dd7bc_data
		and    $0x0000ff,%ebx
		mov    %ebx,%eax
		shl    $0x000004,%eax
		sub    %ebx,%eax
		xor    %ebx,%ebx
		shl    $0x000002,%eax
		mov    %cl,%bl
		add    %eax,%ebx
		xor    %ecx,%ecx
		lea    0x000000(,%ebx,4),%eax
		mov    %dl,%cl
		add    %ebx,%eax
		mov    $0x000001,%edx
		mov    %eax,%ebx
		shl    $0x000004,%eax
		mov    _0ddbeb_data(,%ecx,4),%ecx
		sub    %ebx,%eax
		mov    %edi,%ebx
		sub    %eax,%ecx
		mov    %esi,%eax
		call   _02979c_func
		mov    %ax,_0dd7bc_data
		jmp    _029ff0_jump

	_029fd7_jump:
		cmp    $0x000064,%dl
		jne    _029fe7_jump

	_029fdc_jump:
		movw   $0x000007,_0dd7bc_data
		jmp    _029ff0_jump

	_029fe7_jump:
		movw   $0x000008,_0dd7bc_data

	_029ff0_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		ret    



_029ff8_func:
		and    $0x0000ff,%eax
		call   _0296e0_func
		mov    %ax,_0dd7bc_data
		ret    



_02a00c_func:
		and    $0x0000ff,%eax
		call   _02972c_func
		mov    %ax,_0dd7bc_data
		ret    



_02a020_func:
		and    $0x0000ff,%eax
		call   _029750_func
		mov    %ax,_0dd7bc_data
		ret    



_02a0a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%ch
		call   _028e30_func
		mov    $0x000084,%ebx
		mov    _0dd78e_data,%dx
		mov    %al,%cl
		mov    _0dd78a_data,%eax
		call   _028ef4_func
		mov    _0dd78e_data,%gs
		xor    %eax,%eax
		mov    _0dd78a_data,%ebx
		mov    %ch,%al
		movb   $0x000001,%gs:0x00000d(%ebx)
		mov    _0dd8c7_data(,%eax,4),%edx
		mov    %edx,%gs:0x00000e(%ebx)
		mov    _0dda5b_data(,%eax,4),%eax
		mov    %eax,%gs:0x000012(%ebx)
		xor    %eax,%eax
		mov    _0dd73c_data,%edx
		mov    %cl,%al
		mov    %gs,%ecx
		call   _028e90_func
		mov    %ax,_0dd7bc_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a110_func:
		call   _02a118_func
		lea    0x000000(%eax),%eax



_02a118_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _028e30_func
		mov    $0x000085,%ebx
		mov    _0dd78e_data,%dx
		mov    %al,%cl
		mov    _0dd78a_data,%eax
		call   _028ef4_func
		movzbl %cl,%esi
		mov    _0dd78e_data,%ax
		mov    _0dd78a_data,%ebx
		mov    _0dd73c_data,%edx
		mov    %eax,%ecx
		mov    %esi,%eax
		call   _028e90_func
		mov    %ax,_0dd7bc_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a164_func:
		push   %edx
		mov    %al,%dl
		call   _02a118_func
		xor    %eax,%eax
		mov    %dl,%al
		call   _02a0a8_func
		pop    %edx
		ret    



_02a188_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00001c,%esp
		mov    %al,0x00000c(%esp)
		mov    $0x000001,%al
		cmpb   $0x000000,_0dddff_data
		jne    _029eea_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		mov    $0x0000ff,%dl
		call   _029920_func
		mov    %ax,_0dd7bc_data

	_02a1b5_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		call   _029dcc_func
		test   %al,%al
		jne    _02a1c8_jump
		dec    %dl
		jne    _02a1b5_jump

	_02a1c8_jump:
		movzbl 0x00000c(%esp),%esi
		mov    %esi,%eax
		call   _029dcc_func
		cmp    $0x000001,%al
		jne    _029ee8_jump
		mov    $0x00051f,%ebx
		mov    $_0dd8c0_data,%eax
		xor    %edx,%edx
		lea    0x000004(%esp),%ecx
		call   _07c050_func
		lea    0x000014(%esp),%ebx
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _02997c_func
		mov    %ax,_0dd7bc_data
		mov    0x000018(%esp),%al
		mov    %al,_0dd8c1_data
		mov    0x000014(%esp),%al
		mov    %al,_0dd8c2_data
		mov    0x000004(%esp),%eax
		mov    %eax,_0dd8c3_data
		mov    0x000014(%esp),%al
		mov    0x000018(%esp),%dl
		inc    %al
		mov    %dl,0x000010(%esp)
		sub    %dl,%al
		mov    0x000014(%esp),%dh
		mov    %al,_0dd8c0_data
		cmp    %dh,%dl
		ja     _02a282_jump

	_02a23e_jump:
		movzbl 0x000010(%esp),%esi
		lea    0x000008(%esp),%ecx
		xor    %eax,%eax
		mov    %esp,%ebx
		mov    0x00000c(%esp),%al
		mov    %esi,%edx
		call   _029a0c_func
		mov    %ax,_0dd7bc_data
		mov    (%esp),%eax
		mov    0x000010(%esp),%bl
		mov    %eax,_0dd8c7_data(,%esi,4)
		mov    0x000008(%esp),%al
		inc    %bl
		mov    %al,_0ddd7b_data(%esi)
		mov    %bl,0x000010(%esp)
		cmp    _0dd8c2_data,%bl
		jbe    _02a23e_jump

	_02a282_jump:
		mov    _0dd8c3_data,%eax
		mov    %eax,_0dda57_data
		xor    %eax,%eax
		mov    _0dd8c2_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0dd8c3_data,%eax
		mov    %eax,_0dd8cb_data(%edx)
		mov    _0dd8c1_data,%bl
		cmp    _0dd8c2_data,%bl
		ja     _02a307_jump

	_02a2b3_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    _0dd8cb_data(,%edx,4),%eax
		call   _0296ac_func
		mov    %eax,%ecx
		mov    _0dd8c7_data(,%edx,4),%eax
		call   _0296ac_func
		sub    %eax,%ecx
		mov    _0dd8cb_data(,%edx,4),%eax
		mov    %ecx,_0dda5b_data(,%edx,4)
		call   _0296ac_func
		mov    %eax,%ecx
		mov    _0dd8c7_data(,%edx,4),%eax
		call   _0296ac_func
		sub    %eax,%ecx
		mov    %ecx,_0ddbeb_data(,%edx,4)
		inc    %bl
		cmp    _0dd8c2_data,%bl
		jbe    _02a2b3_jump

	_02a307_jump:
		xor    %eax,%eax
		mov    _0dd8c2_data,%al
		xor    %edx,%edx
		mov    %edx,_0dd8cb_data(,%eax,4)
		mov    _0dd8c3_data,%eax
		call   _0296ac_func
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0dd8c1_data,%al
		mov    _0dd8c7_data(,%eax,4),%eax
		call   _0296ac_func
		sub    %eax,%edx
		mov    %edx,%eax
		call   _029678_func
		mov    %eax,_0dda57_data
		mov    $0x000001,%al
		mov    _0dd7bc_data,%dx
		mov    %al,_0dddff_data
		cmp    $0x000100,%dx
		sete   %al
		add    $0x00001c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a370_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a3a0_jump
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _02a3a0_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a3a0_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000002,%al
		jb     _02a3bf_jump
		jbe    _02a3d3_jump
		cmp    $0x000014,%al
		jne    _02a3d3_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		jmp    _02a3d3_jump

	_02a3bf_jump:
		test   %al,%al
		jne    _02a3cc_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02a3d3_jump

	_02a3cc_jump:
		orb    $0x000008,0x000081(%ecx)

	_02a3d3_jump:
		xor    %eax,%eax
		mov    0x000028(%ecx),%dx
		mov    0x000068(%ecx),%al
		mov    _0cdabc_data,%bx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    _0cdafc_data,%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0cdad4_data,%ax
		add    %eax,%eax
		sub    %eax,%edx
		movswl %dx,%ebx
		mov    %edx,%eax
		cmp    $0xfffffff6,%ebx
		jge    _02a449_jump
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		jne    _02a438_jump
		cmpb   $0x000006,0x00006c(%ecx)
		je     _02a438_jump
		mov    %dh,%al
		mov    $0x000001,%ebx
		or     $0x000008,%al
		mov    $0x000004,%edx
		mov    %al,0x000081(%ecx)
		mov    %ecx,%eax
		call   _05efb0_func
		jmp    _02a49c_jump

	_02a438_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _02a49c_jump
		movw   $0x000003,0x000040(%ecx)
		jmp    _02a49c_jump

	_02a449_jump:
		cmp    $0x00000a,%dx
		jle    _02a48f_jump
		mov    0x000081(%ecx),%bh
		test   $0x000008,%bh
		je     _02a47e_jump
		cmpb   $0x000006,0x00006c(%ecx)
		je     _02a47e_jump
		mov    %bh,%dl
		mov    %ecx,%eax
		and    $0x0000f7,%dl
		mov    $0x000001,%ebx
		mov    %dl,0x000081(%ecx)
		mov    $0x000003,%edx
		call   _05efb0_func
		jmp    _02a49c_jump

	_02a47e_jump:
		testb  $0x000008,0x000081(%ecx)
		jne    _02a49c_jump
		movw   $0x00fffd,0x000040(%ecx)
		jmp    _02a49c_jump

	_02a48f_jump:
		jg     _02a49c_jump
		cmp    $0xfffffff6,%ebx
		jl     _02a49c_jump
		movw   $0x000000,0x000040(%ecx)

	_02a49c_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _02a4ac_jump
		mov    $0x000010,%ebx
		jmp    _02a4b1_jump

	_02a4ac_jump:
		mov    $0xfffffff0,%ebx

	_02a4b1_jump:
		xor    %edx,%edx
		mov    0x000068(%ecx),%dl
		mov    %ecx,%eax
		add    %ebx,%edx
		xor    %ebx,%ebx
		movswl %dx,%edx
		mov    0x000069(%ecx),%bl
		call   _01d624_func
		test   %ax,%ax
		je     _02a4d2_jump
		movw   $0x000000,0x000040(%ecx)

	_02a4d2_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _02a513_jump
		cmpb   $0x000003,0x00006c(%ecx)
		jne    _02a513_jump
		mov    0x00003c(%ecx),%edx
		mov    0x00002c(%ecx),%ebx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jl     _02a539_jump
		mov    $0x000001,%ebx
		mov    0x00003c(%ecx),%edx
		movw   $0x000000,0x000042(%ecx)
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000002,%edx
		movw   $0x000000,0x000052(%ecx)
		call   _05efb0_func
		jmp    _02a539_jump

	_02a513_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _02a539_jump
		cmpb   $0x000006,0x00006c(%ecx)
		jne    _02a539_jump
		cmpb   $0x00000f,0x00006b(%ecx)
		jbe    _02a539_jump
		cmpw   $0x000001,0x000052(%ecx)
		jne    _02a539_jump
		mov    %ecx,%eax
		call   _02a96c_func
		movw   $0x000002,0x000052(%ecx)

	_02a539_jump:
		cmpw   $0x000000,0x000052(%ecx)
		je     _02a557_jump
		mov    0x00007f(%ecx),%ah
		inc    %ah
		mov    %ah,0x00007f(%ecx)
		cmp    $0x000050,%ah
		jbe    _02a557_jump
		movb   $0x000000,0x00007f(%ecx)
		movw   $0x000000,0x000052(%ecx)

	_02a557_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a55c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a58a_jump
		cmpb   $0x000002,0x00006c(%edx)
		jne    _02a58a_jump
		movw   $0x00fff8,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%bh
		mov    %bh,0x000081(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_02a58a_jump:
		mov    0x000070(%edx),%al
		cmp    $0x000002,%al
		jb     _02a5a9_jump
		jbe    _02a5bd_jump
		cmp    $0x000014,%al
		jne    _02a5bd_jump
		mov    0x000056(%edx),%ax
		mov    %ax,0x000040(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x000042(%edx)
		jmp    _02a5bd_jump

	_02a5a9_jump:
		test   %al,%al
		jne    _02a5b6_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _02a5bd_jump

	_02a5b6_jump:
		orb    $0x000008,0x000081(%edx)

	_02a5bd_jump:
		cmpb   $0x000000,0x00006d(%edx)
		jne    _02a5f2_jump
		cmpb   $0x000008,0x00006c(%edx)
		jne    _02a5f2_jump
		cmpw   $0x000000,0x000052(%edx)
		jne    _02a5e6_jump
		cmpb   $0x000006,0x00006b(%edx)
		jb     _02a5e6_jump
		mov    %edx,%eax
		call   _02a96c_func
		movw   $0x000001,0x000052(%edx)
		pop    %edx
		pop    %ebx
		ret    

	_02a5e6_jump:
		cmpb   $0x000001,0x00006b(%edx)
		jne    _02a5f2_jump
		movw   $0x000000,0x000052(%edx)

	_02a5f2_jump:
		pop    %edx
		pop    %ebx
		ret    



_02a5f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a62b_jump
		cmpb   $0x000002,0x00006c(%edx)
		jne    _02a62b_jump
		movw   $0x00fff8,0x000042(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%edx)
		jmp    _02a743_jump

	_02a62b_jump:
		mov    0x000070(%edx),%al
		cmp    $0x000002,%al
		jb     _02a64a_jump
		jbe    _02a665_jump
		cmp    $0x000014,%al
		jne    _02a665_jump
		mov    0x000056(%edx),%ax
		mov    %ax,0x000040(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x000042(%edx)
		jmp    _02a665_jump

	_02a64a_jump:
		test   %al,%al
		jne    _02a657_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _02a65e_jump

	_02a657_jump:
		orb    $0x000008,0x000081(%edx)

	_02a65e_jump:
		mov    %edx,%eax
		call   _053c34_func

	_02a665_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		mov    _0cdabc_data,%cx
		add    %ebx,%eax
		xor    %ebx,%ebx
		sub    %ecx,%eax
		mov    _0cdafc_data,%bl
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdac0_data,%si
		mov    _0cdafd_data,%al
		mov    0x00002c(%edx),%di
		mov    %eax,%ecx
		xor    %eax,%eax
		add    %esi,%ecx
		mov    0x000069(%edx),%al
		sub    %edi,%ecx
		sub    %eax,%ecx
		mov    %ecx,%eax
		mov    0x000052(%edx),%cx
		test   %cx,%cx
		jne    _02a72b_jump
		cmp    $0x000012,%ax
		jl     _02a6fb_jump
		cmp    $0x000028,%ax
		jge    _02a6c7_jump
		movw   $0x000001,0x000042(%edx)
		jmp    _02a6ff_jump

	_02a6c7_jump:
		cmp    $0x000041,%ax
		jge    _02a6d5_jump
		movw   $0x000002,0x000042(%edx)
		jmp    _02a6ff_jump

	_02a6d5_jump:
		cmp    $0x000064,%ax
		jge    _02a6e3_jump
		movw   $0x000003,0x000042(%edx)
		jmp    _02a6ff_jump

	_02a6e3_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _02a6ec_jump
		neg    %eax

	_02a6ec_jump:
		cmp    $0x0000a5,%eax
		jge    _02a6fb_jump
		movw   $0x000004,0x000042(%edx)
		jmp    _02a6ff_jump

	_02a6fb_jump:
		mov    %cx,0x000042(%edx)

	_02a6ff_jump:
		testb  $0x000008,0x000081(%edx)
		je     _02a70e_jump
		cmp    $0x00005a,%bx
		jg     _02a71f_jump

	_02a70e_jump:
		testb  $0x000008,0x000081(%edx)
		jne    _02a743_jump
		movswl %bx,%eax
		cmp    $0xffffffa6,%eax
		jge    _02a743_jump

	_02a71f_jump:
		movw   $0x000001,0x000052(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a72b_jump:
		cmp    $0x000078,%ax
		jle    _02a73d_jump
		movw   $0x00fffe,0x000042(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a73d_jump:
		movw   $0x00ffff,0x000042(%edx)

	_02a743_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a74c_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a7b1_jump
		cmpb   $0x000002,0x00006c(%eax)
		jne    _02a7b1_jump
		cmpw   $0x000000,0x000052(%eax)
		jne    _02a7b1_jump
		cmpb   $0x000010,0x00006b(%eax)
		jb     _02a7b1_jump
		mov    $0x000001,%ebx
		mov    _0cdb01_data,%dh
		movw   $0x000001,0x000052(%eax)
		mov    %bx,_0cec96_data
		test   %dh,%dh
		je     _02a789_jump
		cmp    $0x000001,%dh
		jne    _02a794_jump

	_02a789_jump:
		movb   $0x000001,_0cdb11_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a794_jump:
		cmp    $0x000004,%dh
		je     _02a79e_jump
		cmp    $0x000005,%dh
		jne    _02a7e2_jump

	_02a79e_jump:
		mov    $0x000002,%ch
		mov    $0x000001,%al
		mov    %ch,_0cdb01_data
		mov    %al,_0cdb00_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a7b1_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a7c7_jump
		cmpb   $0x00000b,0x00006c(%eax)
		jne    _02a7c7_jump
		movw   $0x000000,0x000052(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a7c7_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a7e2_jump
		cmpb   $0x000016,0x00006c(%eax)
		jne    _02a7e2_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		call   _05efb0_func

	_02a7e2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a7e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _02a90c_jump

	_02a806_jump:
		cmpw   $0x00003e,0x000060(%ecx)
		jne    _02a8fc_jump
		mov    0x000024(%ecx),%ebx
		test   %ebx,%ebx
		jne    _02a8fc_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d374_func
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		or     %al,%dl
		xor    %eax,%eax
		mov    %dl,0x000081(%ecx)
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		movw   $0x00fffe,0x000042(%ecx)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		movsbw (%eax,%edx,8),%ax
		testb  $0x000008,0x000081(%ecx)
		je     _02a874_jump
		cwtl   
		jmp    _02a877_jump

	_02a874_jump:
		cwtl   
		neg    %eax

	_02a877_jump:
		mov    %ax,0x000040(%ecx)
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%esi
		mov    0x000028(%ecx),%ax
		sub    $0x000019,%esi
		mov    %ax,0x00003c(%ecx)
		mov    %esi,0x00002c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %ecx,%eax
		movb   $0x00000c,0x000072(%ecx)
		call   _05efb0_func
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000081(%ecx),%bl
		and    $0x0000bb,%bl
		mov    %bl,0x000081(%ecx)
		mov    %bl,%bh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bh
		mov    %ecx,%eax
		mov    %bh,0x000081(%ecx)
		call   _01f304_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02a8fc_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _02a806_jump

	_02a90c_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02a914_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a92b_jump
		cmpb   $0x000002,0x00006c(%eax)
		jne    _02a92b_jump
		movw   $0x000000,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_02a92b_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a94c_jump
		cmpb   $0x00000b,0x00006c(%eax)
		jne    _02a94c_jump
		cmpw   $0x000000,0x000052(%eax)
		jne    _02a94c_jump
		movw   $0x000001,0x000052(%eax)
		call   _02a7e8_func
		pop    %edx
		pop    %ebx
		ret    

	_02a94c_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02a967_jump
		cmpb   $0x000016,0x00006c(%eax)
		jne    _02a967_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		call   _05efb0_func

	_02a967_jump:
		pop    %edx
		pop    %ebx
		ret    



_02a96c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    _0cc1f0_data,%esi
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _02ab22_jump

	_02a98e_jump:
		cmpw   $0x000077,0x000060(%esi)
		jne    _02ab12_jump
		mov    0x000024(%esi),%ebx
		test   %ebx,%ebx
		jne    _02ab12_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		cmpw   $0x000074,0x000060(%edi)
		jne    _02aa0b_jump
		mov    _0cdad4_data,%ax
		movw   $0x000001,0x000042(%esi)
		cmp    $0x000002,%ax
		jge    _02a9f2_jump
		movw   $0x000000,0x000040(%esi)
		jmp    _02aa3f_jump

	_02a9f2_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _02aa03_jump
		movw   $0x00ffff,0x000040(%esi)
		jmp    _02aa3f_jump

	_02aa03_jump:
		movw   $0x000001,0x000040(%esi)
		jmp    _02aa3f_jump

	_02aa0b_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		movw   $0x000000,0x000042(%esi)
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%al
		mov    0x000081(%esi),%dh
		movsbw (%ebx,%eax,8),%ax
		test   $0x000008,%dh
		je     _02aa38_jump
		cwtl   
		jmp    _02aa3b_jump

	_02aa38_jump:
		cwtl   
		neg    %eax

	_02aa3b_jump:
		mov    %ax,0x000040(%esi)

	_02aa3f_jump:
		cmpw   $0x000074,0x000060(%edi)
		jne    _02aa66_jump
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %edi,%eax
		call   _01d710_func
		jmp    _02aaa4_jump

	_02aa66_jump:
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000009,%edx
		mov    %edi,%eax
		call   _01d710_func
		mov    $0x000010,%ebx
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%eax
		mov    %bx,(%esp)
		add    $0x000020,%ecx
		add    %ebx,%eax
		mov    %cx,0x000008(%esp)
		mov    %ax,0x000004(%esp)

	_02aaa4_jump:
		mov    0x000002(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000068(%esi),%al
		sub    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		mov    0x000006(%esp),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000074(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		sub    %ebx,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x000081(%esi),%bh
		mov    0x00002c(%esi),%ax
		or     $0x000004,%bh
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f304_func
		mov    %edi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01db8c_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ab12_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _02a98e_jump

	_02ab22_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ab2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000076(%eax),%al
		cmp    0x000077(%ecx),%al
		je     _02ab6a_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _02ab86_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _02ab86_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%ecx),%bh
		movw   $0x000000,0x000040(%ecx)
		or     $0x000010,%bh
		mov    %bh,0x000081(%ecx)
		jmp    _02ab86_jump

	_02ab6a_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d36c_func
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d364_func
		orb    $0x000010,0x000081(%ecx)

	_02ab86_jump:
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000042(%ecx)
		test   $0x000008,%al
		jne    _02aba2_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _02abb0_jump

	_02aba2_jump:
		test   $0x000008,%al
		je     _02abb7_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx

	_02abb0_jump:
		mov    %ecx,%eax
		call   _05efb0_func

	_02abb7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02abbc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		mov    _0cdb20_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _02abdc_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02abe5_jump

	_02abdc_jump:
		jge    _02abe5_jump
		orb    $0x000008,0x000081(%ecx)

	_02abe5_jump:
		cmpb   $0x000000,0x000076(%ecx)
		je     _02ac08_jump
		mov    0x00002c(%ecx),%edx
		mov    $0x000001,%ebx
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000004,%edx
		call   _05efb0_func
		pop    %ecx
		pop    %ebx
		ret    

	_02ac08_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%ecx),%bl
		movb   $0x000000,0x000070(%ecx)
		and    $0x0000ef,%bl
		mov    %bl,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_02ac2c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		mov    _0cdb20_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _02ac4c_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02ac55_jump

	_02ac4c_jump:
		jge    _02ac55_jump
		orb    $0x000008,0x000081(%ecx)

	_02ac55_jump:
		cmpb   $0x000000,0x000076(%ecx)
		je     _02ac8c_jump
		testb  $0x000008,0x000081(%ecx)
		je     _02ac78_jump
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		pop    %ecx
		pop    %ebx
		ret    

	_02ac78_jump:
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		pop    %ecx
		pop    %ebx
		ret    

	_02ac8c_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		andb   $0x0000ef,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_02aca4_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02acb2_jump
		cmpb   $0x000000,0x00006c(%eax)
		je     _02acbe_jump

	_02acb2_jump:
		cmpb   $0x000001,0x00006d(%eax)
		jne    _02accd_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _02accd_jump

	_02acbe_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		call   _05efb0_func

	_02accd_jump:
		pop    %edx
		pop    %ebx
		ret    



_02acd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpw   $0x000000,0x000052(%eax)
		jne    _02acf5_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		call   _05efb0_func
		movb   $0x000000,0x00007f(%ecx)
		movw   $0x000001,0x000052(%ecx)

	_02acf5_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ad00_func:
		mov    0x00005c(%eax),%ax
		and    $0x00ffff,%eax
		sar    $0x00000b,%eax
		ret    



_02ad10_func:
		mov    0x00005c(%eax),%ax
		and    $0x000007,%ah
		ret    



_02ad18_func:
		push   %ebx
		call   _02ad10_func
		movswl %ax,%ebx
		movswl %dx,%eax
		add    %ebx,%eax
		shl    $0x000003,%eax
		add    $_092a96_data,%eax
		pop    %ebx
		ret    



_02ad38_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %edx,%esi
		mov    0x000060(%eax),%dx
		cmp    $0x000064,%dx
		jb     _02ad56_jump
		jbe    _02ad75_jump
		cmp    $0x0000d9,%dx
		je     _02ad75_jump
		jmp    _02adac_jump

	_02ad56_jump:
		cmp    $0x000014,%dx
		jne    _02adac_jump
		mov    $0x000001,%cl
		xor    %bh,%bh
		mov    $0x0000ff,%al
		mov    %bh,(%esp)
		mov    %cl,0x000001(%esp)
		mov    $0x000002,%ch
		mov    %al,0x000003(%esp)
		mov    %ch,0x000002(%esp)
		jmp    _02adb7_jump

	_02ad75_jump:
		movb   $0x000001,(%esp)
		cmpb   $0x00000b,0x00006c(%eax)
		jne    _02ada5_jump
		cmpb   $0x000002,0x00006d(%eax)
		jne    _02ad8c_jump
		movb   $0x000003,0x000001(%esp)
		jmp    _02ad9e_jump

	_02ad8c_jump:
		cmpb   $0x00000f,0x00006b(%eax)
		jbe    _02ad99_jump
		movb   $0x000002,0x000001(%esp)
		jmp    _02ad9e_jump

	_02ad99_jump:
		movb   $0x0000ff,0x000001(%esp)

	_02ad9e_jump:
		movb   $0x0000ff,0x000002(%esp)
		jmp    _02adb7_jump

	_02ada5_jump:
		movb   $0x0000ff,0x000001(%esp)
		jmp    _02adb7_jump

	_02adac_jump:
		xor    %dh,%dh
		mov    $0x0000ff,%bl
		mov    %dh,(%esp)
		mov    %bl,0x000001(%esp)

	_02adb7_jump:
		xor    %eax,%eax

	_02adb9_jump:
		movswl %ax,%edx
		mov    (%esp,%edx,1),%dl
		inc    %eax
		xor    %dh,%dh
		movswl %ax,%ebx
		cmp    %dx,%si
		sete   %dl
		mov    (%esp,%ebx,1),%cl
		mov    %edx,%edi
		cmp    $0x0000ff,%cl
		je     _02addb_jump
		cmp    $0x000001,%dx
		jne    _02adb9_jump

	_02addb_jump:
		mov    %edi,%eax
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02ae60_func:
		push   %esi
		push   %edi
		mov    0x000014(%esp),%esi
		mov    0x000018(%esp),%edi
		sub    %esi,%eax
		sub    %edi,%edx
		add    %edi,%ecx
		mov    0x00000c(%esp),%edi
		add    %esi,%ebx
		cmp    %di,%ax
		jg     _02aeb2_jump
		cmp    0x000010(%esp),%dx
		jg     _02aeb2_jump
		movswl %ax,%esi
		movswl %bx,%eax
		add    %eax,%esi
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    %esi,%eax
		jg     _02aeb2_jump
		movswl %dx,%eax
		movswl %cx,%edx
		add    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _02aeb2_jump
		mov    $0x000001,%eax
		pop    %edi
		pop    %esi
		ret    $0x000010

	_02aeb2_jump:
		xor    %eax,%eax
		pop    %edi
		pop    %esi
		ret    $0x000010



_02aebc_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %ecx,(%esp)
		mov    0x000060(%eax),%ax
		cmp    $0x00004f,%ax
		jb     _02afdf_jump
		jbe    _02b148_jump
		cmp    $0x000086,%ax
		jb     _02af76_jump
		jbe    _02b193_jump
		cmp    $0x0000a7,%ax
		jb     _02af35_jump
		jbe    _02b193_jump
		cmp    $0x0000be,%ax
		jb     _02af26_jump
		jbe    _02b853_jump
		cmp    $0x0000c3,%ax
		jb     _02af5a_jump
		jbe    _02b86c_jump
		cmp    $0x0000cc,%ax
		je     _02b131_jump
		jmp    _02af5a_jump

	_02af26_jump:
		cmp    $0x0000ac,%ax
		je     _02b4b7_jump
		jmp    _02af5a_jump

	_02af35_jump:
		cmp    $0x000092,%ax
		jb     _02af50_jump
		jbe    _02b1ff_jump
		cmp    $0x0000a4,%ax
		je     _02b9d9_jump
		jmp    _02af5a_jump

	_02af50_jump:
		cmp    $0x000087,%ax
		je     _02b250_jump

	_02af5a_jump:
		mov    0x000028(%esp),%edx
		mov    (%esp),%ecx
		mov    %edi,%ebx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01d294_func

	_02af6d_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02af76_jump:
		cmp    $0x000077,%ax
		jb     _02afb2_jump
		jbe    _02b7c9_jump
		cmp    $0x00007a,%ax
		jb     _02afa6_jump
		jbe    _02b40d_jump
		cmp    $0x000081,%ax
		jb     _02af5a_jump
		jbe    _02b90d_jump
		cmp    $0x000084,%ax
		je     _02b883_jump
		jmp    _02af5a_jump

	_02afa6_jump:
		cmp    $0x000079,%ax
		je     _02b250_jump
		jmp    _02af5a_jump

	_02afb2_jump:
		cmp    $0x000061,%ax
		jb     _02afd0_jump
		jbe    _02b2fa_jump
		cmp    $0x000069,%ax
		jb     _02af5a_jump
		cmp    $0x00006a,%ax
		jbe    _02b3c6_jump
		jmp    _02af5a_jump

	_02afd0_jump:
		cmp    $0x000053,%ax
		je     _02b7f8_jump
		jmp    _02af5a_jump

	_02afdf_jump:
		cmp    $0x000039,%ax
		jb     _02b04a_jump
		jbe    _02b0b4_jump
		cmp    $0x00003e,%ax
		jb     _02b02b_jump
		jbe    _02b693_jump
		cmp    $0x000046,%ax
		jb     _02b01c_jump
		jbe    _02b774_jump
		cmp    $0x000047,%ax
		jbe    _02b2a5_jump
		cmp    $0x000049,%ax
		je     _02b1e8_jump
		jmp    _02af5a_jump

	_02b01c_jump:
		cmp    $0x000042,%ax
		je     _02b67a_jump
		jmp    _02af5a_jump

	_02b02b_jump:
		cmp    $0x00003b,%ax
		jb     _02b462_jump
		jbe    _02b583_jump
		cmp    $0x00003c,%ax
		je     _02b5cd_jump
		jmp    _02af5a_jump

	_02b04a_jump:
		cmp    $0x000023,%ax
		jb     _02b08a_jump
		jbe    _02b4b7_jump
		cmp    $0x00002b,%ax
		jb     _02b07b_jump
		jbe    _02b4b7_jump
		cmp    $0x00002c,%ax
		jbe    _02b2a5_jump
		cmp    $0x000038,%ax
		je     _02b4b7_jump
		jmp    _02af5a_jump

	_02b07b_jump:
		cmp    $0x000028,%ax
		je     _02b40d_jump
		jmp    _02af5a_jump

	_02b08a_jump:
		cmp    $0x000005,%ax
		jb     _02b0a5_jump
		jbe    _02b5a8_jump
		cmp    $0x000008,%ax
		je     _02b193_jump
		jmp    _02af5a_jump

	_02b0a5_jump:
		cmp    $0x000002,%ax
		je     _02b193_jump
		jmp    _02af5a_jump

	_02b0b4_jump:
		mov    0x000028(%esp),%ecx
		push   %ecx
		mov    0x000004(%esp),%eax
		push   %eax
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %esi,%eax
		mov    $0x000001,%edx
		call   _01d710_func
		mov    (%esp),%eax
		mov    0x000028(%esp),%edx
		mov    (%eax),%ax
		cmp    (%edx),%ax
		jle    _02b103_jump
		addw   $0x000004,0x000000(%ebp)
		mov    (%esp),%eax
		subw   $0x000008,(%eax)
		mov    (%edi),%bx
		add    $0x000008,%ebx
		mov    0x000028(%esp),%eax
		mov    %bx,(%edi)
		subw   $0x00000c,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b103_jump:
		mov    (%esp),%eax
		movswl (%eax),%eax
		sar    %eax
		movswl 0x000000(%ebp),%esi
		sub    $0x000003,%eax
		add    %eax,%esi
		mov    (%esp),%eax
		mov    %si,0x000000(%ebp)
		movw   $0x000006,(%eax)
		addw   $0x000010,(%edi)
		subw   $0x000020,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b131_jump:
		mov    0x000028(%esp),%edx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01d858_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b148_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000014(%esp),%eax
		add    $0x00000d,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000d,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000004,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000004,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b193_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000014(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000014,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000014,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b1e8_jump:
		mov    0x000028(%esp),%ebx
		push   %ebx
		mov    %esi,%eax
		mov    %edi,%ebx
		call   _01d294_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b1ff_jump:
		mov    0x000028(%esp),%edx
		push   %edx
		mov    %esi,%eax
		mov    %ebp,%edx
		call   _01d294_func
		mov    (%esp),%eax
		movswl (%eax),%eax
		sar    %eax
		movswl 0x000000(%ebp),%esi
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    0x000028(%esp),%eax
		mov    %si,0x000000(%ebp)
		movswl (%eax),%eax
		sar    %eax
		movswl (%edi),%esi
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    (%esp),%eax
		mov    %si,(%edi)
		movw   $0x000004,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000004,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b250_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000014(%esp),%eax
		add    $0x00000a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x00001e,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000008,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b2a5_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000014(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		sub    $0x000004,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000004,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		add    $0x000003,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b2fa_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		xor    %ah,%ah
		mov    0x000081(%esi),%dh
		mov    %ax,0x000004(%esp)
		and    $0x0000f7,%dh
		lea    0x000008(%esp),%eax
		mov    %dh,0x000081(%esi)
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000004(%esp),%al
		mov    0x000081(%esi),%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,0x000081(%esi)
		mov    %bl,%bh
		or     %al,%bh
		mov    0x000050(%esi),%ax
		mov    %bh,0x000081(%esi)
		cmp    $0x000002,%ax
		je     _02b393_jump
		mov    0x000014(%esp),%eax
		add    $0x000003,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000014,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000032,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000028,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b393_jump:
		mov    0x000014(%esp),%eax
		add    $0x000014,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000023,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000001,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000001,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b3c6_jump:
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x000014(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000010,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000020,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b40d_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000014(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000002,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000008,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000006,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b462_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000014(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000010,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x000010,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b4b7_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %edx,%eax
		sub    $0x000008,%eax
		mov    %ax,0x000000(%ebp)
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		sub    $0x00003c,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000010,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000032,(%eax)
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02af6d_jump
		mov    0x00006c(%esi),%bh
		cmp    $0x000005,%bh
		jne    _02b528_jump
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		mov    (%edi),%dx
		add    %eax,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,(%edi)
		mov    0x000028(%esp),%edx
		mov    0x00006b(%esi),%al
		mov    (%edx),%bx
		add    %eax,%eax
		sub    %eax,%ebx
		mov    %bx,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b528_jump:
		cmp    $0x000006,%bh
		jne    _02af6d_jump
		mov    (%eax),%cx
		sar    %cx
		mov    %cx,(%eax)
		mov    (%edi),%dx
		add    %ecx,%edx
		xor    %ebx,%ebx
		mov    %dx,(%edi)
		mov    $0x00000f,%eax
		mov    0x00006b(%esi),%bl
		cmp    %ebx,%eax
		jle    _02b552_jump
		mov    %ebx,%eax

	_02b552_jump:
		mov    (%edi),%bx
		add    %eax,%eax
		sub    %eax,%ebx
		mov    %bx,(%edi)
		xor    %ebx,%ebx
		mov    $0x00000f,%eax
		mov    0x00006b(%esi),%bl
		mov    0x000028(%esp),%edx
		cmp    %ebx,%eax
		jle    _02b570_jump
		mov    %ebx,%eax

	_02b570_jump:
		mov    (%edx),%cx
		add    %eax,%eax
		add    %eax,%ecx
		mov    %cx,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b583_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x000000,(%ecx)
		movw   $0x000000,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b5a8_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x000032,(%ecx)
		movw   $0x00006e,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b5cd_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02b621_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _02b621_jump
		cmpb   $0x000010,0x00006b(%esi)
		jb     _02b621_jump
		testb  $0x000008,0x000081(%esi)
		je     _02b5ef_jump
		mov    $0x000050,%eax
		jmp    _02b5f4_jump

	_02b5ef_jump:
		mov    $0x000010,%eax

	_02b5f4_jump:
		add    0x000028(%esi),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000028,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000044,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b621_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02b647_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _02b647_jump
		testb  $0x000008,0x000081(%esi)
		je     _02b63d_jump
		mov    $0x000050,%eax
		jmp    _02b642_jump

	_02b63d_jump:
		mov    $0x000030,%eax

	_02b642_jump:
		add    0x000028(%esi),%eax
		jmp    _02b650_jump

	_02b647_jump:
		mov    0x000028(%esi),%ax
		add    $0x000040,%eax

	_02b650_jump:
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000026,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000020,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b67a_jump:
		mov    0x000028(%esp),%ecx
		push   %ecx
		mov    %esi,%eax
		mov    0x000004(%esp),%ecx
		call   _01d294_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b693_jump:
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x00006d(%esi),%ch
		cmp    $0x000002,%ch
		jne    _02b6ee_jump
		cmp    0x00006c(%esi),%ch
		jne    _02b6ee_jump
		mov    0x000014(%esp),%eax
		add    $0x000005,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00001c,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000006,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000016,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b6ee_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02b72d_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _02b72d_jump
		mov    0x000014(%esp),%eax
		add    $0x000006,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000012,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000d,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00000b,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b72d_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02af6d_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _02af6d_jump
		mov    0x000014(%esp),%eax
		add    $0x000007,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x000008,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000013,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00000b,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b774_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000014(%esp),%eax
		add    $0x000018,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000010(%esp),%eax
		add    $0x00000e,%eax
		mov    %ax,(%edi)
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000030,%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    0x000028(%esp),%edx
		sub    $0x00001b,%eax
		mov    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b7c9_jump:
		mov    0x000028(%esi),%ax
		add    $0x00004c,%eax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		add    $0x000055,%eax
		mov    %ax,(%ebx)
		mov    0x000028(%esp),%eax
		movw   $0x000008,(%ecx)
		movw   $0x000008,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b7f8_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		mov    %ax,(%ebx)
		cmpb   $0x000000,0x00006c(%esi)
		jne    _02b839_jump
		mov    (%esp),%eax
		movw   $0x000016,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000016,(%eax)
		mov    (%edx),%dx
		add    $0x000044,%edx
		mov    %dx,0x000000(%ebp)
		mov    (%ebx),%bx
		add    $0x000041,%ebx
		mov    %bx,(%edi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b839_jump:
		mov    (%esp),%eax
		movw   $0x000000,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000000,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b853_jump:
		mov    0x000028(%esp),%ecx
		push   %ecx
		mov    %esi,%eax
		mov    0x000004(%esp),%ecx
		call   _0625d0_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b86c_jump:
		mov    0x000028(%esp),%ebx
		push   %ebx
		mov    %esi,%eax
		mov    %edi,%ebx
		call   _01bd10_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b883_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02b88f_jump
		cmpb   $0x00000f,0x00006c(%esi)
		je     _02b8a7_jump

	_02b88f_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02b89b_jump
		cmpb   $0x00000c,0x00006c(%esi)
		je     _02b8a7_jump

	_02b89b_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02b8da_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _02b8da_jump

	_02b8a7_jump:
		mov    0x000028(%esi),%ax
		add    $0x000036,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000037,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000e,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000015,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b8da_jump:
		mov    0x000028(%esi),%ax
		add    $0x00004a,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00002d,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00000e,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000015,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b90d_jump:
		cmpb   $0x000001,0x000076(%esi)
		jne    _02b93c_jump
		mov    0x000028(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%edx)
		mov    0x00002c(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%ebx)
		mov    (%esp),%eax
		movw   $0x00002b,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x00000f,(%eax)

	_02b93c_jump:
		cmpb   $0x000002,0x000076(%esi)
		jne    _02b96c_jump
		mov    0x000028(%esi),%ax
		add    $0x000083,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000058,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000011,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000031,(%eax)

	_02b96c_jump:
		cmpb   $0x000003,0x000076(%esi)
		jne    _02b99c_jump
		mov    0x000028(%esi),%ax
		add    $0x00003e,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x00008a,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x00002b,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000010,(%eax)

	_02b99c_jump:
		cmpb   $0x000004,0x000076(%esi)
		jne    _02af6d_jump
		mov    0x000028(%esi),%ax
		add    $0x000060,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00002c(%esi),%ax
		add    $0x000057,%eax
		mov    %ax,(%edi)
		mov    (%esp),%eax
		movw   $0x000011,(%eax)
		mov    0x000028(%esp),%eax
		movw   $0x000030,(%eax)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02b9d9_jump:
		mov    0x000028(%esp),%eax
		push   %eax
		mov    %esi,%eax
		call   _01d294_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    0x000007(%eax),%dl
		add    %dl,%dl
		shr    $0x000007,%dl
		mov    0x000007(%eax),%al
		and    $0x0000ff,%edx
		shr    $0x000007,%al
		add    %edx,%edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		lea    0x000000(,%eax,4),%esi
		sub    %eax,%esi
		mov    $0x000018,%eax
		shl    $0x000002,%esi
		mov    0x000000(%ebp),%dx
		sub    %esi,%eax
		add    %eax,%edx
		mov    %dx,0x000000(%ebp)
		mov    (%edi),%bx
		add    %eax,%ebx
		mov    (%esp),%edx
		mov    %bx,(%edi)
		add    %eax,%eax
		sub    %ax,(%edx)
		mov    0x000028(%esp),%edx
		sub    %ax,(%edx)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02ba58_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,(%esp)
		lea    0x000020(%esp),%ecx
		lea    0x000004(%esp),%ebx
		xor    %edx,%edx
		mov    0x000060(%eax),%ax
		mov    %edx,0x00000c(%esp)
		mov    %edx,0x000010(%esp)
		mov    %edx,0x00001c(%esp)
		mov    %edx,0x000024(%esp)
		lea    0x000018(%esp),%edx
		mov    %eax,0x000014(%esp)
		push   %edx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		push   %edx
		movswl %di,%edx
		call   _01d710_func
		mov    %eax,%edx
		test   %ax,%ax
		je     _02bd5f_jump
		mov    0x000014(%esp),%ebx
		cmp    $0x000051,%bx
		jb     _02bad4_jump
		jbe    _02bae3_jump
		cmp    $0x000064,%bx
		jb     _02bd21_jump
		jbe    _02bc59_jump
		cmp    $0x0000d9,%bx
		je     _02bc59_jump
		jmp    _02bd21_jump

	_02bad4_jump:
		cmp    $0x000014,%bx
		je     _02bb70_jump
		jmp    _02bd21_jump

	_02bae3_jump:
		cmp    $0x000004,%di
		jb     _02baf6_jump
		jbe    _02bb29_jump
		cmp    $0x000005,%di
		je     _02bb4a_jump
		jmp    _02bd21_jump

	_02baf6_jump:
		cmp    $0x000003,%di
		jne    _02bd21_jump
		mov    $0x000004,%ecx
		mov    $0x000002,%esi
		mov    $0xfffffffc,%edi
		mov    $0xfffffff6,%eax
		mov    %ecx,0x000024(%esp)
		mov    %esi,0x00001c(%esp)
		mov    %edi,0x000010(%esp)
		mov    %eax,0x00000c(%esp)
		jmp    _02bd21_jump

	_02bb29_jump:
		mov    $0x000002,%edi
		xor    %esi,%esi
		mov    $0xfffffff6,%ebx
		mov    %esi,0x000024(%esp)
		mov    %edi,0x00001c(%esp)
		mov    %esi,0x000010(%esp)
		mov    %ebx,0x00000c(%esp)
		jmp    _02bd21_jump

	_02bb4a_jump:
		mov    $0x000002,%eax
		mov    $0xfffffffc,%ebx
		xor    %edi,%edi
		mov    $0xfffffff6,%ecx
		mov    %edi,0x000024(%esp)
		mov    %eax,0x00001c(%esp)
		mov    %ebx,0x000010(%esp)
		mov    %ecx,0x00000c(%esp)
		jmp    _02bd21_jump

	_02bb70_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02bb7c_jump
		cmpb   $0x000000,0x00006c(%esi)
		je     _02bb90_jump

	_02bb7c_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _02bc0b_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _02bc0b_jump

	_02bb90_jump:
		cmp    $0x000001,%di
		jb     _02bba3_jump
		jbe    _02bbc8_jump
		cmp    $0x000002,%di
		je     _02bbe5_jump
		jmp    _02bd21_jump

	_02bba3_jump:
		test   %di,%di
		jne    _02bd21_jump
		mov    $0x00000a,%esi
		mov    $0x000022,%eax
		mov    $0x000020,%ebx
		mov    %edi,0x00001c(%esp)
		mov    %esi,0x000024(%esp)
		jmp    _02bd19_jump

	_02bbc8_jump:
		mov    $0x000004,%eax
		mov    $0x00001a,%ecx
		xor    %ebx,%ebx
		mov    %eax,0x000024(%esp)
		mov    %ebx,0x00001c(%esp)
		mov    %ecx,0x000008(%esp)
		jmp    _02bd21_jump

	_02bbe5_jump:
		mov    $0x000004,%ebx
		mov    $0x000030,%esi
		mov    $0x000018,%edi
		xor    %ecx,%ecx
		mov    %ebx,0x000024(%esp)
		mov    %ecx,0x00001c(%esp)
		mov    %esi,0x000008(%esp)
		mov    %edi,0x000018(%esp)
		jmp    _02bd21_jump

	_02bc0b_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02bc48_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _02bc48_jump
		mov    0x000028(%esi),%ax
		add    $0x000070,%eax
		mov    %eax,0x000004(%esp)
		mov    0x00002c(%esi),%ax
		add    $0x0000b8,%eax
		mov    $0x000020,%edi
		mov    %eax,0x000020(%esp)
		mov    $0x000010,%eax
		mov    %edi,0x000008(%esp)
		mov    %eax,0x000018(%esp)
		jmp    _02bd21_jump

	_02bc48_jump:
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    %ecx,0x000008(%esp)
		mov    %ecx,0x000018(%esp)
		jmp    _02bd21_jump

	_02bc59_jump:
		cmp    $0x000002,%di
		jb     _02bc74_jump
		jbe    _02bce2_jump
		cmp    $0x000003,%di
		je     _02bd00_jump
		jmp    _02bd21_jump

	_02bc74_jump:
		cmp    $0x000001,%di
		jne    _02bd21_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02bcbc_jump
		mov    0x00006c(%esi),%bl
		cmp    $0x000009,%bl
		je     _02bc96_jump
		cmp    $0x00000a,%bl
		je     _02bc96_jump
		cmp    $0x00000b,%bl
		jne    _02bcbc_jump

	_02bc96_jump:
		mov    $0xfffffff8,%eax
		mov    $0x000005,%ebx
		mov    $0x00001a,%ecx
		mov    $0x000008,%esi
		mov    %eax,0x000024(%esp)
		mov    %ebx,0x00001c(%esp)
		mov    %ecx,0x000008(%esp)
		mov    %esi,0x000018(%esp)
		jmp    _02bd21_jump

	_02bcbc_jump:
		mov    $0x000001,%ebx
		mov    $0xfffffffb,%ecx
		mov    $0x000010,%esi
		mov    $0x00001e,%edi
		mov    %ebx,0x000024(%esp)
		mov    %ecx,0x00001c(%esp)
		mov    %esi,0x000008(%esp)
		mov    %edi,0x000018(%esp)
		jmp    _02bd21_jump

	_02bce2_jump:
		mov    $0x000007,%esi
		xor    %ecx,%ecx
		mov    $0x000010,%edi
		mov    %ecx,0x000024(%esp)
		mov    %esi,0x00001c(%esp)
		mov    %edi,0x000008(%esp)
		mov    %edi,0x000018(%esp)
		jmp    _02bd21_jump

	_02bd00_jump:
		mov    $0x000002,%edi
		mov    $0x00000d,%eax
		xor    %esi,%esi
		mov    $0x000009,%ebx
		mov    %esi,0x000024(%esp)
		mov    %edi,0x00001c(%esp)

	_02bd19_jump:
		mov    %eax,0x000008(%esp)
		mov    %ebx,0x000018(%esp)

	_02bd21_jump:
		mov    0x000004(%esp),%eax
		mov    0x000024(%esp),%ecx
		add    %ecx,%eax
		mov    %ax,0x000000(%ebp)
		mov    0x00001c(%esp),%esi
		mov    0x000020(%esp),%eax
		mov    (%esp),%ebx
		add    %esi,%eax
		mov    %ax,(%ebx)
		mov    0x000010(%esp),%edi
		mov    0x000008(%esp),%eax
		mov    0x000038(%esp),%ebx
		add    %edi,%eax
		mov    %ax,(%ebx)
		mov    0x000018(%esp),%eax
		add    0x00000c(%esp),%eax
		mov    0x00003c(%esp),%ebx
		mov    %ax,(%ebx)

	_02bd5f_jump:
		mov    %edx,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_02bd6c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		mov    0x000048(%esp),%esi
		mov    %ax,0x000020(%esp)
		mov    %dx,0x000018(%esp)
		mov    %bx,0x00001c(%esp)
		mov    %cx,0x000034(%esp)
		mov    0x000060(%esi),%ax
		mov    $0xffffffff,%edi
		cmp    $0x000071,%ax
		jb     _02bdc4_jump
		jbe    _02bdd3_jump
		cmp    $0x0000c6,%ax
		jb     _02c094_jump
		jbe    _02be70_jump
		cmp    $0x0000c8,%ax
		jb     _02c094_jump
		cmp    $0x0000c9,%ax
		jbe    _02be70_jump
		jmp    _02c094_jump

	_02bdc4_jump:
		cmp    $0x00002e,%ax
		je     _02be70_jump
		jmp    _02c094_jump

	_02bdd3_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x00006b(%esi),%bl
		mov    %bl,%al
		mov    _094884_data(,%eax,2),%dx
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _02c094_jump
		movswl %bx,%ebp
		mov    0x00002c(%esi),%cx
		mov    _0948d2_data(,%ebp,2),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%bl
		push   %eax
		add    %ecx,%ebx
		mov    _0948aa_data(,%ebp,2),%eax
		add    %ebx,%edx
		mov    _0948d4_data(,%ebp,2),%bx
		sar    $0x000010,%eax
		sub    %ebx,%edx
		push   %eax
		movswl %dx,%edx
		mov    0x00003a(%esp),%ecx
		push   %edx
		xor    %edx,%edx
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%dl
		sar    %eax
		add    %ebx,%edx
		sar    $0x000010,%ecx
		sub    %eax,%edx
		mov    0x000026(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		mov    0x000022(%esp),%edx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02c094_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02be70_jump:
		mov    0x000034(%esp),%eax
		cmp    _0cecba_data,%ax
		jne    _02bf5d_jump
		lea    0x000030(%esp),%eax
		push   %eax
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000030(%esp),%eax
		lea    0x000020(%esp),%ecx
		push   %eax
		lea    0x000020(%esp),%eax
		lea    0x000038(%esp),%ebx
		push   %eax
		lea    0x000040(%esp),%edx
		mov    %esi,%eax
		call   _01da1c_func
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%ebp
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%ebp
		sar    $0x000010,%eax
		mov    0x000026(%esp),%esi
		push   %eax
		mov    0x000042(%esp),%eax
		mov    %ebp,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%esi
		mov    %eax,0x000010(%esp)
		mov    0x00002e(%esp),%eax
		mov    %esi,%ebx
		sar    $0x000010,%eax
		mov    0x000010(%esp),%ecx
		mov    %eax,0x000014(%esp)
		call   _02ae60_func
		test   %ax,%ax
		je     _02bf13_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bf13_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000c(%esp),%ecx
		sar    $0x000010,%eax
		mov    %esi,%ebx
		push   %eax
		mov    %ebp,%edx
		mov    0x000014(%esp),%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02c094_jump
		mov    $0x000001,%edi
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_02bf5d_jump:
		lea    0x000030(%esp),%eax
		push   %eax
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000010(%esp),%eax
		push   %eax
		lea    0x000030(%esp),%eax
		lea    0x000020(%esp),%ecx
		push   %eax
		lea    0x000020(%esp),%eax
		lea    0x000038(%esp),%ebx
		push   %eax
		lea    0x000040(%esp),%edx
		mov    %esi,%eax
		call   _01da1c_func
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%edx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02bfd4_jump
		mov    $0x000006,%edi

	_02bfd4_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%edx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02c01f_jump
		mov    $0x000001,%edi

	_02c01f_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02c094_jump
		cmpb   $0x00000a,0x00006c(%esi)
		jne    _02c094_jump
		lea    0x000014(%esp),%eax
		lea    0x000028(%esp),%ecx
		push   %eax
		lea    0x000014(%esp),%eax
		lea    0x000030(%esp),%ebx
		push   %eax
		mov    $0x000009,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000036(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x000022(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%edx
		push   %eax
		mov    0x000036(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02c094_jump
		mov    $0x000009,%edi

	_02c094_jump:
		mov    %edi,%eax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02c0a0_func:
		push   %esi
		push   %edi
		sub    $0x000034,%esp
		mov    0x000044(%esp),%esi
		mov    %eax,0x000010(%esp)
		mov    %dx,0x00001c(%esp)
		mov    %bx,0x000020(%esp)
		mov    %cx,0x000004(%esp)
		xor    %edx,%edx
		mov    %dx,(%esp)
		mov    %dx,0x000024(%esp)
		mov    %dx,0x000028(%esp)
		mov    %dx,0x000008(%esp)
		mov    $0xffffffff,%eax
		mov    0x00005c(%esi),%dx
		mov    %eax,0x00000c(%esp)
		test   %dx,%dx
		je     _02c31c_jump
		mov    %esi,%eax
		call   _02ad00_func
		mov    _0cecd4_data,%di
		mov    %eax,0x000018(%esp)
		cmp    $0x000001,%di
		jne    _02c15c_jump
		mov    0x000060(%esi),%ax
		cmp    $0x000032,%ax
		je     _02c10f_jump
		cmp    $0x0000e3,%ax
		jne    _02c12e_jump

	_02c10f_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _02c158_jump

	_02c12e_jump:
		cmpw   $0x0000a5,0x000060(%esi)
		jne    _02c15c_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		testb  $0x000040,0x000007(%ebx,%eax,1)
		je     _02c15c_jump

	_02c158_jump:
		decl   0x000018(%esp)

	_02c15c_jump:
		xor    %edi,%edi
		mov    0x000018(%esp),%eax
		mov    %di,0x00002c(%esp)
		test   %ax,%ax
		jle    _02c4a8_jump

	_02c170_jump:
		mov    0x00002a(%esp),%edx
		mov    %esi,%eax
		sar    $0x000010,%edx
		call   _02ad18_func
		mov    0x000006(%eax),%ch
		mov    %eax,%edi
		test   $0x000004,%ch
		je     _02c194_jump
		cmpw   $0x00005e,0x000010(%esp)
		jne    _02c2f9_jump

	_02c194_jump:
		testb  $0x000002,0x000006(%edi)
		je     _02c249_jump
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		imul   $0x00000c,%eax,%eax
		mov    0x000004(%esi),%edx
		add    %edx,%eax
		mov    0x000008(%eax),%dx
		and    $0x00003f,%dh
		xor    %ebx,%ebx
		and    $0x00ffff,%edx
		mov    0x00006b(%esi),%bl
		imul   %ebx,%edx
		mov    (%eax),%eax
		shl    $0x000002,%edx
		lea    (%eax,%edx,1),%ebx
		xor    %edx,%edx
		mov    0x000007(%edi),%dl
		cmpb   $0x000000,0x000003(%ebx,%edx,4)
		je     _02c2a5_jump
		mov    %esp,%eax
		push   %eax
		lea    0x000028(%esp),%eax
		lea    0x00002c(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%ebx
		mov    %esi,%eax
		call   _01d710_func
		testb  $0x000008,0x000081(%esi)
		je     _02c217_jump
		xor    %eax,%eax
		mov    0x000024(%esp),%edx
		mov    0x000004(%edi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    (%edi),%dx
		mov    0x000008(%esp),%ebx
		sub    %edx,%eax
		add    %eax,%ebx
		mov    %bx,0x000008(%esp)
		jmp    _02c225_jump

	_02c217_jump:
		mov    0x000008(%esp),%ecx
		mov    (%edi),%ax
		add    %eax,%ecx
		mov    %cx,0x000008(%esp)

	_02c225_jump:
		mov    0x000028(%esp),%ecx
		mov    0x000002(%edi),%ax
		add    %eax,%ecx
		mov    %cx,0x000028(%esp)
		xor    %eax,%eax
		mov    0x000004(%edi),%al
		mov    %ax,0x000024(%esp)
		xor    %eax,%eax
		mov    0x000005(%edi),%al
		mov    %ax,(%esp)
		jmp    _02c2a5_jump

	_02c249_jump:
		mov    0x000028(%esi),%ax
		mov    (%edi),%dx
		add    %edx,%eax
		mov    %ax,0x000008(%esp)
		mov    0x00002c(%esi),%ax
		mov    0x000002(%edi),%bx
		add    %ebx,%eax
		mov    %ax,0x000028(%esp)
		xor    %eax,%eax
		mov    0x000004(%edi),%al
		mov    %ax,0x000024(%esp)
		xor    %eax,%eax
		mov    0x000005(%edi),%al
		mov    %ax,(%esp)
		testb  $0x000008,0x000081(%esi)
		je     _02c2a5_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		mov    0x000022(%esp),%edx
		add    %ebx,%eax
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		add    %edx,%ebx
		add    %eax,%eax
		sub    %ebx,%eax
		mov    %ax,0x000008(%esp)

	_02c2a5_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%edx
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02c2f9_jump
		xor    %eax,%eax
		mov    0x000007(%edi),%al
		mov    %eax,0x00000c(%esp)
		jmp    _02c4a8_jump

	_02c2f9_jump:
		mov    0x00002c(%esp),%ecx
		inc    %ecx
		mov    0x000018(%esp),%edi
		mov    %cx,0x00002c(%esp)
		cmp    %di,%cx
		jl     _02c170_jump
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02c31c_jump:
		mov    0x000079(%esi),%ah
		cmp    $0x0000fe,%ah
		jne    _02c3ca_jump
		mov    %esp,%eax
		lea    0x000024(%esp),%ecx
		lea    0x000028(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02aebc_func
		testb  $0x000008,0x000081(%esi)
		je     _02c36a_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		mov    0x000022(%esp),%ebx
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		add    %eax,%eax
		sub    %ebx,%eax
		mov    %ax,0x000008(%esp)

	_02c36a_jump:
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%edx
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02c3b5_jump
		movswl %ax,%edx
		jmp    _02c3ba_jump

	_02c3b5_jump:
		mov    $0xffffffff,%edx

	_02c3ba_jump:
		mov    %edx,0x00000c(%esp)
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02c3ca_jump:
		cmp    $0x0000ff,%ah
		jne    _02c4a8_jump
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x000008(%edx,%eax,4),%ax
		xor    %ebx,%ebx
		and    $0x00003f,%ah
		mov    %bx,0x000030(%esp)
		mov    %eax,0x000014(%esp)
		test   %ax,%ax
		jle    _02c4a8_jump

	_02c400_jump:
		mov    0x00002e(%esp),%edi
		sar    $0x000010,%edi
		mov    %esi,%eax
		mov    %edi,%edx
		call   _02ad38_func
		test   %ax,%ax
		je     _02c491_jump
		mov    %esp,%eax
		lea    0x000028(%esp),%ecx
		push   %eax
		lea    0x000028(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    %edi,%edx
		mov    %esi,%eax
		call   _02ba58_func
		test   %ax,%ax
		je     _02c491_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000042(%esp),%ecx
		push   %eax
		mov    0x00002e(%esp),%eax
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%edx
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00002a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02c491_jump
		mov    0x000030(%esp),%eax
		mov    %eax,0x00000c(%esp)
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02c491_jump:
		mov    0x000030(%esp),%edx
		inc    %edx
		mov    0x000014(%esp),%ebx
		mov    %dx,0x000030(%esp)
		cmp    %bx,%dx
		jl     _02c400_jump

	_02c4a8_jump:
		mov    0x00000c(%esp),%eax
		add    $0x000034,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_02c4b4_func:
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    0x000028(%esp),%esi
		mov    %ax,0x000014(%esp)
		mov    %edx,%edi
		mov    %bx,0x000018(%esp)
		mov    %cx,0x000010(%esp)
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000079(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		mov    %eax,%edx
		test   %ax,%ax
		je     _02c532_jump
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000e(%esp),%eax
		mov    0x000016(%esp),%ecx
		sar    $0x000010,%eax
		mov    0x00001e(%esp),%ebx
		push   %eax
		mov    0x00000e(%esp),%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		push   %eax
		mov    0x000022(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _02ae60_func
		mov    %eax,%edx

	_02c532_jump:
		test   %dx,%dx
		je     _02c53e_jump
		xor    %eax,%eax
		mov    0x000079(%esi),%al
		jmp    _02c543_jump

	_02c53e_jump:
		mov    $0xffffffff,%eax

	_02c543_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000004



_02c54c_func:
		push   %esi
		push   %edi
		mov    0x000010(%esp),%edi
		mov    %eax,%esi
		mov    %edx,%eax
		xor    %edx,%edx
		mov    0x000079(%edi),%dl
		cmp    $0x0000fd,%dx
		jb     _02c5ad_jump
		jbe    _02c56d_jump
		cmp    $0x0000ff,%dx
		jbe    _02c58c_jump
		jmp    _02c5ad_jump

	_02c56d_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		movswl %cx,%esi
		cwtl   
		sar    $0x000010,%edx
		movswl %bx,%edi
		mov    %edx,%ecx
		mov    %esi,%ebx
		mov    %edi,%edx
		call   _02bd6c_func
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02c58c_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		sar    $0x000010,%edx
		movswl %cx,%ecx
		push   %edx
		movswl %ax,%edx
		xor    %eax,%eax
		movswl %bx,%ebx
		mov    %si,%ax
		call   _02c0a0_func
		pop    %edi
		pop    %esi
		ret    $0x000008

	_02c5ad_jump:
		mov    0x00000a(%esp),%edx
		push   %edi
		movswl %cx,%esi
		cwtl   
		sar    $0x000010,%edx
		movswl %bx,%edi
		mov    %edx,%ecx
		mov    %esi,%ebx
		mov    %edi,%edx
		call   _02c4b4_func
		pop    %edi
		pop    %esi
		ret    $0x000008



_02c5cc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    0x000060(%eax),%ax
		cmp    $0x00009a,%ax
		jb     _02c61f_jump
		jbe    _02c71f_jump
		cmp    $0x0000a0,%ax
		jb     _02c606_jump
		jbe    _02c838_jump
		cmp    $0x0000a9,%ax
		jb     _02c855_jump
		jbe    _02c665_jump
		cmp    $0x000102,%ax
		je     _02c665_jump
		jmp    _02c855_jump

	_02c606_jump:
		cmp    $0x00009b,%ax
		jbe    _02c75f_jump
		cmp    $0x00009f,%ax
		je     _02c7a1_jump
		jmp    _02c855_jump

	_02c61f_jump:
		cmp    $0x000051,%ax
		jb     _02c642_jump
		jbe    _02c665_jump
		cmp    $0x00007d,%ax
		jb     _02c855_jump
		jbe    _02c698_jump
		cmp    $0x00008a,%ax
		je     _02c6df_jump
		jmp    _02c855_jump

	_02c642_jump:
		cmp    $0x000010,%ax
		jb     _02c855_jump
		cmp    $0x000011,%ax
		jbe    _02c795_jump
		cmp    $0x000018,%ax
		je     _02c795_jump
		jmp    _02c855_jump

	_02c665_jump:
		mov    $0x000001,%ecx
		mov    $0x000002,%esi
		xor    %ebx,%ebx
		mov    $0x0000ff,%edi
		mov    %bx,(%esp)
		mov    %cx,0x000002(%esp)
		mov    %si,0x000004(%esp)
		mov    %di,0x000006(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c698_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%ecx
		mov    $0x000003,%esi
		xor    %eax,%eax
		mov    $0x000004,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    $0x0000ff,%eax
		mov    %di,0x000008(%esp)
		mov    %ax,0x00000a(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c6df_jump:
		mov    $0x000005,%eax
		mov    $0x000006,%ebx
		mov    $0x000007,%ecx
		mov    $0x000008,%esi
		mov    $0x0000ff,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    %di,0x000008(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c71f_jump:
		mov    $0x000001,%eax
		mov    $0x000002,%ebx
		mov    $0x000003,%ecx
		mov    $0x000004,%esi
		mov    $0x0000ff,%edi
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)
		mov    %si,0x000006(%esp)
		mov    %di,0x000008(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c75f_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%ecx
		mov    $0x000003,%esi
		mov    $0x0000ff,%edi
		mov    %bx,(%esp)
		mov    %cx,0x000002(%esp)
		mov    %si,0x000004(%esp)
		mov    %di,0x000006(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c795_jump:
		mov    $0x000001,%ebx
		xor    %eax,%eax
		jmp    _02c842_jump

	_02c7a1_jump:
		testb  $0x000008,_0cdb15_data
		je     _02c7e7_jump
		mov    $0x000004,%edi
		mov    $0x000005,%eax
		mov    $0x000006,%ebx
		mov    $0x000007,%ecx
		mov    $0x000008,%esi
		mov    %di,(%esp)
		mov    %ax,0x000002(%esp)
		mov    %bx,0x000004(%esp)
		mov    %cx,0x000006(%esp)
		mov    $0x000009,%edi
		mov    %si,0x000008(%esp)
		mov    %di,0x00000a(%esp)
		jmp    _02c822_jump

	_02c7e7_jump:
		mov    $0x000009,%esi
		mov    $0x000008,%edi
		mov    $0x000007,%eax
		mov    $0x000006,%ebx
		mov    $0x000005,%ecx
		mov    %si,(%esp)
		mov    %di,0x000002(%esp)
		mov    %ax,0x000004(%esp)
		mov    %bx,0x000006(%esp)
		mov    $0x000004,%esi
		mov    %cx,0x000008(%esp)
		mov    %si,0x00000a(%esp)

	_02c822_jump:
		movw   $0x0000ff,0x00000c(%esp)
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02c838_jump:
		mov    $0x000004,%eax
		mov    $0x000005,%ebx

	_02c842_jump:
		mov    $0x0000ff,%ecx
		mov    %ax,(%esp)
		mov    %bx,0x000002(%esp)
		mov    %cx,0x000004(%esp)

	_02c855_jump:
		movswl %dx,%eax
		mov    (%esp,%eax,2),%ax
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02c864_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %bx,0x000008(%esp)
		xor    %ebx,%ebx
		mov    _0cdabc_data,%cx
		mov    _0cdafc_data,%bl
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    %cx,0x000004(%esp)
		mov    _0cdafd_data,%bl
		mov    _0cdac0_data,%cx
		add    %ebx,%ecx
		mov    %cx,(%esp)
		mov    %edx,%ebx
		mov    $0x000008,%edx
		add    %eax,%ebx
		mov    _0cec71_data,%cl
		dec    %ebx
		test   $0x000002,%cl
		je     _02c8b4_jump
		mov    $0x000004,%edx

	_02c8b4_jump:
		movswl %bx,%edi
		movswl %ax,%esi
		movswl %dx,%edx
		mov    %esi,%ebx
		lea    (%edi,%edx,1),%ecx
		sub    %edx,%ebx
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02c8dc_jump
		cmp    %ecx,%eax
		jg     _02c8dc_jump
		mov    $0x000001,%eax
		jmp    _02c8de_jump

	_02c8dc_jump:
		xor    %eax,%eax

	_02c8de_jump:
		test   %eax,%eax
		jne    _02c8e9_jump
		mov    $0x002710,%eax
		jmp    _02c93a_jump

	_02c8e9_jump:
		mov    %edi,%ecx
		mov    %esi,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02c8fe_jump
		cmp    %ecx,%eax
		jg     _02c8fe_jump
		mov    $0x000001,%eax
		jmp    _02c900_jump

	_02c8fe_jump:
		xor    %eax,%eax

	_02c900_jump:
		test   %eax,%eax
		je     _02c921_jump
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		test   %eax,%eax
		jge    _02c91a_jump
		neg    %eax

	_02c91a_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_02c921_jump:
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		test   %eax,%eax
		jge    _02c937_jump
		neg    %eax

	_02c937_jump:
		neg    %eax
		dec    %eax

	_02c93a_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_02c944_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    $0x000008,%edx
		mov    _0cec71_data,%ah
		mov    %dx,0x000010(%esp)
		test   $0x000002,%ah
		je     _02c96b_jump
		movw   $0x000004,0x000010(%esp)

	_02c96b_jump:
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _02c993_jump
		neg    %eax

	_02c993_jump:
		mov    _094762_data(,%eax,2),%eax
		sar    $0x000010,%eax
		call   _05bd50_func
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   %eax,%edx
		sar    $0x000009,%edx
		mov    %edx,%edi
		movswl %dx,%edx
		sub    %edx,%eax
		mov    -0x000002(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		mov    0x00000c(%esp),%ecx
		add    %eax,%edx
		mov    %di,0x000004(%esp)
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    _0cdabc_data,%bx
		mov    0x000074(%esi),%al
		add    %edi,%edx
		movzbw _0cdafd_data,%di
		dec    %edx
		add    %eax,%ecx
		xor    %eax,%eax
		mov    %ecx,0x00000c(%esp)
		mov    _0cdafc_data,%al
		movswl %dx,%ebp
		add    %eax,%ebx
		mov    _0cdac0_data,%ax
		mov    %bx,0x000014(%esp)
		mov    0x00000e(%esp),%ebx
		mov    0x000012(%esp),%edx
		add    %eax,%edi
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %ebx,%eax
		lea    (%ebx,%ebp,1),%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02ca34_jump
		cmp    %ecx,%eax
		jg     _02ca34_jump
		mov    $0x000001,%eax
		jmp    _02ca36_jump

	_02ca34_jump:
		xor    %eax,%eax

	_02ca36_jump:
		test   %eax,%eax
		je     _02caf4_jump
		mov    0x00000c(%esp),%eax
		sub    %edi,%eax
		movswl %ax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02ca4f_jump
		neg    %eax

	_02ca4f_jump:
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _02caf4_jump
		mov    %ebx,%eax
		mov    -0x000002(%esp),%ebx
		sar    %eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %edx,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000008(%esp)
		movsbw 0x000076(%esi),%ax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _02ca88_jump
		sar    %cl,%ax
		jmp    _02ca91_jump

	_02ca88_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02ca91_jump:
		mov    -0x000002(%esp),%ebx
		mov    %ax,0x000008(%esp)
		mov    %ebp,%ecx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _02cab0_jump
		cmp    %ecx,%eax
		jg     _02cab0_jump
		mov    $0x000001,%eax
		jmp    _02cab2_jump

	_02cab0_jump:
		xor    %eax,%eax

	_02cab2_jump:
		test   %eax,%eax
		je     _02cacd_jump
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02cac7_jump
		neg    %eax

	_02cac7_jump:
		mov    %ax,0x000054(%esi)
		jmp    _02cafa_jump

	_02cacd_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _02cade_jump
		neg    %eax

	_02cade_jump:
		mov    %eax,%ecx
		mov    %ax,0x000054(%esi)
		neg    %ecx
		mov    %cx,0x000054(%esi)
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02caf4_jump:
		movw   $0x002710,0x000054(%esi)

	_02cafa_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02cb04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%esi
		mov    $0x000008,%edx
		mov    _0cec71_data,%ah
		mov    %dx,0x00001c(%esp)
		test   $0x000002,%ah
		je     _02cb2a_jump
		movw   $0x000004,0x00001c(%esp)

	_02cb2a_jump:
		mov    $0x002710,%ebx
		xor    %eax,%eax
		mov    _0cdabc_data,%dx
		mov    _0cdafc_data,%al
		mov    0x000034(%esi),%cx
		add    %eax,%edx
		xor    %eax,%eax
		mov    %dx,0x000018(%esp)
		mov    _0cdafd_data,%al
		mov    _0cdac0_data,%dx
		xor    %edi,%edi
		add    %eax,%edx
		mov    _0cdade_data,%ax
		mov    %edx,0x000014(%esp)
		cmp    %cx,%ax
		jne    _02cc53_jump
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		mov    0x000060(%esi),%bx
		cmp    $0x00008a,%bx
		je     _02cbb2_jump
		cmp    $0x00009a,%bx
		je     _02cbb2_jump
		cmp    $0x00009b,%bx
		jne    _02cbca_jump

	_02cbb2_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		sub    $0x00000a,%edx
		add    $0x000005,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,0x00000c(%esp)

	_02cbca_jump:
		cmpw   $0x00009f,0x000060(%esi)
		jne    _02cc37_jump
		cmpb   $0x000000,_0cdb01_data
		jne    _02cc37_jump
		mov    0x00006b(%esi),%dh
		cmp    $0x000009,%dh
		jbe    _02cc37_jump
		cmp    $0x000028,%dh
		jae    _02cc37_jump
		xor    %eax,%eax
		mov    _0cdabc_data,%ebx
		mov    _0cdafc_data,%al
		add    %eax,%ebx
		mov    0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		test   %bx,%bx
		jle    _02cc1a_jump
		decl   _0cdabc_data
		jmp    _02cc22_jump

	_02cc1a_jump:
		jge    _02cc22_jump
		incl   _0cdabc_data

	_02cc22_jump:
		xor    %eax,%eax
		mov    _0cdabc_data,%dx
		mov    _0cdafc_data,%al
		add    %eax,%edx
		mov    %dx,0x000018(%esp)

	_02cc37_jump:
		mov    0x000006(%esp),%ebx
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02c864_func
		mov    %eax,%ebx

	_02cc53_jump:
		cmp    $0x002710,%bx
		jne    _02cd56_jump

	_02cc5e_jump:
		movswl %di,%edx
		mov    %esi,%eax
		call   _02c5cc_func
		inc    %edi
		mov    %ax,0x000010(%esp)
		movswl %bx,%eax
		test   %eax,%eax
		jge    _02cc77_jump
		neg    %eax

	_02cc77_jump:
		cmp    $0x000007,%eax
		jle    _02cd56_jump
		cmpw   $0x0000ff,0x000010(%esp)
		je     _02cd56_jump
		mov    %esp,%eax
		mov    0x00000e(%esp),%edx
		lea    0x000008(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    %esi,%eax
		call   _01d710_func
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		mov    0x000060(%esi),%bx
		cmp    $0x00008a,%bx
		je     _02ccd4_jump
		cmp    $0x00009a,%bx
		je     _02ccd4_jump
		cmp    $0x00009b,%bx
		jne    _02ccec_jump

	_02ccd4_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		sub    $0x00000a,%edx
		add    $0x000005,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,0x00000c(%esp)

	_02ccec_jump:
		mov    0x00000a(%esp),%ecx
		mov    0x000002(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %ecx,%ebx
		sar    $0x000010,%eax
		add    %edx,%ebx
		cmp    %ebx,%eax
		jg     _02cd3a_jump
		sub    %edx,%ecx
		cmp    %ecx,%eax
		jl     _02cd3a_jump
		mov    0x000014(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    0x000060(%esi),%ax
		sub    %ecx,%ebx
		cmp    $0x00009f,%ax
		jne    _02cd3f_jump
		cmp    $0x000008,%bx
		jl     _02cd3f_jump
		cmp    $0x00000b,%bx
		jge    _02cd3f_jump
		xor    %ebx,%ebx
		jmp    _02cd3f_jump

	_02cd3a_jump:
		mov    $0x002710,%ebx

	_02cd3f_jump:
		cmp    $0x002710,%bx
		je     _02cc5e_jump
		mov    0x000010(%esp),%al
		mov    %al,0x000075(%esi)
		jmp    _02cc5e_jump

	_02cd56_jump:
		mov    %bx,0x000054(%esi)
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02cd64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,0x000004(%esp)
		andb   $0x0000f7,0x000081(%esi)
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x000004(%esp),%al
		mov    0x000081(%esi),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%esi)
		mov    %dl,%dh
		or     %al,%dh
		mov    $0x000037,%ebx
		mov    %dh,0x000081(%esi)
		xor    %eax,%eax
		mov    0x000010(%esp),%edx
		mov    0x00000c(%esp),%ecx
		mov    0x000074(%esi),%al
		mov    %ebx,(%esp)
		add    %eax,%edx
		add    $0x000004,%ecx
		mov    %dx,0x000010(%esp)
		mov    %cx,0x00000c(%esp)
		mov    0x00000e(%esp),%ebx
		mov    0x00000a(%esp),%eax
		mov    $0x000037,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		call   _02c864_func
		mov    %eax,%ebx
		cmp    $0x002710,%ax
		je     _02ce0f_jump
		movb   $0x000002,0x000075(%esi)

	_02ce0f_jump:
		mov    %bx,0x000054(%esi)
		add    $0x000014,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ce1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		cmpb   $0x000003,0x00006c(%eax)
		je     _02ce32_jump
		cmpb   $0x000006,0x00006c(%esi)
		jne    _02ce9f_jump

	_02ce32_jump:
		cmpb   $0x00000c,0x00006b(%esi)
		jae    _02ce9f_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x00000c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    0x000008(%esp),%eax
		mov    $0x00002d,%ebx
		sub    $0x00002d,%eax
		mov    %dx,(%esp)
		movswl %ax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		mov    %ebx,0x000008(%esp)
		add    %edx,%eax
		mov    -0x000002(%esp),%ebx
		mov    %ax,0x000004(%esp)
		sar    $0x000010,%ebx
		mov    0x000002(%esp),%eax
		mov    $0x00002d,%edx
		sar    $0x000010,%eax
		call   _02c864_func
		jmp    _02cea4_jump

	_02ce9f_jump:
		mov    $0x002710,%eax

	_02cea4_jump:
		mov    _0cdade_data,%dx
		cmp    0x000034(%esi),%dx
		jne    _02cef0_jump
		cmpb   $0x000006,0x00006c(%esi)
		jne    _02cef0_jump
		cmpb   $0x00000b,0x00006b(%esi)
		jne    _02cef0_jump
		mov    $0xffffffff,%edi
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx
		mov    %di,_0cdade_data
		call   _01d374_func
		mov    _0cdad6_data,%dx
		sub    $0x00000a,%edx
		mov    $0x002710,%eax
		mov    %dx,_0cdad6_data

	_02cef0_jump:
		mov    %ax,0x000054(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02cf00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000008,_092265_data(,%eax,4)
		je     _02cf25_jump
		mov    %esi,%eax
		call   _02cb04_func
		jmp    _02cff1_jump

	_02cf25_jump:
		cmp    $0x00006d,%ax
		je     _02cf31_jump
		cmp    $0x000061,%ax
		jne    _02cf40_jump

	_02cf31_jump:
		mov    %esi,%eax
		call   _02cd64_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02cf40_jump:
		cmp    $0x000083,%ax
		jne    _02cf55_jump
		mov    %esi,%eax
		call   _02ce1c_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02cf55_jump:
		cmp    $0x0000fe,%ax
		jne    _02cf6a_jump
		mov    %esi,%eax
		call   _02c944_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02cf6a_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		mov    0x000060(%esi),%bx
		cmp    $0x000008,%bx
		je     _02cfbd_jump
		cmp    $0x000086,%bx
		je     _02cfbd_jump
		cmp    $0x0000a7,%bx
		je     _02cfbd_jump
		cmp    $0x0000b1,%bx
		je     _02cfbd_jump
		cmp    $0x000006,%bx
		jne    _02cfd3_jump

	_02cfbd_jump:
		mov    0x00000c(%esp),%ebx
		mov    (%esp),%ecx
		sub    $0x000002,%ebx
		add    $0x000004,%ecx
		mov    %bx,0x00000c(%esp)
		mov    %cx,(%esp)

	_02cfd3_jump:
		mov    0x000002(%esp),%ebx
		mov    -0x000002(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02c864_func
		mov    %ax,0x000054(%esi)

	_02cff1_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02cffc_func:
		push   %edx
		call   _064a58_func
		mov    $0x000001,%ah
		mov    _0cdbc1_data,%dl
		mov    %ah,_0cdbc5_data
		test   %dl,%dl
		jne    _02d028_jump
		xor    %dh,%dh
		mov    _0cdb20_data,%eax
		mov    %dx,_0cdbbc_data
		movw   $0x000000,0x000040(%eax)

	_02d028_jump:
		pop    %edx
		ret    



_02d02c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		xor    %ah,%ah
		mov    %ah,0x000010(%esp)
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    _0cdb20_data,%eax
		call   _01d710_func
		mov    _0cdb20_data,%edx
		mov    0x000040(%edx),%bx
		test   %bx,%bx
		jl     _02d090_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%bl
		mov    0x000074(%edx),%al
		add    %ebx,%eax
		mov    0x00002c(%edx),%esi
		sar    %eax
		add    %esi,%eax
		sar    $0x000004,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000028(%edx),%edi
		mov    0x000068(%edx),%al
		add    %edi,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		jmp    _02d0bb_jump

	_02d090_jump:
		jge    _02d0c4_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%bl
		mov    0x000074(%edx),%al
		add    %ebx,%eax
		sar    %eax
		add    0x00002c(%edx),%eax
		xor    %ebx,%ebx
		mov    0x000028(%edx),%ecx
		mov    0x000068(%edx),%bl
		add    %ecx,%ebx
		sar    $0x000004,%eax
		sar    $0x000004,%ebx
		cwtl   
		movswl %bx,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax

	_02d0bb_jump:
		call   _01e0e4_func
		mov    %al,0x000010(%esp)

	_02d0c4_jump:
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		testb  $0x000002,_092224_data(%eax)
		je     _02d0e7_jump
		call   _02cffc_func
		mov    $0x000001,%eax
		call   _064654_func
		jmp    _02d27d_jump

	_02d0e7_jump:
		mov    _0ce3a2_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		mov    _0cc1f0_data,%esi
		add    %ebx,%edx
		mov    _0ce46c_data,%ax
		shl    $0x000002,%edx
		xor    %edi,%edi
		add    %edx,%esi
		test   %ax,%ax
		jle    _02d27d_jump

	_02d113_jump:
		cmpw   $0x000000,_0cecda_data
		jne    _02d27d_jump
		cmpw   $0x000000,_0cecc4_data
		jne    _02d27d_jump
		cmpb   $0x000000,_0ceeb8_data
		jne    _02d27d_jump
		cmpb   $0x000000,_0ceeba_data
		jne    _02d27d_jump
		cmpb   $0x000000,0x00007e(%esi)
		je     _02d254_jump
		cmpb   $0x000000,0x000076(%esi)
		je     _02d254_jump
		xor    %ebx,%ebx
		mov    0x00006d(%esi),%bl
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%esi),%dl
		lea    0x000000(,%edx,8),%ecx
		mov    (%ebx),%edx
		testb  $0x000008,0x000007(%ecx,%edx,1)
		je     _02d254_jump
		mov    0x00000a(%esp),%edx
		mov    0x000006(%esp),%ecx
		mov    -0x000002(%esp),%ebx
		mov    $0x00005e,%eax
		push   %esi
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		push   %edx
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _02c54c_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _02d254_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		movswl %dx,%edx
		lea    0x000000(,%eax,4),%ebx
		xor    %ecx,%ecx
		add    %eax,%ebx
		mov    %esi,%eax
		mov    0x000076(%esi),%cl
		call   *_0932e8_data(,%ebx,4)
		xor    %edx,%edx
		call   _02cffc_func
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		movb   $0x000000,0x000071(%esi)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		shr    $0x000004,%al
		xor    %edx,%edx
		mov    %al,%dl
		cmp    $0x00000b,%edx
		je     _02d20d_jump
		cmp    $0x00000a,%edx
		je     _02d20d_jump
		movb   $0x000000,0x000072(%esi)

	_02d20d_jump:
		xor    %eax,%eax
		mov    0x000076(%esi),%al
		cmp    %cx,%ax
		jne    _02d27d_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		shl    $0x000002,%eax
		testb  $0x000001,_092267_data(%eax)
		je     _02d27d_jump
		testb  $0x000080,_092264_data(%eax)
		je     _02d23a_jump
		mov    _0cecd2_data,%ax
		jmp    _02d23e_jump

	_02d23a_jump:
		mov    0x000034(%esi),%ax

	_02d23e_jump:
		movswl %ax,%edx
		mov    $0x0000d6,%eax
		call   _06f35c_func
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d254_jump:
		inc    %edi
		movswl %di,%edx
		mov    _0ce3a2_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc1f0_data,%esi
		add    %edx,%esi
		cmp    _0ce46c_data,%di
		jl     _02d113_jump

	_02d27d_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lea    0x000000(%eax),%eax

	_02d288_jump:
		ret    



_02d344_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		mov    _0cdac0_data,%edx
		mov    _0cdafd_data,%bl
		add    %edx,%ebx
		mov    _0cda88_data,%edx
		sar    $0x000010,%edx
		shl    $0x000004,%edx
		xor    %eax,%eax
		cmp    %edx,%ebx
		jge    _02d4c1_jump
		mov    _0cdadc_data,%ebx
		mov    _0cdae6_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%ebx
		jne    _02d39d_jump
		lea    0x000000(,%edx,4),%eax
		mov    _0cda90_data,%ebx
		sub    %edx,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		sete   %al
		xor    %ah,%ah

	_02d39d_jump:
		test   %ax,%ax
		jne    _02d4c1_jump
		mov    _0cda86_data,%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ebx
		mov    _0cda90_data,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,1)
		sete   %bl
		xor    %bh,%bh
		mov    %ebx,%eax
		test   %bx,%bx
		jne    _02d4c1_jump
		lea    0x000001(%edx),%ecx
		lea    -0x000001(%edx),%ebx
		cmpb   $0x000002,_0cdb01_data
		jne    _02d3ef_jump
		cmpw   $0x000000,_0cdad4_data
		je     _02d41e_jump

	_02d3ef_jump:
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0cda90_data,%ebx
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		je     _02d415_jump
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		jne    _02d41c_jump

	_02d415_jump:
		mov    $0x000001,%eax
		jmp    _02d41e_jump

	_02d41c_jump:
		xor    %eax,%eax

	_02d41e_jump:
		test   %ax,%ax
		jne    _02d4c1_jump
		testb  $0x000002,_0cec71_data
		jne    _02d45b_jump
		xor    %ecx,%ecx
		mov    _0cdb01_data,%cl
		mov    _0cdaa0_data,%ebx
		shl    $0x000002,%ecx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    _0cdb00_data,%bl
		testb  $0x000040,0x000007(%ecx,%ebx,8)
		jne    _02d45b_jump
		mov    $0x000001,%ebx
		jmp    _02d45d_jump

	_02d45b_jump:
		xor    %ebx,%ebx

	_02d45d_jump:
		test   %ebx,%ebx
		je     _02d4c1_jump
		mov    _0cda86_data,%ebx
		sar    $0x000010,%ebx
		sub    %ebx,%edx
		mov    %edx,%eax
		sub    %ebx,%edx
		test   %edx,%edx
		jge    _02d483_jump

	_02d474_jump:
		mov    _0cda86_data,%ebx
		sar    $0x000010,%ebx
		add    %ebx,%edx
		test   %edx,%edx
		jl     _02d474_jump

	_02d483_jump:
		test   %eax,%eax
		jge    _02d494_jump
		mov    _0cda86_data,%ebx
		sar    $0x000010,%ebx
		add    %ebx,%eax
		jmp    _02d483_jump

	_02d494_jump:
		mov    %edx,%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		mov    _0cda90_data,%ebx
		cmpb   $0x000008,0x000002(%ebx,%edx,2)
		je     _02d4b6_jump
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000008,0x000002(%ebx,%eax,2)
		jne    _02d4bf_jump

	_02d4b6_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d4bf_jump:
		xor    %eax,%eax

	_02d4c1_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d4c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0cdac0_data,%edx
		mov    _0cdafd_data,%al
		add    %eax,%edx
		mov    _0cda88_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %eax,%edx
		jge    _02d5d8_jump
		mov    _0cdae6_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		add    %eax,%eax
		add    %edx,%eax
		mov    0x000002(%eax),%dl
		cmp    $0x000018,%dl
		jne    _02d562_jump
		mov    $0x000020,%ebx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		cmpb   $0x000001,_0ceec4_data
		je     _02d53f_jump
		movb   $0x000001,_0ceec4_data
		call   _06ece0_func
		call   _01cb6c_func

	_02d53f_jump:
		xor    %ecx,%ecx
		mov    _0cdac0_data,%edx
		mov    %cx,_0cdad6_data
		add    $0x000005,%edx
		mov    %cx,_0cdad4_data
		mov    %edx,_0cdac0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d562_jump:
		cmpb   $0x000018,_0cdaf9_data
		jne    _02d5ad_jump
		mov    $0x000020,%ebx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		cmpb   $0x000001,_0ceec4_data
		je     _02d599_jump
		movb   $0x000001,_0ceec4_data
		call   _06ece0_func
		call   _01cb6c_func

	_02d599_jump:
		xor    %edx,%edx
		mov    %dx,_0cdad6_data
		mov    %dx,_0cdad4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02d5ad_jump:
		cmp    $0x000019,%dl
		jne    _02d5d8_jump
		mov    $0x00001f,%ebx
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		mov    _0cecea_data,%ax
		mov    %ax,_0cecb6_data
		mov    %ax,_0cecac_data

	_02d5d8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02d5dc_func:
		push   %ebx
		push   %edx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0cdad6_data
		mov    %dx,_0cdad4_data
		mov    %ah,_0cdb11_data
		pop    %edx
		pop    %ebx
		ret    



_02d60c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		test   %al,%al
		je     _02d661_jump
		call   _06d588_func
		xor    %ebx,%ebx
		mov    _0cdabc_data,%dx
		mov    _0cdafc_data,%bl
		add    %edx,%ebx

	_02d62c_jump:
		xor    %eax,%eax
		mov    _0cdac0_data,%edx
		mov    _0cdafd_data,%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		cmp    $0x00000a,%al
		jne    _02d659_jump
		decl   _0cdac0_data
		jmp    _02d62c_jump

	_02d659_jump:
		xor    %ah,%ah
		mov    %ah,_0cdaf6_data

	_02d661_jump:
		mov    _0cdb01_data,%dl
		cmp    $0x000006,%dl
		jne    _02d69f_jump
		mov    $0x000008,%ebx
		mov    $0x000006,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,_0cdad6_data
		xor    %dl,%bl
		mov    %dx,_0cdad4_data
		mov    %bl,_0cdbc4_data
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02d69f_jump:
		testb  $0x000004,_0cdb15_data
		je     _02d95e_jump
		cmp    $0x000003,%dl
		jne    _02d6c1_jump
		mov    _0cdb00_data,%bh
		cmp    $0x000016,%bh
		je     _02d6c8_jump
		cmp    $0x000020,%bh
		je     _02d6c8_jump

	_02d6c1_jump:
		mov    $0x000001,%eax
		jmp    _02d6ca_jump

	_02d6c8_jump:
		xor    %eax,%eax

	_02d6ca_jump:
		test   %eax,%eax
		je     _02d95e_jump
		cmpb   $0x000002,_0cdb01_data
		jne    _02d6e4_jump
		cmpb   $0x00001f,_0cdb00_data
		je     _02d6eb_jump

	_02d6e4_jump:
		mov    $0x000001,%eax
		jmp    _02d6ed_jump

	_02d6eb_jump:
		xor    %eax,%eax

	_02d6ed_jump:
		test   %eax,%eax
		je     _02d95e_jump
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    _0cdaa0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0cdb00_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _02d743_jump
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _02d743_jump
		mov    $0x00003d,%ebx
		mov    $_0cda94_data,%eax
		xor    %edx,%edx
		jmp    _02d752_jump

	_02d743_jump:
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax

	_02d752_jump:
		call   _01d374_func
		xor    %ebx,%ebx
		mov    %bx,_0cec98_data
		test   %ecx,%ecx
		jne    _02d7ae_jump
		cmpb   $0x000000,_0cdb01_data
		jne    _02d776_jump
		cmpb   $0x00003d,_0cdb00_data
		je     _02d77d_jump

	_02d776_jump:
		mov    $0x000001,%eax
		jmp    _02d77f_jump

	_02d77d_jump:
		xor    %eax,%eax

	_02d77f_jump:
		test   %eax,%eax
		je     _02d7ae_jump
		testb  $0x000008,_0cdb15_data
		je     _02d797_jump
		movw   $0x00fffe,_0cdad4_data
		jmp    _02d7a0_jump

	_02d797_jump:
		movw   $0x000002,_0cdad4_data

	_02d7a0_jump:
		movw   $0x00fffd,_0cdad6_data
		jmp    _02d8f5_jump

	_02d7ae_jump:
		cmpb   $0x000000,_0cdb01_data
		jne    _02d7c4_jump
		cmpb   $0x00003d,_0cdb00_data
		je     _02d8f5_jump

	_02d7c4_jump:
		mov    0x000060(%ecx),%si
		cmp    $0x0000b4,%si
		jne    _02d7d9_jump
		call   _07357c_func
		jmp    _02d891_jump

	_02d7d9_jump:
		cmp    $0x000096,%si
		jne    _02d7ea_jump
		call   _075338_func
		jmp    _02d891_jump

	_02d7ea_jump:
		cmp    $0x0000c6,%si
		je     _02d88c_jump
		cmp    $0x0000c8,%si
		jne    _02d806_jump
		mov    $0xffffffff,%eax
		jmp    _02d891_jump

	_02d806_jump:
		cmp    $0x000064,%si
		jne    _02d823_jump
		testb  $0x000008,0x000081(%ecx)
		jne    _02d88c_jump
		mov    $0xffffffff,%eax
		jmp    _02d891_jump

	_02d823_jump:
		cmp    $0x000078,%si
		jne    _02d832_jump
		mov    %ecx,%eax
		call   _01fd24_func
		jmp    _02d891_jump

	_02d832_jump:
		cmp    $0x0000bb,%si
		jne    _02d842_jump
		mov    %ecx,%eax
		call   _063cec_func
		jmp    _02d891_jump

	_02d842_jump:
		cmp    $0x0000d1,%si
		je     _02d88c_jump
		cmp    $0x0000d2,%si
		jne    _02d857_jump
		mov    $0xffffffff,%eax
		jmp    _02d891_jump

	_02d857_jump:
		mov    0x00003e(%ecx),%edx
		mov    _0cdad2_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _02d877_jump
		mov    $0x000001,%eax
		jg     _02d877_jump
		neg    %eax

	_02d877_jump:
		test   %ax,%ax
		jne    _02d891_jump
		testb  $0x000008,_0cdb15_data
		je     _02d88c_jump
		mov    $0xffffffff,%eax
		jmp    _02d891_jump

	_02d88c_jump:
		mov    $0x000001,%eax

	_02d891_jump:
		xor    %edx,%edx
		mov    0x000060(%ecx),%dx
		testb  $0x000004,_092265_data(,%edx,4)
		je     _02d8a8_jump
		mov    $0x000005,%edx
		jmp    _02d8bb_jump

	_02d8a8_jump:
		cmp    $0x0000b4,%dx
		jne    _02d8b6_jump
		mov    $0x000004,%edx
		jmp    _02d8bb_jump

	_02d8b6_jump:
		mov    $0x000002,%edx

	_02d8bb_jump:
		cmp    $0x000001,%ax
		jne    _02d8ca_jump
		mov    %dx,_0cdad4_data
		jmp    _02d8e2_jump

	_02d8ca_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _02d8e2_jump
		mov    %edx,%ecx
		mov    %dx,_0cdad4_data
		neg    %ecx
		mov    %cx,_0cdad4_data

	_02d8e2_jump:
		inc    %edx
		mov    %edx,%esi
		mov    %dx,_0cdad6_data
		neg    %esi
		mov    %si,_0cdad6_data

	_02d8f5_jump:
		mov    $0x000001,%cl
		mov    $0xffffffff,%esi
		mov    _0cec70_data,%dl
		xor    %ebx,%ebx
		xor    %al,%al
		xor    %edi,%edi
		mov    %cl,_0ceece_data
		mov    %bx,_0cece8_data
		mov    %si,_0cdade_data
		mov    %di,_0ceca2_data
		mov    $0xffffffff,%ecx
		xor    %ah,%ah
		mov    %cx,_0cecfc_data
		xor    %ch,%ch
		mov    %ax,_0cdadc_data
		mov    %ch,_0cdb05_data
		mov    %ch,_0cdb06_data
		mov    %ch,_0cdbc4_data
		test   $0x000008,%dl
		je     _02d957_jump
		movb   $0x000001,_0ceec3_data

	_02d957_jump:
		xor    %eax,%eax
		call   _069c78_func

	_02d95e_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02d964_func:
		push   %ecx
		push   %esi
		testb  $0x000008,0x000081(%eax)
		jne    _02d97e_jump
		xor    %ecx,%ecx
		mov    (%edx),%si
		mov    0x00007a(%eax),%cl
		sub    %ecx,%esi
		mov    %si,(%edx)
		jmp    _02d98b_jump

	_02d97e_jump:
		movswl (%ebx),%esi
		movswl (%edx),%ecx
		sar    %esi
		add    %esi,%ecx
		mov    %cx,(%edx)

	_02d98b_jump:
		movswl (%ebx),%edx
		mov    0x00007a(%eax),%al
		sar    %edx
		and    $0x0000ff,%eax
		add    %edx,%eax
		mov    %ax,(%ebx)
		pop    %esi
		pop    %ecx
		ret    

_02d9a0_switch:
		.long   _02ddca_case
		.long   _02dcb0_case
		.long   _02dd7f_case
		.long   _02dac1_case
		.long   _02dac1_case
		.long   _02dd0c_case




_02d9b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000060(%esi),%ax
		cmp    $0x00007b,%ax
		jb     _02db30_jump
		jbe    _02dc96_jump
		cmp    $0x0000b5,%ax
		jb     _02da58_jump
		jbe    _02de7a_jump
		cmp    $0x0000d4,%ax
		jb     _02da2e_jump
		jbe    _02e0fa_jump
		cmp    $0x0000e2,%ax
		jb     _02da1f_jump
		jbe    _02e04d_jump
		cmp    $0x0000ef,%ax
		je     _02dc45_jump
		jmp    _02dab2_jump

	_02da1f_jump:
		cmp    $0x0000e1,%ax
		je     _02e030_jump
		jmp    _02dab2_jump

	_02da2e_jump:
		cmp    $0x0000c3,%ax
		jb     _02da49_jump
		jbe    _02e084_jump
		cmp    $0x0000c7,%ax
		je     _02de7a_jump
		jmp    _02dab2_jump

	_02da49_jump:
		cmp    $0x0000b8,%ax
		je     _02e04d_jump
		jmp    _02dab2_jump

	_02da58_jump:
		cmp    $0x000099,%ax
		jb     _02da98_jump
		jbe    _02dbe2_jump
		cmp    $0x0000ac,%ax
		jb     _02da7f_jump
		jbe    _02df9e_jump
		cmp    $0x0000ae,%ax
		je     _02e030_jump
		jmp    _02dab2_jump

	_02da7f_jump:
		cmp    $0x0000a8,%ax
		jb     _02dab2_jump
		cmp    $0x0000a9,%ax
		jbe    _02ddec_jump
		jmp    _02dab2_jump

	_02da98_jump:
		cmp    $0x000084,%ax
		jb     _02dab2_jump
		jbe    _02de13_jump
		cmp    $0x000093,%ax
		je     _02de57_jump

	_02dab2_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx

	_02daba_jump:
		mov    %esi,%eax
		call   _02d964_func

	_02dac1_case:
		mov    _0cecb8_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0cec9e_data,%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    _0cec9c_data,%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000a(%esp),%edx
		push   %eax
		mov    _0cec9a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02e149_jump
		mov    0x00007b(%esi),%dh
		cmp    $0x000002,%dh
		jae    _02e130_jump
		test   %dh,%dh
		jne    _02e11e_jump
		movb   $0x000001,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02db30_jump:
		cmp    $0x000038,%ax
		jb     _02db91_jump
		jbe    _02df9e_jump
		cmp    $0x000051,%ax
		jb     _02db72_jump
		jbe    _02ddec_jump
		cmp    $0x000064,%ax
		jb     _02db63_jump
		jbe    _02dfbb_jump
		cmp    $0x000074,%ax
		je     _02df2e_jump
		jmp    _02dab2_jump

	_02db63_jump:
		cmp    $0x000059,%ax
		je     _02e114_jump
		jmp    _02dab2_jump

	_02db72_jump:
		cmp    $0x00003d,%ax
		jb     _02dab2_jump
		jbe    _02dead_jump
		cmp    $0x00004d,%ax
		je     _02dc45_jump
		jmp    _02dab2_jump

	_02db91_jump:
		cmp    $0x00000e,%ax
		jb     _02dbc3_jump
		jbe    _02dee7_jump
		cmp    $0x000015,%ax
		jb     _02dbb4_jump
		jbe    _02dac1_case
		cmp    $0x000035,%ax
		je     _02dc26_jump
		jmp    _02dab2_jump

	_02dbb4_jump:
		cmp    $0x000014,%ax
		je     _02ddec_jump
		jmp    _02dab2_jump

	_02dbc3_jump:
		cmp    $0x000005,%ax
		jb     _02dab2_jump
		jbe    _02ddec_jump
		cmp    $0x00000c,%ax
		je     _02df07_jump
		jmp    _02dab2_jump

	_02dbe2_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %edx
		sar    %eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		mov    0x000004(%esp),%edi
		sar    $0x000010,%eax
		sub    $0x000010,%edi
		add    %edx,%eax
		mov    %di,0x000004(%esp)
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %ax,0x000008(%esp)
		addw   $0x000040,(%esp)
		jmp    _02dac1_case

	_02dc26_jump:
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		mov    %eax,%ebx
		add    %eax,%edx
		add    $0x0000c8,%ebx
		mov    %dx,0x000004(%esp)
		mov    %bx,(%esp)
		jmp    _02dac1_case

	_02dc45_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d964_func
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02dac1_case
		cmpb   $0x000004,0x00006c(%esi)
		jne    _02dac1_case
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		mov    0x000002(%esp),%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		shl    $0x000002,%eax
		add    %eax,%edx
		add    %ebx,%edx
		mov    %dx,(%esp)
		jmp    _02dac1_case

	_02dc96_jump:
		mov    0x000075(%esi),%al
		sub    $0x000002,%al
		cmp    $0x000005,%al
		ja     _02dac1_case
		and    $0x0000ff,%eax
		jmp    *%cs:_02d9a0_switch(,%eax,4)

	_02dcb0_case:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02dac1_case
		cmpb   $0x000000,0x00006c(%esi)
		jne    _02dac1_case
		xor    %eax,%eax
		mov    (%esp),%ecx
		mov    0x00007a(%esi),%al
		add    %eax,%ecx
		mov    %cx,(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x00007a(%esi),%al
		sub    %eax,%edi
		mov    %di,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x00007a(%esi),%al
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		xor    %edx,%edx
		mov    0x00000a(%esp),%eax
		mov    0x00007a(%esi),%dl
		sar    $0x000010,%eax
		sar    %edx
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		jmp    _02dac1_case

	_02dd0c_case:
		mov    0x00006d(%esi),%ah
		cmp    $0x000001,%ah
		jne    _02dac1_case
		cmp    0x00006c(%esi),%ah
		jne    _02dac1_case
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		dec    %edx
		add    %edx,%eax
		mov    -0x000002(%esp),%edx
		mov    %ax,0x00000c(%esp)
		sar    $0x000010,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		mov    $0x000014,%edi
		add    %edx,%eax
		mov    %di,0x000008(%esp)
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x00007a(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		testb  $0x000008,0x000081(%esi)
		jne    _02dac1_case
		sub    %di,0x00000c(%esp)
		jmp    _02dac1_case

	_02dd7f_case:
		mov    (%esp),%ecx
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x00007a(%esi),%al
		mov    0x000006(%esp),%edx
		add    %ecx,%eax
		sar    $0x000010,%edx
		sub    %eax,%edi
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		mov    %eax,%edx
		add    %eax,%edx
		mov    %di,0x000004(%esp)
		mov    %dx,0x000008(%esp)
		xor    %eax,%eax
		mov    %ecx,%ebx
		mov    0x00007a(%esi),%al
		add    %eax,%ebx
		mov    %bx,(%esp)
		jmp    _02dac1_case

	_02ddca_case:
		xor    %eax,%eax
		mov    (%esp),%ebx
		mov    0x00007a(%esi),%al
		mov    0x000004(%esp),%ecx
		add    %ebx,%eax
		sub    %eax,%ecx
		mov    %cx,0x000004(%esp)
		xor    %eax,%eax
		mov    %ebx,%edi
		mov    0x00007a(%esi),%al
		add    %eax,%edi
		mov    %di,(%esp)

	_02ddec_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    0x000008(%esp),%edx
		add    %eax,%eax
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00000c(%esp),%ebx
		mov    0x00007a(%esi),%al
		sub    %eax,%ebx
		mov    %bx,0x00000c(%esp)
		jmp    _02dac1_case

	_02de13_jump:
		testb  $0x000008,0x000081(%esi)
		je     _02de25_jump
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		jmp    _02de2e_jump

	_02de25_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		neg    %edx

	_02de2e_jump:
		mov    0x00000a(%esp),%eax
		mov    0x000004(%esp),%ebx
		mov    (%esp),%ecx
		sar    $0x000010,%eax
		sub    $0x000032,%ebx
		add    $0x000032,%ecx
		mov    %bx,0x000004(%esp)
		add    %edx,%eax
		mov    %cx,(%esp)
		mov    %ax,0x00000c(%esp)
		jmp    _02dac1_case

	_02de57_jump:
		cmpb   $0x000000,0x000076(%esi)
		je     _02dac1_case
		mov    _0cda8a_data,%ax
		xor    %edx,%edx
		shl    $0x000004,%eax
		mov    %dx,0x000004(%esp)
		mov    %ax,(%esp)
		jmp    _02dac1_case

	_02de7a_jump:
		mov    0x000028(%esi),%dx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000068(%esi),%al
		mov    %bx,0x000004(%esp)
		add    %eax,%edx
		mov    _0cda8a_data,%ax
		mov    %dx,0x00000c(%esp)
		mov    $0x000010,%edx
		shl    $0x000004,%eax
		mov    %dx,0x000008(%esp)
		mov    %ax,(%esp)
		jmp    _02dac1_case

	_02dead_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		lea    0x000008(%esp),%ebx
		sub    %edx,%eax
		lea    0x00000c(%esp),%edx
		mov    %ax,0x000004(%esp)
		jmp    _02daba_jump

	_02dee7_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)

	_02df07_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    0x000008(%esp),%ecx
		add    %eax,%eax
		add    %eax,%ecx
		mov    %cx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00000c(%esp),%edi
		mov    0x00007a(%esi),%al
		sub    %eax,%edi
		mov    %di,0x00000c(%esp)
		jmp    _02dac1_case

	_02df2e_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _02df54_jump
		xor    %edx,%edx
		mov    0x000006(%esp),%eax
		mov    0x00007a(%esi),%dl
		sar    $0x000010,%eax
		sar    %edx
		sar    %eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		jmp    _02df64_jump

	_02df54_jump:
		mov    0x000006(%esp),%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sar    %edx

	_02df64_jump:
		add    %edx,%eax
		mov    %ax,0x00000c(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    -0x000002(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		mov    %ax,0x000008(%esp)
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		add    %edx,%eax
		mov    %ax,(%esp)
		jmp    _02dac1_case

	_02df9e_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d964_func
		mov    (%esp),%eax
		add    %eax,%eax
		mov    %ax,(%esp)
		jmp    _02dac1_case

	_02dfbb_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _02dfd6_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%ecx
		mov    0x00007a(%esi),%al
		sub    %eax,%ecx
		mov    %cx,0x00000c(%esp)
		jmp    _02dff3_jump

	_02dfd6_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		mov    0x00000a(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    $0x000096,%edx
		add    %edx,%eax
		mov    %ax,0x00000c(%esp)

	_02dff3_jump:
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		add    $0x000096,%eax
		mov    -0x000002(%esp),%edx
		mov    %ax,0x000008(%esp)
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00007a(%esi),%al
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    %edx
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		mov    %ax,(%esp)
		jmp    _02dac1_case

	_02e030_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		mov    $0x000096,%ecx
		call   _02d964_func
		mov    %cx,(%esp)
		jmp    _02dac1_case

	_02e04d_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		mov    $0x000096,%ecx
		call   _02d964_func
		mov    0x00000c(%esp),%edi
		mov    0x000004(%esp),%eax
		mov    %cx,(%esp)
		add    $0x000046,%edi
		add    $0x000032,%eax
		mov    %di,0x00000c(%esp)
		mov    %ax,0x000004(%esp)
		jmp    _02dac1_case

	_02e084_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _02e09c_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000018,%dl
		je     _02e0a8_jump
		cmp    $0x00001e,%dl
		je     _02e0a8_jump
		cmp    $0x00000b,%dl
		je     _02e0a8_jump

	_02e09c_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _02e0ce_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _02e0ce_jump

	_02e0a8_jump:
		mov    $0x00000a,%eax
		mov    0x00000c(%esp),%edx
		mov    0x000008(%esp),%ebx
		mov    %ax,(%esp)
		sub    $0x000028,%edx
		add    $0x000050,%ebx
		mov    %dx,0x00000c(%esp)
		mov    %bx,0x000008(%esp)
		jmp    _02dac1_case

	_02e0ce_jump:
		mov    $0x0000c8,%ebx
		mov    0x00000c(%esp),%ecx
		mov    0x000008(%esp),%edi
		mov    %bx,(%esp)
		sub    $0x000082,%ecx
		add    $0x000104,%edi
		mov    %cx,0x00000c(%esp)
		mov    %di,0x000008(%esp)
		jmp    _02dac1_case

	_02e0fa_jump:
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%edx
		mov    %esi,%eax
		call   _02d964_func
		movw   $0x0000fa,(%esp)
		jmp    _02dac1_case

	_02e114_jump:
		addw   $0x000014,(%esp)
		jmp    _02dac1_case

	_02e11e_jump:
		cmp    $0x000001,%dh
		jne    _02e15e_jump
		movb   $0x000002,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e130_jump:
		mov    %dh,%bl
		inc    %bl
		mov    %bl,0x00007b(%esi)
		cmp    $0x000014,%bl
		jne    _02e15e_jump
		movb   $0x000002,0x00007b(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e149_jump:
		mov    0x000060(%esi),%cx
		movb   $0x000000,0x00007b(%esi)
		cmp    $0x000015,%cx
		jne    _02e15e_jump
		andb   $0x0000fe,0x000081(%esi)

	_02e15e_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e168_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000032(%eax),%edx
		mov    $0x0000cc,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		mov    0x000060(%ecx),%ax
		cmp    $0x00003c,%ax
		jb     _02e25c_jump
		jbe    _02e3a1_jump
		cmp    $0x00006d,%ax
		jb     _02e1f2_jump
		jbe    _02e30b_jump
		cmp    $0x000091,%ax
		jb     _02e1d3_jump
		jbe    _02e30b_jump
		cmp    $0x0000bc,%ax
		jb     _02e1c4_jump
		jbe    _02e30b_jump
		cmp    $0x0000f3,%ax
		je     _02e30b_jump
		jmp    _02e3bd_jump

	_02e1c4_jump:
		cmp    $0x0000a5,%ax
		je     _02e32f_jump
		jmp    _02e3bd_jump

	_02e1d3_jump:
		cmp    $0x00007b,%ax
		jb     _02e3bd_jump
		jbe    _02e369_jump
		cmp    $0x00008e,%ax
		je     _02e30b_jump
		jmp    _02e3bd_jump

	_02e1f2_jump:
		cmp    $0x000052,%ax
		jb     _02e22d_jump
		jbe    _02e30b_jump
		cmp    $0x000065,%ax
		jb     _02e3bd_jump
		jbe    _02e30b_jump
		cmp    $0x000069,%ax
		jb     _02e3bd_jump
		cmp    $0x00006b,%ax
		jbe    _02e30b_jump
		mov    %ecx,%eax
		call   _01db14_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e22d_jump:
		cmp    $0x00003f,%ax
		jb     _02e3bd_jump
		jbe    _02e30b_jump
		cmp    $0x000044,%ax
		jb     _02e3bd_jump
		cmp    $0x000045,%ax
		jbe    _02e30b_jump
		mov    %ecx,%eax
		call   _01db14_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e25c_jump:
		cmp    $0x000019,%ax
		jb     _02e2d3_jump
		cmp    $0x00001d,%ax
		jbe    _02e30b_jump
		cmp    $0x00002d,%ax
		jb     _02e2ae_jump
		jbe    _02e30b_jump
		cmp    $0x000039,%ax
		jb     _02e299_jump
		jbe    _02e316_jump
		cmp    $0x00003a,%ax
		je     _02e30b_jump
		mov    %ecx,%eax
		call   _01db14_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e299_jump:
		cmp    $0x00002f,%ax
		je     _02e30b_jump
		mov    %ecx,%eax
		call   _01db14_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e2ae_jump:
		cmp    $0x00001e,%ax
		jbe    _02e327_jump
		cmp    $0x000029,%ax
		jb     _02e3bd_jump
		cmp    $0x00002a,%ax
		jbe    _02e30b_jump
		mov    %ecx,%eax
		call   _01db14_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e2d3_jump:
		cmp    $0x000009,%ax
		jb     _02e2fc_jump
		jbe    _02e32f_jump
		cmp    $0x000010,%ax
		jb     _02e3bd_jump
		cmp    $0x000011,%ax
		jbe    _02e30b_jump
		cmp    $0x000016,%ax
		je     _02e30b_jump
		mov    %ecx,%eax
		call   _01db14_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e2fc_jump:
		test   %ax,%ax
		jbe    _02e32f_jump
		cmp    $0x000001,%ax
		jne    _02e3bd_jump

	_02e30b_jump:
		andb   $0x0000f7,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e316_jump:
		cmpb   $0x000004,0x00006c(%ecx)
		jne    _02e30b_jump
		mov    %ecx,%eax
		call   _01db14_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e327_jump:
		movb   $0x000001,0x00007f(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e32f_jump:
		mov    %ecx,%eax
		call   _01db14_func
		testb  $0x000008,0x000081(%ecx)
		je     _02e354_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e354_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e369_jump:
		mov    0x000075(%ecx),%al
		cmp    $0x000002,%al
		jb     _02e37c_jump
		cmp    $0x000003,%al
		jbe    _02e3c4_jump
		cmp    $0x000006,%al
		jb     _02e37c_jump
		cmp    $0x000007,%al
		jbe    _02e3c4_jump

	_02e37c_jump:
		mov    %ecx,%eax
		call   _01db14_func
		testb  $0x000008,0x000081(%ecx)
		je     _02e354_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e3a1_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    $0x000007,%edx
		call   _01db14_func
		mov    %ecx,%eax
		call   _05efb0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02e3bd_jump:
		mov    %ecx,%eax
		call   _01db14_func

	_02e3c4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e3c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    0x000052(%eax),%dx
		mov    0x000034(%eax),%bx
		mov    %edx,%ecx
		cmp    %bx,%dx
		je     _02e456_jump

	_02e3df_jump:
		movswl %cx,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000002,_092265_data(,%eax,4)
		je     _02e40f_jump
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		call   _071388_func
		test   %al,%al
		jne    _02e438_jump

	_02e40f_jump:
		mov    %ebx,%eax
		call   _05c74c_func
		mov    0x000081(%ebx),%dh
		or     $0x000004,%dh
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		mov    $0x000001,%edx
		call   _053d0c_func
		mov    %ebx,%eax
		call   _02e168_func

	_02e438_jump:
		mov    0x000032(%ebx),%eax
		mov    _0ce324_data,%edx
		sar    $0x000010,%eax
		mov    %ecx,%esi
		mov    (%edx,%eax,2),%cx
		mov    %ebx,%eax
		call   _05754c_func
		cmp    %cx,%si
		jne    _02e3df_jump

	_02e456_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e45c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ce3a2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    _0ce46c_data,%dx
		xor    %esi,%esi
		test   %dx,%dx
		jle    _02e512_jump

	_02e48c_jump:
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		testb  $0x000004,_092264_data(,%edx,4)
		jne    _02e4e6_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000020,0x000007(%ebx,%edx,8)
		je     _02e4e6_jump
		mov    _0cec9e_data,%ecx
		mov    _0cec9c_data,%ebx
		mov    _0cec9a_data,%edx
		push   %eax
		mov    _0cecb8_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02c54c_func

	_02e4e6_jump:
		inc    %esi
		movswl %si,%eax
		mov    _0ce3a2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%edx
		mov    _0ce46c_data,%bx
		add    %edx,%eax
		cmp    %bx,%si
		jl     _02e48c_jump

	_02e512_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e518_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ce3a2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cc1f0_data,%esi
		add    %edx,%eax
		xor    %edi,%edi
		shl    $0x000002,%eax
		mov    _0ce46c_data,%dx
		add    %eax,%esi
		test   %dx,%dx
		jle    _02e77c_jump

	_02e54a_jump:
		cmpw   $0x000000,_0cecda_data
		jne    _02e77c_jump
		cmpw   $0x000000,_0cecc4_data
		jne    _02e77c_jump
		cmpb   $0x000000,_0ceeb8_data
		jne    _02e77c_jump
		cmpb   $0x000000,_0ceeba_data
		jne    _02e77c_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		testb  $0x000020,0x000007(%eax,%edx,8)
		je     _02e750_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		shl    $0x000002,%eax
		testb  $0x000010,_092266_data(%eax)
		jne    _02e6e3_jump
		cmpb   $0x000000,_0cdb11_data
		jne    _02e750_jump
		mov    _0cdae8_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _02e750_jump
		xor    %edx,%edx
		mov    _0cdb01_data,%dl
		mov    _0cdaa0_data,%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0cdb00_data,%dl
		lea    0x000000(,%edx,8),%ecx
		mov    (%ebx),%edx
		testb  $0x000008,0x000007(%ecx,%edx,1)
		je     _02e750_jump
		testb  $0x000004,_092264_data(%eax)
		jne    _02e750_jump
		cmpw   $0x0000aa,0x000060(%esi)
		jne    _02e62b_jump
		mov    0x00006b(%esi),%cl
		cmp    $0x000003,%cl
		ja     _02e624_jump
		test   %cl,%cl
		jne    _02e62b_jump

	_02e624_jump:
		mov    $0xffffffff,%eax
		jmp    _02e66f_jump

	_02e62b_jump:
		cmpw   $0x000093,0x000060(%esi)
		jne    _02e640_jump
		cmpb   $0x000000,0x000076(%esi)
		je     _02e640_jump
		mov    $0xffffffff,%eax
		jmp    _02e66f_jump

	_02e640_jump:
		mov    _0cecb8_data,%eax
		mov    _0cec9e_data,%ecx
		mov    _0cec9c_data,%ebx
		mov    _0cec9a_data,%edx
		push   %esi
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02c54c_func

	_02e66f_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		je     _02e750_jump
		xor    %edx,%edx
		mov    0x000060(%esi),%dx
		imul   $0x000014,%edx,%edx
		mov    %esi,%eax
		call   *_0932ec_data(%edx)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000008,_092264_data(,%eax,4)
		je     _02e750_jump
		mov    _0cdae8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02e750_jump
		cmpb   $0x000003,_0cdb01_data
		jne    _02e6c1_jump
		cmpb   $0x000020,_0cdb00_data
		je     _02e6c8_jump

	_02e6c1_jump:
		mov    $0x000001,%eax
		jmp    _02e6ca_jump

	_02e6c8_jump:
		xor    %eax,%eax

	_02e6ca_jump:
		test   %eax,%eax
		je     _02e750_jump
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02d60c_func
		jmp    _02e77c_jump

	_02e6e3_jump:
		cmpb   $0x000003,_0cdb01_data
		jne    _02e6f5_jump
		cmpb   $0x000020,_0cdb00_data
		je     _02e750_jump

	_02e6f5_jump:
		mov    0x000060(%esi),%dx
		cmp    $0x000051,%dx
		je     _02e706_jump
		cmp    $0x0000a9,%dx
		jne    _02e70a_jump

	_02e706_jump:
		xor    %eax,%eax
		jmp    _02e739_jump

	_02e70a_jump:
		mov    _0cecb8_data,%eax
		mov    _0cec9e_data,%ecx
		mov    _0cec9c_data,%ebx
		mov    _0cec9a_data,%edx
		push   %esi
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02c54c_func

	_02e739_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		je     _02e750_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		imul   $0x000014,%eax,%edx
		mov    %esi,%eax
		call   *_0932ec_data(%edx)

	_02e750_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0ce3a2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%esi
		mov    _0ce46c_data,%bx
		add    %eax,%esi
		cmp    %bx,%di
		jl     _02e54a_jump

	_02e77c_jump:
		cmpb   $0x000000,_0cdb11_data
		je     _02e78a_jump
		call   _02d5dc_func

	_02e78a_jump:
		mov    _0cdae8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jle    _02e79e_jump
		decw   _0cdaea_data

	_02e79e_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02e7a4_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000010,_092266_data(,%eax,4)
		je     _02e84a_jump
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%edx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%edx),%al
		testb  $0x000020,0x000007(%ebx,%eax,8)
		je     _02e84a_jump
		cmpb   $0x000003,_0cdb01_data
		jne    _02e7f1_jump
		cmpb   $0x000020,_0cdb00_data
		je     _02e7f8_jump

	_02e7f1_jump:
		mov    $0x000001,%eax
		jmp    _02e7fa_jump

	_02e7f8_jump:
		xor    %eax,%eax

	_02e7fa_jump:
		test   %eax,%eax
		je     _02e84a_jump
		mov    _0cdaea_data,%bx
		cmp    $0x00003c,%bx
		jge    _02e83c_jump
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		jne    _02e83c_jump
		mov    $0x000001,%eax
		call   _02d60c_func
		mov    _0ceca4_data,%dx
		cmp    $0x000003,%dx
		je     _02e84a_jump
		cmp    $0x000004,%dx
		je     _02e84a_jump
		movw   $0x00003c,_0cdaea_data
		pop    %edx
		pop    %ebx
		ret    

	_02e83c_jump:
		xor    %eax,%eax
		call   _02d60c_func
		mov    %bx,_0cdaea_data

	_02e84a_jump:
		pop    %edx
		pop    %ebx
		ret    



_02e850_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		xor    %ah,%ah
		lea    0x000010(%esp),%ecx
		mov    %ah,0x000024(%esp)
		lea    0x000020(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000018(%esp),%edx
		mov    %edi,%eax
		call   _01d294_func
		mov    0x000060(%edi),%dx
		cmp    $0x000008,%dx
		je     _02e892_jump
		cmp    $0x000086,%dx
		je     _02e892_jump
		cmp    $0x0000a7,%dx
		jne    _02e8c6_jump

	_02e892_jump:
		mov    0x000014(%esp),%esi
		mov    0x000004(%esp),%eax
		mov    0x000010(%esp),%edx
		mov    0x000020(%esp),%ebx
		add    $0x00000a,%esi
		add    $0x000014,%eax
		sub    $0x000014,%edx
		sub    $0x000019,%ebx
		mov    %si,0x000014(%esp)
		mov    %ax,0x000004(%esp)
		mov    %dx,0x000010(%esp)
		mov    %bx,0x000020(%esp)
		jmp    _02e8f4_jump

	_02e8c6_jump:
		mov    0x000014(%esp),%eax
		mov    0x000004(%esp),%edx
		mov    0x000010(%esp),%ebx
		mov    0x000020(%esp),%ecx
		add    %esi,%eax
		add    %esi,%edx
		mov    %ax,0x000014(%esp)
		add    %esi,%esi
		mov    %dx,0x000004(%esp)
		sub    %esi,%ebx
		sub    %esi,%ecx
		mov    %bx,0x000010(%esp)
		mov    %cx,0x000020(%esp)

	_02e8f4_jump:
		mov    _0ce3a2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%esi
		shl    $0x000002,%eax
		xor    %ecx,%ecx
		add    %eax,%esi
		mov    _0ce46c_data,%ax
		mov    %cx,0x00001c(%esp)
		test   %ax,%ax
		jle    _02ebfe_jump

	_02e925_jump:
		cmp    %esi,%edi
		je     _02ebc5_jump
		mov    0x000060(%esi),%ax
		test   %ax,%ax
		jbe    _02e945_jump
		cmp    $0x0000d6,%ax
		je     _02ea8c_jump
		jmp    _02ebbe_jump

	_02e945_jump:
		mov    0x00006d(%esi),%cl
		cmp    $0x000002,%cl
		je     _02ebbe_jump
		test   %cl,%cl
		jne    _02e95b_jump
		cmpb   $0x000003,0x00006c(%esi)
		je     _02e962_jump

	_02e95b_jump:
		mov    $0x000001,%ebx
		jmp    _02e964_jump

	_02e962_jump:
		xor    %ebx,%ebx

	_02e964_jump:
		test   %ebx,%ebx
		je     _02ebbe_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _02ebbe_jump
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		test   %ax,%ax
		je     _02ebbe_jump
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    0x00000a(%esp),%eax
		mov    0x00001e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000e(%esp),%edx
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02ebbe_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x000004,0x000075(%esi)
		movw   $0x000000,0x00004c(%esi)
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x00000b,0x000074(%esi)
		or     $0x000020,%bh
		mov    %bh,0x000081(%esi)
		mov    _0cdade_data,%ax
		cmp    0x000034(%edi),%ax
		jne    _02ea42_jump
		call   _06b0a8_func

	_02ea42_jump:
		cmpb   $0x000002,0x000070(%esi)
		jne    _02ea6e_jump
		testb  $0x000008,0x000081(%esi)
		je     _02ea5d_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _02ea67_jump

	_02ea5d_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_02ea67_jump:
		mov    %esi,%eax
		call   _05efb0_func

	_02ea6e_jump:
		mov    $0x000009,%edx
		mov    %edi,%eax
		call   _01d364_func
		mov    $0x000001,%al
		movl   $0x000000,0x000024(%edi)
		mov    %al,0x000024(%esp)
		jmp    _02ebbe_jump

	_02ea8c_jump:
		mov    %esp,%eax
		lea    0x000008(%esp),%ecx
		lea    0x00000c(%esp),%ebx
		push   %eax
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		test   %ax,%ax
		je     _02ebbe_jump
		cmpw   $0x000068,0x000060(%edi)
		jne    _02ebbe_jump
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000002(%esp),%ecx
		push   %eax
		mov    0x00000a(%esp),%eax
		mov    0x00001e(%esp),%ebx
		sar    $0x000010,%eax
		mov    0x00000e(%esp),%edx
		push   %eax
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _02ebbe_jump
		cmpb   $0x000002,0x00006d(%esi)
		jne    _02eb12_jump
		cmpb   $0x000006,0x00006c(%esi)
		je     _02eb19_jump

	_02eb12_jump:
		mov    $0x000001,%eax
		jmp    _02eb1b_jump

	_02eb19_jump:
		xor    %eax,%eax

	_02eb1b_jump:
		test   %eax,%eax
		je     _02ebbe_jump
		testb  $0x000008,0x000081(%edi)
		je     _02eb6f_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		mov    0x000028(%edi),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%edi),%dl
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _02eb50_jump
		mov    $0x000001,%eax
		jg     _02eb50_jump
		neg    %eax

	_02eb50_jump:
		test   %eax,%eax
		jl     _02eb6f_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %edi,%eax
		movb   $0x000001,0x00007d(%esi)
		call   _05efb0_func
		movw   $0x000008,0x000040(%esi)

	_02eb6f_jump:
		testb  $0x000008,0x000081(%edi)
		jne    _02ebbe_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		lea    (%eax,%ecx,1),%edx
		mov    0x000028(%edi),%ebp
		xor    %eax,%eax
		sub    %ebp,%edx
		mov    0x000068(%edi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _02eb9f_jump
		mov    $0x000001,%eax
		jg     _02eb9f_jump
		neg    %eax

	_02eb9f_jump:
		test   %eax,%eax
		jge    _02ebbe_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %edi,%eax
		movb   $0x000001,0x00007d(%esi)
		call   _05efb0_func
		movw   $0x00fff8,0x000040(%esi)

	_02ebbe_jump:
		cmpb   $0x000000,0x000024(%esp)
		jne    _02ebfe_jump

	_02ebc5_jump:
		mov    0x00001c(%esp),%edx
		inc    %edx
		mov    %dx,0x00001c(%esp)
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		mov    _0ce3a2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%esi
		mov    _0ce46c_data,%bx
		add    %eax,%esi
		cmp    %bx,%dx
		jl     _02e925_jump

	_02ebfe_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02ec10_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		movswl %bx,%ebx
		mov    0x00002c(%eax),%esi
		add    %ebx,%esi
		mov    _0cda86_data,%ebx
		sar    $0x000004,%esi
		sar    $0x000010,%ebx
		imul   %ebx,%esi
		mov    0x000028(%eax),%edi
		movswl %cx,%ebx
		add    %edi,%ebx
		sar    $0x000004,%ebx
		mov    0x000058(%eax),%cx
		add    %esi,%ebx
		xor    %edx,%edx
		cmp    %cx,%bx
		je     _02ec4d_jump
		mov    $0x000001,%edx
		mov    %bx,0x000058(%eax)

	_02ec4d_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_02ec54_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    0x000040(%eax),%di
		mov    $0x0000ff,%ah
		xor    %edx,%edx
		mov    %ah,0x000004(%esp)
		mov    0x000060(%ecx),%ax
		mov    %dx,(%esp)
		cmp    $0x00007b,%ax
		jb     _02ece8_jump
		jbe    _02ecc6_jump
		cmp    $0x0000ac,%ax
		jne    _02ece8_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _02ece8_jump
		mov    $0x00000f,%bh
		mov    $0x000002,%edx
		mov    %ecx,%eax
		mov    %bh,0x000004(%esp)
		mov    $0x000003,%ebx
		call   _01d374_func
		mov    $0x000005,%ebx
		mov    $0xfffffffd,%esi
		mov    %bx,(%esp)
		jmp    _02ece8_jump

	_02ecc6_jump:
		testb  $0x000002,0x00007d(%ecx)
		je     _02ece8_jump
		mov    $0x000001,%ah
		mov    $0x000005,%ebx
		mov    $0x000002,%edx
		mov    %ah,0x000004(%esp)
		mov    %ecx,%eax
		mov    $0xfffffffd,%esi
		call   _01d374_func

	_02ece8_jump:
		cmpb   $0x0000ff,0x000004(%esp)
		je     _02ed23_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000004(%esp),%dl
		call   _05efb0_func
		movb   $0x000000,0x000071(%ecx)
		mov    %di,0x000040(%ecx)
		mov    (%esp),%al
		mov    0x00002c(%ecx),%edx
		mov    %si,0x000042(%ecx)
		sub    $0x00000c,%edx
		mov    %al,0x000072(%ecx)
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01e2ec_func

	_02ed23_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02ed2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		call   _01d380_func
		mov    %eax,%edi
		mov    %ecx,%eax
		call   _01d4b0_func
		movswl %di,%edi
		movswl %ax,%esi
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _02ed78_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _02ed78_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _05efb0_func

	_02ed78_jump:
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    0x000070(%ecx),%dl
		mov    %ah,0x000081(%ecx)
		cmp    $0x000014,%dl
		jne    _02ed9f_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_02ed9f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02eda8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		testb  $0x000080,_0cec70_data
		je     _02ee78_jump
		cmpw   $0x000003,_0ceca4_data
		je     _02ee78_jump
		xor    %eax,%eax
		mov    _0cdac0_data,%edx
		mov    _0cdafd_data,%al
		mov    0x00002c(%ecx),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000069(%ecx),%dl
		sub    %edx,%eax
		test   %eax,%eax
		jge    _02ede8_jump
		neg    %eax

	_02ede8_jump:
		cmp    $0x0000fa,%eax
		jge    _02ee78_jump
		call   _06c41c_func
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cec86_data
		mov    %ecx,%eax
		call   _077120_func
		cwtl   
		mov    %ax,0x00004e(%ecx)
		cmp    $0x000100,%eax
		jg     _02ee20_jump
		jne    _02ee28_jump
		testb  $0x000008,_0cdb15_data
		jne    _02ee28_jump

	_02ee20_jump:
		movw   $0x00ffff,0x000052(%ecx)
		jmp    _02ee2e_jump

	_02ee28_jump:
		movw   $0x000001,0x000052(%ecx)

	_02ee2e_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _02ee48_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _02ee48_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _05efb0_func

	_02ee48_jump:
		mov    _0cdb20_data,%ecx
		xor    %bh,%bh
		mov    0x000081(%ecx),%al
		mov    %bh,_0cdbc2_data
		and    $0x0000fb,%al
		mov    %bh,_0cdbc1_data
		mov    %al,0x000081(%ecx)
		xor    %eax,%eax
		movl   $0x000000,0x000024(%ecx)
		call   _064654_func

	_02ee78_jump:
		pop    %ecx
		pop    %ebx
		ret    



_02ee7c_func:
		push   %ebx
		push   %edx
		cmpb   $0x000001,0x00006d(%eax)
		jne    _02ee9c_jump
		movw   $0x000000,0x000042(%eax)
		xor    %ebx,%ebx
		xor    %edx,%edx
		movw   $0x000000,0x000040(%eax)
		call   _01d374_func
		pop    %edx
		pop    %ebx
		ret    

	_02ee9c_jump:
		cmpw   $0x00000a,0x000060(%eax)
		jne    _02eeb5_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02eeb5_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _02eeb5_jump
		movw   $0x000000,0x000042(%eax)

	_02eeb5_jump:
		pop    %edx
		pop    %ebx
		ret    



_02eeb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		mov    0x000060(%ecx),%dx
		cmp    $0x000001,%ax
		je     _02ef4a_jump
		cmp    $0x000002,%ax
		je     _02ef4a_jump
		cmp    $0x00000b,%ax
		je     _02ef4a_jump
		cmp    $0x000016,%ax
		je     _02ef4a_jump
		cmp    $0x000003,%ax
		je     _02ef4a_jump
		cmp    $0x000009,%ax
		je     _02ef4a_jump
		cmp    $0x000004,%ax
		je     _02ef4a_jump
		cmp    $0x000005,%ax
		je     _02ef4a_jump
		cmp    $0x000006,%ax
		je     _02ef4a_jump
		cmp    $0x00000f,%ax
		je     _02ef4a_jump
		cmp    $0x000010,%ax
		je     _02ef4a_jump
		cmp    $0x000011,%ax
		je     _02ef4a_jump
		cmp    $0x00000c,%dx
		je     _02ef38_jump
		cmp    $0x00000e,%dx
		je     _02ef38_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func

	_02ef38_jump:
		mov    %ecx,%eax
		call   _053c34_func
		mov    %ecx,%eax
		call   _0252c0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ef4a_jump:
		cmp    $0x000003,%ax
		je     _02ef56_jump
		cmp    $0x000006,%ax
		jne    _02ef6f_jump

	_02ef56_jump:
		mov    0x000081(%ecx),%ah
		movw   $0x00fff8,0x000042(%ecx)
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ef6f_jump:
		cmp    $0x00000b,%ax
		je     _02ef81_jump
		cmp    $0x000002,%ax
		je     _02ef81_jump
		cmp    $0x000016,%ax
		jne    _02efbe_jump

	_02ef81_jump:
		cmp    $0x00000e,%dx
		jb     _02ef9b_jump
		jbe    _02efa1_jump
		cmp    $0x00003c,%dx
		jb     _02efbe_jump
		jbe    _02efac_jump
		cmp    $0x00003d,%dx
		je     _02efb7_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02ef9b_jump:
		cmp    $0x00000c,%dx
		jne    _02efbe_jump

	_02efa1_jump:
		mov    %ecx,%eax
		call   _076b28_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02efac_jump:
		mov    %ecx,%eax
		call   _02a74c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_02efb7_jump:
		mov    %ecx,%eax
		call   _02a914_func

	_02efbe_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02efc4_func:
		push   %edx
		mov    0x000060(%eax),%dx
		cmp    $0x00000a,%dx
		jb     _02efd9_jump
		jbe    _02efe1_jump
		cmp    $0x000018,%dx
		je     _02f020_jump
		pop    %edx
		ret    

	_02efd9_jump:
		cmp    $0x000001,%dx
		je     _02f003_jump
		pop    %edx
		ret    

	_02efe1_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02f069_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _02f069_jump
		cmpb   $0x000003,0x000070(%eax)
		jne    _02f018_jump
		movw   $0x00fffe,0x000042(%eax)
		pop    %edx
		ret    

	_02f003_jump:
		mov    0x000070(%eax),%dl
		cmp    $0x000003,%dl
		jne    _02f013_jump
		movw   $0x00fffe,0x000042(%eax)
		pop    %edx
		ret    

	_02f013_jump:
		cmp    $0x000004,%dl
		jne    _02f069_jump

	_02f018_jump:
		movw   $0x000002,0x000042(%eax)
		pop    %edx
		ret    

	_02f020_jump:
		cmpb   $0x000002,0x000070(%eax)
		je     _02f069_jump
		mov    0x000048(%eax),%dx
		dec    %edx
		mov    %dx,0x000048(%eax)
		test   %dx,%dx
		jle    _02f051_jump
		mov    0x000070(%eax),%dh
		cmp    $0x000003,%dh
		jne    _02f044_jump
		movw   $0x00ffff,0x000042(%eax)
		pop    %edx
		ret    

	_02f044_jump:
		cmp    $0x000004,%dh
		jne    _02f069_jump
		movw   $0x000001,0x000042(%eax)
		pop    %edx
		ret    

	_02f051_jump:
		movw   $0x000000,0x000042(%eax)
		movw   $0x000000,0x000048(%eax)
		mov    0x00002c(%eax),%dx
		movb   $0x000002,0x000070(%eax)
		mov    %dx,0x00003e(%eax)

	_02f069_jump:
		pop    %edx
		ret    



_02f06c_func:
		cmpw   $0x000000,0x000060(%eax)
		jne    _02f086_jump
		cmpb   $0x000001,0x00006d(%eax)
		jne    _02f086_jump
		cmpb   $0x00000b,0x00006c(%eax)
		jne    _02f086_jump
		andb   $0x0000ef,0x000081(%eax)

	_02f086_jump:
		ret    



_02f088_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		call   _02f06c_func
		mov    0x000070(%edx),%al
		cmp    $0x000003,%al
		jb     _02f0b6_jump
		cmp    $0x000004,%al
		jbe    _02f10e_jump
		cmp    $0x000014,%al
		jb     _02f128_jump
		jbe    _02f118_jump
		pop    %edx
		pop    %ebx
		ret    

	_02f0b6_jump:
		cmp    $0x000001,%al
		jbe    _02f0c4_jump
		mov    %edx,%eax
		call   _02ee7c_func
		pop    %edx
		pop    %ebx
		ret    

	_02f0c4_jump:
		test   %al,%al
		jne    _02f0d1_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _02f0d8_jump

	_02f0d1_jump:
		orb    $0x000008,0x000081(%edx)

	_02f0d8_jump:
		cmp    $0x000001,%bx
		jne    _02f0ef_jump
		mov    %edx,%eax
		call   _053c34_func
		mov    %edx,%eax
		call   _0252c0_func
		pop    %edx
		pop    %ebx
		ret    

	_02f0ef_jump:
		cmp    $0x000002,%bx
		jne    _02f0ff_jump
		mov    %edx,%eax
		call   _053c34_func
		pop    %edx
		pop    %ebx
		ret    

	_02f0ff_jump:
		test   %bx,%bx
		jne    _02f128_jump
		mov    %edx,%eax
		call   _02eeb8_func
		pop    %edx
		pop    %ebx
		ret    

	_02f10e_jump:
		mov    %edx,%eax
		call   _02efc4_func
		pop    %edx
		pop    %ebx
		ret    

	_02f118_jump:
		mov    0x000056(%edx),%bx
		mov    %bx,0x000040(%edx)
		mov    0x00004a(%edx),%bx
		mov    %bx,0x000042(%edx)

	_02f128_jump:
		pop    %edx
		pop    %ebx
		ret    

_02f12c_switch:
		.long   _02f172_case
		.long   _02f198_case
		.long   _02f18a_case
		.long   _02f1ce_case
		.long   _02f1ce_case
		.long   _02f1b0_case




_02f144_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		cmpw   $0x000091,0x000060(%eax)
		jne    _02f1d2_jump
		mov    0x00006c(%eax),%al
		cmp    $0x000005,%al
		ja     _02f1ce_case
		and    $0x0000ff,%eax
		jmp    *%cs:_02f12c_switch(,%eax,4)

	_02f172_case:
		mov    0x000056(%esi),%cx
		dec    %cx
		mov    %cx,0x000056(%esi)
		jne    _02f1ce_case
		movb   $0x000003,0x00006c(%esi)
		movw   $0x00001e,0x000056(%esi)
		jmp    _02f1ce_case

	_02f18a_case:
		mov    0x000056(%esi),%di
		dec    %di
		mov    %di,0x000056(%esi)
		jne    _02f1ce_case
		jmp    _02f1bc_jump

	_02f198_case:
		mov    0x000056(%esi),%dx
		dec    %dx
		mov    %dx,0x000056(%esi)
		jne    _02f1ce_case
		movb   $0x000002,0x00006c(%esi)
		movw   $0x000005,0x000056(%esi)
		jmp    _02f1ce_case

	_02f1b0_case:
		mov    0x000056(%esi),%bx
		dec    %bx
		mov    %bx,0x000056(%esi)
		jne    _02f1ce_case

	_02f1bc_jump:
		movb   $0x000000,0x00006c(%esi)
		mov    0x000050(%esi),%ax
		movw   $0x000064,0x000050(%esi)
		mov    %ax,0x000056(%esi)

	_02f1ce_case:
		movb   $0x000000,0x000073(%esi)

	_02f1d2_jump:
		mov    _0cdabc_data,%ax
		sub    0x000028(%esi),%ax
		mov    0x00002c(%esi),%bx
		mov    %eax,%edx
		mov    _0cdac0_data,%ax
		sub    %ebx,%eax
		mov    0x000060(%esi),%cx
		mov    %eax,%ebx
		add    $0x000020,%edx
		add    $0x000019,%ebx
		cmp    $0x000091,%cx
		jne    _02f203_jump
		add    $0x000014,%edx
		add    $0x00000a,%ebx

	_02f203_jump:
		test   %dx,%dx
		setg   %al
		mov    %al,(%esp)
		test   %bx,%bx
		setg   %al
		mov    %al,0x000004(%esp)
		cmpb   $0x000000,(%esp)
		jne    _02f21e_jump
		neg    %edx

	_02f21e_jump:
		cmpb   $0x000000,0x000004(%esp)
		jne    _02f227_jump
		neg    %ebx

	_02f227_jump:
		cmp    $0x0000c8,%dx
		jle    _02f260_jump
		mov    $0x000001,%cl
		mov    %edx,%eax
		test   %ax,%ax
		js     _02f23c_jump
		sar    %cl,%ax
		jmp    _02f245_jump

	_02f23c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02f245_jump:
		mov    $0x000001,%cl
		mov    %eax,%edx
		mov    %ebx,%eax
		test   %ax,%ax
		js     _02f255_jump
		sar    %cl,%ax
		jmp    _02f25e_jump

	_02f255_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_02f25e_jump:
		mov    %eax,%ebx

	_02f260_jump:
		test   %bx,%bx
		jne    _02f28e_jump
		cmpb   $0x000000,(%esp)
		je     _02f275_jump
		mov    $0x00001b,%ecx
		jmp    _02f334_jump

	_02f275_jump:
		test   %dx,%dx
		je     _02f284_jump
		mov    $0x000009,%ecx
		jmp    _02f334_jump

	_02f284_jump:
		mov    $0xffffffff,%ecx
		jmp    _02f334_jump

	_02f28e_jump:
		movswl %dx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		cmpb   $0x000000,(%esp)
		je     _02f2f3_jump
		cmpb   $0x000000,0x000004(%esp)
		je     _02f2db_jump
		cmp    $0x0000ff,%cx
		jle    _02f2cb_jump
		mov    $0x00001b,%ecx
		jmp    _02f334_jump

	_02f2cb_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _094784_data(%eax),%cl
		add    $0x00001b,%ecx
		jmp    _02f334_jump

	_02f2db_jump:
		cmp    $0x0000ff,%cx
		jle    _02f2e6_jump
		xor    %ecx,%ecx
		jmp    _02f334_jump

	_02f2e6_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _094784_data(%eax),%cl
		jmp    _02f334_jump

	_02f2f3_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _02f318_jump
		cmp    $0x0000ff,%cx
		jle    _02f308_jump
		mov    $0x000012,%ecx
		jmp    _02f334_jump

	_02f308_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _094784_data(%eax),%cl
		add    $0x000012,%ecx
		jmp    _02f334_jump

	_02f318_jump:
		cmp    $0x0000ff,%cx
		jle    _02f326_jump
		mov    $0x000009,%ecx
		jmp    _02f334_jump

	_02f326_jump:
		movswl %cx,%eax
		xor    %ecx,%ecx
		mov    _094784_data(%eax),%cl
		add    $0x000009,%ecx

	_02f334_jump:
		cmpb   $0x000003,0x00006c(%esi)
		jne    _02f391_jump
		mov    0x000056(%esi),%di
		dec    %di
		mov    %di,0x000056(%esi)
		jne    _02f391_jump
		movb   $0x000001,0x00006c(%esi)
		mov    0x000036(%esi),%ax
		movw   $0x00003c,0x000056(%esi)
		movswl %ax,%ebx
		mov    0x000038(%esi),%dx
		cmp    $0xffffffcc,%ebx
		jle    _02f38b_jump
		movswl %dx,%ebx
		cmp    $0xffffffdc,%ebx
		jle    _02f38b_jump
		cmp    $0x000131,%ax
		jge    _02f38b_jump
		cmp    $0x0000c3,%dx
		jge    _02f38b_jump
		movswl %cx,%ebx
		mov    0x00002a(%esi),%edx
		mov    0x000026(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0775d0_func
		jmp    _02f391_jump

	_02f38b_jump:
		movw   $0x000028,0x000050(%esi)

	_02f391_jump:
		movswl %cx,%eax
		cmp    $0xffffffff,%eax
		je     _02f39e_jump
		dec    %cl
		mov    %cl,0x00006b(%esi)

	_02f39e_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02f3a8_func:
		push   %ebx
		mov    %eax,%ebx
		mov    0x000076(%eax),%ah
		dec    %ah
		mov    %ah,0x000076(%ebx)
		je     _02f3c9_jump
		mov    $0x000005,%edx
		mov    %ebx,%eax
		call   _01d364_func
		movw   $0x000032,0x000056(%ebx)
		pop    %ebx
		ret    

	_02f3c9_jump:
		mov    $0x000006,%edx
		mov    %ebx,%eax
		call   _01d364_func
		pop    %ebx
		ret    

_02f3d8_switch:
		.long   _02f55e_case
		.long   _02f5ba_case
		.long   _02f40b_case
		.long   _02f4b2_case


	_02f40b_case:
		mov    0x000028(%eax),%ebp
		xor    %ecx,%ecx
		mov    0x00002c(%eax),%edi
		mov    0x000068(%eax),%cl
		mov    _0cda86_data,%eax
		sar    $0x000004,%edi
		sar    $0x000010,%eax
		imul   %edi,%eax
		add    %ebp,%ecx
		sub    $0x000008,%ecx
		sar    $0x000004,%ecx
		lea    (%ecx,%eax,1),%edi
		lea    0x000000(,%edi,4),%ecx
		sub    %edi,%ecx
		mov    _0cda90_data,%edi
		mov    0x000002(%edi,%ecx,2),%cl
		and    $0x0000ff,%ecx
		testb  $0x000001,_092224_data(%ecx)
		je     _02f456_jump
		mov    $0x000001,%esi

	_02f456_jump:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%eax
		mov    0x000068(%ebx),%cl
		lea    (%ecx,%eax,1),%edi
		mov    0x00002c(%ebx),%ebx
		mov    _0cda86_data,%ecx
		sar    $0x000004,%ebx
		sar    $0x000010,%ecx
		imul   %ecx,%ebx
		add    $0x000007,%edi
		sar    $0x000004,%edi
		lea    (%edi,%ebx,1),%ecx
		lea    0x000000(,%ecx,4),%ebx
		sub    %ecx,%ebx
		mov    _0cda90_data,%ecx
		mov    0x000002(%ecx,%ebx,2),%bl
		and    $0x0000ff,%ebx
		testb  $0x000001,_092224_data(%ebx)
		je     _02f616_jump
		mov    $0x000001,%esi
		mov    %esi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02f4b2_case:
		xor    %ecx,%ecx
		mov    0x000028(%eax),%edx
		mov    0x000068(%eax),%cl
		lea    (%ecx,%edx,1),%edi
		mov    0x00002c(%eax),%ecx
		add    $0x00009a,%ecx
		mov    _0cda86_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		sub    $0x000008,%edi
		sar    $0x000004,%edi
		add    %ecx,%edi
		lea    0x000000(,%edi,4),%ecx
		sub    %edi,%ecx
		mov    _0cda90_data,%edi
		mov    0x000002(%edi,%ecx,2),%cl
		and    $0x0000ff,%ecx
		testb  $0x000001,_092224_data(%ecx)
		je     _02f503_jump
		mov    $0x000001,%esi

	_02f503_jump:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%edi
		mov    0x000068(%ebx),%cl
		mov    0x00002c(%ebx),%ebx
		add    %ecx,%edi
		mov    _0cda86_data,%ecx
		sar    $0x000004,%ebx
		sar    $0x000010,%ecx
		imul   %ecx,%ebx
		add    $0x000007,%edi
		sar    $0x000004,%edi
		lea    (%edi,%ebx,1),%ecx
		lea    0x000000(,%ecx,4),%ebx
		sub    %ecx,%ebx
		mov    _0cda90_data,%ecx
		mov    0x000002(%ecx,%ebx,2),%bl
		and    $0x0000ff,%ebx
		testb  $0x000001,_092224_data(%ebx)
		je     _02f616_jump
		mov    $0x000001,%esi
		mov    %esi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02f55e_case:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x000068(%ebx),%cl
		add    %ebp,%ecx
		sub    $0x000010,%ecx
		sar    $0x000004,%ecx
		mov    $0x000006,%edx
		mov    %ecx,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebp

	_02f57b_jump:
		movswl %dx,%ecx
		add    0x00002c(%ebx),%ecx
		mov    _0cda86_data,%edi
		sar    $0x000004,%ecx
		sar    $0x000010,%edi
		imul   %edi,%ecx
		add    %ebp,%ecx
		imul   $0x000006,%ecx,%ecx
		mov    _0cda90_data,%edi
		movzbl 0x000002(%ecx,%edi,1),%edi
		testb  $0x000001,_092224_data(%edi)
		je     _02f5ae_jump
		mov    $0x000001,%esi

	_02f5ae_jump:
		inc    %eax
		add    $0x000010,%edx
		cmp    $0x00000a,%ax
		jge    _02f616_jump
		jmp    _02f57b_jump

	_02f5ba_case:
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%edi
		mov    0x000068(%ebx),%cl
		add    %edi,%ecx
		add    $0x000010,%ecx
		sar    $0x000004,%ecx
		mov    $0x000006,%edx
		mov    %ecx,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%ebp

	_02f5d9_jump:
		movswl %dx,%ecx
		add    0x00002c(%ebx),%ecx
		mov    _0cda86_data,%edi
		sar    $0x000004,%ecx
		sar    $0x000010,%edi
		imul   %edi,%ecx
		add    %ebp,%ecx
		imul   $0x000006,%ecx,%ecx
		mov    _0cda90_data,%edi
		movzbl 0x000002(%ecx,%edi,1),%edi
		testb  $0x000001,_092224_data(%edi)
		je     _02f60c_jump
		mov    $0x000001,%esi

	_02f60c_jump:
		inc    %eax
		add    $0x000010,%edx
		cmp    $0x00000a,%ax
		jl     _02f5d9_jump

	_02f616_jump:
		mov    %esi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02f624_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _02f088_func
		cmpb   $0x000004,0x00006c(%edx)
		jne    _02f691_jump
		cmpb   $0x00000e,0x00006b(%edx)
		jne    _02f691_jump
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%edx),%al
		mov    0x000005(%ebx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _02f691_jump
		mov    0x000034(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff60,%eax
		jle    _02f691_jump
		cmpw   $0x0000fa,0x000036(%edx)
		jge    _02f691_jump
		cmpw   $0x000064,0x000038(%edx)
		jge    _02f691_jump
		mov    0x00002c(%edx),%ebx
		add    $0x000056,%ebx
		mov    %edx,%eax
		mov    %ebx,0x00002c(%edx)
		call   _053ac8_func
		subl   $0x000056,0x00002c(%edx)

	_02f691_jump:
		pop    %edx
		pop    %ebx
		ret    



_02f694_func:
		push   %edx
		testb  $0x000080,_0cec71_data
		jne    _02f6cc_jump
		mov    _0ced16_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02f6cc_jump
		mov    _0ced18_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _02f6cc_jump
		mov    _0cdb01_data,%dl
		test   %dl,%dl
		je     _02f6c7_jump
		cmp    $0x000001,%dl
		jne    _02f6cc_jump

	_02f6c7_jump:
		call   _059120_func

	_02f6cc_jump:
		pop    %edx
		ret    

_02f6d0_switch:
		.long   _02f87c_case
		.long   _02f943_case
		.long   _02f718_case
		.long   _02f7c7_case




_02f6e0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		xor    %ecx,%ecx
		mov    0x000028(%eax),%si
		mov    0x000068(%eax),%cl
		xor    %ebx,%ebx
		mov    %ecx,%edi
		mov    0x00002c(%eax),%cx
		add    %esi,%edi
		movzbw 0x000074(%eax),%si
		sub    $0x000019,%edi
		add    %ecx,%esi
		cmp    $0x000003,%dx
		ja     _02fa03_jump
		xor    %eax,%eax
		mov    %dx,%ax
		jmp    *%cs:_02f6d0_switch(,%eax,4)

	_02f718_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000003,%edx
		jge    _02fa03_jump
		mov    _0cda86_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %di,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cda90_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_092224_data(%edx)
		je     _02f76f_jump
		mov    $0x000001,%ebx

	_02f76f_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cda90_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_092224_data(%edx)
		je     _02f797_jump
		mov    $0x000001,%ebx

	_02f797_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _02fa03_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02f7c7_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x00000c,%edx
		jle    _02fa03_jump
		add    $0x000030,%ecx
		mov    _0cda86_data,%edx
		sar    $0x000004,%ecx
		sar    $0x000010,%edx
		imul   %ecx,%edx
		movswl %di,%eax
		sar    $0x000004,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0cda90_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _02f821_jump
		mov    $0x000001,%ebx

	_02f821_jump:
		inc    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ecx
		mov    _0cda90_data,%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _02f84a_jump
		mov    $0x000001,%ebx

	_02f84a_jump:
		inc    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _02fa03_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02f87c_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x000003,%edx
		jge    _02fa03_jump
		movswl %si,%eax
		mov    _0cda86_data,%edx
		add    %edi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %eax,%edx
		sar    $0x000004,%ecx
		add    %ecx,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		mov    _0cda90_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _02f8d6_jump
		mov    $0x000001,%ebx

	_02f8d6_jump:
		mov    _0cda86_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0cda90_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _02f906_jump
		mov    $0x000001,%ebx

	_02f906_jump:
		mov    _0cda86_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cda90_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _02fa03_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_02f943_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x00000c,%edx
		jle    _02fa03_jump
		movswl %si,%eax
		mov    _0cda86_data,%edx
		add    %edi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		add    $0x000003,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cda90_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_092224_data(%edx)
		je     _02f9a0_jump
		mov    $0x000001,%ebx

	_02f9a0_jump:
		mov    _0cda86_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cda90_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000002,_092224_data(%edx)
		je     _02f9d2_jump
		mov    $0x000001,%ebx

	_02f9d2_jump:
		mov    _0cda86_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _02fa03_jump
		mov    $0x000001,%ebx

	_02fa03_jump:
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_02fa0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _02fbcb_jump
		cmpb   $0x00000c,0x00006c(%ecx)
		jne    _02fbcb_jump
		mov    %ecx,%eax
		call   _01d380_func
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _01d4b0_func
		movswl %dx,%edi
		movswl %ax,%esi
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _02fa6e_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _02fa6e_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _05efb0_func

	_02fa6e_jump:
		mov    0x000081(%ecx),%dh
		and    $0x0000f7,%dh
		mov    0x000070(%ecx),%bl
		mov    %dh,0x000081(%ecx)
		cmp    $0x000014,%bl
		jne    _02fa8d_jump
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)

	_02fa8d_jump:
		mov    _0cdade_data,%dx
		mov    0x000034(%ecx),%bx
		xor    %eax,%eax
		cmp    %bx,%dx
		jne    _02fb0a_jump
		xor    %ebx,%edx
		mov    0x000028(%ecx),%si
		mov    0x000068(%ecx),%dl
		add    %edx,%esi
		xor    %edx,%edx
		mov    _0cdabc_data,%di
		mov    _0cdafc_data,%dl
		add    %edi,%edx
		sub    %esi,%edx
		test   %dx,%dx
		jle    _02fae7_jump
		cmp    $0x00000a,%dx
		jle    _02fad1_jump
		mov    $0x000001,%eax

	_02fad1_jump:
		cmp    $0x00000f,%dx
		jle    _02fad8_jump
		inc    %eax

	_02fad8_jump:
		cmp    $0x000012,%dx
		jle    _02fadf_jump
		inc    %eax

	_02fadf_jump:
		cmp    $0x00002a,%dx
		jle    _02fb0a_jump
		jmp    _02fb08_jump

	_02fae7_jump:
		neg    %edx
		cmp    $0x00000a,%dx
		jle    _02faf4_jump
		mov    $0xffffffff,%eax

	_02faf4_jump:
		cmp    $0x00000f,%dx
		jle    _02fafb_jump
		dec    %eax

	_02fafb_jump:
		cmp    $0x000012,%dx
		jle    _02fb02_jump
		dec    %eax

	_02fb02_jump:
		cmp    $0x000029,%dx
		jle    _02fb0a_jump

	_02fb08_jump:
		xor    %eax,%eax

	_02fb0a_jump:
		mov    %ax,0x000040(%ecx)
		cmpw   $0x000000,0x000042(%ecx)
		jge    _02fb99_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _02f6e0_func
		test   %ax,%ax
		je     _02fb95_jump
		mov    0x000050(%ecx),%dx
		movw   $0x000000,0x000042(%ecx)
		inc    %edx
		mov    %dx,0x000050(%ecx)
		cmp    $0x0000f0,%dx
		jle    _02fb99_jump
		mov    0x00002c(%ecx),%edx
		sub    $0x000050,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _076f4c_func
		mov    0x000032(%ecx),%edx
		mov    $0x000073,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		mov    0x00003a(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00003c(%ecx),%edx
		mov    $0x000004,%ebx
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _0772d8_func
		jmp    _02fb99_jump

	_02fb95_jump:
		mov    %ax,0x000050(%ecx)

	_02fb99_jump:
		mov    0x000040(%ecx),%si
		test   %si,%si
		jle    _02fbb5_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _02f6e0_func
		test   %ax,%ax
		je     _02fbcb_jump
		jmp    _02fbc5_jump

	_02fbb5_jump:
		jge    _02fbcb_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _02f6e0_func
		test   %ax,%ax
		je     _02fbcb_jump

	_02fbc5_jump:
		movw   $0x000000,0x000040(%ecx)

	_02fbcb_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02fbd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    0x000056(%eax),%ax
		add    %ax,0x00003c(%edx)

	_02fbe3_jump:
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02fbef_jump
		neg    %eax

	_02fbef_jump:
		cmp    $0x000080,%eax
		jl     _02fc2b_jump
		cmpw   $0x000000,0x000056(%edx)
		jle    _02fc14_jump
		mov    0x000028(%edx),%ecx
		mov    0x00003c(%edx),%ax
		inc    %ecx
		sub    $0x000080,%eax
		mov    %ecx,0x000028(%edx)
		mov    %ax,0x00003c(%edx)
		jmp    _02fbe3_jump

	_02fc14_jump:
		mov    0x000028(%edx),%ebx
		mov    0x00003c(%edx),%di
		dec    %ebx
		add    $0x000080,%edi
		mov    %ebx,0x000028(%edx)
		mov    %di,0x00003c(%edx)
		jmp    _02fbe3_jump

	_02fc2b_jump:
		mov    0x00004a(%edx),%ax
		add    %ax,0x00003e(%edx)

	_02fc33_jump:
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _02fc3f_jump
		neg    %eax

	_02fc3f_jump:
		cmp    $0x000080,%eax
		jl     _02fc7b_jump
		cmpw   $0x000000,0x00004a(%edx)
		jle    _02fc64_jump
		mov    0x00002c(%edx),%edi
		mov    0x00003e(%edx),%si
		inc    %edi
		sub    $0x000080,%esi
		mov    %edi,0x00002c(%edx)
		mov    %si,0x00003e(%edx)
		jmp    _02fc33_jump

	_02fc64_jump:
		mov    0x00002c(%edx),%esi
		mov    0x00003e(%edx),%cx
		dec    %esi
		add    $0x000080,%ecx
		mov    %esi,0x00002c(%edx)
		mov    %cx,0x00003e(%edx)
		jmp    _02fc33_jump

	_02fc7b_jump:
		mov    %edx,%eax
		call   _01db8c_func
		mov    0x000076(%edx),%al
		dec    %al
		mov    %al,0x00006b(%edx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02fc90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		cmp    $0x000001,%al
		jbe    _02fca4_jump
		cmp    $0x000002,%al
		jne    _02fcc6_jump
		jmp    _02fcb8_jump

	_02fca4_jump:
		test   %al,%al
		jne    _02fcb1_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _02fcb8_jump

	_02fcb1_jump:
		orb    $0x000008,0x000081(%ecx)

	_02fcb8_jump:
		mov    %ecx,%eax
		call   _053c34_func
		mov    %ecx,%eax
		call   _0252c0_func

	_02fcc6_jump:
		cmpw   $0x000000,0x000040(%ecx)
		je     _02fd42_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000008,%eax
		xor    %edx,%edx
		movswl %ax,%esi
		mov    0x000068(%ecx),%dl
		mov    %esi,%ebx
		mov    %ecx,%eax
		movzbw 0x000068(%ecx),%di
		call   _02ec10_func
		test   %ax,%ax
		je     _02fd42_jump
		movswl %di,%edx
		mov    %esi,%ebx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _02fd42_jump
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		jne    _02fd29_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		or     $0x000008,%bh
		mov    $0x000002,%edx
		mov    %bh,0x000081(%ecx)
		mov    $0x000001,%ebx
		jmp    _02fd3d_jump

	_02fd29_jump:
		mov    %dh,%bl
		and    $0x0000f7,%bl
		mov    %bl,0x000081(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_02fd3d_jump:
		call   _05efb0_func

	_02fd42_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02fd48_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cecc8_data,%eax
		sar    $0x000010,%eax
		mov    _0cecfe_data,%edx
		add    $0x0000be,%eax
		mov    _0cc1f4_data,%bx
		mov    %eax,0x00002c(%ecx)
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%al
		movw   $0x000082,0x000050(%ecx)
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %edx,0x000028(%ecx)
		mov    _0cc1f0_data,%edx
		test   %bx,%bx
		jle    _02fdf7_jump

	_02fd8a_jump:
		cmpw   $0x00009d,0x000060(%edx)
		jne    _02fdeb_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _02fdeb_jump
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000040(%edx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%edx)
		mov    0x000028(%ecx),%eax
		add    $0x000065,%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01db8c_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%bl
		movb   $0x000001,0x00006c(%edx)
		or     $0x000004,%bl
		mov    %bl,0x000081(%edx)
		jmp    _02fdf7_jump

	_02fdeb_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _02fd8a_jump

	_02fdf7_jump:
		movw   $0x000000,0x0000c6(%edx)
		mov    0x000105(%edx),%bh
		movw   $0x000000,0x0000c4(%edx)
		and    $0x0000f7,%bh
		mov    %bh,0x000105(%edx)
		mov    0x000028(%ecx),%eax
		add    $0x0000ca,%eax
		mov    %eax,0x0000ac(%edx)
		add    $0x000084,%edx
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01db8c_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%al
		movb   $0x000002,0x00006c(%edx)
		or     $0x000004,%al
		mov    %al,0x000081(%edx)
		movw   $0x000000,0x0000c6(%edx)
		mov    0x000105(%edx),%ah
		movw   $0x000000,0x0000c4(%edx)
		and    $0x0000f7,%ah
		mov    %ah,0x000105(%edx)
		mov    0x000028(%ecx),%eax
		add    $0x00012f,%eax
		mov    %eax,0x0000ac(%edx)
		add    $0x000084,%edx
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01db8c_func
		movl   $0x000001,0x000024(%edx)
		movw   $0x000082,0x000050(%edx)
		mov    0x000081(%edx),%bl
		movb   $0x000003,0x00006c(%edx)
		or     $0x000004,%bl
		mov    %bl,0x000081(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_02fec0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edx
		testb  $0x000004,_0cdb15_data
		je     _03016b_jump
		cmpb   $0x000003,_0cdb01_data
		jne    _02fee7_jump
		cmpb   $0x000017,_0cdb00_data
		je     _02feee_jump

	_02fee7_jump:
		mov    $0x000001,%eax
		jmp    _02fef0_jump

	_02feee_jump:
		xor    %eax,%eax

	_02fef0_jump:
		test   %eax,%eax
		je     _03016b_jump
		mov    _0cecd4_data,%ax
		cmp    $0x000003,%ax
		jb     _02ff19_jump
		jbe    _02ffba_jump
		cmp    $0x000005,%ax
		jbe    _0300b0_jump
		jmp    _030177_jump

	_02ff19_jump:
		cmp    $0x000001,%ax
		jne    _030177_jump
		mov    0x000076(%edx),%al
		test   %al,%al
		jbe    _02ff43_jump
		cmp    $0x000001,%al
		jne    _02ffb2_jump
		sub    %al,%al
		mov    %al,0x000076(%edx)
		mov    %edx,%eax
		call   _02fd48_func
		jmp    _030177_jump

	_02ff43_jump:
		cmpw   $0x000028,0x000050(%edx)
		jg     _02ff68_jump
		mov    _0cecc4_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc1f0_data,%ebx
		cmpw   $0x000001,0x000056(%ebx,%eax,4)
		jne    _02ffa7_jump

	_02ff68_jump:
		cmpb   $0x000000,_0cee3f_data
		je     _02ff88_jump
		testb  $0x000004,_0cdb15_data
		je     _02ff88_jump
		cmpl   $0x000078,0x00002c(%edx)
		jle    _02ff88_jump
		movw   $0x00ffff,0x000042(%edx)
		jmp    _02ff8e_jump

	_02ff88_jump:
		movw   $0x000000,0x000042(%edx)

	_02ff8e_jump:
		mov    0x000050(%edx),%si
		test   %si,%si
		jle    _030177_jump
		mov    %esi,%edi
		dec    %edi
		mov    %di,0x000050(%edx)
		jmp    _030177_jump

	_02ffa7_jump:
		movw   $0x000000,0x000042(%edx)
		jmp    _030177_jump

	_02ffb2_jump:
		decb   0x000076(%edx)
		jmp    _030177_jump

	_02ffba_jump:
		mov    _0cecd4_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _03005c_jump
		mov    _0ced18_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		je     _030025_jump
		mov    _0cecea_data,%ax
		add    $0x000078,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00002c(%edx),%ebx
		mov    0x00003c(%edx),%eax
		sub    $0x000064,%ebx
		sar    $0x000010,%eax
		cmp    %eax,%ebx
		jle    _02fffb_jump
		subl   $0x000003,0x00002c(%edx)

	_02fffb_jump:
		decl   0x00002c(%edx)
		mov    0x00003c(%edx),%eax
		mov    0x00002c(%edx),%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _03001a_jump
		cmpb   $0x000000,_0cee3f_data
		je     _03001a_jump
		lea    -0x000001(%ebx),%ecx
		mov    %ecx,0x00002c(%edx)

	_03001a_jump:
		movw   $0x000001,0x000056(%edx)
		jmp    _0300a3_jump

	_030025_jump:
		cmpw   $0x000001,0x000056(%edx)
		jne    _030047_jump
		xor    %ebx,%eax
		mov    _0cdafd_data,%al
		add    _0cdac0_data,%ax
		movw   $0x000000,0x000056(%edx)
		sub    $0x00001e,%eax
		mov    %ax,0x00003e(%edx)

	_030047_jump:
		mov    0x00003c(%edx),%eax
		mov    0x00002c(%edx),%esi
		sar    $0x000010,%eax
		cmp    %esi,%eax
		jge    _0300a3_jump
		lea    -0x000001(%esi),%edi
		mov    %edi,0x00002c(%edx)
		jmp    _0300a3_jump

	_03005c_jump:
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc1f0_data,%ebx
		cmpb   $0x000000,0x000076(%ebx,%eax,4)
		jbe    _0300a3_jump
		mov    _0cecc8_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edx),%ebx
		add    $0x000078,%eax
		cmp    %ebx,%eax
		jle    _0300a3_jump
		mov    0x00003a(%edx),%bx
		add    $0x00000e,%ebx
		mov    %bx,0x00003a(%edx)
		cmp    $0x000010,%bx
		jle    _0300a3_jump
		mov    %ebx,%esi
		mov    0x00002c(%edx),%ecx
		sub    $0x000010,%esi
		inc    %ecx
		mov    %si,0x00003a(%edx)
		mov    %ecx,0x00002c(%edx)

	_0300a3_jump:
		mov    0x00002c(%edx),%ax
		sub    $0x000078,%eax
		mov    %ax,_0cecb6_data

	_0300b0_jump:
		mov    0x000034(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff5a,%eax
		jge    _0300f7_jump
		mov    0x000028(%edx),%edi
		mov    0x00006c(%edx),%bl
		add    $0x0001f9,%edi
		inc    %bl
		mov    %edi,0x000028(%edx)
		mov    %bl,0x00006c(%edx)
		cmp    $0x000003,%bl
		jbe    _0300da_jump
		movb   $0x000000,0x00006c(%edx)

	_0300da_jump:
		cmpw   $0x000008,_0cecc0_data
		jne    _03013f_jump
		mov    _0cecd4_data,%cx
		cmp    $0x000005,%cx
		jne    _03013f_jump
		sub    %cx,0x00003e(%edx)
		jmp    _030136_jump

	_0300f7_jump:
		cmpw   $0x00016e,0x000036(%edx)
		jle    _03013f_jump
		mov    0x000028(%edx),%esi
		mov    0x00006c(%edx),%al
		sub    $0x0001f9,%esi
		dec    %al
		mov    %esi,0x000028(%edx)
		mov    %al,0x00006c(%edx)
		cmp    $0x000003,%al
		jbe    _03011b_jump
		movb   $0x000003,0x00006c(%edx)

	_03011b_jump:
		cmpw   $0x000008,_0cecc0_data
		jne    _03013f_jump
		mov    _0cecd4_data,%di
		cmp    $0x000005,%di
		jne    _03013f_jump
		add    %di,0x00003e(%edx)

	_030136_jump:
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)

	_03013f_jump:
		cmpw   $0x000008,_0cecc0_data
		jne    _030177_jump
		cmpw   $0x000005,_0cecd4_data
		jne    _030177_jump
		mov    _0cecc8_data,%eax
		mov    _0cc4a0_data,%ebp
		sar    $0x000010,%eax
		add    %ebp,%eax
		sub    $0x000050,%eax
		mov    %eax,0x00002c(%edx)
		jmp    _030177_jump

	_03016b_jump:
		movw   $0x000000,0x000042(%edx)
		movw   $0x000000,0x000040(%edx)

	_030177_jump:
		mov    _0cece8_data,%eax
		mov    _0cc4a0_data,%ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		mov    0x00002c(%edx),%ecx
		sub    $0x000050,%eax
		cmp    %ecx,%eax
		jle    _030194_jump
		mov    %eax,0x00002c(%edx)

	_030194_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03019c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		mov    _0ce324_data,%ebx
		mov    0x000032(%eax),%edx
		movzbl 0x00006d(%eax),%ebp
		sar    $0x000010,%edx
		shl    $0x000002,%ebp
		mov    (%ebx,%edx,2),%dx
		mov    0x00000c(%eax),%ebx
		add    %ebx,%ebp
		xor    %ebx,%ebx
		mov    0x000000(%ebp),%ebp
		mov    0x00006c(%eax),%bl
		movzbl 0x000002(%ebp,%ebx,8),%ebp
		lea    0x000000(,%ebp,4),%ebx
		sub    %ebp,%ebx
		mov    0x000004(%eax),%ebp
		mov    0x00000a(%ebp,%ebx,4),%bl
		mov    %bl,0x000008(%esp)
		mov    0x000034(%eax),%bx
		xor    %edi,%edi
		cmp    %bx,%dx
		je     _0302b0_jump
		mov    %edi,0x000004(%esp)
		xor    %esi,%esi

	_0301f9_jump:
		movswl %dx,%ebp
		imul   $0x000084,%ebp,%edx
		mov    0x000004(%esp),%eax
		mov    _0cc1f0_data,%ebx
		add    $0x000020,%eax
		add    %edx,%ebx
		mov    %eax,0x000004(%esp)
		mov    0x000081(%ebx),%ah
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ebx)
		mov    0x00006b(%ecx),%dl
		mov    %edx,(%esp)
		inc    %edi
		mov    (%esp),%eax
		movswl %di,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %dl,0x00006b(%ebx)
		xor    %edx,%edx
		mov    0x000076(%ecx),%dl
		mov    0x000004(%esp),%eax
		sub    $0x000002,%edx
		imul   %edx,%eax
		mov    0x00003c(%ecx),%dx
		add    %eax,%edx
		mov    %dx,0x00003c(%ebx)
		mov    0x00003e(%ecx),%dx
		mov    %dx,0x00003e(%ebx)
		add    $0x000100,%esi
		mov    0x000050(%ecx),%dx
		sub    %esi,%edx
		mov    %dx,0x000050(%ebx)
		mov    0x00003a(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%ebx)
		mov    0x00003c(%ebx),%edx
		sar    $0x000010,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ebx)
		call   _01db8c_func
		mov    _0ce324_data,%ebx
		mov    (%ebx,%ebp,2),%dx
		cmp    0x000034(%ecx),%dx
		jne    _0301f9_jump

	_0302b0_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0302bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x000060(%eax),%dx
		cmp    $0x0000b2,%dx
		je     _0302d4_jump
		cmp    $0x0000f1,%dx
		jne    _030313_jump

	_0302d4_jump:
		cmpw   $0x000000,0x000052(%esi)
		jne    _030313_jump
		xor    %ecx,%ecx
		mov    0x00006a(%esi),%cl
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    0x000004(%esi),%ecx
		mov    0x00000a(%ecx,%eax,4),%ax
		dec    %eax
		cwtl   
		call   _0690e0_func
		mov    %al,0x00006b(%esi)
		mov    %esi,%eax
		movw   $0x001000,0x000050(%esi)
		call   _03019c_func
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030313_jump:
		mov    $0x000028,%ebx
		lea    0x000050(%esi),%ecx
		mov    $0x000018,%edx
		mov    %esi,%eax
		call   _01d084_func
		movw   $0x000000,0x000040(%esi)
		mov    %ax,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030338_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _030385_jump
		cmpb   $0x000036,0x00006c(%ecx)
		jne    _030385_jump
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _03036c_jump
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%ecx)
		jmp    _030379_jump

	_03036c_jump:
		cmpb   $0x000000,0x00006b(%ecx)
		jne    _030379_jump
		mov    %ecx,%eax
		call   _0772d8_func

	_030379_jump:
		mov    %ecx,%eax
		call   _0544fc_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030385_jump:
		cmpb   $0x000003,_0cdb01_data
		jne    _030397_jump
		cmpb   $0x000017,_0cdb00_data
		je     _0303c8_jump

	_030397_jump:
		cmpw   $0x000003,_0ceca4_data
		jne    _030466_jump
		cmpb   $0x000002,_0cdb01_data
		jne    _0303b7_jump
		cmpb   $0x00001f,_0cdb00_data
		je     _0303be_jump

	_0303b7_jump:
		mov    $0x000001,%eax
		jmp    _0303c0_jump

	_0303be_jump:
		xor    %eax,%eax

	_0303c0_jump:
		test   %eax,%eax
		je     _030466_jump

	_0303c8_jump:
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000069(%ecx),%dl
		call   _0188d0_func
		cwtl   
		mov    0x00002c(%ecx),%esi
		sub    %edx,%eax
		sub    %esi,%eax
		cmp    $0x000020,%eax
		jg     _03040b_jump
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000069(%ecx),%dl
		call   _0188d0_func
		cwtl   
		mov    $0x000036,%ebx
		sub    %edx,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01d374_func
		movb   $0x00006b,0x00006a(%ecx)
		movb   $0x000000,0x00006b(%ecx)
		jmp    _030421_jump

	_03040b_jump:
		mov    0x000081(%ecx),%dl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)

	_030421_jump:
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _0772d8_func
		mov    _0ced02_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		mov    0x000081(%eax,%edx,4),%bl
		movl   $0x000000,0x000024(%eax,%edx,4)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%eax,%edx,4)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030466_jump:
		mov    _0ceed2_data,%ah
		test   %ah,%ah
		je     _0305f0_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0ceed8_data,%al
		mov    _0ceed7_data,%dl
		dec    %eax
		cmp    %eax,%edx
		jne    _0304cc_jump
		mov    _0ced02_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		andb   $0x0000fb,0x000081(%ecx)
		andb   $0x0000fb,0x000081(%edx)
		mov    %ecx,%eax
		call   _0772d8_func
		cmpl   $0x000000,0x000024(%edx)
		je     _03060f_jump
		mov    %edx,%eax
		call   _0772d8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0304cc_jump:
		mov    %edx,%eax
		shl    $0x000003,%edx
		add    %eax,%edx
		add    %edx,%edx
		add    $_0ce46e_data,%edx
		movswl (%edx),%eax
		mov    %eax,0x000028(%ecx)
		mov    (%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%edx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x000009(%edx),%al
		mov    %al,0x00006c(%ecx)
		mov    0x00000a(%edx),%al
		mov    %al,0x00006a(%ecx)
		mov    0x00000b(%edx),%al
		mov    %al,0x00006b(%ecx)
		mov    0x00000c(%edx),%al
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		xor    %eax,%eax
		mov    0x000011(%edx),%al
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		mov    0x00007e(%ecx),%bl
		mov    %ax,0x00005a(%ecx)
		test   %bl,%bl
		jne    _030545_jump
		mov    %ecx,%eax
		call   _0772d8_func

	_030545_jump:
		mov    _0ced02_data,%eax
		sar    $0x000010,%eax
		movb   $0x000004,0x00007e(%ecx)
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%ecx
		mov    0x000010(%edx),%bh
		add    %eax,%ecx
		test   %bh,%bh
		je     _0305c9_jump
		mov    0x000081(%ecx),%ah
		movb   $0x000004,0x00007e(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    0x000002(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x000004(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x00000d(%edx),%al
		mov    %al,0x00006a(%ecx)
		mov    0x00000e(%edx),%al
		mov    %al,0x00006b(%ecx)
		mov    0x00000f(%edx),%al
		and    $0x000001,%al
		mov    0x000081(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%ecx)
		mov    %dl,%dh
		movw   $0x000000,0x000042(%ecx)
		or     %al,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _0305d0_jump

	_0305c9_jump:
		andb   $0x0000fb,0x000081(%ecx)

	_0305d0_jump:
		mov    _0ceed7_data,%bl
		inc    %bl
		mov    %bl,_0ceed7_data
		cmp    $0x000064,%bl
		jbe    _03060f_jump
		xor    %cl,%cl
		mov    %cl,_0ceed7_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0305f0_jump:
		mov    %ah,0x00007e(%ecx)
		mov    _0ced02_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		andb   $0x0000fb,0x000081(%eax,%edx,4)

	_03060f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030614_func:
		push   %edx
		cmpb   $0x000001,_0ceed2_data
		jne    _030626_jump
		xor    %dl,%dl
		mov    %dl,_0cdb0a_data

	_030626_jump:
		pop    %edx
		ret    



_030628_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%ah
		or     $0x000008,%ah
		mov    _0cee99_data,%dl
		mov    %ah,0x000081(%esi)
		cmp    $0x000001,%dl
		jne    _030832_jump
		mov    %ah,%bl
		and    $0x0000df,%bl
		mov    %bl,0x000081(%esi)
		cmpw   $0x000000,_0cdad4_data
		jle    _03066e_jump
		testb  $0x000008,_0cdb15_data
		jne    _030685_jump

	_03066e_jump:
		cmpw   $0x000000,_0cdad4_data
		jge    _0306e5_jump
		testb  $0x000008,_0cdb15_data
		jne    _0306e5_jump

	_030685_jump:
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _030693_jump
		neg    %eax

	_030693_jump:
		cmp    $0x000002,%eax
		jge    _0306b0_jump
		cmpw   $0x000000,_0cdad4_data
		jle    _0306a9_jump
		mov    $0x000002,%eax
		jmp    _0306e1_jump

	_0306a9_jump:
		mov    $0xfffffffe,%eax
		jmp    _0306e1_jump

	_0306b0_jump:
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0306be_jump
		neg    %eax

	_0306be_jump:
		cmp    $0x000007,%eax
		jl     _0306db_jump
		cmpw   $0x000000,_0cdad4_data
		jle    _0306d4_jump
		mov    $0x000007,%eax
		jmp    _0306e1_jump

	_0306d4_jump:
		mov    $0xfffffff9,%eax
		jmp    _0306e1_jump

	_0306db_jump:
		mov    _0cdad4_data,%ax

	_0306e1_jump:
		mov    %ax,0x000050(%esi)

	_0306e5_jump:
		mov    0x000056(%esi),%dx
		test   %dx,%dx
		jne    _030766_jump
		mov    _0cdad4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _030700_jump
		neg    %eax

	_030700_jump:
		test   %eax,%eax
		jg     _030719_jump
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _030712_jump
		neg    %eax

	_030712_jump:
		cmp    $0x000002,%eax
		jle    _03075e_jump
		jmp    _03075a_jump

	_030719_jump:
		mov    _0cdad6_data,%cx
		test   %cx,%cx
		jle    _03073f_jump
		mov    _0cdad4_data,%bx
		test   %bx,%bx
		jle    _030737_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _03075e_jump

	_030737_jump:
		jge    _03075a_jump
		movb   $0x000002,0x00006b(%esi)
		jmp    _03075e_jump

	_03073f_jump:
		jge    _03075e_jump
		mov    _0cdad4_data,%ax
		test   %ax,%ax
		jle    _030752_jump
		movb   $0x000002,0x00006b(%esi)
		jmp    _03075e_jump

	_030752_jump:
		jge    _03075a_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _03075e_jump

	_03075a_jump:
		movb   $0x000001,0x00006b(%esi)

	_03075e_jump:
		movw   $0x000008,0x000056(%esi)
		jmp    _03076d_jump

	_030766_jump:
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x000056(%esi)

	_03076d_jump:
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d710_func
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x000074(%esi),%al
		add    %edi,%eax
		sub    %ebx,%eax
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    _0cdabc_data,%ebx
		mov    _0cdafc_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    _0cdac0_data,%edx
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    %ebx,0x000028(%esi)
		xor    %ebx,%ebx
		mov    _0cdafd_data,%al
		mov    0x000069(%esi),%bl
		add    %edx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    _0cdb01_data,%ch
		mov    %ebx,0x00002c(%esi)
		cmp    $0x000003,%ch
		jne    _0307f6_jump
		cmpb   $0x000017,_0cdb00_data
		je     _030815_jump

	_0307f6_jump:
		cmpb   $0x000003,_0cdb01_data
		jne    _030808_jump
		cmpb   $0x000016,_0cdb00_data
		je     _030815_jump

	_030808_jump:
		call   _06d328_func
		test   %al,%al
		jne    _0308b9_jump

	_030815_jump:
		mov    _0cec6e_data,%ax
		xor    %dh,%dh
		mov    %ax,_0cec70_data
		mov    %dh,_0cee99_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030832_jump:
		movw   $0x000000,0x000056(%esi)
		mov    %ah,%dh
		movb   $0x000001,0x00006b(%esi)
		or     $0x000020,%dh
		mov    _0cdb01_data,%bl
		mov    %dh,0x000081(%esi)
		cmp    $0x000003,%bl
		jne    _03086c_jump
		cmpb   $0x000016,_0cdb00_data
		jne    _03086c_jump
		mov    0x000050(%esi),%ax
		mov    %ax,0x000040(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03086c_jump:
		cmpb   $0x000002,_0cdb01_data
		jne    _03087e_jump
		cmpb   $0x000001,_0cdb00_data
		je     _0308a1_jump

	_03087e_jump:
		mov    _0cdb01_data,%al
		cmp    $0x000002,%al
		jne    _03088f_jump
		cmp    _0cdb00_data,%al
		je     _0308a1_jump

	_03088f_jump:
		cmpb   $0x000002,_0cdb01_data
		jne    _0308b3_jump
		cmpb   $0x000006,_0cdb00_data
		jne    _0308b3_jump

	_0308a1_jump:
		xor    %edx,%edx
		mov    %dx,_0cdad4_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0308b3_jump:
		movw   $0x000000,0x000050(%esi)

	_0308b9_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0308c4_switch:
		.long   _030979_case
		.long   _03097f_case
		.long   _030985_case
		.long   _030985_case
		.long   _03098b_case




_0308d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    _0cecd4_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _030a84_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _030925_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc1f0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000028(%esi),%ebx
		cmp    0x000028(%eax),%ebx
		jge    _03091c_jump
		mov    0x00002c(%eax),%eax
		add    $0x000070,%eax
		jmp    _030922_jump

	_03091c_jump:
		mov    0x00002c(%eax),%eax
		add    $0x000078,%eax

	_030922_jump:
		mov    %eax,0x00002c(%esi)

	_030925_jump:
		cmpb   $0x000002,_0cdb01_data
		jne    _030a69_jump
		cmpb   $0x00000f,_0cdb00_data
		jne    _030a69_jump
		mov    _0cdac0_data,%di
		mov    0x000028(%esi),%ax
		mov    0x00002c(%esi),%cx
		mov    0x00006c(%esi),%bl
		mov    %eax,0x000004(%esp)
		mov    _0cdabc_data,%ax
		sub    $0x000010,%bl
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		cmp    $0x000004,%bl
		ja     _030991_jump
		and    $0x0000ff,%ebx
		jmp    *%cs:_0308c4_switch(,%ebx,4)

	_030979_case:
		mov    $0x000030,%dl
		mov    $0x000018,%dh
		jmp    _030993_jump

	_03097f_case:
		mov    $0x000030,%dl
		mov    $0x000020,%dh
		jmp    _030993_jump

	_030985_case:
		mov    $0x000038,%dl
		mov    $0x000028,%dh
		jmp    _030993_jump

	_03098b_case:
		mov    $0x000038,%dl
		mov    $0x000040,%dh
		jmp    _030993_jump

	_030991_jump:
		xor    %eax,%eax

	_030993_jump:
		test   %ax,%ax
		je     _0309d5_jump
		xor    %eax,%eax
		mov    %dh,%al
		push   %eax
		xor    %eax,%eax
		mov    %dl,%al
		add    %ecx,%eax
		push   $0x000004
		cwtl   
		push   %eax
		mov    0x000010(%esp),%eax
		add    $0x00007e,%eax
		cwtl   
		push   %eax
		mov    %edi,%eax
		add    $0x00001a,%eax
		movswl %ax,%edx
		mov    0x000010(%esp),%eax
		mov    $0x00002e,%ebx
		add    $0x000039,%eax
		mov    $0x000004,%ecx
		cwtl   
		call   _02ae60_func

	_0309d5_jump:
		test   %ax,%ax
		je     _030a69_jump
		mov    0x000076(%esi),%cl
		dec    %cl
		mov    %cl,0x000076(%esi)
		cmp    $0x000001,%cl
		jae    _030a0e_jump
		mov    0x000077(%esi),%al
		mov    %al,0x000076(%esi)
		mov    0x00006c(%esi),%al
		cmp    $0x000013,%al
		jae    _030a07_jump
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _01d364_func
		jmp    _030a0e_jump

	_030a07_jump:
		mov    %esi,%eax
		call   _077c84_func

	_030a0e_jump:
		mov    _0cecd4_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		cmpw   $0x000000,0x000056(%edx,%eax,1)
		jne    _030a43_jump
		mov    0x000004(%esp),%eax
		add    $0x00001e,%edi
		add    $0x000080,%eax
		movswl %di,%edx
		cwtl   
		call   _077d34_func

	_030a43_jump:
		mov    _0cecd4_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		movw   $0x000000,0x000050(%edx,%eax,4)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_030a69_jump:
		mov    _0cecd4_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		incw   0x000050(%edx,%eax,4)

	_030a84_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030a90_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x000076(%eax)
		jne    _030acf_jump
		mov    _0cdabc_data,%eax
		mov    0x000028(%ecx),%edx
		add    $0x00002f,%eax
		cmp    %edx,%eax
		jle    _030acf_jump
		mov    _0cdabc_data,%ebx
		lea    0x0000ba(%edx),%eax
		cmp    %ebx,%eax
		jle    _030acf_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		movb   $0x00000a,0x000076(%ecx)
		call   _01d374_func

	_030acf_jump:
		cmpb   $0x000001,0x000076(%ecx)
		jbe    _030b08_jump
		mov    0x000042(%ecx),%dx
		cmp    $0x000010,%dx
		jge    _030af1_jump
		cmpb   $0x000000,_0cee45_data
		jne    _030b0e_jump
		mov    %edx,%ebx
		inc    %ebx
		mov    %bx,0x000042(%ecx)
		jmp    _030b0e_jump

	_030af1_jump:
		cmpb   $0x000000,_0cee45_data
		jne    _030b0e_jump
		cmpb   $0x000000,_0cee40_data
		jne    _030b0e_jump
		incl   0x00002c(%ecx)
		jmp    _030b0e_jump

	_030b08_jump:
		movw   $0x000000,0x000042(%ecx)

	_030b0e_jump:
		cmpw   $0x000001,0x000050(%ecx)
		setle  %al
		movw   $0x000000,0x000050(%ecx)
		xor    %ah,%ah
		mov    %ax,0x000056(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030b28_func:
		push   %ebx
		push   %edx
		mov    _0cdac0_data,%edx
		xor    %ebx,%ebx
		sub    $0x000062,%edx
		mov    0x00006a(%eax),%bl
		mov    %edx,0x00002c(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    0x000004(%eax),%ebx
		mov    0x00000a(%ebx,%edx,4),%dx
		and    $0x00ffff,%edx
		xor    %ebx,%ebx
		dec    %edx
		mov    0x00006b(%eax),%bl
		cmp    %edx,%ebx
		jne    _030bba_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		mov    0x000005(%ebx,%edx,8),%dl
		and    $0x00000f,%dl
		and    $0x0000ff,%edx
		cmpb   $0x000000,_0cee3d_data(%edx)
		jne    _030bba_jump
		mov    _0cecd4_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc1f0_data,%ebx
		cmpw   $0x000000,0x000056(%ebx,%edx,4)
		jne    _030bba_jump
		mov    0x000081(%eax),%bh
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%eax)

	_030bba_jump:
		pop    %edx
		pop    %ebx
		ret    



_030bc0_func:
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		cmpw   $0x0000ff,0x000050(%eax)
		je     _030c1f_jump
		mov    0x00004e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _030bfd_jump
		mov    %edx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _030c1f_jump
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

	_030bfd_jump:
		mov    0x000050(%edx),%cx
		test   %cx,%cx
		jne    _030c18_jump
		movb   $0x000000,0x00006b(%edx)
		movw   $0x00ffff,0x000050(%edx)
		movb   $0x000002,0x00007e(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

	_030c18_jump:
		mov    %ecx,%esi
		dec    %esi
		mov    %si,0x000050(%edx)

	_030c1f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    

_030c24_switch:
		.long   _030d25_case
		.long   _030d31_case
		.long   _030d3e_case
		.long   _030d50_case
		.long   _030d2b_case




_030c38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    _0cecca_data,%ax
		mov    %ax,_0cecb6_data
		mov    %ax,_0cecac_data
		mov    %ax,_0cecea_data
		cmpb   $0x000000,_095b15_data
		jne    _030c74_jump
		mov    _0cecb8_data,%ax
		mov    %ax,_0cecaa_data
		mov    %ax,_0ced00_data

	_030c74_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000014,%al
		jb     _030c86_jump
		jbe    _030ca1_jump
		cmp    $0x00001e,%al
		je     _030cb6_jump
		jmp    _030e28_jump

	_030c86_jump:
		cmp    $0x000002,%al
		jne    _030e28_jump
		movw   $0x000000,0x000042(%ecx)
		mov    0x000042(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		jmp    _030e28_jump

	_030ca1_jump:
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		jmp    _030e28_jump

	_030cb6_jump:
		cmpl   $0x000000,0x000020(%ecx)
		je     _030e28_jump
		mov    0x00004e(%ecx),%edx
		sar    $0x000010,%edx
		mov    $0x000001,%bl
		cmp    $0xffffffff,%edx
		je     _030ce3_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		cmpl   $0x000000,0x000024(%edx,%eax,4)
		je     _030ce3_jump
		xor    %bl,%bl

	_030ce3_jump:
		test   %bl,%bl
		je     _030cfe_jump
		mov    0x00007f(%ecx),%dl
		test   %dl,%dl
		je     _030cfe_jump
		cmpb   $0x000000,_0cee3f_data
		je     _030cfe_jump
		mov    %dl,%bl
		dec    %bl
		mov    %bl,0x00007f(%ecx)

	_030cfe_jump:
		xor    %bh,%bh
		mov    0x00007f(%ecx),%al
		mov    %bh,(%esp)
		test   %al,%al
		jne    _030e1e_jump
		mov    0x000052(%ecx),%ax
		cmp    $0x000004,%ax
		ja     _030d5b_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_030c24_switch(,%eax,4)

	_030d25_case:
		movw   $0x000002,0x000052(%ecx)

	_030d2b_case:
		mov    0x000060(%ecx),%si
		jmp    _030d5b_jump

	_030d31_case:
		mov    $0x00004d,%esi
		movw   $0x000003,0x000052(%ecx)
		jmp    _030d5b_jump

	_030d3e_case:
		mov    $0x000048,%esi
		mov    $0x000001,%ah
		movw   $0x000001,0x000052(%ecx)
		mov    %ah,(%esp)
		jmp    _030d5b_jump

	_030d50_case:
		mov    $0x0000bb,%esi
		movw   $0x000004,0x000052(%ecx)

	_030d5b_jump:
		cmpb   $0x000000,(%esp)
		jne    _030d65_jump
		movb   $0x000032,0x00007f(%ecx)

	_030d65_jump:
		cmp    0x000060(%ecx),%si
		je     _030e1e_jump
		mov    %ecx,%eax
		call   _05ef10_func
		movw   $0x000000,0x000048(%ecx)
		mov    0x000034(%ecx),%ax

	_030d80_jump:
		movswl %ax,%edx
		mov    _0ce324_data,%eax
		mov    (%eax,%edx,2),%ax
		movswl %ax,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc1f0_data,%ebx
		add    %ebx,%edx
		mov    0x000060(%edx),%bx
		cmp    %bx,%si
		je     _030dac_jump
		cmp    0x000060(%ecx),%bx
		jne    _030d80_jump

	_030dac_jump:
		mov    0x000060(%edx),%ax
		cmp    0x000060(%ecx),%ax
		je     _030e1e_jump
		cmp    $0x00004d,%ax
		jb     _030dca_jump
		jbe    _030dd2_jump
		cmp    $0x0000bb,%ax
		je     _030de4_jump
		jmp    _030df2_jump

	_030dca_jump:
		cmp    $0x000048,%ax
		je     _030ddb_jump
		jmp    _030df2_jump

	_030dd2_jump:
		mov    %edx,%eax
		call   _03c948_func
		jmp    _030df2_jump

	_030ddb_jump:
		mov    %edx,%eax
		call   _05b400_func
		jmp    _030df2_jump

	_030de4_jump:
		mov    %edx,%eax
		call   _061e50_func
		mov    %edx,%eax
		call   _063c78_func

	_030df2_jump:
		mov    %edx,%eax
		call   _05754c_func
		mov    %edx,%eax
		call   _055dd4_func
		mov    %edx,%eax
		call   _01db8c_func
		mov    0x000081(%edx),%bl
		or     $0x000004,%bl
		mov    0x000034(%edx),%ax
		mov    %bl,0x000081(%edx)
		mov    %ax,0x000050(%ecx)

	_030e1e_jump:
		cmpb   $0x000000,(%esp)
		jne    _030cfe_jump

	_030e28_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030e30_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000042(%eax),%dx
		cmp    $0x000002,%dx
		jle    _030e48_jump
		mov    $0x000002,%ebx
		mov    %ebx,%edx
		jmp    _030e58_jump

	_030e48_jump:
		cmp    $0x000001,%dx
		jle    _030e5d_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_030e58_jump:
		call   _01d374_func

	_030e5d_jump:
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _030e69_jump
		neg    %eax

	_030e69_jump:
		cmp    $0x000001,%eax
		jle    _030ea1_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _030e7a_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _030e81_jump

	_030e7a_jump:
		mov    $0x000001,%eax
		jmp    _030e83_jump

	_030e81_jump:
		xor    %eax,%eax

	_030e83_jump:
		test   %eax,%eax
		je     _030ea1_jump
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		je     _030e98_jump
		decw   0x000040(%ecx)
		jmp    _030ea1_jump

	_030e98_jump:
		test   $0x000008,%dh
		jne    _030ea1_jump
		incw   0x000040(%ecx)

	_030ea1_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _030ece_jump
		cmpb   $0x000003,0x00006c(%ecx)
		jne    _030ece_jump
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _030ece_jump
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)

	_030ece_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_030ed4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000081(%eax),%cl
		shl    $0x000004,%cl
		mov    0x00006d(%eax),%ah
		shr    $0x000007,%cl
		test   %ah,%ah
		jne    _030f10_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _030f10_jump
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _030f10_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func

	_030f10_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _031015_jump
		cmpb   $0x00000f,0x00006c(%esi)
		jne    _031015_jump
		cmpw   $0x000086,0x000060(%esi)
		jne    _030f4d_jump
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _030f4d_jump
		mov    $0x00000d,%edx
		mov    %esi,%eax
		call   _01d364_func
		movw   $0x000000,0x000040(%esi)
		jmp    _030fa0_jump

	_030f4d_jump:
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _030fa0_jump
		mov    0x000081(%esi),%bh
		mov    _0cdb15_data,%al
		and    $0x0000f7,%bh
		and    $0x000008,%al
		mov    %bh,%ch
		mov    %bh,0x000081(%esi)
		or     %al,%ch
		mov    %esi,%eax
		mov    %ch,0x000081(%esi)
		call   _053c34_func
		mov    %cl,%al
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%esi)
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,0x000081(%esi)

	_030fa0_jump:
		cmpw   $0x000000,0x000040(%esi)
		je     _031015_jump
		mov    %esp,%eax
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		add    $0x000010,%eax
		sar    $0x000004,%eax
		mov    0x000040(%esi),%bx
		movswl %ax,%edx
		test   %bx,%bx
		jge    _030fda_jump
		xor    %ebx,%ebx
		jmp    _030fe1_jump

	_030fda_jump:
		mov    0x000002(%esp),%ebx
		sar    $0x000010,%ebx

	_030fe1_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _031015_jump
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%esi)

	_031015_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031020_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _031057_jump
		cmpb   $0x00000a,0x000062(%ecx)
		jne    _031057_jump
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %eax,%edx
		and    $0x00fff0,%edx
		sub    %eax,%edx
		lea    0x000007(%edx),%eax
		mov    %eax,0x00002c(%ecx)

	_031057_jump:
		mov    %ecx,%eax
		mov    $0x00000a,%edx
		call   _030ed4_func
		mov    %ecx,%eax
		call   _02e850_func
		cmpb   $0x000009,0x00006c(%ecx)
		jne    _031077_jump
		mov    %ecx,%eax
		call   _05e018_func

	_031077_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_03107c_switch:
		.long   _03110c_case
		.long   _031121_case
		.long   _03110c_case
		.long   _031121_case
		.long   _03110c_case
		.long   _031121_case
		.long   _031121_case
		.long   _031116_case
		.long   _031121_case
		.long   _031116_case
		.long   _031121_case
		.long   _031116_case




_0310ac_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    0x000060(%eax),%ax
		cmp    $0x000086,%ax
		jb     _0310cd_jump
		jbe    _0310db_jump
		cmp    $0x0000a7,%ax
		jb     _0310f5_jump
		jbe    _0310db_jump
		cmp    $0x0000b1,%ax
		je     _0310e5_jump
		jmp    _0310f5_jump

	_0310cd_jump:
		cmp    $0x000006,%ax
		jb     _0310f5_jump
		jbe    _0310e5_jump
		cmp    $0x000008,%ax
		jne    _0310f5_jump

	_0310db_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x00002c,%eax
		jmp    _0310ed_jump

	_0310e5_jump:
		mov    0x000032(%ecx),%edx
		mov    $0x00008b,%eax

	_0310ed_jump:
		sar    $0x000010,%edx
		call   _06f35c_func

	_0310f5_jump:
		mov    _0cdbc0_data,%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _031121_case
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_03107c_switch(,%edx,4)

	_03110c_case:
		xor    %ebx,%ebx
		mov    _0cdbc3_data,%bl
		jmp    _031121_case

	_031116_case:
		xor    %ebx,%ebx
		mov    _0cdbc3_data,%bl
		sub    $0x000002,%ebx

	_031121_case:
		mov    %ebx,%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    _0cdb20_data,%edx
		mov    0x000040(%edx),%si
		add    $0x00000a,%ebx
		test   %si,%si
		jge    _03113c_jump
		neg    %ebx

	_03113c_jump:
		movswl %bx,%edx
		mov    %ecx,%eax
		call   _01e610_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03114c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000040(%eax),%bx
		call   _053c34_func
		mov    0x00003e(%edx),%eax
		movswl %bx,%ecx
		sar    $0x000010,%eax
		imul   %ecx,%eax
		test   %eax,%eax
		jge    _031191_jump
		mov    0x000081(%edx),%ch
		lea    0x000081(%edx),%eax
		test   $0x000008,%ch
		sete   %cl
		and    $0x000001,%cl
		mov    (%eax),%ch
		and    $0x0000f7,%ch
		mov    %ch,(%eax)
		shl    $0x000003,%cl
		or     %cl,%ch
		mov    %ch,(%eax)
		mov    %bx,0x000040(%edx)

	_031191_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031198_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $0x0000ff,0x00007f(%eax)
		je     _031269_jump
		cmpb   $0x000000,0x00007f(%ecx)
		jne    _031266_jump
		mov    0x00006d(%ecx),%al
		mov    _0cdb15_data,%ah
		and    $0x0000fb,%ah
		or     $0x000004,%ah
		test   %al,%al
		jbe    _0311cb_jump
		cmp    $0x000005,%al
		je     _0311ed_jump
		jmp    _031212_jump

	_0311cb_jump:
		mov    $0x000001,%ebx
		mov    0x000081(%ecx),%dh
		mov    %ah,_0cdb15_data
		and    $0x0000fb,%dh
		mov    %ebx,_0cdab8_data
		mov    %dh,0x000081(%ecx)
		jmp    _031212_jump

	_0311ed_jump:
		mov    $0x000001,%edx
		mov    $0x000028,%ebx
		mov    %ah,_0cdb15_data
		mov    $_0cda94_data,%eax
		mov    %edx,_0cdab8_data
		mov    $0x000003,%edx
		call   _01d374_func

	_031212_jump:
		mov    0x000081(%ecx),%bl
		mov    0x000032(%ecx),%eax
		and    $0x0000fb,%bl
		sar    $0x000010,%eax
		mov    %bl,0x000081(%ecx)
		call   _01f334_func
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0cdafc_data,%al
		sub    %eax,%edx
		mov    0x00002c(%ecx),%esi
		mov    %edx,_0cdabc_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000069(%ecx),%al
		mov    _0cdafd_data,%dl
		add    %esi,%eax
		mov    $0x000040,%bh
		sub    %edx,%eax
		mov    %bh,_0ceec4_data
		mov    %eax,_0cdac0_data

	_031266_jump:
		decb   0x00007f(%ecx)

	_031269_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031930_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x000040(%eax),%cx
		xor    %eax,%eax
		mov    _0cdabc_data,%bx
		mov    _0cdafc_data,%al
		mov    0x000028(%esi),%di
		add    %ebx,%eax
		sub    %edi,%eax
		movzbw 0x000068(%esi),%di
		sub    %edi,%eax
		mov    0x000034(%esi),%bx
		mov    %eax,%edi
		cmp    _0cdade_data,%bx
		jne    _031a82_jump
		movb   $0x000005,0x000072(%esi)
		mov    _0cdac0_data,%eax
		add    $0x000008,%eax
		test   %di,%di
		jle    _031a09_jump
		cmp    $0x000062,%di
		jle    _031991_jump
		mov    %eax,_0cdac0_data
		jmp    _0319c7_jump

	_031991_jump:
		cmp    $0x000046,%di
		jle    _03199e_jump
		mov    $0x000004,%edx
		jmp    _0319c7_jump

	_03199e_jump:
		cmp    $0x00003c,%di
		jle    _0319ab_jump
		mov    $0x000003,%edx
		jmp    _0319c7_jump

	_0319ab_jump:
		cmp    $0x000028,%di
		jle    _0319b8_jump
		mov    $0x000002,%edx
		jmp    _0319c7_jump

	_0319b8_jump:
		cmp    $0x000014,%di
		jle    _0319c5_jump
		mov    $0x000001,%edx
		jmp    _0319c7_jump

	_0319c5_jump:
		xor    %edx,%edx

	_0319c7_jump:
		cmp    %dx,%cx
		jge    _0319e4_jump
		mov    0x000071(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000071(%esi)
		test   %al,%al
		ja     _0319e4_jump
		inc    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _031a9f_jump

	_0319e4_jump:
		cmp    %dx,%cx
		jle    _031a9f_jump
		mov    0x000071(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000071(%esi)
		test   %al,%al
		ja     _031a9f_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _031a9f_jump

	_031a09_jump:
		neg    %edi
		cmp    $0x000069,%di
		jle    _031a18_jump
		mov    %eax,_0cdac0_data
		jmp    _031a4e_jump

	_031a18_jump:
		cmp    $0x000046,%di
		jle    _031a25_jump
		mov    $0xfffffffc,%edx
		jmp    _031a4e_jump

	_031a25_jump:
		cmp    $0x00003c,%di
		jle    _031a32_jump
		mov    $0xfffffffd,%edx
		jmp    _031a4e_jump

	_031a32_jump:
		cmp    $0x000028,%di
		jle    _031a3f_jump
		mov    $0xfffffffe,%edx
		jmp    _031a4e_jump

	_031a3f_jump:
		cmp    $0x000014,%di
		jle    _031a4c_jump
		mov    $0xffffffff,%edx
		jmp    _031a4e_jump

	_031a4c_jump:
		xor    %edx,%edx

	_031a4e_jump:
		cmp    %dx,%cx
		jle    _031a68_jump
		mov    0x000071(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000071(%esi)
		test   %al,%al
		ja     _031a68_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _031a9f_jump

	_031a68_jump:
		cmp    %dx,%cx
		jle    _031a9f_jump
		mov    0x000071(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000071(%esi)
		test   %al,%al
		ja     _031a9f_jump
		dec    %ecx
		movb   $0x000005,0x000071(%esi)
		jmp    _031a9f_jump

	_031a82_jump:
		mov    0x000072(%esi),%al
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x000072(%esi)
		test   %al,%al
		jne    _031a9f_jump
		movb   $0x000005,0x000072(%esi)
		test   %cx,%cx
		je     _031a9f_jump
		jle    _031a9e_jump
		dec    %ecx
		jmp    _031a9f_jump

	_031a9e_jump:
		inc    %ecx

	_031a9f_jump:
		mov    %ecx,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000068(%esi),%al
		add    %ecx,%edx
		mov    0x000069(%esi),%bl
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _031ac0_jump
		xor    %ecx,%ecx

	_031ac0_jump:
		mov    0x00006d(%esi),%ah
		mov    %cx,0x000040(%esi)
		test   %ah,%ah
		jne    _031b20_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _031b20_jump
		cmpw   $0x000000,0x000052(%esi)
		jne    _031ca4_jump
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _031ca4_jump
		mov    0x00007f(%esi),%bh
		cmp    $0x000064,%bh
		jbe    _031b14_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		movw   $0x000001,0x000052(%esi)
		mov    %esi,%eax
		movb   $0x000000,0x00007f(%esi)
		call   _05efb0_func
		jmp    _031ca4_jump

	_031b14_jump:
		mov    %bh,%cl
		inc    %cl
		mov    %cl,0x00007f(%esi)
		jmp    _031ca4_jump

	_031b20_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _031bfb_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _031bfb_jump
		movw   $0x000000,0x000052(%esi)
		cmpb   $0x000002,_0cdb01_data
		jne    _031ca4_jump
		mov    _0cdae8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _031ca4_jump
		mov    0x00006b(%esi),%ah
		cmp    $0x000014,%ah
		jb     _031ca4_jump
		cmp    $0x000016,%ah
		ja     _031ca4_jump
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d710_func
		movswl %di,%eax
		test   %eax,%eax
		jge    _031b94_jump
		neg    %eax

	_031b94_jump:
		cmp    $0x000064,%eax
		jge    _031ca4_jump
		mov    0x00000a(%esp),%edx
		xor    %eax,%eax
		mov    _0cdac0_data,%ebp
		mov    _0cdafd_data,%al
		sar    $0x000010,%edx
		add    %ebp,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		sub    %eax,%edx
		lea    -0x00001c(%edx),%eax
		test   %eax,%eax
		jge    _031bc7_jump
		neg    %eax

	_031bc7_jump:
		cmp    $0x000014,%eax
		jge    _031ca4_jump
		test   %di,%di
		jge    _031bde_jump
		orb    $0x000008,_0cdb15_data
		jmp    _031be5_jump

	_031bde_jump:
		andb   $0x0000f7,_0cdb15_data

	_031be5_jump:
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02d60c_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031bfb_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _031ca4_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _031ca4_jump
		cmpl   $0x000000,_0cdab8_data
		jne    _031ca4_jump
		cmpb   $0x000000,0x00006b(%esi)
		jne    _031ca4_jump
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _031ca4_jump
		mov    $0x000001,%ebx
		mov    $0xffffffff,%ecx
		lea    0x000008(%esp),%eax
		mov    $0x000001,%edx
		mov    %ebx,_0cdab8_data
		mov    %cx,_0cdaea_data
		push   %eax
		lea    0x000004(%esp),%eax
		mov    _0cdabc_data,%ecx
		lea    0x000008(%esp),%ebx
		sub    $0x000004,%ecx
		push   %eax
		mov    %ecx,_0cdabc_data
		mov    %esi,%eax
		lea    0x000014(%esp),%ecx
		call   _01d710_func
		mov    0x00000a(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000074(%esi),%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0cdafd_data,%dl
		sub    %edx,%eax
		mov    $0x000008,%ebx
		mov    %eax,_0cdac0_data
		xor    %edx,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func

	_031ca4_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_031cb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    %ax,0x000018(%esp)
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		mov    0x000052(%esi),%dx
		mov    %ax,0x000024(%esp)
		test   %dx,%dx
		jne    _031ce5_jump
		mov    %dx,0x000040(%esi)
		mov    %dx,0x000042(%esi)
		jmp    _031d9d_jump

	_031ce5_jump:
		cmp    $0x000001,%dx
		jne    _031d9d_jump
		mov    _0cdade_data,%ax
		mov    0x000034(%esi),%cx
		cmp    %cx,%ax
		jne    _031d37_jump
		xor    %ecx,%eax
		mov    _0cdabc_data,%di
		mov    _0cdafc_data,%al
		mov    0x000028(%esi),%dx
		add    %edi,%eax
		mov    0x000018(%esp),%ebx
		sub    %edx,%eax
		mov    _0cdac0_data,%edx
		sub    %ebx,%eax
		add    $0x000008,%edx
		cmp    $0x000060,%ax
		jg     _031d31_jump
		movswl %ax,%ebx
		cmp    $0xffffff95,%ebx
		jge    _031d37_jump

	_031d31_jump:
		mov    %edx,_0cdac0_data

	_031d37_jump:
		mov    0x000022(%esp),%edi
		mov    0x000016(%esp),%ecx
		mov    %esi,%eax
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		mov    %edi,%ebx
		mov    %ecx,%edx
		call   _01d624_func
		test   %ax,%ax
		je     _031d76_jump
		mov    %edi,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _031d76_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _05efb0_func

	_031d76_jump:
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    0x000070(%esi),%dl
		mov    %ah,0x000081(%esi)
		cmp    $0x000014,%dl
		jne    _031d9d_jump
		mov    0x000056(%esi),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000042(%esi)

	_031d9d_jump:
		cmpw   $0x000001,0x000052(%esi)
		jl     _03215c_jump
		mov    0x000032(%esi),%edx
		mov    _0ce324_data,%ebx
		sar    $0x000010,%edx
		mov    (%ebx,%edx,2),%ax
		movswl %ax,%edi
		mov    %edi,%ecx
		shl    $0x000005,%ecx
		add    %edi,%ecx
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%ecx
		add    %edx,%ecx
		cmpl   $0x000000,0x000024(%ecx)
		jne    _031dda_jump
		movl   $0x000001,0x000024(%ecx)

	_031dda_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _03215c_jump
		cmpw   $0x000000,0x000042(%esi)
		jne    _03215c_jump
		cmpw   $0x000001,0x000052(%esi)
		jne    _031e0e_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		movw   $0x000002,0x000052(%esi)
		call   _05efb0_func

	_031e0e_jump:
		mov    0x000052(%esi),%bx
		cmp    $0x000002,%bx
		jne    _031f35_jump
		movw   $0x000003,0x000052(%ecx)
		mov    0x000028(%ecx),%ax
		mov    0x000028(%esi),%di
		mov    0x00002c(%esi),%dx
		sub    %edi,%eax
		mov    0x00002c(%ecx),%di
		sub    %edx,%edi
		cmp    $0x000006,%ax
		jle    _031e47_jump
		movw   $0x00fffc,0x000040(%ecx)
		jmp    _03215c_jump

	_031e47_jump:
		movswl %ax,%edx
		cmp    $0xfffffffa,%edx
		jge    _031e5f_jump
		movw   $0x000004,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031e5f_jump:
		test   %ax,%ax
		jle    _031e74_jump
		movw   $0x00ffff,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031e74_jump:
		jge    _031e86_jump
		movw   $0x000001,0x000040(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031e86_jump:
		movswl %di,%edx
		movw   $0x000000,0x000040(%ecx)
		cmp    $0xfffffff8,%edx
		jge    _031ea4_jump
		movw   $0x000004,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031ea4_jump:
		cmp    $0x000008,%di
		jle    _031eba_jump
		movw   $0x00fffc,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031eba_jump:
		test   %di,%di
		jle    _031ecf_jump
		movw   $0x00ffff,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031ecf_jump:
		jl     _032156_jump
		movw   $0x000000,0x000042(%ecx)
		movw   $0x000004,0x000052(%esi)
		mov    0x000060(%ecx),%bx
		movw   $0x000004,0x000052(%ecx)
		cmp    $0x0000a8,%bx
		jne    _031f00_jump
		movw   $0x000009,0x000028(%esp)
		mov    $0x000005,%eax
		jmp    _031f0f_jump

	_031f00_jump:
		mov    $0x000005,%edi
		mov    $0x000009,%eax
		mov    %di,0x000028(%esp)

	_031f0f_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %al,%bl
		mov    %ecx,%eax
		call   _01d374_func
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000028(%esp),%bl
		call   _01d374_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_031f35_jump:
		cmp    $0x000004,%bx
		jne    _03202f_jump
		cmpw   $0x0000a8,0x000060(%esi)
		jne    _031f50_jump
		movw   $0x000007,0x000028(%esp)
		jmp    _031f57_jump

	_031f50_jump:
		movw   $0x00000b,0x000028(%esp)

	_031f57_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _03215c_jump
		xor    %eax,%eax
		mov    0x000028(%esp),%edx
		mov    0x00006c(%esi),%al
		cmp    %dx,%ax
		jne    _03215c_jump
		cmpb   $0x000000,0x00006b(%esi)
		jne    _03215c_jump
		movw   $0x000005,0x000052(%esi)
		cmpl   $0x000000,_0cdab8_data
		jne    _03215c_jump
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _03215c_jump
		mov    _0cdae8_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _03215c_jump
		cmpw   $0x0000a9,0x000060(%esi)
		jne    _03215c_jump
		mov    $0x000001,%ecx
		lea    0x000014(%esp),%edx
		lea    0x00000c(%esp),%ebx
		mov    _0cdabc_data,%edi
		mov    %esi,%eax
		mov    %ecx,_0cdab8_data
		push   %edx
		sub    $0x000004,%edi
		lea    0x00000c(%esp),%edx
		lea    0x000020(%esp),%ecx
		push   %edx
		mov    $0x000001,%edx
		mov    %edi,_0cdabc_data
		call   _01d710_func
		mov    0x00001a(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000074(%esi),%dl
		add    %edx,%ebx
		xor    %edx,%edx
		mov    _0cdafd_data,%dl
		sub    %edx,%ebx
		mov    $_0cda94_data,%eax
		mov    %ebx,_0cdac0_data
		xor    %edx,%edx
		mov    $0x000008,%ebx
		call   _01d374_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03202f_jump:
		cmp    $0x000005,%bx
		jne    _03215c_jump
		xor    %eax,%eax
		mov    0x000022(%esp),%edx
		mov    0x000068(%ecx),%al
		sar    $0x000010,%edx
		mov    %ax,0x000020(%esp)
		mov    %edx,0x000004(%esp)
		mov    0x000016(%esp),%edx
		mov    0x000004(%esp),%ebx
		mov    0x00001e(%esp),%ebp
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000069(%ecx),%al
		sar    $0x000010,%ebp
		mov    %ax,0x000010(%esp)
		mov    %edx,(%esp)
		mov    %esi,%eax
		mov    0x00000e(%esp),%edi
		call   _01d624_func
		mov    %eax,0x00000c(%esp)
		sar    $0x000010,%edi
		mov    %ebp,%edx
		mov    %edi,%ebx
		mov    %ecx,%eax
		call   _01d624_func
		mov    0x000004(%esp),%ebx
		mov    (%esp),%edx
		mov    %ax,0x00001c(%esp)
		mov    %esi,%eax
		call   _02ec10_func
		mov    %eax,0x000008(%esp)
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		mov    0x000004(%esp),%ebx
		mov    (%esp),%edx
		mov    %eax,0x000014(%esp)
		mov    %esi,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _032124_jump
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _032124_jump
		mov    0x000004(%esp),%ebx
		mov    (%esp),%edx
		movw   $0x000001,0x000052(%esi)
		mov    %esi,%eax
		movw   $0x000001,0x000052(%ecx)
		call   _02ec10_func
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _05efb0_func
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032124_jump:
		mov    0x00000e(%esp),%ebx
		mov    0x00001e(%esp),%edx
		mov    %ecx,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01d624_func
		test   %ax,%ax
		jne    _03215c_jump
		cmpw   $0x0000a8,0x000060(%ecx)
		jne    _032156_jump
		movw   $0x00ffff,0x000042(%ecx)
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032156_jump:
		movw   $0x000001,0x000042(%ecx)

	_03215c_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_032168_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    0x000060(%eax),%dx
		xor    %ebx,%ebx
		cmp    $0x0000a9,%dx
		jne    _03223d_jump
		movl   $0x00000a,(%esp)
		mov    0x000032(%esi),%eax
		mov    _0ce324_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%esi),%ax
		je     _03227b_jump
		cwtl   
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edi
		add    %eax,%edi
		cmpw   $0x0000a8,0x000060(%edi)
		jne    _03227b_jump
		cmpw   $0x000080,0x000042(%edi)
		jle    _0321d3_jump
		movw   $0x000001,0x000042(%edi)
		jmp    _0321e4_jump

	_0321d3_jump:
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff80,%eax
		jge    _0321e4_jump
		movw   $0x00ffff,0x000042(%edi)

	_0321e4_jump:
		mov    _0cec9e_data,%ecx
		mov    _0cec9c_data,%ebx
		push   %edi
		mov    0x000040(%edi),%eax
		mov    0x00002c(%edi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		add    %eax,%eax
		sar    $0x000010,%ebx
		add    %eax,%edx
		mov    _0cecb8_data,%eax
		mov    %edx,0x00002c(%edi)
		sar    $0x000010,%eax
		mov    _0cec9a_data,%edx
		push   %eax
		sar    $0x000010,%edx
		mov    $0x000017,%eax
		call   _02c0a0_func
		mov    %eax,%ebx
		mov    0x000040(%edi),%eax
		sar    $0x000010,%eax
		mov    0x00002c(%edi),%ecx
		add    %eax,%eax
		sub    %eax,%ecx
		mov    %ecx,0x00002c(%edi)
		mov    0x000042(%edi),%cx
		add    %ecx,%ecx
		jmp    _03227b_jump

	_03223d_jump:
		mov    $0x000001,%edi
		mov    _0cec9e_data,%ecx
		mov    _0cec9c_data,%ebx
		mov    _0cec9a_data,%edx
		push   %eax
		mov    _0cecb8_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		push   %eax
		mov    $0x000017,%eax
		mov    %edi,0x000008(%esp)
		call   _02c0a0_func
		mov    %eax,%ebx
		mov    0x000042(%esi),%cx

	_03227b_jump:
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		je     _03248d_jump
		mov    _0cdb01_data,%ah
		dec    %ebx
		cmp    $0x000002,%ah
		jne    _032307_jump
		mov    _0cdb00_data,%dl
		cmp    %ah,%dl
		je     _0322ad_jump
		cmp    $0x000001,%dl
		je     _0322ad_jump
		mov    $0x000001,%eax
		jmp    _0322af_jump

	_0322ad_jump:
		xor    %eax,%eax

	_0322af_jump:
		test   %eax,%eax
		je     _032307_jump
		cmpb   $0x000008,_0cdb00_data
		je     _0322cb_jump
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func

	_0322cb_jump:
		cmp    $0x000080,%cx
		jle    _0322d9_jump
		mov    $0x000001,%ecx
		jmp    _0322e6_jump

	_0322d9_jump:
		movswl %cx,%eax
		cmp    $0xffffff80,%eax
		jge    _0322e6_jump
		mov    $0xffffffff,%ecx

	_0322e6_jump:
		mov    _0cdac0_data,%edi
		movswl %cx,%eax
		add    %eax,%edi
		xor    %ecx,%ecx
		mov    %edi,_0cdac0_data
		mov    %cx,_0cdae6_data
		mov    %cx,_0cdad6_data

	_032307_jump:
		cmpb   $0x000002,_0cdb01_data
		jne    _032319_jump
		cmpb   $0x000008,_0cdb00_data
		je     _032320_jump

	_032319_jump:
		mov    $0x000001,%eax
		jmp    _032322_jump

	_032320_jump:
		xor    %eax,%eax

	_032322_jump:
		test   %eax,%eax
		je     _03248d_jump
		cmpb   $0x000000,_0cdb01_data
		jne    _03233c_jump
		cmpb   $0x00003d,_0cdb00_data
		je     _032343_jump

	_03233c_jump:
		mov    $0x000001,%eax
		jmp    _032345_jump

	_032343_jump:
		xor    %eax,%eax

	_032345_jump:
		test   %eax,%eax
		je     _03248d_jump
		mov    0x00006b(%esi),%ch
		cmp    $0x000014,%ch
		jb     _03248d_jump
		cmp    $0x000016,%ch
		ja     _03248d_jump
		mov    0x00006d(%esi),%ah
		test   %ah,%ah
		jne    _03248d_jump
		mov    (%esp),%edx
		mov    0x00006c(%esi),%al
		cmp    %dx,%ax
		jne    _03248d_jump
		cmpb   $0x000001,0x000075(%esi)
		je     _03238c_jump
		cmp    $0x000001,%bx
		jne    _032466_jump

	_03238c_jump:
		testb  $0x000004,_0cdb15_data
		je     _032466_jump
		cmpb   $0x000002,_0cdb01_data
		jne    _0323ab_jump
		cmpb   $0x000008,_0cdb00_data
		je     _0323b2_jump

	_0323ab_jump:
		mov    $0x000001,%eax
		jmp    _0323b4_jump

	_0323b2_jump:
		xor    %eax,%eax

	_0323b4_jump:
		test   %eax,%eax
		je     _032466_jump
		cmpb   $0x000000,_0cdb01_data
		jne    _0323ce_jump
		cmpb   $0x00003d,_0cdb00_data
		je     _0323d5_jump

	_0323ce_jump:
		mov    $0x000001,%eax
		jmp    _0323d7_jump

	_0323d5_jump:
		xor    %eax,%eax

	_0323d7_jump:
		test   %eax,%eax
		je     _032466_jump
		mov    _0cdabc_data,%bx
		xor    %eax,%eax
		mov    0x000028(%esi),%cx
		mov    _0cdafc_data,%al
		xor    %edx,%edx
		add    %ebx,%eax
		mov    0x000068(%esi),%dl
		sub    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		cwtl   
		test   %eax,%eax
		jge    _032405_jump
		neg    %eax

	_032405_jump:
		cmp    $0x000019,%eax
		jge    _03244f_jump
		mov    $0xffffffff,%ebx
		mov    $_0cda94_data,%eax
		xor    %edi,%edi
		xor    %ebp,%ebp
		xor    %edx,%edx
		mov    %di,_0cdad4_data
		mov    %di,_0cdad6_data
		mov    %di,_0ceca2_data
		mov    %bx,_0cdaea_data
		xor    %ebx,%ebx
		mov    %ebp,_0cdab8_data
		call   _01d374_func
		mov    0x000034(%esi),%ax
		mov    %ax,_0cdade_data
		jmp    _03248d_jump

	_03244f_jump:
		test   %dx,%dx
		jge    _03245d_jump
		orb    $0x000008,_0cdb15_data
		jmp    _032481_jump

	_03245d_jump:
		andb   $0x0000f7,_0cdb15_data
		jmp    _032481_jump

	_032466_jump:
		cmpb   $0x000000,0x000075(%esi)
		je     _032471_jump
		test   %bx,%bx
		jne    _03247a_jump

	_032471_jump:
		orb    $0x000008,_0cdb15_data
		jmp    _032481_jump

	_03247a_jump:
		andb   $0x0000f7,_0cdb15_data

	_032481_jump:
		mov    $0x000001,%eax
		mov    %esi,%edx
		call   _02d60c_func

	_03248d_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0324a0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%bl
		call   _0188d0_func
		sub    %ebx,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0cecd8_data,%ax
		add    $0x000090,%eax
		mov    %ax,0x00003c(%edx)
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%edx)
		pop    %edx
		pop    %ebx
		ret    



_0324d8_func:
		push   %edx
		mov    _096065_data,%dl
		inc    %dl
		cmp    $0x000003,%dl
		jne    _0324ee_jump
		mov    %dl,_096066_data
		jmp    _0324fd_jump

	_0324ee_jump:
		xor    %eax,%eax
		mov    %dl,%al
		mov    _09604e_data(%eax),%al
		mov    %al,_096066_data

	_0324fd_jump:
		mov    %dl,_096065_data
		pop    %edx
		ret    



_032604_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    _0ced12_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0329c5_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0329c5_jump
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		mov    _0cecd0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0326ae_jump
		mov    $0x000040,%ebx
		mov    $0x000005,%edx
		mov    _0cdb20_data,%eax
		call   _01d374_func
		movzbl 0x000068(%ecx),%edi
		mov    0x000028(%ecx),%edx
		mov    _0cdb20_data,%eax
		add    %edx,%edi
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%edi
		xor    %edx,%edx
		mov    %edi,0x000028(%eax)
		mov    0x000069(%ecx),%dl
		mov    0x00002c(%ecx),%ebx
		movzbl 0x000069(%eax),%edi
		add    %ebx,%edx
		sub    %edi,%edx
		sub    $0x000005,%edx
		mov    0x000024(%eax),%edi
		mov    %edx,0x00002c(%eax)
		test   %edi,%edi
		jne    _032693_jump
		call   _01f304_func

	_032693_jump:
		mov    _0cdb20_data,%eax
		mov    0x000081(%eax),%dh
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%dh
		mov    %dh,0x000081(%eax)

	_0326ae_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x00001c,%al
		jb     _0326cc_jump
		jbe    _03280d_jump
		cmp    $0x00001d,%al
		jbe    _032784_jump
		cmp    $0x000028,%al
		je     _0326dc_jump
		jmp    _0329c5_jump

	_0326cc_jump:
		cmp    $0x00001a,%al
		jb     _0329c5_jump
		jbe    _03280d_jump
		jmp    _0326f9_jump

	_0326dc_jump:
		mov    %esi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _0329c5_jump
		mov    %esi,%eax
		call   _033808_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0326f9_jump:
		mov    0x00002c(%ecx),%ebx
		mov    _0de646_data,%eax
		sub    $0x000008,%ebx
		sar    $0x000010,%eax
		mov    %ebx,0x00002c(%ecx)
		cmp    %ebx,%eax
		jle    _032711_jump
		mov    %eax,0x00002c(%ecx)

	_032711_jump:
		mov    _0cecd0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032739_jump
		mov    _0cdb20_data,%eax
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebp
		mov    0x000069(%ecx),%dl
		movzbl 0x000069(%eax),%edi
		add    %ebp,%edx
		sub    %edi,%edx
		sub    $0x000005,%edx
		mov    %edx,0x00002c(%eax)

	_032739_jump:
		mov    %esi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _0329c5_jump
		mov    0x000050(%ecx),%dx
		dec    %dx
		mov    %dx,0x000050(%ecx)
		jne    _032769_jump
		mov    $0x000028,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032769_jump:
		mov    $0x00001c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000056(%ecx)
		call   _01d374_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032784_jump:
		mov    0x00002c(%ecx),%ebp
		mov    _0de648_data,%eax
		add    $0x000006,%ebp
		sar    $0x000010,%eax
		mov    %ebp,0x00002c(%ecx)
		cmp    %ebp,%eax
		jge    _03279c_jump
		mov    %eax,0x00002c(%ecx)

	_03279c_jump:
		mov    _0cecd0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0327c5_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edi
		mov    0x000069(%ecx),%al
		add    %eax,%edi
		mov    _0cdb20_data,%eax
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%edi
		sub    $0x000005,%edi
		mov    %edi,0x00002c(%eax)

	_0327c5_jump:
		mov    %esi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _0327eb_jump
		mov    $0x00001a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000056(%ecx)
		call   _01d374_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0327eb_jump:
		cmpb   $0x000002,_0cdb01_data
		jne    _0329c5_jump
		mov    $0x00001b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03280d_jump:
		xor    %eax,%eax
		mov    _0cdabc_data,%dx
		mov    _0cdafc_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0de646_data,%di
		mov    0x000068(%ecx),%al
		add    %edi,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    _0cdac0_data,%bx
		mov    _0cdafd_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0de64a_data,%di
		mov    0x000069(%ecx),%al
		add    %edi,%eax
		sub    %eax,%ebx
		movswl %dx,%eax
		mov    %eax,%edi
		imul   %eax,%edi
		movswl %bx,%edx
		imul   %edx,%edx
		test   %eax,%eax
		jge    _032861_jump
		neg    %eax

	_032861_jump:
		add    %edi,%edx
		cmp    $0x000028,%eax
		jl     _032870_jump
		cmp    $0x000bb8,%edx
		jae    _032874_jump

	_032870_jump:
		mov    $0x000001,%ah
		jmp    _032876_jump

	_032874_jump:
		xor    %ah,%ah

	_032876_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x00001a,%al
		jb     _0329c5_jump
		jbe    _032892_jump
		cmp    $0x00001c,%al
		je     _032952_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032892_jump:
		test   %ah,%ah
		jne    _0328e0_jump
		cmpb   $0x000002,_0cdb01_data
		jne    _0328a8_jump
		cmpb   $0x000000,_0cdb00_data
		je     _0328e0_jump

	_0328a8_jump:
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    _0cdaa0_data,%edi
		shl    $0x000002,%eax
		add    %eax,%edi
		xor    %eax,%eax
		mov    (%edi),%edi
		mov    _0cdb00_data,%al
		testb  $0x000040,0x000007(%edi,%eax,8)
		je     _0328f5_jump
		movswl %bx,%eax
		test   %eax,%eax
		jge    _0328d3_jump
		neg    %eax

	_0328d3_jump:
		cmp    $0x00001e,%eax
		jge    _0328f5_jump
		cmp    $0x000bb8,%edx
		jae    _0328f5_jump

	_0328e0_jump:
		mov    $0x00001b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0328f5_jump:
		cmpw   $0x00001d,0x000056(%ecx)
		jge    _0329c5_jump
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		mov    _0de648_data,%edx
		mov    _096012_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    _0cecd0_data,%eax
		sar    $0x000010,%eax
		mov    %edx,0x00002c(%ecx)
		cmp    $0xffffffff,%eax
		je     _0329c1_jump
		movzbl 0x000069(%ecx),%esi
		mov    _0cdb20_data,%eax
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%esi
		sub    $0x000005,%esi
		mov    %esi,0x00002c(%eax)
		incw   0x000056(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032952_jump:
		test   %ah,%ah
		jne    _032974_jump
		cmpb   $0x000002,_0cdb01_data
		je     _032974_jump
		mov    $0x00001d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032974_jump:
		cmpw   $0x00001d,0x000056(%ecx)
		jge    _0329c5_jump
		mov    0x000054(%ecx),%eax
		sar    $0x000010,%eax
		mov    _0de646_data,%edx
		mov    _096012_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0cecd0_data,%eax
		sar    $0x000010,%eax
		mov    %edx,0x00002c(%ecx)
		cmp    $0xffffffff,%eax
		je     _0329c1_jump
		xor    %edx,%edx
		mov    0x00002c(%ecx),%eax
		mov    0x000069(%ecx),%dl
		add    %eax,%edx
		mov    _0cdb20_data,%eax
		movzbl 0x000069(%eax),%esi
		sub    %esi,%edx
		sub    $0x000005,%edx
		mov    %edx,0x00002c(%eax)

	_0329c1_jump:
		incw   0x000056(%ecx)

	_0329c5_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0329cc_switch:
		.long   _0329fc_case
		.long   _032a9e_case
		.long   _032b5f_case
		.long   _032bfb_case




_0329dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _096066_data,%al
		cmp    $0x000003,%al
		ja     _032c0c_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0329cc_switch(,%eax,4)

	_0329fc_case:
		mov    _0ced14_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032c0c_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    0x000050(%edx),%ax
		test   %ax,%ax
		jne    _032a57_jump
		mov    $_096051_data,%eax
		movw   $0x000002,0x000050(%edx)
		call   _033ac4_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_092264_data(,%eax,4)
		movb   $0x000001,_0ceead_data
		call   _03da70_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032a57_jump:
		cmp    $0x000001,%ax
		jne    _032c0c_jump
		mov    0x000024(%edx),%esi
		test   %esi,%esi
		jne    _032c0c_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_092264_data(,%eax,4)
		mov    0x000081(%edx),%cl
		xor    %bh,%bh
		mov    %esi,0x000024(%edx)
		and    $0x0000fb,%cl
		mov    %bh,_0ceead_data
		mov    %cl,0x000081(%edx)
		call   _0324d8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032a9e_case:
		mov    _0ced1e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032c0c_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc1f0_data,%ecx
		shl    $0x000002,%edx
		add    %ecx,%edx
		mov    0x000050(%edx),%si
		test   %si,%si
		jne    _032b15_jump
		mov    _0ced0c_data,%ebx
		sar    $0x000010,%ebx
		movw   $0x000002,0x000050(%edx)
		cmp    $0xffffffff,%ebx
		je     _032aec_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movw   $0x000002,0x000050(%ecx,%eax,4)

	_032aec_jump:
		mov    $_096056_data,%eax
		call   _033ac4_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_092264_data(,%eax,4)
		movb   $0x000001,_0ceead_data
		call   _03db24_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032b15_jump:
		cmp    $0x000001,%si
		jne    _032c0c_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _032c0c_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_092264_data(,%eax,4)
		mov    0x000081(%edx),%cl
		movl   $0x000000,0x000024(%edx)
		xor    %bh,%bh
		and    $0x0000fb,%cl
		mov    %bh,_0ceead_data
		mov    %cl,0x000081(%edx)
		call   _0324d8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032b5f_case:
		mov    _0ced1c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _032c0c_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x000050(%edx),%bx
		test   %bx,%bx
		jne    _032bb9_jump
		mov    $_09605b_data,%eax
		movw   $0x000002,0x000050(%edx)
		call   _033ac4_func
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		orb    $0x000080,_092264_data(,%eax,4)
		movb   $0x000001,_0ceead_data
		call   _03dcd0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032bb9_jump:
		cmp    $0x000001,%bx
		jne    _032c0c_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _032c0c_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		andb   $0x00007f,_092264_data(,%eax,4)
		mov    0x000081(%edx),%cl
		movl   $0x000000,0x000024(%edx)
		xor    %bh,%bh
		and    $0x0000fb,%cl
		mov    %bh,_0ceead_data
		mov    %cl,0x000081(%edx)
		call   _0324d8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032bfb_case:
		mov    $_096060_data,%eax
		call   _033ac4_func
		mov    %edx,%eax
		call   _033958_func

	_032c0c_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_032c14_switch:
		.long   _032c58_case
		.long   _032c58_case
		.long   _032c61_case
		.long   _032c6a_case
		.long   _032c7a_case
		.long   _032c73_case




_032c2c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x00006d(%eax)
		jne    _032c7a_case
		cmpb   $0x000027,0x00006c(%esi)
		jne    _032c7a_case
		mov    _0ceecf_data,%al
		cmp    $0x000005,%al
		ja     _032c7a_case
		and    $0x0000ff,%eax
		jmp    *%cs:_032c14_switch(,%eax,4)

	_032c58_case:
		mov    %esi,%eax
		call   _033758_func
		jmp    _032c7a_case

	_032c61_case:
		mov    %esi,%eax
		call   _033808_func
		jmp    _032c7a_case

	_032c6a_case:
		mov    %esi,%eax
		call   _03388c_func
		jmp    _032c7a_case

	_032c73_case:
		mov    %esi,%eax
		call   _033958_func

	_032c7a_case:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _032ce5_jump
		cmpb   $0x000006,0x00006c(%esi)
		jne    _032ce5_jump
		cmpb   $0x000004,0x00006b(%esi)
		jne    _032c97_jump
		movw   $0x00fffc,0x000042(%esi)
		jmp    _033054_jump

	_032c97_jump:
		cmpb   $0x000004,_0ceecf_data
		jne    _032cbb_jump
		mov    %esi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _033054_jump
		mov    %esi,%eax
		call   _033958_func
		jmp    _033054_jump

	_032cbb_jump:
		mov    %esi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _033054_jump
		mov    0x000081(%esi),%dh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%esi)
		jmp    _033054_jump

	_032ce5_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _032f1c_jump
		mov    0x00006c(%esi),%cl
		cmp    $0x000008,%cl
		je     _032d19_jump
		cmp    $0x00000a,%cl
		je     _032d19_jump
		cmp    $0x00000c,%cl
		je     _032d19_jump
		cmp    $0x00000e,%cl
		je     _032d19_jump
		cmp    $0x000016,%cl
		je     _032d19_jump
		cmp    $0x000017,%cl
		je     _032d19_jump
		cmp    $0x000018,%cl
		jne    _032f1c_jump

	_032d19_jump:
		cmpb   $0x000016,0x00006b(%esi)
		jne    _032f1c_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x000002(%esp),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		sub    $0x000060,%eax
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    $0xfffffffb,%edi
		add    %eax,%edx
		xor    %eax,%eax
		mov    %di,_0de644_data
		mov    %ax,_0de642_data
		mov    0x00006c(%esi),%al
		sub    $0x000080,%edx
		cmp    $0x00000e,%al
		jb     _032dbb_jump
		jbe    _032e2a_jump
		cmp    $0x000017,%al
		jb     _032daa_jump
		jbe    _032e8e_jump
		cmp    $0x000018,%al
		je     _032ed5_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032daa_jump:
		cmp    $0x000016,%al
		je     _032e48_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032dbb_jump:
		cmp    $0x00000a,%al
		jb     _032dce_jump
		jbe    _032df1_jump
		cmp    $0x00000c,%al
		je     _032e0c_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032dce_jump:
		cmp    $0x000008,%al
		jne    _033054_jump
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		xor    %ebx,%ebx
		call   _033448_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032df1_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    %ecx,%ebx
		call   _033448_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032e0c_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    $0x000002,%ebx
		call   _033448_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032e2a_jump:
		mov    $0x000001,%ecx
		movswl %dx,%edx
		movswl %bx,%eax
		mov    $0x000003,%ebx
		call   _033448_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032e48_jump:
		mov    $0x000002,%al
		mov    $0x000003,%ecx
		movswl %dx,%edi
		movswl %bx,%esi
		mov    $0x000012,%ebx
		mov    %al,_0de64c_data
		mov    $_096051_data,%eax
		mov    %edi,%edx
		call   _033ac4_func
		mov    %esi,%eax
		call   _033448_func
		mov    $0x000005,%ecx
		mov    $0x000012,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _033448_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032e8e_jump:
		mov    $0x000002,%ch
		mov    $_096056_data,%eax
		movswl %dx,%esi
		movswl %bx,%edi
		mov    $0x000013,%ebx
		mov    %ch,_0de64c_data
		call   _033ac4_func
		mov    %esi,%edx
		mov    $0x000001,%ecx
		mov    %edi,%eax
		call   _033448_func
		mov    $0x000004,%ecx
		mov    $0x000013,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _033448_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032ed5_jump:
		mov    $0x000002,%cl
		mov    $_09605b_data,%eax
		movswl %dx,%esi
		movswl %bx,%edi
		mov    $0x000014,%ebx
		mov    %cl,_0de64c_data
		call   _033ac4_func
		mov    %esi,%edx
		mov    $0x000001,%ecx
		mov    %edi,%eax
		call   _033448_func
		mov    $0x000002,%ecx
		mov    $0x000014,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _033448_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032f1c_jump:
		mov    0x00006d(%esi),%cl
		test   %cl,%cl
		jne    _03300f_jump
		mov    0x00006c(%esi),%ch
		cmp    $0x00000f,%ch
		jne    _03300f_jump
		mov    0x00006b(%esi),%al
		test   %al,%al
		jne    _032f8a_jump
		xor    %eax,%eax
		mov    %cl,%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %ch,%al
		mov    0x000005(%edx,%eax,8),%al
		and    %ch,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _033054_jump
		mov    %esi,%eax
		call   _0773b8_func
		mov    0x000081(%esi),%dh
		movl   $0x000001,0x000024(%esi)
		or     $0x00000c,%dh
		mov    %dh,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_032f8a_jump:
		cmp    $0x000016,%al
		jne    _033054_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d710_func
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		xor    %ecx,%ecx
		sub    $0x000060,%eax
		mov    %cx,_0de642_data
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    $0x000001,%ecx
		add    %edx,%eax
		mov    $0xfffffffe,%edx
		sub    $0x000080,%eax
		mov    %dx,_0de644_data
		movswl %ax,%edx
		movswl %bx,%eax
		mov    $0x000004,%ebx
		call   _033448_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03300f_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _03302b_jump
		cmpb   $0x000015,0x00006c(%esi)
		jne    _03302b_jump
		mov    %esi,%eax
		call   _0329dc_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03302b_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _033054_jump
		mov    0x00006c(%esi),%dh
		cmp    $0x00001a,%dh
		je     _03304d_jump
		cmp    $0x00001b,%dh
		je     _03304d_jump
		cmp    $0x00001c,%dh
		je     _03304d_jump
		cmp    $0x00001d,%dh
		je     _03304d_jump
		cmp    $0x000028,%dh
		jne    _033054_jump

	_03304d_jump:
		mov    %esi,%eax
		call   _032604_func

	_033054_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033060_func:
		push   %ebx
		push   %ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _03309b_jump
		mov    0x00006c(%eax),%dh
		cmp    $0x000010,%dh
		je     _033075_jump
		cmp    $0x000011,%dh
		jne    _03309b_jump

	_033075_jump:
		cmpb   $0x000000,0x00007e(%eax)
		je     _03309b_jump
		mov    0x000076(%eax),%cl
		test   %cl,%cl
		je     _033089_jump
		mov    %cl,%ch
		dec    %ch
		mov    %ch,0x000076(%eax)

	_033089_jump:
		cmpb   $0x000000,0x000076(%eax)
		jne    _03309b_jump
		mov    $0x000006,%ebx
		xor    %edx,%edx
		call   _01d374_func

	_03309b_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0330a0_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0330f2_jump
		cmpb   $0x000007,0x00006c(%ebx)
		jne    _0330bc_jump
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d364_func

	_0330bc_jump:
		cmpb   $0x000009,0x00006c(%ebx)
		jne    _0330ce_jump
		mov    $0x00000a,%edx
		mov    %ebx,%eax
		call   _01d364_func

	_0330ce_jump:
		cmpb   $0x00000b,0x00006c(%ebx)
		jne    _0330e0_jump
		mov    $0x00000c,%edx
		mov    %ebx,%eax
		call   _01d364_func

	_0330e0_jump:
		cmpb   $0x00000d,0x00006c(%ebx)
		jne    _0330f2_jump
		mov    $0x00000e,%edx
		mov    %ebx,%eax
		call   _01d364_func

	_0330f2_jump:
		pop    %edx
		pop    %ebx
		ret    



_0330f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000076(%eax)
		je     _033396_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000005,%dl
		jne    _03312b_jump
		cmpb   $0x000001,_0ceeb8_data
		jne    _0332bb_jump
		movb   $0x000000,0x000076(%esi)
		jmp    _0332bb_jump

	_03312b_jump:
		cmp    $0x000004,%dl
		jne    _033229_jump
		mov    _0ced00_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %ecx,%eax
		mov    _0cc1f0_data,%ecx
		shl    $0x000002,%eax
		mov    0x000056(%esi),%di
		add    %eax,%ecx
		cmp    $0x000001,%di
		jne    _0331d2_jump
		movw   $0x000000,0x000056(%esi)
		mov    0x000081(%ecx),%bh
		mov    %ecx,%eax
		and    $0x0000f7,%bh
		xor    %edx,%edx
		mov    %bh,0x000081(%ecx)
		xor    %ebx,%ebx
		movb   $0x0000fe,0x000076(%ecx)
		call   _01d374_func
		mov    _0cdabc_data,%ax
		movl   $0x000000,0x000028(%ecx)
		mov    %ax,0x00003c(%ecx)
		mov    _0cdac0_data,%ax
		mov    %ax,0x00003e(%ecx)
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x00002c(%ecx)
		or     $0x000004,%al
		mov    %al,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f304_func
		xor    %ah,%ah
		movb   $0x000000,0x00007e(%ecx)
		mov    %ah,_0ceed2_data
		mov    %ah,_0ceed8_data
		mov    %ah,_0ceed7_data

	_0331d2_jump:
		mov    0x00003c(%ecx),%dx
		movzbw 0x000068(%esi),%di
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%ecx),%al
		add    %ebx,%edi
		add    %edx,%eax
		sub    %edi,%eax
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x00003e(%ecx),%bx
		mov    0x000069(%ecx),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		mov    _0ceed2_data,%cl
		sub    %eax,%ebx
		cmp    $0x000001,%cl
		jne    _0332bb_jump
		cmpb   $0x000019,_0ceed7_data
		jne    _0332bb_jump
		movb   $0x000000,0x000076(%esi)
		jmp    _0332bb_jump

	_033229_jump:
		movzbw _0cdafc_data,%di
		mov    _0cdabc_data,%bx
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %ebx,%edi
		add    %edx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    _0cdaa0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		movw   $0x000000,0x000056(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdb00_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _033290_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdac0_data,%cx
		mov    _0cdafd_data,%al
		add    %ecx,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		jmp    _0332bb_jump

	_033290_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0cdafd_data,%dl
		mov    _0cdb08_data,%al
		sub    %eax,%edx
		mov    _0cdac0_data,%ebx
		sar    %edx
		add    %ebx,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		sub    %eax,%edx
		mov    %edx,%ebx

	_0332bb_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _0332c4_jump
		neg    %eax

	_0332c4_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _0332cf_jump
		neg    %eax

	_0332cf_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		test   %dx,%dx
		jle    _033301_jump
		mov    $0x000004,%cl
		mov    %edi,%eax
		mov    -0x000002(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000004,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_033301_jump:
		cmpb   $0x000000,_0cee3f_data
		jne    _033396_jump
		mov    _0de642_data,%eax
		movswl %di,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _03332b_jump
		mov    $0x000001,%eax
		jg     _03332b_jump
		neg    %eax

	_03332b_jump:
		add    %ax,_0de644_data
		mov    _0de640_data,%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _03334e_jump
		mov    $0x000001,%eax
		jg     _03334e_jump
		neg    %eax

	_03334e_jump:
		mov    _0de642_data,%bx
		add    %eax,%ebx
		mov    0x000054(%esi),%ecx
		mov    %bx,_0de642_data
		mov    0x00002c(%esi),%dx
		mov    _0de642_data,%di
		sar    $0x000010,%ecx
		add    %edi,%edx
		mov    _0de644_data,%di
		movswl %dx,%eax
		mov    0x000028(%esi),%dx
		xor    %ebx,%ebx
		add    %edi,%edx
		mov    0x00006c(%esi),%bl
		movswl %dx,%ebp
		mov    %eax,%edx
		mov    %ebp,%eax
		call   _033448_func
		movb   $0x000000,0x000076(%esi)

	_033396_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0333a0_switch:
		.long   _0333ed_case
		.long   _033408_case
		.long   _033421_case
		.long   _033433_case




_0333b0_func:
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x000076(%eax)
		je     _033444_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0333c8_jump
		cmpb   $0x000004,0x00006c(%eax)
		je     _0333cf_jump

	_0333c8_jump:
		mov    $0x000001,%edx
		jmp    _0333d1_jump

	_0333cf_jump:
		xor    %edx,%edx

	_0333d1_jump:
		test   %edx,%edx
		je     _033444_jump
		movb   $0x000000,0x000076(%eax)
		mov    0x00006c(%eax),%al
		cmp    $0x000003,%al
		ja     _033444_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_0333a0_switch(,%eax,4)

	_0333ed_case:
		mov    _0cec71_data,%ch
		and    $0x0000e7,%ch
		mov    %ch,%al
		mov    %ch,_0cec71_data
		or     $0x000008,%al
		mov    %al,_0cec71_data
		pop    %edx
		pop    %ecx
		ret    

	_033408_case:
		mov    $_0cda94_data,%eax
		call   _0772d8_func
		andb   $0x00009f,_0cec71_data
		call   _058e4c_func
		pop    %edx
		pop    %ecx
		ret    

	_033421_case:
		mov    $_0cda94_data,%eax
		call   _0772d8_func
		call   _058efc_func
		pop    %edx
		pop    %ecx
		ret    

	_033433_case:
		mov    $_0cda94_data,%eax
		call   _0772d8_func
		andb   $0x0000fe,_0cec70_data

	_033444_jump:
		pop    %edx
		pop    %ecx
		ret    



_033448_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %ax,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %ecx,0x000008(%esp)
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%si
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %edx,%edx

	_033472_jump:
		cmpw   $0x0000d7,0x000060(%ecx)
		jne    _033484_jump
		cmp    0x000024(%ecx),%edx
		jne    _033484_jump
		mov    $0x000001,%ebx

	_033484_jump:
		add    $0x000084,%ecx
		inc    %eax
		test   %bx,%bx
		jne    _033495_jump
		cmp    %si,%ax
		jl     _033472_jump

	_033495_jump:
		sub    $0x000084,%ecx
		test   %bx,%bx
		je     _0334de_jump
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f304_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    -0x000002(%esp),%eax
		movb   $0x000001,0x000076(%ecx)
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%esp),%eax
		mov    0x00000c(%esp),%bl
		jmp    _03355e_jump

	_0334de_jump:
		mov    _0cc1f0_data,%eax
		xor    %edx,%edx
		xor    %edi,%edi

	_0334e7_jump:
		cmpw   $0x0000d7,0x000060(%eax)
		jne    _0334fd_jump
		xor    %ecx,%ecx
		mov    0x00006b(%eax),%cl
		cmp    %dx,%cx
		jle    _0334fd_jump
		mov    %ebx,%edi
		mov    %ecx,%edx

	_0334fd_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jl     _0334e7_jump
		movswl %di,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0cc1f0_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f304_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    -0x000002(%esp),%eax
		movb   $0x000001,0x000076(%ecx)
		sar    $0x000010,%eax
		mov    0x00000c(%esp),%bl
		mov    %eax,0x00002c(%ecx)
		mov    0x000008(%esp),%eax
		xor    %edx,%edx

	_03355e_jump:
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d374_func
		movb   $0x000000,0x00006b(%ecx)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    



_03357c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    _0cec71_data,%ah
		test   $0x000018,%ah
		jne    _033596_jump
		test   $0x000060,%ah
		jne    _033596_jump
		test   $0x000002,%ah
		je     _0335e8_jump

	_033596_jump:
		mov    $_0cda94_data,%eax
		call   _0772d8_func
		mov    _0cec71_data,%cl
		test   $0x000018,%cl
		je     _0335b6_jump
		mov    %cl,%ch
		or     $0x000018,%ch
		mov    %ch,_0cec71_data

	_0335b6_jump:
		testb  $0x000060,_0cec71_data
		je     _0335c4_jump
		call   _058e4c_func

	_0335c4_jump:
		testb  $0x000002,_0cec71_data
		je     _0335d2_jump
		call   _058efc_func

	_0335d2_jump:
		mov    0x000081(%edx),%bl
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%edx)

	_0335e8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0335ec_func:
		push   %edx
		mov    _0ced12_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03362b_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    _0de644_data,%edx
		sar    $0x000010,%edx
		mov    %edx,0x000028(%eax)
		mov    %dx,0x00003c(%eax)
		mov    _0de648_data,%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%eax)
		mov    %dx,0x00003e(%eax)

	_03362b_jump:
		pop    %edx
		ret    



_033630_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%dl
		mov    _0ced12_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _0336de_jump
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0cc1f0_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		mov    _0de644_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0de646_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		test   %dl,%dl
		je     _0336de_jump
		mov    $0x000040,%ebx
		mov    $0x000005,%edx
		mov    _0cdb20_data,%eax
		call   _01d374_func
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%bl
		mov    _0cdb20_data,%eax
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,0x000028(%eax)
		mov    0x000069(%ecx),%dl
		mov    0x00002c(%ecx),%ebx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%ebx
		lea    -0x000005(%ebx),%edx
		mov    0x000024(%eax),%ebx
		mov    %edx,0x00002c(%eax)
		test   %ebx,%ebx
		jne    _0336c3_jump
		call   _01f304_func

	_0336c3_jump:
		mov    _0cdb20_data,%eax
		mov    0x000081(%eax),%dl
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%dl
		mov    %dl,0x000081(%eax)

	_0336de_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0336e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x00002c(%eax),%ax
		mov    %ax,_0de64a_data
		mov    _0cecea_data,%ax
		sub    $0x0000b8,%eax
		mov    %ax,_0de648_data
		mov    _0ced12_data,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    %bx,_0de646_data
		cmp    $0xffffffff,%eax
		je     _033751_jump
		mov    %eax,%ebx
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc1f0_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%al
		mov    0x00002c(%edx),%cx
		mov    %eax,%edx
		add    %ecx,%edx
		xor    %eax,%eax
		sub    $0x0000b8,%edx
		mov    0x000069(%ebx),%al
		sub    %eax,%edx
		add    $0x000024,%edx
		mov    %dx,_0de648_data

	_033751_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033758_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movb   $0x000001,_0ceecf_data
		mov    _0cecea_data,%ax
		mov    %ax,_0cecb6_data
		mov    %ax,_0cecac_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000060(%ecx),%ax
		mov    %dx,_0cecb8_data
		mov    %dx,_0cecaa_data
		mov    _092264_data(,%eax,4),%dl
		and    $0x00007f,%dl
		xor    %ebx,%ebx
		mov    %dl,_092264_data(,%eax,4)
		mov    %ecx,%eax
		mov    %bx,0x000050(%ecx)
		mov    _0cec70_data,%bl
		xor    %dh,%dh
		and    $0x0000fe,%bl
		mov    %dh,_0ceead_data
		mov    %bl,_0cec70_data
		call   _0324a0_func
		mov    %ecx,%eax
		call   _0336e4_func
		mov    _0ced12_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _0337f1_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		movw   $0x000003,0x000050(%edx,%eax,4)
		movw   $0x00001d,0x000056(%edx,%eax,4)

	_0337f1_jump:
		call   _0335ec_func
		mov    $0x00001a,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033808_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		movb   $0x000002,_0ceecf_data
		mov    _0cecea_data,%ax
		mov    %ax,_0cecb6_data
		mov    %ax,_0cecac_data
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000060(%edx),%ax
		mov    %bx,_0cecb8_data
		mov    %bx,_0cecaa_data
		andb   $0x00007f,_092264_data(,%eax,4)
		xor    %bh,%bh
		mov    %edx,%eax
		mov    %bh,_0ceead_data
		call   _0324a0_func
		mov    %edx,%eax
		call   _0336e4_func
		mov    $0x000001,%eax
		call   _033630_func
		movl   $0x000001,0x000024(%edx)
		mov    0x000081(%edx),%cl
		movw   $0x000000,0x000050(%edx)
		or     $0x000004,%cl
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _03ecf0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03388c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movb   $0x000003,_0ceecf_data
		mov    _0cecea_data,%ax
		mov    %ax,_0cecb6_data
		mov    %ax,_0cecac_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000060(%ecx),%ax
		mov    %dx,_0cecb8_data
		mov    %dx,_0cecaa_data
		andb   $0x00007f,_092264_data(,%eax,4)
		xor    %dh,%dh
		mov    %ecx,%eax
		mov    %dh,_0ceead_data
		call   _0324a0_func
		mov    %ecx,%eax
		call   _0336e4_func
		xor    %eax,%eax
		call   _033630_func
		movl   $0x000000,0x000028(%ecx)
		xor    %ebx,%ebx
		movl   $0x000001,0x000024(%ecx)
		mov    %bx,0x000040(%ecx)
		mov    %bx,0x000042(%ecx)
		mov    _0cece8_data,%edx
		mov    0x000028(%ecx),%eax
		sar    $0x000010,%edx
		mov    %ax,0x00003c(%ecx)
		xor    %eax,%eax
		mov    0x000081(%ecx),%bl
		mov    0x000069(%ecx),%al
		or     $0x000004,%bl
		sub    %eax,%edx
		mov    %bl,0x000081(%ecx)
		sub    $0x000014,%edx
		mov    $0x000015,%ebx
		mov    %edx,0x00002c(%ecx)
		mov    %ecx,%eax
		mov    %dx,0x00003e(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000050(%ecx)
		call   _01d374_func
		xor    %bh,%bh
		mov    _09604e_data,%al
		mov    %bh,_096065_data
		mov    %al,_096066_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033958_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		movb   $0x000005,_0ceecf_data
		mov    _0cecea_data,%ax
		mov    %ax,_0cecb6_data
		mov    %ax,_0cecac_data
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000060(%edx),%ax
		mov    %bx,_0cecb8_data
		mov    %bx,_0cecaa_data
		andb   $0x00007f,_092264_data(,%eax,4)
		xor    %bh,%bh
		mov    %edx,%eax
		mov    %bh,_0ceead_data
		call   _0324a0_func
		mov    %edx,%eax
		call   _0336e4_func
		xor    %eax,%eax
		call   _033630_func
		testb  $0x000002,_0cec71_data
		je     _0339cb_jump
		mov    $_0cda94_data,%eax
		call   _0772d8_func
		call   _058efc_func

	_0339cb_jump:
		movl   $0x000000,0x000028(%edx)
		mov    $0xffffffc4,%esi
		movw   $0x000000,0x000050(%edx)
		mov    _0cece8_data,%ebx
		mov    0x000081(%edx),%ch
		movl   $0x000000,0x000024(%edx)
		xor    %edi,%edi
		sar    $0x000010,%ebx
		and    $0x0000fb,%ch
		mov    %si,_0ced10_data
		mov    %di,_0ced08_data
		mov    0x000028(%edx),%eax
		mov    %di,_0ced0c_data
		mov    %ax,0x00003c(%edx)
		xor    %eax,%eax
		mov    %di,_0ced06_data
		mov    0x000069(%edx),%al
		mov    %ch,0x000081(%edx)
		sub    %eax,%ebx
		mov    $0x000001,%al
		sub    $0x000014,%ebx
		mov    %al,_0ceeb8_data
		mov    _0cec78_data,%ah
		mov    %ebx,0x00002c(%edx)
		or     $0x000080,%ah
		mov    %bx,0x00003e(%edx)
		mov    %ah,_0cec78_data
		mov    %al,_0ceecc_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033a54_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    0x000050(%eax),%al
		cmp    $0x000005,%al
		jae    _033ab9_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    _0de617_data(%eax),%bl
		test   %bl,%bl
		je     _033ab2_jump
		movb   $0x000004,0x00007e(%edx)
		mov    _0de618_data(%eax),%bx
		dec    %bx
		mov    %bx,_0de618_data(%eax)
		jne    _033abd_jump
		mov    $0x000064,%esi
		mov    _0de617_data(%eax),%bh
		mov    %si,_0de618_data(%eax)
		dec    %bh
		mov    %bh,_0de617_data(%eax)
		jne    _033abd_jump
		mov    %bh,0x00007e(%edx)
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_033ab2_jump:
		mov    %bl,0x00007e(%edx)
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_033ab9_jump:
		movb   $0x000000,0x00007e(%edx)

	_033abd_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_033ac4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %dl,%dl

	_033acb_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		imul   $0x00000a,%ebx,%eax
		mov    _0de617_data(%eax),%dh
		test   %dh,%dh
		jne    _033b09_jump
		mov    (%ecx,%ebx,1),%bl
		mov    %bl,_0de617_data(%eax)
		movw   $0x000064,_0de618_data(%eax)
		mov    _0de614_data(%eax),%al
		and    $0x0000ff,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%ebx
		mov    %dh,0x00006b(%ebx,%eax,1)

	_033b09_jump:
		inc    %dl
		cmp    $0x000005,%dl
		jb     _033acb_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_033b20_func:
		adc    %eax,(%eax)
		add    %al,(%eax)
		adc    %al,(%eax)
		add    %al,(%eax)
		or     (%eax),%eax
		add    %al,(%eax)
		or     (%eax),%eax
		add    %al,(%eax)
		or     (%eax),%eax
		add    %al,(%eax)
		add    $0x000000,%al
		add    %al,(%eax)

	_033b38_jump:
		mov    $0x000001,%eax
		call   _0531e8_func
		call   _01a950_func
		call   _040b64_func
		mov    $_0cda94_data,%eax
		call   _018ae8_func
		mov    $_0cda94_data,%eax
		call   _0544fc_func
		call   _0362d4_func
		call   _0408d4_func
		test   %ax,%ax
		jne    _033b8d_jump
		call   _040960_func
		test   %ax,%ax
		jne    _033b8d_jump
		call   _0409ec_func
		test   %ax,%ax
		jne    _033b8d_jump
		call   _040a78_func
		test   %ax,%ax
		je     _033b94_jump

	_033b8d_jump:
		movb   $0x000001,_0cee8b_data

	_033b94_jump:
		call   *_0cc53c_data
		xor    %eax,%eax
		mov    _0cee8b_data,%al
		ret    



_033ba4_func:
		push   %edx
		call   _01a950_func
		call   _035e8c_func
		call   _01b3ec_func
		call   _067cb4_func
		call   _040b64_func
		mov    _0cec66_data,%eax
		sar    $0x000010,%eax
		xor    %dl,%dl
		cmp    $0xffffffff,%eax
		je     _033bd6_jump
		cmpb   $0x000000,_0cee9f_data
		je     _033bd8_jump

	_033bd6_jump:
		mov    $0x000001,%dl

	_033bd8_jump:
		xor    %eax,%eax
		mov    %dl,%al
		pop    %edx
		ret    



_033c70_func:
		push   %edx
		push   %esi
		push   %edi
		call   _040b64_func
		mov    _096068_data,%al
		mov    %al,_0ceec3_data
		call   _0673d8_func
		mov    _0ceec3_data,%dl
		mov    _095b99_data,%ah
		mov    %dl,_096068_data
		test   %ah,%ah
		je     _033cc5_jump
		xor    %dl,%dl
		mov    %dl,_095b99_data
		call   _016df7_func
		call   _016de7_func
		mov    $0x000001,%eax
		call   _023a7c_func
		call   _033f54_func
		call   _03a2a0_func
		jmp    _033cca_jump

	_033cc5_jump:
		call   _033f54_func

	_033cca_jump:
		call   _033f54_func
		cmpw   $0x000003,_0cebde_data
		jne    _033ce2_jump
		movw   $0x000001,_0cebbc_data

	_033ce2_jump:
		cmpw   $0x000000,_0cebca_data
		jne    _033cf6_jump
		mov    _0cee7e_data,%dh
		test   %dh,%dh
		je     _033cfd_jump

	_033cf6_jump:
		mov    $0x000001,%edx
		jmp    _033cff_jump

	_033cfd_jump:
		xor    %dl,%dl

	_033cff_jump:
		cmpb   $0x000000,_0cee7e_data
		je     _033d5d_jump
		cmpw   $0x000001,_0cebde_data
		jne    _033d48_jump
		mov    _0cebf6_data,%edi
		sar    $0x000010,%edi
		shl    $0x000002,%edi
		sub    $0x000004,%edi
		mov    $_0ccb94_data,%esi
		add    $_0ccb98_data,%edi
		push   %edi

	_033d2d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _033d45_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _033d2d_jump

	_033d45_jump:
		pop    %edi
		jmp    _033d5d_jump

	_033d48_jump:
		mov    _0cebf6_data,%edi
		sar    $0x000010,%edi
		mov    _0c06a4_data,%al
		mov    %al,_0ccb94_data(,%edi,4)

	_033d5d_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_033d64_func:
		push   %ebx
		push   %edx
		call   _040b64_func
		call   _01cb68_func
		mov    _0de657_data,%al
		mov    %al,_0ceec3_data
		call   _066f64_func
		mov    _0ceec3_data,%al
		mov    %al,_0de657_data
		cmpb   $0x000000,_095b99_data
		je     _033dba_jump
		xor    %dl,%dl
		mov    %dl,_095b99_data
		call   _016df7_func
		call   _016de7_func
		mov    $0x000001,%eax
		call   _023a7c_func
		call   _033f54_func
		call   _03a2a0_func
		jmp    _033dbf_jump

	_033dba_jump:
		call   _033f54_func

	_033dbf_jump:
		call   _040b64_func
		mov    _0de656_data,%al
		mov    %al,_0ceec3_data
		call   _06723c_func
		mov    _0ceec3_data,%al
		mov    %al,_0de656_data
		call   _067700_func
		cmpw   $0x000001,_0cebde_data
		jne    _033df6_jump
		cmpw   $0x000000,_0cebf8_data
		jne    _033e14_jump

	_033df6_jump:
		cmpw   $0x000003,_0cebde_data
		jne    _033e42_jump
		cmpw   $0x000000,_0cebf2_data
		jne    _033e42_jump
		cmpw   $0x000000,_0cebf8_data
		je     _033e42_jump

	_033e14_jump:
		cmpw   $0x000000,_0cebca_data
		jne    _033e2d_jump
		call   _067374_func
		mov    $_033c70_func,%eax
		call   _03b948_func

	_033e2d_jump:
		cmpb   $0x000000,_0cee7e_data
		jne    _033e42_jump
		xor    %eax,%eax
		mov    _0cebf8_data,%al
		call   _0714e0_func

	_033e42_jump:
		cmpw   $0x000000,_0cebbe_data
		je     _033e51_jump
		call   _066f10_func

	_033e51_jump:
		mov    _0cc530_data,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0cebac_data,%ax
		inc    %edx
		mov    %bx,_0cebde_data
		mov    %edx,_0cc530_data
		cmp    %edx,%eax
		jg     _033e8b_jump
		cmpw   $0x000000,_0cebbc_data
		jne    _033e8b_jump
		cmpb   $0x000000,_0ceec1_data
		jne    _033e8b_jump
		call   _03521c_func

	_033e8b_jump:
		cmpb   $0x000000,_0ceec1_data
		jne    _033eb0_jump
		cmpw   $0x000000,_0cebbc_data
		jne    _033eb0_jump
		cmpb   $0x000000,_0cee79_data
		jne    _033eb0_jump
		cmpb   $0x000000,_0cee7e_data
		je     _033eb8_jump

	_033eb0_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ebx
		ret    

	_033eb8_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret    



_033ec0_func:
		push   %ebx
		push   %edx
		movb   $0x000001,_094eb8_data
		mov    $_0ccc98_data,%eax
		xor    %edx,%edx
		call   _035e7c_func
		mov    $_0c7088_data,%eax
		xor    %bl,%bl
		call   _03bad8_func
		call   _03b880_func
		call   _066e38_func
		call   _066f10_func
		mov    %edx,_0cc530_data
		call   _067374_func
		mov    $0x000001,%dl
		mov    $_033d64_func,%eax
		mov    %bl,_096068_data
		mov    $0x000064,%ebx
		mov    %dl,_0de657_data
		mov    %dl,_0de656_data
		xor    %edx,%edx
		mov    %bx,_0cebfa_data
		mov    %dx,_0cebf4_data
		mov    %dx,_0cec7c_data
		mov    %dx,_0cec7a_data
		call   _03b948_func
		call   _03b8d0_func
		call   _03bb4c_func
		mov    $_0ccc98_data,%eax
		call   _07b7b4_func
		pop    %edx
		pop    %ebx
		ret    



_033f54_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    _0cebf4_data,%ax
		mov    _0cebfa_data,%bx
		mov    $0x00001e,%edx
		cmp    %bx,%ax
		jge    _033f86_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _033f86_jump
		incw   _0cebf4_data
		jmp    _033fa7_jump

	_033f86_jump:
		cmpb   $0x000000,_0ceec3_data
		jne    _033f9e_jump
		mov    _0cebd6_data,%ax
		inc    %eax
		mov    %ax,_0cebf4_data
		jmp    _033fa7_jump

	_033f9e_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cebf4_data

	_033fa7_jump:
		mov    _0cebb8_data,%di
		cmp    %di,%dx
		jle    _033fbf_jump
		mov    %edi,%edx
		inc    %edx
		mov    %dx,_0cebb8_data
		jmp    _033fc7_jump

	_033fbf_jump:
		xor    %eax,%eax
		mov    %ax,_0cebb8_data

	_033fc7_jump:
		call   _03bbec_func
		push   $0x000000
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cebe4_data,%ebx
		mov    _0c2428_data,%eax
		sar    $0x000010,%ebx
		call   _01a178_func
		cmpb   $0x000001,_0cee78_data
		jne    _03400f_jump
		mov    $0x000035,%edx
		mov    $0x000091,%esi
		mov    $0x0000ff,%edi
		mov    %si,0x000008(%esp)
		mov    %di,0x00000c(%esp)
		jmp    _034028_jump

	_03400f_jump:
		mov    $0x000035,%edx
		mov    $0x00009f,%ebx
		mov    $0x000109,%ecx
		mov    %bx,0x000008(%esp)
		mov    %cx,0x00000c(%esp)

	_034028_jump:
		cmpw   $0x000001,_0cebe4_data
		jne    _034060_jump
		mov    $_0ca6e8_data,%edi
		mov    _0c242c_data,%esi
		push   %edi

	_03403e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034056_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03403e_jump

	_034056_jump:
		pop    %edi
		mov    %dx,_0ca7b8_data
		jmp    _03407d_jump

	_034060_jump:
		push   $0x000005
		mov    $0x000001,%ecx
		mov    _0cebec_data,%ebx
		mov    _0c242c_data,%eax
		movswl %dx,%edx
		sar    $0x000010,%ebx
		call   _01a178_func

	_03407d_jump:
		cmpw   $0x000002,_0cebe4_data
		jne    _0340b8_jump
		mov    $_0ca6e8_data,%edi
		mov    _0c2430_data,%esi
		push   %edi

	_034093_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0340ab_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _034093_jump

	_0340ab_jump:
		pop    %edi
		mov    0x000008(%esp),%eax
		mov    %ax,_0ca7b8_data
		jmp    _0340d9_jump

	_0340b8_jump:
		push   $0x000005
		mov    0x00000a(%esp),%edx
		mov    $0x000001,%ecx
		mov    _0cebec_data,%ebx
		mov    _0c2430_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01a178_func

	_0340d9_jump:
		cmpw   $0x000003,_0cebe4_data
		jne    _034114_jump
		mov    $_0ca6e8_data,%edi
		mov    _0c2434_data,%esi
		push   %edi

	_0340ef_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _034107_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0340ef_jump

	_034107_jump:
		pop    %edi
		mov    0x00000c(%esp),%eax
		mov    %ax,_0ca7b8_data
		jmp    _034135_jump

	_034114_jump:
		push   $0x000005
		mov    0x00000e(%esp),%edx
		mov    $0x000001,%ecx
		mov    _0cebec_data,%ebx
		mov    _0c2434_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01a178_func

	_034135_jump:
		mov    $_0ca6e8_data,%eax
		mov    $0x000001,%ebp
		xor    %ecx,%ecx
		call   _01ec48_func
		mov    %cx,0x000014(%esp)
		jmp    _034476_jump

	_034150_jump:
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		mov    $_0c06a4_data,%edx
		add    $_0ccb98_data,%eax
		call   _07b850_func
		test   %eax,%eax
		je     _034435_jump
		mov    $0x000001,%ebx
		xor    %ecx,%ecx
		mov    %bx,0x000004(%esp)
		mov    %ecx,0x000010(%esp)
		jmp    _0343e4_jump

	_034186_jump:
		mov    0x000004(%esp),%edi
		cmp    _0cec00_data,%di
		jne    _0341ae_jump
		mov    _0cebfc_data,%eax
		inc    %ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jne    _0341ae_jump
		cmpw   $0x000000,_0cebc8_data
		jne    _034294_jump

	_0341ae_jump:
		mov    0x000012(%esp),%eax
		mov    $_0ccb98_data,%esi
		mov    %esp,%edi
		sar    $0x000010,%eax
		mov    0x000002(%esp),%edx
		shl    $0x000002,%eax
		xor    %ch,%ch
		add    %eax,%esi
		sar    $0x000010,%edx
		push   %edi

	_0341cb_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0341e3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0341cb_jump

	_0341e3_jump:
		pop    %edi
		mov    0x000010(%esp),%eax
		mov    %ch,(%esp,%edx,1)
		imul   _0cebec_data,%ax
		mov    _0cebea_data,%bx
		mov    0x000014(%esp),%esi
		add    $0x000017,%ebx
		imul   %esi,%ebx
		mov    _0cec04_data,%cx
		mov    _0cebb4_data,%di
		add    %ecx,%ebx
		mov    -0x000001(%esp,%edx,1),%cl
		add    %edi,%eax
		cmp    $0x00007e,%cl
		jne    _034254_jump
		mov    _0cec20_data,%edx
		sar    $0x000010,%edx
		push   %edx
		mov    _0cec1e_data,%edx
		sar    $0x000010,%edx
		push   %edx
		mov    _0cec22_data,%edx
		sar    $0x000010,%edx
		movswl %bx,%ebx
		push   %edx
		sub    $0x00000a,%eax
		mov    %ebp,%ecx
		push   $0x000002
		movswl %ax,%edx
		mov    $_0c06a8_data,%eax
		jmp    _0343cc_jump

	_034254_jump:
		cmp    $0x000020,%cl
		jne    _034272_jump
		push   $0x000002
		movswl %bx,%ebx
		movswl %ax,%edx
		mov    %ebp,%ecx
		mov    $_0c06ad_data,%eax
		call   _01a178_func
		jmp    _0343d1_jump

	_034272_jump:
		mov    %esp,%esi
		movswl %bx,%ebx
		cwtl   
		xor    %ecx,%ecx
		dec    %edx
		mov    _0cee8d_data,%cl
		add    %edx,%esi
		push   %ecx
		mov    %eax,%edx
		mov    %ebp,%ecx
		mov    %esi,%eax
		call   _01a178_func
		jmp    _0343d1_jump

	_034294_jump:
		mov    %esp,%edi
		mov    %edx,%esi
		push   %edi

	_034299_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0342b1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _034299_jump

	_0342b1_jump:
		pop    %edi
		mov    0x000002(%esp),%eax
		mov    $0x001000,%esi
		mov    _0cec14_data,%di
		xor    %dl,%dl
		sar    $0x000010,%eax
		mov    %si,_0cec20_data
		mov    %dl,(%esp,%eax,1)
		cmp    $0x000200,%di
		jl     _0342e0_jump
		xor    %eax,%eax
		mov    %ax,_0cec14_data

	_0342e0_jump:
		mov    _0cec14_data,%ax
		inc    %ah
		cwtl   
		call   _05bd50_func
		cwtl   
		sar    $0x000007,%eax
		add    $0x000005,%eax
		mov    %eax,%edx
		mov    _0cec12_data,%eax
		sar    $0x000010,%eax
		call   _05bd50_func
		shl    $0x000003,%eax
		mov    _0cebec_data,%cx
		mov    %ax,_0cec22_data
		mov    0x000010(%esp),%eax
		imul   %ecx,%eax
		mov    _0cec14_data,%bx
		add    %edx,%ebx
		mov    _0cebea_data,%dx
		mov    0x000014(%esp),%esi
		add    $0x000017,%edx
		imul   %esi,%edx
		mov    _0cebb4_data,%di
		mov    %bx,_0cec14_data
		mov    0x000002(%esp),%ebx
		mov    _0cec04_data,%cx
		sar    $0x000010,%ebx
		add    %ecx,%edx
		mov    -0x000001(%esp,%ebx,1),%cl
		add    %edi,%eax
		cmp    $0x00007e,%cl
		jne    _034390_jump
		mov    _0cec20_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		mov    _0cec1e_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		mov    _0cec22_data,%ebx
		sar    $0x000010,%ebx
		push   %ebx
		sub    $0x00000a,%eax
		mov    %ebp,%ecx
		push   $0x000002
		movswl %dx,%ebx
		movswl %ax,%edx
		mov    $_0c06a8_data,%eax
		jmp    _0343cc_jump

	_034390_jump:
		mov    _0cec20_data,%ecx
		inc    %edx
		sar    $0x000010,%ecx
		inc    %eax
		push   %ecx
		mov    _0cec1e_data,%ecx
		dec    %ebx
		sar    $0x000010,%ecx
		movswl %dx,%edx
		push   %ecx
		mov    _0cec22_data,%ecx
		movswl %ax,%esi
		sar    $0x000010,%ecx
		lea    0x000008(%esp),%eax
		push   %ecx
		xor    %ecx,%ecx
		add    %ebx,%eax
		mov    _0cee8d_data,%cl
		mov    %edx,%ebx
		push   %ecx
		mov    %esi,%edx
		mov    %ebp,%ecx

	_0343cc_jump:
		call   _01a3b0_func

	_0343d1_jump:
		mov    0x000010(%esp),%esi
		mov    0x000004(%esp),%edi
		inc    %esi
		inc    %edi
		mov    %esi,0x000010(%esp)
		mov    %di,0x000004(%esp)

	_0343e4_jump:
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%edx
		add    $_0ccb98_data,%edx
		mov    %edx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		jbe    _034186_jump
		mov    _0cebec_data,%ax
		add    $0x00000b,%eax
		imul   $0x000003,%eax,%eax
		add    _0cebb4_data,%ax
		sub    $0x00001e,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01ad30_func
		jmp    _034471_jump

	_034435_jump:
		mov    _0cebea_data,%ax
		add    $0x000017,%eax
		imul   %esi,%eax
		mov    $0x000001,%cl
		push   $0x000002
		mov    _0cec04_data,%dx
		mov    %cl,_094eb8_data
		mov    $0x000001,%ecx
		add    %edx,%eax
		mov    _0cebb2_data,%edx
		movswl %ax,%ebx
		mov    _0c2514_data,%eax
		sar    $0x000010,%edx
		call   _01a178_func

	_034471_jump:
		incw   0x000014(%esp)

	_034476_jump:
		xor    %eax,%eax
		mov    0x000014(%esp),%esi
		mov    _0cee89_data,%al
		cmp    %si,%ax
		jg     _034150_jump
		call   _01b074_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034700_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		call   _065c68_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _016157_func
		cmpb   $0x000001,_0cee71_data
		je     _034802_jump
		cmpb   $0x000000,_0cba50_data
		je     _034763_jump
		mov    _0cbb20_data,%ebx
		mov    _0cbb1e_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cbb27_data,%al
		mov    _0cbb24_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0cba50_data,%eax
		call   _01a178_func

	_034763_jump:
		cmpb   $0x000000,_0cb978_data
		je     _034798_jump
		mov    _0cba48_data,%ebx
		mov    _0cba46_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cba4f_data,%al
		mov    _0cba4c_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0cb978_data,%eax
		call   _01a178_func

	_034798_jump:
		cmpb   $0x000000,_0cbc00_data
		je     _0347cd_jump
		mov    _0cbcd0_data,%ebx
		mov    _0cbcce_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cbcd7_data,%al
		mov    _0cbcd4_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0cbc00_data,%eax
		call   _01a178_func

	_0347cd_jump:
		cmpb   $0x000000,_0cbb28_data
		je     _034802_jump
		mov    _0cbbf8_data,%ebx
		mov    _0cbbf6_data,%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cbbff_data,%al
		mov    _0cbbfc_data,%cl
		sar    $0x000010,%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    $_0cbb28_data,%eax
		call   _01a178_func

	_034802_jump:
		cmpb   $0x000000,_0cee71_data
		je     _0349ba_jump
		mov    _0cc4c4_data,%edx
		xor    %ebp,%ebp
		test   %edx,%edx
		jle    _0348e6_jump
		mov    %ebp,0x000004(%esp)

	_034823_jump:
		mov    _0ce340_data(%ebp),%ch
		cmp    $0x00002f,%ch
		je     _034833_jump
		cmp    $0x000020,%ch
		jne    _034837_jump

	_034833_jump:
		xor    %al,%al
		jmp    _034840_jump

	_034837_jump:
		xor    %eax,%eax
		mov    %ch,%al
		call   _01eadc_func

	_034840_jump:
		test   %al,%al
		je     _0348cc_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    %ebx,%edx
		add    $0x000029,%ebx
		imul   $0x00000c,%ebx,%ebx
		xor    %eax,%eax
		mov    _0cc494_data,%al
		mov    0x000004(%esp),%ecx
		call   _01ea14_func
		mov    _0ce210_data,%edx
		mov    _0c1b88_data(%ecx),%ecx
		add    %edx,%ebx
		xor    %edx,%edx
		sar    $0x000004,%ecx
		mov    0x000006(%ebx),%dl
		sub    %edx,%ecx
		movswl %cx,%edx
		mov    %edx,0x00000c(%esp)
		mov    0x000004(%esp),%edx
		mov    _0c1d18_data(%edx),%edx
		sar    $0x000004,%edx
		movswl %dx,%edx
		mov    %edx,0x000008(%esp)
		xor    %dh,%dh
		mov    0x000006(%ebx),%dl
		mov    _0ccba4_data,%edi
		shl    $0x000008,%edx
		xor    %ecx,%ecx
		add    %edx,%eax
		mov    _0ce214_data,%esi
		mov    %ax,%cx
		mov    (%ebx),%edx
		mov    0x00000c(%esp),%ebx
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x000008(%esp),%eax
		mov    _0cc4a8_data,%dl
		call   *_0cc4e4_data

	_0348cc_jump:
		mov    0x000004(%esp),%ebx
		mov    _0cc4c4_data,%ecx
		add    $0x000004,%ebx
		inc    %ebp
		mov    %ebx,0x000004(%esp)
		cmp    %ecx,%ebp
		jl     _034823_jump

	_0348e6_jump:
		mov    _0cc4c8_data,%esi
		xor    %ebp,%ebp
		test   %esi,%esi
		jle    _0349ba_jump
		mov    %ebp,(%esp)

	_0348f9_jump:
		mov    _0ce35e_data(%ebp),%ah
		cmp    $0x00002f,%ah
		je     _034909_jump
		cmp    $0x000020,%ah
		jne    _03490d_jump

	_034909_jump:
		xor    %al,%al
		jmp    _03491a_jump

	_03490d_jump:
		xor    %eax,%eax
		mov    _0ce35e_data(%ebp),%al
		call   _01eadc_func

	_03491a_jump:
		test   %al,%al
		je     _0349a2_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    _0cc488_data,%al
		call   _01ea14_func
		mov    %eax,%edx
		imul   $0x00000c,%ebx,%eax
		mov    _0cdb24_data,%ebx
		add    %ebx,%eax
		mov    (%esp),%ebx
		xor    %ecx,%ecx
		mov    _0c1de0_data(%ebx),%ebx
		mov    0x000006(%eax),%cl
		sar    $0x000004,%ebx
		sub    %ecx,%ebx
		movswl %bx,%ebx
		mov    %ebx,0x000008(%esp)
		mov    (%esp),%ebx
		mov    _0c1c50_data(%ebx),%ebx
		sar    $0x000004,%ebx
		movswl %bx,%ebx
		mov    %ebx,0x00000c(%esp)
		xor    %bh,%bh
		mov    %cl,%bl
		mov    _0ccba4_data,%edi
		shl    $0x000008,%ebx
		xor    %ecx,%ecx
		add    %ebx,%edx
		mov    _0cdb28_data,%esi
		mov    %dx,%cx
		mov    (%eax),%edx
		mov    0x000008(%esp),%ebx
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x00000c(%esp),%eax
		mov    _0cc48c_data,%dl
		call   *_0cc4e4_data

	_0349a2_jump:
		mov    (%esp),%ebx
		mov    _0cc4c8_data,%ecx
		add    $0x000004,%ebx
		inc    %ebp
		mov    %ebx,(%esp)
		cmp    %ecx,%ebp
		jl     _0348f9_jump

	_0349ba_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0349c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cee93_data
		je     _0349dd_jump
		xor    %esi,%esi
		mov    _0cec3e_data,%si
		add    %eax,%esi

	_0349dd_jump:
		xor    %dh,%dh
		mov    _0cc534_data,%edi
		mov    %dh,_094eb8_data
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    _0cc528_data,%eax
		mov    %eax,_0ccba4_data
		call   _066aa4_func
		call   _066aa8_func
		call   _0427bc_func
		mov    $_0cda94_data,%eax
		call   _018ae8_func
		call   _0653fc_func
		mov    _0cc534_data,%edx
		push   %edx
		mov    _0cc4dc_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0cc528_data,%ebx
		mov    _0cc4bc_data,%edi
		push   %ebx
		mov    _0cc4dc_data,%ebx
		mov    _0cc4b8_data,%edx
		mov    %eax,%ecx
		mov    %edi,%eax
		call   _04181c_func
		mov    _0cc534_data,%eax
		mov    %eax,_0ccba4_data
		call   _034700_func
		call   _040b64_func
		call   _01cb68_func
		call   _036308_func
		cmpb   $0x000000,_0cee8b_data
		je     _034a95_jump
		mov    $0x00004d,%eax
		call   _06fa30_func

	_034a95_jump:
		mov    _0cecda_data,%dx
		test   %dx,%dx
		jne    _034ab3_jump
		cmpb   $0x000000,_0cee8b_data
		jne    _034ab3_jump
		call   _0264c0_func
		test   %al,%al
		je     _034ab8_jump

	_034ab3_jump:
		mov    $0x000001,%edx

	_034ab8_jump:
		cmpb   $0x000000,_0cee93_data
		je     _034ad6_jump
		mov    %esi,%ebx
		call   _016eba_func
		test   %ecx,%ecx
		jne    _034ad6_jump
		call   _066aa4_func
		call   _066aa8_func

	_034ad6_jump:
		mov    %edx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034ae0_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _01cb30_func
		call   _03b8f8_func
		xor    %eax,%eax
		mov    _0cecc4_data,%al
		xor    %edx,%edx
		call   _057698_func
		call   _040b64_func
		mov    $_0c6488_data,%eax
		mov    %edx,_0ccd14_data
		call   _03bad8_func
		call   _03b880_func
		call   _0666e8_func
		cmpw   $0x000000,_0cec7c_data
		jne    _034b77_jump
		cmpw   $0x000000,_0cec7a_data
		jne    _034b77_jump
		mov    _0cecb6_data,%eax
		mov    _0ceca8_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0cecaa_data,%edx
		mov    %ax,_0ced00_data
		mov    _0cecb4_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %ax,_0cecea_data
		call   _041a38_func

	_034b77_jump:
		cmpb   $0x000000,_0cee79_data
		jne    _034b8f_jump
		call   _035a40_func
		mov    $_0349c4_func,%eax
		call   _03b948_func

	_034b8f_jump:
		mov    _0cee8b_data,%dl
		test   %dl,%dl
		je     _034bea_jump
		mov    $0x000001,%dh
		mov    $0x000004,%bl
		mov    _0cec82_data,%al
		xor    %ecx,%ecx
		mov    %dh,_0ceec1_data
		mov    %al,_0ceea2_data
		mov    _0cecd4_data,%ax
		mov    %bl,_0cee7c_data
		mov    %ax,_0cec82_data
		mov    _0cecc0_data,%ax
		mov    %cx,_0cebf8_data
		mov    %ax,_0cec74_data
		mov    $0x00004d,%eax
		mov    %cx,_0cecd4_data
		call   _06fa30_func
		jmp    _034c6e_jump

	_034bea_jump:
		xor    %dh,%dh

	_034bec_jump:
		call   _0408d4_func
		test   %ax,%ax
		jne    _034c14_jump
		call   _040960_func
		test   %ax,%ax
		jne    _034c14_jump
		call   _0409ec_func
		test   %ax,%ax
		jne    _034c14_jump
		call   _040a78_func
		test   %ax,%ax
		je     _034c23_jump

	_034c14_jump:
		cmp    _0cee79_data,%dl
		jne    _034c23_jump
		call   _040b64_func
		jmp    _034bec_jump

	_034c23_jump:
		call   _066c08_func
		call   _0264c0_func
		test   %al,%al
		jne    _034c51_jump
		cmpb   $0x000000,_0ceea5_data
		je     _034c51_jump
		cmpb   $0x000000,_0cee79_data
		jne    _034c51_jump
		mov    _0cec72_data,%eax
		sar    $0x000010,%eax
		mov    %ax,_0cec74_data

	_034c51_jump:
		cmpb   $0x000000,_0cee79_data
		jne    _034c6e_jump
		mov    $0x000045,%eax
		call   _06fa30_func
		mov    $0x000005,%eax
		call   _03c904_func

	_034c6e_jump:
		call   _066b9c_func
		call   _01cb80_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034c7c_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		mov    _0cee9d_data,%bl
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		mov    _0cb978_data(%eax),%cl
		mov    %eax,%edx
		test   %cl,%cl
		je     _034ccd_jump

	_034ca4_jump:
		xor    %eax,%eax
		mov    _0cee9d_data,%al
		inc    %eax
		cmp    %eax,%ebx
		ja     _034ccd_jump
		mov    $_0cb978_data,%eax
		add    %edx,%eax
		inc    %ebx
		call   _01a830_func
		mov    _0cba50_data(%edx),%ch
		add    $0x0000d8,%edx
		test   %ch,%ch
		jne    _034ca4_jump

	_034ccd_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034cd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _040b64_func
		call   _03bbec_func
		call   _034c7c_func
		mov    _0cec66_data,%dx
		inc    %edx
		mov    %dx,_0cec66_data
		cmp    $0x00003c,%dx
		jne    _034d14_jump
		mov    _0cec68_data,%si
		xor    %ecx,%ecx
		dec    %esi
		mov    %cx,_0cec66_data
		mov    %si,_0cec68_data

	_034d14_jump:
		call   _0367ec_func
		test   %al,%al
		jne    _034d26_jump
		call   _036834_func
		test   %al,%al
		je     _034d30_jump

	_034d26_jump:
		cmpw   $0x000003,_0cec68_data
		jle    _034d3a_jump

	_034d30_jump:
		cmpw   $0x000000,_0cec68_data
		jg     _034d41_jump

	_034d3a_jump:
		mov    $0x000001,%eax
		jmp    _034d43_jump

	_034d41_jump:
		xor    %eax,%eax

	_034d43_jump:
		mov    %eax,%ebx
		test   %ax,%ax
		je     _034d90_jump
		xor    %edx,%edx
		mov    _0cee9d_data,%dl
		add    $0x000002,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000000,_0cb978_data(,%eax,8)
		jne    _034d76_jump
		movb   $0x00000a,_0cee9d_data
		jmp    _034d90_jump

	_034d76_jump:
		movw   $0x000005,_0cec68_data
		mov    _0cee9d_data,%dh
		add    $0x000002,%dh
		xor    %ebx,%ebx
		mov    %dh,_0cee9d_data

	_034d90_jump:
		test   %bx,%bx
		je     _034da8_jump
		cmpb   $0x00000a,_0cee9d_data
		jne    _034da8_jump
		mov    $0x000001,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_034da8_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034db0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		call   _070208_func
		mov    $0x000001,%edx
		lea    0x000004(%esp),%ecx
		xor    %ebx,%ebx
		mov    %dx,_0ceb8a_data
		mov    %bx,_0ceb88_data
		call   _03b8d0_func
		mov    %esp,%edx
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%eax
		call   _01611a_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _016157_func
		xor    %ah,%ah
		mov    %ah,_0cee87_data
		mov    $_0c4c88_data,%eax
		call   _03bad8_func
		call   _03bb7c_func
		mov    _095b14_data,%dl
		xor    %esi,%esi
		cmp    $0x000001,%dl
		jne    _034e31_jump
		xor    %eax,%eax
		mov    _0cee8f_data,%al
		mov    $0x000001,%esi
		call   _03c7cc_func

	_034e31_jump:
		call   _03b880_func
		call   _068108_func
		cmpb   $0x000000,_0cee62_data
		je     _034e54_jump
		cmpb   $0x000000,_0cee78_data
		jne    _034e54_jump
		xor    %eax,%eax
		call   _07026c_jump

	_034e54_jump:
		mov    $_034cd4_func,%eax
		call   _03b948_func
		cmpb   $0x000000,_0cee62_data
		je     _034e75_jump
		cmpb   $0x000000,_0cee78_data
		jne    _034e75_jump
		call   _03d9d0_func

	_034e75_jump:
		call   _03b8d0_func
		xor    %ch,%ch
		call   _03b8f8_func
		mov    %ch,_0cee85_data
		mov    %ch,_0cee8b_data
		test   %esi,%esi
		je     _034e9d_jump
		xor    %eax,%eax
		mov    _0cee8f_data,%al
		call   _03c6a0_func

	_034e9d_jump:
		call   _03bb4c_func
		call   _03bbcc_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _016157_func
		call   _03b880_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034ec8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		movzbl _0cee7b_data,%edi
		lea    0x000000(,%edi,4),%esi
		sub    %edi,%esi
		shl    $0x000002,%esi
		jmp    _034f14_jump

	_034ee2_jump:
		mov    _0cc544_data(%esi),%ebx
		mov    _0cc542_data(%esi),%edx
		add    $0x00000c,%esi
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		mov    _0cc53e_data(%esi),%al
		mov    _0cc53c_data(%esi),%cl
		push   %eax
		mov    _0cc534_data(%esi),%eax
		inc    %edi
		call   _01a178_func

	_034f14_jump:
		xor    %eax,%eax
		mov    _0cee7f_data,%al
		cmp    %eax,%edi
		jbe    _034ee2_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_034f28_func:
		push   %edx
		call   _040b64_func
		call   _01cb3c_func
		call   _06851c_func
		call   _03bbec_func
		call   _034ec8_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    _0cee8b_data,%dl
		mov    %ah,_0cee8b_data
		call   _0367ec_func
		test   %al,%al
		jne    _034f64_jump
		call   _036910_func
		test   %al,%al
		je     _034f72_jump

	_034f64_jump:
		movb   $0x000001,_0cee8b_data
		movb   $0x000007,_0cee87_data

	_034f72_jump:
		cmpb   $0x000000,_0cee8b_data
		jne    _034f80_jump
		test   %dx,%dx
		je     _034f87_jump

	_034f80_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_034f87_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_034fc4_func:
		push   %edx
		call   _01cb80_func
		call   _06845c_func
		cmpb   $0x000007,_0cee87_data
		ja     _035029_jump

	_034fd8_jump:
		xor    %eax,%eax
		mov    _0cee87_data,%al
		imul   $0x000300,%eax,%eax
		add    $_0c4c88_data,%eax
		call   _03bad8_func
		call   _03bb7c_func
		call   _03b880_func
		mov    $_034f28_func,%eax
		xor    %dl,%dl
		call   _03b948_func
		call   _03b8d0_func
		mov    %dl,_0cee8b_data
		incb   _0cee87_data
		call   _03bb4c_func
		call   _03bbcc_func
		cmpb   $0x000007,_0cee87_data
		jbe    _034fd8_jump

	_035029_jump:
		call   _01cb80_func
		call   _03b880_func
		pop    %edx
		ret    



_0350f0_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		mov    $0x000004,%ebx
		mov    %ah,_0cee87_data
		mov    $_0c4c88_data,%eax
		xor    %edx,%edx
		call   _03bad8_func
		call   _03bb7c_func
		call   _03b880_func
		mov    %dx,_0cec66_data
		xor    %dl,%dl
		mov    %bx,_0cec68_data
		mov    %dl,_0cee9d_data
		call   _01eaa8_func
		mov    $_034cd4_func,%eax
		mov    $_0ccc98_data,%edx
		call   _03b948_func
		mov    $_0cccc8_data,%eax
		call   _035fb4_func
		call   _03b8d0_func
		call   _03bb4c_func
		call   _03bbcc_func
		pop    %edx
		pop    %ebx
		ret    



_035184_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0cee86_data,%ah
		mov    %edx,_0cdb1c_data
		mov    %edx,_0cdb18_data
		test   %ah,%ah
		je     _035210_jump
		cmpw   $0x000001,_0cec74_data
		jle    _0351d0_jump
		cmpb   $0x000046,_095b54_data
		je     _0351d0_jump
		mov    _0cee78_data,%bl
		add    $0x000017,%bl
		mov    $_0c06b8_data,%edx
		mov    $_0cc3dc_data,%eax
		and    $0x0000ff,%ebx
		call   _03a278_func

	_0351d0_jump:
		mov    $0x000004,%ebx
		mov    $0x000006,%ecx
		mov    $_0ccc98_data,%eax
		mov    %bx,_0cecc0_data
		mov    %cx,_0cecd4_data
		call   _07b7b4_func
		mov    $_0cccc8_data,%eax
		call   _07b7a0_func
		mov    $_0ccc98_data,%eax
		call   _035fb4_func
		call   _0350f0_func
		call   _034fc4_func

	_035210_jump:
		xor    %dh,%dh
		mov    %dh,_0cee8b_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03521c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _03b8d0_func
		cmpb   $0x000001,_095b15_data
		jne    _03524d_jump
		mov    _0cebac_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		cmpw   $0x000005,_095af8_data(%eax)
		jne    _03524d_jump
		cmpw   $0x00000a,_095b04_data(%eax)
		je     _03527e_jump

	_03524d_jump:
		cmpb   $0x000000,_095b15_data
		jne    _03529a_jump
		cmpw   $0x000000,_095b52_data
		je     _03529a_jump
		mov    _0cebac_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		cmpw   $0x000001,_095af8_data(%eax)
		jne    _03529a_jump
		cmpw   $0x000009,_095b04_data(%eax)
		jne    _03529a_jump

	_03527e_jump:
		mov    _0cebae_data,%ax
		inc    %eax
		mov    %ax,_0cebae_data
		cmp    $0x000006,%ax
		jne    _03529a_jump
		xor    %ebx,%ebx
		mov    %bx,_0cebae_data

	_03529a_jump:
		mov    $0x000001,%dh
		mov    _0cec70_data,%ax
		mov    _0cec70_data,%bl
		mov    %dh,_0cee79_data
		mov    %ax,_0ceba6_data
		or     $0x00000f,%bl
		mov    _0cebac_data,%eax
		mov    %bl,_0cec70_data
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    %bl,%bh
		add    %eax,%eax
		mov    %edx,_0cc530_data
		and    $0x0000cf,%bh
		mov    _095af8_data(%eax),%cx
		mov    %bh,_0cec70_data
		cmp    $0x000001,%cx
		jne    _0352fe_jump
		cmpw   $0x000009,_095b04_data(%eax)
		jne    _0352fe_jump
		mov    %bh,%ch
		or     $0x000040,%ch
		mov    %ch,_0cec70_data
		jmp    _035305_jump

	_0352fe_jump:
		andb   $0x0000bf,_0cec70_data

	_035305_jump:
		orb    $0x000080,_0cec70_data
		mov    _0cec71_data,%ah
		or     $0x000001,%ah
		mov    %ah,%dl
		mov    %ah,_0cec71_data
		and    $0x0000fd,%dl
		mov    _0cecd4_data,%di
		mov    %dl,_0cec71_data
		cmp    $0x000005,%di
		jne    _03534a_jump
		cmpw   $0x000004,_0cecc0_data
		jne    _03534a_jump
		mov    %dl,%bl
		or     $0x000004,%bl
		mov    %bl,_0cec71_data
		jmp    _035351_jump

	_03534a_jump:
		andb   $0x0000fb,_0cec71_data

	_035351_jump:
		mov    $0x000008,%ecx
		mov    $_0c4c48_data,%edi
		mov    $_0c4c68_data,%esi
		mov    $0x000001,%edx
		mov    _0cec71_data,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		and    $0x000087,%bh
		mov    $0x000002,%ecx
		mov    %bh,_0cec71_data
		mov    %dx,_0c4c78_data
		mov    %cx,_0c4c7e_data
		xor    %ebx,%ebx
		mov    %cx,_0c4c7c_data
		mov    %bx,_0c4c7a_data
		call   _040520_func
		mov    _0cec79_data,%cl
		mov    %dx,_0cecda_data
		mov    %dx,_0cecc4_data
		mov    %bx,_0cecd4_data
		mov    %bx,_0cecc0_data
		xor    %ah,%ah
		mov    _0cebac_data,%edx
		or     $0x00000a,%cl
		mov    %ah,_0ce3a0_data
		mov    %cl,_0cec79_data
		sar    $0x000010,%edx
		mov    $0x000002,%ch
		mov    _095af8_data(,%edx,2),%bx
		mov    _095aea_data(,%edx,2),%eax
		mov    %bx,_0cec82_data
		mov    %ch,_0cdb0a_data
		mov    %ch,_0ce3a3_data
		sar    $0x000010,%eax
		mov    $0x000003,%ecx
		mov    _095b04_data(,%edx,2),%bx
		mov    %eax,_0ca30c_data
		mov    %bx,_0cec74_data
		mov    %edx,%eax
		mov    $0x000001,%bl
		shl    $0x000005,%eax
		mov    %bl,_0cdbc0_data
		mov    %bl,_0ca315_data
		sub    %edx,%eax
		xor    %ebx,%ebx
		shl    $0x000002,%eax
		mov    %ebx,_0ca300_data
		add    %edx,%eax
		mov    $_095510_data,%edx
		add    %eax,%eax
		mov    $0x000a20,%ebx
		add    %eax,%edx
		mov    $_0caf58_data,%eax
		mov    %edx,_0ca310_data
		xor    %edx,%edx
		mov    %cx,_0ce39a_data
		call   _07c050_func
		mov    _0cec80_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %cl,%cl
		mov    %cl,_094a4d_data(,%eax,4)
		call   _0531d0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03548c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _03b8d0_func
		mov    _0ca308_data,%eax
		cmp    _0ca304_data,%eax
		jne    _0354ae_jump
		xor    %ebx,%ebx
		mov    %bx,_0cebac_data
		jmp    _0354b7_jump

	_0354ae_jump:
		xor    %edx,%edx
		mov    %dx,_0cebac_data

	_0354b7_jump:
		xor    %ah,%ah
		xor    %ebx,%ebx
		xor    %dl,%dl
		xor    %ecx,%ecx
		xor    %esi,%esi
		xor    %edi,%edi
		mov    %ah,_0cee79_data
		mov    %ebx,_0cc530_data
		xor    %ebx,%ecx
		xor    %ebx,%esi
		mov    $0x000001,%eax
		xor    %ebx,%edi
		call   _057698_func
		mov    _0ceba6_data,%ax
		mov    %dl,_0ca315_data
		mov    %ebx,_0ca300_data
		mov    %ebx,_0ca30c_data
		mov    %ebx,_0ca310_data
		mov    %cx,_0cecda_data
		mov    %si,_0cecc4_data
		mov    %di,_0cecd4_data
		mov    $0x000008,%ecx
		mov    $_0c4c68_data,%edi
		mov    $_0c4c48_data,%esi
		xor    %dh,%dh
		mov    %ax,_0cec70_data
		mov    %dx,_0cec82_data
		xor    %eax,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0cec79_data,%dh
		mov    %ax,_0cecc0_data
		and    $0x0000f5,%dh
		mov    %ax,_0cec74_data
		mov    %dh,_0cec79_data
		call   _040520_func
		mov    _0cebae_data,%cx
		inc    %ecx
		mov    %cx,_0cebae_data
		cmp    $0x000006,%cx
		jne    _035572_jump
		xor    %edi,%edi
		mov    %di,_0cebae_data

	_035572_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035578_func:
		call   _040b64_func
		call   _0367ec_func
		test   %al,%al
		jne    _03558f_jump
		call   _036834_func
		test   %al,%al
		je     _035596_jump

	_03558f_jump:
		movb   $0x000001,_0cee8b_data

	_035596_jump:
		mov    $0x000001,%eax
		call   _0531e8_func
		call   _01cb68_func
		call   _03bbec_func
		mov    $_0cdbc8_data,%eax
		call   _018ae8_func
		call   _068784_func
		cmpb   $0x000000,_0cee8b_data
		je     _0355d2_jump
		cmpw   $0x000000,_0ced22_data
		jne    _0355d2_jump
		mov    $0x000001,%eax
		ret    

	_0355d2_jump:
		xor    %eax,%eax
		ret    



_0355d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $_0cccf0_data,%eax
		mov    $_0169fa_func,%edx
		mov    $_016ae5_func,%ebx
		call   _0367e0_func
		mov    $_0cccf0_data,%eax
		mov    $_016981_jump,%ecx
		call   _035e7c_func
		mov    $_0c7088_data,%eax
		mov    $_016a65_jump,%esi
		call   _03bad8_func
		call   _01cb68_func
		call   _03b880_func
		call   _068718_func
		mov    $_035578_func,%eax
		mov    %edx,_0cc4f4_data
		mov    %ebx,_0cc508_data
		call   _03b948_func
		mov    %ecx,_0cc4f4_data
		mov    %esi,_0cc508_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035644_func:
		call   _03b8d0_func
		jmp    _03bb4c_func



_035650_func:
		push   %edx
		mov    $0x041a00,%edx
		mov    $_0cccf0_data,%eax
		call   _07b3e0_func
		call   _01cb30_func
		call   _0355d8_func
		mov    $_0cccf0_data,%eax
		call   _07b6ec_func
		xor    %ah,%ah
		mov    %ah,_0cee8b_data
		call   _044c20_func
		call   _035644_func
		pop    %edx
		ret    



_035688_func:
		push   %edx
		cmpb   $0x000001,_0ceec1_data
		je     _0356c5_jump
		call   _068abc_func
		mov    _0cee8b_data,%dl
		test   %dl,%dl
		jne    _0356c5_jump
		call   _03b8f8_func
		call   _01cb80_func
		call   _03b880_func
		mov    $_033b38_jump,%eax
		call   _03b948_func
		call   _068f60_func
		mov    %dl,_0cee8b_data

	_0356c5_jump:
		pop    %edx
		ret    



_0356c8_func:
		push   %ebx
		push   %ecx
		testb  $0x000001,_0cec70_data
		jne    _035703_jump
		cmp    $0x000001,%al
		jne    _0356e0_jump
		cmp    $0x000003,%dl
		ja     _0356e0_jump
		xor    %ebx,%ebx
		jmp    _0356e5_jump

	_0356e0_jump:
		mov    $0x000001,%ebx

	_0356e5_jump:
		mov    _0cec70_data,%dh
		mov    %bl,%ah
		and    $0x0000fe,%dh
		and    $0x000001,%ah
		mov    %dh,%bl
		mov    %dh,_0cec70_data
		or     %ah,%bl
		mov    %bl,_0cec70_data

	_035703_jump:
		testb  $0x000002,_0cec70_data
		jne    _03573e_jump
		cmp    $0x000001,%al
		jne    _035719_jump
		cmp    $0x000008,%dl
		ja     _035719_jump
		xor    %ebx,%ebx
		jmp    _03571e_jump

	_035719_jump:
		mov    $0x000001,%ebx

	_03571e_jump:
		mov    _0cec70_data,%cl
		mov    %bl,%ah
		and    $0x0000fd,%cl
		and    $0x000001,%ah
		mov    %cl,_0cec70_data
		add    %ah,%ah
		mov    %cl,%ch
		or     %ah,%ch
		mov    %ch,_0cec70_data

	_03573e_jump:
		testb  $0x000080,_0cec70_data
		jne    _03577a_jump
		cmp    $0x000001,%al
		jne    _035754_jump
		cmp    $0x000011,%dl
		ja     _035754_jump
		xor    %ebx,%ebx
		jmp    _035759_jump

	_035754_jump:
		mov    $0x000001,%ebx

	_035759_jump:
		mov    %bl,%ah
		mov    _0cec70_data,%dh
		and    $0x000001,%ah
		and    $0x00007f,%dh
		shl    $0x000007,%ah
		mov    %dh,%bl
		mov    %dh,_0cec70_data
		or     %ah,%bl
		mov    %bl,_0cec70_data

	_03577a_jump:
		testb  $0x000004,_0cec70_data
		jne    _0357b8_jump
		cmp    $0x000002,%al
		jb     _03578e_jump
		jne    _035792_jump
		cmp    $0x00000b,%dl
		ja     _035792_jump

	_03578e_jump:
		xor    %ebx,%ebx
		jmp    _035797_jump

	_035792_jump:
		mov    $0x000001,%ebx

	_035797_jump:
		mov    _0cec70_data,%cl
		mov    %bl,%ah
		and    $0x0000fb,%cl
		and    $0x000001,%ah
		mov    %cl,_0cec70_data
		shl    $0x000002,%ah
		mov    %cl,%ch
		or     %ah,%ch
		mov    %ch,_0cec70_data

	_0357b8_jump:
		testb  $0x000001,_0cec71_data
		jne    _0357f3_jump
		cmp    $0x000003,%al
		jb     _0357cc_jump
		jne    _0357d0_jump
		cmp    $0x00000b,%dl
		ja     _0357d0_jump

	_0357cc_jump:
		xor    %ebx,%ebx
		jmp    _0357d5_jump

	_0357d0_jump:
		mov    $0x000001,%ebx

	_0357d5_jump:
		mov    _0cec71_data,%dh
		mov    %bl,%ah
		and    $0x0000fe,%dh
		and    $0x000001,%ah
		mov    %dh,%bl
		mov    %dh,_0cec71_data
		or     %ah,%bl
		mov    %bl,_0cec71_data

	_0357f3_jump:
		cmp    $0x000003,%al
		jb     _0357fe_jump
		jne    _035802_jump
		cmp    $0x000006,%dl
		ja     _035802_jump

	_0357fe_jump:
		xor    %ebx,%ebx
		jmp    _035807_jump

	_035802_jump:
		mov    $0x000001,%ebx

	_035807_jump:
		mov    %bl,%ah
		mov    _0cec79_data,%bh
		and    $0x000001,%ah
		and    $0x0000f7,%bh
		shl    $0x000003,%ah
		mov    %bh,%cl
		mov    %bh,_0cec79_data
		or     %ah,%cl
		mov    %cl,_0cec79_data
		cmp    $0x000005,%al
		jb     _035833_jump
		jne    _035837_jump
		cmp    $0x000006,%dl
		ja     _035837_jump

	_035833_jump:
		xor    %eax,%eax
		jmp    _03583c_jump

	_035837_jump:
		mov    $0x000001,%eax

	_03583c_jump:
		mov    _0cec79_data,%ch
		and    $0x000001,%al
		and    $0x0000fb,%ch
		shl    $0x000002,%al
		mov    %ch,%ah
		mov    %ch,_0cec79_data
		or     %al,%ah
		mov    %ah,_0cec79_data
		pop    %ecx
		pop    %ebx
		ret    



_035860_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    $0x000fa0,%eax
		call   _07b4e8_func
		xor    %edi,%edi
		mov    %eax,(%esp)
		test   %eax,%eax
		je     _035980_jump
		mov    (%esp),%esi
		xor    %edx,%edx

	_035885_jump:
		xor    %eax,%eax

	_035887_jump:
		inc    %eax
		cmp    $0x0001f4,%ax
		jl     _035887_jump
		movswl %dx,%ebx
		shl    $0x000002,%ebx
		add    %esi,%ebx
		call   _016e5a_func
		inc    %edx
		mov    %eax,(%ebx)
		cmp    $0x0003e8,%dx
		jl     _035885_jump
		mov    $0x000f9c,%eax
		call   _07b4e8_func
		mov    %eax,%ebp
		test   %eax,%eax
		je     _035978_jump
		movb   $0x000001,0x000008(%esp)
		xor    %eax,%eax

	_0358c0_jump:
		movswl %ax,%ebx
		mov    (%esp),%ecx
		shl    $0x000002,%ebx
		mov    0x000004(%ecx,%ebx,1),%edx
		mov    (%ecx,%ebx,1),%esi
		mov    %edx,%ecx
		lea    (%ebx,%ebp,1),%edx
		sub    %esi,%ecx
		mov    %ecx,(%edx)
		test   %ecx,%ecx
		jg     _0358e5_jump
		xor    %dl,%dl
		mov    %dl,0x000008(%esp)
		jmp    _0358ee_jump

	_0358e5_jump:
		inc    %eax
		add    %ecx,%edi
		cmp    $0x0003e7,%ax
		jl     _0358c0_jump

	_0358ee_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _035962_jump
		mov    $0x0003e7,%ebx
		mov    %edi,%edx
		mov    %edi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edi
		lea    0x000000(,%eax,4),%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %edi,%edx
		shl    $0x000002,%edx
		sub    %edi,%edx
		mov    %eax,0x000004(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		xor    %esi,%esi
		mov    %eax,%edx

	_035934_jump:
		mov    0x000004(%esp),%ecx
		movswl %si,%eax
		mov    %edx,%ebx
		mov    0x000000(%ebp,%eax,4),%eax
		cmp    %ebx,%eax
		jl     _035950_jump
		cmp    %ecx,%eax
		jg     _035950_jump
		mov    $0x000001,%eax
		jmp    _035952_jump

	_035950_jump:
		xor    %eax,%eax

	_035952_jump:
		test   %eax,%eax
		jne    _03595a_jump
		incb   0x000008(%esp)

	_03595a_jump:
		inc    %esi
		cmp    $0x0003e7,%si
		jl     _035934_jump

	_035962_jump:
		mov    0x000008(%esp),%bh
		cmp    $0x00000a,%bh
		setb   %al
		mov    %al,_0cee93_data
		mov    %ebp,%eax
		call   _07b680_func

	_035978_jump:
		mov    (%esp),%eax
		call   _07b680_func

	_035980_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03598c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cee93_data
		je     _035a39_jump
		call   _016df7_func
		call   _016e5a_func
		lea    0x000bb8(%eax),%ebx
		call   _016eba_func
		call   _016de7_func
		call   _016e5a_func
		xor    %esi,%esi
		mov    %eax,%edi
		jmp    _0359de_jump

	_0359c3_jump:
		call   _016df7_func
		call   _016e5a_func
		lea    0x000bb8(%eax),%ebx
		call   _016eba_func
		call   _016de7_func
		inc    %esi

	_0359de_jump:
		xor    %edx,%edx
		mov    _0cee8f_data,%dl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movswl %si,%edx
		cmp    %eax,%edx
		jl     _0359c3_jump
		call   _016e5a_func
		movswl %si,%ebx
		sub    %edi,%eax
		xor    %edx,%edx
		div    %ebx
		xor    %edx,%edx
		mov    %ax,%dx
		mov    %ax,_0cec40_data
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shr    $0x000005,%eax
		mov    %ax,_0cec3e_data
		mov    %edx,%eax
		mov    _0cec2c_data,%dx
		imul   %eax,%edx
		mov    _0cec3e_data,%ax
		add    %edx,%eax
		mov    %ax,_0cec38_data

	_035a39_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035a40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000008,%esp
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,0x000004(%esp)
		mov    %ah,(%esp)
		xor    %dh,%dh
		cli    
		mov    %dx,_0cec2c_data
		call   _016ed5_func
		call   _035860_func
		cmpb   $0x000000,_0cee93_data
		je     _035b12_jump

	_035a73_jump:
		cmpb   $0x000000,0x000004(%esp)
		jne    _035b12_jump
		call   _03598c_func
		call   _016df7_func
		call   _016e5a_func
		lea    0x000bb8(%eax),%ebx
		call   _016eba_func
		call   _016de7_func
		xor    %ebx,%ebx
		call   _016e5a_func
		mov    _0cec3e_data,%bx
		xor    %edx,%edx
		add    %eax,%ebx
		mov    %eax,%esi
		call   _016eba_func
		call   _016de7_func
		call   _016e5a_func
		mov    _0cec40_data,%dx
		imul   $0x000065,%edx,%edx
		mov    $0x000064,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		sub    %esi,%ebx
		cmp    %eax,%ebx
		jae    _035ae5_jump
		movb   $0x000001,0x000004(%esp)
		jmp    _035ae8_jump

	_035ae5_jump:
		incb   (%esp)

	_035ae8_jump:
		cmpb   $0x000002,(%esp)
		jbe    _035a73_jump
		call   _04d264_func
		cmp    $0x0000be,%ax
		setle  %al
		xor    %ah,%ah
		mov    %ax,_0cec2c_data
		mov    %ah,_0cee93_data
		movb   $0x000001,0x000004(%esp)
		jmp    _035a73_jump

	_035b12_jump:
		sti    
		add    $0x000008,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035b1c_func:
		push   %ebx
		push   %edx
		mov    _0cccb4_data,%eax
		call   _07b378_func
		call   _03c7bc_func
		xor    %ah,%ah
		mov    %ah,_0cee90_data
		mov    %ah,_0ca314_data
		mov    %ah,_0ca315_data
		mov    %ah,_0ceea6_data
		call   _04119c_func
		mov    $0x000003,%eax
		call   _040b5c_func
		mov    $0x00fa40,%eax
		call   _07b7c4_func
		mov    %eax,_0cc534_data
		mov    $0x01f400,%eax
		call   _07b7c4_func
		mov    _0cc534_data,%edx
		mov    %eax,_0cc528_data
		test   %edx,%edx
		je     _035b82_jump
		test   %eax,%eax
		jne    _035b8c_jump

	_035b82_jump:
		mov    $_0c06c4_data,%eax
		call   _01f3a4_func

	_035b8c_jump:
		call   _0418c4_func
		mov    _095b54_data,%bh
		cmp    $0x000046,%bh
		je     _035ba5_jump
		movb   $0x00003c,_0cee8f_data
		jmp    _035bab_jump

	_035ba5_jump:
		mov    %bh,_0cee8f_data

	_035bab_jump:
		xor    %eax,%eax
		mov    _0cee8f_data,%al
		call   _03c7cc_func
		mov    $0x000001,%al
		xor    %edx,%edx
		mov    %al,_0cee92_data
		call   _016e07_func
		call   _035860_func
		mov    %dx,_0ced38_data
		pop    %edx
		pop    %ebx

	_035bd3_jump:
		ret    



_035bd4_func:
		cmpb   $0x000000,_0ceec1_data
		jne    _035bd3_jump
		movb   $0x0000ff,(%eax)
		call   _040b64_func
		cmpl   $0x000000,_0ca300_data
		jne    _035bd3_jump
		cmpb   $0x000000,_0ca315_data
		jne    _035c00_jump
		cmpb   $0x000000,_0ca314_data
		je     _035bd3_jump

	_035c00_jump:
		mov    $_0ca300_data,%eax
		jmp    _040ec0_func



_035c0c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%ebp
		mov    $0x00000a,%ebx
		mov    %esp,%esi
		mov    _0c06e4_data,%edx
		cwtl   
		mov    %edx,0x000000(%ebp)
		mov    %esp,%edx
		mov    %ebp,%edi
		call   _07ce68_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_035c39_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _035c51_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _035c39_jump

	_035c51_jump:
		pop    %edi
		mov    $_0c06e8_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_035c60_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _035c78_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _035c60_jump

	_035c78_jump:
		pop    %edi
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_035c84_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%ebp
		mov    $0x00000a,%ebx
		mov    %esp,%esi
		mov    _0c06e4_data,%edx
		cwtl   
		mov    %edx,0x000000(%ebp)
		mov    %esp,%edx
		mov    %ebp,%edi
		call   _07ce68_func
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_035cb1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _035cc9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _035cb1_jump

	_035cc9_jump:
		pop    %edi
		mov    $_0c06f0_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_035cd8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _035cf0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _035cd8_jump

	_035cf0_jump:
		pop    %edi
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_035d4e_jump:
		ret    

_035d50_switch:
		.long   _035d79_case
		.long   _035d80_case
		.long   _035d87_case
		.long   _035d8e_case
		.long   _035e6f_case




_035d64_func:
		dec    %edx
		cmp    $0x000004,%dx
		ja     _035d4e_jump
		and    $0x00ffff,%edx
		jmp    *%cs:_035d50_switch(,%edx,4)

	_035d79_case:
		mov    $0x00000a,%edx
		jmp    _035d94_jump

	_035d80_case:
		mov    $0x00000c,%edx
		jmp    _035d94_jump

	_035d87_case:
		mov    $0x00000b,%edx
		jmp    _035d94_jump

	_035d8e_case:
		mov    $0x000009,%edx
		nop

	_035d94_jump:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000308,%esp
		mov    %eax,%ebx
		mov    _0ccc14_data,%esi
		mov    $0x000300,%ecx
		mov    %esi,0x000304(%esp)
		mov    _0ccc18_data,%esi
		mov    %esp,%edi
		mov    %esi,0x000300(%esp)
		mov    $_0c6488_data,%esi
		mov    _0ccc34_data,%ebp
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %ebx,%eax
		call   _046014_func
		mov    _0ccc34_data,%edx
		mov    $0x000300,%ecx
		mov    %edx,_0ccc38_data
		mov    _0ccc14_data,%edx
		mov    $_0c6488_data,%esi
		mov    %edx,_0ccc2c_data
		mov    _0ccc18_data,%edx
		mov    $_0c7088_data,%edi
		mov    %edx,_0ccc08_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    0x000304(%esp),%edx
		mov    $0x000300,%ecx
		mov    %esp,%esi
		mov    $_0c6488_data,%edi
		mov    %edx,_0ccc14_data
		mov    0x000300(%esp),%edx
		mov    %ebp,_0ccc34_data
		mov    %edx,_0ccc18_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		add    $0x000308,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_035e6f_case:
		mov    $0x000008,%edx
		jmp    _035d94_jump



_035e7c_func:
		push   %edx
		mov    $0x000001,%edx
		call   _035d94_jump
		pop    %edx



_035e88_func:
		ret    



_035e8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   $0x000089
		mov    _0ccba4_data,%edi
		mov    _0ccc38_data,%esi
		push   $0x000140
		xor    %edx,%edx
		xor    %ecx,%ecx
		push   $0x000140
		xor    %ebx,%ebx
		xor    %eax,%eax
		call   _014b78_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_035fb4_func:
		ret    



_035fb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cee97_data
		je     _035fca_jump
		call   _01cb80_func

	_035fca_jump:
		cmpb   $0x000000,_0cee77_data
		jne    _035fda_jump
		movb   $0x000001,_095b15_data

	_035fda_jump:
		cmpb   $0x000002,_0cee64_data
		jne    _035fea_jump
		movb   $0x000001,_0cee5d_data

	_035fea_jump:
		mov    _0cec82_data,%ax
		cmp    _0cecd4_data,%ax
		je     _036016_jump
		xor    %eax,%eax
		mov    $0x000001,%edx
		mov    %ax,_0cecc0_data
		mov    %dx,_0cecda_data
		mov    %dx,_0cecc4_data
		jmp    _036048_jump

	_036016_jump:
		call   _0264c0_func
		test   %al,%al
		je     _036036_jump
		xor    %ecx,%ecx
		mov    $0x000001,%esi
		mov    %cx,_0cecc0_data
		mov    %si,_0cecda_data
		jmp    _03603f_jump

	_036036_jump:
		xor    %ebx,%ebx
		mov    %bx,_0cecda_data

	_03603f_jump:
		movw   $0x000001,_0cecc4_data

	_036048_jump:
		cmpb   $0x000001,_0cee86_data
		jne    _036065_jump
		cmpw   $0x000006,_0cec82_data
		jne    _036065_jump
		call   _035184_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_036065_jump:
		cmpb   $0x000000,_0ceec1_data
		jne    _0360cb_jump
		cmpw   $0x000000,_0cecda_data
		je     _0360cb_jump
		call   _0364f0_func
		mov    $_0cccc8_data,%eax
		call   _07b7a0_func
		mov    $_0ccca8_data,%eax
		call   _07b788_func
		mov    _0cec80_data,%eax
		mov    $_0ccc64_data,%edx
		sar    $0x000010,%eax
		mov    $_0ccc64_data,%ebx
		call   _035c84_func
		mov    $_0ccca8_data,%edx
		mov    $_0cccc8_data,%eax
		call   _0437e0_func
		mov    $_0ccca8_data,%eax
		call   _07b770_func
		call   _058428_func
		call   _0365d8_func

	_0360cb_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0360d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cee97_data
		je     _0360e3_jump
		call   _01cb80_func

	_0360e3_jump:
		mov    $0x000001,%ebx
		mov    _0cec82_data,%ax
		xor    %edx,%edx
		mov    %ax,_0cecd4_data
		mov    %dx,_0cecda_data
		mov    %bx,_0cecc4_data
		mov    _0cec74_data,%ax
		mov    _0ceec1_data,%dl
		mov    %ax,_0cecc0_data
		test   %dl,%dl
		jne    _036215_jump
		cmpb   $0x000000,_0cee6e_data
		je     _0361c0_jump
		call   _0264c0_func
		mov    $0x0000a0,%esi
		mov    $0x0000be,%ebx
		test   %al,%al
		je     _036148_jump
		mov    $0x0000f0,%esi
		mov    $0x0000a0,%ebx

	_036148_jump:
		mov    $_0c7088_data,%edx
		mov    $0x000002,%eax
		call   _03b340_func
		mov    _0ccba4_data,%edi
		movswl %bx,%ebx
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		movswl %si,%edx
		push   $0x000000
		mov    $0x000002,%ecx
		mov    _0c24fc_data,%eax
		call   _01a178_func
		call   _016de7_func
		call   _016df7_func
		call   _03a2a0_func
		cmpw   $0x000000,_0ced22_data
		je     _0361c0_jump
		mov    $_0c6d88_data,%ebx
		mov    $_0c7088_data,%edi

	_0361a3_jump:
		call   _016df7_func
		call   _016de7_func
		mov    %ebx,%edx
		mov    %edi,%eax
		call   _03b3c0_func
		cmpw   $0x000000,_0ced22_data
		jne    _0361a3_jump

	_0361c0_jump:
		cmpb   $0x000000,_0cee97_data
		je     _0361d1_jump
		xor    %edx,%edx
		mov    %edx,_0cccfc_data

	_0361d1_jump:
		mov    _0cecbe_data,%eax
		mov    $_0ccc80_data,%edx
		sar    $0x000010,%eax
		call   _035c0c_func
		mov    $_0ccc98_data,%eax
		call   _07b7b4_func
		mov    $_0ccca8_data,%eax
		mov    $_0ccc80_data,%ebx
		call   _07b794_func
		mov    $_0ccc98_data,%eax
		mov    $_0ccca8_data,%edx
		mov    $_0ccc98_data,%eax
		call   _043f9c_func
		call   _0471c8_func

	_036215_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0362d4_func:
		cmpb   $0x000001,_0cee94_data
		jne    _0362ed_jump
		mov    $0x000001,%eax
		call   _0406e0_func
		test   %al,%al
		je     _036306_jump
		jmp    _0362ff_jump

	_0362ed_jump:
		call   _07ce88_func
		test   %eax,%eax
		je     _036306_jump
		call   _07c0ab_func
		cmp    $0x00001b,%al
		jne    _036306_jump

	_0362ff_jump:
		movb   $0x000001,_0cee8b_data

	_036306_jump:
		ret    



_036308_func:
		cmpb   $0x000001,_0cee94_data
		jne    _03631b_jump
		mov    $0x000001,%eax
		jmp    _0406e0_func

	_03631b_jump:
		call   _07ce88_func
		test   %eax,%eax
		je     _036334_jump
		call   _07c0ab_func
		cmp    $0x00001b,%al
		jne    _036334_jump
		movb   $0x000001,_0cee8b_data

	_036334_jump:
		ret    

	_036338_jump:
		call   _07ce88_func
		test   %eax,%eax
		je     _036334_jump
		call   _07c0ab_func
		jmp    _036338_jump



_036348_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000008,%esp
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		mov    $0x000001,%edx
		mov    _0cc528_data,%eax
		call   _046280_func
		mov    $_0c7088_data,%edx
		mov    $0x000001,%eax
		call   _045784_func
		add    $0x000008,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03637c_func:
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000001,_0cee94_data
		je     _0363a6_jump
		call   _07ce88_func
		test   %eax,%eax
		je     _0363a3_jump
		cmpb   $0x000000,_0cee79_data
		jne    _0363a3_jump
		call   _07c0ab_func
		mov    %al,(%edx)
		pop    %edx
		ret    

	_0363a3_jump:
		movb   $0x0000ff,(%edx)

	_0363a6_jump:
		pop    %edx
		ret    

	_0363f0_jump:
		ret    



_0363f4_func:
		cmpb   $0x000000,_0ceec1_data
		je     _0363f0_jump
		call   _070c60_func
		mov    $_0cccc8_data,%eax
		call   _07b7a0_func
		mov    $_0ccca8_data,%eax
		jmp    _07b788_func



_036418_func:
		testb  $0x000002,_0cec71_data
		je     _0363f0_jump
		jmp    _058efc_func



_036428_func:
		push   %edx
		call   _03c7bc_func
		cmpb   $0x000000,_0ca314_data
		je     _03644e_jump
		call   _041180_func
		mov    $0x000001,%dl
		mov    $_0ca300_data,%eax
		mov    %dl,_0ca316_data
		call   _040ec0_func

	_03644e_jump:
		cmpb   $0x000000,_0ceec1_data
		je     _03649c_jump
		mov    $_0ccc98_data,%eax
		call   _07b6ec_func
		mov    $_0cccc8_data,%eax
		call   _07b6ec_func
		mov    $_0ccca8_data,%eax
		call   _07b6ec_func
		mov    $_0cccbc_data,%eax
		call   _07b6ec_func
		mov    $_0cc538_data,%eax
		call   _07b7dc_func
		cmpb   $0x000002,_0cee64_data
		je     _03649c_jump
		mov    $_0cc528_data,%eax
		call   _07b7dc_func

	_03649c_jump:
		call   _07b350_func
		xor    %eax,%eax
		call   _07bcaf_func
		pop    %edx
		lea    0x000000(%eax),%eax
		ret    



_0364b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _03bbec_func
		call   _0264c0_func
		mov    $0x0000a0,%edx
		mov    $0x0000be,%ebx
		test   %al,%al
		je     _0364d5_jump
		mov    $0x0000f0,%edx
		mov    $0x0000a0,%ebx

	_0364d5_jump:
		push   $0x000000
		mov    $0x000002,%ecx
		mov    _0c24fc_data,%eax
		movswl %bx,%ebx
		movswl %dx,%edx
		call   _01a178_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0364f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0ccc98_data,%eax
		mov    $0x000300,%ecx
		mov    _0cec80_data,%edx
		mov    $_0c6d88_data,%esi
		sar    $0x000010,%edx
		mov    $_0c6188_data,%edi
		call   _035d64_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c7088_data,%esi
		mov    $_0c6d88_data,%edi
		mov    $_0c7088_data,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000002,%eax
		call   _03b340_func
		call   _016de7_func
		call   _016df7_func
		call   _03a2a0_func
		call   _0364b0_func
		mov    $0x000064,%edx
		mov    _0cc534_data,%ebx
		mov    $0x000009,%eax
		mov    %ebx,%ecx
		call   _037008_func
		test   %al,%al
		je     _036593_jump
		call   _037058_func
		call   _037090_func
		call   _0364b0_func

	_036593_jump:
		call   _016df7_func
		call   _016de7_func
		call   _03a2a0_func
		cmpw   $0x000000,_0ced22_data
		je     _0365d1_jump
		mov    $_0c6d88_data,%ebx

	_0365b1_jump:
		call   _016df7_func
		call   _016de7_func
		mov    $_0c7088_data,%eax
		mov    %ebx,%edx
		call   _03b3c0_func
		cmpw   $0x000000,_0ced22_data
		jne    _0365b1_jump

	_0365d1_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0365d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000064,%edx
		mov    $0x000009,%eax
		mov    _0cc534_data,%ecx
		mov    _0ccba8_data,%ebx
		call   _037020_func
		test   %al,%al
		je     _036606_jump
		call   _037058_func
		call   _037090_func

	_036606_jump:
		mov    $_0c7088_data,%edx
		mov    $0x000002,%eax
		mov    $0x000300,%ecx
		mov    $_0c6188_data,%esi
		mov    $_0c6d88_data,%edi
		call   _03b4b0_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03663c_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _07c044_func
		cli    
		mov    _0de6c8_data,%edx
		inc    %edx
		mov    $0x00000a,%ebx
		mov    %edx,_0de6c8_data
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     _03675d_jump
		mov    _0de6c0_data,%eax
		mov    _0de6c4_data,%ebx
		add    %eax,%ebx
		mov    %ebx,_0de6c4_data
		cmp    $0x000080,%ebx
		jl     _03669f_jump
		mov    %eax,%ebx
		mov    $0x000080,%edx
		neg    %ebx
		mov    %edx,_0de6c4_data
		mov    %ebx,_0de6c0_data
		jmp    _0366b6_jump

	_03669f_jump:
		cmp    $0x000020,%ebx
		jg     _0366b6_jump
		mov    $0x000020,%edi
		neg    %eax
		mov    %edi,_0de6c4_data
		mov    %eax,_0de6c0_data

	_0366b6_jump:
		mov    $0x000003,%edx
		mov    $0x00003f,%ecx

	_0366c0_jump:
		xor    %eax,%eax
		mov    _0c7088_data(%edx),%al
		mov    _0de6c4_data,%esi
		mov    %eax,%ebx
		imul   %esi,%ebx
		mov    %ecx,%eax
		sar    $0x000006,%ebx
		cmp    %ebx,%eax
		jle    _0366de_jump
		mov    %ebx,%eax

	_0366de_jump:
		mov    %al,_0c6d88_data(%edx)
		xor    %eax,%eax
		mov    _0c7089_data(%edx),%al
		mov    _0de6c4_data,%edi
		mov    %eax,%ebx
		imul   %edi,%ebx
		mov    %ecx,%eax
		sar    $0x000006,%ebx
		cmp    %ebx,%eax
		jle    _036702_jump
		mov    %ebx,%eax

	_036702_jump:
		xor    %ebx,%ebx
		mov    %al,_0c6d89_data(%edx)
		mov    _0de6c4_data,%eax
		mov    _0c708a_data(%edx),%bl
		imul   %eax,%ebx
		sar    $0x000006,%ebx
		mov    %ecx,%eax
		add    $0x000003,%edx
		cmp    %ebx,%eax
		jle    _036726_jump
		mov    %ebx,%eax

	_036726_jump:
		mov    %al,_0c6d87_data(%edx)
		cmp    $0x00001b,%edx
		jne    _0366c0_jump
		call   _016de7_func
		mov    $_0c6d88_data,%esi
		mov    $0x000008,%ecx
		mov    $0x000001,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_03675d_jump:
		mov    _0de6d0_data,%dx
		mov    _0de6cc_data,%eax
		call   _07cea0_func
		sti    
		cld    
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   



_0367e0_func:
		call   _0447e8_func
		mov    $0x000001,%eax
		ret    



_0367ec_func:
		push   %edx
		mov    _0ced22_data,%dx
		xor    %al,%al
		test   %dx,%dx
		jne    _036830_jump
		cmpw   $0x000001,_0cec3a_data
		je     _03682a_jump
		cmpb   $0x000001,_0cee94_data
		jne    _03682e_jump
		mov    $0x00001c,%eax
		call   _0406e0_func
		test   %al,%al
		jne    _03682a_jump
		mov    $0x000039,%eax
		call   _0406e0_func
		test   %al,%al
		je     _03682e_jump

	_03682a_jump:
		mov    $0x000001,%al
		pop    %edx
		ret    

	_03682e_jump:
		xor    %al,%al

	_036830_jump:
		pop    %edx
		ret    



_036834_func:
		push   %edx
		mov    _0cee94_data,%ah
		xor    %dl,%dl
		cmp    $0x000001,%ah
		jne    _036852_jump
		mov    $0x00001c,%eax
		call   _0406e0_func
		test   %al,%al
		je     _03685e_jump
		jmp    _03685c_jump

	_036852_jump:
		call   _040960_func
		test   %ax,%ax
		je     _03685e_jump

	_03685c_jump:
		mov    $0x000001,%dl

	_03685e_jump:
		mov    %dl,%al
		pop    %edx
		ret    



_036910_func:
		push   %edx
		mov    _0cee94_data,%ah
		xor    %dl,%dl
		cmp    $0x000001,%ah
		jne    _03692e_jump
		mov    $0x000001,%eax
		call   _0406e0_func
		test   %al,%al
		je     _036942_jump
		jmp    _036940_jump

	_03692e_jump:
		call   _07ce88_func
		test   %eax,%eax
		je     _036942_jump
		call   _07c0ab_func
		cmp    $0x00001b,%al
		jne    _036942_jump

	_036940_jump:
		mov    $0x000001,%dl

	_036942_jump:
		mov    %dl,%al
		pop    %edx
		ret    



_036948_func:
		push   %edx
		call   _041180_func
		call   _016e47_func
		cmpb   $0x000000,_0cee97_data
		je     _036961_jump
		call   _0704a0_func

	_036961_jump:
		cmpb   $0x0000ff,_095b14_data
		je     _03696f_jump
		call   _03c7bc_func

	_03696f_jump:
		mov    _0c2644_data,%edx
		push   %edx
		push   $_0c0708_data
		call   _07bc8c_func
		add    $0x000008,%esp
		pop    %edx
		ret    



_036990_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _040b64_func
		mov    _0cc534_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _037cc4_func
		test   %ax,%ax
		je     _0369ea_jump
		call   _0408d4_func
		test   %ax,%ax
		jne    _0369ea_jump
		call   _040960_func
		test   %ax,%ax
		jne    _0369ea_jump
		call   _0409ec_func
		test   %ax,%ax
		jne    _0369ea_jump
		call   _040a78_func
		test   %ax,%ax
		jne    _0369ea_jump
		mov    $0x000039,%eax
		call   _0406e0_func
		test   %al,%al
		je     _0369f1_jump

	_0369ea_jump:
		mov    $0x000001,%edx
		jmp    _0369f3_jump

	_0369f1_jump:
		xor    %edx,%edx

	_0369f3_jump:
		call   _037fb0_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_036a00_case:
		mov    $_0c7088_data,%eax
		call   _03bad8_func
		cmpb   $0x000001,_0961b6_data
		jne    _036a18_jump
		call   _03b880_func

	_036a18_jump:
		mov    $_036990_func,%eax
		call   _03b948_func
		mov    _0961b3_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03bb4c_func
		call   _03b8d0_func
		jmp    _03bb4c_func



_036a40_func:
		push   %edx
		call   _040b64_func
		call   _07abec_func
		test   %ax,%ax
		je     _036a86_jump
		call   _0408d4_func
		test   %ax,%ax
		jne    _036a86_jump
		call   _040960_func
		test   %ax,%ax
		jne    _036a86_jump
		call   _0409ec_func
		test   %ax,%ax
		jne    _036a86_jump
		call   _040a78_func
		test   %ax,%ax
		jne    _036a86_jump
		mov    $0x000039,%eax
		call   _0406e0_func
		test   %al,%al
		je     _036a8d_jump

	_036a86_jump:
		mov    $0x000001,%edx
		jmp    _036a8f_jump

	_036a8d_jump:
		xor    %edx,%edx

	_036a8f_jump:
		call   _07ad70_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_036a98_case:
		mov    $_0c7088_data,%eax
		call   _03bad8_func
		cmpb   $0x000001,_0961b6_data
		jne    _036ab5_jump
		call   _03b8f8_func
		call   _03b880_func

	_036ab5_jump:
		mov    $_036a40_func,%eax
		call   _03b948_func
		mov    _0961b3_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03bb4c_func
		call   _03b8d0_func
		jmp    _03bb4c_func



_036adc_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _040b64_func
		mov    _0cc534_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _025ea4_func
		test   %ax,%ax
		je     _036b36_jump
		call   _0408d4_func
		test   %ax,%ax
		jne    _036b36_jump
		call   _040960_func
		test   %ax,%ax
		jne    _036b36_jump
		call   _0409ec_func
		test   %ax,%ax
		jne    _036b36_jump
		call   _040a78_func
		test   %ax,%ax
		jne    _036b36_jump
		mov    $0x000039,%eax
		call   _0406e0_func
		test   %al,%al
		je     _036b3d_jump

	_036b36_jump:
		mov    $0x000001,%edx
		jmp    _036b3f_jump

	_036b3d_jump:
		xor    %edx,%edx

	_036b3f_jump:
		call   _026368_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_036b4c_case:
		mov    $_0c7088_data,%eax
		call   _03bad8_func
		cmpb   $0x000001,_0961b6_data
		jne    _036b69_jump
		call   _03b8f8_func
		call   _03b880_func

	_036b69_jump:
		mov    $_036adc_func,%eax
		call   _03b948_func
		mov    _0961b3_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03bb4c_func
		call   _03b8d0_func
		jmp    _03bb4c_func



_036b90_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _040b64_func
		mov    _0cc534_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _0432a4_func
		test   %ax,%ax
		je     _036bea_jump
		call   _0408d4_func
		test   %ax,%ax
		jne    _036bea_jump
		call   _040960_func
		test   %ax,%ax
		jne    _036bea_jump
		call   _0409ec_func
		test   %ax,%ax
		jne    _036bea_jump
		call   _040a78_func
		test   %ax,%ax
		jne    _036bea_jump
		mov    $0x000039,%eax
		call   _0406e0_func
		test   %al,%al
		je     _036bf1_jump

	_036bea_jump:
		mov    $0x000001,%edx
		jmp    _036bf3_jump

	_036bf1_jump:
		xor    %edx,%edx

	_036bf3_jump:
		call   _043160_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_036c00_case:
		mov    $_0c7088_data,%eax
		call   _03bad8_func
		cmpb   $0x000001,_0961b6_data
		jne    _036c1d_jump
		call   _03b8f8_func
		call   _03b880_func

	_036c1d_jump:
		mov    $_036b90_func,%eax
		call   _03b948_func
		mov    _0961b3_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03bb4c_func
		call   _03b8d0_func
		jmp    _03bb4c_func



_036c44_func:
		push   %edx
		call   _040b64_func
		call   _0706f4_func
		test   %ax,%ax
		je     _036c8a_jump
		call   _0408d4_func
		test   %ax,%ax
		jne    _036c8a_jump
		call   _040960_func
		test   %ax,%ax
		jne    _036c8a_jump
		call   _0409ec_func
		test   %ax,%ax
		jne    _036c8a_jump
		call   _040a78_func
		test   %ax,%ax
		jne    _036c8a_jump
		mov    $0x000039,%eax
		call   _0406e0_func
		test   %al,%al
		je     _036c91_jump

	_036c8a_jump:
		mov    $0x000001,%edx
		jmp    _036c93_jump

	_036c91_jump:
		xor    %edx,%edx

	_036c93_jump:
		call   _070918_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_036c9c_case:
		mov    $_0c7088_data,%eax
		call   _03bad8_func
		cmpb   $0x000001,_0961b6_data
		jne    _036cb9_jump
		call   _03b8f8_func
		call   _03b880_func

	_036cb9_jump:
		mov    $_036c44_func,%eax
		call   _03b948_func
		mov    _0961b3_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03bb4c_func
		call   _03b8d0_func
		jmp    _03bb4c_func



_036ce0_func:
		push   %ecx
		push   %edx
		push   %edi
		call   _040b64_func
		mov    _0cc534_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _05e580_func
		test   %ax,%ax
		je     _036d3a_jump
		call   _0408d4_func
		test   %ax,%ax
		jne    _036d3a_jump
		call   _040960_func
		test   %ax,%ax
		jne    _036d3a_jump
		call   _0409ec_func
		test   %ax,%ax
		jne    _036d3a_jump
		call   _040a78_func
		test   %ax,%ax
		jne    _036d3a_jump
		mov    $0x000039,%eax
		call   _0406e0_func
		test   %al,%al
		je     _036d41_jump

	_036d3a_jump:
		mov    $0x000001,%edx
		jmp    _036d43_jump

	_036d41_jump:
		xor    %edx,%edx

	_036d43_jump:
		call   _05e838_func
		mov    %edx,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		ret    

	_036d50_case:
		mov    $_0c7088_data,%eax
		call   _03bad8_func
		cmpb   $0x000001,_0961b6_data
		jne    _036d6d_jump
		call   _03b8f8_func
		call   _03b880_func

	_036d6d_jump:
		mov    $_036ce0_func,%eax
		call   _03b948_func
		mov    _0961b3_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03bb4c_func
		call   _03b8d0_func
		jmp    _03bb4c_func



_036d94_func:
		push   %edx
		call   _040b64_func
		call   _078564_func
		test   %ax,%ax
		je     _036dda_jump
		call   _0408d4_func
		test   %ax,%ax
		jne    _036dda_jump
		call   _040960_func
		test   %ax,%ax
		jne    _036dda_jump
		call   _0409ec_func
		test   %ax,%ax
		jne    _036dda_jump
		call   _040a78_func
		test   %ax,%ax
		jne    _036dda_jump
		mov    $0x000039,%eax
		call   _0406e0_func
		test   %al,%al
		je     _036de1_jump

	_036dda_jump:
		mov    $0x000001,%edx
		jmp    _036de3_jump

	_036de1_jump:
		xor    %edx,%edx

	_036de3_jump:
		call   _07864c_func
		mov    %edx,%eax
		pop    %edx
		ret    

	_036dec_case:
		mov    $_0c7088_data,%eax
		call   _03bad8_func
		cmpb   $0x000001,_0961b6_data
		jne    _036e09_jump
		call   _03b8f8_func
		call   _03b880_func

	_036e09_jump:
		mov    $_036d94_func,%eax
		call   _03b948_func
		mov    _0961b3_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _03bb4c_func
		call   _03b8d0_func
		jmp    _03bb4c_func



_036e30_func:
		cmpb   $0x000001,_0961b6_data
		jne    _036e46_jump
		mov    $0x000006,%eax
		call   _0690e0_func
		add    $0x000002,%al
		ret    

	_036e46_jump:
		mov    $0x000007,%eax
		call   _0690e0_func
		inc    %al
		ret    



_036e54_func:
		mov    $0x00000b,%eax
		call   _0690e0_func
		inc    %al
		ret    



_036e64_func:
		mov    $0x00000e,%eax
		call   _0690e0_func
		inc    %al
		ret    



_036e74_func:
		mov    $0x000006,%eax
		call   _0690e0_func
		inc    %al
		ret    

_036e84_switch:
		.long   _036f1a_case
		.long   _036f72_case
		.long   _036f34_case
		.long   _036fff_case
		.long   _036f51_case
		.long   _036faf_case
		.long   _036fda_case
		.long   _036f9c_case


	_036ea4_jump:
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dl,(%esp)
		mov    $0x000001,%edx
		cmp    $0x000009,%al
		jne    _036edb_jump
		call   _036e30_func
		mov    %al,0x000004(%esp)
		cmp    $0x000002,%al
		je     _036ec8_jump
		cmp    $0x000004,%al
		jne    _036ecf_jump

	_036ec8_jump:
		call   _036e54_func
		jmp    _036ed8_jump

	_036ecf_jump:
		cmp    $0x000006,%al
		jne    _036edb_jump
		call   _036e64_func

	_036ed8_jump:
		mov    %al,(%esp)

	_036edb_jump:
		cmpb   $0x000004,0x000004(%esp)
		jne    _036ee7_jump
		movb   $0x000002,0x000004(%esp)

	_036ee7_jump:
		movsbw _0961b6_data,%ax
		imul   %eax,%edx
		mov    (%esp),%al
		mov    %al,_0961b4_data
		mov    0x000004(%esp),%al
		mov    %al,_0961b5_data
		dec    %al
		cmp    $0x000007,%al
		ja     _036fff_case
		and    $0x0000ff,%eax
		jmp    *%cs:_036e84_switch(,%eax,4)

	_036f1a_case:
		push   %ecx
		push   %ebx
		movswl %dx,%ebx
		mov    $0x000008,%edx
		mov    $0x000078,%ecx
		mov    %edx,%eax
		call   _037bbc_func
		add    $0x000008,%esp
		ret    

	_036f34_case:
		push   %ecx
		mov    $0x000014,%eax
		mov    $0x000190,%ecx
		push   %ebx
		movswl %dx,%ebx
		mov    $0x00000a,%edx
		call   _07aae4_func
		add    $0x000008,%esp
		ret    

	_036f51_case:
		push   %ecx
		mov    $0x000014,%eax
		add    %edx,%edx
		push   %ebx
		movswl %dx,%ecx
		push   $0x000032
		mov    $0x00003d,%ebx
		mov    $0x000008,%edx
		call   _025cdc_func
		add    $0x000008,%esp
		ret    

	_036f72_case:
		mov    (%esp),%al
		cmp    $0x00000d,%al
		je     _036f7d_jump
		cmp    $0x000064,%al
		jne    _036f87_jump

	_036f7d_jump:
		call   _036e54_func
		mov    %al,_0961b4_data

	_036f87_jump:
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0961b4_data,%al
		movswl %dx,%edx
		call   _0430b4_func
		add    $0x000008,%esp
		ret    

	_036f9c_case:
		add    %edx,%edx
		mov    $0x000016,%eax
		movswl %dx,%edx
		call   _0705d0_func
		add    $0x000008,%esp
		ret    

	_036faf_case:
		mov    (%esp),%al
		cmp    $0x000010,%al
		je     _036fba_jump
		cmp    $0x000064,%al
		jne    _036fc4_jump

	_036fba_jump:
		call   _036e64_func
		mov    %al,_0961b4_data

	_036fc4_jump:
		xor    %eax,%eax
		shl    $0x000002,%edx
		mov    _0961b4_data,%al
		movswl %dx,%edx
		call   _05e4c8_func
		add    $0x000008,%esp
		ret    

	_036fda_case:
		mov    $0x0000a0,%eax
		push   %ecx
		shl    $0x000002,%edx
		push   %ebx
		movswl %dx,%ecx
		push   $0x0003e8
		mov    $0x000030,%ebx
		mov    $0x000064,%edx
		call   _07845c_func
		add    $0x000008,%esp
		ret    

	_036fff_case:
		xor    %al,%al
		add    $0x000008,%esp

	_037004_case:
		ret    



_037008_func:
		movb   $0x000001,_0961b6_data
		and    $0x0000ff,%edx
		and    $0x0000ff,%eax
		jmp    _036ea4_jump



_037020_func:
		movb   $0x0000ff,_0961b6_data
		and    $0x0000ff,%edx
		and    $0x0000ff,%eax
		jmp    _036ea4_jump

_037038_switch:
		.long   _036a00_case
		.long   _036c00_case
		.long   _036a98_case
		.long   _037004_case
		.long   _036b4c_case
		.long   _036d50_case
		.long   _036dec_case
		.long   _036c9c_case




_037058_func:
		mov    _0961b5_data,%al
		dec    %al
		cmp    $0x000007,%al
		ja     _037004_case
		and    $0x0000ff,%eax
		jmp    *%cs:_037038_switch(,%eax,4)

_037070_switch:
		.long   _037b90_case
		.long   _043088_case
		.long   _07aab8_case
		.long   _037004_case
		.long   _025ca0_case
		.long   _05e48c_case
		.long   _078430_case
		.long   _0705a4_case




_037090_func:
		mov    _0961b5_data,%al
		dec    %al
		cmp    $0x000007,%al
		ja     _037004_case
		and    $0x0000ff,%eax
		jmp    *%cs:_037070_switch(,%eax,4)



_0370ac_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ebp
		mov    %edx,(%esp)
		cmpb   $0x000001,_095b15_data
		jne    _0370fd_jump
		xor    %bl,%bl

	_0370c4_jump:
		movzbl %bl,%edi
		imul   $0x003e80,%edi,%edi
		mov    %bl,%ah
		mov    $0x003e80,%ecx
		mov    $0x0003ce,%edx
		mov    $0x000004,%al
		out    %ax,(%dx)
		mov    (%esp),%edx
		mov    %ebp,%esi
		add    %edx,%edi
		inc    %bl
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmp    $0x000004,%bl
		jae    _037116_jump
		jmp    _0370c4_jump

	_0370fd_jump:
		mov    $0x00fa00,%ecx
		mov    %ebp,%esi
		mov    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_037116_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_037120_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    %edx,%ebp
		mov    _095b15_data,%ah
		cmp    $0x000001,%ah
		jne    _037177_jump
		mov    %ah,%bl
		mov    %ebp,%edi
		xor    %bh,%bh

	_03713e_jump:
		movzbl %bh,%esi
		imul   $0x003e80,%esi,%esi
		mov    %bl,%ah
		mov    $0x003e80,%ecx
		mov    $0x0003c4,%edx
		mov    $0x000002,%al
		out    %ax,(%dx)
		mov    (%esp),%edx
		add    %bl,%bl
		add    %edx,%esi
		inc    %bh
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmp    $0x000004,%bh
		jae    _037191_jump
		jmp    _03713e_jump

	_037177_jump:
		mov    $0x00fa00,%ecx
		mov    (%esp),%esi
		mov    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_037191_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03719c_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		mov    %esp,%edx
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		lea    0x00000c(%esp),%eax
		call   _01611a_func
		mov    $0x0000c8,%edx
		mov    $0x000140,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		call   _016157_func
		push   $0x000001
		mov    $0x000002,%ecx
		mov    $0x000064,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2528_data,%eax
		call   _01a178_func
		mov    (%esp),%edx
		mov    0x000004(%esp),%ecx
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%eax
		call   _016157_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037200_jump:
		mov    $0x000001,%eax
		ret    



_037208_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0961b8_data,%bx
		cmpb   $0x000002,_0cee64_data
		jne    _037257_jump
		call   _03719c_func
		mov    $_037200_jump,%eax
		call   _03b948_func
		xor    %dl,%dl

	_03722e_jump:
		call   _016df7_func
		inc    %dl
		call   _016de7_func
		cmp    $0x00000c,%dl
		jb     _03722e_jump

	_03723f_jump:
		call   _016df7_func
		call   _016de7_func
		cmpb   $0x000000,_0cee95_data
		jne    _03723f_jump
		jmp    _037369_jump

	_037257_jump:
		mov    _0cc528_data,%edx
		mov    _0ccba8_data,%eax
		call   _0370ac_func
		mov    _0ccba4_data,%edx
		mov    _0cc528_data,%eax
		call   _037120_func
		call   _03719c_func
		mov    $_037200_jump,%eax
		call   _03b948_func
		mov    $0x00002a,%esi
		mov    $0x000036,%edi
		xor    %ecx,%ecx

	_037292_jump:
		mov    $0x00000f,%ebx
		mov    %cl,%dl
		mov    %bx,_0961b8_data

	_0372a0_jump:
		cmp    $0x000007,%dl
		ja     _0372d9_jump
		call   _016df7_func
		call   _016de7_func
		mov    %edi,%eax
		call   _0406e0_func
		test   %al,%al
		je     _0372c7_jump
		mov    %esi,%eax
		call   _0406e0_func
		test   %al,%al
		je     _0372c7_jump
		inc    %dl

	_0372c7_jump:
		mov    _0961b8_data,%bx
		dec    %bx
		mov    %bx,_0961b8_data
		jne    _0372a0_jump

	_0372d9_jump:
		mov    _0961b8_data,%bx
		cmp    $0x00000c,%dl
		jb     _0372e7_jump
		mov    %cl,%dl

	_0372e7_jump:
		mov    %bx,_0961b8_data
		test   %dl,%dl
		je     _037331_jump
		mov    _0961ba_data,%dh
		xor    $0x000001,%dh
		mov    _095b15_data,%al
		mov    %dh,_0961ba_data
		cmp    %al,%cl
		jne    _037327_jump
		mov    _0ccba4_data,%edx
		mov    _0cc528_data,%eax
		call   _037120_func
		cmp    _0961ba_data,%cl
		jne    _037327_jump
		call   _03719c_func

	_037327_jump:
		mov    $_037200_jump,%eax
		call   _03b948_func

	_037331_jump:
		mov    _0cee95_data,%dl
		mov    _0961b8_data,%bx
		cmp    %dl,%cl
		jne    _037292_jump
		cmpb   $0x000000,_095b15_data
		jne    _037369_jump
		mov    _0ccba4_data,%edx
		mov    _0cc528_data,%eax
		call   _037120_func
		mov    $_037200_jump,%eax
		call   _03b948_func

	_037369_jump:
		mov    _0961b8_data,%bx
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_037378_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %edx,%edx
		mov    _0cee8f_data,%dl
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		mov    _0961ba_data,%edx
		mov    _0961bc_data,%di
		sar    $0x000010,%edx
		inc    %edi
		cmp    %eax,%edx
		jge    _037449_jump
		mov    $0x0000a0,%ebx
		mov    _0cc534_data,%edx
		mov    _0cc528_data,%eax
		mov    %di,_0961bc_data
		call   _07a05c_func
		mov    $0x0000a0,%ebx
		mov    _0cc534_data,%edx
		mov    _0cc528_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		call   _07a05c_func
		mov    $0x000036,%eax
		call   _0406e0_func
		test   %al,%al
		je     _03742a_jump
		mov    $0x00002a,%eax
		call   _0406e0_func
		test   %al,%al
		je     _03742a_jump
		mov    _0961c0_data,%ebx
		inc    %ebx
		mov    %ebx,_0961c0_data
		cmp    $0x000005,%ebx
		jl     _037432_jump
		mov    _0961ba_data,%bl
		xor    %esi,%esi
		xor    $0x000001,%bl
		mov    %esi,_0961c0_data
		mov    %bl,_0961ba_data
		jmp    _037432_jump

	_03742a_jump:
		xor    %edx,%edx
		mov    %edx,_0961c0_data

	_037432_jump:
		cmpb   $0x000000,_0961ba_data
		jne    _03769d_jump
		call   _03719c_func
		jmp    _03769d_jump

	_037449_jump:
		jne    _03746b_jump
		mov    %di,_0961bc_data
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0961be_data
		xor    %edx,%edx
		mov    %ah,_0961ba_data
		mov    %edx,_0961c0_data

	_03746b_jump:
		cmpb   $0x000000,_0961ba_data
		jne    _037579_jump
		cmpl   $0x000014,_0961c0_data
		jl     _0374a4_jump
		mov    $0x000036,%eax
		call   _0406e0_func
		test   %al,%al
		je     _0374a4_jump
		mov    $0x00002a,%eax
		call   _0406e0_func
		test   %al,%al
		je     _0374a4_jump
		movb   $0x000001,_0961ba_data

	_0374a4_jump:
		mov    _0961be_data,%si
		test   %si,%si
		jne    _03756a_jump
		mov    _0cc534_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _05e580_func
		and    $0x00ffff,%eax
		mov    %eax,_0961c0_data
		call   _05e838_func
		call   _03719c_func
		cmpl   $0x000000,_0961c0_data
		jne    _03769d_jump
		negw   _0961b8_data
		call   _036e74_func
		mov    _0961b6_data,%edx
		mov    %al,_0961b4_data
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		call   _05e11c_func
		cmpw   $0x000000,_0961b8_data
		jge    _03769d_jump
		mov    $0x0000a0,%ebx
		mov    _0cc534_data,%edx
		mov    _0cc528_data,%eax
		call   _07a05c_func
		mov    $0x0000a0,%ebx
		mov    _0cc534_data,%edx
		mov    _0cc528_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		call   _07a05c_func
		call   _03719c_func
		xor    %eax,%eax
		mov    _0cee8f_data,%al
		mov    %ax,_0961be_data
		jmp    _03769d_jump

	_03756a_jump:
		mov    %esi,%edi
		dec    %edi
		mov    %di,_0961be_data
		jmp    _03769d_jump

	_037579_jump:
		cmpl   $0x000000,_0961c0_data
		jne    _03758c_jump
		cmpw   $0x000000,_0961b8_data
		jl     _0375cb_jump

	_03758c_jump:
		mov    _0cc534_data,%edi
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		call   _05e580_func
		and    $0x00ffff,%eax
		mov    %eax,_0961c0_data
		call   _05e838_func
		cmpl   $0x000000,_0961c0_data
		jne    _03769d_jump
		negw   _0961b8_data
		jmp    _037680_jump

	_0375cb_jump:
		mov    $0x0000a0,%ebx
		mov    _0cc534_data,%edx
		mov    _0cc528_data,%eax
		call   _07a05c_func
		mov    $0x0000a0,%ebx
		mov    _0cc534_data,%edx
		mov    _0cc528_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		mov    $0x00fa00,%ecx
		call   _07a05c_func
		call   _016df7_func
		call   _016de7_func
		mov    _095b10_data,%edi
		mov    _0cc534_data,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _037625_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_037625_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %dl,%dl

	_03762e_jump:
		mov    $0x000036,%eax
		call   _0406e0_func
		test   %al,%al
		je     _03764a_jump
		mov    $0x00002a,%eax
		call   _0406e0_func
		test   %al,%al
		jne    _037652_jump

	_03764a_jump:
		cmp    _0cee95_data,%dl
		jne    _03762e_jump

	_037652_jump:
		mov    _0cee95_data,%al
		xor    %ch,%ch
		xor    %ebx,%ebx
		mov    %ch,_0961ba_data
		mov    %bx,_0961be_data
		test   %al,%al
		je     _03769d_jump
		xor    %edi,%edi
		mov    $0xfffffffc,%ecx
		mov    %edi,_0961c0_data
		mov    %cx,_0961b8_data

	_037680_jump:
		call   _036e74_func
		mov    _0961b6_data,%edx
		mov    %al,_0961b4_data
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		call   _05e11c_func

	_03769d_jump:
		cmpb   $0x000000,_0cee95_data
		jne    _037707_jump
		mov    $0x0000a0,%ebx
		mov    _0cc534_data,%edx
		mov    _0cc528_data,%eax
		call   _07a05c_func
		mov    $0x0000a0,%ebx
		mov    _0cc534_data,%edx
		mov    _0cc528_data,%eax
		add    $0x0000a0,%edx
		add    $0x00c800,%eax
		mov    $0x00fa00,%ecx
		call   _07a05c_func
		call   _016df7_func
		call   _016de7_func
		mov    _095b10_data,%edi
		mov    _0cc534_data,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _037700_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_037700_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_037707_jump:
		cmpb   $0x000000,_0cee95_data
		sete   %al
		xor    %ah,%ah
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03771c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ah,%ah
		mov    _0cee62_data,%dl
		mov    %ah,_0961ba_data
		test   %dl,%dl
		je     _037737_jump
		call   _070234_func

	_037737_jump:
		cmpb   $0x000000,_0cee97_data
		je     _037759_jump
		mov    $_0de6d4_data,%esi
		call   _012748_func
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _029ff8_func

	_037759_jump:
		cmpb   $0x000000,_095b15_data
		jne    _0377b4_jump
		call   _036e74_func
		mov    $0xfffffffc,%edx
		mov    _0cc534_data,%ebx
		mov    %al,_0961b4_data
		mov    %dx,_0961b8_data
		mov    $0xfffffffc,%edx
		and    $0x0000ff,%eax
		mov    %ebx,%ecx
		call   _05e4c8_func
		test   %al,%al
		je     _0377b4_jump
		xor    %ebx,%ebx
		mov    $_037378_func,%eax
		mov    %bx,_0961bc_data
		mov    %bx,_0961be_data
		call   _03b948_func
		call   _05e48c_case
		jmp    _0377b9_jump

	_0377b4_jump:
		call   _037208_func

	_0377b9_jump:
		cmpb   $0x000000,_0cee97_data
		je     _0377f7_jump
		mov    $_0de6d8_data,%esi
		call   _012748_func
		mov    _0de6d8_data,%ebx
		mov    _0de6d4_data,%edx
		mov    _0ccca4_data,%ecx
		sub    %edx,%ebx
		add    %ebx,%ecx
		mov    %ecx,_0ccca4_data
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _02a020_func

	_0377f7_jump:
		cmpb   $0x000000,_0cee62_data
		je     _037805_jump
		call   _070248_func

	_037805_jump:
		xor    %ch,%ch
		xor    %esi,%esi
		mov    %ch,_0cee95_data
		mov    %esi,_0cc3d8_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_037820_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    _0de6dc_data,%ecx
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		add    %eax,%eax
		mov    0x00001c(%ecx),%ebp
		call   _07b7c4_func
		mov    %eax,(%esp)
		test   %eax,%eax
		je     _03793b_jump
		mov    0x000002(%ecx),%dx
		xor    %eax,%eax
		test   %dx,%dx
		jbe    _037876_jump

	_037855_jump:
		xor    %edx,%edx
		mov    %ax,%dx
		imul   $0x00006c,%edx,%ebx
		mov    (%esp),%edi
		add    %edx,%edx
		add    %edx,%edi
		mov    0x000034(%ebx,%ebp,1),%dx
		mov    %dx,(%edi)
		inc    %eax
		mov    0x000002(%ecx),%bx
		cmp    %bx,%ax
		jb     _037855_jump

	_037876_jump:
		xor    %edi,%edi
		mov    0x000002(%ecx),%ax
		mov    %edi,0x000008(%esp)
		test   %ax,%ax
		jbe    _037934_jump

	_037889_jump:
		mov    0x000008(%esp),%eax
		mov    0x000002(%ecx),%di
		mov    $0xffff8000,%ebx
		cmp    %di,%ax
		jae    _0378ba_jump

	_03789b_jump:
		xor    %edx,%edx
		mov    %ax,%dx
		mov    (%esp),%edi
		add    %edx,%edx
		add    %edi,%edx
		mov    (%edx),%di
		cmp    %di,%bx
		jge    _0378b3_jump
		mov    %edi,%ebx
		mov    %eax,%esi

	_0378b3_jump:
		inc    %eax
		cmp    0x000002(%ecx),%ax
		jb     _03789b_jump

	_0378ba_jump:
		mov    0x000008(%esp),%ebx
		cmp    %bx,%si
		je     _03791e_jump
		xor    %edx,%edx
		mov    %bx,%dx
		imul   $0x00006c,%edx,%ebx
		mov    0x000068(%ebx,%ebp,1),%ax
		mov    %eax,0x00000c(%esp)
		xor    %eax,%eax
		mov    %si,%ax
		mov    %eax,0x000004(%esp)
		imul   $0x00006c,%eax,%eax
		mov    0x000068(%eax,%ebp,1),%di
		mov    %di,0x000068(%ebx,%ebp,1)
		mov    0x00000c(%esp),%ebx
		mov    %bx,0x000068(%eax,%ebp,1)
		lea    0x000000(,%edx,2),%eax
		add    (%esp),%eax
		mov    (%eax),%dx
		mov    %edx,0x00000c(%esp)
		mov    0x000004(%esp),%edx
		mov    (%esp),%ebx
		add    %edx,%edx
		mov    (%edx,%ebx,1),%bx
		mov    %bx,(%eax)
		add    (%esp),%edx
		mov    0x00000c(%esp),%eax
		mov    %ax,(%edx)

	_03791e_jump:
		mov    0x000008(%esp),%edx
		inc    %edx
		mov    0x000002(%ecx),%bx
		mov    %edx,0x000008(%esp)
		cmp    %bx,%dx
		jb     _037889_jump

	_037934_jump:
		mov    %esp,%eax
		call   _07b7dc_func

	_03793b_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_037948_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    %edx,%ebx
		mov    $0x000140,%eax
		mov    _0de6dc_data,%edi
		mov    %eax,%edx
		movzbl (%edi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %al,0x000008(%esp)
		mov    $0x0000c8,%eax
		mov    %eax,%edx
		movzbl 0x000001(%edi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00001c(%edi),%ecx
		mov    %al,0x00000c(%esp)
		call   _010010_func
		movw   $0x000000,0x000004(%edi)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _0379a0_jump
		mov    %ebx,%eax

	_0379a0_jump:
		mov    %ax,0x000006(%edi)
		test   %si,%si
		jl     _0379b9_jump
		mov    $0x000001,%eax
		movswl %si,%ebx
		cmp    %ebx,%eax
		jge    _0379b7_jump
		mov    %ebx,%eax

	_0379b7_jump:
		jmp    _0379cb_jump

	_0379b9_jump:
		movswl %si,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _0379c9_jump
		mov    %ebx,%eax

	_0379c9_jump:
		neg    %eax

	_0379cb_jump:
		mov    0x000002(%edi),%dx
		xor    %esi,%esi
		mov    %ax,0x000008(%edi)
		test   %dx,%dx
		jbe    _037b81_jump

	_0379de_jump:
		xor    %ebx,%ebx
		mov    %si,%bx
		movzbl (%edi),%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		imul   %eax,%edx
		mov    %edx,(%esp)
		mov    (%esp),%edx
		mov    %dx,0x000004(%esp)
		xor    %edx,%edx
		mov    0x000004(%esp),%dx
		mov    %edx,0x00000c(%ecx)
		add    %edx,%eax
		mov    %edx,(%ecx)
		dec    %eax
		mov    %ebx,%edx
		mov    %eax,0x000024(%ecx)
		sar    $0x00001f,%edx
		mov    %eax,0x000018(%ecx)
		mov    %ebx,%eax
		movzbl (%edi),%ebp
		idiv   %ebp
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   %eax,%edx
		xor    %ebx,%ebx
		mov    %dx,%bx
		movl   $0x000200,0x00002c(%ecx)
		add    %ebx,%eax
		mov    %ebx,0x000028(%ecx)
		dec    %eax
		mov    %eax,0x00001c(%ecx)
		mov    %eax,0x000010(%ecx)
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x000020(%ecx)
		mov    %eax,0x000014(%ecx)
		mov    %eax,0x000008(%ecx)
		mov    0x000004(%esp),%eax
		mov    %ebx,0x000004(%ecx)
		cmp    $0x0000a0,%ax
		jae    _037a68_jump
		mov    0x000014(%edi),%eax
		mov    %eax,0x00003c(%ecx)
		jmp    _037a7d_jump

	_037a68_jump:
		mov    0x000004(%esp),%ebx
		mov    0x000018(%edi),%eax
		sub    $0x0000a0,%ebx
		mov    %eax,0x00003c(%ecx)
		mov    %bx,0x000004(%esp)

	_037a7d_jump:
		mov    0x000004(%esp),%al
		mov    %al,0x000062(%ecx)
		mov    %al,0x000060(%ecx)
		add    0x000008(%esp),%al
		dec    %al
		mov    %al,0x000066(%ecx)
		mov    $0x00000a,%ebx
		mov    %al,0x000064(%ecx)
		mov    0x00000c(%esp),%al
		mov    %dl,0x000067(%ecx)
		add    %dl,%al
		mov    %dl,0x000061(%ecx)
		dec    %al
		xor    %edx,%edx
		mov    %al,0x000065(%ecx)
		mov    %si,%dx
		mov    %al,0x000063(%ecx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000005,%edx
		jge    _037ad0_jump
		call   _07cf1e_func
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		jmp    _037ae4_jump

	_037ad0_jump:
		call   _07cf1e_func
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000002,%edx

	_037ae4_jump:
		mov    %dx,0x000030(%ecx)
		call   _07cf1e_func
		mov    %eax,%edx
		mov    $0x000008,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000006,%edx
		mov    %dx,0x000032(%ecx)
		call   _07cf1e_func
		mov    %eax,%edx
		mov    $0x000005,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		sub    $0x000002,%edx
		mov    %dx,0x000034(%ecx)
		call   _07cf1e_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x000002,%edx
		mov    %dl,0x000039(%ecx)
		call   _07cf1e_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		add    $0x000002,%edx
		mov    %dl,0x00003a(%ecx)
		call   _07cf1e_func
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000039(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		mov    %al,0x000036(%ecx)
		mov    0x00003a(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		add    $0x000002,%edx
		mov    %dl,0x00003b(%ecx)
		mov    %al,0x000037(%ecx)
		mov    0x00003b(%ecx),%al
		mov    $0x000005,%ah
		mul    %ah
		mov    %si,0x000068(%ecx)
		mov    %al,0x000038(%ecx)
		inc    %esi
		mov    0x000002(%edi),%bx
		add    $0x00006c,%ecx
		cmp    %bx,%si
		jb     _0379de_jump

	_037b81_jump:
		call   _037820_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx

	_037b8e_jump:
		ret    

	_037b90_case:
		mov    _0de6dc_data,%eax
		test   %eax,%eax
		je     _037b8e_jump
		cmpl   $0x000000,0x00001c(%eax)
		je     _037ba7_jump
		add    $0x00001c,%eax
		call   _07b7dc_func

	_037ba7_jump:
		cmpl   $0x000000,_0de6dc_data
		je     _037b8e_jump
		mov    $_0de6dc_data,%eax
		jmp    _07b7dc_func



_037bbc_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,%edi
		mov    %bx,0x000008(%esp)
		mov    %ecx,(%esp)
		mov    0x000018(%esp),%edx
		xor    %cl,%cl
		test   %edx,%edx
		je     _037c76_jump
		cmpl   $0x000000,0x00001c(%esp)
		je     _037c76_jump
		mov    $0x000020,%eax
		call   _07b7c4_func
		mov    %eax,%edx
		mov    %eax,_0de6dc_data
		test   %eax,%eax
		je     _037c76_jump
		xor    %ebx,%ebx
		mov    %eax,%esi
		mov    0x000004(%esp),%bx
		mov    $0x000002,%eax
		cmp    %ebx,%eax
		jge    _037c11_jump
		mov    %ebx,%eax

	_037c11_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    $0x000001,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _037c23_jump
		mov    %ebx,%eax

	_037c23_jump:
		xor    %bh,%bh
		mov    %al,0x000001(%edx)
		mov    (%edx),%bl
		xor    %ah,%ah
		imul   %eax,%ebx
		mov    0x000018(%esp),%eax
		mov    %bx,0x000002(%edx)
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%edx)
		mov    0x00001c(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,8),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		call   _07b7c4_func
		mov    %eax,0x00001c(%edx)
		test   %eax,%eax
		je     _037c76_jump
		mov    _0cc528_data,%eax
		mov    %eax,0x000014(%edx)
		add    $0x00c800,%eax
		mov    $0x000001,%cl
		mov    %eax,0x000018(%edx)

	_037c76_jump:
		test   %cl,%cl
		je     _037cb3_jump
		mov    $0x0000a0,%ebx
		mov    0x000014(%esi),%edx
		mov    0x00000c(%esi),%eax
		call   _07a010_func
		mov    $0x0000a0,%ebx
		mov    0x00000c(%esi),%eax
		mov    0x000018(%esi),%edx
		add    $0x0000a0,%eax
		call   _07a010_func
		xor    %edx,%edx
		mov    0x000006(%esp),%eax
		mov    (%esp),%dx
		sar    $0x000010,%eax
		call   _037948_func
		jmp    _037cb8_jump

	_037cb3_jump:
		call   _037b90_case

	_037cb8_jump:
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_037cc4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		mov    _0de6dc_data,%eax
		mov    %eax,0x000010(%esp)
		mov    0x00001c(%eax),%ecx
		mov    0x000006(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _037ce5_jump
		neg    %eax

	_037ce5_jump:
		mov    %al,0x00002c(%esp)
		mov    0x000010(%esp),%eax
		xor    %edx,%edx
		mov    0x000002(%eax),%bx
		mov    %edx,0x000020(%esp)
		test   %bx,%bx
		jbe    _037f20_jump

	_037d00_jump:
		mov    (%ecx),%eax
		add    0x000018(%ecx),%eax
		sar    %eax
		mov    0x00001c(%ecx),%ebx
		mov    %eax,0x000004(%esp)
		mov    0x000004(%ecx),%eax
		add    %ebx,%eax
		sar    %eax
		mov    0x000020(%ecx),%esi
		mov    %eax,0x00001c(%esp)
		mov    0x000008(%ecx),%eax
		xor    %bl,%bl
		add    %esi,%eax
		mov    %bl,0x000030(%esp)
		sar    %eax
		mov    %bl,0x000034(%esp)
		mov    %eax,0x000018(%esp)

	_037d31_jump:
		xor    %dl,%dl
		cmpb   $0x000000,0x00002c(%esp)
		jbe    _037d8e_jump

	_037d3a_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    0x00002e(%ecx),%ebx
		sar    $0x000010,%ebx
		add    %ebx,(%ecx,%eax,1)
		mov    0x000030(%ecx),%ebx
		mov    0x000004(%ecx,%eax,1),%esi
		sar    $0x000010,%ebx
		add    %ebx,%esi
		mov    0x000008(%ecx,%eax,1),%edi
		mov    %esi,0x000004(%ecx,%eax,1)
		cmp    $0x000032,%edi
		jge    _037d6b_jump
		movw   $0x000000,0x000034(%ecx)

	_037d6b_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x00000c,%eax,%eax
		mov    0x000032(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    0x000008(%ecx,%eax,1),%edi
		inc    %dl
		add    %ebx,%edi
		mov    0x00002c(%esp),%bl
		mov    %edi,0x000008(%ecx,%eax,1)
		cmp    %bl,%dl
		jb     _037d3a_jump

	_037d8e_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x00000c,%eax,%eax
		lea    (%eax,%ecx,1),%esi
		mov    0x000004(%esp),%edi
		mov    (%esi),%eax
		mov    0x000018(%esp),%edx
		sub    %edi,%eax
		mov    0x000004(%esi),%ebp
		mov    %eax,(%esp)
		mov    0x00001c(%esp),%eax
		lea    0x000028(%esp),%ebx
		sub    %eax,%ebp
		xor    %eax,%eax
		mov    0x000008(%esi),%esi
		mov    0x000038(%ecx),%al
		sub    %edx,%esi
		add    %eax,%eax
		lea    0x000024(%esp),%edx
		cwtl   
		call   _05bdcc_func
		mov    0x000026(%esp),%eax
		mov    (%esp),%edi
		sar    $0x000010,%eax
		imul   %eax,%edi
		mov    0x000022(%esp),%ebx
		mov    %ebp,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		imul   %eax,%ebp
		sub    %edx,%edi
		imul   (%esp),%ebx
		xor    %eax,%eax
		mov    0x000037(%ecx),%al
		add    %eax,%eax
		sar    $0x000009,%edi
		cwtl   
		lea    0x000024(%esp),%edx
		add    %ebx,%ebp
		lea    0x000028(%esp),%ebx
		mov    %edi,(%esp)
		call   _05bdcc_func
		mov    0x000022(%esp),%ebx
		mov    %esi,%edi
		sar    $0x000010,%ebx
		imul   %ebx,%edi
		mov    0x000026(%esp),%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		imul   %esi,%eax
		imul   (%esp),%ebx
		add    %edx,%edi
		mov    %eax,%esi
		xor    %eax,%eax
		lea    0x000024(%esp),%edx
		mov    0x000036(%ecx),%al
		sub    %ebx,%esi
		add    %eax,%eax
		lea    0x000028(%esp),%ebx
		cwtl   
		sar    $0x000009,%esi
		call   _05bdcc_func
		mov    0x000022(%esp),%ebx
		mov    %esi,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		imul   %eax,%esi
		sar    $0x000009,%ebp
		imul   %ebp,%ebx
		mov    %edx,0x000008(%esp)
		mov    %ebp,%edx
		imul   %eax,%edx
		mov    0x000018(%esp),%ebp
		sub    %ebx,%esi
		mov    %edx,0x00000c(%esp)
		mov    0x000008(%esp),%edx
		sar    $0x000009,%esi
		add    0x00000c(%esp),%edx
		mov    %edi,%eax
		mov    %edx,0x000014(%esp)
		mov    %edi,%edx
		add    %ebp,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		xor    %ebx,%ebx
		mov    0x000004(%esp),%edx
		mov    0x000034(%esp),%bl
		add    %edx,%eax
		mov    %eax,0x000040(%ecx,%ebx,4)
		mov    0x000014(%esp),%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		mov    0x00001c(%esp),%esi
		add    %esi,%eax
		mov    %eax,0x000044(%ecx,%ebx,4)
		mov    0x000030(%esp),%al
		inc    %al
		mov    %al,0x000030(%esp)
		mov    %bl,%ah
		add    $0x000002,%ah
		mov    %ah,0x000034(%esp)
		cmp    $0x000004,%al
		jb     _037d31_jump
		mov    0x00002c(%esp),%al
		mulb   0x000039(%ecx)
		mov    0x000036(%ecx),%dh
		mov    0x00003a(%ecx),%bl
		add    %al,%dh
		mov    0x00002c(%esp),%al
		mul    %bl
		mov    %dh,0x000036(%ecx)
		mov    0x000037(%ecx),%bh
		mov    0x00003b(%ecx),%dl
		add    %al,%bh
		mov    0x00002c(%esp),%al
		mul    %dl
		mov    0x000038(%ecx),%dh
		add    $0x00006c,%ecx
		add    %al,%dh
		mov    0x000020(%esp),%esi
		mov    %dh,-0x000034(%ecx)
		mov    0x000010(%esp),%edx
		mov    %bh,-0x000035(%ecx)
		inc    %esi
		mov    0x000002(%edx),%di
		mov    %esi,0x000020(%esp)
		cmp    %di,%si
		jb     _037d00_jump

	_037f20_jump:
		mov    0x000010(%esp),%eax
		cmpw   $0x000014,0x000004(%eax)
		jbe    _037f78_jump
		xor    %edx,%edx
		mov    0x000004(%eax),%dx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _037f78_jump
		mov    0x000010(%esp),%ebx
		mov    0x000010(%esp),%eax
		xor    %edx,%edx
		mov    0x000002(%ebx),%cx
		mov    0x00001c(%eax),%eax
		test   %cx,%cx
		jbe    _037f78_jump

	_037f57_jump:
		xor    %ebx,%ebx
		mov    0x000032(%eax),%si
		mov    0x00002c(%esp),%bl
		add    %ebx,%esi
		mov    0x000010(%esp),%ebx
		mov    %si,0x000032(%eax)
		inc    %edx
		mov    0x000002(%ebx),%di
		add    $0x00006c,%eax
		cmp    %di,%dx
		jb     _037f57_jump

	_037f78_jump:
		xor    %ah,%ah
		mov    0x000010(%esp),%edx
		mov    0x00002c(%esp),%al
		mov    0x000004(%edx),%bx
		add    %eax,%ebx
		mov    0x000006(%edx),%cx
		mov    %bx,0x000004(%edx)
		cmp    %cx,%bx
		jbe    _037f9b_jump
		movw   $0x000000,0x000004(%edx)

	_037f9b_jump:
		mov    0x000010(%esp),%eax
		mov    0x000004(%eax),%ax
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_037fb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0de6dc_data,%ecx
		mov    0x00001c(%ecx),%edi
		xor    %ebx,%ebx
		mov    %edi,%edx
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		cmp    %eax,%ebx
		jl     _037fd2_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_037fd2_jump:
		xor    %eax,%eax
		mov    0x000068(%edx),%ax
		imul   $0x00006c,%eax,%eax
		add    %edi,%eax
		lea    0x00003c(%eax),%esi
		add    $0x00006c,%edx
		mov    0x000010(%ecx),%eax
		inc    %ebx
		call   _010045_func
		xor    %eax,%eax
		mov    0x000002(%ecx),%ax
		cmp    %eax,%ebx
		jl     _037fd2_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038000_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi

	_038007_jump:
		movswl %si,%edx
		imul   $0x0000d8,%edx,%edx
		mov    $_0cb978_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		test   %ecx,%ecx
		je     _038078_jump
		mov    $0x000002,%cl
		mov    $0x0000bc,%edi
		mov    %cl,_0cba4c_data(%edx)
		xor    %al,%al
		mov    %di,_0cba4a_data(%edx)
		mov    %al,_0cba4d_data(%edx)
		mov    %al,_0cba4e_data(%edx)
		movw   $0x000096,_0cba48_data(%edx)
		mov    $0x000005,%ch
		mov    %ebx,%eax
		mov    %ch,_0cba4f_data(%edx)
		call   _01ec48_func
		mov    _0cba40_data(%edx),%bx
		mov    %bx,_0cba48_data(%edx)
		movb   $0x000020,_0cb978_data(%edx)
		jmp    _038080_jump

	_038078_jump:
		xor    %ah,%ah
		mov    %ah,_0cba4d_data(%edx)

	_038080_jump:
		inc    %esi
		cmp    $0x000009,%si
		jle    _038007_jump
		mov    $0x0000ff,%bh
		mov    %bh,_0ceea4_data
		mov    %bh,_0cee9e_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03809c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cc1f0_data,%edx
		mov    _0cc1f4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _038117_jump

	_0380b3_jump:
		cmpw   $0x0000ee,0x000060(%edx)
		jne    _03810b_jump
		mov    0x000081(%edx),%cl
		test   $0x000004,%cl
		jne    _03810b_jump
		mov    %cl,%ch
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ch
		mov    %edx,%eax
		mov    %ch,0x000081(%edx)
		call   _01f304_func
		movw   $0x000008,0x000040(%edx)
		mov    0x000081(%edx),%al
		movw   $0x000000,0x000042(%edx)
		or     $0x000008,%al
		mov    %al,0x000081(%edx)
		mov    0x000034(%edx),%ax
		movb   $0x000000,0x00006b(%edx)
		mov    %ax,_0cec64_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03810b_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _0380b3_jump

	_038117_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03811c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0000ff,%ah
		mov    _0cee79_data,%dl
		mov    %ah,_0ceea4_data
		test   %dl,%dl
		jne    _038139_jump
		mov    %dl,_0ca315_data

	_038139_jump:
		xor    %bl,%bl
		mov    %bl,_0cee9c_data
		call   _01eaa8_func
		mov    _0cecd4_data,%si
		cmp    $0x000002,%si
		jb     _038168_jump
		jbe    _038635_jump
		cmp    $0x000003,%si
		je     _0387ea_jump
		jmp    _0389a5_jump

	_038168_jump:
		cmp    $0x000001,%si
		jne    _0389a5_jump
		mov    _0cecc0_data,%si
		cmp    $0x000008,%si
		jb     _038194_jump
		jbe    _03832d_jump
		cmp    $0x000011,%si
		je     _0384ab_jump
		jmp    _0389a5_jump

	_038194_jump:
		cmp    $0x000003,%si
		jne    _0389a5_jump
		mov    $0x000001,%ah
		mov    $_0cb978_data,%edi
		mov    _0c2358_data,%esi
		mov    %ah,_0cee9c_data
		push   %edi

	_0381b2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0381ca_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0381b2_jump

	_0381ca_jump:
		pop    %edi
		mov    $_0cba50_data,%edi
		mov    _0c235c_data,%esi
		push   %edi

	_0381d7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0381ef_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0381d7_jump

	_0381ef_jump:
		pop    %edi
		mov    $_0cbb28_data,%edi
		mov    _0c2360_data,%esi
		push   %edi

	_0381fc_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038214_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0381fc_jump

	_038214_jump:
		pop    %edi
		mov    $_0cbc00_data,%edi
		mov    _0c2364_data,%esi
		push   %edi

	_038221_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038239_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038221_jump

	_038239_jump:
		pop    %edi
		mov    $_0cbcd8_data,%edi
		mov    _0c2368_data,%esi
		push   %edi

	_038246_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03825e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038246_jump

	_03825e_jump:
		pop    %edi
		mov    $_0cbdb0_data,%edi
		mov    _0c236c_data,%esi
		push   %edi

	_03826b_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038283_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03826b_jump

	_038283_jump:
		pop    %edi
		mov    $_0cbe88_data,%edi
		mov    _0c2370_data,%esi
		push   %edi

	_038290_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0382a8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038290_jump

	_0382a8_jump:
		pop    %edi
		mov    $_0cbf60_data,%edi
		mov    _0c2374_data,%esi
		push   %edi

	_0382b5_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0382cd_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0382b5_jump

	_0382cd_jump:
		pop    %edi
		mov    $_0cc038_data,%edi
		mov    _0c2378_data,%esi
		push   %edi

	_0382da_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0382f2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0382da_jump

	_0382f2_jump:
		pop    %edi
		mov    $_0cc110_data,%edi
		mov    _0c237c_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_038304_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03831c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038304_jump

	_03831c_jump:
		pop    %edi
		mov    _0c4c78_data,%edx
		mov    $_0cbf60_data,%eax
		jmp    _03899d_jump

	_03832d_jump:
		mov    $0x000001,%al
		mov    $_0cb978_data,%edi
		mov    _0c2380_data,%esi
		mov    %al,_0cee9c_data
		push   %edi

	_038340_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038358_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038340_jump

	_038358_jump:
		pop    %edi
		mov    $_0cba50_data,%edi
		mov    _0c2384_data,%esi
		push   %edi

	_038365_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03837d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038365_jump

	_03837d_jump:
		pop    %edi
		mov    $_0cbb28_data,%edi
		mov    _0c2388_data,%esi
		push   %edi

	_03838a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0383a2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03838a_jump

	_0383a2_jump:
		pop    %edi
		mov    $_0cbc00_data,%edi
		mov    _0c238c_data,%esi
		push   %edi

	_0383af_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0383c7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0383af_jump

	_0383c7_jump:
		pop    %edi
		mov    $_0cbcd8_data,%edi
		mov    _0c2390_data,%esi
		push   %edi

	_0383d4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0383ec_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0383d4_jump

	_0383ec_jump:
		pop    %edi
		mov    $_0cbdb0_data,%edi
		mov    _0c2394_data,%esi
		push   %edi

	_0383f9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038411_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0383f9_jump

	_038411_jump:
		pop    %edi
		mov    $_0cbe88_data,%edi
		mov    _0c2398_data,%esi
		push   %edi

	_03841e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038436_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03841e_jump

	_038436_jump:
		pop    %edi
		mov    $_0cbf60_data,%edi
		mov    _0c239c_data,%esi
		push   %edi

	_038443_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03845b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038443_jump

	_03845b_jump:
		pop    %edi
		mov    $_0cc038_data,%edi
		mov    _0c23a0_data,%esi
		push   %edi

	_038468_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038480_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038468_jump

	_038480_jump:
		pop    %edi
		mov    $_0cc110_data,%edi
		mov    _0c23a4_data,%esi
		push   %edi

	_03848d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0384a5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03848d_jump

	_0384a5_jump:
		pop    %edi
		jmp    _0389a5_jump

	_0384ab_jump:
		mov    $0x000001,%ch
		mov    $_0cb978_data,%edi
		mov    _0c23a8_data,%esi
		mov    %ch,_0cee9c_data
		push   %edi

	_0384bf_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0384d7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0384bf_jump

	_0384d7_jump:
		pop    %edi
		mov    $_0cba50_data,%edi
		mov    _0c23ac_data,%esi
		push   %edi

	_0384e4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0384fc_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0384e4_jump

	_0384fc_jump:
		pop    %edi
		mov    $_0cbb28_data,%edi
		mov    _0c23b0_data,%esi
		push   %edi

	_038509_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038521_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038509_jump

	_038521_jump:
		pop    %edi
		mov    $_0cbc00_data,%edi
		mov    _0c23b4_data,%esi
		push   %edi

	_03852e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038546_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03852e_jump

	_038546_jump:
		pop    %edi
		mov    $_0cbcd8_data,%edi
		mov    _0c23b8_data,%esi
		push   %edi

	_038553_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03856b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038553_jump

	_03856b_jump:
		pop    %edi
		mov    $_0cbdb0_data,%edi
		mov    _0c23bc_data,%esi
		push   %edi

	_038578_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038590_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038578_jump

	_038590_jump:
		pop    %edi
		mov    $_0cbe88_data,%edi
		mov    _0c23c0_data,%esi
		push   %edi

	_03859d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0385b5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03859d_jump

	_0385b5_jump:
		pop    %edi
		mov    $_0cbf60_data,%edi
		mov    _0c23c4_data,%esi
		push   %edi

	_0385c2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0385da_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0385c2_jump

	_0385da_jump:
		pop    %edi
		mov    $_0cc038_data,%edi
		mov    _0c23c8_data,%esi
		push   %edi

	_0385e7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0385ff_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0385e7_jump

	_0385ff_jump:
		pop    %edi
		mov    $_0cc110_data,%edi
		mov    _0c23cc_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_038611_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038629_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038611_jump

	_038629_jump:
		pop    %edi
		mov    _0c4c78_data,%edx
		jmp    _038998_jump

	_038635_jump:
		mov    _0cecc0_data,%dx
		cmp    $0x00000b,%dx
		jne    _0389a5_jump
		mov    $0x000001,%cl
		mov    $_0cb978_data,%edi
		mov    _0c23d0_data,%esi
		mov    %cl,_0cee9c_data
		push   %edi

	_03865a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038672_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03865a_jump

	_038672_jump:
		pop    %edi
		mov    $_0cba50_data,%edi
		mov    _0c23d4_data,%esi
		push   %edi

	_03867f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038697_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03867f_jump

	_038697_jump:
		pop    %edi
		mov    $_0cbb28_data,%edi
		mov    _0c23d8_data,%esi
		push   %edi

	_0386a4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0386bc_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0386a4_jump

	_0386bc_jump:
		pop    %edi
		mov    $_0cbc00_data,%edi
		mov    _0c23dc_data,%esi
		push   %edi

	_0386c9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0386e1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0386c9_jump

	_0386e1_jump:
		pop    %edi
		mov    $_0cbcd8_data,%edi
		mov    _0c23e0_data,%esi
		push   %edi

	_0386ee_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038706_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0386ee_jump

	_038706_jump:
		pop    %edi
		mov    $_0cbdb0_data,%edi
		mov    _0c23e4_data,%esi
		push   %edi

	_038713_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03872b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038713_jump

	_03872b_jump:
		pop    %edi
		mov    $_0cbe88_data,%edi
		mov    _0c23e8_data,%esi
		push   %edi

	_038738_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038750_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038738_jump

	_038750_jump:
		pop    %edi
		mov    $_0cbf60_data,%edi
		mov    _0c23ec_data,%esi
		push   %edi

	_03875d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038775_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03875d_jump

	_038775_jump:
		pop    %edi
		mov    $_0cc038_data,%edi
		mov    _0c23f0_data,%esi
		push   %edi

	_038782_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03879a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038782_jump

	_03879a_jump:
		pop    %edi
		mov    $_0cc110_data,%edi
		mov    _0c23f4_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_0387ac_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0387c4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0387ac_jump

	_0387c4_jump:
		pop    %edi
		mov    _0c4c76_data,%edx
		mov    $_0cc038_data,%eax
		sar    $0x000010,%edx
		call   _01eebc_func
		mov    $0x0000ff,%ebx
		mov    _0c4c76_data,%edx
		mov    %edi,%eax
		jmp    _03899d_jump

	_0387ea_jump:
		mov    _0cecc0_data,%dx
		cmp    $0x00000b,%dx
		jne    _0389a5_jump
		mov    $0x000001,%bh
		mov    $_0cb978_data,%edi
		mov    _0c23f8_data,%esi
		mov    %bh,_0cee9c_data
		push   %edi

	_03880f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038827_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03880f_jump

	_038827_jump:
		pop    %edi
		mov    $_0cba50_data,%edi
		mov    _0c23fc_data,%esi
		push   %edi

	_038834_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03884c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038834_jump

	_03884c_jump:
		pop    %edi
		mov    $_0cbb28_data,%edi
		mov    _0c2400_data,%esi
		push   %edi

	_038859_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038871_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038859_jump

	_038871_jump:
		pop    %edi
		mov    $_0cbc00_data,%edi
		mov    _0c2404_data,%esi
		push   %edi

	_03887e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038896_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03887e_jump

	_038896_jump:
		pop    %edi
		mov    $_0cbcd8_data,%edi
		mov    _0c2408_data,%esi
		push   %edi

	_0388a3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0388bb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0388a3_jump

	_0388bb_jump:
		pop    %edi
		mov    $_0cbdb0_data,%edi
		mov    _0c240c_data,%esi
		push   %edi

	_0388c8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0388e0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0388c8_jump

	_0388e0_jump:
		pop    %edi
		mov    $_0cbe88_data,%edi
		mov    _0c2410_data,%esi
		push   %edi

	_0388ed_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038905_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0388ed_jump

	_038905_jump:
		pop    %edi
		mov    $_0cbf60_data,%edi
		mov    _0c2414_data,%esi
		push   %edi

	_038912_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03892a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038912_jump

	_03892a_jump:
		pop    %edi
		mov    $_0cc038_data,%edi
		mov    _0c2418_data,%esi
		push   %edi

	_038937_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03894f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038937_jump

	_03894f_jump:
		pop    %edi
		mov    $_0cc110_data,%edi
		mov    _0c241c_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_038961_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _038979_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _038961_jump

	_038979_jump:
		pop    %edi
		mov    _0c4c7c_data,%edx
		mov    $_0cbf60_data,%eax
		sar    $0x000010,%edx
		call   _01eebc_func
		mov    $0x0000ff,%ebx
		mov    _0c4c7c_data,%edx

	_038998_jump:
		mov    $_0cc038_data,%eax

	_03899d_jump:
		sar    $0x000010,%edx
		call   _01eebc_func

	_0389a5_jump:
		cmpb   $0x000000,_0cee9c_data
		je     _0389b8_jump
		call   _038000_func
		call   _03809c_func

	_0389b8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0389c0_func:
		push   %ebx
		xor    %ebx,%ebx
		mov    0x00007f(%eax),%bl
		cmp    %dx,%bx
		jge    _0389d4_jump
		mov    %bl,%dl
		inc    %dl
		mov    %dl,0x00007f(%eax)
		pop    %ebx
		ret    

	_0389d4_jump:
		movb   $0x000000,0x00007f(%eax)
		incb   _0ceea4_data
		pop    %ebx
		ret    

_0389e0_switch:
		.long   _038b02_case
		.long   _038a11_case
		.long   _038a69_case
		.long   _038a96_case
		.long   _038ab7_case




_0389f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x00007d(%eax),%al
		cmp    $0x000004,%al
		ja     _038b02_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0389e0_switch(,%eax,4)

	_038a11_case:
		mov    $0x000064,%edx
		mov    %ecx,%eax
		call   _0389c0_func
		mov    _0ceea4_data,%bl
		cmp    $0x000005,%bl
		je     _038a48_jump
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000000,_0cb978_data(,%eax,8)
		jne    _038b09_jump

	_038a48_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _05efb0_func
		movb   $0x000000,0x00007d(%ecx)
		mov    $0x0000ff,%al
		movb   $0x000000,0x00007f(%ecx)
		mov    %al,_0ceea4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_038a69_case:
		mov    $0x00006e,%edx
		mov    %ecx,%eax
		call   _0389c0_func
		cmpb   $0x000007,_0ceea4_data
		jne    _038b09_jump
		movb   $0x000003,0x00007d(%ecx)
		mov    $0x0000ff,%dh
		movb   $0x000000,0x00007f(%ecx)
		mov    %dh,_0ceea4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_038a96_case:
		mov    0x00007f(%ecx),%bh
		inc    %bh
		mov    %bh,0x00007f(%ecx)
		cmp    $0x000032,%bh
		jbe    _038b09_jump
		movb   $0x000004,0x00007d(%ecx)
		mov    $0x000007,%ah
		movb   $0x000000,0x00007f(%ecx)
		mov    %ah,_0ceea4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_038ab7_case:
		cmpb   $0x000000,_0cee3f_data
		sete   %al
		xor    %ah,%ah
		dec    %eax
		mov    _0ceea4_data,%dh
		mov    %ax,0x000042(%ecx)
		cmp    $0x000009,%dh
		jae    _038b09_jump
		xor    %eax,%eax
		mov    %dh,%al
		lea    0x000001(%eax),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		cmpb   $0x000000,_0cb978_data(,%eax,8)
		je     _038b09_jump
		mov    $0x000078,%edx
		mov    %ecx,%eax
		call   _0389c0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_038b02_case:
		movb   $0x0000ff,_0ceea4_data

	_038b09_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038b10_func:
		push   %edx
		mov    _0cecc0_data,%dx
		mov    _0cecd4_data,%ax
		cmp    $0x000002,%ax
		jb     _038b2e_jump
		jbe    _038b5d_jump
		cmp    $0x000003,%ax
		je     _038b6c_jump
		jmp    _038b79_jump

	_038b2e_jump:
		cmp    $0x000001,%ax
		jne    _038b79_jump
		cmp    $0x000003,%dx
		jne    _038b41_jump
		orb    $0x000001,_0cec70_data

	_038b41_jump:
		cmp    $0x000008,%dx
		jne    _038b4e_jump
		orb    $0x000002,_0cec70_data

	_038b4e_jump:
		cmp    $0x000011,%dx
		jne    _038b79_jump
		orb    $0x000080,_0cec70_data
		jmp    _038b79_jump

	_038b5d_jump:
		cmp    $0x00000b,%dx
		jne    _038b79_jump
		orb    $0x000004,_0cec70_data
		jmp    _038b79_jump

	_038b6c_jump:
		cmp    $0x00000b,%dx
		jne    _038b79_jump
		orb    $0x000001,_0cec71_data

	_038b79_jump:
		mov    %dx,_0cecc0_data
		pop    %edx
		ret    

_038b84_switch:
		.long   _038be3_case
		.long   _038c97_case
		.long   _038cb5_case
		.long   _038cb5_case
		.long   _038d0c_case
		.long   _038d90_case
		.long   _038d32_case




_038ba0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    _0cec62_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		mov    _0ceea4_data,%al
		mov    %al,(%esp)
		mov    0x00006c(%esi),%al
		cmp    $0x000006,%al
		ja     _038d90_case
		and    $0x0000ff,%eax
		jmp    *%cs:_038b84_switch(,%eax,4)

	_038be3_case:
		mov    0x00007b(%esi),%bl
		test   %bl,%bl
		je     _038c88_jump
		xor    %eax,%eax
		mov    _0cdabc_data,%edx
		mov    _0cdafc_data,%al
		mov    0x000028(%esi),%ebx
		add    %edx,%eax
		sub    %ebx,%eax
		add    $0x000002,%eax
		test   %eax,%eax
		jge    _038c0b_jump
		neg    %eax

	_038c0b_jump:
		cmp    $0x000003,%eax
		jge    _038c8e_jump
		mov    _0cdb01_data,%al
		cmp    $0x000001,%al
		je     _038c40_jump
		test   %al,%al
		je     _038c40_jump
		cmp    $0x000003,%al
		jne    _038c2e_jump
		cmpb   $0x000014,_0cdb00_data
		je     _038c40_jump

	_038c2e_jump:
		cmpb   $0x000003,_0cdb01_data
		jne    _038c8e_jump
		cmpb   $0x000015,_0cdb00_data
		jne    _038c8e_jump

	_038c40_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		mov    $0x000022,%ebx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		mov    _0cdb15_data,%al
		mov    $0xffff8300,%ebx
		or     $0x000008,%al
		mov    %bx,_0ceca6_data
		mov    %al,_0cdb15_data
		jmp    _038c8e_jump

	_038c88_jump:
		mov    %bl,_0ceeb9_data

	_038c8e_jump:
		movb   $0x000000,0x00007d(%esi)
		jmp    _038d90_case

	_038c97_case:
		cmpb   $0x0000ff,(%esp)
		jne    _038d90_case
		xor    %dh,%dh
		movb   $0x000001,0x00007d(%esi)
		mov    %dh,_0ceea4_data
		mov    %dh,0x00007f(%esi)
		jmp    _038d90_case

	_038cb5_case:
		mov    _0cdb01_data,%ah
		cmp    $0x000001,%ah
		je     _038cd2_jump
		test   %ah,%ah
		je     _038cd2_jump
		cmp    $0x000003,%ah
		jne    _038ce6_jump
		cmpb   $0x000022,_0cdb00_data
		jne    _038ce6_jump

	_038cd2_jump:
		mov    $0x000023,%ebx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func

	_038ce6_jump:
		cmpb   $0x000003,_0cdb01_data
		jne    _038d90_case
		cmpb   $0x000024,_0cdb00_data
		jne    _038d90_case
		movb   $0x0000ff,_0cdaff_data
		jmp    _038d90_case

	_038d0c_case:
		mov    %esi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _038d2d_jump
		call   _038b10_func
		movb   $0x000002,0x00007d(%esi)
		mov    $0x000005,%al
		movb   $0x000000,0x00007f(%esi)
		mov    %al,_0ceea4_data
		jmp    _038d90_case

	_038d2d_jump:
		mov    %al,0x00007d(%esi)
		jmp    _038d90_case

	_038d32_case:
		cmpb   $0x000003,_0cdb01_data
		jne    _038d53_jump
		cmpb   $0x000024,_0cdb00_data
		jne    _038d53_jump
		mov    $0x000025,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func

	_038d53_jump:
		cmpb   $0x000003,_0cdb01_data
		jne    _038d90_case
		cmpb   $0x000014,_0cdb00_data
		jne    _038d90_case
		mov    _0cdabc_data,%ax
		mov    0x00007d(%esi),%bh
		mov    %ax,_0ceca6_data
		cmp    $0x000004,%bh
		jne    _038d90_case
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x008300,_0ceca6_data

	_038d90_case:
		mov    %esi,%eax
		call   _0389f4_func
		mov    _0ceea4_data,%al
		mov    (%esp),%ah
		cmp    %ah,%al
		je     _038e55_jump
		mov    $0x000001,%dl
		mov    %ah,_0cee9e_data
		mov    %dl,_0cee9d_data
		cmp    $0x0000ff,%al
		je     _038e55_jump
		mov    0x000081(%ecx),%bl
		or     $0x000004,%bl
		mov    0x000024(%ecx),%esi
		mov    %bl,0x000081(%ecx)
		test   %esi,%esi
		jne    _038dda_jump
		mov    %ecx,%eax
		call   _01f304_func

	_038dda_jump:
		mov    _0cecfe_data,%esi
		xor    %eax,%eax
		sar    $0x000010,%esi
		mov    0x000068(%ecx),%al
		movw   $0x000000,0x00005e(%ecx)
		sub    %eax,%esi
		mov    _0cece8_data,%eax
		mov    %esi,0x000028(%ecx)
		sar    $0x000010,%eax
		movzbl 0x000069(%ecx),%esi
		add    $0x0000be,%eax
		movb   $0x000000,0x00006b(%ecx)
		sub    %esi,%eax
		mov    %eax,0x00002c(%ecx)
		xor    %eax,%eax
		mov    0x000081(%ecx),%bh
		mov    0x000068(%ecx),%al
		or     $0x000008,%bh
		mov    %eax,%esi
		mov    %ax,0x000036(%ecx)
		xor    %eax,%eax
		neg    %esi
		mov    0x000069(%ecx),%al
		mov    %si,0x000036(%ecx)
		mov    $0x0000be,%esi
		mov    %bh,0x000081(%ecx)
		sub    %eax,%esi
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    (%esp),%al
		mov    %si,0x000038(%ecx)
		mov    %al,_0cee9e_data

	_038e55_jump:
		cmpb   $0x000000,_0cee9d_data
		je     _038e98_jump
		xor    %eax,%eax
		mov    _0cee9e_data,%al
		lea    0x000000(,%eax,8),%esi
		sub    %eax,%esi
		shl    $0x000002,%esi
		sub    %eax,%esi
		shl    $0x000003,%esi
		mov    _0cba4a_data(%esi),%di
		cmp    $0x0000dc,%di
		jge    _038e90_jump
		mov    %edi,%eax
		inc    %eax
		mov    %ax,_0cba4a_data(%esi)
		jmp    _038e98_jump

	_038e90_jump:
		xor    %ah,%ah
		mov    %ah,_0cee9d_data

	_038e98_jump:
		testb  $0x000004,0x000081(%ecx)
		je     _038ed6_jump
		mov    0x000028(%ecx),%edi
		mov    0x000036(%ecx),%dx
		add    $0x000004,%edi
		add    $0x000004,%edx
		mov    %edi,0x000028(%ecx)
		mov    %dx,0x000036(%ecx)
		cmp    $0x000136,%dx
		jle    _038ed6_jump
		movl   $0x000000,0x000024(%ecx)
		mov    0x000081(%ecx),%dh
		movb   $0x000000,0x00006b(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)

	_038ed6_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038ee0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    0x00006c(%eax),%dl
		test   %dl,%dl
		jne    _038f73_jump
		mov    _0cdb01_data,%bl
		cmp    $0x000002,%bl
		jne    _038f1e_jump
		mov    $0x000001,%ch
		xor    %dh,%dh
		xor    %ebx,%ebx
		mov    %dx,_0cdad4_data
		mov    %bx,_0cdae6_data
		mov    %ch,_0ceeb9_data
		mov    %bx,_0ceca2_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_038f1e_jump:
		cmp    $0x000001,%bl
		je     _038f35_jump
		test   %bl,%bl
		je     _038f35_jump
		cmp    $0x000003,%bl
		jne    _038f7b_jump
		cmpb   $0x000014,_0cdb00_data
		jne    _038f7b_jump

	_038f35_jump:
		xor    %edx,%edx
		mov    0x000028(%eax),%ax
		mov    _0cdafc_data,%dl
		sub    $0x000002,%eax
		sub    %edx,%eax
		mov    _0cdabc_data,%dh
		mov    %ax,_0ceca6_data
		test   $0x000001,%dh
		je     _038f60_jump
		orb    $0x000001,_0ceca6_data
		jmp    _038f67_jump

	_038f60_jump:
		andb   $0x0000fe,_0ceca6_data

	_038f67_jump:
		xor    %cl,%cl
		mov    %cl,_0ceeb9_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_038f73_jump:
		xor    %dh,%dh
		mov    %dh,_0ceeb9_data

	_038f7b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_038f80_func:
		push   %ecx
		push   %edi
		mov    _0cc534_data,%edi
		mov    %edi,_096228_data
		cld    
		xor    %eax,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		xor    %eax,%eax
		pop    %edi
		pop    %ecx
		ret    



_038fa0_func:
		push   %edx
		xor    %edx,%edx
		mov    %edx,_096228_data
		pop    %edx
		ret    



_038ff8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ecx
		mov    $0x000011,%ebx
		xor    %edx,%edx
		call   _07c050_func
		mov    $0x00003c,%ah
		mov    $0x000300,%ebx
		movl   $0x000140,0x000004(%ecx)
		mov    _096228_data,%edi
		movl   $0x0000c8,0x000008(%ecx)
		mov    %ah,_09621c_data
		mov    %edi,(%ecx)
		mov    _0cee8f_data,%cl
		mov    %ah,_0cee8f_data
		mov    $0x00003c,%eax
		mov    %cl,_0961c4_data
		call   _03af94_jump
		mov    _095b10_data,%edi
		xor    %edx,%edx
		cld    
		xor    %eax,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    $_0de6e0_data,%eax
		call   _07c050_func
		xor    %eax,%eax
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03906c_func:
		mov    _0961c4_data,%al
		mov    %al,_0cee8f_data
		xor    %eax,%eax
		mov    _0cee8f_data,%al
		jmp    _03af94_jump



_039084_func:
		mov    0x000004(%eax),%eax
		ret    



_039088_func:
		mov    0x000008(%eax),%eax
		ret    



_03908c_func:
		imul   0x000004(%eax),%ebx
		mov    (%eax),%eax
		add    %ebx,%edx
		mov    %cl,(%edx,%eax,1)
		ret    



_039098_func:
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %ecx,%esi
		mov    0x00000c(%esp),%ecx
		mov    %edx,%eax
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    (%edi),%edi
		add    %eax,%edi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0390bc_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0390bc_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _0390c5_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_0390c5_jump:
		pop    %edi
		pop    %esi
		ret    $0x000004



_0390cc_func:
		push   %edi
		mov    %eax,%edi
		mov    %edx,%eax
		mov    0x000008(%esp),%edx
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    (%edi),%edi
		add    %eax,%edi
		xor    %eax,%eax
		mov    %edx,%ebx
		mov    %cl,%al
		cld    
		mov    %ebx,%ecx
		and    $0x000003,%ecx
		je     _0390f3_jump
		rep stos %al,%es:(%edi)

	_0390f3_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _039108_jump
		mov    %eax,%ebx
		mov    %al,%ah
		mov    %bl,%bh
		shl    $0x000010,%eax
		mov    %bx,%ax
		rep stos %eax,%es:(%edi)

	_039108_jump:
		pop    %edi
		ret    $0x000004



_03910c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %cx,(%esp)
		mov    %edx,%eax
		mov    0x000014(%esp),%edx
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    (%esi),%esi
		add    %edx,%edx
		add    %eax,%esi
		xor    %eax,%eax
		mov    %edx,%ebp
		mov    0x000001(%esp),%al
		sar    %edx
		mov    %eax,%ebx
		xor    %eax,%eax
		shl    $0x000008,%ebx
		mov    (%esp),%al
		mov    %esi,%edi
		add    %ebx,%eax
		mov    %edx,%ebx
		and    $0x000001,%ebp
		cld    
		mov    %eax,%ecx
		shl    $0x000010,%eax
		mov    %cx,%ax
		mov    %ebx,%ecx
		and    $0x000001,%ecx
		je     _03915e_jump
		rep stos %ax,%es:(%edi)

	_03915e_jump:
		mov    %ebx,%ecx
		shr    %ecx
		je     _039166_jump
		rep stos %eax,%es:(%edi)

	_039166_jump:
		test   %ebp,%ebp
		je     _03916f_jump
		mov    (%esp),%al
		mov    %al,(%esi)

	_03916f_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_039178_func:
		push   %esi
		push   %edi
		mov    %edx,%esi
		lea    (%edx,%ecx,1),%edi
		cmp    %edi,%edx
		jge    _0391c8_jump
		lea    0x000000(,%edx,4),%eax
		lea    0x000000(,%edi,4),%ecx
		sub    %edx,%eax
		sub    %edi,%ecx

	_039195_jump:
		xor    %edx,%edx
		mov    (%ebx),%dl
		sar    $0x000002,%edx
		mov    %dl,_0de6e0_data(%eax)
		xor    %edx,%edx
		mov    0x000001(%ebx),%dl
		sar    $0x000002,%edx
		mov    %dl,_0de6e1_data(%eax)
		xor    %edx,%edx
		mov    0x000002(%ebx),%dl
		add    $0x000003,%eax
		sar    $0x000002,%edx
		add    $0x000003,%ebx
		mov    %dl,_0de6df_data(%eax)
		cmp    %ecx,%eax
		jl     _039195_jump

	_0391c8_jump:
		cmp    _096220_data,%esi
		jge    _0391d6_jump
		mov    %esi,_096220_data

	_0391d6_jump:
		cmp    _096224_data,%edi
		jle    _0391e4_jump
		mov    %edi,_096224_data

	_0391e4_jump:
		pop    %edi
		pop    %esi
		ret    



_0391e8_func:
		push   %esi
		push   %edi
		mov    %edx,%esi
		lea    (%edx,%ecx,1),%edi
		cmp    %edi,%edx
		jge    _039229_jump
		lea    0x000000(,%edx,4),%eax
		lea    0x000000(,%edi,4),%ecx
		sub    %edx,%eax
		sub    %edi,%ecx

	_039205_jump:
		mov    (%ebx),%dl
		mov    %dl,_0de6e0_data(%eax)
		mov    0x000001(%ebx),%dl
		mov    %dl,_0de6e1_data(%eax)
		add    $0x000003,%eax
		mov    0x000002(%ebx),%dl
		add    $0x000003,%ebx
		mov    %dl,_0de6df_data(%eax)
		cmp    %ecx,%eax
		jl     _039205_jump

	_039229_jump:
		cmp    _096220_data,%esi
		jge    _039237_jump
		mov    %esi,_096220_data

	_039237_jump:
		cmp    _096224_data,%edi
		jle    _039245_jump
		mov    %edi,_096224_data

	_039245_jump:
		pop    %edi
		pop    %esi
		ret    



_039248_func:
		push   %edx
		mov    $0x000043,%edx
		movl   $0x001200,(%eax)
		mov    $0x000034,%al
		out    %al,(%dx)
		mov    $0x000040,%edx
		xor    %al,%al
		out    %al,(%dx)
		out    %al,(%dx)
		xor    %eax,%eax
		pop    %edx
		ret    



_039264_func:
		push   %edx
		mov    $0x000036,%al
		mov    $0x000043,%edx
		out    %al,(%dx)
		mov    $0x000040,%edx
		xor    %al,%al
		out    %al,(%dx)
		out    %al,(%dx)
		pop    %edx
		ret    



_039278_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00001c,%esp
		mov    %esp,%ebx
		xor    %ah,%ah
		mov    %esp,%edx
		mov    %ah,0x000001(%esp)
		mov    $0x00001a,%eax
		call   _07cf52_func
		mov    $0x000043,%edx
		xor    %al,%al
		out    %al,(%dx)
		mov    $0x000040,%edx
		xor    %ecx,%ecx
		sub    %eax,%eax
		in     (%dx),%al
		sub    %eax,%eax
		in     (%dx),%al
		mov    0x00000c(%esp),%cl
		xor    %edx,%edx
		mov    %al,%bl
		mov    0x00000d(%esp),%dl
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    0x000008(%esp),%al
		add    %ecx,%edx
		shl    $0x000018,%eax
		shl    $0x000008,%edx
		neg    %bl
		add    %edx,%eax
		xor    %edx,%edx
		mov    %bl,%dl
		add    %edx,%eax
		add    $0x00001c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0392d8_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ebx
		imul   (%edx),%eax
		mov    $0x0003e8,%ecx
		xor    %edx,%edx
		div    %ecx
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _039278_func
		add    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_0392f8_func:
		push   %ebx
		mov    %eax,%ebx
		push   $0x000200
		push   %edx
		call   _07cf6f_func
		add    $0x000008,%esp
		mov    %eax,(%ebx)
		test   %eax,%eax
		jge    _039316_jump
		mov    $0xfffffffb,%eax
		pop    %ebx
		ret    

	_039316_jump:
		xor    %eax,%eax
		pop    %ebx
		ret    



_03931c_func:
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%eax
		mov    %ebx,%edx
		mov    %ebx,(%esp)
		mov    %esp,%ebx
		mov    %ds,%ecx
		push   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _07d1e2_func
		test   %eax,%eax
		je     _039341_jump
		mov    $0xfffffffa,%eax

	_039341_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		ret    



_039348_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    %ebx,%esi
		mov    (%edx),%edi
		test   %ebx,%ebx
		je     _03937c_jump

	_039356_jump:
		cmp    $0x00fff0,%esi
		jbe    _039365_jump
		mov    $0x00fff0,%ecx
		jmp    _039367_jump

	_039365_jump:
		mov    %esi,%ecx

	_039367_jump:
		mov    %ecx,%ebx
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _03931c_func
		test   %eax,%eax
		jl     _03937e_jump
		add    %ecx,%edi
		sub    %ecx,%esi
		jne    _039356_jump

	_03937c_jump:
		xor    %eax,%eax

	_03937e_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_039384_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cee6a_data,%ah
		cmp    $0x000004,%ah
		jne    _03939e_jump
		xor    %bl,%bl
		mov    %bl,_0961c5_data
		jmp    _0393bc_jump

	_03939e_jump:
		cmp    $0x000005,%ah
		jae    _0393ac_jump
		mov    $0xfffffff3,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0393ac_jump:
		mov    _0cee5c_data,%dh
		test   %dh,%dh
		sete   %al
		mov    %al,_0961c5_data

	_0393bc_jump:
		mov    $0x000018,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _07c050_func
		lea    0x000011(%ecx),%eax
		call   _039248_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _0393fe_jump
		call   _038f80_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _0393f6_jump
		mov    %ecx,%eax
		call   _038ff8_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _0393f6_jump
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0393f6_jump:
		lea    0x000011(%ecx),%eax
		call   _039264_func

	_0393fe_jump:
		mov    %edx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039404_func:
		push   %edx
		mov    %eax,%edx
		call   _03906c_func
		lea    0x000011(%edx),%eax
		call   _039264_func
		call   _038fa0_func
		cmpb   $0x000000,_0cee97_data
		je     _039431_jump
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _02a00c_func

	_039431_jump:
		pop    %edx
		ret    



_039434_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %ebx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    $0x000100,%ebx
		xor    %ebp,%ebp
		mov    (%eax),%si
		mov    %ebp,_096224_data
		mov    %ebx,_096220_data
		mov    %esi,0x000008(%esp)
		lea    0x000002(%eax),%esi

	_03945e_jump:
		mov    0x000008(%esp),%edx
		dec    %edx
		mov    %edx,0x000008(%esp)
		test   %dx,%dx
		jl     _039497_jump
		inc    %esi
		xor    %eax,%eax
		movzbl (%esi),%edi
		mov    -0x000001(%esi),%al
		inc    %esi
		add    %eax,%ebp
		test   %edi,%edi
		jne    _039481_jump
		mov    $0x000100,%edi

	_039481_jump:
		mov    (%esp),%eax
		mov    %edi,%ecx
		mov    %esi,%ebx
		mov    %ebp,%edx
		call   *0x000004(%esp)
		lea    (%edi,%edi,2),%eax
		add    %eax,%esi
		add    %edi,%ebp
		jmp    _03945e_jump

	_039497_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0394a0_func:
		push   %ecx
		mov    $_039178_func,%ecx
		call   _039434_func
		pop    %ecx
		ret    



_0394b0_func:
		push   %ecx
		mov    $_0391e8_func,%ecx
		call   _039434_func
		pop    %ecx
		ret    



_0394c0_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %edx,%edi
		xor    %edx,%edi
		xor    %ecx,%ecx
		mov    0x00000a(%edx),%di
		mov    0x000008(%edx),%cx
		mov    %edi,0x000004(%esp)
		mov    0x00008c(%edx),%edi
		add    %ecx,%edi
		mov    0x000090(%edx),%ebp
		mov    %edi,0x000008(%esp)

	_0394f4_jump:
		mov    0x000004(%esp),%edx
		dec    %edx
		mov    %edx,0x000004(%esp)
		test   %edx,%edx
		jl     _03957b_jump
		mov    (%esp),%edi
		xor    %ah,%ah
		inc    %esi
		mov    %ah,0x000010(%esp)
		mov    0x00008c(%edi),%edi

	_039515_jump:
		mov    0x00000d(%esp),%ecx
		sar    $0x000018,%ecx
		add    %ecx,%edi
		cmp    0x000008(%esp),%edi
		jge    _039575_jump
		mov    (%esi),%cl
		inc    %esi
		mov    %cl,0x000010(%esp)
		test   %cl,%cl
		jl     _03954b_jump
		mov    0x00000d(%esp),%ecx
		mov    0x00000c(%esp),%eax
		sar    $0x000018,%ecx
		mov    %ebp,%ebx
		push   %ecx
		xor    %ecx,%ecx
		mov    %edi,%edx
		mov    (%esi),%cl
		inc    %esi
		call   _0390cc_func
		jmp    _039515_jump

	_03954b_jump:
		mov    %cl,%dh
		neg    %dh
		mov    %dh,0x000010(%esp)
		mov    0x00000d(%esp),%ecx
		mov    0x00000c(%esp),%eax
		sar    $0x000018,%ecx
		mov    %ebp,%ebx
		push   %ecx
		mov    %edi,%edx
		mov    %esi,%ecx
		call   _039098_func
		mov    0x00000d(%esp),%ecx
		sar    $0x000018,%ecx
		add    %ecx,%esi
		jmp    _039515_jump

	_039575_jump:
		inc    %ebp
		jmp    _0394f4_jump

	_03957b_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_039584_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %ebx,0x000004(%esp)
		lea    0x000004(%eax),%esi
		mov    0x00008c(%edx),%ecx
		movswl (%eax),%ebp
		add    $0x000002,%eax
		mov    %ecx,(%esp)
		mov    0x000090(%edx),%edx
		mov    (%eax),%ax
		add    %edx,%ebp
		mov    %eax,0x00000c(%esp)

	_0395b0_jump:
		mov    0x00000c(%esp),%edx
		dec    %edx
		mov    %edx,0x00000c(%esp)
		test   %dx,%dx
		jl     _039667_jump
		mov    (%esp),%edi
		mov    (%esi),%al
		inc    %esi
		mov    %al,0x000010(%esp)
		test   %al,%al
		jbe    _039661_jump

	_0395d4_jump:
		mov    0x000001(%esi),%al
		inc    %esi
		xor    %ecx,%ecx
		mov    %al,0x000014(%esp)
		mov    -0x000001(%esi),%cl
		inc    %esi
		add    %ecx,%edi
		test   %al,%al
		jge    _039622_jump
		mov    %al,%bh
		neg    %bh
		mov    %bh,0x000014(%esp)
		mov    0x000011(%esp),%eax
		mov    %edi,%edx
		sar    $0x000018,%eax
		mov    %ebp,%ebx
		mov    %eax,0x000008(%esp)
		mov    %eax,%ecx
		push   %eax
		xor    %eax,%ecx
		mov    0x000008(%esp),%eax
		mov    (%esi),%cl
		inc    %esi
		call   _0390cc_func
		mov    0x000010(%esp),%cl
		mov    0x000008(%esp),%eax
		dec    %cl
		add    %eax,%edi
		mov    %cl,0x000010(%esp)
		jmp    _039656_jump

	_039622_jump:
		mov    0x000011(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%ebx
		sar    $0x000018,%eax
		mov    %edi,%edx
		push   %eax
		mov    %eax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		call   _039098_func
		mov    0x000008(%esp),%ebx
		mov    0x000011(%esp),%ecx
		add    %ebx,%edi
		mov    0x000010(%esp),%bl
		sar    $0x000018,%ecx
		dec    %bl
		add    %ecx,%esi
		mov    %bl,0x000010(%esp)

	_039656_jump:
		cmpb   $0x000000,0x000010(%esp)
		ja     _0395d4_jump

	_039661_jump:
		inc    %ebp
		jmp    _0395b0_jump

	_039667_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_039670_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %ebx,0x00000c(%esp)
		mov    0x00008c(%edx),%ecx
		mov    %ecx,0x000008(%esp)
		mov    0x000090(%edx),%ecx
		mov    0x000008(%edx),%dx
		mov    0x000008(%esp),%ebx
		and    $0x00ffff,%edx
		add    %ebx,%edx
		dec    %edx
		mov    %ecx,0x000004(%esp)
		mov    %edx,(%esp)
		mov    (%eax),%dx
		lea    0x000002(%eax),%esi
		mov    %edx,0x000014(%esp)
		jmp    _0396c0_jump

	_0396af_jump:
		mov    0x00000e(%esp),%edx
		mov    0x000004(%esp),%edi
		sar    $0x000010,%edx
		sub    %edx,%edi
		mov    %edi,0x000004(%esp)

	_0396c0_jump:
		mov    (%esi),%ax
		add    $0x000002,%esi
		mov    %ax,0x000010(%esp)
		test   %ax,%ax
		jge    _039714_jump
		testb  $0x000040,0x000011(%esp)
		jne    _0396af_jump
		mov    (%esp),%ebx
		mov    0x00000c(%esp),%eax
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    0x000004(%esp),%cl
		mov    0x000010(%esp),%dl
		call   _03908c_func
		mov    (%esi),%ax
		add    $0x000002,%esi
		mov    %ax,0x000010(%esp)
		test   %ax,%ax
		jne    _039714_jump
		incl   0x000004(%esp)
		mov    0x000014(%esp),%ecx
		dec    %ecx
		mov    %ecx,0x000014(%esp)
		test   %cx,%cx
		jmp    _0397b4_jump

	_039714_jump:
		mov    0x000008(%esp),%ebp

	_039718_jump:
		inc    %esi
		xor    %edx,%edx
		movsbl (%esi),%edi
		mov    -0x000001(%esi),%dl
		inc    %esi
		add    %edi,%edi
		add    %edx,%ebp
		test   %edi,%edi
		jl     _039770_jump
		mov    0x000004(%esp),%ebx
		mov    0x00000c(%esp),%eax
		push   %edi
		mov    %esi,%ecx
		mov    %ebp,%edx
		add    %edi,%ebp
		add    %edi,%esi
		mov    0x000014(%esp),%edi
		call   _039098_func
		dec    %di
		mov    %di,0x000010(%esp)
		jne    _039718_jump
		mov    0x000004(%esp),%eax
		mov    0x000014(%esp),%edx
		inc    %eax
		dec    %edx
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000014(%esp)
		test   %dx,%dx
		jg     _0396c0_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_039770_jump:
		neg    %edi
		mov    0x000004(%esp),%ebx
		mov    %edi,%edx
		mov    0x00000c(%esp),%eax
		sar    %edx
		mov    (%esi),%cx
		push   %edx
		mov    %ebp,%edx
		add    $0x000002,%esi
		call   _03910c_func
		mov    0x000010(%esp),%eax
		add    %edi,%ebp
		dec    %ax
		mov    %ax,0x000010(%esp)
		jne    _039718_jump
		mov    0x000004(%esp),%ebp
		mov    0x000014(%esp),%ebx
		inc    %ebp
		dec    %ebx
		mov    %ebp,0x000004(%esp)
		mov    %ebx,0x000014(%esp)
		test   %bx,%bx

	_0397b4_jump:
		jg     _0396c0_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0397c4_func:
		push   %ecx
		push   %edi
		mov    (%ebx),%edi
		cld    
		xor    %eax,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		pop    %edi
		pop    %ecx
		ret    



_0397d8_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    (%ebx),%ebx
		mov    0x000094(%edx),%edi
		xor    %esi,%esi
		xor    %ecx,%ecx
		mov    0x00000a(%edx),%si
		mov    0x000008(%edx),%cx
		add    %ebx,%edi
		mov    %esi,%ebx
		mov    %ecx,%edx
		mov    %eax,%esi
		cld    
		pusha  
		mov    $0x000140,%ebp
		sub    %edx,%ebp
		mov    %edx,%eax
		and    $0x000003,%eax
		shr    $0x000002,%edx

	_039808_jump:
		mov    %edx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebp,%edi
		dec    %ebx
		jne    _039808_jump
		popa   
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03981c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000080(%eax),%eax
		mov    $0x000099,%ebx
		call   _07d213_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _07c050_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_039840_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    $0x000099,%ebx
		xor    %edx,%edx
		call   _07c050_func
		lea    0x000080(%ecx),%eax
		mov    %esi,%edx
		call   _0392f8_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _039978_jump
		mov    $0x000080,%ebx
		mov    %ecx,%edx
		mov    0x000080(%ecx),%eax
		call   _03931c_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _039971_jump
		movl   $0x000000,0x000084(%ecx)
		mov    _0961c5_data,%ah
		mov    %esi,0x000088(%ecx)
		test   %ah,%ah
		setne  %al
		mov    0x000008(%ecx),%dx
		mov    %al,_0961c6_data
		cmp    $0x000140,%dx
		ja     _03996c_jump
		cmpw   $0x0000c8,0x00000a(%ecx)
		ja     _03996c_jump
		mov    0x000004(%ecx),%si
		cmp    $0x00af12,%si
		jne    _0398fb_jump
		mov    (%ecx),%ebx
		cmp    $0x00000c,%ebx
		jne    _0398e5_jump
		movl   $0x00001e,0x000010(%ecx)
		mov    $0x000001,%dh
		mov    %ebx,0x000050(%ecx)
		mov    %dh,_09621d_data

	_0398e5_jump:
		mov    0x000050(%ecx),%edx
		mov    0x000080(%ecx),%eax
		xor    %ebx,%ebx
		call   _07d218_func
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0398fb_jump:
		cmp    $0x00af11,%si
		jne    _03995a_jump
		mov    (%ecx),%edx
		cmp    $0x00000c,%edx
		jne    _03992c_jump
		mov    0x000080(%ecx),%eax
		mov    %edx,0x000050(%ecx)
		xor    %ebx,%ebx
		mov    0x000050(%ecx),%edx
		movl   $0x000005,0x000010(%ecx)
		call   _07d218_func
		movb   $0x000001,_09621d_data
		jmp    _039933_jump

	_03992c_jump:
		movl   $0x000080,0x000050(%ecx)

	_039933_jump:
		mov    0x000010(%ecx),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000046,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,0x000010(%ecx)
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03995a_jump:
		mov    $0xfffffff5,%edx
		mov    %ecx,%eax
		call   _03981c_func
		mov    %edx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03996c_jump:
		mov    $0xfffffffd,%edx

	_039971_jump:
		mov    %ecx,%eax
		call   _03981c_func

	_039978_jump:
		mov    %edx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_039980_switch:
		.long   _0399fb_case
		.long   _039a81_case
		.long   _039a81_case
		.long   _039a32_case
		.long   _039a81_case
		.long   _039a81_case
		.long   _039a81_case
		.long   _0399fb_case
		.long   _039a32_case
		.long   _039a59_case
		.long   _039a81_case
		.long   _039a67_case
		.long   _039a75_case




_0399b4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%edi
		mov    %edx,(%esp)
		mov    %ebx,%esi
		mov    %ecx,%ebp
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ah,_09621e_data
		mov    %edx,0x000004(%esp)
		jmp    _039a85_jump

	_0399d6_jump:
		mov    %esi,%eax
		mov    0x000004(%eax),%cx
		mov    (%esi),%edx
		sub    $0x000004,%ecx
		add    %edx,%esi
		cmp    $0x00000c,%cx
		ja     _039a81_case
		and    $0x00ffff,%ecx
		jmp    *%cs:_039980_switch(,%ecx,4)

	_0399fb_case:
		cmpb   $0x000000,_0961c6_data
		je     _039a0b_jump
		movb   $0x000001,_09621e_data

	_039a0b_jump:
		mov    0x000004(%eax),%bx
		lea    0x000006(%eax),%ecx
		cmp    $0x000004,%bx
		jne    _039a25_jump
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _0394a0_func
		jmp    _039a81_case

	_039a25_jump:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _0394b0_func
		jmp    _039a81_case

	_039a32_case:
		mov    0x000004(%eax),%dx
		lea    0x000006(%eax),%ecx
		cmp    $0x000007,%dx
		jne    _039a4c_jump
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _039670_func
		jmp    _039a81_case

	_039a4c_jump:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %ecx,%eax
		call   _039584_func
		jmp    _039a81_case

	_039a59_case:
		add    $0x000006,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _0397c4_func
		jmp    _039a81_case

	_039a67_case:
		add    $0x000006,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _0394c0_func
		jmp    _039a81_case

	_039a75_case:
		add    $0x000006,%eax
		mov    %ebp,%ebx
		mov    %edi,%edx
		call   _0397d8_func

	_039a81_case:
		incl   0x000004(%esp)

	_039a85_jump:
		mov    (%esp),%eax
		mov    0x000004(%eax),%eax
		mov    0x000004(%esp),%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jg     _0399d6_jump
		cmpb   $0x000000,0x000098(%edi)
		jbe    _039bfc_jump
		cmpb   $0x000000,_0cee97_data
		je     _039bfc_jump
		cmpb   $0x000002,_0961c7_data
		je     _039bfc_jump
		mov    _0961c5_data,%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		je     _039bfc_jump
		call   _028e30_func
		mov    _0961c9_data,%cl
		test   %cl,%cl
		je     _039be1_jump
		cmpb   $0x000000,_0961c7_data
		jne    _039bb3_jump
		mov    _0961c5_data,%edx
		sar    $0x000018,%edx
		shl    $0x000004,%edx
		mov    0x000084(%edi),%ebx
		cmp    _0961d4_data(%edx),%ebx
		jl     _039b81_jump
		cmp    _0961d8_data(%edx),%ebx
		jge    _039b81_jump
		lea    0x000014(%esp),%edx
		lea    0x00000c(%esp),%ecx
		lea    0x000010(%esp),%ebx
		movzbl %al,%esi
		push   %edx
		mov    %esi,%eax
		lea    0x00000c(%esp),%edx
		call   _029a98_func
		cmp    $0x000100,%ax
		jne    _039ba1_jump
		xor    %eax,%eax
		mov    0x000010(%esp),%al
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		shl    $0x000010,%edx
		shl    $0x000008,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000014(%esp),%dl
		add    %eax,%edx
		mov    _0961c5_data,%eax
		sar    $0x000018,%eax
		shl    $0x000004,%eax
		cmp    _0961cc_data(%eax),%edx
		jl     _039ba1_jump
		mov    %esi,%eax
		mov    $0x000001,%bl
		call   _029ff8_func
		mov    %bl,_0961c7_data
		add    %bl,_0961c8_data
		jmp    _039ba1_jump

	_039b81_jump:
		mov    _0961c5_data,%edx
		sar    $0x000018,%edx
		shl    $0x000004,%edx
		mov    0x000084(%edi),%eax
		cmp    _0961d8_data(%edx),%eax
		jne    _039ba1_jump
		incb   _0961c8_data

	_039ba1_jump:
		cmpb   $0x000005,_0961c8_data
		jne    _039c03_jump
		movb   $0x0000ff,_0961c8_data
		jmp    _039c03_jump

	_039bb3_jump:
		mov    _0961c5_data,%ebx
		sar    $0x000018,%ebx
		shl    $0x000004,%ebx
		mov    0x000084(%edi),%edx
		cmp    _0961d0_data(%ebx),%edx
		jl     _039c03_jump
		and    $0x0000ff,%eax
		xor    %dl,%dl
		call   _02a020_func
		mov    %dl,_0961c7_data
		jmp    _039c03_jump

	_039be1_jump:
		cmpb   $0x000000,_0961c7_data
		je     _039c03_jump
		and    $0x0000ff,%eax
		call   _02a020_func
		mov    %cl,_0961c7_data
		jmp    _039c03_jump

	_039bfc_jump:
		movb   $0x000001,_0961c7_data

	_039c03_jump:
		cmpb   $0x000000,_0961c6_data
		je     _039c57_jump
		cmpl   $0x000001,0x000084(%edi)
		je     _039c26_jump

	_039c15_jump:
		mov    0x000028(%esp),%eax
		call   _039278_func
		cmp    _096230_data,%eax
		jbe    _039c15_jump

	_039c26_jump:
		call   _016df7_func
		call   _016de7_func
		cmpb   $0x000000,_0961c5_data
		je     _039c44_jump
		mov    0x000028(%esp),%edx
		mov    $0x00003c,%eax
		jmp    _039c4d_jump

	_039c44_jump:
		mov    0x000028(%esp),%edx
		mov    $0x00007d,%eax

	_039c4d_jump:
		call   _0392d8_func
		mov    %eax,_096230_data

	_039c57_jump:
		cmpb   $0x000000,_0961c6_data
		je     _039cd1_jump
		cmpb   $0x000001,_09621e_data
		jne    _039c8a_jump
		mov    $_0de6e0_data,%esi
		pusha  
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		popa   

	_039c8a_jump:
		mov    _095b10_data,%eax
		mov    0x000094(%edi),%esi
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00000a(%edi),%bx
		mov    0x000008(%edi),%dx
		add    %esi,%eax
		mov    0x000000(%ebp),%esi
		mov    0x000094(%edi),%ebp
		mov    %eax,%edi
		add    %ebp,%esi
		cld    
		pusha  
		mov    $0x000140,%ebp
		sub    %edx,%ebp
		mov    %edx,%eax
		and    $0x000003,%eax
		shr    $0x000002,%edx

	_039cc1_jump:
		mov    %edx,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		add    %ebp,%esi
		add    %ebp,%edi
		dec    %ebx
		jne    _039cc1_jump
		popa   

	_039cd1_jump:
		cmpb   $0x000000,_0961c5_data
		je     _039ce3_jump
		movb   $0x000001,_0961c6_data
		jmp    _039cea_jump

	_039ce3_jump:
		xorb   $0x000001,_0961c6_data

	_039cea_jump:
		xor    %eax,%eax
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_039cf8_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    %ebx,%edi
		mov    0x000084(%eax),%edx
		inc    %edx
		mov    $0x000010,%ebx
		mov    %edx,0x000084(%eax)
		mov    %esp,%edx
		mov    0x000080(%eax),%eax
		call   _03931c_func
		test   %eax,%eax
		jl     _039d81_jump
		cmpw   $0x00f1fa,0x000004(%esp)
		jne    _039d7c_jump
		mov    (%esp),%eax
		sub    $0x000010,%eax
		test   %eax,%eax
		jle    _039d6e_jump
		mov    _0cc528_data,%edx
		mov    %edx,0x000010(%esp)
		mov    %eax,%ebx
		mov    0x000080(%esi),%ebp
		lea    0x000010(%esp),%edx
		mov    %ebp,%eax
		call   _039348_func
		test   %eax,%eax
		jl     _039d81_jump
		mov    0x000010(%esp),%ebx
		push   %edi
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _0399b4_func
		jmp    _039d81_jump

	_039d6e_jump:
		mov    %esp,%edx
		push   %edi
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _0399b4_func
		jmp    _039d81_jump

	_039d7c_jump:
		mov    $0xfffffffc,%eax

	_039d81_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_039d8c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    0x000008(%eax),%dx
		mov    %ebx,%eax
		call   _039084_func
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %edx,%edx
		mov    %eax,0x00008c(%ecx)
		mov    %ebx,%eax
		mov    0x00000a(%ecx),%dx
		call   _039088_func
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,0x000090(%ecx)
		mov    %eax,%ebx
		mov    0x00008c(%ecx),%eax
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    %eax,0x000094(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_039dec_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		xor    %ah,%ah
		mov    0x000098(%esi),%dl
		mov    %ah,_0961c7_data
		test   %dl,%dl
		jbe    _039e54_jump
		cmpb   $0x000000,_0cee97_data
		je     _039e54_jump
		call   _028e30_func
		and    $0x0000ff,%eax
		xor    %edx,%edx
		call   _02a00c_func
		mov    0x000098(%esi),%dl
		call   _028e30_func
		and    $0x0000ff,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		call   _029f00_func
		call   _028e30_func
		and    $0x0000ff,%eax
		mov    $0x000001,%bl
		call   _029ff8_func
		mov    %bl,_0961c7_data

	_039e54_jump:
		lea    0x000011(%edi),%ebp
		xor    %bh,%bh
		xor    %ecx,%ecx
		mov    %bh,_0961c8_data
		jmp    _039eb5_jump

	_039e63_jump:
		call   _040b64_func
		call   _0408d4_func
		test   %ax,%ax
		jne    _039e9e_jump
		call   _040960_func
		test   %ax,%ax
		jne    _039e9e_jump
		call   _0409ec_func
		test   %ax,%ax
		jne    _039e9e_jump
		call   _040a78_func
		test   %ax,%ax
		jne    _039e9e_jump
		mov    $0x000039,%eax
		call   _0406e0_func
		test   %al,%al
		je     _039ea2_jump

	_039e9e_jump:
		xor    %eax,%eax
		jmp    _039ec2_jump

	_039ea2_jump:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _039cf8_func
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _039ebf_jump
		inc    %ecx

	_039eb5_jump:
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		cmp    %eax,%ecx
		jl     _039e63_jump

	_039ebf_jump:
		mov    (%esp),%eax

	_039ec2_jump:
		add    $0x000004,%esp

	_039ec5_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_039ecc_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		mov    %eax,%ecx
		mov    0x000050(%eax),%edx
		xor    %ebx,%ebx
		mov    0x000080(%eax),%eax
		call   _07d218_func
		mov    $0x000010,%ebx
		mov    %esp,%edx
		mov    0x000080(%ecx),%eax
		call   _03931c_func
		test   %eax,%eax
		jl     _039f07_jump
		mov    (%esp),%edx
		mov    0x000050(%ecx),%eax
		add    %edx,%eax
		mov    %eax,0x000054(%ecx)
		xor    %eax,%eax

	_039f07_jump:
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx

	_039f0d_jump:
		ret    



_039f10_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    %edx,%edi
		call   _039ecc_func
		mov    0x000050(%esi),%edx
		mov    0x000080(%esi),%eax
		xor    %ebx,%ebx
		lea    0x000011(%edi),%ebp
		call   _07d218_func
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _039cf8_func
		test   %eax,%eax
		jl     _039ec5_jump

	_039f40_jump:
		mov    0x000054(%esi),%edx
		mov    0x000080(%esi),%eax
		xor    %ebx,%ebx
		movl   $0x000001,0x000084(%esi)
		call   _07d218_func
		xor    %ah,%ah
		mov    0x000098(%esi),%dl
		mov    %ah,_0961c7_data
		test   %dl,%dl
		jbe    _039fb6_jump
		cmpb   $0x000000,_0cee97_data
		je     _039fb6_jump
		call   _028e30_func
		and    $0x0000ff,%eax
		xor    %edx,%edx
		call   _02a00c_func
		mov    0x000098(%esi),%dl
		call   _028e30_func
		and    $0x0000ff,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		call   _029f00_func
		call   _028e30_func
		and    $0x0000ff,%eax
		mov    $0x000001,%bl
		call   _029ff8_func
		mov    %bl,_0961c7_data

	_039fb6_jump:
		xor    %bh,%bh
		xor    %ecx,%ecx
		mov    %bh,_0961c8_data
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		cmp    %eax,%ecx
		jl     _039fcf_jump
		jmp    _039f40_jump

	_039fcf_jump:
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _039cf8_func
		test   %eax,%eax
		jl     _039ec5_jump
		call   _040b64_func
		call   _0408d4_func
		test   %ax,%ax
		jne    _03a01d_jump
		call   _040960_func
		test   %ax,%ax
		jne    _03a01d_jump
		call   _0409ec_func
		test   %ax,%ax
		jne    _03a01d_jump
		call   _040a78_func
		test   %ax,%ax
		jne    _03a01d_jump
		mov    $0x000039,%eax
		call   _0406e0_func
		test   %al,%al
		je     _03a025_jump

	_03a01d_jump:
		xor    %eax,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03a025_jump:
		inc    %ecx
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		cmp    %eax,%ecx
		jl     _039fcf_jump
		jmp    _039f40_jump



_03a038_func:
		cmpb   $0x000000,_0cee62_data
		je     _039f0d_jump
		jmp    _03d44c_jump



_03a04c_func:
		cmpb   $0x000000,_0cee62_data
		je     _039f0d_jump
		jmp    _03d490_jump



_03a060_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %ebx,%ebx
		xor    %ecx,%ecx

	_03a068_jump:
		mov    $0x0000fe,%ah
		mov    %ecx,%edx

	_03a06c_jump:
		mov    _0de6e0_data(%edx),%al
		add    %ah,%al
		test   %al,%al
		jge    _03a07a_jump
		mov    %cl,%al

	_03a07a_jump:
		mov    %al,_0de6e0_data(%edx)
		mov    _0de6e1_data(%edx),%al
		add    %ah,%al
		test   %al,%al
		jge    _03a08e_jump
		mov    %cl,%al

	_03a08e_jump:
		mov    %al,_0de6e1_data(%edx)
		mov    _0de6e2_data(%edx),%al
		add    %ah,%al
		test   %al,%al
		jge    _03a0a2_jump
		mov    %cl,%al

	_03a0a2_jump:
		add    $0x000003,%edx
		mov    %al,_0de6df_data(%edx)
		cmp    $0x000300,%edx
		jne    _03a06c_jump
		call   _016df7_func
		call   _016de7_func
		mov    $_0de6e0_data,%esi
		add    $0x000002,%ebx
		pusha  
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		popa   
		cmp    $0x000040,%ebx
		jl     _03a068_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a0ec_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000134,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %cl,%bh
		mov    $_0c0710_data,%eax
		call   _07d25b_func
		test   %eax,%eax
		sete   %al
		mov    %al,_0961c9_data
		cmpb   $0x000000,_0cee6e_data
		je     _03a180_jump
		mov    $_0c071c_data,%edx
		mov    %esi,%eax
		call   _07b850_func
		test   %eax,%eax
		jne    _03a132_jump
		mov    $0xfffffffb,%eax
		jmp    _03a26b_jump

	_03a132_jump:
		lea    0x00009c(%esp),%edi
		push   %edi

	_03a13a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03a152_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03a13a_jump

	_03a152_jump:
		pop    %edi
		lea    0x00009c(%esp),%edi
		mov    %ebp,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_03a165_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03a17d_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03a165_jump

	_03a17d_jump:
		pop    %edi
		jmp    _03a1a3_jump

	_03a180_jump:
		lea    0x00009c(%esp),%edi
		mov    %ebp,%esi
		push   %edi

	_03a18a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03a1a2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03a18a_jump

	_03a1a2_jump:
		pop    %edi

	_03a1a3_jump:
		mov    $_0c0720_data,%edx
		lea    0x00009c(%esp),%eax
		call   _07d470_func
		test   %eax,%eax
		jne    _03a1c7_jump
		mov    $0xfffffffb,%eax
		add    $0x000134,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03a1c7_jump:
		call   _07d524_func
		cmpb   $0x000000,_0cee97_data
		je     _03a1e6_jump
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _02a00c_func
		jmp    _03a1e8_jump

	_03a1e6_jump:
		xor    %bl,%bl

	_03a1e8_jump:
		call   _03a038_func
		lea    0x00011c(%esp),%eax
		call   _039384_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03a258_jump
		lea    0x00009c(%esp),%edx
		mov    %esp,%eax
		call   _039840_func
		mov    %eax,%edx
		test   %eax,%eax
		jl     _03a258_jump
		lea    0x00011c(%esp),%edx
		mov    %esp,%eax
		mov    %bl,0x000098(%esp)
		call   _039d8c_func
		test   %bh,%bh
		je     _03a23c_jump
		lea    0x00011c(%esp),%edx
		mov    %esp,%eax
		call   _039f10_func
		jmp    _03a24a_jump

	_03a23c_jump:
		lea    0x00011c(%esp),%edx
		mov    %esp,%eax
		call   _039dec_func

	_03a24a_jump:
		mov    %eax,%edx
		call   _03a060_func
		mov    %esp,%eax
		call   _03981c_func

	_03a258_jump:
		lea    0x00011c(%esp),%eax
		call   _039404_func
		call   _03a04c_func
		mov    %edx,%eax

	_03a26b_jump:
		add    $0x000134,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03a278_func:
		push   %ecx
		and    $0x0000ff,%ebx
		xor    %ecx,%ecx
		call   _03a0ec_func
		pop    %ecx
		ret    



_03a2a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000001,_095b14_data
		jne    _03a2f1_jump
		mov    _0ccba8_data,%edx
		cmp    $0x0a0200,%edx
		jne    _03a2cf_jump
		mov    $0x0a6200,%esi
		mov    %edx,_0ccba4_data
		mov    %esi,_0ccba8_data
		jmp    _03a2e5_jump

	_03a2cf_jump:
		mov    $0x0a0200,%ebx
		mov    $0x0a6200,%ecx
		mov    %ebx,_0ccba8_data
		mov    %ecx,_0ccba4_data

	_03a2e5_jump:
		mov    _0ccba8_data,%eax
		call   _014543_func
		jmp    _03a348_jump

	_03a2f1_jump:
		mov    _0cc534_data,%eax
		mov    %eax,_0ccba4_data
		mov    _095b10_data,%eax
		mov    _0cee69_data,%dl
		mov    %eax,_0ccba8_data
		cmp    $0x000001,%dl
		jne    _03a337_jump
		cmpb   $0x000000,_095b9a_data
		je     _03a337_jump
		mov    $0x000140,%ecx
		mov    _0cc534_data,%esi
		mov    %eax,%edi
		mov    $0x0000c8,%eax
		call   *_0cc510_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03a337_jump:
		mov    _0ccba8_data,%edi
		mov    _0cc534_data,%esi
		call   _014a16_func

	_03a348_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a350_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cee92_data
		je     _03a362_jump
		call   _016df7_func

	_03a362_jump:
		mov    _0ccba8_data,%edx
		cmp    $0x0a0200,%edx
		jne    _03a383_jump
		mov    $0x0a6200,%esi
		mov    %edx,_0ccba4_data
		mov    %esi,_0ccba8_data
		jmp    _03a399_jump

	_03a383_jump:
		mov    $0x0a0200,%ebx
		mov    $0x0a6200,%ecx
		mov    %ebx,_0ccba8_data
		mov    %ecx,_0ccba4_data

	_03a399_jump:
		mov    _0ccba8_data,%eax
		call   _014543_func
		cmpb   $0x000000,_0cee92_data
		je     _03a3b1_jump
		call   _016de7_func

	_03a3b1_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03a614_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0ccc60_data,%ebx
		movswl %dx,%edx
		mov    %ebx,0x000004(%esp)
		mov    %ebx,_0ccc5c_data
		mov    _0cda86_data,%ebx
		sar    $0x000004,%edx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		movswl %ax,%edx
		sar    $0x000004,%edx
		add    %edx,%ebx
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    _0cda90_data,%ebx
		add    %edx,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    %ebx,(%esp)
		mov    %edx,0x000008(%esp)
		mov    %edx,0x00000c(%esp)

	_03a666_jump:
		mov    (%esp),%ebx
		mov    0x000004(%esp),%edx
		xor    %ecx,%ecx
		mov    0x00000c(%esp),%ebp
		mov    %ecx,0x000010(%esp)
		add    %ebp,%edx
		mov    0x000008(%esp),%ebp

	_03a67d_jump:
		xor    %ecx,%ecx

	_03a67f_jump:
		mov    (%ebx),%di
		test   %di,%di
		jl     _03a6a9_jump
		cmp    $0x0004b0,%di
		jge    _03a6a9_jump
		cmpb   $0x000000,0x000004(%ebx)
		jne    _03a6a9_jump
		movswl %di,%esi
		mov    _0c26c8_data(,%esi,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _0146c4_func
		jmp    _03a6b0_jump

	_03a6a9_jump:
		mov    %edx,%edi
		call   _01467c_func

	_03a6b0_jump:
		add    $0x000006,%ebx
		add    $0x000010,%ecx
		add    $0x000004,%edx
		cmp    $0x000140,%cx
		jl     _03a67f_jump
		mov    _0cda86_data,%esi
		sar    $0x000010,%esi
		sub    $0x000014,%esi
		imul   $0x000006,%esi,%esi
		add    %esi,%ebx
		mov    0x000010(%esp),%esi
		add    $0x000010,%esi
		add    $0x0004b0,%edx
		mov    %esi,0x000010(%esp)
		cmp    $0x0000e0,%si
		jl     _03a67d_jump
		mov    0x000008(%esp),%ecx
		mov    0x00000c(%esp),%esi
		add    $0x000040,%ecx
		add    $0x004600,%esi
		mov    %ecx,0x000008(%esp)
		mov    %esi,0x00000c(%esp)
		cmp    $0x000100,%ecx
		jne    _03a666_jump
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03a718_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,(%esp)
		mov    %ecx,%esi
		movswl %bx,%eax
		mov    _0cda86_data,%ecx
		sar    $0x000004,%eax
		sar    $0x000010,%ecx
		imul   %ecx,%eax
		movswl %dx,%edx
		sar    $0x000004,%edx
		lea    (%edx,%eax,1),%ebx
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		mov    _0cda90_data,%eax
		add    %edx,%edx
		add    %edx,%eax
		mov    _0ccc60_data,%edx
		mov    %eax,0x000008(%esp)
		mov    (%esp),%eax
		mov    $0x000050,%ebx
		sub    %edx,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %edx,0x000010(%esp)
		movswl %si,%edx
		mov    $0x00000d,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		imul   %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000008(%esp),%ebx
		sub    %eax,%edx
		xor    %ecx,%ecx
		add    %edx,%edx
		mov    %ecx,0x00000c(%esp)
		add    %edx,%ebx
		mov    %ecx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)

	_03a79d_jump:
		mov    0x000008(%esp),%ecx
		mov    (%esp),%edx
		mov    0x000004(%esp),%ebx
		xor    %esi,%esi
		mov    0x00000c(%esp),%ebp
		mov    %esi,0x000014(%esp)
		add    %ebx,%edx
		mov    0x000010(%esp),%ebx

	_03a7b8_jump:
		mov    (%ecx),%si
		test   %si,%si
		jl     _03a7e0_jump
		cmp    $0x0004b0,%si
		jge    _03a7e0_jump
		cmpb   $0x000000,0x000004(%ecx)
		jne    _03a7e0_jump
		movswl %si,%esi
		mov    _0c26c8_data(,%esi,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _0146c4_func

	_03a7e0_jump:
		add    $0x000006,%ecx
		add    $0x000004,%ebx
		add    $0x000004,%edx
		cmp    $0x000050,%ebx
		jl     _03a7f3_jump
		sub    $0x000050,%edx
		xor    %ebx,%ebx

	_03a7f3_jump:
		mov    0x000014(%esp),%edi
		add    $0x000010,%edi
		mov    %edi,0x000014(%esp)
		cmp    $0x000140,%di
		jl     _03a7b8_jump
		mov    0x00000c(%esp),%edi
		mov    0x000004(%esp),%ebp
		add    $0x000040,%edi
		add    $0x004600,%ebp
		mov    %edi,0x00000c(%esp)
		mov    %ebp,0x000004(%esp)
		cmp    $0x000100,%edi
		jne    _03a79d_jump
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03a834_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,0x000008(%esp)
		movswl %bx,%eax
		mov    _0cda86_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		imul   %eax,%ebx
		movswl %dx,%eax
		sar    $0x000004,%eax
		add    %ebx,%eax
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0cda90_data,%eax
		add    %edx,%edx
		add    %edx,%eax
		movswl %cx,%edx
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		lea    0x000000(,%eax,4),%edx
		mov    (%esp),%ebx
		sub    %eax,%edx
		mov    _0ccc60_data,%ecx
		add    %edx,%edx
		mov    0x000008(%esp),%eax
		add    %edx,%ebx
		sub    %ecx,%eax
		mov    %ebx,(%esp)
		xor    %edx,%edx
		mov    $0x000050,%ebx
		div    %ebx
		xor    %esi,%esi
		mov    %esi,0x000004(%esp)
		mov    %esi,0x00000c(%esp)
		mov    %eax,%ecx

	_03a8b1_jump:
		mov    0x000008(%esp),%edx
		mov    0x00000c(%esp),%esi
		mov    (%esp),%ebx
		add    %esi,%edx
		xor    %esi,%esi
		mov    0x000004(%esp),%ebp
		mov    %esi,0x000010(%esp)

	_03a8c8_jump:
		mov    (%ebx),%si
		test   %si,%si
		jl     _03a8f0_jump
		cmp    $0x0004b0,%si
		jge    _03a8f0_jump
		cmpb   $0x000000,0x000004(%ebx)
		jne    _03a8f0_jump
		movswl %si,%esi
		mov    _0c26c8_data(,%esi,4),%esi
		mov    %edx,%edi
		add    %ebp,%esi
		call   _0146c4_func

	_03a8f0_jump:
		mov    _0cda86_data,%esi
		sar    $0x000010,%esi
		imul   $0x000006,%esi,%esi
		add    $0x000500,%edx
		add    $0x000010,%ecx
		add    %esi,%ebx
		cmp    $0x0000e0,%ecx
		jl     _03a917_jump
		sub    $0x004600,%edx
		xor    %ecx,%ecx

	_03a917_jump:
		mov    0x000010(%esp),%edi
		add    $0x000010,%edi
		mov    %edi,0x000010(%esp)
		cmp    $0x0000e0,%di
		jl     _03a8c8_jump
		mov    0x000004(%esp),%ebp
		mov    0x00000c(%esp),%eax
		add    $0x000040,%ebp
		add    $0x004600,%eax
		mov    %ebp,0x000004(%esp)
		mov    %eax,0x00000c(%esp)
		cmp    $0x000100,%ebp
		jne    _03a8b1_jump
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03a954_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %ax,0x00001c(%esp)
		mov    %dx,0x000018(%esp)
		mov    %ecx,%eax
		mov    0x00001c(%esp),%ecx
		and    $0x0000f0,%dl
		and    $0x0000f0,%bl
		and    $0x0000f0,%al
		and    $0x0000f0,%cl
		mov    %edx,0x000008(%esp)
		mov    %ebx,%edi
		mov    %eax,0x00000c(%esp)
		cmp    %bx,%cx
		jne    _03a991_jump
		mov    %edx,%eax
		cmp    0x00000c(%esp),%ax
		je     _03abe7_jump

	_03a991_jump:
		mov    _0ccc5c_data,%ebx
		sub    _0ccc60_data,%ebx
		mov    $0x000050,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		mov    $0x000050,%ebp
		mov    %edx,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %ebp
		sub    %edi,%ecx
		mov    %cx,0x000014(%esp)
		mov    0x00000c(%esp),%ecx
		mov    %eax,%ebx
		mov    0x000008(%esp),%eax
		sub    %ecx,%eax
		mov    %ax,0x000010(%esp)
		mov    0x00000e(%esp),%eax
		mov    0x000012(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		add    %eax,%esi
		cmp    %ebp,%esi
		jl     _03a9f2_jump
		sub    %ebp,%esi

	_03a9f2_jump:
		test   %esi,%esi
		jge    _03a9f9_jump
		add    $0x000050,%esi

	_03a9f9_jump:
		cmp    $0x0000e0,%ebx
		jl     _03aa07_jump
		sub    $0x0000e0,%ebx

	_03aa07_jump:
		test   %ebx,%ebx
		jge    _03aa11_jump
		add    $0x0000e0,%ebx

	_03aa11_jump:
		mov    %ebx,%edx
		shl    $0x000002,%ebx
		add    %edx,%ebx
		mov    _0ccc60_data,%ecx
		shl    $0x000004,%ebx
		mov    _0ccc5c_data,%eax
		add    %ecx,%ebx
		mov    %eax,%edi
		add    %esi,%ebx
		mov    0x000014(%esp),%edx
		mov    %ebx,_0ccc5c_data
		mov    %ebx,%ebp
		test   %dx,%dx
		jle    _03aaa7_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _03aaa7_jump
		lea    0x004600(%ecx),%edx
		add    $0x000500,%eax
		cmp    %edx,%eax
		jbe    _03aa5b_jump
		mov    $0xffffba00,%eax
		jmp    _03aa5d_jump

	_03aa5b_jump:
		xor    %eax,%eax

	_03aa5d_jump:
		mov    0x000016(%esp),%ebp
		mov    0x00001a(%esp),%edx
		mov    $0x000130,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ebp
		mov    %edx,(%esp)
		lea    0x000500(%edi),%edx
		mov    %ebp,%ebx
		add    %edx,%eax
		mov    (%esp),%edx
		call   _03a834_func
		mov    $0x0000b0,%ecx
		mov    (%esp),%edx
		mov    %ebp,%ebx
		test   %esi,%esi
		jne    _03aa98_jump
		sub    $0x00004c,%edi
		jmp    _03aa9b_jump

	_03aa98_jump:
		add    $0x000004,%edi

	_03aa9b_jump:
		mov    %edi,%eax
		call   _03a718_func
		jmp    _03abe7_jump

	_03aaa7_jump:
		cmpw   $0x000000,0x000014(%esp)
		jle    _03ab0c_jump
		cmpw   $0x000000,0x000010(%esp)
		jge    _03ab0c_jump
		mov    _0ccc60_data,%esi
		lea    -0x000500(%edi),%eax
		cmp    %esi,%eax
		jae    _03aace_jump
		mov    $0x004600,%eax
		jmp    _03aad0_jump

	_03aace_jump:
		xor    %eax,%eax

	_03aad0_jump:
		mov    0x000016(%esp),%edx
		mov    0x00001a(%esp),%esi
		mov    $0x000130,%ecx
		sub    $0x000500,%edi
		sar    $0x000010,%edx
		sar    $0x000010,%esi
		add    %edi,%eax
		mov    %edx,(%esp)
		mov    %edx,%ebx
		mov    %esi,%edx
		call   _03a834_func
		mov    (%esp),%ebx
		mov    %esi,%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		call   _03a718_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03ab0c_jump:
		cmpw   $0x000000,0x000014(%esp)
		jge    _03ab65_jump
		cmpw   $0x000000,0x000010(%esp)
		jle    _03ab65_jump
		mov    0x000016(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,(%esp)
		mov    0x00001a(%esp),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    (%esp),%ebx
		mov    %eax,0x000004(%esp)
		mov    %eax,%edx
		mov    %ebp,%eax
		call   _03a834_func
		mov    $0x0000b0,%ecx
		mov    (%esp),%ebx
		mov    0x000004(%esp),%edx
		cmp    $0x00004c,%esi
		jne    _03ab54_jump
		add    %esi,%edi
		jmp    _03ab57_jump

	_03ab54_jump:
		sub    $0x000004,%edi

	_03ab57_jump:
		mov    %edi,%eax
		call   _03a718_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03ab65_jump:
		cmpw   $0x000000,0x000010(%esp)
		jle    _03ab87_jump
		mov    0x000016(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    $0x0000b0,%ecx
		mov    %edi,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03a718_func

	_03ab87_jump:
		cmpw   $0x000000,0x000014(%esp)
		jle    _03aba9_jump
		mov    0x000016(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    $0x000130,%ecx
		mov    %edi,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03a834_func

	_03aba9_jump:
		cmpw   $0x000000,0x000010(%esp)
		jge    _03abc8_jump
		mov    0x000016(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03a718_func

	_03abc8_jump:
		cmpw   $0x000000,0x000014(%esp)
		jge    _03abe7_jump
		mov    0x000016(%esp),%ebx
		mov    0x00001a(%esp),%edx
		mov    %ebp,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _03a834_func

	_03abe7_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03abf0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		xor    %edx,%edx
		mov    %edx,(%esp)
		mov    _0ccc24_data,%edx
		shr    $0x000002,%edx
		mov    _0ccc24_data,%ebx
		mov    %edx,_0de9e0_data
		mov    _0ccc30_data,%edx
		add    %ebx,%edx
		mov    _0c1934_data,%ebp
		mov    %edx,_0de9e4_data
		lea    -0x000001(%ebx),%edx
		mov    _0cee61_data,%ah
		mov    %edx,_0de9e8_data
		test   %ah,%ah
		je     _03ac3e_jump
		mov    $0x000001,%ebp

	_03ac3e_jump:
		mov    _0cee5d_data,%dl
		test   %dl,%dl
		je     _03ac5a_jump
		mov    $_0c7c88_data,%esi
		mov    _0ccba4_data,%ecx
		call   _013736_func
		jmp    _03acad_jump

	_03ac5a_jump:
		xor    %dh,%dh
		mov    %dx,0x000004(%esp)

	_03ac61_jump:
		mov    _0ccc24_data,%edx
		mov    0x000002(%esp),%ebx
		shr    $0x000002,%edx
		sar    $0x000010,%ebx
		imul   %edx,%ebx
		mov    $_0de9e0_data,%ecx
		mov    (%esp),%edi
		mov    $_0c7c88_data,%esi
		mov    %ebp,%eax
		mov    _0ccc0c_data,%edx
		add    %ebp,%ebp
		call   _0131a9_func
		cmp    $0x000010,%ebp
		jne    _03ac9d_jump
		mov    $0x000001,%ebp
		mov    %ebp,(%esp)

	_03ac9d_jump:
		mov    0x000004(%esp),%ebx
		inc    %ebx
		mov    %bx,0x000004(%esp)
		cmp    $0x000004,%bx
		jl     _03ac61_jump

	_03acad_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03acb8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		mov    _0c1924_data,%ebx
		mov    %ebx,0x00001c(%esp)
		mov    _0c1928_data,%ebx
		mov    %ebx,0x000014(%esp)
		mov    _0c192c_data,%ebx
		mov    %ebx,0x000004(%esp)
		mov    _0ccc0c_data,%ebx
		shl    $0x000004,%ebx
		movswl %dx,%edx
		mov    %ebx,0x000008(%esp)
		mov    _0cda86_data,%ebx
		sar    $0x000004,%edx
		sar    $0x000010,%ebx
		imul   %ebx,%edx
		cwtl   
		sar    $0x000004,%eax
		mov    _0c1934_data,%ebp
		add    %eax,%edx
		xor    %ecx,%ecx
		lea    0x000000(,%edx,4),%eax
		mov    %ebp,0x000010(%esp)
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		add    %eax,%eax
		mov    %ecx,0x000020(%esp)
		add    %edx,%eax
		mov    $0x004600,%edx
		mov    %eax,(%esp)
		mov    0x00001c(%esp),%eax
		mov    %edx,_0de9e0_data
		mov    %edx,_0de9e8_data
		mov    %eax,0x00000c(%esp)
		xor    %edx,%edx
		mov    _0ccc60_data,%eax
		mov    %dx,0x000034(%esp)
		mov    %eax,_0de9e4_data

	_03ad53_jump:
		mov    0x000032(%esp),%ebx
		sar    $0x000010,%ebx
		imul   $0x004600,%ebx,%ebx
		mov    _0de9e4_data,%ecx
		add    $0x004600,%ecx
		mov    _0cee5d_data,%ah
		mov    %ecx,_0de9e4_data
		test   %ah,%ah
		je     _03ad98_jump
		mov    $_0de9e0_data,%ecx
		mov    $0x000050,%edx
		mov    0x000020(%esp),%edi
		mov    $_0c8408_data,%esi
		mov    %ebp,%eax
		call   _013df3_func
		jmp    _03adb2_jump

	_03ad98_jump:
		mov    $_0de9e0_data,%ecx
		mov    $0x000050,%edx
		mov    0x000020(%esp),%edi
		mov    $_0c8388_data,%esi
		mov    %ebp,%eax
		call   _013864_func

	_03adb2_jump:
		add    %ebp,%ebp
		cmp    $0x000010,%ebp
		jne    _03adcc_jump
		mov    $0x000001,%ebp
		mov    0x00001c(%esp),%edi
		add    %ebp,%edi
		mov    %ebp,0x000020(%esp)
		mov    %edi,0x00001c(%esp)

	_03adcc_jump:
		mov    0x000034(%esp),%ebx
		inc    %ebx
		mov    %bx,0x000034(%esp)
		cmp    $0x000004,%bx
		jl     _03ad53_jump
		mov    0x00000c(%esp),%eax
		mov    %eax,0x000028(%esp)
		mov    (%esp),%eax
		mov    %eax,0x000018(%esp)
		mov    0x000014(%esp),%eax
		mov    %eax,%edx
		mov    $0x000004,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000014(%esp),%eax
		mov    %edx,%esi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    _0ccc24_data,%ebx
		shr    $0x000002,%ebx
		imul   %ebx,%esi
		mov    _0ccc0c_data,%edi
		mov    0x000004(%esp),%edx
		imul   %edi,%edx
		add    %esi,%eax
		add    _0ccc30_data,%eax
		add    %edx,%eax
		mov    %eax,0x000024(%esp)
		mov    %ebx,%eax
		mov    %ebx,0x00002c(%esp)
		neg    %eax
		mov    _0cda86_data,%esi
		mov    %eax,0x00002c(%esp)
		mov    0x000008(%esp),%eax
		sar    $0x000010,%esi
		mov    %eax,_0de9e0_data
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		add    %eax,%eax
		mov    %edi,_0de9ec_data
		mov    %eax,_0de9e4_data
		lea    0x000000(,%edi,4),%eax
		sub    %edi,%eax
		mov    %eax,_0de9f0_data
		mov    _0cda88_data,%eax
		sar    $0x000010,%eax
		imul   %eax,%esi
		mov    $0x0004b0,%edx
		mov    0x000010(%esp),%ebp
		mov    %edx,_0de9e8_data
		lea    -0x000001(%esi),%edx
		mov    _0ccc24_data,%ebx
		lea    0x000000(,%edx,4),%eax
		mov    %ebx,_0de9fc_data
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		add    %eax,%eax
		xor    %esi,%esi
		add    %eax,%edx
		mov    _0ccc30_data,%eax
		mov    %esi,0x000030(%esp)
		add    %ebx,%eax
		mov    %edx,_0de9f4_data
		mov    %eax,_0de9f8_data

	_03aecf_jump:
		mov    0x00002c(%esp),%edx
		mov    %ebp,%eax
		mov    0x000024(%esp),%esi
		call   _01283c_func
		mov    _0ccc24_data,%eax
		mov    _0ccc30_data,%ebx
		shr    $0x000002,%eax
		mov    _0ccc24_data,%ecx
		add    %eax,%edx
		add    %ecx,%ebx
		lea    (%esi,%edx,1),%eax
		mov    %edx,0x00002c(%esp)
		cmp    %ebx,%eax
		jbe    _03af12_jump
		mov    %edx,%esi
		sub    %ecx,%esi
		mov    %esi,0x00002c(%esp)
		mov    0x000024(%esp),%esi
		inc    %esi
		mov    %esi,0x000024(%esp)

	_03af12_jump:
		mov    0x00002c(%esp),%edi
		mov    _0cee5d_data,%dl
		add    %edi,%esi
		test   %dl,%dl
		je     _03af45_jump
		mov    $_0de9e0_data,%ebx
		mov    0x000028(%esp),%edi
		xor    %eax,%eax
		mov    0x000018(%esp),%edx
		mov    0x000030(%esp),%ax
		mov    $_0c3988_data,%ecx
		shl    $0x000008,%eax
		call   _0143e5_func
		jmp    _03af66_jump

	_03af45_jump:
		mov    $_0de9e0_data,%ebx
		mov    0x000028(%esp),%edi
		xor    %eax,%eax
		mov    0x000018(%esp),%edx
		mov    0x000030(%esp),%ax
		mov    $_0c3988_data,%ecx
		shl    $0x000008,%eax
		call   _014382_func

	_03af66_jump:
		add    %ebp,%ebp
		cmp    $0x000010,%ebp
		jne    _03af76_jump
		mov    $0x000001,%ebp
		add    %ebp,0x000028(%esp)

	_03af76_jump:
		mov    0x000030(%esp),%edi
		inc    %edi
		mov    %edi,0x000030(%esp)
		cmp    $0x000004,%di
		jb     _03aecf_jump
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03af94_jump:
		push   %ebx
		push   %edx
		mov    %al,%bl
		call   _03b140_func
		cmp    $0x000064,%bl
		jne    _03afb8_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		or     $0x000008,%al
		mov    $0x0003c2,%edx
		and    $0x0000fb,%al
		jmp    _03b055_jump

	_03afb8_jump:
		cmp    $0x000050,%bl
		jne    _03afd3_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		or     $0x000004,%al
		mov    $0x0003c2,%edx
		and    $0x0000f7,%al
		jmp    _03b055_jump

	_03afd3_jump:
		cmp    $0x000046,%bl
		jne    _03afe9_jump
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003c2,%edx
		and    $0x0000f3,%al
		jmp    _03b055_jump

	_03afe9_jump:
		cmp    $0x00003c,%bl
		jne    _03b056_jump
		mov    $0x000063,%al
		mov    $0x0003c2,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x00007f,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x00000c,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x0000de,%al
		or     $0x000020,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000ff,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000c4,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx

	_03b055_jump:
		out    %al,(%dx)

	_03b056_jump:
		cmp    $0x000032,%bl
		jne    _03b0bb_jump
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x00007f,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x000074,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		and    $0x0000de,%al
		or     $0x000020,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000ff,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0000fc,%al
		mov    $0x0003d5,%edx
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)

	_03b0bb_jump:
		mov    %bl,_0cee8f_data
		pop    %edx
		pop    %ebx
		ret    



_03b0c4_func:
		push   %edx
		mov    $0x0003cc,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0dea12_data
		mov    $0x000010,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0dea11_data
		mov    $0x000011,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0dea10_data
		mov    $0x000006,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0dea14_data
		mov    $0x000007,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    $0x0003d4,%edx
		mov    %al,_0dea13_data
		mov    $0x000016,%al
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    %al,_0dea15_data
		pop    %edx
		ret    



_03b140_func:
		push   %edx
		mov    $0x0003c2,%edx
		mov    _0dea12_data,%al
		out    %al,(%dx)
		mov    $0x000010,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0dea11_data,%al
		out    %al,(%dx)
		mov    $0x000011,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0dea10_data,%al
		out    %al,(%dx)
		mov    $0x000006,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0dea14_data,%al
		out    %al,(%dx)
		mov    $0x000007,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0dea13_data,%al
		out    %al,(%dx)
		mov    $0x000016,%al
		mov    $0x0003d4,%edx
		out    %al,(%dx)
		mov    $0x0003d5,%edx
		mov    _0dea15_data,%al
		out    %al,(%dx)
		pop    %edx
		ret    



_03b1b0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ebx
		mov    _0ccc5c_data,%ecx
		mov    %ecx,0x000004(%esp)
		mov    _0cda86_data,%ecx
		movswl %dx,%edx
		sar    $0x000010,%ecx
		sar    $0x000004,%edx
		lea    -0x000014(%ecx),%esi
		imul   %ecx,%edx
		movswl %bx,%ebx
		mov    _0c1924_data,%eax
		sar    $0x000004,%ebx
		mov    _0cda90_data,%ebp
		add    %ebx,%edx
		mov    %eax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%ebx
		mov    _0c1930_data,%eax
		sub    %edx,%ebx
		mov    %esi,0x000008(%esp)
		add    %ebx,%ebx
		mov    _095b56_data,%dl
		add    %ebx,%ebp
		test   %dl,%dl
		je     _03b2b9_jump
		cmpb   $0x000000,_0cee64_data
		je     _03b2b9_jump
		mov    _0ccc0c_data,%ecx
		lea    0x000000(,%esi,4),%edi
		mov    _0cee5d_data,%bl
		sub    %esi,%edi
		shl    $0x000004,%ecx
		add    %edi,%edi
		test   %bl,%bl
		je     _03b2a7_jump
		mov    0x00000c(%esp),%edx
		mov    _0ccba4_data,%ebx
		sub    %edx,%ebx
		add    $0x000004,%ebx
		mov    $0x000050,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,(%esp)
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $0x000004,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    (%esp),%eax
		lea    0x000000(,%eax,4),%ebx
		add    %eax,%ebx
		mov    _0ccba4_data,%esi
		shl    $0x000004,%ebx
		mov    %ebp,%eax
		add    %ebx,%esi
		add    $0x0ab000,%ebx
		add    %edx,%esi
		add    %edx,%ebx
		mov    $_0c7c88_data,%edx
		call   _012a73_func
		jmp    _03b2b9_jump

	_03b2a7_jump:
		mov    0x00000c(%esp),%esi
		mov    $_0c7c88_data,%edx
		mov    %eax,%ebx
		mov    %ebp,%eax
		call   _0129d3_func

	_03b2b9_jump:
		mov    0x000008(%esp),%ecx
		mov    0x000004(%esp),%ebx
		mov    0x00000c(%esp),%esi
		lea    0x000000(,%ecx,4),%eax
		mov    $_0c8388_data,%edx
		sub    %ecx,%eax
		mov    _0ccc60_data,%edi
		add    %eax,%eax
		mov    %edi,%ecx
		mov    %eax,%edi
		mov    %ebp,%eax
		call   _012850_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03b2f0_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    $_0c6788_data,%edx
		xor    %eax,%eax

	_03b2fb_jump:
		inc    %eax
		movb   $0x000000,(%ebx)
		inc    %ebx
		movw   $0x000000,(%edx)
		add    $0x000002,%edx
		cmp    $0x000300,%ax
		jl     _03b2fb_jump
		pop    %edx
		pop    %ebx
		ret    



_03b314_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $_0c6788_data,%ebx
		mov    %eax,%edx
		xor    %esi,%esi

	_03b321_jump:
		mov    $0x000006,%cl
		inc    %edx
		xor    %eax,%eax
		add    $0x000002,%ebx
		mov    -0x000001(%edx),%al
		inc    %esi
		cwtl   
		shl    %cl,%eax
		mov    %ax,-0x000002(%ebx)
		cmp    $0x000300,%si
		jl     _03b321_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03b340_func:
		push   %ecx
		push   %esi
		mov    $0x000006,%ecx
		mov    $0x000001,%edx
		mov    $_0c6d88_data,%esi
		sub    %eax,%ecx
		mov    %ax,_0cec30_data
		shl    %cl,%edx
		mov    $_0c6d88_data,%eax
		mov    %dx,_0ced22_data
		mov    $0x000001,%dl
		mov    $0x0000ff,%ecx
		mov    %dl,_0ceecb_data
		call   _03b2f0_func
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		pop    %esi
		pop    %ecx
		ret    



_03b398_func:
		push   %ecx
		mov    $0x000006,%ecx
		mov    $0x000001,%edx
		sub    %eax,%ecx
		shl    %cl,%edx
		mov    %dx,_0ced22_data
		mov    $0x000002,%dl
		mov    %ax,_0cec30_data
		mov    %dl,_0ceecb_data
		pop    %ecx
		ret    



_03b3c0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    _0ced22_data,%cx
		test   %cx,%cx
		je     _03b4a6_jump
		mov    $_0c6788_data,%eax
		mov    %edx,%esi
		mov    %ecx,%edi
		mov    %ebx,%edx
		dec    %edi
		mov    _0ceecb_data,%bl
		mov    %di,_0ced22_data
		cmp    $0x000001,%bl
		jne    _03b425_jump
		xor    %ebx,%ebx

	_03b3f9_jump:
		xor    %ecx,%ecx
		mov    (%edx),%cl
		mov    %ecx,(%esp)
		mov    (%esp),%edi
		mov    _0cec30_data,%cl
		shl    %cl,%edi
		add    $0x000002,%eax
		mov    %edi,%ecx
		mov    -0x000002(%eax),%di
		inc    %edx
		add    %ecx,%edi
		inc    %ebx
		mov    %di,-0x000002(%eax)
		cmp    $0x000300,%bx
		jge    _03b455_jump
		jmp    _03b3f9_jump

	_03b425_jump:
		cmp    $0x000002,%bl
		jne    _03b455_jump
		xor    %ebx,%ebx

	_03b42c_jump:
		cmpw   $0x000000,(%eax)
		jle    _03b449_jump
		xor    %ecx,%ecx
		mov    (%edx),%cl
		mov    %ecx,(%esp)
		mov    (%esp),%edi
		mov    _0cec30_data,%cl
		shl    %cl,%edi
		mov    %edi,%ecx
		sub    %cx,(%eax)

	_03b449_jump:
		add    $0x000002,%eax
		inc    %ebx
		inc    %edx
		cmp    $0x000300,%bx
		jl     _03b42c_jump

	_03b455_jump:
		mov    $_0c6788_data,%eax
		xor    %edx,%edx

	_03b45c_jump:
		inc    %esi
		movswl (%eax),%ebx
		add    $0x000002,%eax
		sar    $0x000006,%ebx
		inc    %edx
		mov    %bl,-0x000001(%esi)
		cmp    $0x000300,%dx
		jl     _03b45c_jump
		mov    $_0c6d88_data,%esi
		mov    $0x0000ff,%ecx
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		cmpw   $0x000000,_0ced22_data
		jne    _03b4a6_jump
		orb    $0x000040,_0ceecb_data

	_03b4a6_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03b4b0_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		cwtl   
		call   _03b398_func
		mov    _0ced22_data,%si
		xor    %ebx,%ebx
		test   %si,%si
		jle    _03b4e5_jump

	_03b4c9_jump:
		call   _016df7_func
		call   _016de7_func
		mov    $_0c6d88_data,%edx
		mov    %ecx,%eax
		inc    %ebx
		call   _03b3c0_func
		cmp    %si,%bx
		jl     _03b4c9_jump

	_03b4e5_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03b4ec_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmp    _0ceec7_data,%al
		je     _03b55f_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %al,_0ceec7_data
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7388_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0c6d88_data,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %edi,%eax
		call   _03b314_func
		cmpb   $0x000041,_0ceecb_data
		jne    _03b55f_jump
		mov    $0x0000ff,%ecx
		mov    %edi,%esi
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    

	_03b55f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_03b564_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %ax,0x000004(%esp)
		mov    %edx,%ecx
		mov    %bx,0x000008(%esp)
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%esi
		sub    %edx,%esi
		movswl %cx,%edx
		mov    %edx,%ecx
		lea    0x000000(,%edx,4),%eax
		shl    $0x000008,%esi
		sub    %edx,%eax
		mov    _0c7388_data(%esi,%eax,1),%bl
		mov    %bl,(%esp)
		mov    _0c7389_data(%esi,%eax,1),%bl
		mov    _0c738a_data(%esi,%eax,1),%al
		mov    %al,0x000002(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %bl,0x000001(%esp)
		mov    %eax,%edi
		lea    0x000003(%eax),%esi
		jmp    _03b605_jump

	_03b5c7_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000300,%edx,%edx
		mov    _0c7388_data(%edx,%esi,1),%bl
		mov    %bl,_0c7388_data(%edx,%edi,1)
		mov    _0c7389_data(%edx,%esi,1),%bl
		add    $0x000003,%esi
		mov    %bl,_0c7389_data(%edx,%edi,1)
		add    $0x000003,%edi
		mov    _0c7387_data(%edx,%esi,1),%al
		inc    %ecx
		mov    %al,_0c7387_data(%edx,%edi,1)

	_03b605_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    %eax,%ecx
		jl     _03b5c7_jump
		mov    0x000002(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %eax,%edx
		lea    0x000000(,%ecx,4),%esi
		shl    $0x000002,%eax
		sub    %ecx,%esi
		sub    %edx,%eax
		shl    $0x000008,%esi
		mov    (%esp),%dl
		mov    %dl,_0c7388_data(%esi,%eax,1)
		mov    0x000001(%esp),%dl
		mov    $_0c6d88_data,%edi
		mov    %dl,_0c7389_data(%esi,%eax,1)
		mov    0x000002(%esp),%dl
		mov    $0x000300,%ecx
		mov    %dl,_0c738a_data(%esi,%eax,1)
		add    $_0c7388_data,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %edi,%eax
		call   _03b314_func
		cmpw   $0x000000,_0ced22_data
		jne    _03b684_jump
		movw   $0x000001,_0ced22_data

	_03b684_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_03b68c_switch:
		.long   _03b72e_case
		.long   _03b736_case
		.long   _03b73e_case
		.long   _03b746_case
		.long   _03b74e_case
		.long   _03b756_case
		.long   _03b75e_case
		.long   _03b764_case
		.long   _03b76c_case
		.long   _03b774_case
		.long   _03b77c_case
		.long   _03b784_case




_03b6bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		cmpb   $0x000000,_0ceec9_data
		je     _03b84d_jump
		testb  $0x000040,_0ceecb_data
		je     _03b84d_jump
		mov    _0ce3a2_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		add    %edi,%eax
		mov    _0cc1f0_data,%edi
		shl    $0x000002,%eax
		add    %edi,%eax
		mov    _0ce46c_data,%di
		xor    %esi,%esi
		test   %di,%di
		jle    _03b84d_jump

	_03b70b_jump:
		cmpw   $0x00009e,0x000060(%eax)
		jne    _03b824_jump
		mov    0x00006c(%eax),%ch
		cmp    $0x00000b,%ch
		ja     _03b78a_jump
		movzbl %ch,%edi
		jmp    *%cs:_03b68c_switch(,%edi,4)

	_03b72e_case:
		xor    %dh,%dh
		mov    $0x000001,%cl
		xor    %dl,%dl
		jmp    _03b78a_jump

	_03b736_case:
		xor    %dh,%dh
		mov    $0x000002,%cl
		xor    %dl,%dl
		jmp    _03b78a_jump

	_03b73e_case:
		mov    $0x000001,%dh
		mov    $0x000002,%cl
		xor    %dl,%dl
		jmp    _03b78a_jump

	_03b746_case:
		mov    $0x000001,%dh
		xor    %cl,%cl
		xor    %dl,%dl
		jmp    _03b78a_jump

	_03b74e_case:
		mov    $0x000002,%dh
		xor    %cl,%cl
		xor    %dl,%dl
		jmp    _03b78a_jump

	_03b756_case:
		mov    $0x000002,%dh
		mov    $0x000001,%cl
		xor    %dl,%dl
		jmp    _03b78a_jump

	_03b75e_case:
		mov    $0x000001,%bl
		xor    %bh,%bh
		jmp    _03b788_jump

	_03b764_case:
		mov    $0x000002,%bl
		mov    $0x000001,%dl
		xor    %bh,%bh
		jmp    _03b78a_jump

	_03b76c_case:
		mov    $0x000002,%bl
		mov    $0x000001,%bh
		mov    %bh,%dl
		jmp    _03b78a_jump

	_03b774_case:
		mov    $0x000001,%bh
		xor    %bl,%bl
		mov    %bh,%dl
		jmp    _03b78a_jump

	_03b77c_case:
		mov    $0x000002,%bh
		mov    $0x000001,%dl
		xor    %bl,%bl
		jmp    _03b78a_jump

	_03b784_case:
		mov    $0x000002,%bh
		mov    $0x000001,%bl

	_03b788_jump:
		mov    %bl,%dl

	_03b78a_jump:
		test   %dl,%dl
		jbe    _03b798_jump
		cmp    $0x000001,%dl
		je     _03b7d5_jump
		jmp    _03b819_jump

	_03b798_jump:
		movzbw _0cdafc_data,%di
		mov    %edi,0x000008(%esp)
		mov    _0cdabc_data,%di
		add    0x000008(%esp),%edi
		mov    %edi,0x000004(%esp)
		movzbw 0x000068(%eax),%di
		mov    0x000028(%eax),%ax
		add    %edi,%eax
		mov    0x000004(%esp),%edi
		cmp    %di,%ax
		jge    _03b7cd_jump
		mov    %cl,0x00000c(%esp)
		jmp    _03b819_jump

	_03b7cd_jump:
		jle    _03b810_jump
		mov    %dh,0x00000c(%esp)
		jmp    _03b819_jump

	_03b7d5_jump:
		movzbw _0cdafd_data,%di
		mov    %edi,0x000008(%esp)
		mov    _0cdac0_data,%di
		add    0x000008(%esp),%edi
		mov    %edi,(%esp)
		movzbw 0x000069(%eax),%di
		mov    0x00002c(%eax),%ax
		add    %edi,%eax
		mov    (%esp),%edi
		cmp    %di,%ax
		jge    _03b808_jump
		mov    %bl,0x00000c(%esp)
		jmp    _03b819_jump

	_03b808_jump:
		jle    _03b810_jump
		mov    %bh,0x00000c(%esp)
		jmp    _03b819_jump

	_03b810_jump:
		mov    _0ceec7_data,%al
		mov    %al,0x00000c(%esp)

	_03b819_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		call   _03b4ec_func

	_03b824_jump:
		inc    %esi
		movswl %si,%eax
		mov    _0ce3a2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%edi
		add    %edi,%eax
		cmp    _0ce46c_data,%si
		jl     _03b70b_jump

	_03b84d_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03b858_func:
		push   %edx
		xor    %edx,%edx
		mov    _0ceec7_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000008,%eax
		mov    $_0c6d88_data,%edx
		add    $_0c7388_data,%eax
		call   _03b3c0_func
		pop    %edx
		ret    



_03b880_func:
		push   %edx
		xor    %edx,%edx
		mov    _0ceec7_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7388_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03b340_func
		pop    %edx
		ret    



_03b8a8_func:
		push   %edx
		xor    %edx,%edx
		mov    _0ceec7_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7388_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03b398_func
		pop    %edx
		ret    



_03b8d0_func:
		push   %edx
		xor    %edx,%edx
		mov    _0ceec7_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7388_data,%edx
		shl    $0x000008,%eax
		add    %eax,%edx
		mov    $0x000002,%eax
		call   _03b4b0_func
		pop    %edx
		ret    



_03b8f8_func:
		push   %ecx
		push   %esi
		push   %edi
		call   _016df7_func
		cmpb   $0x000001,_095b14_data
		jne    _03b932_jump
		call   _03a2a0_func
		mov    $0x003e80,%ecx
		mov    _0ccba4_data,%edi
		call   _012783_func
		mov    $0x003e80,%ecx
		mov    _0ccba8_data,%edi
		call   _012783_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_03b932_jump:
		mov    _095b10_data,%esi
		mov    _0cc534_data,%edi
		call   _014bca_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03b948_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    $0x000001,%bl
		xor    %edx,%edx
		xor    %ecx,%ecx

	_03b957_jump:
		call   _016ed5_func
		cmpb   $0x000001,_095b14_data
		jne    _03b98e_jump
		call   _016df7_func
		call   _03a2a0_func
		call   _016de7_func
		cmp    _0cee93_data,%cl
		je     _03b983_jump
		call   _016e5a_func
		mov    %eax,%edx

	_03b983_jump:
		test   %bl,%bl
		jne    _03b9b5_jump
		call   _03b858_func
		jmp    _03b9b5_jump

	_03b98e_jump:
		call   _016df7_func
		call   _016de7_func
		cmp    _0cee93_data,%cl
		je     _03b9a7_jump
		call   _016e5a_func
		mov    %eax,%edx

	_03b9a7_jump:
		test   %bl,%bl
		jne    _03b9b0_jump
		call   _03b858_func

	_03b9b0_jump:
		call   _03a2a0_func

	_03b9b5_jump:
		mov    %edx,%eax
		call   *(%esp)
		mov    %cl,%bl
		test   %ax,%ax
		je     _03b957_jump
		cmpl   $_037200_jump,(%esp)
		je     _03b9d2_jump
		xor    %ah,%ah
		mov    %ah,_0cee95_data

	_03b9d2_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03bad8_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		mov    $0x000300,%ecx
		mov    $_0c7388_data,%esi
		mov    _0ceec7_data,%al
		mov    $_0c6188_data,%edi
		mov    %al,_0cee91_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c7388_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000300,%ecx
		mov    $_0c6d88_data,%edi
		xor    %ah,%ah
		mov    %edx,%esi
		mov    %ah,_0ceec7_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_03bb4c_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000300,%ecx
		mov    $_0c6188_data,%esi
		mov    _0cee91_data,%al
		mov    $_0c7388_data,%edi
		mov    %al,_0ceec7_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03bb7c_func:
		push   %edx
		mov    _0ccc38_data,%eax
		mov    %eax,_0ccbfc_data
		mov    _0ccc2c_data,%eax
		mov    %eax,_0ccc10_data
		mov    _0ccc08_data,%eax
		mov    %eax,_0ccc28_data
		xor    %eax,%eax
		mov    _0cee87_data,%al
		mov    _0ccbc0_data(,%eax,4),%edx
		mov    %edx,_0ccc38_data
		mov    _0ccbdc_data(,%eax,4),%edx
		mov    _0ccc40_data(,%eax,4),%eax
		mov    %edx,_0ccc2c_data
		mov    %eax,_0ccc08_data
		pop    %edx
		ret    



_03bbcc_func:
		mov    _0ccbfc_data,%eax
		mov    %eax,_0ccc38_data
		mov    _0ccc10_data,%eax
		mov    %eax,_0ccc2c_data
		mov    _0ccc28_data,%eax
		mov    %eax,_0ccc08_data
		ret    



_03bbec_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x00fa00,%ecx
		mov    _0ccc38_data,%esi
		mov    _0cc534_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03bc14_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x000140,%edi
		mov    _0cc498_data,%dx
		mov    _0cc49c_data,%bx
		sub    %edx,%edi
		mov    _095b4b_data,%ah
		add    %ebx,%edi
		test   %ah,%ah
		jne    _03bc61_jump
		mov    $0x00fa00,%ecx
		mov    _0cc528_data,%esi
		mov    _0ccba4_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _03bd5d_jump

	_03bc61_jump:
		mov    _096238_data,%eax
		mov    _0cc49c_data,%edx
		cmp    %edx,%eax
		je     _03bca4_jump
		jge    _03bc9a_jump
		mov    _0cc496_data,%ecx
		mov    _0cc49a_data,%ebx
		mov    _0cc49e_data,%edx
		mov    _0cc4a2_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02486c_func

	_03bc9a_jump:
		mov    _0cc49c_data,%eax
		mov    %eax,_096238_data

	_03bca4_jump:
		mov    _0cc4a4_data,%ebx
		lea    0x000000(,%ebx,4),%eax
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0ccba4_data,%eax
		shl    $0x000006,%ebx
		call   _07c050_func
		mov    _0ccba4_data,%edx
		mov    _0cc49c_data,%ecx
		mov    _0cc4a4_data,%ebx
		add    %ecx,%edx
		lea    0x000000(,%ebx,4),%ecx
		add    %ebx,%ecx
		mov    _0cc49c_data,%esi
		shl    $0x000006,%ecx
		mov    _0cc528_data,%ebx
		lea    (%edx,%ecx,1),%eax
		add    %esi,%ebx
		mov    _0cc4a4_data,%si
		jmp    _03bd20_jump

	_03bcfc_jump:
		mov    _0cc49c_data,%dx
		jmp    _03bd0d_jump

	_03bd05_jump:
		inc    %edx
		inc    %eax
		mov    (%ebx),%cl
		inc    %ebx
		mov    %cl,-0x000001(%eax)

	_03bd0d_jump:
		mov    _0cc498_data,%ebp
		movswl %dx,%ecx
		cmp    %ebp,%ecx
		jl     _03bd05_jump
		movswl %di,%ecx
		inc    %esi
		add    %ecx,%eax

	_03bd20_jump:
		add    %ecx,%ebx
		mov    _0cc4a0_data,%ebp
		movswl %si,%ecx
		cmp    %ebp,%ecx
		jl     _03bcfc_jump
		mov    $0x0000c8,%ebx
		mov    _0ccba4_data,%edx
		sub    %ebp,%ebx
		lea    0x000000(,%ebp,4),%eax
		lea    0x000000(,%ebx,4),%ecx
		add    %ebp,%eax
		add    %ecx,%ebx
		shl    $0x000006,%eax
		shl    $0x000006,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _07c050_func

	_03bd5d_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03bd64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		xor    %edx,%edx
		mov    %edx,_0dea00_data
		cmpw   $0x000001,_0cecd4_data
		jne    _03bd86_jump
		cmpw   $0x000009,_0cecc0_data
		je     _03bdb6_jump

	_03bd86_jump:
		cmpw   $0x000002,_0cecd4_data
		jne    _03bd9a_jump
		cmpw   $0x000004,_0cecc0_data
		je     _03bdb6_jump

	_03bd9a_jump:
		cmpw   $0x000004,_0cecd4_data
		jne    _03c103_jump
		cmpw   $0x000009,_0cecc0_data
		jne    _03c103_jump

	_03bdb6_jump:
		xor    %ecx,%ecx
		mov    $0x00003f,%esi
		mov    $0x000003,%edi
		mov    $0x000004,%ebp

	_03bdc7_jump:
		mov    _0ccc78_data,%eax
		mov    _0c7388_data(%ecx),%dl
		mov    %dl,0x002d00(%ecx,%eax,1)
		mov    _0c7389_data(%ecx),%dl
		mov    %dl,0x002d01(%ecx,%eax,1)
		mov    _0c738a_data(%ecx),%dl
		mov    %dl,0x002d02(%ecx,%eax,1)
		xor    %edx,%edx
		mov    _0c7388_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03be15_jump
		mov    %ebx,%eax

	_03be15_jump:
		mov    _0ccc78_data,%edx
		mov    %al,(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7389_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03be40_jump
		mov    %ebx,%eax

	_03be40_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x000001(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c738a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03be6b_jump
		mov    %ebx,%eax

	_03be6b_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x000002(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7388_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03be91_jump
		mov    %ebx,%eax

	_03be91_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x000f00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7389_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03beba_jump
		mov    %ebx,%eax

	_03beba_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x000f01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c738a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03bee3_jump
		mov    %ebx,%eax

	_03bee3_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x000f02(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7388_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000006,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03bf11_jump
		mov    %ebx,%eax

	_03bf11_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x001500(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7389_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000006,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03bf3f_jump
		mov    %ebx,%eax

	_03bf3f_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x001501(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c738a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03bf68_jump
		mov    %ebx,%eax

	_03bf68_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x001502(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7388_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03bf91_jump
		mov    %ebx,%eax

	_03bf91_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x001e00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7389_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03bfba_jump
		mov    %ebx,%eax

	_03bfba_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x001e01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c738a_data(%ecx),%dl
		shl    $0x000003,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03bfe3_jump
		mov    %ebx,%eax

	_03bfe3_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x001e02(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7388_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c012_jump
		mov    %ebx,%eax

	_03c012_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x002a00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7389_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c041_jump
		mov    %ebx,%eax

	_03c041_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x002a01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c738a_data(%ecx),%dl
		shl    $0x000002,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03c072_jump
		mov    %ebx,%eax

	_03c072_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x0029ff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7385_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7386_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7387_data(%ecx)
		cmp    $0x000300,%ecx
		jne    _03bdc7_jump
		mov    $0x000005,%edx
		xor    %eax,%eax
		call   _03c340_func
		mov    $0x000007,%edx
		mov    $0x000005,%eax
		call   _03c340_func
		mov    $0x00000a,%edx
		mov    $0x000007,%eax
		call   _03c340_func
		mov    $0x00000e,%edx
		mov    $0x00000a,%eax
		xor    %ecx,%ecx
		call   _03c340_func
		mov    $0x0000c8,%eax
		mov    %cx,_0ceb88_data
		call   _0690e0_func
		inc    %eax
		mov    %ax,_0ceb8a_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c103_jump:
		cmpw   $0x000005,_0cecd4_data
		jne    _03c336_jump
		cmpw   $0x000004,_0cecc0_data
		jne    _03c336_jump
		xor    %ecx,%ecx
		mov    $0x000064,%edi
		mov    $0x00003f,%esi

	_03c12b_jump:
		mov    _0ccc78_data,%eax
		mov    _0c7388_data(%ecx),%dl
		mov    %dl,0x002d00(%ecx,%eax,1)
		mov    _0c7389_data(%ecx),%dl
		mov    %dl,0x002d01(%ecx,%eax,1)
		mov    _0c738a_data(%ecx),%dl
		xor    %ebx,%ebx
		mov    %dl,0x002d02(%ecx,%eax,1)
		mov    %esi,%eax
		mov    _0c7388_data(%ecx),%bl
		cmp    %ebx,%eax
		jle    _03c167_jump
		mov    %ebx,%eax

	_03c167_jump:
		mov    _0ccc78_data,%edx
		mov    %al,(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7389_data(%ecx),%dl
		imul   $0x00004d,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c18c_jump
		mov    %ebx,%eax

	_03c18c_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x000001(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c738a_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c1b2_jump
		mov    %ebx,%eax

	_03c1b2_jump:
		mov    _0ccc78_data,%edx
		xor    %ebx,%ebx
		mov    %al,0x000002(%ecx,%edx,1)
		mov    %esi,%eax
		mov    _0c7388_data(%ecx),%bl
		cmp    %ebx,%eax
		jle    _03c1cc_jump
		mov    %ebx,%eax

	_03c1cc_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x002a00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7389_data(%ecx),%dl
		imul   $0x00004d,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c1f5_jump
		mov    %ebx,%eax

	_03c1f5_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x002a01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c738a_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03c221_jump
		mov    %ebx,%eax

	_03c221_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x0029ff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7385_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7386_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7387_data(%ecx)
		cmp    $0x0002fd,%ecx
		jne    _03c12b_jump
		mov    $0x00000e,%edx
		xor    %eax,%eax
		mov    $0x000180,%ecx
		call   _03c340_func
		mov    $0x000064,%edi
		mov    $0x00003f,%esi

	_03c273_jump:
		xor    %edx,%edx
		mov    _0c7388_data(%ecx),%dl
		imul   $0x000054,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c28f_jump
		mov    %ebx,%eax

	_03c28f_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x001b00(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c7389_data(%ecx),%dl
		imul   $0x00003e,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jle    _03c2b8_jump
		mov    %ebx,%eax

	_03c2b8_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x001b01(%ecx,%edx,1)
		xor    %edx,%edx
		mov    _0c738a_data(%ecx),%dl
		imul   $0x00000c,%edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%ebx
		mov    %esi,%eax
		add    $0x000003,%ecx
		cmp    %ebx,%eax
		jle    _03c2e4_jump
		mov    %ebx,%eax

	_03c2e4_jump:
		mov    _0ccc78_data,%edx
		mov    %al,0x001aff(%ecx,%edx,1)
		mov    -0x000003(%ecx,%edx,1),%al
		mov    %al,_0c7385_data(%ecx)
		mov    -0x000002(%ecx,%edx,1),%al
		mov    %al,_0c7386_data(%ecx)
		mov    -0x000001(%ecx,%edx,1),%al
		mov    %al,_0c7387_data(%ecx)
		cmp    $0x00020d,%ecx
		jne    _03c273_jump
		mov    $0x000009,%edx
		xor    %eax,%eax
		call   _03c340_func
		mov    $0x00000e,%edx
		mov    $0x000009,%eax
		call   _03c340_func

	_03c336_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03c340_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %ax,0x000020(%esp)
		mov    %dx,0x000028(%esp)
		inc    %eax
		mov    %ax,0x000024(%esp)
		cmp    %dx,%ax
		jge    _03c4ec_jump

	_03c361_jump:
		xor    %esi,%esi

	_03c363_jump:
		mov    0x00001e(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,(%esp)
		imul   $0x000300,%eax,%ebp
		movswl %si,%ecx
		mov    _0ccc78_data,%ebx
		lea    (%ecx,%ecx,2),%ecx
		lea    (%ebx,%ebp,1),%eax
		mov    (%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    0x000026(%esp),%edx
		mov    %eax,0x000008(%esp)
		mov    0x000022(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %edx,%edi
		mov    %eax,0x000004(%esp)
		sub    %eax,%edi
		mov    0x000008(%esp),%eax
		imul   %edi,%eax
		mov    %eax,0x00000c(%esp)
		imul   $0x000300,%edx,%eax
		add    %eax,%ebx
		mov    %eax,0x000014(%esp)
		xor    %eax,%eax
		mov    (%ecx,%ebx,1),%al
		mov    (%esp),%ebx
		mov    %eax,0x000008(%esp)
		mov    0x000004(%esp),%eax
		sub    %ebx,%eax
		mov    %eax,0x000018(%esp)
		mov    %eax,%ebx
		imul   0x000008(%esp),%ebx
		add    0x00000c(%esp),%ebx
		mov    (%esp),%eax
		sub    %eax,%edx
		mov    %edx,0x000010(%esp)
		mov    %ebx,%eax
		mov    %ebx,%edx
		mov    0x000010(%esp),%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		mov    0x000004(%esp),%edx
		cmp    %ebx,%eax
		jle    _03c405_jump
		mov    %ebx,%eax

	_03c405_jump:
		mov    %eax,0x00000c(%esp)
		imul   $0x000300,%edx,%eax
		mov    _0ccc78_data,%edx
		mov    %eax,0x00001c(%esp)
		add    %edx,%eax
		mov    0x00000c(%esp),%bl
		mov    %bl,(%ecx,%eax,1)
		lea    (%edx,%ebp,1),%eax
		mov    0x000001(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    %edi,%ebx
		imul   %eax,%ebx
		add    0x000014(%esp),%edx
		mov    0x000001(%ecx,%edx,1),%al
		mov    0x000018(%esp),%edx
		and    $0x0000ff,%eax
		imul   %eax,%edx
		add    %ebx,%edx
		mov    0x000010(%esp),%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		cmp    %ebx,%eax
		jle    _03c463_jump
		mov    %ebx,%eax

	_03c463_jump:
		mov    _0ccc78_data,%edx
		mov    %eax,0x00000c(%esp)
		mov    0x00001c(%esp),%eax
		add    %edx,%eax
		mov    0x00000c(%esp),%bl
		mov    %bl,0x000001(%ecx,%eax,1)
		lea    (%edx,%ebp,1),%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		imul   %eax,%edi
		mov    0x000014(%esp),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000018(%esp),%ebp
		mov    0x000002(%ecx,%eax,1),%dl
		imul   %ebp,%edx
		add    %edi,%edx
		mov    0x000010(%esp),%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %al,%bl
		mov    $0x00003f,%eax
		mov    0x00001c(%esp),%edi
		cmp    %ebx,%eax
		jle    _03c4bd_jump
		mov    %ebx,%eax

	_03c4bd_jump:
		mov    _0ccc78_data,%edx
		add    %edi,%edx
		inc    %esi
		mov    %al,0x000002(%ecx,%edx,1)
		cmp    $0x000100,%si
		jl     _03c363_jump
		mov    0x000024(%esp),%ebx
		inc    %ebx
		mov    0x000028(%esp),%ecx
		mov    %bx,0x000024(%esp)
		cmp    %cx,%bx
		jl     _03c361_jump

	_03c4ec_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03c4f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ceb88_data,%bx
		testb  $0x000040,_0ceecb_data
		je     _03c692_jump
		cmpw   $0x000005,_0cecd4_data
		jne    _03c583_jump
		cmpw   $0x000004,_0cecc0_data
		jne    _03c583_jump
		cmpb   $0x000000,_0cee42_data
		jne    _03c568_jump
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ccc78_data,%esi
		shl    $0x000008,%eax
		add    %eax,%esi
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		mov    _0ceb88_data,%bx
		inc    %ebx
		jmp    _03c572_jump

	_03c568_jump:
		test   %bx,%bx
		jne    _03c572_jump
		mov    $0x000001,%ebx

	_03c572_jump:
		cmp    $0x00000f,%bx
		jne    _03c692_jump
		xor    %ebx,%ebx
		jmp    _03c692_jump

	_03c583_jump:
		cmpw   $0x000001,_0cecd4_data
		jne    _03c597_jump
		cmpw   $0x000009,_0cecc0_data
		je     _03c5c7_jump

	_03c597_jump:
		cmpw   $0x000002,_0cecd4_data
		jne    _03c5ab_jump
		cmpw   $0x000004,_0cecc0_data
		je     _03c5c7_jump

	_03c5ab_jump:
		cmpw   $0x000004,_0cecd4_data
		jne    _03c692_jump
		cmpw   $0x000009,_0cecc0_data
		jne    _03c692_jump

	_03c5c7_jump:
		mov    _0dea00_data,%edx
		mov    _0ceb88_data,%eax
		inc    %edx
		sar    $0x000010,%eax
		mov    %edx,_0dea00_data
		cmp    %edx,%eax
		jle    _03c5e9_jump
		test   %bx,%bx
		je     _03c692_jump

	_03c5e9_jump:
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0ccc78_data,%esi
		shl    $0x000008,%eax
		add    %eax,%esi
		mov    %bx,_0ceb88_data
		add    $0x000003,%esi
		mov    $0x0003c8,%edx
		mov    $0x000001,%eax
		out    %al,(%dx)
		mov    $0x0002fd,%ecx
		mov    $0x0003c9,%edx
		rep outsb %ds:(%esi),(%dx)
		mov    _0ceb88_data,%bx
		test   %bx,%bx
		jne    _03c641_jump
		mov    $0x0000c3,%eax
		call   _06fa30_func
		mov    _0ceb88_data,%bx
		inc    %ebx
		jmp    _03c663_jump

	_03c641_jump:
		mov    _0dea00_data,%eax
		mov    %eax,%edx
		mov    $0x000002,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		test   %edx,%edx
		jne    _03c659_jump
		inc    %ebx
		jmp    _03c663_jump

	_03c659_jump:
		test   %bx,%bx
		jne    _03c663_jump
		mov    $0x000001,%ebx

	_03c663_jump:
		cmp    $0x00000f,%bx
		jne    _03c692_jump
		mov    $0x000190,%eax
		xor    %esi,%esi
		xor    %ebx,%ebx
		mov    %esi,_0dea00_data
		mov    %bx,_0ceb88_data
		call   _0690e0_func
		inc    %eax
		mov    _0ceb88_data,%bx
		mov    %ax,_0ceb8a_data

	_03c692_jump:
		mov    %bx,_0ceb88_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03c6a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %al,%cl
		cmpb   $0x0000ff,_095b14_data
		jne    _03c6bb_jump
		call   _01455b_func
		call   _03b0c4_func

	_03c6bb_jump:
		cmpb   $0x000001,_095b14_data
		je     _03c7b3_jump
		call   _014617_func
		mov    $0x010000,%ebx
		mov    $_0164b6_func,%esi
		mov    $_01663c_func,%edi
		mov    _095b10_data,%eax
		xor    %edx,%edx
		mov    $_0167d3_func,%ebp
		call   _07c050_func
		xor    %eax,%eax
		mov    $0x000001,%dh
		mov    %cl,%al
		mov    $_016343_func,%ebx
		call   _03af94_jump
		mov    $_0164c2_func,%ecx
		mov    $_012b6d_func,%eax
		mov    %dh,_095b14_data
		mov    %ebx,_0cc4e0_data
		mov    %esi,_0cc4fc_data
		mov    %edi,_0cc4e4_data
		mov    %ebp,_0cc50c_data
		mov    $_01634f_func,%edx
		mov    $_012b9e_func,%ebx
		mov    $_012c0e_func,%esi
		mov    $_012c8b_func,%edi
		mov    $_012d40_func,%ebp
		mov    %ecx,_0cc508_data
		mov    %eax,_0cc4e8_data
		mov    $_012bce_func,%ecx
		mov    $_012e13_func,%eax
		mov    %edx,_0cc4f4_data
		mov    %ebx,_0cc4f8_data
		mov    %esi,_0cc520_data
		mov    %edi,_0cc51c_data
		mov    %ebp,_0cc504_data
		mov    $_012b3d_func,%edx
		mov    $_012dbc_func,%ebx
		mov    $_012c5b_func,%esi
		mov    %ecx,_0cc4f0_data
		mov    %eax,_0cc500_data
		mov    $_012d07_func,%ecx
		mov    %edx,_0cc4ec_data
		mov    %ebx,_0cc524_data
		mov    %esi,_0cc4cc_data
		mov    $_012eed_func,%edx
		mov    %ecx,_0cc4d4_data
		mov    %edx,_0cc518_data

	_03c7b3_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03c7bc_func:
		call   _014746_func
		movb   $0x0000ff,_095b14_data
		ret    



_03c7cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %al,%cl
		cmpb   $0x0000ff,_095b14_data
		jne    _03c7e7_jump
		call   _01455b_func
		call   _03b0c4_func

	_03c7e7_jump:
		cmpb   $0x000000,_095b14_data
		je     _03c8fa_jump
		call   _0145be_func
		mov    $0x00fa00,%ebx
		mov    _0cc534_data,%eax
		xor    %edx,%edx
		mov    $_016a59_func,%esi
		call   _07c050_func
		mov    $0x00fa00,%ebx
		mov    _095b10_data,%eax
		xor    %edx,%edx
		mov    $_016b47_func,%edi
		call   _07c050_func
		mov    _095b10_data,%eax
		mov    $_016be6_func,%ebp
		call   _014543_func
		xor    %eax,%eax
		mov    $_016975_func,%ebx
		mov    %cl,%al
		xor    %dh,%dh
		call   _03af94_jump
		mov    $_016a65_jump,%ecx
		mov    $_015568_func,%eax
		mov    %dh,_095b14_data
		mov    %ebx,_0cc4e0_data
		mov    %esi,_0cc4fc_data
		mov    %edi,_0cc4e4_data
		mov    %ebp,_0cc50c_data
		mov    $_016981_jump,%edx
		mov    $_0155cf_func,%ebx
		mov    $_01563b_func,%esi
		mov    $_0156b4_func,%edi
		mov    $_01573e_func,%ebp
		mov    %ecx,_0cc508_data
		mov    %eax,_0cc4e8_data
		mov    $_0155ff_func,%ecx
		mov    $_0157dc_func,%eax
		mov    %edx,_0cc4f4_data
		mov    %ebx,_0cc4f8_data
		mov    %esi,_0cc520_data
		mov    %edi,_0cc51c_data
		mov    %ebp,_0cc504_data
		mov    $_01559f_func,%edx
		mov    $_01578f_func,%ebx
		mov    $_015684_func,%esi
		mov    %ecx,_0cc4f0_data
		mov    %eax,_0cc500_data
		mov    $_015705_func,%ecx
		mov    %edx,_0cc4ec_data
		mov    %ebx,_0cc524_data
		mov    %esi,_0cc4cc_data
		mov    $_015853_func,%edx
		mov    %ecx,_0cc4d4_data
		mov    %edx,_0cc518_data

	_03c8fa_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03c904_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		test   %eax,%eax
		jle    _03c91d_jump

	_03c90e_jump:
		call   _016df7_func
		inc    %edx
		call   _016de7_func
		cmp    %ebx,%edx
		jl     _03c90e_jump

	_03c91d_jump:
		pop    %edx
		pop    %ebx
		ret    



_03c920_func:
		test   %dl,%dl
		je     _03c92b_jump
		mov    $0x00004d,%edx
		jmp    _03c930_jump

	_03c92b_jump:
		mov    $0x0000ef,%edx

	_03c930_jump:
		mov    %dx,0x000060(%eax)
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		mov    _0930d6_data(,%edx,2),%dx
		mov    %dx,0x00005c(%eax)
		ret    



_03c948_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cec4e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03c985_jump
		push   $0xffffffc1
		mov    %eax,%edx
		shl    $0x000005,%eax
		mov    $0xffffffcc,%ecx
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01cd60_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03c985_jump:
		movw   $0x000000,0x000042(%esi)
		mov    0x000042(%esi),%ax
		mov    %ax,0x000040(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03c998_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000000,0x00007f(%eax)
		je     _03c9a8_jump
		decb   0x00007f(%ebx)

	_03c9a8_jump:
		mov    0x000081(%ebx),%dl
		shl    $0x000004,%dl
		mov    0x000060(%ebx),%cx
		shr    $0x000007,%dl
		cmp    $0x0000ef,%cx
		jne    _03c9c8_jump
		mov    %ebx,%eax
		call   _01db14_func
		jmp    _03c9cf_jump

	_03c9c8_jump:
		mov    %ebx,%eax
		call   _03c948_func

	_03c9cf_jump:
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    %eax,%ecx
		xor    %eax,%eax
		shl    $0x000008,%ecx
		mov    0x00006c(%ebx),%al
		and    $0x000001,%dl
		add    %ecx,%eax
		shl    $0x000003,%dl
		cmp    $0x000009,%eax
		jb     _03ca4b_jump
		jbe    _03cb79_jump
		cmp    $0x000010,%eax
		jb     _03ca2e_jump
		jbe    _03cb01_jump
		cmp    $0x000013,%eax
		jb     _03ca20_jump
		jbe    _03cb1f_jump
		cmp    $0x000014,%eax
		jbe    _03cae3_jump
		cmp    $0x000200,%eax
		je     _03cbac_jump
		jmp    _03cbef_jump

	_03ca20_jump:
		cmp    $0x000011,%eax
		je     _03cac5_jump
		jmp    _03cbef_jump

	_03ca2e_jump:
		cmp    $0x00000b,%eax
		jb     _03cbce_jump
		jbe    _03cae3_jump
		cmp    $0x00000d,%eax
		je     _03cab5_jump
		jmp    _03cbef_jump

	_03ca4b_jump:
		cmp    $0x000003,%eax
		jb     _03ca75_jump
		jbe    _03ca8b_jump
		cmp    $0x000006,%eax
		jb     _03ca6b_jump
		jbe    _03cb3d_jump
		cmp    $0x000008,%eax
		je     _03cae3_jump
		jmp    _03cbef_jump

	_03ca6b_jump:
		cmp    $0x000005,%eax
		je     _03cab5_jump
		jmp    _03cbef_jump

	_03ca75_jump:
		cmp    $0x000001,%eax
		jb     _03ca82_jump
		jbe    _03cbe9_jump
		jmp    _03ca9c_jump

	_03ca82_jump:
		test   %eax,%eax
		je     _03cac5_jump
		jmp    _03cbef_jump

	_03ca8b_jump:
		movw   $0x00fff8,0x000042(%ebx)
		movw   $0x000000,0x000040(%ebx)
		jmp    _03cbef_jump

	_03ca9c_jump:
		mov    0x000081(%ebx),%cl
		and    $0x0000f7,%cl
		mov    %cl,0x000081(%ebx)
		mov    %cl,%ch
		or     %dl,%ch
		mov    %ch,0x000081(%ebx)

	_03cab5_jump:
		mov    %ebx,%eax
		movb   $0x000032,0x00007f(%ebx)
		call   _03cf8c_func
		jmp    _03cbef_jump

	_03cac5_jump:
		cmpb   $0x000000,_0cdbc2_data
		je     _03cbef_jump
		mov    $0x00000f,%edx
		mov    %ebx,%eax
		call   _01d364_func
		jmp    _03cbef_jump

	_03cae3_jump:
		cmpb   $0x000000,_0cdbc2_data
		je     _03cbef_jump
		mov    $0x000012,%edx
		mov    %ebx,%eax
		call   _01d364_func
		jmp    _03cbef_jump

	_03cb01_jump:
		cmpb   $0x000000,_0cdbc2_data
		jne    _03cbef_jump
		mov    $0x000011,%edx
		mov    %ebx,%eax
		call   _01d364_func
		jmp    _03cbef_jump

	_03cb1f_jump:
		cmpb   $0x000000,_0cdbc2_data
		jne    _03cbef_jump
		mov    $0x000014,%edx
		mov    %ebx,%eax
		call   _01d364_func
		jmp    _03cbef_jump

	_03cb3d_jump:
		mov    0x000081(%ebx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dh
		mov    %ah,0x000081(%ebx)
		or     %dl,%dh
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		call   _01cbd0_func
		test   %al,%al
		je     _03cbef_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _03c920_func
		movw   $0x000000,0x000040(%ebx)
		jmp    _03cbef_jump

	_03cb79_jump:
		mov    0x000081(%ebx),%cl
		and    $0x0000f7,%cl
		mov    %cl,0x000081(%ebx)
		mov    %cl,%ch
		or     %dl,%ch
		mov    %ebx,%eax
		mov    %ch,0x000081(%ebx)
		call   _01cbd0_func
		test   %al,%al
		je     _03cbef_jump
		mov    %ebx,%eax
		call   _053c34_func
		movw   $0x00fffd,0x000042(%ebx)
		jmp    _03cbef_jump

	_03cbac_jump:
		mov    0x000081(%ebx),%dh
		and    $0x0000f7,%dh
		mov    %dh,%cl
		mov    %dh,0x000081(%ebx)
		or     %dl,%cl
		mov    %ebx,%eax
		mov    %cl,0x000081(%ebx)
		call   _053c34_func
		jmp    _03cbef_jump

	_03cbce_jump:
		mov    0x000081(%ebx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dh
		mov    %ah,0x000081(%ebx)
		or     %dl,%dh
		mov    %dh,0x000081(%ebx)
		jmp    _03cbef_jump

	_03cbe9_jump:
		movw   $0x000064,0x000056(%ebx)

	_03cbef_jump:
		mov    0x000056(%ebx),%si
		test   %si,%si
		je     _03cbff_jump
		mov    %esi,%edi
		dec    %edi
		mov    %di,0x000056(%ebx)

	_03cbff_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03cc08_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    (%ecx),%ecx
		mov    0x00006c(%eax),%dl
		testb  $0x000004,0x000007(%ecx,%edx,8)
		je     _03cc7a_jump
		cmpw   $0x00004d,0x000060(%eax)
		jne    _03cc31_jump
		xor    %ebx,%ebx
		jmp    _03cc36_jump

	_03cc31_jump:
		mov    $0x000005,%ebx

	_03cc36_jump:
		xor    %ecx,%ecx
		mov    0x00006a(%eax),%cl
		lea    0x000000(,%ecx,4),%edx
		sub    %ecx,%edx
		shl    $0x000002,%edx
		mov    0x000004(%eax),%ecx
		add    %ecx,%edx
		mov    0x000008(%edx),%cx
		and    $0x00003f,%ch
		and    $0x00ffff,%ecx
		mov    0x00006b(%eax),%al
		and    $0x0000ff,%eax
		imul   %eax,%ecx
		shl    $0x000002,%ecx
		mov    (%edx),%eax
		add    %eax,%ecx
		movswl %bx,%eax
		cmpb   $0x000000,0x000003(%ecx,%eax,4)
		jne    _03cc7a_jump
		mov    $0xffffffff,%ebx

	_03cc7a_jump:
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03cc80_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%edi
		mov    %edx,0x000008(%esp)
		mov    %bl,0x00001c(%esp)
		mov    %cl,0x000018(%esp)
		call   _03cc08_func
		mov    %eax,%ebx
		cwtl   
		cmp    $0xffffffff,%eax
		je     _03cf82_jump
		mov    _0cc1f0_data,%esi
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _03cf82_jump

	_03ccbd_jump:
		cmpw   $0x00004e,0x000060(%esi)
		jne    _03cf72_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _03cf72_jump
		cmpb   $0x000000,0x00001c(%esp)
		je     _03ccfc_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _03cd21_jump

	_03ccfc_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%cl
		and    $0x000001,%dl
		and    $0x0000f7,%cl
		shl    $0x000003,%dl
		mov    %cl,(%eax)
		mov    %cl,%ch
		or     %dl,%ch
		mov    %ch,(%eax)

	_03cd21_jump:
		mov    0x000008(%esp),%eax
		mov    %ax,0x000042(%esi)
		lea    0x000010(%esp),%eax
		mov    %esp,%ecx
		push   %eax
		lea    0x000018(%esp),%eax
		movswl %bx,%edx
		push   %eax
		lea    0x00000c(%esp),%ebx
		mov    %edi,%eax
		call   _01d710_func
		mov    0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000012(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    -0x000002(%esp),%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%esi)
		mov    0x00006c(%edi),%al
		cmp    $0x000005,%al
		jb     _03cd99_jump
		jbe    _03cdf1_jump
		cmp    $0x00000d,%al
		jb     _03ceb9_jump
		jbe    _03ce45_jump
		cmp    $0x000012,%al
		je     _03cda1_jump
		jmp    _03ceb9_jump

	_03cd99_jump:
		cmp    $0x000002,%al
		jne    _03ceb9_jump

	_03cda1_jump:
		mov    0x00002c(%esi),%edx
		xor    %eax,%eax
		dec    %edx
		mov    0x00006d(%esi),%al
		mov    %edx,0x00002c(%esi)
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		mov    $0x000030,%ecx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    %cx,0x00000c(%esp)
		mov    0x000005(%edx,%eax,8),%cl
		and    $0x00000f,%cl
		mov    %cl,0x000005(%edx,%eax,8)
		mov    %cl,%ch
		or     $0x0000a0,%ch
		mov    %ch,0x000005(%edx,%eax,8)
		mov    $0x000003,%bh
		movb   $0x000000,0x000071(%esi)
		mov    %bh,0x000020(%esp)
		movb   $0x00000a,0x000072(%esi)
		jmp    _03ceb9_jump

	_03cdf1_jump:
		lea    0x000018(%edx),%eax
		mov    %eax,0x00002c(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    $0x000020,%ebx
		mov    0x00000c(%esi),%eax
		mov    %bx,0x00000c(%esp)
		lea    (%eax,%edx,1),%ebx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%edx
		mov    $0x000003,%cl
		mov    (%ebx),%eax
		mov    %cl,0x000020(%esp)
		mov    0x000005(%edx,%eax,1),%ch
		and    $0x00000f,%ch
		mov    %ch,%bl
		mov    %ch,0x000005(%edx,%eax,1)
		or     $0x000020,%bl
		mov    %bl,0x000005(%edx,%eax,1)
		movb   $0x000000,0x000071(%esi)
		movb   $0x000000,0x000072(%esi)
		jmp    _03ceb9_jump

	_03ce45_jump:
		mov    $0x000020,%eax
		mov    $0x000008,%edx
		call   _0690e0_func
		sub    %eax,%edx
		mov    %dx,0x00000c(%esp)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _03ce70_jump
		mov    $0x000001,%eax
		jg     _03ce70_jump
		neg    %eax

	_03ce70_jump:
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    %dx,0x00000c(%esp)
		xor    %eax,%eax
		xor    %dh,%dh
		mov    0x00006d(%esi),%al
		mov    %dh,0x000020(%esp)
		shl    $0x000002,%eax
		mov    0x00000c(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x000020,%bh
		mov    %bh,0x000005(%edx,%eax,8)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ebp
		movb   $0x000000,0x000072(%esi)
		sub    $0x000014,%ebp
		mov    %ebp,0x00002c(%esi)

	_03ceb9_jump:
		cmpb   $0x000000,0x00001c(%esp)
		jne    _03cec7_jump
		movw   $0x000010,0x00000c(%esp)

	_03cec7_jump:
		testb  $0x000008,0x000081(%edi)
		je     _03ceda_jump
		mov    0x00000c(%esp),%eax
		mov    %ax,0x000040(%esi)
		jmp    _03ceea_jump

	_03ceda_jump:
		mov    0x00000c(%esp),%eax
		mov    %eax,%edx
		mov    %ax,0x000040(%esi)
		neg    %edx
		mov    %dx,0x000040(%esi)

	_03ceea_jump:
		mov    $0x000004,%cl
		mov    0x000040(%esi),%ax
		xor    %edx,%edx
		test   %ax,%ax
		js     _03cefc_jump
		sar    %cl,%ax
		jmp    _03cf05_jump

	_03cefc_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03cf05_jump:
		mov    0x000020(%esp),%dl
		cwtl   
		imul   %edx,%eax
		mov    0x000028(%esi),%ebx
		add    %eax,%ebx
		mov    0x000081(%esi),%al
		xor    %edx,%edx
		shl    $0x000004,%al
		mov    %ebx,0x000028(%esi)
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _05efb0_func
		mov    %esi,%eax
		call   _01db8c_func
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f304_func
		mov    0x000081(%esi),%dh
		mov    0x000018(%esp),%al
		and    $0x0000bf,%dh
		mov    %al,0x00007f(%esi)
		mov    %dh,0x000081(%esi)
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_03cf72_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _03ccbd_jump

	_03cf82_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03cf8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		cmpb   $0x000000,0x00006d(%eax)
		jne    _03d16d_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _03cfa8_jump
		cmpb   $0x000015,0x00006b(%esi)
		jae    _03cfc6_jump

	_03cfa8_jump:
		cmpb   $0x000005,0x00006c(%esi)
		jne    _03cfb4_jump
		cmpb   $0x000012,0x00006b(%esi)
		jae    _03cfc6_jump

	_03cfb4_jump:
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _03cfc0_jump
		cmpb   $0x000002,0x00006b(%esi)
		jae    _03cfc6_jump

	_03cfc0_jump:
		movw   $0x000000,0x000052(%esi)

	_03cfc6_jump:
		cmpw   $0x000000,0x000052(%esi)
		jne    _03d173_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _03cfdd_jump
		cmpb   $0x000015,0x00006b(%esi)
		je     _03cffd_jump

	_03cfdd_jump:
		cmpb   $0x000005,0x00006c(%esi)
		jne    _03cfe9_jump
		cmpb   $0x000012,0x00006b(%esi)
		je     _03cffd_jump

	_03cfe9_jump:
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _03d173_jump
		cmpb   $0x000002,0x00006b(%esi)
		jne    _03d173_jump

	_03cffd_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _03d173_jump
		mov    0x00006c(%esi),%ch
		cmp    $0x000005,%ch
		jne    _03d050_jump
		mov    $0x000028,%ecx
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _03cc80_func
		jmp    _03d162_jump

	_03d050_jump:
		cmp    $0x000002,%ch
		jne    _03d076_jump
		mov    $0x000028,%ecx
		mov    $0x000001,%ebx
		mov    $0xffffffff,%edx
		mov    %esi,%eax
		call   _03cc80_func
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d076_jump:
		mov    $0x000064,%ecx
		mov    $0x000001,%ebx
		mov    $0xfffffffd,%edx
		mov    %esi,%eax
		call   _03cc80_func
		mov    0x000081(%esi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		mov    $0x000064,%ecx
		or     %dl,%bh
		mov    $0xfffffffd,%edx
		mov    %bh,(%eax)
		mov    $0x000001,%ebx
		mov    %esi,%eax
		call   _03cc80_func
		mov    0x000081(%esi),%cl
		lea    0x000081(%esi),%eax
		test   $0x000008,%cl
		sete   %dl
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    $0x000001,%ebx
		mov    %ch,%dh
		mov    %ch,(%eax)
		or     %dl,%dh
		mov    $0x000064,%ecx
		mov    %dh,(%eax)
		mov    $0xfffffffd,%edx
		mov    %esi,%eax
		call   _03cc80_func
		mov    0x000081(%esi),%bl
		lea    0x000081(%esi),%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		mov    %bh,(%eax)
		mov    $0x000001,%ebx
		or     %dl,%cl
		mov    $0xfffffffd,%edx
		mov    %cl,(%eax)
		mov    $0x000064,%ecx
		mov    %esi,%eax
		call   _03cc80_func
		mov    0x000081(%esi),%ch
		lea    0x000081(%esi),%eax
		test   $0x000008,%ch
		sete   %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)

	_03d162_jump:
		movw   $0x000001,0x000052(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d16d_jump:
		movw   $0x000000,0x000052(%esi)

	_03d173_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d178_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%al
		testb  $0x000001,0x000007(%ebx,%eax,8)
		je     _03d290_jump
		cmpw   $0x000000,0x000056(%esi)
		jne    _03d290_jump
		cmpw   $0x00004d,0x000060(%esi)
		je     _03d1b8_jump
		cmp    $0x000003,%dx
		jne    _03d290_jump

	_03d1b8_jump:
		cmpw   $0x0000ef,0x000060(%esi)
		jne    _03d1ee_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _03d1ee_jump
		mov    $0x000014,%ecx
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _03cc80_func

	_03d1ee_jump:
		movb   $0x000001,_0cdbc3_data
		mov    %esi,%eax
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%esi)
		jne    _03d20c_jump
		mov    $0x000003,%ebx
		jmp    _03d287_jump

	_03d20c_jump:
		cmpw   $0x00004d,0x000060(%esi)
		jne    _03d282_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000077(%esi),%dl
		mov    0x000076(%esi),%al
		sub    %eax,%edx
		cmp    $0x000003,%edx
		jl     _03d272_jump
		mov    $0x000006,%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    _0cec4e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _03d290_jump
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%esi
		add    %esi,%eax
		call   _05ef10_func
		mov    _0cec4e_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0cc1f0_data,%eax
		movw   $0x000000,0x000048(%eax,%esi,4)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03d272_jump:
		mov    $0x00000c,%edx
		mov    %esi,%eax
		call   _01d364_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_03d282_jump:
		mov    $0x000001,%ebx

	_03d287_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func

	_03d290_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03d294_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    0x00007f(%eax),%ah
		test   %ah,%ah
		jne    _03d32a_jump
		cmpb   $0x000000,0x00006d(%ebx)
		jne    _03d32a_jump
		mov    0x00006c(%ebx),%dh
		cmp    $0x00000b,%dh
		jne    _03d2be_jump
		mov    $0x000002,%edx
		jmp    _03d323_jump

	_03d2be_jump:
		test   %dh,%dh
		jne    _03d319_jump
		mov    _0cdafc_data,%al
		mov    0x000068(%ebx),%dl
		mov    0x000028(%ebx),%cx
		mov    _0cdabc_data,%si
		add    %ecx,%edx
		add    %esi,%eax
		sub    %eax,%edx
		mov    %dx,0x00003a(%ebx)
		xor    %edx,%edx
		mov    0x000038(%ebx),%eax
		mov    0x00007a(%ebx),%dl
		sar    $0x000010,%eax
		add    $0x000010,%edx
		test   %eax,%eax
		jge    _03d2f3_jump
		neg    %eax

	_03d2f3_jump:
		cmp    %edx,%eax
		jle    _03d308_jump
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d364_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d308_jump:
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _01d364_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d319_jump:
		cmp    $0x000004,%dh
		jne    _03d32a_jump
		mov    $0x000005,%edx

	_03d323_jump:
		mov    %ebx,%eax
		call   _01d364_func

	_03d32a_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d330_func:
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,0x00007f(%eax)
		je     _03d347_jump
		cmpb   $0x000000,_0cee3f_data
		je     _03d358_jump
		decb   0x00007f(%edx)
		pop    %edx
		ret    

	_03d347_jump:
		mov    $0x000093,%eax
		call   _06fa30_func
		mov    %edx,%eax
		call   _077020_func

	_03d358_jump:
		pop    %edx
		ret    

_03d360_switch:
		.long   0
		.long   0
		.long   0
		.long   0


	_03d44c_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		xor    %edi,%edi

	_03d455_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _03d914_func
		cmp    $0x000020,%si
		jle    _03d455_jump

	_03d46b_jump:
		mov    _0dfaa8_data,%eax
		call   _07d67c_func
		test   %eax,%eax
		jne    _03d46b_jump
		mov    _0dfaac_data,%eax
		call   _07dba0_func
		xor    %eax,%eax
		call   _07d7e1_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d490_jump:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x00ff00,%eax
		xor    %edx,%edx
		call   _07d705_func
		push   %ds
		mov    $0x000028,%eax
		push   $_0dfaac_data
		mov    _096278_data,%cx
		mov    _096274_data,%ebx
		call   _07d81b_func
		test   %eax,%eax
		je     _03d4c7_jump
		xor    %eax,%eax
		call   _07d7e1_func

	_03d4c7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d4cc_func:
		push   %edx
		mov    %eax,%edx
		mov    $0x000003,%eax
		int    $0x000010
		push   %edx
		push   $_0c0724_data
		call   _07bc8c_func
		add    $0x000008,%esp
		mov    $0xffffffff,%eax
		call   _07bcaf_func
		pop    %edx
		ret    



_03d4f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		xor    %edx,%edx
		xor    %eax,%eax
		call   _07debc_func
		test   %eax,%eax
		je     _03d50a_jump
		mov    $0x000001,%eax
		jmp    _03d557_jump

	_03d50a_jump:
		mov    %esp,%ebx
		mov    $_0dfa3a_data,%eax
		mov    %ds,%ecx
		mov    %ds,%edx
		call   _07e4aa_func
		test   %eax,%eax
		je     _03d52f_jump
		call   _07e006_func
		mov    $0x000002,%eax
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d52f_jump:
		mov    $_0df220_data,%eax
		mov    %ds,%edx
		call   _07e922_func
		test   %eax,%eax
		je     _03d550_jump
		call   _07e006_func
		mov    $0x000003,%eax
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d550_jump:
		call   _07e006_func
		xor    %eax,%eax

	_03d557_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d560_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _07f131_func
		mov    $0x00ff00,%eax
		xor    %edx,%edx
		call   _07d705_func
		push   %ds
		push   $_0dfaa8_data
		mov    %ds,%ecx
		push   %ds
		mov    $_0df220_data,%ebx
		mov    $0x002710,%edx
		push   $_096258_data
		mov    _0dfa9e_data,%eax
		mov    %edx,_096268_data
		call   _07f1ea_func
		test   %eax,%eax
		je     _03d5bb_jump
		xor    %eax,%eax
		call   _07d7e1_func
		call   _07f1aa_func
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03d5bb_jump:
		push   %ds
		mov    $0x000028,%eax
		push   $_0dfaac_data
		mov    _096278_data,%cx
		mov    _096274_data,%ebx
		call   _07d81b_func
		test   %eax,%eax
		je     _03d5f9_jump
		xor    %eax,%eax
		mov    $0x000001,%ebx
		call   _07d7e1_func
		mov    _0dfaa8_data,%eax
		mov    %ebx,%edx
		call   _07faaa_func
		mov    $0x000002,%eax

	_03d5f9_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d600_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%edi
		mov    %edx,(%esp)
		mov    %ebx,%ebp
		mov    %ecx,0x000008(%esp)
		call   _01cb80_func
		mov    $_0c0748_data,%edx
		mov    $_0c074c_data,%eax
		call   _07d470_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _03d635_jump
		mov    $_0c0758_data,%eax
		call   _03d4cc_func

	_03d635_jump:
		mov    %edi,%edx
		shl    $0x000002,%edi
		sub    %edx,%edi
		mov    %esi,%eax
		shl    $0x000002,%edi
		xor    %ebx,%ebx
		mov    _096240_data(%edi),%edx
		mov    %esi,%ecx
		call   _07c89a_func
		mov    $0x000080,%ebx
		mov    $0x000010,%edx
		mov    %ebp,%eax
		call   _07c67d_func
		mov    %esi,%eax
		call   _07d524_func
		mov    %edi,%ecx
		mov    %ebp,%eax
		mov    _096249_data(%edi),%dl
		lea    0x000800(%ebp),%esi

	_03d678_jump:
		sub    (%eax),%dl
		mov    (%eax),%bl
		mov    _096248_data(%ecx),%dh
		inc    %eax
		xor    %dh,%bl
		mov    %bl,-0x000001(%eax)
		cmp    %esi,%eax
		jne    _03d678_jump
		test   %dl,%dl
		je     _03d69a_jump
		mov    $_0c0784_data,%eax
		call   _03d4cc_func

	_03d69a_jump:
		call   _01cb80_func
		mov    $_0c0748_data,%edx
		mov    $_0c07a0_data,%eax
		call   _07d470_func
		mov    %eax,0x00000c(%esp)
		test   %eax,%eax
		jne    _03d6c0_jump
		mov    $_0c07ac_data,%eax
		call   _03d4cc_func

	_03d6c0_jump:
		mov    (%esp),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _096250_data(,%eax,4),%esi
		mov    0x000008(%esp),%eax
		cmpl   $0x000000,(%eax)
		je     _03d6e1_jump
		call   _07b7dc_func

	_03d6e1_jump:
		mov    %esi,%eax
		call   _07b7c4_func
		mov    %eax,%edi
		test   %eax,%eax
		jne    _03d6f8_jump
		mov    $_0c07c8_data,%eax
		call   _03d4cc_func

	_03d6f8_jump:
		mov    0x000008(%esp),%eax
		mov    (%esp),%edx
		mov    %edi,(%eax)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000004(%esp)
		mov    _09624c_data(%eax),%edx
		mov    0x00000c(%esp),%eax
		mov    0x00000c(%esp),%ecx
		call   _07c89a_func
		mov    $0x000001,%edx
		mov    %esi,%ebx
		mov    %edi,%eax
		call   _07c67d_func
		mov    0x00000c(%esp),%eax
		mov    0x000004(%esp),%ebx
		call   _07d524_func
		xor    %edx,%edx
		mov    _096255_data(%ebx),%bl
		test   %esi,%esi
		jbe    _03d764_jump
		mov    0x000004(%esp),%ecx
		mov    %edi,%eax

	_03d753_jump:
		sub    (%eax),%bl
		inc    %eax
		mov    _096254_data(%ecx),%bh
		inc    %edx
		xor    %bh,-0x000001(%eax)
		cmp    %esi,%edx
		jb     _03d753_jump

	_03d764_jump:
		test   %bl,%bl
		je     _03d772_jump
		mov    $_0c07f8_data,%eax
		call   _03d4cc_func

	_03d772_jump:
		mov    %ebp,%eax
		lea    0x000800(%ebp),%edx

	_03d77a_jump:
		mov    (%eax),%ebx
		add    $0x000010,%eax
		add    %edi,%ebx
		mov    %ebx,-0x000010(%eax)
		cmp    %edx,%eax
		jne    _03d77a_jump
		xor    %edx,%eax
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_03d794_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cee62_data
		je     _03d7a7_jump
		cmpb   $0x000000,_0cee5e_data

	_03d7a7_jump:
		mov    $_0962a4_data,%ecx
		mov    $_0dea20_data,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		call   _03d600_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03d7c0_func:
		xor    %eax,%eax
		ret    



_03d7c4_func:
		push   %esi
		push   %edi
		sub    $0x00007c,%esp
		mov    %eax,0x000074(%esp)
		mov    %edx,%ebx
		mov    %cx,0x000078(%esp)
		mov    0x000086(%esp),%eax
		mov    $0x00001d,%ecx
		sar    $0x000010,%eax
		mov    %esp,%edi
		mov    %eax,%edx
		mov    $_03d360_switch,%esi
		shl    $0x00000f,%edx
		rep movsl %ds:(%esi),%es:(%edi)
		sub    %eax,%edx
		mov    $0x00007f,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,0x000014(%esp)
		mov    0x00008a(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000010,%edx
		sub    %eax,%edx
		mov    $0x00007f,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    0x000028(%esp),%ecx
		mov    %eax,0x000040(%esp)
		mov    0x000076(%esp),%eax
		or     $0x004760,%cx
		sar    $0x000010,%eax
		mov    0x000028(%esp),%edx
		mov    _0962aa_data(,%eax,2),%eax
		mov    0x000074(%esp),%esi
		sar    $0x000010,%eax
		or     $0x000720,%edx
		shl    $0x000008,%eax
		mov    %dx,0x000028(%esp)
		mov    %eax,0x000038(%esp)
		test   %si,%si
		jne    _03d8a1_jump
		movswl %bx,%edx
		shl    $0x000004,%edx
		mov    _0dea20_data(%edx),%eax
		mov    %ds,0x000004(%esp)
		mov    %eax,(%esp)
		mov    _0dea24_data(%edx),%eax
		mov    _0dea2c_data(%edx),%esi
		mov    %eax,0x000008(%esp)
		test   %esi,%esi
		je     _03d8e3_jump
		mov    $0xffffffff,%edi
		mov    %ecx,0x000028(%esp)
		mov    _0dea28_data(%edx),%eax
		mov    %esi,0x000034(%esp)
		mov    %eax,0x000030(%esp)
		mov    %edi,0x00000c(%esp)
		jmp    _03d8e3_jump

	_03d8a1_jump:
		movswl %bx,%edx
		shl    $0x000004,%edx
		mov    _0df230_data(%edx),%eax
		mov    %ds,0x000004(%esp)
		mov    %eax,(%esp)
		mov    _0df234_data(%edx),%eax
		mov    _0df23c_data(%edx),%ebx
		mov    %eax,0x000008(%esp)
		test   %ebx,%ebx
		je     _03d8e3_jump
		mov    %ecx,0x000028(%esp)
		mov    %ebx,0x000034(%esp)
		mov    _0df238_data(%edx),%eax
		mov    $0xffffffff,%ecx
		mov    %eax,0x000030(%esp)
		mov    %ecx,0x00000c(%esp)

	_03d8e3_jump:
		cmpl   $0x000000,0x000008(%esp)
		je     _03d906_jump
		mov    %esp,%ebx
		mov    _0dfaa8_data,%eax
		mov    %ds,%ecx
		call   _07ff64_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _03d906_jump
		cmp    $0x000020,%ax
		jl     _03d90b_jump

	_03d906_jump:
		mov    $0xffffffff,%eax

	_03d90b_jump:
		add    $0x00007c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_03d914_func:
		movswl %ax,%edx
		mov    _0dfaa8_data,%eax
		call   _08057d_func
		ret    $0x000004



_03d924_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %ebx,%edi
		movswl %dx,%edx
		mov    %edx,%eax
		shl    $0x00000f,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x00007f,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %cx,%ecx
		mov    _0dfaa8_data,%esi
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _0809f8_func
		movswl %di,%edx
		mov    %edx,%eax
		shl    $0x000010,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x00007f,%esi
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0dfaa8_data,%esi
		mov    %eax,%ebx
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _080c9b_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_03d980_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		xor    %edi,%edi

	_03d989_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _03d914_func
		cmp    $0x000020,%si
		jle    _03d989_jump
		mov    _0dfaac_data,%eax
		call   _07dba0_func
		xor    %eax,%eax
		mov    $0x000001,%ebx
		call   _07d7e1_func
		mov    %ebx,%edx
		mov    _0dfaa8_data,%eax
		call   _07faaa_func
		call   _07f1aa_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		nop



_03d9cc_func:
		ret    



_03d9d0_func:
		push   %edx

	_03d9d1_jump:
		mov    _0dfaae_data,%edx
		mov    _0dfaa8_data,%eax
		sar    $0x000010,%edx
		call   _081050_func
		cmp    $0x000001,%eax
		jne    _03d9d1_jump
		mov    $_0963ac_data,%eax
		xor    %edx,%edx
		call   _07b7dc_func
		mov    %edx,_0963ac_data
		pop    %edx
		ret    



_03da00_func:
		and    $0x00ffff,%eax
		mov    %eax,_0df220_data
		ret    



_03da0c_func:
		mov    %eax,_0df224_data
		ret    



_03da14_func:
		mov    %eax,_0df228_data
		ret    



_03da1c_func:
		mov    %eax,_0df22c_data
		ret    



_03da24_func:
		mov    %eax,_0dfa9e_data
		ret    



_03da2c_func:
		mov    $_0dfa3a_data,%eax
		ret    



_03da34_func:
		mov    $_0df220_data,%eax
		ret    



_03da3c_func:
		mov    $_0df224_data,%eax
		ret    



_03da44_func:
		mov    $_0df228_data,%eax
		ret    



_03da70_func:
		push   %ebx
		push   %edx
		mov    _0ced14_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		orb    $0x000004,0x000081(%edx)
		mov    _0cece8_data,%eax
		movl   $0x000001,0x000024(%edx)
		sar    $0x000010,%eax
		movl   $0x0000a0,0x000028(%edx)
		sub    $0x000032,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%bl
		call   _0188d0_func
		sub    %ebx,%eax
		mov    %ax,0x00003e(%edx)
		mov    0x00003c(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    _0cecd6_data,%eax
		sar    $0x000010,%eax
		add    $0x000130,%eax
		mov    _0ced00_data,%bx
		mov    %eax,0x000028(%edx)
		xor    %eax,%eax
		add    $0x000140,%ebx
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		sub    $0x00003c,%ebx
		mov    %bx,0x00003c(%edx)
		mov    0x000081(%edx),%bl
		and    $0x0000f7,%bl
		mov    _0cdb20_data,%eax
		mov    %bl,0x000081(%edx)
		mov    _0cec70_data,%bh
		movb   $0x000032,0x00007f(%edx)
		or     $0x000001,%bh
		movb   $0x000008,0x00006e(%eax)
		mov    %bh,_0cec70_data
		pop    %edx
		pop    %ebx
		ret    



_03db24_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    _0cdabc_data,%eax
		mov    _0cdafc_data,%dl
		add    $0x000008,%eax
		lea    (%edx,%eax,1),%ebx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdafd_data,%dl
		mov    _0cdb08_data,%al
		sub    %eax,%edx
		mov    _0dfb4a_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		sar    %ebx
		add    $0x00005a,%eax
		sub    %ebx,%eax
		mov    %ax,_0dfb4e_data
		mov    _0ced1e_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x000081(%edx),%ah
		movl   $0x0000a0,0x000028(%edx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%edx)
		mov    0x000028(%edx),%eax
		mov    %ax,0x00003c(%edx)
		mov    _0cece8_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    $0x000110,%ecx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		xor    %ebx,%ebx
		call   _0188d0_func
		mov    0x000068(%edx),%bl
		movw   $0x000000,0x000040(%edx)
		sub    %ebx,%ecx
		mov    _0cece8_data,%ebx
		movw   $0x000000,0x000042(%edx)
		sar    $0x000010,%ebx
		mov    %ecx,0x000028(%edx)
		sub    $0x0000c8,%ebx
		mov    %cx,0x00003c(%edx)
		mov    %ebx,%ecx
		movl   $0x000001,0x000024(%edx)
		xor    %bl,%cl
		mov    %ebx,0x00002c(%edx)
		mov    %cl,_0dfb58_data
		mov    0x000081(%edx),%ch
		mov    %bx,0x00003e(%edx)
		or     $0x000004,%ch
		mov    %ch,0x000081(%edx)
		xor    %edx,%edx
		mov    _0cdabc_data,%ecx
		mov    _0cdafc_data,%dl
		add    $0x000008,%ecx
		lea    (%edx,%ecx,1),%esi
		mov    _0cecfe_data,%ecx
		mov    %ax,_0dfb4c_data
		sar    $0x000010,%ecx
		xor    %edx,%edx
		sub    %ecx,%esi
		xor    %ecx,%ecx
		mov    _0cdb08_data,%dl
		mov    _0cdafd_data,%cl
		cwtl   
		sub    %edx,%ecx
		sub    %ecx,%eax
		sar    %esi
		sub    $0x000046,%eax
		add    %esi,%eax
		mov    %ax,_0dfb50_data
		mov    _0ced0c_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		movl   $0x000001,0x000024(%edx)
		mov    0x000081(%edx),%al
		mov    %ebx,0x00002c(%edx)
		or     $0x00000c,%al
		mov    %al,0x000081(%edx)
		xor    %eax,%eax
		mov    $0x000020,%ecx
		mov    0x000068(%edx),%al
		mov    %bx,0x00003e(%edx)
		sub    %eax,%ecx
		mov    %ecx,0x000028(%edx)
		mov    %ebx,%eax
		mov    %cx,0x00003c(%edx)
		xor    %bh,%ah
		mov    _0cec70_data,%dl
		mov    %ah,_0dfb59_data
		or     $0x000001,%dl
		mov    _0cdb20_data,%eax
		mov    %dl,_0cec70_data
		movb   $0x000008,0x00006e(%eax)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03dcd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ced1c_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		testb  $0x000002,_0cec71_data
		jne    _03dd04_jump
		mov    $_0cda94_data,%eax
		call   _0772d8_func
		call   _058efc_func

	_03dd04_jump:
		orb    $0x000001,_0cec71_data
		mov    0x000081(%edx),%bh
		mov    _0cecfe_data,%eax
		or     $0x000004,%bh
		sar    $0x000010,%eax
		mov    %bh,0x000081(%edx)
		xor    %ebx,%ebx
		add    $0x0000a0,%eax
		mov    0x000068(%edx),%bl
		sub    %ebx,%eax
		mov    _0cec70_data,%cl
		mov    %eax,0x000028(%edx)
		mov    _0cece8_data,%ebx
		mov    %ax,0x00003c(%edx)
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000069(%edx),%al
		movl   $0x000001,0x000024(%edx)
		sub    %eax,%ebx
		or     $0x000001,%cl
		mov    %ebx,0x00002c(%edx)
		mov    _0cdb20_data,%eax
		mov    %bx,0x00003e(%edx)
		mov    %cl,_0cec70_data
		movb   $0x000008,0x00006e(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03dd70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		movb   $0x000001,_0ceead_data
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		jb     _03dd9d_jump
		jbe    _03ddb6_jump
		cmp    $0x000014,%al
		jb     _03dece_jump
		jbe    _03ddef_jump
		cmp    $0x00001e,%al
		je     _03deaf_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03dd9d_jump:
		movw   $0x000000,0x000040(%esi)
		xor    %ch,%ch
		movw   $0x00fff8,0x000042(%esi)
		mov    %ch,_0ceead_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ddb6_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _03ddc2_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _03ddc9_jump

	_03ddc2_jump:
		mov    %esi,%eax
		call   _01db14_func

	_03ddc9_jump:
		mov    $0xffff8300,%edx
		movw   $0x000000,0x000042(%esi)
		mov    %dx,_0cec94_data
		mov    0x000042(%esi),%ax
		mov    %dx,_0cec8e_data
		mov    %ax,0x000040(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ddef_jump:
		mov    %esi,%eax
		call   _01db14_func
		xor    %eax,%eax
		mov    _0cdabc_data,%dx
		mov    _0cdafc_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %dx,_0cec94_data
		xor    %edx,%edx
		mov    $_0cda94_data,%eax
		mov    0x000069(%esi),%dl
		call   _0188d0_func
		sub    %edx,%eax
		add    $0x000010,%eax
		mov    %ax,_0cec8e_data
		mov    0x000056(%esi),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000042(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbl (%edx,%eax,8),%ecx
		mov    _0cec92_data,%edx
		mov    0x000028(%esi),%ebx
		sar    $0x000010,%edx
		sub    %ebx,%edx
		shl    $0x000012,%edx
		mov    $0x000037,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000001,%bl
		mov    $0x0000ff,%dl
		mov    %eax,_0cda00_data
		test   %eax,%eax
		jge    _03de8b_jump
		neg    %eax

	_03de8b_jump:
		mov    %eax,_0cda00_data
		mov    %dl,_0ceea8_data
		xor    %dh,%dh
		mov    %bl,_0ceeaf_data
		mov    %dh,0x000071(%esi)
		mov    %dh,_0ceea9_data
		mov    %dh,0x000072(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03deaf_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0ceea9_data,%cl
		mov    _0ceea8_data,%bl
		mov    _0ceeaf_data,%dl
		call   _018690_func

	_03dece_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ded4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%ecx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%ecx),%al
		testb  $0x000001,0x000007(%ebx,%eax,8)
		je     _03df42_jump
		cmp    $0x000003,%dx
		je     _03df03_jump
		cmp    $0x000006,%dx
		jne    _03df42_jump

	_03df03_jump:
		movb   $0x000001,_0cdbc3_data
		mov    %ecx,%eax
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _03df2b_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		pop    %ecx
		pop    %ebx
		ret    

	_03df2b_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		movw   $0x000001,0x000050(%ecx)

	_03df42_jump:
		pop    %ecx
		pop    %ebx
		ret    



_03df48_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cc1f0_data,%edx
		movw   $0x00ffff,0x000052(%eax)
		mov    _0cc1f4_data,%ax
		xor    %ebx,%ebx
		test   %ax,%ax
		jle    _03dfc2_jump

	_03df66_jump:
		cmpw   $0x0000e0,0x000060(%edx)
		jne    _03dfb6_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03dfb6_jump
		mov    0x000028(%ecx),%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000040(%edx)
		call   _01db8c_func
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f304_func
		movw   $0x00ffff,0x000046(%edx)
		movw   $0x000000,0x000048(%edx)
		mov    %bx,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03dfb6_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %ax,%bx
		jl     _03df66_jump

	_03dfc2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03dfc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		movb   $0x000001,_0ceead_data
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    0x00006c(%ecx),%al
		add    %edx,%eax
		cmp    $0x000006,%eax
		jb     _03e02c_jump
		jbe    _03e1f5_jump
		cmp    $0x00000b,%eax
		jb     _03e018_jump
		jbe    _03e1da_jump
		cmp    $0x00000d,%eax
		jb     _03e1d0_jump
		jbe    _03e1d0_jump
		cmp    $0x000100,%eax
		je     _03e058_jump
		jmp    _03e213_jump

	_03e018_jump:
		cmp    $0x000008,%eax
		jb     _03e1d0_jump
		jbe    _03e0bd_jump
		jmp    _03e213_jump

	_03e02c_jump:
		cmp    $0x000002,%eax
		jb     _03e04b_jump
		jbe    _03e18a_jump
		cmp    $0x000004,%eax
		jb     _03e1d0_jump
		jbe    _03e186_jump
		jmp    _03e213_jump

	_03e04b_jump:
		test   %eax,%eax
		jbe    _03e0cf_jump
		jmp    _03e111_jump

	_03e058_jump:
		mov    0x00003a(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jl     _03e089_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x008300,_0ceca6_data
		jmp    _03e0b0_jump

	_03e089_jump:
		mov    _0cecaa_data,%ax
		mov    _0cdb01_data,%dl
		mov    %ax,_0ceca6_data
		cmp    $0x000003,%dl
		jne    _03e0b0_jump
		cmpb   $0x000014,_0cdb00_data
		jne    _03e0b0_jump
		orb    $0x000008,_0cdb15_data

	_03e0b0_jump:
		mov    %ecx,%eax
		call   _053c34_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e0bd_jump:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e0cf_jump:
		cmpb   $0x000000,_0cdbc2_data
		jne    _03e0e1_jump
		cmpb   $0x000002,_0cdb01_data
		jne    _03e0eb_jump

	_03e0e1_jump:
		mov    $0x000005,%edx
		jmp    _03e20c_jump

	_03e0eb_jump:
		mov    0x00007f(%ecx),%ah
		test   %ah,%ah
		je     _03e0ff_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,0x00007f(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e0ff_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d364_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e111_jump:
		cmpb   $0x000000,_0cdbc2_data
		je     _03e16a_jump
		xor    %eax,%eax
		mov    _0cdac0_data,%si
		mov    _0cdafd_data,%al
		mov    0x00002c(%ecx),%di
		mov    %eax,%edx
		xor    %eax,%eax
		add    %esi,%edx
		mov    0x000069(%ecx),%al
		sub    %edi,%edx
		sub    %eax,%edx
		movswl %dx,%eax
		test   %eax,%eax
		jge    _03e142_jump
		neg    %eax

	_03e142_jump:
		cmp    $0x000030,%eax
		jl     _03e14d_jump
		cmpb   $0x000009,0x00006b(%ecx)
		jbe    _03e0e1_jump

	_03e14d_jump:
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d364_func
		mov    0x00000c(%ecx),%eax
		mov    (%eax),%eax
		mov    0x000052(%eax),%al
		mov    %al,0x00006a(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e16a_jump:
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _03e213_jump
		mov    %ecx,%eax
		call   _03df48_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e186_jump:
		movb   $0x000032,0x00007f(%ecx)

	_03e18a_jump:
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpw   $0x000000,0x000040(%eax)
		jle    _03e213_jump
		mov    0x000028(%eax),%edx
		cmp    0x000028(%ecx),%edx
		jl     _03e213_jump
		movw   $0x00ffff,0x000052(%ecx)
		andb   $0x0000fb,0x000081(%eax)
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _01d364_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e1d0_jump:
		movb   $0x000032,0x00007f(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e1da_jump:
		cmpb   $0x000000,_0cdbc2_data
		jne    _03e213_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d364_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e1f5_jump:
		cmpb   $0x000002,_0cdb01_data
		je     _03e213_jump
		cmpb   $0x000000,_0cdbc2_data
		jne    _03e213_jump
		mov    $0x000007,%edx

	_03e20c_jump:
		mov    %ecx,%eax
		call   _01d364_func

	_03e213_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e21c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmp    $0x000006,%dx
		jne    _03e2d9_jump
		cmpb   $0x000000,_0cdbc1_data
		jne    _03e2d9_jump
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ebx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _03e2d9_jump
		mov    $0x000001,%ch
		mov    %ebx,%eax
		mov    %ch,_0cdbc3_data
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ebx)
		je     _03e28f_jump
		cmpb   $0x000002,0x00006c(%ebx)
		jne    _03e280_jump
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d364_func
		pop    %ecx
		pop    %ebx
		ret    

	_03e280_jump:
		mov    $0x00000d,%edx
		mov    %ebx,%eax
		call   _01d364_func
		pop    %ecx
		pop    %ebx
		ret    

	_03e28f_jump:
		cmpb   $0x000002,0x00006c(%ebx)
		jne    _03e2c7_jump
		mov    0x000050(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,4)
		mov    0x000050(%ebx),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		call   _0772d8_func

	_03e2c7_jump:
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d364_func
		movw   $0x000001,0x000050(%ebx)

	_03e2d9_jump:
		pop    %ecx
		pop    %ebx
		ret    



_03e2dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x00006d(%eax)
		jne    _03e2f7_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _03e692_jump

	_03e2f7_jump:
		mov    _0cdabc_data,%eax
		mov    0x000060(%esi),%bx
		add    $0x000008,%eax
		cmp    $0x0000e7,%bx
		jne    _03e48f_jump
		mov    _0dfb58_data,%dl
		test   %dl,%dl
		jne    _03e35a_jump
		xor    %ebx,%ebx
		mov    _0cdafc_data,%bl
		lea    (%ebx,%eax,1),%ecx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0cdafd_data,%bl
		mov    _0cdb08_data,%al
		sub    %eax,%ebx
		mov    _0dfb4a_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		add    $0x00005a,%eax
		sub    %ecx,%eax
		mov    %ax,_0dfb4e_data
		jmp    _03e480_jump

	_03e35a_jump:
		cmp    $0x000064,%dl
		jne    _03e47a_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%al
		add    %ebx,%eax
		mov    0x00002c(%esi),%edi
		sar    %eax
		add    %edi,%eax
		mov    %eax,%edi
		lea    0x000010(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		mov    $0x000008,%edx
		push   %eax
		lea    0x000010(%esp),%ebx
		mov    _0dfb1c_data,%eax
		call   _01d710_func
		mov    0x000002(%esp),%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jge    _03e3ce_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ebp
		mov    0x000074(%esi),%bl
		add    %ebp,%ebx
		sub    $0x00000a,%ebx
		cmp    %ebx,%eax
		jle    _03e3ce_jump
		addw   $0x000032,_0dfb4e_data
		jmp    _03e47a_jump

	_03e3ce_jump:
		cmp    0x000004(%esp),%di
		jge    _03e3fa_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		mov    0x000002(%esp),%ebx
		add    %edx,%eax
		sar    $0x000010,%ebx
		add    $0x00000a,%eax
		cmp    %eax,%ebx
		jge    _03e3fa_jump
		subw   $0x000032,_0dfb4e_data
		jmp    _03e47a_jump

	_03e3fa_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000074(%esi),%al
		add    %eax,%ebx
		mov    0x000002(%esp),%eax
		sub    $0x00000a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03e436_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%bl
		add    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		add    $0x00000a,%ecx
		add    %ebx,%eax
		cmp    %ecx,%eax
		jge    _03e436_jump
		subw   $0x000050,_0dfb4e_data
		jmp    _03e47a_jump

	_03e436_jump:
		xor    %eax,%eax
		mov    _0cdabc_data,%ecx
		mov    _0cdafc_data,%al
		add    $0x000008,%ecx
		add    %eax,%ecx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0cdafd_data,%bl
		mov    _0cdb08_data,%al
		sub    %eax,%ebx
		mov    _0dfb4a_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		add    $0x00005a,%eax
		sub    %ecx,%eax
		mov    %ax,_0dfb4e_data

	_03e47a_jump:
		decb   _0dfb58_data

	_03e480_jump:
		mov    0x00002c(%esi),%dx
		mov    _0dfb4e_data,%ax
		jmp    _03e616_jump

	_03e48f_jump:
		cmp    $0x0000e8,%bx
		jne    _03e620_jump
		mov    _0dfb59_data,%bh
		test   %bh,%bh
		jne    _03e4e6_jump
		xor    %ebx,%ebx
		mov    _0cdafc_data,%bl
		lea    (%ebx,%eax,1),%ecx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0cdafd_data,%bl
		mov    _0cdb08_data,%al
		sub    %eax,%ebx
		mov    _0dfb4a_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		sub    $0x000046,%eax
		add    %ecx,%eax
		mov    %ax,_0dfb50_data
		jmp    _03e60c_jump

	_03e4e6_jump:
		cmp    $0x000064,%bh
		jne    _03e606_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%al
		add    %ebx,%eax
		mov    0x00002c(%esi),%edx
		sar    %eax
		add    %edx,%eax
		mov    %eax,%edi
		lea    0x000010(%esp),%eax
		lea    0x000004(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000008,%edx
		mov    _0dfb20_data,%eax
		call   _01d710_func
		mov    0x000002(%esp),%ebx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		add    %ebx,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jge    _03e55a_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000074(%esi),%bl
		add    %ecx,%ebx
		sub    $0x00000a,%ebx
		cmp    %ebx,%eax
		jle    _03e55a_jump
		addw   $0x000032,_0dfb50_data
		jmp    _03e606_jump

	_03e55a_jump:
		cmp    0x000004(%esp),%di
		jge    _03e586_jump
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000069(%esi),%al
		add    %eax,%ebx
		mov    0x000002(%esp),%eax
		add    $0x00000a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _03e586_jump
		subw   $0x000032,_0dfb50_data
		jmp    _03e606_jump

	_03e586_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebx
		mov    0x000074(%esi),%al
		add    %eax,%ebx
		mov    0x000002(%esp),%eax
		sub    $0x00000a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _03e5c2_jump
		xor    %ebx,%ebx
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%bl
		add    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		add    $0x00000a,%ecx
		add    %ebx,%eax
		cmp    %ecx,%eax
		jge    _03e5c2_jump
		subw   $0x000050,_0dfb50_data
		jmp    _03e606_jump

	_03e5c2_jump:
		xor    %eax,%eax
		mov    _0cdabc_data,%ecx
		mov    _0cdafc_data,%al
		add    $0x000008,%ecx
		add    %eax,%ecx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0cdafd_data,%bl
		mov    _0cdb08_data,%al
		sub    %eax,%ebx
		mov    _0dfb4a_data,%eax
		sar    $0x000010,%eax
		sub    %ebx,%eax
		sar    %ecx
		sub    $0x000046,%eax
		add    %ecx,%eax
		mov    %ax,_0dfb50_data

	_03e606_jump:
		decb   _0dfb59_data

	_03e60c_jump:
		mov    0x00002c(%esi),%dx
		mov    _0dfb50_data,%ax

	_03e616_jump:
		add    $0x000096,%edx
		sub    %edx,%eax
		mov    %eax,%edx

	_03e620_jump:
		mov    _0cece8_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%ebx
		add    $0x000032,%eax
		cmp    %ebx,%eax
		jge    _03e637_jump
		test   %dx,%dx
		jg     _03e650_jump

	_03e637_jump:
		mov    _0cece8_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%ecx
		sub    $0x000096,%eax
		cmp    %ecx,%eax
		jle    _03e656_jump
		test   %dx,%dx
		jge    _03e656_jump

	_03e650_jump:
		xor    %edx,%edx
		mov    %dx,0x000042(%esi)

	_03e656_jump:
		test   %dx,%dx
		je     _03e692_jump
		mov    0x000040(%esi),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		sub    %ebx,%eax
		cmp    $0x000000,%eax
		je     _03e674_jump
		mov    $0x000001,%eax
		jg     _03e674_jump
		neg    %eax

	_03e674_jump:
		add    %eax,%ebx
		mov    $0x000030,%eax
		cmp    %ebx,%eax
		jle    _03e681_jump
		mov    %ebx,%eax

	_03e681_jump:
		mov    %eax,%ebx
		mov    $0xffffffd0,%eax
		cmp    %ebx,%eax
		jge    _03e68e_jump
		mov    %ebx,%eax

	_03e68e_jump:
		mov    %ax,0x000042(%esi)

	_03e692_jump:
		lea    0x000010(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000005,%edx
		mov    $_0cda94_data,%eax
		call   _01d710_func
		addw   $0x00000f,0x00000c(%esp)
		mov    0x00002c(%esi),%dx
		mov    0x00006c(%esi),%bh
		add    $0x000096,%edx
		test   %bh,%bh
		jne    _03e6f3_jump
		mov    0x00000a(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		lea    -0x00000f(%eax),%ecx
		cmp    %ecx,%ebx
		jle    _03e6f3_jump
		add    $0x00000f,%eax
		cmp    %eax,%ebx
		jge    _03e6f3_jump
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _01d364_func
		jmp    _03e79b_jump

	_03e6f3_jump:
		mov    0x00006c(%esi),%cl
		cmp    $0x000006,%cl
		je     _03e700_jump
		cmp    $0x000004,%cl
		jne    _03e72e_jump

	_03e700_jump:
		mov    0x00000a(%esp),%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		lea    -0x000014(%eax),%ecx
		cmp    %ecx,%ebx
		jl     _03e718_jump
		add    $0x000014,%eax
		cmp    %eax,%ebx
		jle    _03e72e_jump

	_03e718_jump:
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d364_func
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e72e_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000005,%al
		je     _03e739_jump
		cmp    $0x000006,%al
		jne    _03e767_jump

	_03e739_jump:
		mov    0x00000a(%esp),%eax
		movswl %dx,%ebx
		sar    $0x000010,%eax
		lea    -0x000007(%ebx),%ecx
		cmp    %ecx,%eax
		jle    _03e767_jump
		add    $0x000007,%ebx
		cmp    %ebx,%eax
		jge    _03e767_jump
		mov    $0x000003,%edx
		mov    %esi,%eax
		call   _01d364_func
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e767_jump:
		mov    0x00006c(%esi),%dl
		cmp    $0x000003,%dl
		jne    _03e79b_jump
		cmp    0x00006b(%esi),%dl
		jne    _03e79b_jump
		mov    %esi,%eax
		call   _03e8bc_func
		cmpw   $0x0000e7,0x000060(%esi)
		jne    _03e794_jump
		movb   $0x000064,_0dfb59_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e794_jump:
		movb   $0x000064,_0dfb58_data

	_03e79b_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e7a8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006c(%eax)
		je     _03e8b7_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _03e8b7_jump
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		cmpb   $0x000001,0x00006c(%edx,%eax,4)
		je     _03e8b7_jump
		decb   0x000076(%ecx)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    0x000076(%ecx),%al
		mov    %al,0x000076(%edx)
		test   %al,%al
		je     _03e80e_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_03e80e_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000001,0x000050(%ecx)
		mov    0x000081(%ecx),%ah
		mov    0x000050(%ecx),%edx
		and    $0x0000ef,%ah
		sar    $0x000010,%edx
		mov    %ah,0x000081(%ecx)
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0x000002,%ebx
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		movw   $0x00ff80,0x000042(%ecx)
		add    %edx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000040(%ecx)
		call   _01d374_func
		mov    0x000050(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		movw   $0x00ff80,0x000042(%edx,%eax,4)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movw   $0x000000,0x000040(%edx,%eax,4)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		andb   $0x0000ef,0x000081(%edx,%eax,4)
		mov    0x000050(%ecx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movw   $0x000001,0x000050(%edx,%eax,4)

	_03e8b7_jump:
		pop    %ecx
		pop    %ebx
		ret    



_03e8bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0cc1f0_data,%edx
		mov    _0cc1f4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _03e986_jump

	_03e8d9_jump:
		cmpw   $0x0000e9,0x000060(%edx)
		jne    _03e976_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03e976_jump
		movb   $0x000004,0x00007e(%edx)
		mov    0x000028(%ecx),%eax
		mov    %eax,0x000028(%edx)
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%ecx),%eax
		mov    %eax,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		cmpw   $0x0000e7,0x000060(%ecx)
		jne    _03e92c_jump
		mov    0x000081(%edx),%bl
		movw   $0x00fffb,0x000040(%edx)
		and    $0x0000f7,%bl
		mov    %edx,_0dfb20_data
		mov    %bl,0x000081(%edx)
		jmp    _03e947_jump

	_03e92c_jump:
		mov    0x000081(%edx),%ah
		movw   $0x000005,0x000040(%edx)
		or     $0x000008,%ah
		mov    %edx,_0dfb1c_data
		mov    %ah,0x000081(%edx)

	_03e947_jump:
		movw   $0x000000,0x000042(%edx)
		mov    0x000081(%edx),%bh
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%edx)
		call   _01f304_func
		mov    0x000052(%ecx),%ax
		mov    %ax,0x000052(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03e976_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _03e8d9_jump

	_03e986_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03e98c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%edi
		mov    0x000050(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x000060(%eax),%dx
		cmp    $0x0000e7,%dx
		je     _03e9c5_jump
		cmp    $0x0000e8,%dx
		jne    _03eae5_jump

	_03e9c5_jump:
		mov    0x000050(%edi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%ebp
		shl    $0x000002,%eax
		add    %eax,%ebp
		mov    %ebp,%edx
		mov    %edi,%eax
		call   _03ebb4_func
		test   %ax,%ax
		je     _03eae5_jump
		mov    _0cc1f0_data,%esi
		mov    _0cc1f4_data,%ax
		xor    %ebx,%ebx
		test   %ax,%ax
		jle    _03eac6_jump

	_03ea06_jump:
		cmpw   $0x00000b,0x000060(%esi)
		jne    _03eab6_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _03eab6_jump
		lea    0x000010(%esp),%eax
		mov    %esp,%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %edi,%eax
		call   _01d294_func
		lea    0x000014(%esp),%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000018(%esp),%ebx
		push   %eax
		lea    0x000020(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		movb   $0x000000,0x00006b(%esi)
		xor    %eax,%eax
		mov    0x000002(%esp),%edx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		cmpw   $0x000000,0x000040(%edi)
		jle    _03ea72_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ebx
		mov    %ebx,0x000028(%esi)

	_03ea72_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%al
		mov    0x000074(%esi),%dl
		lea    (%eax,%edx,1),%ebx
		mov    0x00000e(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		sar    %ebx
		add    %edx,%eax
		sub    %ebx,%eax
		mov    %eax,0x00002c(%esi)
		mov    %esi,%eax
		call   _01db8c_func
		orb    $0x000004,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f304_func
		jmp    _03eac6_jump

	_03eab6_jump:
		inc    %ebx
		add    $0x000084,%esi
		cmp    %ax,%bx
		jl     _03ea06_jump

	_03eac6_jump:
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _03e7a8_func
		mov    0x000081(%edi),%dl
		movl   $0x000000,0x000024(%edi)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%edi)

	_03eae5_jump:
		cmpw   $0x000000,0x000042(%edi)
		jne    _03eb8b_jump
		mov    _0ce3a2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cc1f0_data,%ebx
		add    %edx,%eax
		mov    _0ce46c_data,%cx
		shl    $0x000002,%eax
		xor    %esi,%esi
		add    %eax,%ebx
		test   %cx,%cx
		jle    _03eb8b_jump

	_03eb1d_jump:
		cmpw   $0x0000e9,0x000060(%ebx)
		jne    _03eb67_jump
		mov    0x000034(%ebx),%ax
		cmp    0x000034(%edi),%ax
		je     _03eb67_jump
		mov    %ebx,%edx
		mov    %edi,%eax
		call   _03ebb4_func
		test   %ax,%ax
		je     _03eb67_jump
		movw   $0x000000,0x000040(%ebx)
		movw   $0x000000,0x000040(%edi)
		movw   $0x000003,0x000042(%ebx)
		movw   $0x000003,0x000042(%edi)
		mov    0x000034(%ebx),%ax
		mov    %ax,0x000052(%edi)
		mov    0x000034(%edi),%ax
		mov    %ax,0x000052(%ebx)
		jmp    _03eb8b_jump

	_03eb67_jump:
		inc    %esi
		movswl %si,%ebx
		mov    _0ce3a2_data(,%ebx,2),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0cc1f0_data,%eax
		add    %eax,%ebx
		cmp    _0ce46c_data,%si
		jl     _03eb1d_jump

	_03eb8b_jump:
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03eb98_func:
		push   %edx
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    



_03ebb4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,%edi
		xor    %edx,%edx
		call   _02ad18_func
		mov    %eax,%ebp
		mov    %eax,(%esp)
		xor    %edx,%edx
		mov    %edi,%eax
		lea    0x000014(%esp),%ecx
		call   _02ad18_func
		mov    %eax,%esi
		lea    0x00000c(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		lea    0x000020(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000007(%ebp),%dl
		mov    0x00000c(%esp),%eax
		call   _01d710_func
		lea    0x00000c(%esp),%eax
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000024(%esp),%ecx
		push   %eax
		mov    %esi,%eax
		xor    %edx,%edx
		lea    0x000018(%esp),%ebx
		mov    0x000007(%eax),%dl
		mov    %edi,%eax
		call   _01d710_func
		mov    0x000004(%esp),%eax
		testb  $0x000008,0x000081(%eax)
		jne    _03ec37_jump
		mov    0x000018(%esp),%ecx
		mov    0x000000(%ebp),%ax
		add    %eax,%ecx
		mov    %cx,0x000018(%esp)
		jmp    _03ec53_jump

	_03ec37_jump:
		xor    %eax,%eax
		mov    0x000000(%ebp),%dx
		mov    0x000004(%ebp),%al
		mov    0x00001c(%esp),%ebx
		add    %edx,%eax
		mov    0x000018(%esp),%edx
		add    %ebx,%edx
		sub    %eax,%edx
		mov    %dx,0x000018(%esp)

	_03ec53_jump:
		testb  $0x000008,0x000081(%edi)
		jne    _03ec6c_jump
		mov    0x000010(%esp),%ecx
		mov    (%esi),%ax
		add    %eax,%ecx
		mov    %cx,0x000010(%esp)
		jmp    _03ec87_jump

	_03ec6c_jump:
		mov    0x000010(%esp),%edx
		mov    0x000008(%esp),%ebx
		xor    %eax,%eax
		mov    (%esi),%di
		mov    0x000004(%esi),%al
		add    %ebx,%edx
		add    %edi,%eax
		sub    %eax,%edx
		mov    %dx,0x000010(%esp)

	_03ec87_jump:
		mov    (%esp),%eax
		mov    0x000014(%esp),%edi
		mov    0x000002(%eax),%ax
		add    %eax,%edi
		mov    %di,0x000014(%esp)
		mov    0x000020(%esp),%edx
		mov    0x000002(%esi),%ax
		add    %eax,%edx
		mov    %dx,0x000020(%esp)
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		push   %eax
		xor    %eax,%eax
		mov    0x000004(%esi),%al
		push   %eax
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00001a(%esp),%eax
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		push   %eax
		mov    0x000010(%esp),%eax
		xor    %ebx,%ebx
		mov    0x000022(%esp),%edx
		mov    0x000005(%eax),%cl
		mov    0x000004(%eax),%bl
		mov    0x000026(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_03ecf0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0cc1f0_data,%eax
		mov    _0cc1f4_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _03ed8c_jump

	_03ed0e_jump:
		cmpw   $0x000020,0x000060(%eax)
		jne    _03ed81_jump
		mov    0x000024(%eax),%esi
		test   %esi,%esi
		jne    _03ed81_jump
		mov    0x000028(%ecx),%edx
		mov    %edx,0x000028(%eax)
		mov    %dx,0x00003c(%eax)
		mov    0x00002c(%ecx),%edx
		movw   $0x000000,0x000040(%eax)
		mov    %edx,0x00002c(%eax)
		mov    %dx,0x00003e(%eax)
		mov    $0x000026,%ebx
		mov    0x000081(%eax),%dl
		movw   $0x000000,0x000042(%eax)
		or     $0x000004,%dl
		xor    %edi,%edi
		mov    %dl,0x000081(%eax)
		xor    %edx,%edx
		movl   $0x000001,0x000024(%eax)
		call   _01d374_func
		mov    %ecx,_0dfab4_data
		mov    0x000081(%ecx),%dh
		mov    %esi,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %di,_0dfb36_data
		mov    %dh,0x000081(%ecx)
		jmp    _03ed8c_jump

	_03ed81_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %bx,%dx
		jl     _03ed0e_jump

	_03ed8c_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ed94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0ceecc_data
		je     _03eea8_jump
		movb   $0x000001,_094eb8_data
		testb  $0x000080,_0cec78_data
		je     _03ee6e_jump
		cmpb   $0x000000,_0cee89_data
		jne    _03eea8_jump
		cmpw   $0x000000,_0ced0c_data
		jne    _03ee1e_jump
		mov    _0ced10_data,%di
		cmp    $0x000042,%di
		jle    _03edf6_jump
		mov    $0x000001,%ecx
		mov    %di,_0ced08_data
		mov    %cx,_0ced0c_data
		jmp    _03eea8_jump

	_03edf6_jump:
		cmp    $0x000028,%di
		jle    _03ee0d_jump
		mov    %edi,%ebx
		add    $0x000004,%ebx
		mov    %bx,_0ced10_data
		jmp    _03eea8_jump

	_03ee0d_jump:
		mov    %edi,%edx
		add    $0x000002,%edx
		mov    %dx,_0ced10_data
		jmp    _03eea8_jump

	_03ee1e_jump:
		mov    _0ced04_data,%eax
		sar    $0x000010,%eax
		mov    $0x000007,%cl
		mov    _0948fc_data(,%eax,2),%ax
		test   %ax,%ax
		js     _03ee3a_jump
		sar    %cl,%ax
		jmp    _03ee43_jump

	_03ee3a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03ee43_jump:
		cmp    $0x0000ff,%ax
		je     _03eea8_jump
		mov    _0ced10_data,%cx
		mov    _0ced06_data,%si
		add    %eax,%ecx
		inc    %esi
		mov    %cx,_0ced10_data
		mov    %si,_0ced06_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ee6e_jump:
		push   $0x000000
		mov    $_0dfab8_data,%eax
		mov    _0dfb3c_data,%ecx
		mov    _0dfb2e_data,%ebx
		mov    _0dfb2c_data,%edx
		push   $0x000002
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		call   _01a5b8_func
		cmpb   $0x000000,_0ceea6_data
		jne    _03eea8_jump
		addw   $0x000003,_0dfb3e_data

	_03eea8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_03eeb0_switch:
		.long   _03ef77_case
		.long   _03efb1_case
		.long   _03f089_case
		.long   _03f0e9_case
		.long   _03f123_case
		.long   _03f185_case
		.long   _03f20b_case
		.long   _03f2e1_case
		.long   _03f33a_case
		.long   _03f380_case
		.long   _03f40b_case
		.long   _03f466_case




_03eee0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    0x00006d(%eax),%ah
		test   %ah,%ah
		jne    _03ef5a_jump
		cmpb   $0x000026,0x00006c(%esi)
		jne    _03ef5a_jump
		mov    %ah,_0dfb53_data
		mov    %ah,_0dfb57_data
		mov    %ah,_0ceecc_data
		xor    %dh,%dh
		xor    %bl,%bl
		xor    %cl,%cl
		mov    _0cec70_data,%bh
		mov    _0dfab4_data,%eax
		xor    %dl,%dl
		xor    %ch,%ch
		mov    %dx,_0dfb36_data
		and    $0x0000fe,%bh
		mov    %cx,_0cecaa_data
		mov    %dh,_0dfb52_data
		movl   $0x000000,0x000024(%eax)
		mov    %bh,_0cec70_data
		mov    0x000081(%eax),%ch
		xor    %bh,%bh
		and    $0x0000fb,%ch
		mov    %bx,_0cecb8_data
		mov    %ch,0x000081(%eax)

	_03ef5a_jump:
		mov    _0dfb36_data,%ax
		cmp    $0x00000b,%ax
		ja     _03f5a5_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_03eeb0_switch(,%eax,4)

	_03ef77_case:
		mov    _0dfb53_data,%ch
		test   %ch,%ch
		jne    _03ef9a_jump
		mov    $0x000001,%ah
		mov    $0x00001e,%edx
		mov    %ah,_0dfb53_data
		mov    %esi,%eax
		call   _01d364_func
		jmp    _03f5a5_jump

	_03ef9a_jump:
		cmp    $0x000002,%ch
		jne    _03f5a5_jump
		movw   $0x000001,_0dfb36_data
		jmp    _03f5a5_jump

	_03efb1_case:
		mov    _0dfb57_data,%ch
		test   %ch,%ch
		jne    _03efd4_jump
		mov    $0x000001,%cl
		mov    $0x00001f,%edx
		mov    %esi,%eax
		mov    %cl,_0dfb57_data
		call   _01d364_func
		jmp    _03f5a5_jump

	_03efd4_jump:
		cmp    $0x000002,%ch
		jne    _03f5a5_jump
		mov    _0dfb32_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		mov    0x000070(%edx,%eax,4),%bl
		cmp    $0x00001e,%bl
		jne    _03f5a5_jump
		mov    _0dfb2a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		cmp    0x000070(%edx,%eax,4),%bl
		jne    _03f5a5_jump
		mov    _0dfb2a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000002,%ecx
		add    %edx,%eax
		mov    %ecx,%edx
		call   _05efb0_func
		mov    _0dfb32_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    $0x000001,%ecx
		add    %ebx,%eax
		mov    _0cc1f0_data,%ebx
		shl    $0x000002,%eax
		mov    $0x000002,%edx
		add    %ebx,%eax
		mov    %ecx,%ebx
		mov    $0x000002,%ecx
		call   _05efb0_func
		mov    %cx,_0dfb36_data
		jmp    _03f5a5_jump

	_03f089_case:
		mov    _0dfb32_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		mov    0x000070(%edx,%eax,1),%bl
		cmp    $0x00001e,%bl
		jne    _03f5a5_jump
		mov    _0dfb2a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		cmp    0x000070(%edx,%eax,1),%bl
		jne    _03f5a5_jump
		mov    $0x000003,%ebx
		xor    %cl,%cl
		mov    %bx,_0dfb36_data
		mov    %cl,_0dfb53_data
		jmp    _03f5a5_jump

	_03f0e9_case:
		mov    _0dfb53_data,%bh
		test   %bh,%bh
		jne    _03f10c_jump
		mov    $0x000001,%ch
		mov    $0x00001e,%edx
		mov    %esi,%eax
		mov    %ch,_0dfb53_data
		call   _01d364_func
		jmp    _03f5a5_jump

	_03f10c_jump:
		cmp    $0x000002,%bh
		jne    _03f5a5_jump
		movw   $0x000004,_0dfb36_data
		jmp    _03f5a5_jump

	_03f123_case:
		mov    _0dfb2a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000003,%edx
		call   _05efb0_func
		mov    _0dfb32_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000003,%edx
		call   _05efb0_func
		movw   $0x000005,_0dfb36_data
		jmp    _03f5a5_jump

	_03f185_case:
		mov    _0dfb32_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		mov    _0cc1f0_data,%ebx
		add    %edi,%eax
		mov    0x000070(%ebx,%eax,4),%cl
		cmp    $0x00001e,%cl
		jne    _03f1ff_jump
		mov    _0dfb2a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		cmp    0x000070(%ebx,%eax,4),%cl
		jne    _03f1ff_jump
		mov    _0dfb53_data,%ah
		test   %ah,%ah
		jne    _03f1dd_jump
		mov    $0x000001,%bl
		mov    $0x00001e,%edx
		mov    %esi,%eax
		mov    %bl,_0dfb53_data
		call   _01d364_func
		jmp    _03f5a5_jump

	_03f1dd_jump:
		cmp    $0x000002,%ah
		jne    _03f5a5_jump
		mov    $0x000006,%edi
		xor    %dh,%dh
		mov    %di,_0dfb36_data
		mov    %dh,_0dfb53_data
		jmp    _03f5a5_jump

	_03f1ff_jump:
		xor    %al,%al
		mov    %al,_0dfb53_data
		jmp    _03f5a5_jump

	_03f20b_case:
		mov    _0dfb53_data,%ch
		test   %ch,%ch
		jne    _03f282_jump
		mov    _0dfb2a_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		add    %edi,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000002,%edx
		call   _05efb0_func
		mov    _0dfb32_data,%edi
		sar    $0x000010,%edi
		mov    %edi,%eax
		shl    $0x000005,%eax
		add    %edi,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000002,%edx
		call   _05efb0_func
		mov    $0x000001,%bh
		mov    $0x00001e,%edx
		mov    %esi,%eax
		mov    %bh,_0dfb53_data
		call   _01d364_func
		jmp    _03f5a5_jump

	_03f282_jump:
		cmp    $0x000002,%ch
		jne    _03f5a5_jump
		mov    _0dfb32_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cc1f0_data,%ecx
		add    %edx,%eax
		mov    0x000070(%ecx,%eax,4),%dl
		cmp    $0x00001e,%dl
		jne    _03f5a5_jump
		mov    _0dfb2a_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		cmp    0x000070(%ecx,%eax,4),%dl
		jne    _03f5a5_jump
		mov    $0x000007,%ecx
		xor    %bl,%bl
		mov    %cx,_0dfb36_data
		mov    %bl,_0dfb53_data
		jmp    _03f5a5_jump

	_03f2e1_case:
		cmpb   $0x000021,0x00006c(%esi)
		je     _03f308_jump
		mov    $0x000021,%edx
		mov    %esi,%eax
		mov    $0x000001,%bl
		call   _01d364_func
		xor    %dh,%dh
		mov    %bl,_0ceecc_data
		mov    %dh,_0dfb54_data
		jmp    _03f5a5_jump

	_03f308_jump:
		cmpb   $0x000002,_0dfb54_data
		jne    _03f5a5_jump
		mov    $0x000020,%edx
		mov    %esi,%eax
		mov    $0x000008,%ebx
		call   _01d364_func
		xor    %cl,%cl
		mov    %bx,_0dfb36_data
		mov    %cl,_0ceecc_data
		jmp    _03f5a5_jump

	_03f33a_case:
		mov    _0dfb32_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %edx,%eax
		mov    $0x000004,%edx
		call   _05efb0_func
		mov    $0x000009,%eax
		mov    $0xffffffff,%edx
		mov    %ax,_0dfb36_data
		mov    %dx,_0dfb28_data
		jmp    _03f5a5_jump

	_03f380_case:
		testb  $0x000001,_0cec70_data
		je     _03f397_jump
		movw   $0x00000a,_0dfb36_data
		jmp    _03f5a5_jump

	_03f397_jump:
		mov    _0dfb26_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _03f5a5_jump
		mov    _0dfb32_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		mov    _0cc1f0_data,%edx
		add    %ebx,%eax
		cmpw   $0x000004,0x000040(%edx,%eax,4)
		jne    _03f5a5_jump
		call   _03ff40_func
		mov    _0cdb20_data,%eax
		mov    0x000028(%eax),%dx
		add    $0x000040,%edx
		mov    %dx,_0dfb28_data
		mov    0x00002c(%eax),%dx
		add    $0x000032,%edx
		mov    0x000028(%eax),%ax
		mov    %dx,_0dfb24_data
		add    $0x000030,%eax
		mov    %dx,_0dfb26_data
		mov    %ax,_0dfb2a_data
		jmp    _03f5a5_jump

	_03f40b_case:
		mov    _0dfb32_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		mov    $0x000004,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    _0dfb2a_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000004,%ebx
		add    %edx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x00000b,_0dfb36_data
		jmp    _03f5a5_jump

	_03f466_case:
		cmpb   $0x000001,_0dfb52_data
		jne    _03f4e8_jump
		mov    _0cdae6_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _03f4e8_jump
		cmpb   $0x000003,_0cdb01_data
		jne    _03f4af_jump
		cmpb   $0x000017,_0cdb00_data
		je     _03f4b6_jump

	_03f4af_jump:
		mov    $0x000001,%eax
		jmp    _03f4b8_jump

	_03f4b6_jump:
		xor    %eax,%eax

	_03f4b8_jump:
		test   %eax,%eax
		je     _03f4e8_jump
		mov    $0x000002,%bh
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		mov    %bh,_0dfb52_data
		mov    $0x000017,%ebx
		xor    %edi,%edi
		call   _01d374_func
		mov    %di,_0cdad4_data
		mov    %di,_0cdad6_data

	_03f4e8_jump:
		mov    _0dfb32_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    0x000024(%eax),%edx
		test   %edx,%edx
		jne    _03f577_jump
		jne    _03f577_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _03f51f_jump
		cmpb   $0x000022,0x00006c(%esi)
		je     _03f532_jump

	_03f51f_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _03f52b_jump
		cmpb   $0x000001,0x00006c(%esi)
		je     _03f532_jump

	_03f52b_jump:
		mov    $0x000001,%eax
		jmp    _03f534_jump

	_03f532_jump:
		xor    %eax,%eax

	_03f534_jump:
		test   %eax,%eax
		je     _03f577_jump
		cmpb   $0x000003,_0cdb01_data
		jne    _03f54a_jump
		cmpb   $0x000017,_0cdb00_data
		je     _03f551_jump

	_03f54a_jump:
		mov    $0x000001,%eax
		jmp    _03f553_jump

	_03f551_jump:
		xor    %eax,%eax

	_03f553_jump:
		test   %eax,%eax
		je     _03f577_jump
		cmpb   $0x000002,_0dfb52_data
		jne    _03f577_jump
		mov    $0x000022,%ebx
		xor    %al,%al
		xor    %edx,%edx
		mov    %al,_0dfb52_data
		mov    %esi,%eax
		call   _01d374_func
		jmp    _03f5a5_jump

	_03f577_jump:
		cmpb   $0x000004,0x00006b(%esi)
		jne    _03f5a5_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _03f5a5_jump
		cmpb   $0x000022,0x00006c(%esi)
		jne    _03f5a5_jump
		mov    $0x00000c,%edx
		mov    _0dfab4_data,%eax
		movw   $0x00fffc,0x000042(%esi)
		mov    %dx,_0dfb36_data
		call   _03388c_func

	_03f5a5_jump:
		mov    0x00006d(%esi),%dl
		test   %dl,%dl
		jne    _03f87d_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00001f,%al
		jb     _03f5c6_jump
		jbe    _03f5d3_jump
		cmp    $0x000021,%al
		je     _03f767_jump
		jmp    _03f87d_jump

	_03f5c6_jump:
		cmp    $0x00001e,%al
		je     _03f67c_jump
		jmp    _03f87d_jump

	_03f5d3_jump:
		cmpb   $0x000016,0x00006b(%esi)
		jne    _03f87d_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $0x000003,%edx
		push   %eax
		mov    %esi,%eax
		xor    %edi,%edi
		call   _01d710_func
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    $0xfffffff1,%ecx
		add    %edx,%eax
		mov    %di,_0dfb48_data
		sub    $0x000060,%eax
		mov    %di,_0dfb46_data
		mov    %eax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    %cx,_0dfb32_data
		sar    %eax
		mov    %cx,_0dfb4a_data
		add    %ebx,%eax
		mov    $0x000001,%ecx
		sub    $0x000080,%eax
		movswl %dx,%esi
		movswl %ax,%edi
		mov    $0x000025,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		call   _03fc38_func
		mov    $0x000025,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   _03fc38_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f67c_jump:
		cmpb   $0x000016,0x00006b(%esi)
		jne    _03f87d_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $0x000003,%edx
		push   %eax
		mov    %esi,%eax
		mov    $0xfffffff0,%edi
		call   _01d710_func
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		mov    $0xffffffb4,%ebx
		mov    $0x000001,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    %di,_0dfb48_data
		add    %edx,%eax
		mov    %bx,_0dfb32_data
		sub    $0x000060,%eax
		mov    $0x000001,%bl
		mov    %ax,_0dfb38_data
		mov    %ax,_0dfb3a_data
		mov    -0x000002(%esp),%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		mov    %bl,_0dfb56_data
		add    %edx,%eax
		mov    $0x000023,%ebx
		sub    $0x000080,%eax
		mov    $0x00004c,%edx
		mov    %ax,_0dfb40_data
		mov    %ax,_0dfb42_data
		mov    %dx,_0dfb4a_data
		xor    %dh,%dh
		mov    _0dfb38_data,%eax
		mov    %dh,_0dfb55_data
		mov    _0dfb40_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    %di,_0dfb46_data
		call   _03fc38_func
		mov    $0x000023,%ebx
		mov    _0dfb3e_data,%edx
		mov    _0dfb36_data,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _03fc38_func
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f767_jump:
		mov    _0dfb54_data,%dh
		test   %dh,%dh
		jne    _03f7d3_jump
		mov    $_0dfab8_data,%edi
		mov    $0x0000a0,%edx
		mov    $0xfffffff6,%ebx
		mov    _0c2424_data,%esi
		mov    $0x000028,%ecx
		push   %edi

	_03f78c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _03f7a4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _03f78c_jump

	_03f7a4_jump:
		pop    %edi
		mov    $0x000001,%al
		mov    %dx,_0dfb2e_data
		mov    %bx,_0dfb30_data
		xor    %esi,%esi
		mov    %cx,_0dfb3c_data
		mov    %si,_0dfb3e_data
		mov    %al,_0dfb54_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f7d3_jump:
		mov    _0dfb2e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffec,%eax
		jge    _03f825_jump
		mov    $0x0000a0,%esi
		mov    $0xfffffff6,%edi
		mov    $0x000028,%eax
		xor    %ecx,%ecx
		mov    %dl,_0ceecc_data
		mov    %cx,_0dfb3e_data
		mov    %si,_0dfb2e_data
		mov    %dh,%ch
		mov    %di,_0dfb30_data
		inc    %ch
		mov    %ax,_0dfb3c_data
		mov    %ch,_0dfb54_data
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f825_jump:
		mov    $0x000004,%cl
		mov    _0dfb3c_data,%ax
		test   %ax,%ax
		js     _03f837_jump
		sar    %cl,%ax
		jmp    _03f840_jump

	_03f837_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03f840_jump:
		mov    _0dfb30_data,%dx
		mov    _0dfb3c_data,%bx
		add    %eax,%edx
		mov    _0dfb3c_data,%ax
		mov    %dx,_0dfb30_data
		dec    %eax
		test   %bx,%bx
		je     _03f86e_jump
		cmpb   $0x000000,_0cee41_data
		jne    _03f87d_jump
		jmp    _03f877_jump

	_03f86e_jump:
		cmpb   $0x000000,_0cee43_data
		jne    _03f87d_jump

	_03f877_jump:
		mov    %ax,_0dfb3c_data

	_03f87d_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03f888_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000076(%eax)
		je     _03fc2c_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000023,%dl
		je     _03f8ae_jump
		cmp    $0x000024,%dl
		jne    _03fa7b_jump

	_03f8ae_jump:
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%edx
		neg    %eax
		cmp    %edx,%eax
		jle    _03f8cd_jump
		mov    $0x000002,%ch
		movb   $0x000000,0x000076(%esi)
		mov    %ch,_0dfb53_data
		jmp    _03fc2c_jump

	_03f8cd_jump:
		cmpw   $0x000000,0x000056(%esi)
		je     _03f9af_jump
		cmpb   $0x000000,_0dfb55_data
		je     _03f902_jump
		mov    _0dfb4a_data,%cx
		add    $0x000003,%ecx
		mov    %cx,_0dfb4a_data
		cmp    $0x00004c,%cx
		jle    _03f91e_jump
		xor    %bh,%bh
		mov    %bh,_0dfb55_data
		jmp    _03f91e_jump

	_03f902_jump:
		subw   $0x000003,_0dfb4a_data
		mov    _0dfb48_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffb4,%eax
		jge    _03f91e_jump
		movb   $0x000001,_0dfb55_data

	_03f91e_jump:
		mov    $0x000004,%cl
		mov    _0dfb46_data,%ax
		test   %ax,%ax
		js     _03f930_jump
		sar    %cl,%ax
		jmp    _03f939_jump

	_03f930_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03f939_jump:
		mov    _0dfb3a_data,%dx
		mov    $0x000004,%cl
		add    %eax,%edx
		mov    _0dfb4a_data,%ax
		mov    %dx,_0dfb3a_data
		test   %ax,%ax
		js     _03f95b_jump
		sar    %cl,%ax
		jmp    _03f964_jump

	_03f95b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03f964_jump:
		mov    _0dfb42_data,%bx
		add    %eax,%ebx
		mov    0x00006b(%esi),%cl
		mov    %bx,_0dfb42_data
		cmp    $0x000001,%cl
		jne    _03fc2c_jump
		mov    _0dfb40_data,%edx
		mov    _0dfb38_data,%eax
		mov    0x000054(%esi),%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x00006c(%esi),%bl
		call   _03fc38_func
		movb   $0x000000,0x000076(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03f9af_jump:
		cmpb   $0x000000,_0dfb56_data
		je     _03f9d9_jump
		mov    _0dfb32_data,%bx
		add    $0x000003,%ebx
		mov    %bx,_0dfb32_data
		cmp    $0x00004c,%bx
		jle    _03f9f5_jump
		xor    %ah,%ah
		mov    %ah,_0dfb56_data
		jmp    _03f9f5_jump

	_03f9d9_jump:
		subw   $0x000003,_0dfb32_data
		mov    _0dfb30_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffb4,%eax
		jge    _03f9f5_jump
		movb   $0x000001,_0dfb56_data

	_03f9f5_jump:
		mov    $0x000004,%cl
		mov    _0dfb48_data,%ax
		test   %ax,%ax
		js     _03fa07_jump
		sar    %cl,%ax
		jmp    _03fa10_jump

	_03fa07_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03fa10_jump:
		mov    _0dfb38_data,%di
		mov    $0x000004,%cl
		add    %eax,%edi
		mov    _0dfb32_data,%ax
		mov    %di,_0dfb38_data
		test   %ax,%ax
		js     _03fa32_jump
		sar    %cl,%ax
		jmp    _03fa3b_jump

	_03fa32_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_03fa3b_jump:
		add    %ax,_0dfb40_data
		cmpb   $0x000001,0x00006b(%esi)
		jne    _03fc2c_jump
		mov    _0dfb3e_data,%edx
		mov    _0dfb36_data,%eax
		mov    0x000054(%esi),%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x00006c(%esi),%bl
		call   _03fc38_func
		movb   $0x000000,0x000076(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fa7b_jump:
		cmp    $0x000025,%dl
		jne    _03fc2c_jump
		cmpw   $0x000000,0x000056(%esi)
		je     _03fa9d_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%cx
		mov    0x000068(%esi),%al
		mov    $0x0000f0,%ebx
		add    %ecx,%eax
		jmp    _03faad_jump

	_03fa9d_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		mov    $0x000005,%ebx

	_03faad_jump:
		sub    %eax,%ebx
		movzbw 0x000069(%esi),%di
		add    0x00002c(%esi),%di
		mov    %esi,%eax
		call   _0188d0_func
		sub    %edi,%eax
		mov    %eax,%edi
		movswl %bx,%eax
		test   %eax,%eax
		jge    _03facc_jump
		neg    %eax

	_03facc_jump:
		mov    %eax,%edx
		movswl %di,%eax
		test   %eax,%eax
		jge    _03fad7_jump
		neg    %eax

	_03fad7_jump:
		add    %eax,%edx
		mov    %dx,(%esp)
		cmp    $0x00000a,%dx
		jge    _03fafc_jump
		mov    0x000054(%esi),%eax
		sar    $0x000010,%eax
		movb   $0x000000,0x000076(%esi)
		call   _03fde4_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fafc_jump:
		test   %dx,%dx
		jle    _03fb28_jump
		mov    $0x000004,%cl
		mov    %ebx,%eax
		mov    -0x000002(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edi

	_03fb28_jump:
		cmpb   $0x000001,0x00006b(%esi)
		jne    _03fc2c_jump
		cmpw   $0x000000,0x000056(%esi)
		je     _03fba4_jump
		mov    _0dfb44_data,%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _03fb55_jump
		mov    $0x000001,%eax
		jg     _03fb55_jump
		neg    %eax

	_03fb55_jump:
		add    %ax,_0dfb46_data
		mov    _0dfb48_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _03fb78_jump
		mov    $0x000001,%eax
		jg     _03fb78_jump
		neg    %eax

	_03fb78_jump:
		mov    _0dfb4a_data,%bx
		add    %eax,%ebx
		mov    0x000054(%esi),%ecx
		mov    %bx,_0dfb4a_data
		mov    0x00002c(%esi),%dx
		mov    _0dfb4a_data,%di
		sar    $0x000010,%ecx
		add    %edi,%edx
		mov    _0dfb46_data,%di
		jmp    _03fc0e_jump

	_03fba4_jump:
		mov    _0dfb46_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _03fbc1_jump
		mov    $0x000001,%eax
		jg     _03fbc1_jump
		neg    %eax

	_03fbc1_jump:
		add    %ax,_0dfb48_data
		mov    _0dfb30_data,%edx
		movswl %di,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _03fbe4_jump
		mov    $0x000001,%eax
		jg     _03fbe4_jump
		neg    %eax

	_03fbe4_jump:
		mov    _0dfb32_data,%bx
		add    %eax,%ebx
		mov    0x000054(%esi),%ecx
		mov    %bx,_0dfb32_data
		mov    0x00002c(%esi),%dx
		mov    _0dfb32_data,%di
		sar    $0x000010,%ecx
		add    %edi,%edx
		mov    _0dfb48_data,%di

	_03fc0e_jump:
		movswl %dx,%eax
		mov    0x000028(%esi),%dx
		xor    %ebx,%ebx
		add    %edi,%edx
		mov    0x00006c(%esi),%bl
		movswl %dx,%edi
		mov    %eax,%edx
		mov    %edi,%eax
		call   _03fc38_func
		movb   $0x000000,0x000076(%esi)

	_03fc2c_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03fc38_func:
		push   %esi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %dx,(%esp)
		mov    %bx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%bx
		xor    %edx,%edx
		xor    %eax,%eax

	_03fc5d_jump:
		cmpw   $0x000021,0x000060(%ecx)
		jne    _03fc6f_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _03fc6f_jump
		mov    $0x000001,%edx

	_03fc6f_jump:
		add    $0x000084,%ecx
		inc    %eax
		test   %dx,%dx
		jne    _03fc80_jump
		cmp    %bx,%ax
		jl     _03fc5d_jump

	_03fc80_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		je     _03fcf8_jump
		mov    %ecx,%ebp
		xor    %edx,%edx

	_03fc93_jump:
		cmpw   $0x000021,0x000060(%ecx)
		jne    _03fca5_jump
		cmpl   $0x000001,0x000024(%ecx)
		jne    _03fca5_jump
		mov    $0x000001,%edx

	_03fca5_jump:
		add    $0x000084,%ecx
		inc    %eax
		test   %dx,%dx
		jne    _03fcb6_jump
		cmp    %bx,%ax
		jl     _03fc93_jump

	_03fcb6_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		je     _03fcf1_jump
		xor    %edx,%edx

	_03fcc3_jump:
		cmpw   $0x000021,0x000060(%ecx)
		jne    _03fcd5_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _03fcd5_jump
		mov    $0x000001,%edx

	_03fcd5_jump:
		add    $0x000084,%ecx
		inc    %eax
		test   %dx,%dx
		jne    _03fce6_jump
		cmp    %bx,%ax
		jl     _03fcc3_jump

	_03fce6_jump:
		sub    $0x000084,%ecx
		test   %dx,%dx
		jne    _03fcf8_jump

	_03fcf1_jump:
		mov    $0x000001,%edx
		mov    %ebp,%ecx

	_03fcf8_jump:
		test   %dx,%dx
		je     _03fd52_jump
		mov    0x000081(%ecx),%ah
		or     $0x000004,%ah
		mov    0x000024(%ecx),%ebp
		mov    %ah,0x000081(%ecx)
		test   %ebp,%ebp
		jne    _03fd1a_jump
		mov    %ecx,%eax
		call   _01f304_func

	_03fd1a_jump:
		movl   $0x000001,0x000024(%ecx)
		movswl %si,%eax
		movb   $0x000001,0x000076(%ecx)
		mov    %eax,0x000028(%ecx)
		mov    -0x000002(%esp),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    0x000004(%esp),%eax
		mov    0x000008(%esp),%bl
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d374_func

	_03fd52_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %esi
		ret    



_03fd58_func:
		push   %ebx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _03fd7d_jump
		cmpb   $0x000005,0x00006c(%eax)
		jne    _03fd7d_jump
		mov    0x000081(%eax),%bl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%eax)
		pop    %ebx
		ret    

	_03fd7d_jump:
		call   _02f088_func
		pop    %ebx
		ret    



_03fd84_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0cdaea_data,%bx
		cmp    $0x00000a,%bx
		jge    _03fdc4_jump
		movswl %bx,%eax
		cmp    $0xffffffff,%eax
		jne    _03fdb3_jump
		mov    $0x000001,%eax
		call   _02d60c_func
		cmpw   $0x000003,_0ceca4_data
		je     _03fde1_jump
		jmp    _03fdd8_jump

	_03fdb3_jump:
		xor    %eax,%eax
		call   _02d60c_func
		mov    %bx,_0cdaea_data
		pop    %edx
		pop    %ebx
		ret    

	_03fdc4_jump:
		mov    $0x000001,%eax
		call   _02d60c_func
		cmpw   $0x000003,_0ceca4_data
		je     _03fde1_jump

	_03fdd8_jump:
		movw   $0x00000a,_0cdaea_data

	_03fde1_jump:
		pop    %edx
		pop    %ebx
		ret    



_03fde4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    _0cc1f0_data,%edx
		mov    _0cc1f4_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jle    _03ff3c_jump

	_03fe01_jump:
		test   %bx,%bx
		jne    _03fe96_jump
		cmpw   $0x0000d1,0x000060(%edx)
		jne    _03fe96_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03fe96_jump
		movb   $0x000004,0x00007e(%edx)
		xor    %eax,%eax
		mov    $0x000005,%ebx
		mov    0x000068(%edx),%al
		movl   $0x000064,0x00002c(%edx)
		sub    %eax,%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%edx),%eax
		mov    %bx,0x00003c(%edx)
		xor    %ebx,%ebx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%bl
		call   _0188d0_func
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		cwtl   
		movl   $0x000001,0x000024(%edx)
		sub    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000081(%edx),%bl
		mov    %ax,0x00003e(%edx)
		or     $0x000004,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%edx)
		call   _01f304_func
		mov    0x000034(%edx),%ax
		mov    $0x000002,%bh
		mov    %ax,_0dfb34_data
		mov    %bh,_0dfb57_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03fe96_jump:
		cmp    $0x000001,%bx
		jne    _03ff2c_jump
		cmpw   $0x0000d2,0x000060(%edx)
		jne    _03ff2c_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03ff2c_jump
		movb   $0x000004,0x00007e(%edx)
		xor    %eax,%eax
		mov    $0x0000f0,%ebx
		mov    0x000068(%edx),%al
		movl   $0x000064,0x00002c(%edx)
		sub    %eax,%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%edx),%eax
		mov    %bx,0x00003c(%edx)
		xor    %ebx,%ebx
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    0x000069(%edx),%bl
		call   _0188d0_func
		cwtl   
		movw   $0x000000,0x000040(%edx)
		sub    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000042(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f304_func
		mov    0x000034(%edx),%ax
		mov    $0x000002,%dl
		mov    %ax,_0dfb2c_data
		mov    %dl,_0dfb57_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_03ff2c_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %cx,%ax
		jl     _03fe01_jump

	_03ff3c_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_03ff40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0xffffffff,%ecx
		mov    _0cc1f0_data,%edx
		mov    _0cc1f4_data,%si
		xor    %eax,%eax
		xor    %ebx,%ebx
		test   %si,%si
		jle    _04007a_jump

	_03ff63_jump:
		test   %ax,%ax
		jne    _03ffd8_jump
		cmpw   $0x00006c,0x000060(%edx)
		jne    _03ffd8_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _03ffd8_jump
		movb   $0x000004,0x00007e(%edx)
		movl   $0x000140,0x000028(%edx)
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		movl   $0x000001,0x000024(%edx)
		mov    0x000028(%edx),%eax
		mov    0x000081(%edx),%cl
		mov    %ax,0x00003c(%edx)
		mov    _0cece8_data,%eax
		or     $0x000004,%cl
		sar    $0x000010,%eax
		mov    %cl,0x000081(%edx)
		add    $0x000064,%eax
		mov    %eax,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    %ebx,%ecx
		call   _01f304_func
		movb   $0x000000,0x000076(%edx)
		mov    $0x000001,%eax
		movw   $0x000000,0x000050(%edx)
		jmp    _04006a_jump

	_03ffd8_jump:
		cmp    $0x000001,%ax
		jne    _04006a_jump
		cmpw   $0x00006c,0x000060(%edx)
		jne    _04006a_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _04006a_jump
		movl   $0xffffffec,0x000028(%edx)
		mov    0x000028(%edx),%eax
		mov    %ax,0x00003c(%edx)
		mov    _0cece8_data,%eax
		movb   $0x000004,0x00007e(%edx)
		sar    $0x000010,%eax
		movw   $0x000000,0x000040(%edx)
		add    $0x000064,%eax
		mov    %eax,0x00002c(%edx)
		mov    %ax,0x00003e(%edx)
		mov    0x000081(%edx),%ah
		movw   $0x000000,0x000042(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f304_func
		movb   $0x000001,0x000076(%edx)
		movw   $0x000000,0x000050(%edx)
		mov    %cx,0x000052(%edx)
		movswl %cx,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		mov    %bx,0x000052(%edx,%eax,1)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04006a_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %si,%bx
		jl     _03ff63_jump

	_04007a_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040080_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    0x000076(%eax),%ah
		test   %ah,%ah
		jne    _0400b8_jump
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%cx
		mov    _0dfb28_data,%di
		add    %ecx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		mov    _0dfb24_data,%bx
		add    %edx,%eax
		jmp    _0400de_jump

	_0400b8_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		mov    _0dfb2a_data,%di
		add    %edx,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%esi),%bx
		mov    0x000069(%esi),%al
		add    %ebx,%eax
		mov    _0dfb26_data,%bx

	_0400de_jump:
		sub    %eax,%ebx
		cmpw   $0x000000,0x000050(%esi)
		je     _040277_jump
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    %edx,0x000004(%esp)
		cmpw   $0x000000,0x000050(%eax)
		je     _040277_jump
		cmpl   $0x000000,0x000024(%esi)
		je     _040181_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _040181_jump
		xor    %edx,%edx
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%dl
		mov    0x000028(%eax),%ebp
		add    %ecx,%edx
		mov    0x000068(%eax),%al
		add    %ebp,%edx
		and    $0x0000ff,%eax
		xor    %ecx,%ecx
		add    %edx,%eax
		mov    _0cdb20_data,%edx
		sar    %eax
		mov    0x000068(%edx),%cl
		sub    %ecx,%eax
		mov    %eax,0x000028(%edx)
		mov    0x000050(%esi),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    0x000004(%esp),%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%cl
		add    %ebp,%ecx
		mov    0x00002c(%eax),%ebp
		mov    0x000069(%eax),%al
		add    %ebp,%ecx
		and    $0x0000ff,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		sar    %ecx
		jmp    _040218_jump

	_040181_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _0401b8_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		add    %eax,%ecx
		mov    _0cdb20_data,%eax
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ecx
		mov    %ecx,%edx
		mov    %ecx,0x000028(%eax)
		xor    %ecx,%edx
		mov    0x000069(%esi),%dl
		mov    0x00002c(%esi),%ecx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		sub    %edx,%ecx
		mov    %ecx,0x00002c(%eax)
		jmp    _040220_jump

	_0401b8_jump:
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _040220_jump
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    0x000028(%eax),%eax
		add    %edx,%eax
		mov    _0cdb20_data,%edx
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    (%esp),%ebp
		mov    0x000068(%edx),%al
		sub    %eax,%ebp
		mov    %ebp,0x000028(%edx)
		mov    0x000050(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,(%esp)
		mov    (%esp),%ebp
		shl    $0x000005,%eax
		add    %ebp,%eax
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		mov    0x00002c(%ecx),%ecx
		add    %eax,%ecx
		xor    %eax,%eax

	_040218_jump:
		mov    0x000069(%edx),%al
		sub    %eax,%ecx
		mov    %ecx,0x00002c(%edx)

	_040220_jump:
		xor    %edx,%edx
		mov    _0cdabc_data,%eax
		mov    _0cdafc_data,%dl
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sar    %eax
		lea    (%edx,%eax,1),%ecx
		mov    %ecx,(%esp)
		mov    (%esp),%ecx
		mov    %cx,_0dfb28_data
		xor    %ecx,%ecx
		mov    _0cdafd_data,%cl
		mov    _0cdac0_data,%ebp
		sar    %ecx
		add    %ecx,%ebp
		mov    %ebp,(%esp)
		sub    %eax,%edx
		mov    (%esp),%ecx
		mov    %dx,_0dfb2a_data
		mov    %cx,_0dfb24_data
		mov    %cx,_0dfb26_data
		jmp    _0402b7_jump

	_040277_jump:
		testb  $0x000001,_0cec70_data
		jne    _0402b7_jump
		mov    _0cdb20_data,%eax
		mov    0x000028(%eax),%dx
		add    $0x000040,%edx
		mov    %dx,_0dfb28_data
		mov    0x00002c(%eax),%dx
		add    $0x000032,%edx
		mov    0x000028(%eax),%ax
		mov    %dx,_0dfb24_data
		add    $0x000030,%eax
		mov    %dx,_0dfb26_data
		mov    %ax,_0dfb2a_data

	_0402b7_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _0402c0_jump
		neg    %eax

	_0402c0_jump:
		mov    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _0402cb_jump
		neg    %eax

	_0402cb_jump:
		add    %eax,%edx
		mov    %dx,0x000008(%esp)
		cmp    $0x000002,%dx
		jge    _040308_jump
		cmpw   $0x000000,0x000050(%esi)
		jne    _040308_jump
		movw   $0x000001,0x000050(%esi)
		mov    0x000050(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _040308_jump
		movw   $0x000001,0x000050(%eax)

	_040308_jump:
		cmpw   $0x000000,0x000008(%esp)
		jle    _040337_jump
		mov    $0x000005,%cl
		mov    %edi,%eax
		mov    0x000006(%esp),%ebp
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x000010,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    $0x000005,%cl
		mov    %eax,%edi
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%ebx

	_040337_jump:
		mov    0x000040(%esi),%edx
		movswl %bx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _040350_jump
		mov    $0x000001,%eax
		jg     _040350_jump
		neg    %eax

	_040350_jump:
		lea    (%edx,%eax,1),%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jle    _04035e_jump
		mov    %ebx,%eax

	_04035e_jump:
		mov    %eax,%ebx
		mov    $0xffffffd8,%eax
		cmp    %ebx,%eax
		jge    _04036b_jump
		mov    %ebx,%eax

	_04036b_jump:
		mov    0x00003e(%esi),%ebx
		mov    %ax,0x000042(%esi)
		sar    $0x000010,%ebx
		movswl %di,%eax
		sub    %ebx,%eax
		cmp    $0x000000,%eax
		je     _040388_jump
		mov    $0x000001,%eax
		jg     _040388_jump
		neg    %eax

	_040388_jump:
		add    %eax,%ebx
		mov    $0x000028,%eax
		cmp    %ebx,%eax
		jle    _040395_jump
		mov    %ebx,%eax

	_040395_jump:
		mov    %eax,%ebx
		mov    $0xffffffd8,%eax
		cmp    %ebx,%eax
		jge    _0403a2_jump
		mov    %ebx,%eax

	_0403a2_jump:
		mov    %ax,0x000040(%esi)
		test   %ax,%ax
		jle    _0403c3_jump
		mov    0x000081(%esi),%dh
		test   $0x000008,%dh
		jne    _0403c3_jump
		mov    %dh,%cl
		or     $0x000008,%cl
		mov    %cl,0x000081(%esi)
		jmp    _0403e0_jump

	_0403c3_jump:
		cmpw   $0x000000,0x000040(%esi)
		jge    _0403e0_jump
		mov    0x000081(%esi),%bl
		test   $0x000008,%bl
		je     _0403e0_jump
		mov    %bl,%bh
		and    $0x0000f7,%bh
		mov    %bh,0x000081(%esi)

	_0403e0_jump:
		mov    _0cece8_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%esi),%ebx
		sub    $0x0000c8,%eax
		cmp    %ebx,%eax
		jle    _04040a_jump
		mov    0x000081(%esi),%ch
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%esi)

	_04040a_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040414_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		cmpw   $0x000000,0x000050(%eax)
		je     _0404ce_jump
		mov    0x000050(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc1f0_data,%ebx
		cmpw   $0x000000,0x000050(%ebx,%eax,4)
		je     _0404ce_jump
		movw   $0x000000,0x000050(%edx)
		mov    _0cec70_data,%ah
		mov    0x000050(%edx),%edx
		or     $0x000001,%ah
		sar    $0x000010,%edx
		mov    %ah,_0cec70_data
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    $0x00000a,%esi
		movw   $0x000000,0x000050(%ebx,%eax,4)
		mov    _0cecea_data,%ax
		mov    $0x00012c,%edi
		sub    $0x0000c8,%eax
		mov    %si,_0dfb28_data
		mov    %ax,_0dfb24_data
		mov    %ax,_0dfb26_data
		mov    _0cdb20_data,%eax
		mov    %di,_0dfb2a_data
		call   _0772d8_func
		mov    _0cdb20_data,%eax
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		mov    $0x000001,%dh
		movb   $0x000008,0x00006e(%eax)
		mov    %dh,_0dfb52_data

	_0404ce_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

_0404e0_switch:
		.long   _04053f_case
		.long   _040556_case
		.long   _04056e_case
		.long   _040586_case

_0404f0_switch:
		.long   _0405b5_case
		.long   _0405cd_case
		.long   _0405e4_case
		.long   _0405fc_case

_040500_switch:
		.long   _04062b_case
		.long   _040637_case
		.long   _040643_case
		.long   _04064f_case

_040510_switch:
		.long   _040672_case
		.long   _040689_case
		.long   _0406a1_case
		.long   _0406b9_case




_040520_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0c4c78_data,%ax
		cmp    $0x000003,%ax
		ja     _04059c_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0404e0_switch(,%eax,4)

	_04053f_case:
		mov    $_0408d4_func,%eax
		mov    $_0406ec_jump,%edx
		mov    %eax,_0c4c68_data
		mov    %edx,_0963b0_data
		jmp    _04059c_jump

	_040556_case:
		mov    $_040960_func,%edi
		mov    $_0406ec_jump,%ebp
		mov    %edi,_0c4c68_data
		mov    %ebp,_0963b4_data
		jmp    _04059c_jump

	_04056e_case:
		mov    $_0409ec_func,%ecx
		mov    $_0406ec_jump,%esi
		mov    %ecx,_0c4c68_data
		mov    %esi,_0963b8_data
		jmp    _04059c_jump

	_040586_case:
		mov    $_040a78_func,%edx
		mov    $_0406ec_jump,%ebx
		mov    %edx,_0c4c68_data
		mov    %ebx,_0963bc_data

	_04059c_jump:
		mov    _0c4c7a_data,%ax
		cmp    $0x000003,%ax
		ja     _040612_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0404f0_switch(,%eax,4)

	_0405b5_case:
		mov    $_0408d4_func,%edx
		mov    $_0406d8_jump,%ebx
		mov    %edx,_0c4c6c_data
		mov    %ebx,_0963b0_data
		jmp    _040612_jump

	_0405cd_case:
		mov    $_040960_func,%ebp
		mov    $_0406d8_jump,%eax
		mov    %ebp,_0c4c6c_data
		mov    %eax,_0963b4_data
		jmp    _040612_jump

	_0405e4_case:
		mov    $_0409ec_func,%esi
		mov    $_0406d8_jump,%edi
		mov    %esi,_0c4c6c_data
		mov    %edi,_0963b8_data
		jmp    _040612_jump

	_0405fc_case:
		mov    $_040a78_func,%ebx
		mov    $_0406d8_jump,%ecx
		mov    %ebx,_0c4c6c_data
		mov    %ecx,_0963bc_data

	_040612_jump:
		mov    _0c4c7c_data,%ax
		cmp    $0x000003,%ax
		ja     _040659_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_040500_switch(,%eax,4)

	_04062b_case:
		movl   $_0408d4_func,_0c4c70_data
		jmp    _040659_jump

	_040637_case:
		movl   $_040960_func,_0c4c70_data
		jmp    _040659_jump

	_040643_case:
		movl   $_0409ec_func,_0c4c70_data
		jmp    _040659_jump

	_04064f_case:
		movl   $_040a78_func,_0c4c70_data

	_040659_jump:
		mov    _0c4c7e_data,%ax
		cmp    $0x000003,%ax
		ja     _0406ce_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_040510_switch(,%eax,4)

	_040672_case:
		mov    $_0408d4_func,%ebp
		mov    $_040700_jump,%eax
		mov    %ebp,_0c4c74_data
		mov    %eax,_0963b0_data
		jmp    _0406ce_jump

	_040689_case:
		mov    $_040960_func,%esi
		mov    $_040700_jump,%edi
		mov    %esi,_0c4c74_data
		mov    %edi,_0963b4_data
		jmp    _0406ce_jump

	_0406a1_case:
		mov    $_0409ec_func,%ebx
		mov    $_040700_jump,%ecx
		mov    %ebx,_0c4c74_data
		mov    %ecx,_0963b8_data
		jmp    _0406ce_jump

	_0406b9_case:
		mov    $_040a78_func,%eax
		mov    $_040700_jump,%edx
		mov    %eax,_0c4c74_data
		mov    %edx,_0963bc_data

	_0406ce_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0406d8_jump:
		xor    %eax,%eax
		mov    _095b24_data,%al
		nop



_0406e0_func:
		and    $0x0000ff,%eax
		mov    _0dfb60_data(%eax),%al
		ret    

	_0406ec_jump:
		xor    %eax,%eax
		mov    _095b25_data,%al
		and    $0x0000ff,%eax
		mov    _0dfb60_data(%eax),%al
		ret    

	_040700_jump:
		xor    %eax,%eax
		mov    _095b26_data,%al
		and    $0x0000ff,%eax
		mov    _0dfb60_data(%eax),%al
		ret    



_040714_func:
		push   %edx
		mov    _095b9a_data,%ah
		xor    %edx,%edx
		cmp    $0x000002,%ah
		jne    _040736_jump
		mov    _0ceb8e_data,%ax
		cmp    _0dfbec_data,%ax
		setle  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_040736_jump:
		cmpb   $0x000001,_0cee94_data
		jne    _04076d_jump
		xor    %eax,%eax
		mov    _095b22_data,%al
		call   _0406e0_func
		test   %al,%al
		je     _040766_jump
		xor    %eax,%eax
		mov    _095b20_data,%al
		call   _0406e0_func
		test   %al,%al
		jne    _040766_jump
		mov    $0x000001,%eax
		jmp    _040768_jump

	_040766_jump:
		xor    %eax,%eax

	_040768_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_04076d_jump:
		cmpb   $0x000000,_0ca315_data
		je     _04077d_jump
		mov    _0dfbf2_data,%dx

	_04077d_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_040784_func:
		push   %edx
		mov    _095b9a_data,%ah
		xor    %edx,%edx
		cmp    $0x000002,%ah
		jne    _0407a6_jump
		mov    _0ceb8e_data,%ax
		cmp    _0dfbfa_data,%ax
		setge  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_0407a6_jump:
		cmpb   $0x000001,_0cee94_data
		jne    _0407dd_jump
		xor    %eax,%eax
		mov    _095b20_data,%al
		call   _0406e0_func
		test   %al,%al
		je     _0407d6_jump
		xor    %eax,%eax
		mov    _095b22_data,%al
		call   _0406e0_func
		test   %al,%al
		jne    _0407d6_jump
		mov    $0x000001,%eax
		jmp    _0407d8_jump

	_0407d6_jump:
		xor    %eax,%eax

	_0407d8_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_0407dd_jump:
		cmpb   $0x000000,_0ca315_data
		je     _0407ed_jump
		mov    _0dfc00_data,%dx

	_0407ed_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_0407f4_func:
		push   %edx
		mov    _095b9a_data,%ah
		xor    %edx,%edx
		cmp    $0x000002,%ah
		jne    _040816_jump
		mov    _0ceb8c_data,%ax
		cmp    _0dfbf6_data,%ax
		setge  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_040816_jump:
		cmpb   $0x000001,_0cee94_data
		jne    _04084d_jump
		xor    %eax,%eax
		mov    _095b23_data,%al
		call   _0406e0_func
		test   %al,%al
		je     _040846_jump
		xor    %eax,%eax
		mov    _095b21_data,%al
		call   _0406e0_func
		test   %al,%al
		jne    _040846_jump
		mov    $0x000001,%eax
		jmp    _040848_jump

	_040846_jump:
		xor    %eax,%eax

	_040848_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_04084d_jump:
		cmpb   $0x000000,_0ca315_data
		je     _04085d_jump
		mov    _0dfc08_data,%dx

	_04085d_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_040864_func:
		push   %edx
		mov    _095b9a_data,%ah
		xor    %edx,%edx
		cmp    $0x000002,%ah
		jne    _040886_jump
		mov    _0ceb8c_data,%ax
		cmp    _0dfbf0_data,%ax
		setle  %al
		xor    %ah,%ah
		mov    %eax,%edx

	_040886_jump:
		cmpb   $0x000001,_0cee94_data
		jne    _0408bd_jump
		xor    %eax,%eax
		mov    _095b21_data,%al
		call   _0406e0_func
		test   %al,%al
		je     _0408b6_jump
		xor    %eax,%eax
		mov    _095b23_data,%al
		call   _0406e0_func
		test   %al,%al
		jne    _0408b6_jump
		mov    $0x000001,%eax
		jmp    _0408b8_jump

	_0408b6_jump:
		xor    %eax,%eax

	_0408b8_jump:
		movswl %dx,%edx
		or     %eax,%edx

	_0408bd_jump:
		cmpb   $0x000000,_0ca315_data
		je     _0408cd_jump
		mov    _0dfbee_data,%dx

	_0408cd_jump:
		mov    %edx,%eax
		pop    %edx
		ret    



_0408d4_func:
		push   %edx
		mov    _0ced22_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _04095b_jump
		cmpb   $0x000000,_095b9a_data
		je     _0408fa_jump
		cmpw   $0x000001,_0c8bf0_data
		jne    _040935_jump

	_0408fa_jump:
		cmpb   $0x000001,_0cee94_data
		jne    _040914_jump
		call   *_0963b0_data
		test   %al,%al
		je     _040914_jump
		mov    $0x000001,%eax
		jmp    _040916_jump

	_040914_jump:
		xor    %eax,%eax

	_040916_jump:
		cmpb   $0x000000,_0cee79_data
		je     _04095b_jump
		cmpw   $0x000001,_0cec3a_data
		sete   %dl
		and    $0x0000ff,%edx
		cwtl   
		or     %edx,%eax
		pop    %edx
		ret    

	_040935_jump:
		cmpw   $0x000001,_0cec3a_data
		je     _040952_jump
		cmpb   $0x000001,_0cee94_data
		jne    _040959_jump
		call   *_0963b0_data
		test   %al,%al
		je     _040959_jump

	_040952_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_040959_jump:
		xor    %eax,%eax

	_04095b_jump:
		pop    %edx
		ret    



_040960_func:
		push   %edx
		mov    _0ced22_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _0409e7_jump
		cmpb   $0x000000,_095b9a_data
		je     _040986_jump
		cmpw   $0x000001,_0c8bf2_data
		jne    _0409c1_jump

	_040986_jump:
		cmpb   $0x000001,_0cee94_data
		jne    _0409a0_jump
		call   *_0963b4_data
		test   %al,%al
		je     _0409a0_jump
		mov    $0x000001,%eax
		jmp    _0409a2_jump

	_0409a0_jump:
		xor    %eax,%eax

	_0409a2_jump:
		cmpb   $0x000000,_0cee79_data
		je     _0409e7_jump
		cmpw   $0x000001,_0cec3c_data
		sete   %dl
		and    $0x0000ff,%edx
		cwtl   
		or     %edx,%eax
		pop    %edx
		ret    

	_0409c1_jump:
		cmpw   $0x000001,_0cec3c_data
		je     _0409de_jump
		cmpb   $0x000001,_0cee94_data
		jne    _0409e5_jump
		call   *_0963b4_data
		test   %al,%al
		je     _0409e5_jump

	_0409de_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_0409e5_jump:
		xor    %eax,%eax

	_0409e7_jump:
		pop    %edx
		ret    



_0409ec_func:
		push   %edx
		mov    _0ced22_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _040a73_jump
		cmpb   $0x000000,_095b9a_data
		je     _040a12_jump
		cmpw   $0x000001,_0c8bf4_data
		jne    _040a4d_jump

	_040a12_jump:
		cmpb   $0x000001,_0cee94_data
		jne    _040a2c_jump
		call   *_0963b8_data
		test   %al,%al
		je     _040a2c_jump
		mov    $0x000001,%eax
		jmp    _040a2e_jump

	_040a2c_jump:
		xor    %eax,%eax

	_040a2e_jump:
		cmpb   $0x000000,_0cee79_data
		je     _040a73_jump
		cmpw   $0x000001,_0cec34_data
		sete   %dl
		and    $0x0000ff,%edx
		cwtl   
		or     %edx,%eax
		pop    %edx
		ret    

	_040a4d_jump:
		cmpw   $0x000001,_0cec34_data
		je     _040a6a_jump
		cmpb   $0x000001,_0cee94_data
		jne    _040a71_jump
		call   *_0963b8_data
		test   %al,%al
		je     _040a71_jump

	_040a6a_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_040a71_jump:
		xor    %eax,%eax

	_040a73_jump:
		pop    %edx
		ret    



_040a78_func:
		push   %edx
		mov    _0ced22_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _040aff_jump
		cmpb   $0x000000,_095b9a_data
		je     _040a9e_jump
		cmpw   $0x000001,_0c8bf6_data
		jne    _040ad9_jump

	_040a9e_jump:
		cmpb   $0x000001,_0cee94_data
		jne    _040ab8_jump
		call   *_0963bc_data
		test   %al,%al
		je     _040ab8_jump
		mov    $0x000001,%eax
		jmp    _040aba_jump

	_040ab8_jump:
		xor    %eax,%eax

	_040aba_jump:
		cmpb   $0x000000,_0cee79_data
		je     _040aff_jump
		cmpw   $0x000001,_0cec3a_data
		sete   %dl
		and    $0x0000ff,%edx
		cwtl   
		or     %edx,%eax
		pop    %edx
		ret    

	_040ad9_jump:
		cmpw   $0x000001,_0cec36_data
		je     _040af6_jump
		cmpb   $0x000001,_0cee94_data
		jne    _040afd_jump
		call   *_0963bc_data
		test   %al,%al
		je     _040afd_jump

	_040af6_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_040afd_jump:
		xor    %eax,%eax

	_040aff_jump:
		pop    %edx
		ret    



_040b04_func:
		push   %edx
		mov    _0ced22_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _040b39_jump
		cmpw   $0x000001,_0dfc04_data
		je     _040b30_jump
		cmpb   $0x000001,_0cee94_data
		jne    _040b37_jump
		call   *_0963b8_data
		test   %al,%al
		je     _040b37_jump

	_040b30_jump:
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_040b37_jump:
		xor    %eax,%eax

	_040b39_jump:
		pop    %edx
		ret    



_040b3c_func:
		push   %edx
		mov    _0ced22_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jne    _040b58_jump
		cmpw   $0x000001,_0dfbfe_data
		sete   %al
		xor    %ah,%ah

	_040b58_jump:
		pop    %edx
		ret    



_040b5c_func:
		mov    %ax,_0dfbf4_data
		ret    



_040b64_func:
		call   *_0dfbe0_data
		ret    



_040b6c_func:
		push   %esi
		mov    %eax,%esi
		call   *_0dfbe0_data
		mov    _0ceb8e_data,%ax
		cmp    (%edx),%ax
		jge    _040b83_jump
		mov    %ax,(%edx)

	_040b83_jump:
		mov    _0ceb8c_data,%dx
		cmp    (%ecx),%dx
		jge    _040b92_jump
		mov    %dx,(%ecx)

	_040b92_jump:
		mov    _0ceb8e_data,%dx
		cmp    (%esi),%dx
		jle    _040ba1_jump
		mov    %dx,(%esi)

	_040ba1_jump:
		mov    _0ceb8c_data,%dx
		cmp    (%ebx),%dx
		jle    _040bb0_jump
		mov    %dx,(%ebx)

	_040bb0_jump:
		pop    %esi
		ret    



_040bb4_func:
		push   %ebx
		mov    %eax,%ebx
		cmpb   $0x000000,_095b9a_data
		je     _040bee_jump
		call   *_0dfbe0_data
		mov    _0ceb8e_data,%ax
		mov    %ax,(%ebx)
		mov    _0ceb8c_data,%bx
		mov    %ax,_0dfbf8_data
		mov    %bx,(%edx)
		mov    $0x000002,%dl
		mov    %bx,_0dfbfc_data
		mov    %dl,_095b9a_data

	_040bee_jump:
		pop    %ebx
		ret    



_040bf0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		mov    %ecx,%ebp
		mov    0x000014(%esp),%ecx
		movswl (%ecx),%ecx
		movswl (%edx),%ebx
		mov    %ecx,%edx
		sub    %ebx,%edx
		mov    $0x000005,%eax
		add    %edx,%edx
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		add    %ebx,%eax
		movswl (%esi),%ebx
		mov    %ebx,%edx
		sub    %ecx,%edx
		mov    %ax,_0dfbec_data
		add    %edx,%edx
		mov    $0x000005,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		sub    %eax,%ebx
		mov    %bx,_0dfbfa_data
		mov    0x000018(%esp),%ebx
		movswl (%ebx),%ebx
		movswl 0x000000(%ebp),%ecx
		mov    %ebx,%edx
		sub    %ecx,%edx
		add    %edx,%edx
		mov    $0x000005,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		add    %ecx,%eax
		movswl (%edi),%ecx
		mov    %ecx,%edx
		sub    %ebx,%edx
		add    %edx,%edx
		mov    %ax,_0dfbf0_data
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		sub    %eax,%ecx
		mov    %cx,_0dfbf6_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_040cf8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		push   $0x000180
		push   $0x000200
		push   %eax
		call   _07cf6f_func
		movswl %ax,%ecx
		add    $0x00000c,%esp
		cmp    $0xffffffff,%ecx
		jne    _040d2d_jump
		push   %ebx
		push   $_0c0814_data
		call   _07bc8c_func
		add    $0x000008,%esp
		call   _07c0ab_func
		pop    %ecx
		pop    %ebx
		ret    

	_040d2d_jump:
		mov    %ecx,%eax
		call   _08113b_func
		movswl %ax,%ebx
		mov    %ebx,%eax
		call   _07b4e8_func
		mov    %eax,0x000010(%edx)
		mov    %ebx,0x00000c(%edx)
		mov    %ecx,%eax
		mov    0x000010(%edx),%edx
		call   _081178_func
		mov    %ecx,%eax
		call   _07d213_func
		pop    %ecx
		pop    %ebx
		ret    



_040d58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000064,%esp
		mov    %eax,%ebp
		call   _03c7bc_func
		push   $_0c0830_data
		call   _07bc8c_func
		add    $0x000004,%esp
		mov    $_0c0828_data,%esi
		push   %esi
		push   $_0c0860_data
		xor    %edx,%edx
		call   _07bc8c_func
		add    $0x000008,%esp

	_040d8a_jump:
		call   _081273_func
		movswl %dx,%ebx
		inc    %edx
		mov    %al,(%esp,%ebx,1)
		cmp    $0x00000d,%al
		je     _040d9e_jump
		cmp    $0x00001b,%al
		jne    _040d8a_jump

	_040d9e_jump:
		dec    %edx
		movswl %dx,%eax
		xor    %dl,%dl
		mov    %dl,(%esp,%eax,1)
		cmpb   $0x000000,(%esp)
		jne    _040dc9_jump
		mov    %esp,%edi
		push   %edi

	_040db0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _040dc8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _040db0_jump

	_040dc8_jump:
		pop    %edi

	_040dc9_jump:
		mov    $_0c0880_data,%esi
		mov    %esp,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_040dd9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _040df1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _040dd9_jump

	_040df1_jump:
		pop    %edi
		mov    %ebp,%edx
		mov    %esp,%eax
		call   _040cf8_func
		xor    %eax,%eax
		mov    $_0c6d88_data,%esi
		mov    _0cee8f_data,%al
		mov    $0x0000ff,%ecx
		call   _03c6a0_func
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		add    $0x000064,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040e38_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %dx,_0cec36_data
		mov    %dx,_0cec34_data
		mov    %dx,_0cec3a_data
		test   $0x000001,%al
		je     _040e60_jump
		movw   $0x000001,_0cec3a_data

	_040e60_jump:
		test   $0x000002,%al
		je     _040e6d_jump
		movw   $0x000001,_0cec34_data

	_040e6d_jump:
		test   $0x000004,%al
		je     _040e76_jump
		mov    $0x000001,%ebx

	_040e76_jump:
		test   $0x000008,%al
		je     _040e7f_jump
		mov    $0x000001,%ebx

	_040e7f_jump:
		test   $0x000010,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0dfbf2_data
		test   $0x000020,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0dfc00_data
		test   $0x000040,%al
		setne  %dl
		xor    %dh,%dh
		mov    %dx,_0dfbee_data
		test   $0x000080,%al
		setne  %dl
		mov    %dx,_0dfc08_data
		mov    %bx,_0cec3c_data
		pop    %edx
		pop    %ebx
		ret    



_040ec0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0cec3a_data,%ax
		mov    %ax,_0dfc06_data
		mov    _0cec3c_data,%ax
		mov    %ax,_0dfc04_data
		mov    _0cec34_data,%ax
		mov    %ax,_0dfc02_data
		mov    _0cec36_data,%ax
		mov    %ax,_0dfbfe_data
		mov    0x000015(%edx),%ah
		mov    (%edx),%ebx
		test   %ah,%ah
		je     _040fc7_jump
		test   %ebx,%ebx
		jne    _040f57_jump
		mov    _0cecce_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _040f24_jump
		cmpb   $0x000000,_0cee79_data
		jne    _040f24_jump
		mov    %edx,%eax
		call   _040d58_func

	_040f24_jump:
		mov    %ebx,%ecx
		mov    0x000010(%edx),%eax
		movl   $0x000000,0x000008(%edx)
		inc    %ebx
		mov    (%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _040e38_func
		mov    0x000010(%edx),%eax
		mov    (%ebx,%eax,1),%al
		movb   $0x000000,0x000016(%edx)
		and    $0x0000ff,%eax
		mov    %ebx,(%edx)
		mov    %eax,0x000004(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_040f57_jump:
		mov    0x000008(%edx),%ecx
		inc    %ecx
		mov    0x000004(%edx),%esi
		mov    %ecx,0x000008(%edx)
		cmp    %esi,%ecx
		jne    _040fb6_jump
		cmpb   $0x000001,0x000016(%edx)
		je     _040f73_jump
		lea    0x000001(%ebx),%eax
		cmp    0x00000c(%edx),%eax
		jb     _040f9c_jump

	_040f73_jump:
		mov    _0cee79_data,%ch
		movb   $0x000000,0x000015(%edx)
		cmp    $0x000001,%ch
		jne    _040fb6_jump
		mov    $0x000002,%al
		mov    $0x000001,%ecx
		mov    %al,_0cee79_data
		mov    %cx,_0cecda_data
		call   _03b8d0_func
		jmp    _040fb6_jump

	_040f9c_jump:
		add    $0x000002,%ebx
		mov    0x000010(%edx),%eax
		movl   $0x000000,0x000008(%edx)
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    %ebx,(%edx)
		mov    %eax,0x000004(%edx)

	_040fb6_jump:
		mov    0x000010(%edx),%eax
		mov    -0x000001(%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _040e38_func

	_040fc7_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_040fcc_func:
		pusha  
		push   %ds
		push   %es
		push   %fs
		push   %gs
		mov    %esp,%ebp
		cld    
		call   _07c044_func
		cli    
		mov    $0x000060,%edx
		in     $0x000021,%al
		or     $0x000002,%al
		out    %al,$0x000021
		sub    %eax,%eax
		in     (%dx),%al
		mov    %eax,%ebx
		mov    _0cee79_data,%ah
		xor    %cl,%cl
		cmp    $0x000001,%ah
		jne    _041016_jump
		testb  $0x000040,_0ceecb_data
		je     _041016_jump
		cmp    %ah,%al
		jne    _04100f_jump
		movb   $0x000004,_0cee79_data
		jmp    _041016_jump

	_04100f_jump:
		movb   $0x000003,_0cee79_data

	_041016_jump:
		mov    _0cee7a_data,%bh
		cmp    $0x000001,%bh
		jne    _041035_jump
		testb  $0x000040,_0ceecb_data
		je     _041035_jump
		cmp    %bh,%al
		jne    _041035_jump
		movb   $0x000003,_0cee7a_data

	_041035_jump:
		cmpb   $0x000000,_0cee98_data
		je     _041067_jump
		mov    _0cee73_data,%dh
		xor    %bl,%bl
		and    $0x0000fb,%dh
		mov    %bl,_0cee72_data
		mov    _0cee71_data,%bh
		mov    %dh,_0cee73_data
		cmp    $0x000001,%bh
		jne    _041067_jump
		movb   $0x000002,_0cee71_data

	_041067_jump:
		mov    _0963c0_data,%bl
		cmp    $0x000001,%bl
		jb     _04107b_jump
		jbe    _041090_jump
		cmp    $0x000002,%bl
		je     _0410a7_jump
		jmp    _0410cf_jump

	_04107b_jump:
		test   %bl,%bl
		jne    _0410cf_jump
		cmp    $0x0000e1,%al
		jne    _04108c_jump
		movb   $0x000001,_0963c0_data
		jmp    _0410d7_jump

	_04108c_jump:
		mov    $0x000001,%cl
		jmp    _0410d7_jump

	_041090_jump:
		cmp    $0x00001d,%al
		jne    _04109d_jump
		movb   $0x000002,_0963c0_data
		jmp    _0410d7_jump

	_04109d_jump:
		xor    %bl,%bl
		mov    %bl,_0963c0_data
		jmp    _0410d7_jump

	_0410a7_jump:
		cmp    $0x000045,%al
		jne    _0410c5_jump
		cmpb   $0x000000,_0ceedd_data
		je     _0410c5_jump
		mov    _0cee95_data,%dl
		test   %dl,%dl
		sete   %bl
		mov    %bl,_0cee95_data

	_0410c5_jump:
		xor    %dh,%dh
		mov    %dh,_0963c0_data
		jmp    _0410d7_jump

	_0410cf_jump:
		xor    %ch,%ch
		mov    %ch,_0963c0_data

	_0410d7_jump:
		test   %cl,%cl
		je     _0410f0_jump
		mov    %al,%bl
		and    $0x000080,%bl
		and    $0x00007f,%al
		xor    $0x000080,%bl
		and    $0x0000ff,%eax
		mov    %bl,_0dfb60_data(%eax)

	_0410f0_jump:
		mov    $0x000061,%edx
		sub    %eax,%eax
		in     (%dx),%al
		mov    %eax,%ebx
		or     $0x000080,%al
		out    %al,(%dx)
		mov    %bl,%al
		out    %al,(%dx)
		mov    $0x000020,%al
		mov    $0x000020,%edx
		out    %al,(%dx)
		in     $0x000021,%al
		and    $0x0000fd,%al
		out    %al,$0x000021
		sti    
		cld    
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		popa   
		iret   



_041118_func:
		push   %edx
		and    $0x0000ff,%eax
		xor    %dl,%dl
		mov    %dl,_0dfb60_data(%eax)
		pop    %edx
		ret    



_041128_func:
		push   %edx
		xor    %al,%al

	_04112b_jump:
		xor    %edx,%edx
		mov    %al,%dl
		xor    %ah,%ah
		mov    %ah,_0dfb60_data(%edx)
		inc    %al
		cmp    $0x000080,%al
		jb     _04112b_jump
		pop    %edx
		ret    



_041140_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _041128_func
		mov    $0x000009,%eax
		call   _07ceb9_func
		mov    %eax,_0dfbe4_data
		mov    _0cee94_data,%ah
		mov    %dx,_0dfbe8_data
		cmp    $0x000001,%ah
		jne    _04117a_jump
		mov    $_040fcc_func,%ebx
		mov    $0x000009,%eax
		mov    %cs,%ecx
		call   _07ceeb_func

	_04117a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041180_func:
		push   %ebx
		push   %ecx
		mov    $0x000009,%eax
		mov    _0dfbe8_data,%cx
		mov    _0dfbe4_data,%ebx
		call   _07ceeb_func
		pop    %ecx
		pop    %ebx
		ret    



_04119c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cee93_data
		je     _0411b4_jump
		mov    _0cee5c_data,%dl
		test   %dl,%dl
		je     _0411d1_jump

	_0411b4_jump:
		xor    %bh,%bh
		mov    $_015ab4_func,%edx
		mov    %bh,_0cee69_data
		xor    %bl,%bl
		mov    %edx,_0dfbe0_data
		mov    %bh,_0cee66_data
		jmp    _0411f7_jump

	_0411d1_jump:
		mov    $0x000001,%bh
		mov    $_015ca9_func,%ecx
		mov    %dl,_0cee66_data
		mov    $_0158bc_func,%edx
		mov    %bh,_0cee69_data
		mov    %ecx,_0cc510_data
		mov    %edx,_0dfbe0_data
		xor    %bl,%bl

	_0411f7_jump:
		call   _015c3e_func
		test   %eax,%eax
		jne    _041299_jump
		call   _015c73_func
		test   %eax,%eax
		jne    _041299_jump
		mov    _0cee69_data,%bh
		mov    _0dfbe0_data,%edx
		xor    %cl,%cl
		xor    %esi,%esi
		xor    %edi,%edi
		xor    %eax,%eax
		mov    _0cee66_data,%bl
		mov    %cl,_095b9a_data
		mov    %si,_0ceb8e_data
		mov    %di,_0cec36_data
		mov    %ax,_0cec34_data
		mov    %si,_0cec3a_data
		mov    %di,_0dfbfe_data
		mov    %ax,_0dfc02_data
		mov    %si,_0dfc06_data
		mov    %di,_0dfbfa_data
		mov    %ax,_0dfbec_data
		mov    %si,_0dfbf0_data
		xor    %ch,%ch
		xor    %al,%al
		mov    %cx,_0ceb8c_data
		mov    %cx,_0cec3c_data
		mov    %cx,_0dfc04_data
		mov    %cx,_0dfbf6_data
		jmp    _041318_jump

	_041299_jump:
		cmpb   $0x000000,_095b9a_data
		jne    _0412a9_jump
		movb   $0x000001,_095b9a_data

	_0412a9_jump:
		call   _015c3e_func
		test   %eax,%eax
		je     _0412e5_jump
		cmpb   $0x000000,_0cee93_data
		je     _0412c4_jump
		cmpb   $0x000000,_0cee5c_data
		je     _0412cf_jump

	_0412c4_jump:
		xor    %bh,%bh
		mov    $_015ab4_func,%edx
		xor    %bl,%bl
		jmp    _041316_jump

	_0412cf_jump:
		mov    $0x000001,%bh
		mov    $_015ca9_func,%edi
		mov    $_0158bc_func,%edx
		mov    %edi,_0cc510_data
		xor    %bl,%bl
		jmp    _041316_jump

	_0412e5_jump:
		cmpb   $0x000000,_0cee93_data
		je     _0412f7_jump
		cmpb   $0x000000,_0cee5c_data
		je     _041302_jump

	_0412f7_jump:
		xor    %bh,%bh
		mov    $_015b72_func,%edx
		mov    $0x000001,%bl
		jmp    _041316_jump

	_041302_jump:
		mov    $0x000001,%bh
		mov    $_0159b6_func,%edx
		mov    $_015e93_func,%esi
		mov    %bh,%bl
		mov    %esi,_0cc510_data

	_041316_jump:
		mov    $0x000001,%al

	_041318_jump:
		mov    %bh,_0cee69_data
		mov    %bl,_0cee66_data
		mov    %edx,_0dfbe0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041330_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		mov    %eax,%esi
		mov    %edx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)
		mov    0x000040(%esp),%ecx
		mov    %ebx,%eax
		mov    _0cc4d0_data,%edx
		lea    0x000000(,%edx,4),%ebp
		add    %edx,%ebp
		mov    _0cc4d8_data,%edx
		shl    $0x000006,%ebp
		add    %ebp,%edx
		mov    %edx,0x000018(%esp)
		mov    %esi,%edx
		sub    $0x000070,%edx
		mov    %esi,%ebp
		mov    %edx,0x00001c(%esp)
		mov    0x000008(%esp),%edx
		sub    %ebx,%ebp
		sub    $0x000040,%edx
		sub    %ecx,%ebp
		mov    %edx,0x000010(%esp)
		cmp    %ecx,%ebx
		jle    _041505_jump
		lea    (%ebx,%ecx,1),%eax
		add    %eax,%eax
		mov    %eax,0x000024(%esp)
		test   %ebp,%ebp
		jge    _04139c_jump
		lea    (%eax,%ebp,1),%ecx
		mov    %ecx,0x000024(%esp)
		xor    %ebp,%ebp

	_04139c_jump:
		mov    0x000024(%esp),%eax
		add    %ebp,%eax
		cmp    $0x000140,%eax
		jl     _0413b5_jump
		mov    $0x000140,%eax
		sub    %ebp,%eax
		dec    %eax
		mov    %eax,0x000024(%esp)

	_0413b5_jump:
		cmpl   $0x000000,0x000024(%esp)
		jle    _041813_jump
		mov    0x000008(%esp),%ecx
		sub    0x000004(%esp),%ecx
		test   %ecx,%ecx
		jl     _041465_jump
		cmp    $0x0000c8,%ecx
		jge    _041465_jump
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000044(%esp),%edx
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000048(%esp),%ebx
		sub    %eax,%esi
		add    %ebx,%edi
		mov    _0cee74_data,%bh
		add    %edx,%esi
		test   %bh,%bh
		je     _041450_jump
		mov    0x000010(%esp),%eax
		mov    %ecx,%edx
		sub    %eax,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    %ebp,%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cc4c0_data,%ebx
		shl    $0x000002,%eax
		mov    0x000024(%esp),%ecx
		add    %eax,%ebx

	_04143f_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _04143f_jump
		jmp    _041465_jump

	_041450_jump:
		mov    0x000024(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _04145e_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_04145e_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_041465_jump:
		mov    0x000008(%esp),%esi
		add    0x000004(%esp),%esi
		test   %esi,%esi
		jl     _041813_jump
		cmp    $0x0000c8,%esi
		jge    _041813_jump
		lea    0x000000(,%esi,4),%eax
		add    %esi,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000018(%esp),%edx
		mov    %edi,%eax
		mov    0x000048(%esp),%ebx
		sub    %edx,%eax
		mov    0x000044(%esp),%edx
		mov    _0cee74_data,%cl
		add    %eax,%edx
		add    %ebx,%edi
		mov    %edx,(%esp)
		test   %cl,%cl
		je     _0414fa_jump
		mov    0x000010(%esp),%ecx
		mov    %esi,%edx
		sub    %ecx,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    0x00001c(%esp),%ebp
		mov    _0cc4c0_data,%ebx
		add    %ebp,%eax
		mov    0x000024(%esp),%ecx
		shl    $0x000002,%eax
		mov    (%esp),%esi
		add    %eax,%ebx

	_0414e6_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _0414e6_jump
		jmp    _041813_jump

	_0414fa_jump:
		mov    0x000024(%esp),%ecx
		mov    %edx,%esi
		jmp    _041802_jump

	_041505_jump:
		lea    (%ebx,%ebx,1),%edx
		mov    %edx,0x00002c(%esp)
		test   %ebp,%ebp
		jge    _041518_jump
		add    %ebp,%edx
		mov    %edx,0x00002c(%esp)
		xor    %ebp,%ebp

	_041518_jump:
		mov    0x00002c(%esp),%edx
		add    %ebp,%edx
		cmp    $0x000140,%edx
		jl     _041532_jump
		mov    $0x000140,%edx
		sub    %ebp,%edx
		dec    %edx
		mov    %edx,0x00002c(%esp)

	_041532_jump:
		lea    (%eax,%eax,1),%edx
		sub    %eax,%esi
		add    %ecx,%esi
		mov    %edx,0x000028(%esp)
		mov    %esi,0x000020(%esp)
		test   %esi,%esi
		jge    _041552_jump
		lea    (%edx,%esi,1),%ecx
		xor    %esi,%esi
		mov    %ecx,0x000028(%esp)
		mov    %esi,0x000020(%esp)

	_041552_jump:
		mov    0x000020(%esp),%eax
		add    0x000028(%esp),%eax
		cmp    $0x000140,%eax
		jl     _04156f_jump
		mov    $0x000140,%eax
		sub    0x000020(%esp),%eax
		dec    %eax
		mov    %eax,0x000028(%esp)

	_04156f_jump:
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%ebx
		sub    %ebx,%eax
		mov    %eax,0x000014(%esp)
		test   %eax,%eax
		jl     _0416bc_jump
		cmp    $0x0000c8,%eax
		jge    _0416bc_jump
		cmpl   $0x000000,0x00002c(%esp)
		jle    _041622_jump
		mov    %eax,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		lea    (%eax,%ebp,1),%edi
		mov    0x000048(%esp),%ebx
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000044(%esp),%edx
		sub    %eax,%esi
		add    %ebx,%edi
		mov    _0cee74_data,%ah
		add    %edx,%esi
		test   %ah,%ah
		je     _04160d_jump
		mov    0x000014(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    %ebp,%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cc4c0_data,%ebx
		shl    $0x000002,%eax
		mov    0x00002c(%esp),%ecx
		add    %eax,%ebx

	_0415fc_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _0415fc_jump
		jmp    _041622_jump

	_04160d_jump:
		mov    0x00002c(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _04161b_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_04161b_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_041622_jump:
		mov    0x000028(%esp),%ecx
		test   %ecx,%ecx
		jle    _0416bc_jump
		mov    0x000014(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    0x000020(%esp),%edi
		shl    $0x000006,%eax
		add    %eax,%edi
		mov    0x000018(%esp),%eax
		mov    %edi,%esi
		mov    0x000044(%esp),%edx
		sub    %eax,%esi
		mov    0x000048(%esp),%ebx
		add    %edx,%esi
		mov    _0cee74_data,%dl
		add    %ebx,%edi
		test   %dl,%dl
		je     _0416ab_jump
		mov    0x000014(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    0x000020(%esp),%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cc4c0_data,%ebx
		shl    $0x000002,%eax
		mov    0x000028(%esp),%ecx
		add    %eax,%ebx

	_04169a_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _04169a_jump
		jmp    _0416bc_jump

	_0416ab_jump:
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0416b5_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0416b5_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_0416bc_jump:
		mov    0x000008(%esp),%eax
		mov    0x000004(%esp),%ecx
		add    %ecx,%eax
		mov    %eax,0x00000c(%esp)
		test   %eax,%eax
		jl     _041813_jump
		cmp    $0x0000c8,%eax
		jge    _041813_jump
		cmpl   $0x000000,0x00002c(%esp)
		jle    _041771_jump
		mov    0x00000c(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		mov    0x000044(%esp),%ebx
		lea    (%eax,%ebp,1),%edi
		mov    0x000018(%esp),%edx
		mov    %edi,%esi
		mov    0x000048(%esp),%ecx
		sub    %edx,%esi
		add    %ecx,%edi
		mov    _0cee74_data,%dh
		add    %ebx,%esi
		test   %dh,%dh
		je     _04175c_jump
		mov    0x00000c(%esp),%edx
		sub    0x000010(%esp),%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000006,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    0x00001c(%esp),%ebp
		add    %ebp,%eax
		mov    _0cc4c0_data,%ebx
		shl    $0x000002,%eax
		mov    0x00002c(%esp),%ecx
		add    %eax,%ebx

	_04174b_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _04174b_jump
		jmp    _041771_jump

	_04175c_jump:
		mov    0x00002c(%esp),%ecx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _04176a_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_04176a_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_041771_jump:
		cmpl   $0x000000,0x000028(%esp)
		jle    _041813_jump
		mov    0x00000c(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		mov    0x000020(%esp),%edi
		add    %edx,%eax
		mov    0x000018(%esp),%ecx
		shl    $0x000006,%eax
		mov    0x000044(%esp),%ebp
		add    %eax,%edi
		mov    _0cee74_data,%bl
		mov    %edi,%esi
		mov    0x000048(%esp),%eax
		sub    %ecx,%esi
		add    %eax,%edi
		add    %ebp,%esi
		test   %bl,%bl
		je     _0417fe_jump
		mov    %edx,%eax
		sub    0x000010(%esp),%eax
		lea    0x000000(,%eax,8),%edx
		sub    %eax,%edx
		shl    $0x000006,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00001c(%esp),%ebx
		mov    0x000020(%esp),%edx
		sub    %ebx,%edx
		add    %edx,%eax
		mov    _0cc4c0_data,%ebx
		shl    $0x000002,%eax
		mov    0x000028(%esp),%ecx
		add    %eax,%ebx

	_0417e6_jump:
		mov    (%ebx),%eax
		mov    (%esi,%eax,1),%ah
		add    $0x000004,%ebx
		mov    %ah,(%edi)
		inc    %esi
		inc    %edi
		dec    %ecx
		jne    _0417e6_jump
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c

	_0417fe_jump:
		mov    0x000028(%esp),%ecx

	_041802_jump:
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _04180c_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_04180c_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_041813_jump:
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_04181c_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,0x000008(%esp)
		mov    %edx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %ebx,%esi
		xor    %edi,%edi
		xor    %ebp,%ebp
		test   %ebx,%ebx
		jl     _0418ac_jump
		mov    $0x000001,%edx
		add    %ebx,%ebx
		sub    %edx,%ebx
		mov    %edx,0x00000c(%esp)
		mov    %ebx,0x000010(%esp)

	_041848_jump:
		mov    0x000028(%esp),%ebx
		push   %ebx
		mov    0x000028(%esp),%ecx
		mov    0x000008(%esp),%eax
		push   %ecx
		mov    0x000008(%esp),%edx
		mov    %edi,%ebx
		push   %eax
		mov    %esi,%ecx
		mov    0x000014(%esp),%eax
		call   _041330_func
		mov    0x000028(%esp),%edx
		push   %edx
		mov    0x000028(%esp),%ebx
		mov    0x000008(%esp),%ecx
		push   %ebx
		mov    0x000010(%esp),%eax
		mov    0x000008(%esp),%edx
		push   %ecx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _041330_func
		mov    0x00000c(%esp),%eax
		add    %eax,%ebp
		lea    0x000002(%eax),%edx
		inc    %edi
		mov    %edx,0x00000c(%esp)
		cmp    %esi,%ebp
		jl     _0418a8_jump
		mov    0x000010(%esp),%ebx
		sub    %ebx,%ebp
		lea    -0x000002(%ebx),%ecx
		dec    %esi
		mov    %ecx,0x000010(%esp)

	_0418a8_jump:
		cmp    %esi,%edi
		jle    _041848_jump

	_0418ac_jump:
		cmpb   $0x000000,_0cee75_data
		je     _0418ba_jump
		call   _0421fc_func

	_0418ba_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_0418c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cee76_data
		je     _041a2a_jump
		mov    $0x000004,%edx
		mov    $0x0000a1,%eax
		call   _07b7cc_func
		mov    $0x000004,%edx
		mov    %eax,_0dfc28_data
		mov    $0x000041,%eax
		call   _07b7cc_func
		mov    $0x000004,%edx
		mov    %eax,_0dfc24_data
		mov    $0x001400,%eax
		call   _07b7cc_func
		mov    $0x000004,%edx
		mov    %eax,_0dfc3c_data
		mov    $0x007161,%eax
		call   _07b7cc_func
		mov    _0dfc28_data,%edx
		mov    %eax,_0cc4c0_data
		test   %edx,%edx
		je     _041946_jump
		cmpl   $0x000000,_0dfc24_data
		je     _041946_jump
		cmpl   $0x000000,_0dfc3c_data
		je     _041946_jump
		test   %eax,%eax
		jne    _0419a9_jump

	_041946_jump:
		cmpl   $0x000000,_0dfc28_data
		je     _041959_jump
		mov    $_0dfc28_data,%eax
		call   _07b7dc_func

	_041959_jump:
		cmpl   $0x000000,_0dfc24_data
		je     _04196c_jump
		mov    $_0dfc24_data,%eax
		call   _07b7dc_func

	_04196c_jump:
		cmpl   $0x000000,_0dfc3c_data
		je     _04197f_jump
		mov    $_0dfc3c_data,%eax
		call   _07b7dc_func

	_04197f_jump:
		cmpl   $0x000000,_0cc4c0_data
		je     _041992_jump
		mov    $_0cc4c0_data,%eax
		call   _07b7dc_func

	_041992_jump:
		xor    %dl,%dl
		mov    $_0c0888_data,%eax
		mov    %dl,_0cee76_data
		call   _01f3a4_func
		jmp    _041a2a_jump

	_0419a9_jump:
		xor    %esi,%esi
		xor    %edi,%edi

	_0419ad_jump:
		mov    %esi,%eax
		imul   %esi,%eax
		mov    _0dfc24_data,%edx
		mov    %eax,(%edx,%edi,1)
		xor    %eax,%eax
		xor    %edx,%edx

	_0419bf_jump:
		mov    %eax,%ebx
		imul   %eax,%ebx
		mov    _0dfc28_data,%ecx
		add    $0x000004,%edx
		inc    %eax
		mov    %ebx,-0x000004(%ecx,%edx,1)
		cmp    $0x0000a0,%eax
		jle    _0419bf_jump
		inc    %esi
		add    $0x000004,%edi
		cmp    $0x000040,%esi
		jle    _0419ad_jump
		xor    %esi,%esi
		xor    %edi,%edi

	_0419e6_jump:
		mov    $0x3f500000,%ecx
		mov    %esi,%eax
		add    $0x000004,%edi
		call   _07b8f2_func
		xor    %ebx,%ebx
		call   _07c66e_func
		call   _07baef_func
		mov    $0x40f00000,%ecx
		xor    %ebx,%ebx
		call   _0812a2_func
		call   _07baef_func
		call   _07c13c_func
		mov    _0dfc3c_data,%edx
		inc    %esi
		mov    %eax,-0x000004(%edx,%edi,1)
		cmp    $0x001400,%esi
		jl     _0419e6_jump

	_041a2a_jump:
		call   _041a38_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041a38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cee76_data,%ah
		test   %ah,%ah
		je     _041a58_jump
		movb   $0x000001,_0cee74_data
		movb   $0x000003,_0cee73_data
		jmp    _041a66_jump

	_041a58_jump:
		mov    $0x000003,%dh
		mov    %ah,_0cee74_data
		mov    %dh,_0cee73_data

	_041a66_jump:
		mov    $0x000019,%edx
		mov    $0x000057,%ebx
		mov    $0x000032,%ecx
		mov    $0x0000a0,%esi
		mov    $0x000064,%edi
		mov    $0x000a00,%ebp
		mov    $0x000640,%eax
		mov    %edx,_0cc4dc_data
		mov    %ebx,_0cc4b0_data
		mov    %ecx,_0cc4ac_data
		mov    %esi,_0cc4bc_data
		mov    %edi,_0cc4b8_data
		mov    %ebp,_0dfc10_data
		xor    %cl,%cl
		mov    %eax,_0dfc0c_data
		mov    %cl,_0cee72_data
		mov    %cl,_0cee71_data
		call   _04208c_func
		cmpb   $0x000000,_0cee76_data
		je     _041af5_jump
		mov    _0cc4dc_data,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0cc4b4_data
		call   _0421fc_func

	_041af5_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041afc_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0cc4dc_data,%ebx
		add    %eax,%ebx
		mov    $0x000040,%eax
		cmp    %ebx,%eax
		jle    _041b13_jump
		mov    %ebx,%eax

	_041b13_jump:
		mov    %eax,%ebx
		mov    $0x000019,%eax
		cmp    %ebx,%eax
		jge    _041b20_jump
		mov    %ebx,%eax

	_041b20_jump:
		mov    %eax,_0cc4dc_data
		call   _04208c_func
		cmpb   $0x000000,_0cee74_data
		je     _041b48_jump
		test   %edx,%edx
		jle    _041b3e_jump
		mov    $0xffffffbf,%eax
		jmp    _041b43_jump

	_041b3e_jump:
		mov    $0x000041,%eax

	_041b43_jump:
		call   _042130_func

	_041b48_jump:
		pop    %edx
		pop    %ebx
		ret    



_041b4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0dfc20_data,%bx
		mov    _0cc4bc_data,%dx
		mov    _0dfc1c_data,%si
		sub    %edx,%ebx
		mov    _0cc4b8_data,%cx
		movswl %bx,%eax
		sub    %ecx,%esi
		test   %eax,%eax
		jge    _041b7a_jump
		neg    %eax

	_041b7a_jump:
		mov    %eax,%edx
		movswl %si,%eax
		mov    %edx,%edi
		test   %eax,%eax
		jge    _041b87_jump
		neg    %eax

	_041b87_jump:
		add    %eax,%edi
		test   %di,%di
		jle    _041bb1_jump
		mov    $0x000006,%cl
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %di,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		mov    $0x000006,%cl
		mov    %eax,%ebx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%esi

	_041bb1_jump:
		mov    _0963c4_data,%edx
		movswl %bx,%eax
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _041bca_jump
		mov    $0x000001,%eax
		jg     _041bca_jump
		neg    %eax

	_041bca_jump:
		add    _0963c4_data,%eax
		mov    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _041bdb_jump
		mov    %ebx,%eax

	_041bdb_jump:
		mov    $0xfffffff0,%ebx
		cmp    %ebx,%eax
		jge    _041be6_jump
		mov    %ebx,%eax

	_041be6_jump:
		mov    _0963c8_data,%ecx
		mov    %eax,_0963c4_data
		movswl %si,%eax
		sub    %ecx,%eax
		cmp    $0x000000,%eax
		je     _041c04_jump
		mov    $0x000001,%eax
		jg     _041c04_jump
		neg    %eax

	_041c04_jump:
		mov    _0963c8_data,%esi
		mov    $0x000010,%ebx
		add    %esi,%eax
		cmp    %ebx,%eax
		jle    _041c17_jump
		mov    %ebx,%eax

	_041c17_jump:
		mov    $0xfffffff0,%ebx
		cmp    %ebx,%eax
		jge    _041c22_jump
		mov    %ebx,%eax

	_041c22_jump:
		mov    %eax,_0963c8_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041c30_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041c42_jump
		mov    %ebx,%eax

	_041c42_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _041c4f_jump
		mov    %ebx,%eax

	_041c4f_jump:
		mov    _0cee72_data,%bl
		mov    %eax,%edx
		test   $0x000001,%bl
		je     _041caa_jump
		mov    _0dfc14_data,%ecx
		mov    _0dfc10_data,%ebx
		and    $0x0000f0,%cl
		and    $0x00000f,%ebx
		or     %ebx,%ecx
		mov    %ecx,_0dfc14_data
		lea    (%ecx,%eax,1),%ebx
		mov    _0cecb6_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _041c8a_jump
		mov    %ebx,%eax

	_041c8a_jump:
		mov    _0ceca8_data,%ecx
		sar    $0x000010,%ecx
		shl    $0x000004,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _041ca0_jump
		mov    %ebx,%eax

	_041ca0_jump:
		mov    %eax,_0dfc14_data
		sar    $0x000004,%eax
		jmp    _041cd9_jump

	_041caa_jump:
		mov    _0cecfe_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0cecb6_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041cc6_jump
		mov    %ebx,%eax

	_041cc6_jump:
		mov    _0ceca8_data,%ecx
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _041cd9_jump
		mov    %ebx,%eax

	_041cd9_jump:
		mov    %ax,_0ced00_data
		mov    _0dfc10_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%eax
		sar    $0x000004,%eax
		mov    %ebx,_0dfc10_data
		mov    %eax,_0cc4bc_data
		call   _04208c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041d00_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041d12_jump
		mov    %ebx,%eax

	_041d12_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _041d1f_jump
		mov    %ebx,%eax

	_041d1f_jump:
		mov    _0cee72_data,%bl
		mov    %eax,%edx
		test   $0x000001,%bl
		je     _041d7a_jump
		mov    _0dfc18_data,%ecx
		mov    _0dfc0c_data,%ebx
		and    $0x0000f0,%cl
		and    $0x00000f,%ebx
		or     %ebx,%ecx
		mov    %ecx,_0dfc18_data
		lea    (%ecx,%eax,1),%ebx
		mov    _0cecb4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _041d5a_jump
		mov    %ebx,%eax

	_041d5a_jump:
		mov    _0cecaa_data,%ecx
		sar    $0x000010,%ecx
		shl    $0x000004,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _041d70_jump
		mov    %ebx,%eax

	_041d70_jump:
		mov    %eax,_0dfc18_data
		sar    $0x000004,%eax
		jmp    _041da9_jump

	_041d7a_jump:
		mov    _0cece8_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0cecb4_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041d96_jump
		mov    %ebx,%eax

	_041d96_jump:
		mov    _0cecaa_data,%ecx
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %ecx,%eax
		cmp    %ebx,%eax
		jge    _041da9_jump
		mov    %ebx,%eax

	_041da9_jump:
		mov    %ax,_0cecea_data
		mov    _0dfc0c_data,%ebx
		add    %edx,%ebx
		mov    %ebx,%eax
		sar    $0x000004,%eax
		mov    %ebx,_0dfc0c_data
		mov    %eax,_0cc4b8_data
		call   _04208c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041dd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041de3_jump
		mov    %ebx,%eax

	_041de3_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _041df0_jump
		mov    %ebx,%eax

	_041df0_jump:
		mov    _0cecaa_data,%dx
		mov    %eax,%ecx
		mov    _0ced00_data,%ax
		xor    %esi,%esi
		cmp    %dx,%ax
		je     _041e0f_jump
		cmp    _0cecb8_data,%ax
		jne    _041e3d_jump

	_041e0f_jump:
		mov    _0ced00_data,%ax
		cmp    _0cecaa_data,%ax
		jne    _041e22_jump
		test   %ecx,%ecx
		jg     _041e3d_jump

	_041e22_jump:
		mov    _0ced00_data,%ax
		cmp    _0cecb8_data,%ax
		jne    _041f13_jump
		test   %ecx,%ecx
		jge    _041f13_jump

	_041e3d_jump:
		mov    _0cc4dc_data,%eax
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0cc4bc_data,%edx
		cmp    %edx,%eax
		jge    _041f13_jump
		mov    $0x000140,%ebx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _041f13_jump
		testb  $0x000001,_0cee72_data
		je     _041ebf_jump
		mov    _0dfc14_data,%eax
		mov    _0dfc10_data,%ebx
		and    $0x0000f0,%al
		and    $0x00000f,%ebx
		or     %ebx,%eax
		mov    %eax,_0dfc14_data
		lea    (%eax,%ecx,1),%ebx
		mov    _0cecb6_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _041e9f_jump
		mov    %ebx,%eax

	_041e9f_jump:
		mov    _0ceca8_data,%esi
		sar    $0x000010,%esi
		shl    $0x000004,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _041eb5_jump
		mov    %ebx,%eax

	_041eb5_jump:
		mov    %eax,_0dfc14_data
		sar    $0x000004,%eax
		jmp    _041ef0_jump

	_041ebf_jump:
		mov    %ecx,%eax
		mov    _0cecfe_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0cecb6_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041edd_jump
		mov    %ebx,%eax

	_041edd_jump:
		mov    _0ceca8_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _041ef0_jump
		mov    %ebx,%eax

	_041ef0_jump:
		mov    %ax,_0ced00_data
		mov    _0dfc10_data,%esi
		add    %ecx,%esi
		mov    %esi,%eax
		mov    %esi,_0dfc10_data
		sar    $0x000004,%eax
		mov    $0x000001,%esi
		mov    %eax,_0cc4bc_data

	_041f13_jump:
		call   _04208c_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_041f20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _041f33_jump
		mov    %ebx,%eax

	_041f33_jump:
		mov    %eax,%ebx
		mov    $0xfffffff0,%eax
		cmp    %ebx,%eax
		jge    _041f40_jump
		mov    %ebx,%eax

	_041f40_jump:
		mov    _0cecac_data,%dx
		mov    %eax,%ecx
		mov    _0cecea_data,%ax
		xor    %esi,%esi
		cmp    %dx,%ax
		je     _041f5f_jump
		cmp    _0cecb6_data,%ax
		jne    _041f8d_jump

	_041f5f_jump:
		mov    _0cecea_data,%ax
		cmp    _0cecac_data,%ax
		jne    _041f72_jump
		test   %ecx,%ecx
		jg     _041f8d_jump

	_041f72_jump:
		mov    _0cecea_data,%ax
		cmp    _0cecb6_data,%ax
		jne    _042063_jump
		test   %ecx,%ecx
		jge    _042063_jump

	_041f8d_jump:
		mov    _0cc4dc_data,%eax
		mov    %eax,%edx
		mov    $0x000003,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0cc4b8_data,%edx
		cmp    %edx,%eax
		jge    _042063_jump
		mov    $0x0000c8,%ebx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _042063_jump
		testb  $0x000001,_0cee72_data
		je     _04200f_jump
		mov    _0dfc18_data,%eax
		mov    _0dfc0c_data,%ebx
		and    $0x0000f0,%al
		and    $0x00000f,%ebx
		or     %ebx,%eax
		mov    %eax,_0dfc18_data
		lea    (%eax,%ecx,1),%ebx
		mov    _0cecb4_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ebx,%eax
		jle    _041fef_jump
		mov    %ebx,%eax

	_041fef_jump:
		mov    _0cecaa_data,%esi
		sar    $0x000010,%esi
		shl    $0x000004,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _042005_jump
		mov    %ebx,%eax

	_042005_jump:
		mov    %eax,_0dfc18_data
		sar    $0x000004,%eax
		jmp    _042040_jump

	_04200f_jump:
		mov    %ecx,%eax
		mov    _0cece8_data,%ebx
		sar    $0x000004,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    _0cecb4_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _04202d_jump
		mov    %ebx,%eax

	_04202d_jump:
		mov    _0cecaa_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		cmp    %ebx,%eax
		jge    _042040_jump
		mov    %ebx,%eax

	_042040_jump:
		mov    %ax,_0cecea_data
		mov    _0dfc0c_data,%esi
		add    %ecx,%esi
		mov    %esi,%eax
		mov    %esi,_0dfc0c_data
		sar    $0x000004,%eax
		mov    $0x000001,%esi
		mov    %eax,_0cc4b8_data

	_042063_jump:
		call   _04208c_func
		mov    %esi,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04208c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cc4dc_data,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edx
		mov    %eax,%ecx
		sar    $0x00001f,%edx
		mov    %eax,_0cc4b0_data
		sub    %edx,%eax
		sar    %eax
		mov    _0cc4dc_data,%esi
		add    %esi,%esi
		mov    %eax,%ebx
		mov    _0cc4bc_data,%eax
		mov    %esi,%edx
		sub    %ebx,%eax
		sar    $0x00001f,%edx
		mov    %eax,_0cc4d8_data
		mov    %esi,%eax
		sub    %edx,%eax
		sar    %eax
		mov    _0cc4b8_data,%edx
		sub    %eax,%edx
		mov    %edx,_0cc4d0_data
		lea    0x000002(%ebx),%edx
		mov    %dx,_0cecaa_data
		lea    0x000002(%eax),%edx
		mov    %dx,_0cecac_data
		xor    %edx,%edx
		mov    _0cebb0_data,%dx
		sub    %ebx,%edx
		sub    $0x000004,%edx
		mov    %dx,_0cecb8_data
		xor    %edx,%edx
		mov    _0ceba8_data,%dx
		sub    %eax,%edx
		sub    $0x000004,%edx
		mov    %esi,_0cc4ac_data
		mov    %dx,_0cecb6_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_042130_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cc4dc_data,%edx
		mov    _095b18_data,%ebx
		neg    %edx
		imul   %ebx,%edx
		mov    _095b1c_data,%ecx
		mov    _0cc4b4_data,%esi
		add    %ecx,%edx
		cmp    %esi,%edx
		jne    _042168_jump
		testb  $0x000002,_0cee72_data
		je     _0421c3_jump
		cmp    _0dfc38_data,%esi
		je     _0421c3_jump

	_042168_jump:
		cmpb   $0x000000,_0cee76_data
		je     _0421c3_jump
		mov    _0cc4dc_data,%edx
		mov    _0cc4b4_data,%ebx
		neg    %edx
		add    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		cmp    %ebx,%eax
		jle    _04219c_jump
		mov    %ebx,%eax

	_04219c_jump:
		mov    %eax,%ebx
		xor    %eax,%eax
		cmp    %ebx,%eax
		jge    _0421a6_jump
		mov    %ebx,%eax

	_0421a6_jump:
		mov    %eax,_0cc4b4_data
		mov    $0x000001,%ah
		mov    %ah,_0cee74_data
		mov    %ah,_0cee75_data
		call   _04208c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0421c3_jump:
		cmpl   $0x000000,_0cc4b4_data
		je     _0421e9_jump
		cmpb   $0x000000,_0cee76_data
		je     _0421e9_jump
		mov    $0x000001,%ch
		xor    %al,%al
		mov    %ch,_0cee74_data
		mov    %al,_0cee75_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0421e9_jump:
		xor    %bh,%bh
		mov    %bh,_0cee74_data
		mov    %bh,_0cee75_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0421fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    _0cc4dc_data,%ebx
		imul   %ebx,%ebx
		mov    $0x200000,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000040,%edx
		sub    _0cc4dc_data,%edx
		mov    %eax,0x00000c(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		sar    $0x000002,%eax
		mov    _0cc4c0_data,%edi
		shl    $0x000002,%eax
		lea    0x00e100(%edi,%eax,1),%edx
		mov    %edx,0x000014(%esp)
		lea    0x00037c(%edi),%edx
		sub    %eax,%edx
		add    $0x00df00,%edx
		mov    _0cee76_data,%ah
		mov    %edx,0x000018(%esp)
		test   %ah,%ah
		je     _042446_jump
		xor    %dl,%dl
		mov    $0x007161,%ecx
		mov    %dl,_0cee75_data
		mov    $0x000000,%eax
		rep stos %eax,%es:(%edi)
		xor    %ecx,%ecx
		mov    %ecx,0x000020(%esp)
		mov    %ecx,0x000008(%esp)
		mov    %ecx,0x000004(%esp)

	_04228b_jump:
		mov    0x000008(%esp),%eax
		mov    0x000014(%esp),%esi
		mov    0x000018(%esp),%ebp
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00001c(%esp)
		mov    0x000004(%esp),%eax
		mov    0x00001c(%esp),%edx
		mov    0x00001c(%esp),%ecx
		mov    0x00001c(%esp),%edi
		mov    %eax,0x000010(%esp)
		neg    %edx
		add    %esi,%ecx
		add    %ebp,%edi
		mov    0x000018(%esp),%eax
		mov    %ecx,%esi
		mov    %edi,0x000028(%esp)
		add    %edx,%eax
		mov    0x000014(%esp),%edi
		mov    %eax,0x000030(%esp)
		add    %edi,%edx
		mov    %eax,(%esp)
		mov    %edx,0x00002c(%esp)
		jmp    _042404_jump

	_0422dc_jump:
		lea    0x000000(,%ebx,4),%eax
		mov    %eax,0x000024(%esp)
		mov    0x000024(%esp),%edx
		mov    _0dfc28_data,%eax
		mov    0x000010(%esp),%edi
		add    %eax,%edx
		mov    _0dfc24_data,%eax
		add    %eax,%edi
		mov    (%edx),%eax
		mov    (%edi),%edx
		mov    0x00000c(%esp),%edi
		add    %edx,%eax
		imul   %edi,%eax
		cmp    $0x500000,%eax
		jae    _0423d3_jump
		shr    $0x00000a,%eax
		mov    _0dfc3c_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0cc4b4_data,%eax
		mov    (%edx),%ebp
		mov    %eax,%edx
		imul   %ebp,%edx
		mov    %ebx,%eax
		shr    $0x000010,%edx
		imul   %edx,%eax
		imul   0x000020(%esp),%edx
		add    $0x008000,%edx
		shr    $0x000010,%edx
		imul   $0x000140,%edx,%edx
		add    $0x008000,%eax
		shr    $0x000010,%eax
		test   %ebx,%ebx
		je     _04237b_jump
		mov    0x000014(%esp),%edi
		add    0x000024(%esp),%edi
		sub    0x00001c(%esp),%edi
		mov    %edx,%ebp
		sub    %eax,%ebp
		add    %ebp,(%edi)
		mov    0x000018(%esp),%edi
		sub    0x000024(%esp),%edi
		add    0x00001c(%esp),%edi
		mov    %eax,%ebp
		sub    %edx,%ebp
		add    %ebp,(%edi)

	_04237b_jump:
		cmpl   $0x000000,0x000020(%esp)
		je     _042398_jump
		mov    %eax,%edi
		neg    %edi
		mov    (%esi),%ebp
		sub    %edx,%edi
		add    %edi,%ebp
		lea    (%eax,%edx,1),%edi
		mov    %ebp,(%esi)
		mov    0x000030(%esp),%ebp
		add    %edi,0x000000(%ebp)

	_042398_jump:
		cmp    _0cc4dc_data,%ebx
		ja     _0423d3_jump
		cmpl   $0x000000,0x000020(%esp)
		je     _0423be_jump
		lea    (%eax,%edx,1),%edi
		mov    0x00002c(%esp),%ebp
		add    %edi,0x000000(%ebp)
		mov    %eax,%edi
		neg    %edi
		sub    %edx,%edi
		mov    0x000028(%esp),%ebp
		add    %edi,0x000000(%ebp)

	_0423be_jump:
		test   %ebx,%ebx
		je     _0423d3_jump
		mov    %eax,%edi
		mov    (%ecx),%ebp
		sub    %edx,%edi
		add    %edi,%ebp
		sub    %eax,%edx
		mov    (%esp),%eax
		mov    %ebp,(%ecx)
		add    %edx,(%eax)

	_0423d3_jump:
		mov    0x000030(%esp),%ebp
		mov    0x000028(%esp),%eax
		mov    0x00002c(%esp),%edx
		mov    (%esp),%edi
		add    $0x000004,%esi
		sub    $0x000004,%ecx
		inc    %ebx
		sub    $0x000004,%ebp
		add    $0x000004,%eax
		sub    $0x000004,%edx
		add    $0x000004,%edi
		mov    %ebp,0x000030(%esp)
		mov    %eax,0x000028(%esp)
		mov    %edx,0x00002c(%esp)
		mov    %edi,(%esp)

	_042404_jump:
		mov    _0cc4b0_data,%eax
		sub    _0cc4dc_data,%eax
		cmp    %eax,%ebx
		jb     _0422dc_jump
		mov    0x000004(%esp),%edi
		mov    0x000020(%esp),%ebp
		mov    0x000008(%esp),%eax
		mov    _0cc4dc_data,%edx
		add    $0x000004,%edi
		inc    %ebp
		add    $0x0000e0,%eax
		mov    %edi,0x000004(%esp)
		mov    %ebp,0x000020(%esp)
		mov    %eax,0x000008(%esp)
		cmp    %edx,%ebp
		jbe    _04228b_jump

	_042446_jump:
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_042450_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _092208_data,%si
		mov    _0ced18_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0425a5_jump
		mov    _0cc4ac_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		xor    %eax,%eax
		sar    $0x000002,%edx
		mov    _0cdafd_data,%al
		mov    _0cecf8_data,%bx
		sub    %eax,%edx
		cmp    $0x0000ff,%bx
		jne    _0424a8_jump
		mov    _0ceca2_data,%cx
		test   %cx,%cx
		je     _042577_jump

	_0424a8_jump:
		mov    _0cdacc_data,%ax
		sub    %edx,%eax
		mov    $0x000002,%cl
		mov    %eax,%edx
		test   %ax,%ax
		js     _0424be_jump
		sar    %cl,%ax
		jmp    _0424c7_jump

	_0424be_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0424c7_jump:
		mov    %ax,_0cecf8_data
		mov    _0cdad4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0424db_jump
		neg    %eax

	_0424db_jump:
		mov    %eax,%ebx
		mov    _0cecf6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0424eb_jump
		neg    %eax

	_0424eb_jump:
		cmp    %eax,%ebx
		jg     _0425a5_jump
		mov    _0cdad4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _042501_jump
		neg    %eax

	_042501_jump:
		mov    %eax,%ebx
		mov    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _04250e_jump
		mov    %ebx,%eax

	_04250e_jump:
		mov    _0cecf8_data,%bx
		test   %bx,%bx
		jle    _042536_jump
		movswl %ax,%ebx
		mov    _0cecf6_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _04252b_jump
		mov    %ebx,%eax

	_04252b_jump:
		mov    %ax,_0cecf8_data
		jmp    _0425a5_jump

	_042536_jump:
		jge    _042553_jump
		movswl %ax,%ebx
		mov    _0cecf6_data,%eax
		neg    %ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _04254b_jump
		mov    %ebx,%eax

	_04254b_jump:
		mov    %ax,_0cecf8_data
		jmp    _0425a5_jump

	_042553_jump:
		mov    _092208_data,%si
		test   %dx,%dx
		jle    _04256a_jump
		movw   $0x000001,_0cecf8_data
		jmp    _0425a5_jump

	_04256a_jump:
		jge    _0425a5_jump
		movw   $0x00ffff,_0cecf8_data
		jmp    _0425a5_jump

	_042577_jump:
		cmpb   $0x000001,_0cdb01_data
		je     _0425a5_jump
		mov    _0cdaca_data,%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		add    $0x000030,%eax
		cmp    %eax,%ebx
		jge    _04259e_jump
		movw   $0x00fffc,_0cecf8_data
		jmp    _0425a5_jump

	_04259e_jump:
		mov    %cx,_0cecf8_data

	_0425a5_jump:
		mov    _0ced16_data,%eax
		sar    $0x000010,%eax
		mov    _092208_data,%si
		cmp    $0xffffffff,%eax
		jne    _0427ac_jump
		mov    _0cc4b0_data,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		xor    %ecx,%ecx
		mov    _0cdafc_data,%cl
		sub    %ecx,%eax
		mov    _0cc4b0_data,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		sub    %ecx,%eax
		mov    _0ceca2_data,%cx
		mov    %eax,%edx
		test   %cx,%cx
		jg     _04261d_jump
		mov    _0cdad4_data,%di
		test   %di,%di
		jle    _04265d_jump

	_04261d_jump:
		mov    _0cdaca_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		mov    %si,_092208_data
		test   %ax,%ax
		js     _042638_jump
		sar    %cl,%ax
		jmp    _042641_jump

	_042638_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_042641_jump:
		mov    _092208_data,%si
		cmp    %ax,%si
		jg     _042714_jump
		jge    _042715_jump
		inc    %esi
		jmp    _042715_jump

	_04265d_jump:
		test   %cx,%cx
		jl     _042667_jump
		test   %di,%di
		jge    _0426a8_jump

	_042667_jump:
		mov    _0cdaca_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		mov    %si,_092208_data
		test   %ax,%ax
		js     _042682_jump
		sar    %cl,%ax
		jmp    _04268b_jump

	_042682_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_04268b_jump:
		mov    _092208_data,%si
		cmp    %ax,%si
		jge    _04269d_jump
		inc    %esi
		jmp    _042715_jump

	_04269d_jump:
		jle    _042715_jump
		jmp    _042714_jump

	_0426a8_jump:
		mov    _0cdb15_data,%cl
		test   $0x000008,%cl
		je     _0426e1_jump
		mov    _0cdaca_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _0426c7_jump
		sar    %cl,%ax
		jmp    _0426d0_jump

	_0426c7_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0426d0_jump:
		mov    _092208_data,%si
		cmp    %ax,%si
		jg     _042714_jump
		jge    _042715_jump
		inc    %esi
		jmp    _042715_jump

	_0426e1_jump:
		test   $0x000008,%cl
		jne    _042715_jump
		mov    _0cdaca_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _0426fa_jump
		sar    %cl,%ax
		jmp    _042703_jump

	_0426fa_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_042703_jump:
		mov    _092208_data,%si
		cmp    %ax,%si
		jge    _042712_jump
		inc    %esi
		jmp    _042715_jump

	_042712_jump:
		jle    _042715_jump

	_042714_jump:
		dec    %esi

	_042715_jump:
		movswl %si,%eax
		mov    %si,_092208_data
		test   %eax,%eax
		jge    _042725_jump
		neg    %eax

	_042725_jump:
		mov    _092208_data,%si
		cmp    $0x000004,%eax
		jle    _042742_jump
		test   %si,%si
		jle    _04273d_jump
		mov    $0x000004,%esi
		jmp    _042742_jump

	_04273d_jump:
		mov    $0xfffffffc,%esi

	_042742_jump:
		mov    $0x000002,%cl
		mov    %esi,%eax
		mov    %si,_092208_data
		test   %ax,%ax
		js     _042757_jump
		sar    %cl,%ax
		jmp    _042760_jump

	_042757_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_042760_jump:
		mov    _0cecf6_data,%di
		mov    _092208_data,%si
		add    %eax,%edi
		mov    _0cdaca_data,%ax
		mov    %di,_0cecf6_data
		cmp    %ax,%dx
		jle    _04278c_jump
		cmpw   $0x000000,_0cdad4_data
		jl     _04279f_jump

	_04278c_jump:
		cmp    _0cdaca_data,%bx
		jge    _0427ac_jump
		cmpw   $0x000000,_0cdad4_data
		jle    _0427ac_jump

	_04279f_jump:
		mov    _0cdad4_data,%ax
		add    %ax,_0cecf6_data

	_0427ac_jump:
		mov    %si,_092208_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0427bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cc4b0_data,%edi
		mov    _0cc4ac_data,%esi
		xor    %ecx,%ecx
		xor    %eax,%eax
		add    $0x000002,%esi
		add    $0x000002,%edi
		mov    %esi,%edx
		mov    %edi,%ebx
		call   _016157_func
		push   %esi
		xor    %eax,%eax
		push   %edi
		mov    _0cebb0_data,%ax
		push   %eax
		mov    _0cc4ac_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0cece8_data,%ebx
		sar    $0x000010,%ebx
		sub    %eax,%ebx
		mov    _0cc4b0_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0cecfe_data,%esi
		xor    %ecx,%ecx
		sar    $0x000010,%esi
		mov    _0cc528_data,%edi
		sub    %eax,%esi
		xor    %edx,%edx
		mov    %esi,%eax
		mov    _0ccc34_data,%esi
		call   _014b78_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04283c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0cc4dc_data,%esi
		mov    %ax,0x000004(%esp)
		mov    %edx,%edi
		mov    $0x000001,%bl
		xor    %ecx,%ecx
		mov    %bl,0x000008(%esp)
		mov    _0cee73_data,%bh
		xor    %edx,%edx
		cmp    $0x000004,%bh
		je     _042a73_jump
		cmpw   $0x000000,_0cdad4_data
		jne    _0428b2_jump
		cmpw   $0x000000,_0cdad6_data
		jne    _0428b2_jump
		mov    $0x0000a0,%edx
		mov    $0x000064,%ecx
		mov    _0cc4bc_data,%ebp
		mov    %ecx,_0dfc1c_data
		mov    %edx,%ecx
		sub    %ebp,%ecx
		shl    $0x000004,%ecx
		mov    %edx,_0dfc20_data
		mov    %ecx,%eax
		mov    $0x000064,%edx
		call   _041c30_func
		jmp    _042985_jump

	_0428b2_jump:
		mov    _0cdabc_data,%edx
		xor    %eax,%eax
		mov    _0ceca8_data,%ecx
		mov    _0cdafc_data,%al
		sar    $0x000010,%ecx
		add    %eax,%edx
		cmp    %ecx,%edx
		jle    _042908_jump
		mov    _0cecb6_data,%ecx
		sar    $0x000010,%ecx
		cmp    %ecx,%edx
		jge    _042908_jump
		mov    _0cdac8_data,%ecx
		sar    $0x000010,%ecx
		add    %eax,%ecx
		mov    _0cc4b0_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %eax,%ecx
		shl    $0x000004,%ecx
		mov    %ecx,%eax
		call   _041dd0_func
		test   %eax,%eax
		je     _04291d_jump
		xor    %bl,%bl
		jmp    _04291d_jump

	_042908_jump:
		mov    $0x0000a0,%ecx
		sub    _0cc4bc_data,%ecx
		shl    $0x000004,%ecx
		mov    %ecx,%eax
		call   _041c30_func

	_04291d_jump:
		mov    _0cdac0_data,%eax
		xor    %edx,%edx
		mov    _0cecaa_data,%ebp
		mov    _0cdafd_data,%dl
		sar    $0x000010,%ebp
		add    %edx,%eax
		cmp    %ebp,%eax
		jle    _042980_jump
		mov    _0cecb4_data,%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%eax
		jge    _042980_jump
		mov    _0cdaca_data,%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    _0cc4ac_data,%edx
		mov    %eax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		sar    $0x000002,%eax
		sub    %eax,%edx
		shl    $0x000004,%edx
		mov    %edx,%eax
		call   _041f20_func
		test   %eax,%eax
		je     _042995_jump
		xor    %al,%al
		mov    %al,0x000008(%esp)
		jmp    _042995_jump

	_042980_jump:
		mov    $0x000064,%edx

	_042985_jump:
		sub    _0cc4b8_data,%edx
		shl    $0x000004,%edx
		mov    %edx,%eax
		call   _041d00_func

	_042995_jump:
		test   %bl,%bl
		je     _0429bf_jump
		mov    0x000002(%esp),%ebx
		mov    $0x000001,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _0429ab_jump
		mov    %ebx,%eax

	_0429ab_jump:
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		cmp    %ebx,%eax
		jge    _0429b8_jump
		mov    %ebx,%eax

	_0429b8_jump:
		add    %ax,_0ced00_data

	_0429bf_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _0429e8_jump
		mov    $0x000001,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jle    _0429d4_jump
		mov    %ebx,%eax

	_0429d4_jump:
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		cmp    %ebx,%eax
		jge    _0429e1_jump
		mov    %ebx,%eax

	_0429e1_jump:
		add    %ax,_0cecea_data

	_0429e8_jump:
		mov    _0ced00_data,%ax
		mov    _0cecaa_data,%bx
		mov    _0cc4dc_data,%esi
		cmp    %bx,%ax
		jl     _042a0c_jump
		mov    _0cecb8_data,%bx
		cmp    %bx,%ax
		jle    _042a24_jump

	_042a0c_jump:
		mov    %ebx,%eax
		mov    %bx,_0ced00_data
		xor    %ebx,%eax
		xor    %ebx,%ebx
		mov    %ax,_092208_data
		mov    %bx,0x000004(%esp)

	_042a24_jump:
		mov    _0cecea_data,%ax
		mov    _0cecac_data,%bx
		cmp    %bx,%ax
		jge    _042a51_jump
		mov    %ebx,%eax
		mov    %bx,_0cecea_data
		mov    %esi,_0cc4dc_data
		xor    %ebx,%eax
		xor    %edi,%edi
		mov    %ax,_09220a_data
		jmp    _042a73_jump

	_042a51_jump:
		mov    _0cecb6_data,%bx
		mov    %esi,_0cc4dc_data
		cmp    %bx,%ax
		jle    _042a73_jump
		xor    %edi,%edi
		mov    %bx,_0cecea_data
		mov    %di,_09220a_data

	_042a73_jump:
		mov    $_0cda94_data,%eax
		call   _042ed4_func
		test   %di,%di
		jne    _042a89_jump
		andb   $0x0000fe,_0cee73_data

	_042a89_jump:
		mov    0x000004(%esp),%ebx
		mov    _0cc4dc_data,%esi
	_042a94_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		test   %bx,%bx
		jne    _042a9f_jump

	_042a98_jump:
		andb   $0x0000fd,_0cee73_data

	_042a9f_jump:
		test   %ecx,%ecx
	_042aa4_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		jne    _042bb0_jump
	_042aa8_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		test   %edx,%edx
		jne    _042bb0_jump
		cmpw   $0x000000,_0cdad6_data
		jne    _042bb0_jump
		cmpw   $0x000000,_0cdad4_data
		jne    _042bb0_jump
		testb  $0x0000fb,_0cee73_data
		jne    _042bb0_jump
		mov    %esi,_0cc4dc_data
		cmp    $0x000040,%esi
		jge    _042af6_jump
		cmpb   $0x000000,_0cee72_data
		jne    _042af6_jump
		mov    $0x000001,%eax
		call   _041afc_func

	_042af6_jump:
		mov    _0cc4dc_data,%esi
		mov    %esi,%eax
		mov    _095b18_data,%edx
		neg    %eax
		imul   %edx,%eax
		mov    _095b1c_data,%ebx
		mov    _0cc4b4_data,%ecx
		add    %ebx,%eax
		cmp    %ecx,%eax
		jae    _042b2b_jump
		cmpb   $0x000000,_0cee72_data
		jne    _042b2b_jump
		mov    $0xfffffed4,%eax
		jmp    _042b5e_jump

	_042b2b_jump:
		mov    _0cc4dc_data,%esi
		mov    %esi,%eax
		mov    _095b18_data,%edi
		neg    %eax
		imul   %edi,%eax
		mov    _095b1c_data,%ebp
		mov    _0cc4b4_data,%edx
		add    %ebp,%eax
		cmp    %edx,%eax
		jbe    _042b63_jump
		cmpb   $0x000000,_0cee72_data
		jne    _042b63_jump
		mov    $0x00012c,%eax

	_042b5e_jump:
		call   _042130_func

	_042b63_jump:
		mov    _0cc4dc_data,%esi
		mov    %esi,%eax
		mov    _095b18_data,%ebx
		neg    %eax
		imul   %ebx,%eax
		mov    _095b1c_data,%ecx
		mov    _0cc4b4_data,%edi
		add    %ecx,%eax
		cmp    %edi,%eax
		jne    _042bcb_jump
		cmp    $0x000040,%esi
		jne    _042bcb_jump
		cmpb   $0x000000,_0cee73_data
		jne    _042bcb_jump
		xor    %bl,%bl
		xor    %ebp,%ebp
		mov    %bl,_0cee72_data
		mov    $0x000004,%bh
		mov    %ebp,_0dfc34_data
		mov    %bh,_0cee73_data
		jmp    _042bcb_jump

	_042bb0_jump:
		cmpw   $0x000000,_0cdad4_data
		jne    _042bc4_jump
		cmpw   $0x000000,_0cdad6_data
		je     _042bcb_jump

	_042bc4_jump:
		andb   $0x0000fb,_0cee73_data

	_042bcb_jump:
		mov    _0cee73_data,%cl
		cmp    $0x000004,%cl
		jne    _042ec4_jump
		mov    _0dfc34_data,%eax
		inc    %eax
		mov    %eax,_0dfc34_data
		cmp    $0x000726,%eax
		jne    _042c0a_jump
		mov    _0cee72_data,%dh
		mov    $0x000019,%edi
		or     %cl,%dh
		mov    %edi,_0dfc40_data
		mov    %dh,_0cee72_data
		jmp    _042d47_jump

	_042c0a_jump:
		cmp    $0x000708,%eax
		jne    _042c3b_jump
		orb    $0x000002,_0cee72_data
		mov    %esi,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0dfc38_data
		jmp    _042d47_jump

	_042c3b_jump:
		mov    _0cee72_data,%ch
		test   %ch,%ch
		je     _042d47_jump
		test   $0x000001,%ch
		jne    _042d47_jump
		cmp    $0x000019,%esi
		jne    _042d47_jump
		mov    %esi,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		mov    _0cc4b4_data,%ecx
		add    $0x007d96,%eax
		cmp    %ecx,%eax
		jne    _042d47_jump
		mov    $0x000003,%ebx
		mov    _0cee72_data,%ah
		mov    %esi,%edx
		or     $0x000001,%ah
		sar    $0x00001f,%edx
		mov    %ah,_0cee72_data
		mov    %esi,%eax
		idiv   %ebx
		lea    0x000140(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		mov    %esi,_0cc4dc_data
		call   _0690e0_func
		mov    _0cc4dc_data,%esi
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    (%eax,%ecx,1),%edx
		mov    %edx,_0dfc2c_data
		lea    0x0000c8(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _0690e0_func
		mov    _0cc4dc_data,%esi
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		add    %ecx,%eax
		mov    %eax,_0dfc30_data
		mov    _0dfc2c_data,%eax
		mov    %eax,_0dfc20_data
		mov    _0dfc30_data,%eax
		mov    %eax,_0dfc1c_data
		mov    _0cecfe_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %eax,_0dfc14_data
		mov    _0cece8_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %eax,_0dfc18_data
		mov    _0cc4bc_data,%eax
		shl    $0x000004,%eax
		mov    %eax,_0dfc10_data
		mov    _0cc4b8_data,%eax
		shl    $0x000004,%eax
		mov    %eax,_0dfc0c_data

	_042d47_jump:
		mov    _0cee72_data,%bl
		mov    %esi,_0cc4dc_data
		test   $0x000001,%bl
		je     _042e18_jump
		call   _041b4c_func
		mov    _0963c4_data,%eax
		call   _041c30_func
		mov    _0963c8_data,%eax
		call   _041d00_func
		mov    _0cc4bc_data,%eax
		cmp    _0dfc2c_data,%eax
		jne    _042e18_jump
		mov    _0cc4b8_data,%eax
		cmp    _0dfc30_data,%eax
		jne    _042e18_jump
		mov    _0cc4dc_data,%esi
		mov    $0x000003,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    0x000140(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		call   _0690e0_func
		mov    _0cc4dc_data,%esi
		movswl %ax,%ecx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		lea    (%eax,%ecx,1),%edx
		mov    %edx,_0dfc2c_data
		lea    0x0000c8(%eax),%edx
		sub    %eax,%edx
		movswl %dx,%eax
		mov    $0x000003,%ecx
		call   _0690e0_func
		mov    _0cc4dc_data,%esi
		movswl %ax,%ebx
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		mov    %eax,_0dfc30_data
		mov    _0dfc2c_data,%eax
		mov    %eax,_0dfc20_data
		mov    _0dfc30_data,%eax
		mov    %eax,_0dfc1c_data

	_042e18_jump:
		testb  $0x000002,_0cee72_data
		je     _042e72_jump
		mov    _0cc4b4_data,%eax
		mov    _0dfc38_data,%ebx
		cmp    %ebx,%eax
		jae    _042e51_jump
		mov    $0x00012c,%eax
		call   _042130_func
		mov    _0cc4b4_data,%eax
		mov    _0dfc38_data,%ebp
		cmp    %ebp,%eax
		jbe    _042e72_jump
		mov    %ebp,_0cc4b4_data
		jmp    _042e72_jump

	_042e51_jump:
		jbe    _042e72_jump
		mov    $0xfffffed4,%eax
		call   _042130_func
		mov    _0cc4b4_data,%eax
		mov    _0dfc38_data,%edi
		cmp    %edi,%eax
		jae    _042e72_jump
		mov    %edi,_0cc4b4_data

	_042e72_jump:
		mov    _0cee72_data,%cl
		mov    _0cc4dc_data,%esi
		test   $0x000004,%cl
		je     _042ec4_jump
		mov    _0dfc40_data,%edx
		cmp    %edx,%esi
		jae    _042e94_jump
		mov    $0x000001,%eax
		jmp    _042e9b_jump

	_042e94_jump:
		jbe    _042ec4_jump
		mov    $0xffffffff,%eax

	_042e9b_jump:
		call   _041afc_func
		mov    _0cc4dc_data,%esi
		mov    %esi,%edx
		neg    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $0x007d96,%eax
		mov    %eax,_0dfc38_data

	_042ec4_jump:
		mov    %esi,_0cc4dc_data
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_042ed4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ced00_data,%bx
		mov    0x000028(%eax),%dx
		sub    %ebx,%edx
		mov    _0cc4bc_data,%bx
		add    $0x000008,%edx
		add    %edx,%ebx
		mov    _0cc4d8_data,%dx
		mov    _0cecea_data,%cx
		sub    %edx,%ebx
		mov    0x00002c(%eax),%dx
		mov    %bx,0x000036(%eax)
		mov    _0cc4b8_data,%bx
		sub    %ecx,%edx
		add    %edx,%ebx
		mov    _0cc4d0_data,%dx
		sub    %edx,%ebx
		mov    %bx,0x000038(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_042f24_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    _0cdad2_data,%eax
		mov    %dx,_0cecf6_data
		mov    %dx,_0cecf8_data
		sar    $0x000010,%eax
		mov    _0cdabc_data,%edx
		add    %eax,%edx
		mov    _0cdad4_data,%ax
		mov    %ax,_0ceca2_data
		mov    _0cdad4_data,%eax
		mov    _0cdac0_data,%ebx
		sar    $0x000010,%eax
		add    %eax,%ebx
		mov    %edx,_0cdabc_data
		mov    %ebx,_0cdac0_data
		pop    %edx
		pop    %ebx
		ret    

_042f80_switch:
		.long   _04307a_case
		.long   _04307a_case
		.long   _043058_case
		.long   _04307a_case
		.long   _04307a_case
		.long   _04307a_case
		.long   _043058_case
		.long   _04307a_case
		.long   _043072_case
		.long   _04307a_case
		.long   _043058_case
		.long   _043060_case




_042fb0_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%eax
		mov    _0dfc44_data,%ecx
		mov    0x00000c(%ecx),%edx
		movw   $0x000000,0x000002(%ecx)
		test   %ax,%ax
		jl     _042fde_jump
		movswl %ax,%ebx
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _042fdc_jump
		mov    %ebx,%eax

	_042fdc_jump:
		jmp    _042ff0_jump

	_042fde_jump:
		movswl %ax,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _042fee_jump
		mov    %ebx,%eax

	_042fee_jump:
		neg    %eax

	_042ff0_jump:
		xor    %ebx,%ebx
		mov    %ax,0x000006(%ecx)
		mov    (%esp),%bl
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _043004_jump
		mov    %ebx,%eax

	_043004_jump:
		mov    $0x00000c,%ebx
		cmp    %ebx,%eax
		jle    _04300f_jump
		mov    %ebx,%eax

	_04300f_jump:
		mov    %al,0x000008(%ecx)
		mov    (%ecx),%ah
		xor    %bl,%bl
		test   %ah,%ah
		jbe    _043042_jump

	_04301a_jump:
		xor    %eax,%eax
		movw   $0x000000,0x000008(%edx)
		mov    %bl,%al
		mov    %ax,0x000006(%edx)
		mov    0x000008(%edx),%ax
		mov    %ax,0x000002(%edx)
		mov    %ax,(%edx)
		inc    %bl
		mov    %ax,0x000004(%edx)
		mov    (%ecx),%bh
		add    $0x00000a,%edx
		cmp    %bh,%bl
		jb     _04301a_jump

	_043042_jump:
		mov    0x000008(%ecx),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _04307a_case
		and    $0x0000ff,%eax
		jmp    *%cs:_042f80_switch(,%eax,4)

	_043058_case:
		movw   $0x000140,0x000004(%ecx)
		jmp    _043080_jump

	_043060_case:
		mov    0x000006(%ecx),%dx
		movw   $0x000140,0x000004(%ecx)
		neg    %edx
		mov    %dx,0x000006(%ecx)
		jmp    _043080_jump

	_043072_case:
		movw   $0x000064,0x000004(%ecx)
		jmp    _043080_jump

	_04307a_case:
		movw   $0x0000c8,0x000004(%ecx)

	_043080_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx

	_043085_jump:
		ret    

	_043088_case:
		mov    _0dfc44_data,%eax
		test   %eax,%eax
		je     _043085_jump
		cmpl   $0x000000,0x00000c(%eax)
		je     _04309f_jump
		add    $0x00000c,%eax
		call   _07b7dc_func

	_04309f_jump:
		cmpl   $0x000000,_0dfc44_data
		je     _043085_jump
		mov    $_0dfc44_data,%eax
		jmp    _07b7dc_func



_0430b4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %al,0x000008(%esp)
		mov    %dx,(%esp)
		mov    %ecx,%ebp
		xor    %ah,%ah
		mov    %ah,0x000004(%esp)
		test   %ebx,%ebx
		je     _043133_jump
		test   %ecx,%ecx
		je     _043133_jump
		mov    $0x000018,%eax
		call   _07b7c4_func
		mov    %eax,%edx
		mov    %eax,_0dfc44_data
		test   %eax,%eax
		je     _043133_jump
		mov    $0x00fa00,%ecx
		mov    _0cc528_data,%edi
		mov    %ebx,%esi
		movb   $0x0000c8,(%eax)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _043101_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_043101_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		xor    %ebx,%ebx
		mov    _0cc528_data,%eax
		mov    (%edx),%bl
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		add    %eax,%eax
		mov    %ebp,0x000014(%edx)
		call   _07b7c4_func
		mov    %eax,0x00000c(%edx)
		test   %eax,%eax
		je     _043133_jump
		movb   $0x000001,0x000004(%esp)

	_043133_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _04314e_jump
		xor    %eax,%eax
		mov    -0x000002(%esp),%edx
		mov    0x000008(%esp),%al
		sar    $0x000010,%edx
		call   _042fb0_func
		jmp    _043153_jump

	_04314e_jump:
		call   _043088_case

	_043153_jump:
		mov    0x000004(%esp),%al
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_043160_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0dfc44_data,%eax
		xor    %edx,%edx
		mov    %eax,0x000008(%esp)
		mov    %edx,0x000004(%esp)
		mov    0x00000c(%eax),%ebp
		jmp    _043255_jump

	_043180_jump:
		mov    0x000006(%ebp),%ecx
		mov    0x000004(%ebp),%esi
		mov    0x000000(%ebp),%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ebx
		test   %ecx,%ecx
		jle    _043249_jump
		test   %ebx,%ebx
		jl     _043249_jump
		cmp    $0x0000c8,%ebx
		jge    _043249_jump
		test   %esi,%esi
		jl     _043249_jump
		cmp    $0x0000c8,%esi
		jge    _043249_jump
		movswl 0x000000(%ebp),%eax
		test   %eax,%eax
		jge    _0431ce_jump
		add    %eax,%ecx
		xor    %eax,%eax

	_0431ce_jump:
		lea    (%eax,%ecx,1),%edx
		cmp    $0x000140,%edx
		jle    _0431e0_jump
		mov    $0x000140,%ecx
		sub    %eax,%ecx

	_0431e0_jump:
		test   %ecx,%ecx
		jle    _043249_jump
		mov    0x000002(%ebp),%edx
		sar    $0x000010,%edx
		test   %edx,%edx
		jge    _0431f2_jump
		add    %edx,%ecx
		xor    %edx,%edx

	_0431f2_jump:
		lea    (%edx,%ecx,1),%edi
		cmp    $0x000140,%edi
		jle    _043204_jump
		mov    $0x000140,%ecx
		sub    %edx,%ecx

	_043204_jump:
		test   %ecx,%ecx
		jle    _043249_jump
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000008(%esp),%ebx
		mov    0x000010(%ebx),%ebx
		add    %eax,%ebx
		mov    %ebx,(%esp)
		mov    %edx,%eax
		mov    %esi,%ebx
		mov    0x000008(%esp),%edi
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000014(%edi),%edi
		mov    (%esp),%esi
		add    %eax,%edi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _043242_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_043242_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)

	_043249_jump:
		mov    0x000004(%esp),%eax
		inc    %eax
		add    $0x00000a,%ebp
		mov    %eax,0x000004(%esp)

	_043255_jump:
		mov    0x000008(%esp),%edx
		xor    %eax,%eax
		mov    0x000004(%esp),%ebx
		mov    (%edx),%al
		cmp    %ebx,%eax
		jg     _043180_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_043274_switch:
		.long   _0432e7_case
		.long   _0432e7_case
		.long   _0432e7_case
		.long   _0432e7_case
		.long   _0432e7_case
		.long   _0432e7_case
		.long   _0432e7_case
		.long   _0432e7_case
		.long   _0434a9_case
		.long   _043397_case
		.long   _043428_case
		.long   _0436bf_case




_0432a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000048,%esp
		mov    _0dfc44_data,%ebp
		mov    0x000006(%ebp),%dx
		mov    0x00000c(%ebp),%esi
		test   %dx,%dx
		jl     _0432c9_jump
		mov    0x000004(%ebp),%bx
		sub    0x000002(%ebp),%bx
		jmp    _0432cd_jump

	_0432c9_jump:
		mov    0x000002(%ebp),%bx

	_0432cd_jump:
		mov    0x000008(%ebp),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _043725_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_043274_switch(,%eax,4)

	_0432e7_case:
		mov    0x000008(%ebp),%ah
		cmp    $0x000001,%ah
		je     _0432f9_jump
		cmp    $0x000002,%ah
		je     _0432f9_jump
		cmp    $0x000008,%ah
		jne    _0432fd_jump

	_0432f9_jump:
		mov    %ebx,%eax
		jmp    _0432ff_jump

	_0432fd_jump:
		xor    %eax,%eax

	_0432ff_jump:
		mov    0x000008(%ebp),%cl
		cmp    $0x000005,%cl
		je     _043311_jump
		cmp    $0x000004,%cl
		je     _043311_jump
		cmp    $0x000006,%cl
		jne    _043315_jump

	_043311_jump:
		mov    %ebx,%eax
		neg    %eax

	_043315_jump:
		mov    0x000008(%ebp),%dh
		mov    %eax,0x000014(%esp)
		cmp    $0x000003,%dh
		je     _04332b_jump
		cmp    $0x000002,%dh
		je     _04332b_jump
		cmp    $0x000004,%dh
		jne    _04332f_jump

	_04332b_jump:
		mov    %ebx,%esi
		jmp    _043331_jump

	_04332f_jump:
		xor    %esi,%esi

	_043331_jump:
		mov    0x000008(%ebp),%al
		cmp    $0x000007,%al
		je     _043340_jump
		cmp    $0x000008,%al
		je     _043340_jump
		cmp    $0x000006,%al
		jne    _043344_jump

	_043340_jump:
		mov    %ebx,%eax
		jmp    _043346_jump

	_043344_jump:
		xor    %eax,%eax

	_043346_jump:
		mov    0x000008(%ebp),%dh
		mov    %eax,0x000010(%esp)
		cmp    $0x000001,%dh
		je     _043357_jump
		cmp    $0x000005,%dh
		jne    _04335b_jump

	_043357_jump:
		xor    %ebx,%ebx
		jmp    _04335d_jump

	_04335b_jump:
		neg    %ebx

	_04335d_jump:
		add    $0x000140,%ebx
		mov    0x00000c(%ebp),%eax
		xor    %ecx,%ecx

	_043368_jump:
		add    $0x00000a,%eax
		mov    %si,-0x000006(%eax)
		mov    0x000010(%esp),%edx
		mov    %cx,-0x000004(%eax)
		mov    %dx,-0x00000a(%eax)
		mov    0x000014(%esp),%edx
		mov    %bx,-0x000002(%eax)
		add    %ecx,%edx
		inc    %ecx
		mov    %dx,-0x000008(%eax)
		cmp    $0x0000c8,%cx
		jge    _043755_jump
		jmp    _043368_jump

	_043397_case:
		mov    %ebx,%eax
		mov    %ebx,0x00001c(%esp)
		xor    %ecx,%ecx
		neg    %eax
		mov    $0x000001,%ebx
		mov    %eax,0x000004(%esp)

	_0433aa_jump:
		movswl %bx,%eax
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,(%esi,%eax,1)
		mov    (%esi,%eax,1),%dx
		mov    %edx,(%esp)
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		mov    (%esp),%edi
		mov    %di,(%edx,%esi,1)
		mov    %di,0x000004(%esi,%eax,1)
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    0x00001c(%esp),%edi
		mov    %bx,0x000006(%esi,%eax,1)
		mov    %di,0x000002(%edx,%esi,1)
		mov    0x000004(%esp),%edi
		movw   $0x000140,0x000008(%esi,%eax,1)
		mov    %di,0x000002(%esi,%eax,1)
		add    $0x000002,%ecx
		mov    0x000008(%esi,%eax,1),%ax
		add    $0x000002,%ebx
		mov    %ax,0x000008(%edx,%esi,1)
		mov    %edi,%edx
		mov    0x00001c(%esp),%edi
		add    $0x000002,%edx
		add    $0x000002,%edi
		mov    %edx,0x000004(%esp)
		mov    %edi,0x00001c(%esp)
		cmp    $0x0000c8,%cx
		jge    _043755_jump
		jmp    _0433aa_jump

	_043428_case:
		mov    $0x000140,%eax
		mov    $0x000001,%edi
		xor    %ecx,%ecx
		sub    %ebx,%eax
		mov    %di,0x000034(%esp)
		mov    %eax,0x000008(%esp)

	_04343f_jump:
		mov    0x000032(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		movw   $0x000000,(%esi,%eax,1)
		mov    (%esi,%eax,1),%di
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000002(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    %bx,0x000004(%esi,%eax,1)
		mov    0x000008(%esp),%edi
		mov    %bx,(%edx,%esi,1)
		mov    %di,0x000008(%esi,%eax,1)
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x000034(%esp),%edx
		mov    %dx,0x000002(%esi,%eax,1)
		mov    %dx,0x000006(%esi,%eax,1)
		mov    %edx,%eax
		add    $0x000002,%eax
		add    $0x000002,%ecx
		mov    %ax,0x000034(%esp)
		cmp    $0x0000c8,%cx
		jge    _043755_jump
		jmp    _04343f_jump

	_0434a9_case:
		mov    0x00000c(%ebp),%eax
		xor    %ecx,%ecx

	_0434ae_jump:
		add    $0x00000a,%eax
		inc    %ecx
		movw   $0x000000,-0x000002(%eax)
		cmp    $0x0000c8,%cx
		jl     _0434ae_jump
		movw   $0x0000c7,0x000040(%esp)
		mov    %ebx,%eax
		add    %ebx,%eax
		neg    %eax
		add    $0x000140,%eax
		mov    %eax,0x00002c(%esp)
		mov    %ebx,%eax
		neg    %eax
		mov    0x00000c(%ebp),%esi
		add    $0x0000c7,%eax
		xor    %ecx,%ecx
		mov    %eax,0x000020(%esp)
		jmp    _04355b_jump

	_0434e9_jump:
		imul   $0x00000a,%edx,%edx
		mov    %ecx,%eax
		add    %ebx,%eax
		mov    %eax,0x000044(%esp)
		mov    0x00003e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		mov    0x000044(%esp),%edi
		mov    %di,(%esi,%eax,1)
		mov    %di,0x000004(%esi,%eax,1)
		mov    %di,0x000002(%edx,%esi,1)
		mov    %di,(%edx,%esi,1)
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    0x000040(%esp),%edi
		mov    %di,0x000006(%esi,%eax,1)
		mov    0x000020(%esp),%edi
		mov    %di,0x000002(%esi,%eax,1)
		mov    0x00002c(%esp),%edi
		inc    %ecx
		mov    %di,0x000008(%esi,%eax,1)
		mov    %edi,%eax
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x000040(%esp),%edi
		mov    0x000020(%esp),%edx
		sub    $0x000002,%eax
		dec    %edi
		mov    %eax,0x00002c(%esp)
		dec    %edx
		mov    %di,0x000040(%esp)
		mov    %edx,0x000020(%esp)

	_04355b_jump:
		mov    $0x000064,%edx
		movswl %bx,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %cx,%edx
		cmp    %eax,%edx
		jl     _0434e9_jump
		call   _043160_func
		mov    $0x0000c7,%edx
		mov    %ebx,%eax
		xor    %ecx,%ecx
		neg    %eax
		mov    %dx,0x00003c(%esp)
		mov    %eax,0x000028(%esp)

	_04358b_jump:
		mov    0x00003a(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		movw   $0x000000,0x000004(%esi,%eax,1)
		mov    0x000004(%esi,%eax,1),%dx
		mov    %edx,0x000044(%esp)
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		mov    0x000044(%esp),%edi
		mov    %di,0x000004(%edx,%esi,1)
		mov    %bx,(%esi,%eax,1)
		mov    %bx,(%edx,%esi,1)
		mov    %cx,0x000002(%edx,%esi,1)
		mov    0x000028(%esp),%edi
		mov    %cx,0x000006(%edx,%esi,1)
		mov    %di,0x000008(%esi,%eax,1)
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x00003c(%esp),%edx
		inc    %ecx
		mov    %dx,0x000002(%esi,%eax,1)
		mov    %edx,%edi
		mov    %dx,0x000006(%esi,%eax,1)
		mov    0x000028(%esp),%eax
		dec    %edi
		inc    %eax
		mov    %di,0x00003c(%esp)
		mov    %eax,0x000028(%esp)
		cmp    $0x000064,%cx
		jl     _04358b_jump
		call   _043160_func
		mov    $0x0000c7,%edx
		mov    $0x0000c8,%edi
		mov    $0x000140,%eax
		xor    %ecx,%ecx
		mov    %eax,0x000030(%esp)
		mov    %ebx,%eax
		mov    %dx,0x000038(%esp)
		add    $0x000140,%eax
		mov    %edi,0x000018(%esp)
		mov    %eax,0x000024(%esp)

	_043628_jump:
		mov    %ecx,%eax
		sub    %ebx,%eax
		mov    %eax,0x000044(%esp)
		mov    0x000036(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x00000a,%eax,%eax
		mov    0x000024(%esp),%edx
		mov    %edx,(%esp)
		mov    %dx,0x000004(%esi,%eax,1)
		movswl %cx,%edx
		imul   $0x00000a,%edx,%edx
		mov    (%esp),%edi
		mov    %di,0x000004(%edx,%esi,1)
		mov    %cx,0x000002(%edx,%esi,1)
		mov    %cx,0x000006(%edx,%esi,1)
		mov    0x000038(%esp),%edi
		mov    %di,0x000006(%esi,%eax,1)
		mov    0x000030(%esp),%edi
		mov    %di,(%esi,%eax,1)
		mov    %di,(%edx,%esi,1)
		mov    0x000018(%esp),%edi
		mov    %di,0x000002(%esi,%eax,1)
		mov    0x000044(%esp),%edi
		inc    %ecx
		mov    %di,0x000008(%esi,%eax,1)
		mov    0x000030(%esp),%eax
		mov    %di,0x000008(%edx,%esi,1)
		mov    0x000038(%esp),%edx
		mov    0x000018(%esp),%edi
		dec    %eax
		dec    %edx
		dec    %edi
		mov    %dx,0x000038(%esp)
		mov    0x000024(%esp),%edx
		mov    %eax,0x000030(%esp)
		dec    %edx
		mov    %edi,0x000018(%esp)
		mov    %edx,0x000024(%esp)
		cmp    $0x000064,%cx
		jge    _043755_jump
		jmp    _043628_jump

	_0436bf_case:
		mov    $0x0000c8,%esi
		movswl %bx,%edx
		sub    %edx,%esi
		sar    %esi
		mov    %esi,%ecx
		mov    $0x000140,%esi
		sub    %edx,%esi
		mov    %esi,%edx
		sar    %edx
		mov    0x00000c(%ebp),%eax
		mov    %edx,0x00000c(%esp)
		xor    %edx,%edx

	_0436e1_jump:
		mov    %dx,0x000002(%eax)
		mov    0x00000c(%esp),%esi
		mov    %dx,0x000006(%eax)
		mov    %si,(%eax)
		mov    %si,0x000004(%eax)
		cmp    %cx,%dx
		jl     _043712_jump
		mov    $0x0000c8,%edi
		movswl %cx,%esi
		sub    %esi,%edi
		mov    %edi,%esi
		movswl %dx,%edi
		cmp    %edi,%esi
		jl     _043712_jump
		mov    %bx,0x000008(%eax)
		jmp    _043718_jump

	_043712_jump:
		movw   $0x000000,0x000008(%eax)

	_043718_jump:
		inc    %edx
		add    $0x00000a,%eax
		cmp    $0x0000c8,%dx
		jge    _043755_jump
		jmp    _0436e1_jump

	_043725_jump:
		mov    0x00000c(%ebp),%eax
		xor    %ecx,%ecx
		jmp    _04374b_jump

	_04372c_jump:
		movw   $0x000000,(%eax)
		add    $0x00000a,%eax
		movw   $0x000140,-0x000002(%eax)
		mov    %cx,-0x000008(%eax)
		mov    %cx,-0x000004(%eax)
		mov    -0x00000a(%eax),%dx
		inc    %ecx
		mov    %dx,-0x000006(%eax)

	_04374b_jump:
		xor    %edx,%edx
		mov    0x000000(%ebp),%dl
		cmp    %dx,%cx
		jl     _04372c_jump

	_043755_jump:
		mov    0x000004(%ebp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _043761_jump
		neg    %eax

	_043761_jump:
		mov    0x000002(%ebp),%bx
		add    %eax,%ebx
		mov    0x000004(%ebp),%cx
		mov    %bx,0x000002(%ebp)
		cmp    %cx,%bx
		jbe    _04377a_jump
		movw   $0x000000,0x000002(%ebp)

	_04377a_jump:
		mov    0x000002(%ebp),%ax
		add    $0x000048,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_043790_func:
		push   $0x000075
		outsb  %ds:(%esi),(%dx)
		insb   (%dx),%es:(%di)
		add    %al,%gs:(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %ch,0x000075(%ebp)
		jae    _04380a_jump
		arpl   %ax,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %ch,0x00006f(%ebp)
		jne    _04381c_jump
		je     _043811_jump
		imul   $0x000000,0x000000(%esi),%ebp
		imul   $0x006567,0x000061(%ebp),%ebp
		add    %al,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		arpl   %sp,0x000076(%ecx)
		add    %al,%gs:(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)
		add    %ah,0x000061(%ebx)
		imul   $0x000000,0x000000(%ebp),%esp
		add    %al,(%eax)
		add    %al,(%eax)
		add    %al,(%eax)


_0437e0_func:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %cl,0x575651c0(%ebx)
		push   %ebp
		sub    $0x00005c,%esp
		mov    %eax,0x000028(%esp)
		mov    %edx,0x000014(%esp)
		mov    $0x000064,%eax
		call   _07b4e8_func
		mov    %eax,0x000004(%esp)
		call   _01cb80_func
		cmpb   $0x000001,_095b15_data
	_04380a_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		jne    _043820_jump
		mov    $0x011800,%edx
		mov    0x000028(%esp),%eax
		call   _07b1c0_func
		mov    %eax,_0ccc60_data
		jmp    _043828_jump

	_043820_jump:
		xor    %edx,%edx
		mov    %edx,_0ccc60_data

	_043828_jump:
		mov    $0x0000ff,%dl
		xor    %eax,%eax

	_04382c_jump:
		inc    %eax
		mov    %dl,_0ce38f_data(%eax)
		cmp    $0x00000a,%eax
		jl     _04382c_jump
		cmpw   $0x000000,_0ced38_data
		je     _04384f_jump
		mov    0x000004(%esp),%edx
		mov    _0c0898_data,%eax
		mov    %eax,(%edx)
		jmp    _043856_jump

	_04384f_jump:
		mov    0x000004(%esp),%eax
		movb   $0x000000,(%eax)

	_043856_jump:
		mov    $_0c089c_data,%esi
		mov    0x000004(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_043868_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _043880_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _043868_jump

	_043880_jump:
		pop    %edi
		mov    $_0c08a4_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04388f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0438a7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04388f_jump

	_0438a7_jump:
		pop    %edi
		mov    %ebx,%esi
		mov    $_0c08a8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0438b8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0438d0_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0438b8_jump

	_0438d0_jump:
		pop    %edi
		mov    %edi,%eax
		call   _07d470_func
		mov    %eax,%edi
		mov    %eax,%esi
		test   %eax,%eax
		jne    _043912_jump
		mov    $0x0000c8,%eax
		mov    0x000004(%esp),%ebx
		call   _07b4e8_func
		push   %ebx
		push   $_0c08ac_data
		push   %eax
		mov    %eax,%edx
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func
		jmp    _043f88_jump

	_043912_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %eax,%ecx
		lea    0x000030(%esp),%eax
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x00003c(%esp),%eax
		mov    %edi,%ecx
		call   _07c67d_func
		cmpb   $0x000000,_095b15_data
		jne    _04395d_jump
		mov    0x000030(%esp),%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		add    %eax,%eax
		mov    0x00003c(%esp),%bx
		mov    %ax,%dx
		mov    0x000028(%esp),%eax
		jmp    _043978_jump

	_04395d_jump:
		cmpb   $0x000000,_0cee64_data
		je     _043982_jump
		mov    0x000028(%esp),%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00003c(%esp),%bx
		mov    0x000030(%esp),%dx

	_043978_jump:
		call   _045e88_func
		mov    %eax,_0ccc1c_data

	_043982_jump:
		mov    $0x000001,%ebx
		lea    0x000050(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $_0cee6f_data,%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $_0cee6c_data,%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		xor    %edi,%edi
		call   _07c67d_func
		mov    $0x000001,%ebp
		jmp    _0439e4_jump

	_0439c3_jump:
		lea    0x000058(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%ebx
		mov    %ebp,%edx
		call   _07c67d_func
		mov    0x000058(%esp),%bh
		xor    $0x000015,%bh
		inc    %edi
		mov    %bh,0x000058(%esp)
		mov    %bh,_0ce38f_data(%edi)

	_0439e4_jump:
		xor    %eax,%eax
		mov    0x000050(%esp),%al
		cmp    %eax,%edi
		jl     _0439c3_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_092204_data,%eax
		mov    %esi,%ecx
		call   _07c67d_func
		mov    _092204_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x000010(%esp)
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		lea    0x000028(%edx),%eax
		add    $_0dfc48_data,%eax
		mov    %eax,0x000008(%esp)
		lea    0x000080(%edx),%eax
		add    $_0dfc48_data,%eax
		mov    %eax,0x00001c(%esp)
		lea    0x000044(%edx),%eax
		add    $_0dfc48_data,%eax
		mov    %eax,0x00000c(%esp)
		jmp    _043e32_jump

	_043a46_jump:
		imul   $0x000084,0x000010(%esp),%ebp
		mov    $0x000001,%ebx
		lea    0x000048(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    0x000008(%esp),%eax
		mov    %esi,%ecx
		call   _07c67d_func
		mov    $_0dfc48_data,%edi
		mov    0x000048(%esp),%cl
		add    %ebp,%edi
		test   %cl,%cl
		jne    _043a91_jump
		cmpb   $0x000000,_0cee63_data
		je     _043cc8_jump

	_043a91_jump:
		imul   $0x000084,0x000010(%esp),%edi
		mov    0x000014(%esp),%eax
		mov    _0dfc70_data(%edi),%edx
		call   _07b1c0_func
		mov    %esi,%ecx
		mov    $0x000001,%edx
		mov    _0dfc70_data(%edi),%ebx
		mov    %eax,_0dfc50_data(%edi)
		call   _07c67d_func
		mov    $0x000001,%ebx
		lea    0x00004c(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		mov    %edi,%ebx
		mov    _0dfc70_data(%edi),%ebp
		xor    %edx,%edx
		test   %ebp,%ebp
		jle    _043afa_jump

	_043ae0_jump:
		mov    _0dfc50_data(%ebx),%edi
		mov    (%edx,%edi,1),%al
		sub    %al,0x00004c(%esp)
		xorb   $0x00008f,(%edx,%edi,1)
		inc    %edx
		cmp    _0dfc70_data(%ebx),%edx
		jl     _043ae0_jump

	_043afa_jump:
		cmpb   $0x000000,0x00004c(%esp)
		je     _043b2e_jump
		mov    $0x0000c8,%eax
		mov    0x000004(%esp),%edi
		call   _07b4e8_func
		push   %edi
		push   $_0c08d0_data
		push   %eax
		mov    %eax,%edx
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func

	_043b2e_jump:
		imul   $0x000084,0x000010(%esp),%ebp
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%ecx
		mov    0x00000c(%esp),%eax
		call   _07c67d_func
		xor    %edx,%edx
		mov    _0dfc8c_data(%ebp),%dx
		imul   $0x00000c,%edx,%edx
		mov    0x000028(%esp),%eax
		mov    %esi,%ecx
		xor    %ebx,%ebx
		call   _07b1c0_func
		mov    $0x00000c,%edx
		mov    _0dfc8c_data(%ebp),%bx
		mov    %eax,_0dfc48_data(%ebp)
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    0x00001c(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		mov    _0dfcc8_data(%ebp),%al
		test   %al,%al
		je     _043de9_jump
		xor    %edx,%edx
		mov    %al,%dl
		imul   $0x00000c,%edx,%edx
		mov    0x000028(%esp),%eax
		xor    %edi,%edi
		call   _07b1c0_func
		xor    %edx,%edx
		mov    %eax,_0dfc4c_data(%ebp)
		mov    %edx,0x00002c(%esp)
		jmp    _043caf_jump

	_043bbe_jump:
		mov    $0x000001,%ebx
		mov    _0dfc4c_data(%ebp),%eax
		mov    $0x000002,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000008,%eax
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    _0dfc4c_data(%ebp),%eax
		mov    $0x000002,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x00000a,%eax
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    _0dfc4c_data(%ebp),%eax
		mov    $0x000004,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000004,%eax
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000040(%esp),%eax
		mov    %esi,%ecx
		call   _07c67d_func
		xor    %edx,%edx
		mov    0x000028(%esp),%eax
		mov    0x000040(%esp),%dx
		call   _07b1c0_func
		mov    _0dfc4c_data(%ebp),%edx
		mov    %esi,%ecx
		mov    %eax,(%edx,%edi,1)
		xor    %ebx,%ebx
		mov    _0dfc4c_data(%ebp),%eax
		mov    0x000040(%esp),%bx
		mov    $0x000001,%edx
		mov    (%edi,%eax,1),%eax
		call   _07c67d_func
		mov    _0dfc4c_data(%ebp),%eax
		add    %edi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _043ca3_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    0x000028(%esp),%eax
		shl    $0x000002,%edx
		call   _07b1c0_func
		mov    _0dfc4c_data(%ebp),%edx
		mov    %eax,0x000004(%edx,%edi,1)
		mov    %esi,%ecx
		mov    _0dfc4c_data(%ebp),%eax
		xor    %ebx,%ebx
		mov    $0x000004,%edx
		mov    0x00000a(%edi,%eax,1),%bx
		mov    0x000004(%edi,%eax,1),%eax
		call   _07c67d_func

	_043ca3_jump:
		mov    0x00002c(%esp),%eax
		inc    %eax
		add    $0x00000c,%edi
		mov    %eax,0x00002c(%esp)

	_043caf_jump:
		xor    %eax,%eax
		mov    0x00002c(%esp),%ebx
		mov    _0dfcc8_data(%ebp),%al
		cmp    %ebx,%eax
		jle    _043dff_jump
		jmp    _043bbe_jump

	_043cc8_jump:
		mov    $0x000001,%ebx
		xor    %eax,%eax
		mov    _0dfc70_data(%ebp),%edx
		mov    %eax,_0dfc50_data(%ebp)
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _07c89a_func
		mov    $0x000001,%ebx
		lea    0x00004c(%esp),%eax
		mov    %ebx,%edx
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000044(%edi),%eax
		mov    %esi,%ecx
		call   _07c67d_func
		xor    %edx,%edx
		mov    %edx,_0dfc48_data(%ebp)
		mov    _0dfc8c_data(%ebp),%dx
		imul   $0x00000c,%edx,%edx
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _07c89a_func
		mov    $0x000001,%ebx
		lea    0x000080(%edi),%eax
		mov    %ebx,%edx
		call   _07c67d_func
		cmpb   $0x000000,_0dfcc8_data(%ebp)
		je     _043de9_jump
		xor    %ebx,%ebx
		xor    %edi,%edi
		mov    %ebx,_0dfc4c_data(%ebp)
		jmp    _043dd8_jump

	_043d56_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000034(%esp),%eax
		mov    %esi,%ecx
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000038(%esp),%eax
		mov    %esi,%ecx
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esp,%eax
		mov    %esi,%ecx
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000040(%esp),%eax
		mov    %esi,%ecx
		call   _07c67d_func
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		mov    0x000040(%esp),%dx
		call   _07c89a_func
		cmpl   $0xffffffff,(%esp)
		je     _043dd7_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000038(%esp),%dx
		mov    %esi,%eax
		shl    $0x000002,%edx
		call   _07c89a_func

	_043dd7_jump:
		inc    %edi

	_043dd8_jump:
		xor    %eax,%eax
		mov    _0dfcc8_data(%ebp),%al
		cmp    %eax,%edi
		jge    _043dff_jump
		jmp    _043d56_jump

	_043de9_jump:
		mov    _0dfc4c_data,%eax
		mov    %eax,_0dfc4c_data(%ebp)
		mov    _0dfcc8_data,%al
		mov    %al,_0dfcc8_data(%ebp)

	_043dff_jump:
		mov    0x000008(%esp),%edx
		mov    0x00001c(%esp),%ebx
		mov    0x00000c(%esp),%ecx
		mov    0x000010(%esp),%edi
		add    $0x000084,%edx
		add    $0x000084,%ebx
		add    $0x000084,%ecx
		inc    %edi
		mov    %edx,0x000008(%esp)
		mov    %ebx,0x00001c(%esp)
		mov    %ecx,0x00000c(%esp)
		mov    %edi,0x000010(%esp)

	_043e32_jump:
		mov    _092202_data,%edx
		mov    _092204_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    0x000010(%esp),%ecx
		add    %edx,%eax
		cmp    %ecx,%eax
		jg     _043a46_jump
		mov    _092206_data,%ax
		mov    _092204_data,%bx
		add    %eax,%ebx
		mov    %esi,%ecx
		mov    %bx,_092204_data
		mov    $0x000001,%ebx
		mov    $_0ceee0_data,%eax
		mov    %ebx,%edx
		call   _07c67d_func
		xor    %eax,%eax
		mov    _0ceedf_data,%al
		mov    %eax,0x000020(%esp)
		shl    $0x000002,%eax
		mov    %eax,0x000024(%esp)
		jmp    _043f3d_jump

	_043e91_jump:
		mov    $0x000001,%ebx
		lea    0x000044(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		xor    %edx,%edx
		mov    0x000044(%esp),%dl
		mov    0x000028(%esp),%eax
		shl    $0x000002,%edx
		xor    %ebp,%ebp
		call   _07b1c0_func
		mov    0x000024(%esp),%edx
		xor    %edi,%edi
		mov    %edx,0x000018(%esp)
		mov    %eax,_0cc208_data(%edx)
		jmp    _043f1f_jump

	_043ec9_jump:
		mov    $0x000001,%ebx
		lea    0x000054(%esp),%eax
		mov    %esi,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		xor    %edx,%edx
		mov    0x000054(%esp),%dl
		mov    0x000028(%esp),%eax
		shl    $0x000003,%edx
		call   _07b1c0_func
		mov    0x000018(%esp),%edx
		add    $0x000004,%edi
		mov    _0cc208_data(%edx),%edx
		mov    %eax,-0x000004(%edx,%edi,1)
		mov    0x000018(%esp),%eax
		mov    %esi,%ecx
		xor    %ebx,%ebx
		mov    _0cc208_data(%eax),%eax
		mov    0x000054(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%edi,%eax,1),%eax
		inc    %ebp
		call   _07c67d_func

	_043f1f_jump:
		xor    %eax,%eax
		mov    0x000044(%esp),%al
		cmp    %eax,%ebp
		jl     _043ec9_jump
		mov    0x000024(%esp),%eax
		mov    0x000020(%esp),%edx
		add    $0x000004,%eax
		inc    %edx
		mov    %eax,0x000024(%esp)
		mov    %edx,0x000020(%esp)

	_043f3d_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0ceee0_data,%dl
		mov    _0ceedf_data,%al
		mov    0x000020(%esp),%ebp
		add    %edx,%eax
		cmp    %ebp,%eax
		jg     _043e91_jump
		mov    _0ceedf_data,%al
		mov    %dl,%ah
		add    %al,%ah
		mov    _0cee64_data,%dl
		mov    %ah,_0ceee0_data
		cmp    $0x000002,%dl
		je     _043f81_jump
		mov    _0ce38d_data,%eax
		sar    $0x000018,%eax
		call   _0458a4_func

	_043f81_jump:
		mov    %esi,%eax
		call   _07d524_func

	_043f88_jump:
		mov    0x000004(%esp),%eax
		call   _07b680_func
		add    $0x00005c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_043f9c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000080,%esp
		mov    %eax,0x000068(%esp)
		mov    $0x000013,%ecx
		mov    %esp,%edi
		mov    $_043790_func,%esi
		mov    $0x000064,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		call   _07b4e8_func
		mov    %eax,%edx
		mov    %eax,0x000064(%esp)
		call   _01cb80_func
		cmpw   $0x000000,_0ced38_data
		je     _043fe2_jump
		mov    _0c0898_data,%eax
		mov    %eax,(%edx)
		jmp    _043fe5_jump

	_043fe2_jump:
		movb   $0x000000,(%edx)

	_043fe5_jump:
		mov    $_0c089c_data,%esi
		mov    0x000064(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_043ff7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04400f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _043ff7_jump

	_04400f_jump:
		pop    %edi
		mov    $_0c08a4_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04401e_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044036_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04401e_jump

	_044036_jump:
		pop    %edi
		mov    _0cecd2_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    %esp,%esi
		add    %edx,%eax
		add    %eax,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_04405c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044074_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04405c_jump

	_044074_jump:
		pop    %edi
		mov    $_0c08a4_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044083_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04409b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044083_jump

	_04409b_jump:
		pop    %edi
		mov    %ebx,%esi
		mov    $_0c08a8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0440ac_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0440c4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0440ac_jump

	_0440c4_jump:
		pop    %edi
		mov    %edi,%eax
		call   _07d470_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _044100_jump
		mov    $0x0000c8,%eax
		call   _07b4e8_func
		push   %edi
		push   $_0c08ec_data
		push   %eax
		mov    %eax,%edx
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func
		jmp    _0447d3_jump

	_044100_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %eax,%ecx
		lea    0x000050(%esp),%eax
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000060(%esp),%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0cda88_data,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0cda8a_data,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    $0x000900,%ebx
		mov    $0x000001,%edx
		mov    $_0c7388_data,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $_0ceec9_data,%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		xor    %edx,%edx
		xor    %ah,%ah
		mov    _0ceec9_data,%dl
		mov    %ah,_0ceec7_data
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7388_data,%esi
		sub    %edx,%eax
		mov    $_0c6d88_data,%edi
		shl    $0x000008,%eax
		mov    $0x000300,%ecx
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cda88_data,%eax
		mov    _0cda86_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    %edx,_0cda8c_data
		mov    %edx,%eax
		shl    $0x000002,%edx
		sub    %eax,%edx
		mov    0x000068(%esp),%eax
		add    %edx,%edx
		mov    %ebp,%ecx
		call   _07b1c0_func
		mov    $0x000006,%edx
		mov    _0cda8c_data,%ebx
		mov    %eax,_0cda90_data
		call   _07c67d_func
		mov    $0x000001,%ebx
		lea    0x00007c(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		mov    $0x000001,%ebx
		lea    0x000074(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0ce188_data,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    _0ce188_data,%ebx
		cmp    $0xffffffff,%ebx
		jne    _04424e_jump
		xor    %ecx,%ecx
		mov    %ecx,_0ce188_data
		jmp    _044280_jump

	_04424e_jump:
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    $_0dfc48_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %edx,_0ce188_data
		cmpb   $0x000000,_095b15_data
		jne    _044280_jump
		cmpb   $0x000000,_0cee5b_data
		je     _044280_jump
		mov    0x000068(%esp),%eax
		call   _05aed4_func

	_044280_jump:
		mov    _095b15_data,%bl
		cmp    $0x000001,%bl
		je     _044295_jump
		mov    _0cee5b_data,%bh
		test   %bh,%bh
		jne    _04429b_jump

	_044295_jump:
		mov    0x00007c(%esp),%al
		jmp    _0442a7_jump

	_04429b_jump:
		test   %bl,%bl
		jne    _0442ac_jump
		test   %bh,%bh
		je     _0442ac_jump
		mov    0x000074(%esp),%al

	_0442a7_jump:
		mov    %al,_0cee60_data

	_0442ac_jump:
		mov    _095b15_data,%al
		cmp    $0x000001,%al
		jne    _0444b5_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000058(%esp),%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x000054(%esp),%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    0x000058(%esp),%edi
		test   %edi,%edi
		je     _044300_jump
		mov    %edi,%edx
		mov    0x000068(%esp),%eax
		shl    $0x000008,%edx
		call   _07b1c0_func
		mov    %eax,_0ccc3c_data
		jmp    _044306_jump

	_044300_jump:
		mov    %edi,_0ccc3c_data

	_044306_jump:
		mov    0x000054(%esp),%edx
		test   %edx,%edx
		je     _04431e_jump
		mov    0x000068(%esp),%eax
		call   _07b1c0_func
		mov    %eax,_0ccc04_data
		jmp    _044324_jump

	_04431e_jump:
		mov    %edx,_0ccc04_data

	_044324_jump:
		mov    0x000058(%esp),%ebx
		mov    $0x000001,%edx
		mov    _0ccc3c_data,%eax
		mov    %ebp,%ecx
		shl    $0x000008,%ebx
		call   _07c67d_func
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		xor    %edx,%edx
		jmp    _04436a_jump

	_044352_jump:
		mov    _0ccc3c_data,%esi
		mov    (%edx,%esi,1),%al
		sub    %al,0x000078(%esp)
		mov    (%edx,%esi,1),%bl
		inc    %edx
		xor    $0x00007d,%bl
		mov    %bl,-0x000001(%edx,%esi,1)

	_04436a_jump:
		mov    0x000058(%esp),%eax
		shl    $0x000008,%eax
		cmp    %eax,%edx
		jb     _044352_jump
		cmpb   $0x000000,0x000078(%esp)
		je     _0443a9_jump
		mov    $0x0000c8,%eax
		call   _07b4e8_func
		mov    %eax,%edx
		mov    0x000064(%esp),%eax
		push   %eax
		push   $_0c08d0_data
		push   %edx
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func

	_0443a9_jump:
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0c26c8_data,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    _0ccc3c_data,%edx
		xor    %eax,%eax

	_0443c7_jump:
		mov    _0c26c8_data(%eax),%ebx
		add    $0x000004,%eax
		add    %edx,%ebx
		mov    %ebx,_0c26c4_data(%eax)
		cmp    $0x0012c0,%eax
		jne    _0443c7_jump
		mov    0x000054(%esp),%ebx
		mov    $0x000001,%edx
		mov    _0ccc04_data,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		mov    0x000054(%esp),%ecx
		xor    %edx,%edx
		test   %ecx,%ecx
		jbe    _04442e_jump

	_044410_jump:
		mov    _0ccc04_data,%esi
		mov    0x000078(%esp),%bh
		mov    (%edx,%esi,1),%al
		sub    %al,%bh
		mov    %bh,0x000078(%esp)
		xorb   $0x0000f3,(%edx,%esi,1)
		inc    %edx
		cmp    0x000054(%esp),%edx
		jb     _044410_jump

	_04442e_jump:
		cmpb   $0x000000,0x000078(%esp)
		je     _044462_jump
		mov    $0x0000c8,%eax
		mov    0x000064(%esp),%edi
		call   _07b4e8_func
		push   %edi
		push   $_0c08d0_data
		push   %eax
		mov    %eax,%edx
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func

	_044462_jump:
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0c3988_data,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		xor    %eax,%eax

	_04447a_jump:
		cmpl   $0xffffffff,_0c3988_data(%eax)
		je     _044491_jump
		mov    _0ccc04_data,%edx
		add    %edx,_0c3988_data(%eax)
		jmp    _044499_jump

	_044491_jump:
		xor    %ebx,%ebx
		mov    %ebx,_0c3988_data(%eax)

	_044499_jump:
		add    $0x000004,%eax
		cmp    $0x0012c0,%eax
		jne    _04447a_jump
		mov    0x000050(%esp),%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _07c89a_func
		jmp    _0445c5_jump

	_0444b5_jump:
		test   %al,%al
		jne    _0445c5_jump
		mov    0x000060(%esp),%edx
		mov    %ebp,%eax
		xor    %ebx,%ebx
		call   _07c89a_func
		mov    %ebp,%ecx
		mov    $0x0004b0,%ebx
		mov    $0x000004,%edx
		mov    $_0c3988_data,%eax
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cc458_data,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cc454_data,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		lea    0x00005c(%esp),%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    0x00005c(%esp),%edx
		mov    0x000068(%esp),%eax
		mov    $0x000001,%ebx
		call   _07b1c0_func
		mov    %ebp,%ecx
		mov    0x00005c(%esp),%edx
		mov    %eax,_0ccc94_data
		call   _07c67d_func
		mov    $0x000001,%ebx
		lea    0x000078(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		mov    0x00005c(%esp),%esi
		xor    %edx,%edx
		test   %esi,%esi
		jle    _04457d_jump

	_04455f_jump:
		mov    _0ccc94_data,%esi
		mov    0x000078(%esp),%bl
		mov    (%edx,%esi,1),%al
		sub    %al,%bl
		mov    %bl,0x000078(%esp)
		xorb   $0x0000ff,(%edx,%esi,1)
		inc    %edx
		cmp    0x00005c(%esp),%edx
		jl     _04455f_jump

	_04457d_jump:
		cmpb   $0x000000,0x000078(%esp)
		je     _0445b1_jump
		mov    $0x0000c8,%eax
		mov    0x000064(%esp),%edi
		call   _07b4e8_func
		push   %edi
		push   $_0c0910_data
		push   %eax
		mov    %eax,%edx
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func

	_0445b1_jump:
		mov    $_0c1a00_data,%edx
		mov    0x000068(%esp),%eax
		mov    _0ccc94_data,%ebx
		call   _05a5dc_func

	_0445c5_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0cc1f4_data,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    _0cc1f2_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    0x000068(%esp),%eax
		shl    $0x000002,%edx
		call   _07b1c0_func
		mov    %eax,_0cc1f0_data
		mov    _0cc1f2_data,%edx
		sar    $0x000010,%edx
		mov    0x000068(%esp),%eax
		add    %edx,%edx
		call   _07b1c0_func
		mov    _0cc1f2_data,%edx
		mov    %eax,_0cc1f8_data
		sar    $0x000010,%edx
		mov    0x000068(%esp),%eax
		add    %edx,%edx
		call   _07b1c0_func
		mov    %eax,_0cc1e8_data
		mov    _0cc1f2_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ebx
		shl    $0x000005,%ebx
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%ebx
		call   _07c050_func
		mov    _0cc1f2_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		lea    0x000001(%eax),%edx
		xor    %edi,%edi
		mov    0x000068(%esp),%eax
		mov    %ebp,%ecx
		call   _07b1c0_func
		mov    _0cc1f2_data,%ebx
		mov    $0x000002,%edx
		sar    $0x000010,%ebx
		mov    %eax,_0ce324_data
		call   _07c67d_func
		mov    $0x000084,%edx
		mov    _0cc1f2_data,%ebx
		mov    _0cc1f0_data,%eax
		mov    %ebp,%ecx
		sar    $0x000010,%ebx
		xor    %esi,%esi
		call   _07c67d_func
		jmp    _0447bc_jump

	_04469e_jump:
		mov    _0cc1f0_data,%eax
		movswl (%esi,%eax,1),%edx
		imul   $0x000084,%edx,%edx
		mov    _0dfc48_data(%edx),%edx
		mov    %edx,(%esi,%eax,1)
		mov    0x000002(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0dfc4c_data(%edx),%edx
		mov    %edx,0x000004(%esi,%eax,1)
		mov    0x000006(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0dfc50_data(%edx),%edx
		mov    %edx,0x000008(%esi,%eax,1)
		mov    0x00000a(%esi,%eax,1),%edx
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		mov    _0cc208_data(,%edx,4),%edx
		mov    %ebp,%ecx
		mov    %edx,0x00000c(%esi,%eax,1)
		mov    $0x000002,%edx
		lea    0x000070(%esp),%eax
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x00006c(%esp),%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    0x000070(%esp),%eax
		test   %ax,%ax
		je     _04475c_jump
		xor    %edx,%edx
		mov    %ax,%dx
		mov    0x000068(%esp),%eax
		call   _07b1c0_func
		mov    _0cc1f0_data,%edx
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    %eax,0x000010(%edx,%esi,1)
		mov    %edx,%eax
		mov    0x000070(%esp),%bx
		mov    $0x000001,%edx
		mov    0x000010(%esi,%eax,1),%eax
		call   _07c67d_func
		jmp    _044769_jump

	_04475c_jump:
		mov    _0cc1f0_data,%eax
		movl   $0x000000,0x000010(%esi,%eax,1)

	_044769_jump:
		cmpw   $0x000000,0x00006c(%esp)
		je     _0447a8_jump
		xor    %edx,%edx
		mov    0x00006c(%esp),%dx
		mov    0x000068(%esp),%eax
		add    %edx,%edx
		call   _07b1c0_func
		mov    _0cc1f0_data,%edx
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    %eax,0x000014(%edx,%esi,1)
		mov    %edx,%eax
		mov    0x00006c(%esp),%bx
		mov    $0x000002,%edx
		mov    0x000014(%esi,%eax,1),%eax
		call   _07c67d_func
		jmp    _0447b5_jump

	_0447a8_jump:
		mov    _0cc1f0_data,%eax
		movl   $0x000000,0x000014(%esi,%eax,1)

	_0447b5_jump:
		add    $0x000084,%esi
		inc    %edi

	_0447bc_jump:
		mov    _0cc1f2_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jl     _04469e_jump
		mov    %ebp,%eax
		call   _07d524_func

	_0447d3_jump:
		mov    0x000064(%esp),%eax
		call   _07b680_func
		add    $0x000080,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0447e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %eax,0x000018(%esp)
		mov    $0x000064,%eax
		mov    $_0c089c_data,%esi
		call   _07b4e8_func
		mov    %eax,%ebx
		mov    %eax,(%esp)
		mov    %ebx,%edi
		movb   $0x000000,(%eax)
		call   _01cb80_func
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    $_0c08a4_data,%esi
		mov    %ebx,%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044826_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04483e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044826_jump

	_04483e_jump:
		pop    %edi
		mov    $_0c093c_data,%esi
		mov    $_0c08a8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044852_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04486a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044852_jump

	_04486a_jump:
		pop    %edi
		mov    %ebx,%eax
		call   _07d470_func
		mov    %eax,%esi
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _0448a8_jump
		mov    $0x0000c8,%eax
		call   _07b4e8_func
		push   %ebx
		push   $_0c0948_data
		push   %eax
		mov    %eax,%edx
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func
		jmp    _044c0b_jump

	_0448a8_jump:
		mov    _092202_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		mov    $0x000001,%ebx
		shl    $0x000005,%edi
		mov    %eax,0x000008(%esp)
		add    %eax,%edi
		mov    $_0dfc48_data,%eax
		shl    $0x000002,%edi
		mov    $0x000004,%edx
		add    %edi,%eax
		mov    %esi,%ecx
		add    $0x000028,%eax
		call   _07c67d_func
		mov    0x000018(%esp),%eax
		mov    _0dfc70_data(%edi),%edx
		call   _07b1c0_func
		mov    %esi,%ecx
		mov    $0x000001,%edx
		mov    _0dfc70_data(%edi),%ebx
		mov    %eax,_0dfc50_data(%edi)
		call   _07c67d_func
		mov    %edi,%esi
		mov    _0dfc70_data(%edi),%edx
		xor    %eax,%eax
		test   %edx,%edx
		jle    _044921_jump

	_04490e_jump:
		mov    _0dfc50_data(%esi),%edx
		xorb   $0x00008f,(%edx,%eax,1)
		inc    %eax
		cmp    _0dfc70_data(%esi),%eax
		jl     _04490e_jump

	_044921_jump:
		mov    $_0dfc48_data,%edi
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		add    %esi,%edi
		mov    %ebp,%ecx
		lea    0x000044(%edi),%eax
		call   _07c67d_func
		xor    %edx,%edx
		mov    _0dfc8c_data(%esi),%dx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    0x000018(%esp),%eax
		xor    %ebx,%ebx
		call   _07b1c0_func
		mov    $0x00000c,%edx
		mov    _0dfc8c_data(%esi),%bx
		mov    %eax,_0dfc48_data(%esi)
		call   _07c67d_func
		mov    $0x000001,%ebx
		lea    0x000080(%edi),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		xor    %edx,%edx
		mov    _0dfcc8_data(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    0x000018(%esp),%eax
		call   _07b1c0_func
		mov    %eax,_0dfc4c_data(%esi)
		mov    0x000008(%esp),%eax
		mov    %eax,%edi
		xor    %ecx,%ecx
		shl    $0x000005,%edi
		mov    %ecx,0x00000c(%esp)
		add    %eax,%edi
		xor    %esi,%esi
		shl    $0x000002,%edi
		jmp    _044ac0_jump

	_0449cf_jump:
		mov    $0x000001,%ebx
		mov    _0dfc4c_data(%edi),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000008,%eax
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    _0dfc4c_data(%edi),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x00000a,%eax
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    _0dfc4c_data(%edi),%eax
		mov    $0x000004,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000004,%eax
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x00001c(%esp),%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		xor    %edx,%edx
		mov    0x000018(%esp),%eax
		mov    0x00001c(%esp),%dx
		call   _07b1c0_func
		mov    _0dfc4c_data(%edi),%edx
		mov    %ebp,%ecx
		mov    %eax,(%edx,%esi,1)
		xor    %ebx,%ebx
		mov    _0dfc4c_data(%edi),%eax
		mov    0x00001c(%esp),%bx
		mov    $0x000001,%edx
		mov    (%esi,%eax,1),%eax
		call   _07c67d_func
		mov    _0dfc4c_data(%edi),%eax
		add    %esi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _044ab4_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    0x000018(%esp),%eax
		shl    $0x000002,%edx
		call   _07b1c0_func
		mov    _0dfc4c_data(%edi),%edx
		mov    %eax,0x000004(%edx,%esi,1)
		mov    %ebp,%ecx
		mov    _0dfc4c_data(%edi),%eax
		xor    %ebx,%ebx
		mov    $0x000004,%edx
		mov    0x00000a(%esi,%eax,1),%bx
		mov    0x000004(%esi,%eax,1),%eax
		call   _07c67d_func

	_044ab4_jump:
		mov    0x00000c(%esp),%ebx
		inc    %ebx
		add    $0x00000c,%esi
		mov    %ebx,0x00000c(%esp)

	_044ac0_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%edx
		mov    _0dfcc8_data(%edi),%al
		cmp    %edx,%eax
		jg     _0449cf_jump
		mov    $0x000001,%ebx
		mov    $_0ceee0_data,%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		xor    %ebx,%ebx
		mov    %ebx,0x000010(%esp)
		mov    %ebx,0x000014(%esp)
		jmp    _044ba2_jump

	_044af6_jump:
		mov    $0x000001,%ebx
		lea    0x000024(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		xor    %edx,%edx
		mov    0x000024(%esp),%dl
		mov    0x000018(%esp),%eax
		shl    $0x000002,%edx
		xor    %edi,%edi
		call   _07b1c0_func
		mov    0x000014(%esp),%edx
		xor    %esi,%esi
		mov    %edx,0x000004(%esp)
		mov    %eax,_0cc208_data(%edx)
		jmp    _044b84_jump

	_044b2e_jump:
		mov    $0x000001,%ebx
		lea    0x000020(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		mov    0x000018(%esp),%eax
		shl    $0x000003,%edx
		call   _07b1c0_func
		mov    0x000004(%esp),%edx
		add    $0x000004,%esi
		mov    _0cc208_data(%edx),%edx
		mov    %eax,-0x000004(%edx,%esi,1)
		mov    0x000004(%esp),%eax
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    _0cc208_data(%eax),%eax
		mov    0x000020(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%esi,%eax,1),%eax
		inc    %edi
		call   _07c67d_func

	_044b84_jump:
		xor    %eax,%eax
		mov    0x000024(%esp),%al
		cmp    %eax,%edi
		jl     _044b2e_jump
		mov    0x000014(%esp),%esi
		mov    0x000010(%esp),%edi
		add    $0x000004,%esi
		inc    %edi
		mov    %esi,0x000014(%esp)
		mov    %edi,0x000010(%esp)

	_044ba2_jump:
		xor    %eax,%eax
		mov    0x000010(%esp),%ecx
		mov    _0ceee0_data,%al
		cmp    %ecx,%eax
		jg     _044af6_jump
		mov    _092202_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		mov    $_0dfc48_data,%esi
		shl    $0x000005,%eax
		mov    $0x000084,%ecx
		add    %edx,%eax
		mov    $_0cdbc8_data,%edi
		shl    $0x000002,%eax
		mov    _0cc208_data,%edx
		add    %eax,%esi
		mov    %edx,_0dfc54_data(%eax)
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _092204_data,%dx
		inc    %edx
		mov    %ebp,%eax
		mov    %dx,_092204_data
		call   _07d524_func

	_044c0b_jump:
		mov    (%esp),%eax
		call   _07b680_func
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_044c20_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		call   _01cb80_func
		mov    $0x000064,%eax
		call   _07b4e8_func
		mov    _0ccce4_data,%edx
		mov    %eax,%ebx
		mov    %eax,0x00000c(%esp)
		mov    $_0ccca8_data,%eax
		call   _07b3e0_func
		mov    $_0ccc98_data,%eax
		mov    _0ccce0_data,%edx
		call   _07b3e0_func
		mov    $_0cccc8_data,%eax
		mov    _0cccec_data,%edx
		call   _07b3e0_func
		mov    $_0cccbc_data,%eax
		mov    _0ccce8_data,%edx
		call   _07b3e0_func
		cmpw   $0x000000,_0ced38_data
		je     _044c91_jump
		mov    _0c0898_data,%eax
		mov    %eax,(%ebx)
		jmp    _044c94_jump

	_044c91_jump:
		movb   $0x000000,(%ebx)

	_044c94_jump:
		mov    $_0c089c_data,%esi
		mov    0x00000c(%esp),%edi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044ca6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044cbe_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044ca6_jump

	_044cbe_jump:
		pop    %edi
		mov    $_0c08a4_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044ccd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044ce5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044ccd_jump

	_044ce5_jump:
		pop    %edi
		mov    $_0c0970_data,%esi
		mov    $_0c08a8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_044cf9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _044d11_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _044cf9_jump

	_044d11_jump:
		pop    %edi
		mov    %edi,%eax
		call   _07d470_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _044d4d_jump
		mov    $0x0000c8,%eax
		call   _07b4e8_func
		push   %edi
		push   $_0c097c_data
		push   %eax
		mov    %eax,%edx
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func
		jmp    _0453fd_jump

	_044d4d_jump:
		mov    $0x000001,%ebx
		mov    %eax,%ecx
		mov    $_0ceee0_data,%eax
		mov    %ebx,%edx
		call   _07c67d_func
		mov    _0ceee0_data,%al
		xor    %edx,%edx
		mov    %al,_0ceedf_data
		mov    %edx,(%esp)
		jmp    _044e0c_jump

	_044d74_jump:
		mov    $0x000001,%ebx
		lea    0x00001c(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		mov    $_0cccbc_data,%eax
		shl    $0x000002,%edx
		call   _07b1c0_func
		mov    (%esp),%edx
		xor    %edi,%edi
		xor    %esi,%esi
		mov    %eax,_0cc208_data(,%edx,4)
		jmp    _044dff_jump

	_044da9_jump:
		mov    $0x000001,%ebx
		lea    0x000014(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		xor    %edx,%edx
		mov    0x000014(%esp),%dl
		mov    $_0cccbc_data,%eax
		shl    $0x000003,%edx
		call   _07b1c0_func
		mov    (%esp),%edx
		mov    _0cc208_data(,%edx,4),%edx
		mov    %eax,(%edx,%esi,1)
		add    $0x000004,%esi
		mov    (%esp),%eax
		mov    %ebp,%ecx
		xor    %ebx,%ebx
		mov    _0cc208_data(,%eax,4),%eax
		mov    0x000014(%esp),%bl
		mov    $0x000008,%edx
		mov    -0x000004(%esi,%eax,1),%eax
		inc    %edi
		call   _07c67d_func

	_044dff_jump:
		xor    %eax,%eax
		mov    0x00001c(%esp),%al
		cmp    %eax,%edi
		jl     _044da9_jump
		incl   (%esp)

	_044e0c_jump:
		xor    %eax,%eax
		mov    (%esp),%ecx
		mov    _0ceee0_data,%al
		cmp    %ecx,%eax
		jg     _044d74_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_092204_data,%eax
		mov    %ebp,%ecx
		mov    $0x000001,%esi
		call   _07c67d_func
		mov    _092204_data,%ax
		mov    %esi,(%esp)
		mov    %ax,_092206_data
		jmp    _0451b0_jump

	_044e4d_jump:
		imul   $0x000084,%edx,%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0dfc48_data,%eax
		mov    $0x000004,%edx
		add    $0x00000c,%eax
		call   _07c67d_func
		imul   $0x000084,(%esp),%eax
		mov    _0dfc54_data(%eax),%esi
		cmp    $0xffffffff,%esi
		jne    _044e88_jump
		xor    %edi,%edi
		mov    %edi,_0dfc54_data(%eax)
		jmp    _044e95_jump

	_044e88_jump:
		mov    _0cc208_data(,%esi,4),%edx
		mov    %edx,_0dfc54_data(%eax)

	_044e95_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cc45c_data,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cc468_data,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0dfc48_data,%eax
		mov    $0x000004,%edx
		add    $0x000028,%eax
		call   _07c67d_func
		imul   $0x000084,(%esp),%edx
		mov    $_0ccca8_data,%eax
		mov    _0dfc70_data(%edx),%edx
		call   _07b1c0_func
		mov    (%esp),%ecx
		mov    %eax,%edx
		imul   $0x000084,%ecx,%eax
		mov    %ebp,%ecx
		mov    _0dfc70_data(%eax),%ebx
		mov    %edx,_0dfc50_data(%eax)
		mov    %edx,%eax
		mov    $0x000001,%edx
		call   _07c67d_func
		mov    $0x000001,%ebx
		lea    0x000018(%esp),%eax
		mov    %ebp,%ecx
		mov    %ebx,%edx
		call   _07c67d_func
		xor    %edx,%edx
		jmp    _044f51_jump

	_044f33_jump:
		mov    _0dfc50_data(%eax),%esi
		mov    0x000018(%esp),%bl
		mov    (%edx,%esi,1),%al
		sub    %al,%bl
		mov    %bl,0x000018(%esp)
		mov    (%edx,%esi,1),%bh
		inc    %edx
		xor    $0x00008f,%bh
		mov    %bh,-0x000001(%edx,%esi,1)

	_044f51_jump:
		imul   $0x000084,(%esp),%eax
		cmp    _0dfc70_data(%eax),%edx
		jl     _044f33_jump
		cmpb   $0x000000,0x000018(%esp)
		je     _044f94_jump
		mov    $0x0000c8,%eax
		call   _07b4e8_func
		mov    %eax,%edx
		mov    0x00000c(%esp),%eax
		push   %eax
		push   $_0c08d0_data
		push   %edx
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func

	_044f94_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cc460_data,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0dfc48_data,%eax
		mov    $0x000002,%edx
		add    $0x000044,%eax
		call   _07c67d_func
		imul   $0x000084,(%esp),%edx
		mov    _0dfc8c_data(%edx),%dx
		and    $0x00ffff,%edx
		imul   $0x00000c,%edx,%edx
		mov    $_0cccbc_data,%eax
		call   _07b1c0_func
		mov    (%esp),%ecx
		mov    %eax,%edx
		imul   $0x000084,%ecx,%eax
		xor    %ebx,%ebx
		mov    %ebp,%ecx
		mov    _0dfc8c_data(%eax),%bx
		mov    %edx,_0dfc48_data(%eax)
		mov    %edx,%eax
		mov    $0x00000c,%edx
		call   _07c67d_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    %ebp,%ecx
		add    $_0dfc48_data,%eax
		mov    %ebx,%edx
		add    $0x000080,%eax
		call   _07c67d_func
		imul   $0x000084,(%esp),%eax
		cmpb   $0x000000,_0dfcc8_data(%eax)
		je     _0451a5_jump
		xor    %edx,%edx
		mov    _0dfcc8_data(%eax),%dl
		imul   $0x00000c,%edx,%edx
		mov    $_0cccbc_data,%eax
		call   _07b1c0_func
		imul   $0x000084,(%esp),%edx
		xor    %edi,%edi
		xor    %esi,%esi
		mov    %eax,_0dfc4c_data(%edx)
		jmp    _04518d_jump

	_045071_jump:
		mov    $0x000001,%ebx
		mov    _0dfc4c_data(%eax),%eax
		mov    $0x000002,%edx
		add    %esi,%eax
		mov    %ebp,%ecx
		add    $0x000008,%eax
		call   _07c67d_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000001,%ebx
		mov    _0dfc4c_data(%eax),%eax
		mov    %ebp,%ecx
		add    %esi,%eax
		mov    $0x000002,%edx
		add    $0x00000a,%eax
		call   _07c67d_func
		imul   $0x000084,(%esp),%eax
		mov    $0x000004,%edx
		mov    _0dfc4c_data(%eax),%eax
		mov    %ebp,%ecx
		add    %esi,%eax
		mov    $0x000001,%ebx
		add    $0x000004,%eax
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		lea    0x000010(%esp),%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		xor    %edx,%edx
		mov    $_0cccbc_data,%eax
		mov    0x000010(%esp),%dx
		call   _07b1c0_func
		imul   $0x000084,(%esp),%edx
		mov    _0dfc4c_data(%edx),%edx
		mov    %eax,(%edx,%esi,1)
		imul   $0x000084,(%esp),%eax
		xor    %ebx,%ebx
		mov    %ebp,%ecx
		mov    _0dfc4c_data(%eax),%eax
		mov    0x000010(%esp),%bx
		mov    $0x000001,%edx
		mov    (%esi,%eax,1),%eax
		call   _07c67d_func
		imul   $0x000084,(%esp),%eax
		mov    _0dfc4c_data(%eax),%eax
		add    %esi,%eax
		cmpl   $0xffffffff,0x000004(%eax)
		je     _045189_jump
		xor    %edx,%edx
		mov    0x00000a(%eax),%dx
		mov    $_0cccbc_data,%eax
		shl    $0x000002,%edx
		call   _07b1c0_func
		imul   $0x000084,(%esp),%edx
		mov    _0dfc4c_data(%edx),%edx
		mov    %eax,0x000004(%edx,%esi,1)
		imul   $0x000084,(%esp),%eax
		xor    %ebx,%ebx
		mov    _0dfc4c_data(%eax),%eax
		mov    $0x000004,%edx
		mov    %ebp,%ecx
		mov    0x00000a(%esi,%eax,1),%bx
		mov    0x000004(%esi,%eax,1),%eax
		call   _07c67d_func

	_045189_jump:
		add    $0x00000c,%esi
		inc    %edi

	_04518d_jump:
		imul   $0x000084,(%esp),%eax
		xor    %edx,%edx
		mov    _0dfcc8_data(%eax),%dl
		cmp    %edx,%edi
		jge    _0451ad_jump
		jmp    _045071_jump

	_0451a5_jump:
		xor    %edx,%edx
		mov    %edx,_0dfc4c_data(%eax)

	_0451ad_jump:
		incl   (%esp)

	_0451b0_jump:
		mov    _092202_data,%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _044e4d_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cc464_data,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    (%esp),%edx
		mov    %edx,%eax
		mov    $_0dfc48_data,%esi
		shl    $0x000005,%eax
		mov    $_0cda94_data,%edi
		add    %edx,%eax
		mov    $0x000084,%ecx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%esi
		mov    $0x000004,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0dfc48_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0cdb24_data
		mov    _0dfc50_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0cdb28_data
		mov    _0dfc8c_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0cdb2c_data
		mov    %esp,%eax
		call   _07c67d_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0dfc48_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0ce210_data
		mov    _0dfc50_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0ce214_data
		mov    _0dfc8c_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0ce218_data
		mov    %esp,%eax
		call   _07c67d_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0dfc48_data(,%eax,4),%edx
		mov    $0x000001,%ebx
		mov    %edx,_0cdc4c_data
		mov    _0dfc50_data(,%eax,4),%edx
		mov    %ebp,%ecx
		mov    %edx,_0cdc54_data
		mov    _0dfc8c_data(,%eax,4),%ax
		mov    $0x000004,%edx
		mov    %ax,_0cdc90_data
		mov    %esp,%eax
		call   _07c67d_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0dfc48_data(,%eax,4),%edx
		mov    _0dfc4c_data(,%eax,4),%ebx
		mov    _0dfcc8_data(,%eax,4),%cl
		mov    %edx,0x000008(%esp)
		mov    _0dfc50_data(,%eax,4),%edx
		mov    _0dfc54_data(,%eax,4),%esi
		mov    %edx,0x000004(%esp)
		mov    _0dfc8c_data(,%eax,4),%dx
		xor    %eax,%eax

	_04533b_jump:
		add    $0x000084,%eax
		mov    %ebx,_0ccc9c_data(%eax)
		mov    %dx,_0cccdc_data(%eax)
		mov    %cl,_0ccd18_data(%eax)
		mov    0x000008(%esp),%edi
		mov    %esi,_0ccca4_data(%eax)
		mov    %edi,_0ccc98_data(%eax)
		mov    0x000004(%esp),%edi
		mov    %edi,_0ccca0_data(%eax)
		cmp    $0x000c60,%eax
		jne    _04533b_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    (%esp),%edx
		mov    %edx,%eax
		mov    $_0dfc48_data,%esi
		shl    $0x000005,%eax
		mov    $_0ce18c_data,%edi
		add    %edx,%eax
		mov    $0x000084,%ecx
		shl    $0x000002,%eax
		mov    $0x000001,%ebx
		add    %eax,%esi
		mov    $0x000004,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %esp,%eax
		mov    %ebp,%ecx
		call   _07c67d_func
		mov    (%esp),%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $_0dfc48_data,%esi
		add    %edx,%eax
		mov    $_0cdb30_data,%edi
		shl    $0x000002,%eax
		mov    $0x000084,%ecx
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    %ebp,%eax
		call   _07d524_func

	_0453fd_jump:
		mov    $0x0004b0,%edx
		mov    $_0cccbc_data,%eax
		call   _07b1c0_func
		mov    %eax,_0ccbf8_data
		mov    $_0ccca8_data,%eax
		call   _07b758_func
		mov    0x00000c(%esp),%eax
		call   _07b680_func
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_045430_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000ac,%esp
		mov    %eax,0x00008c(%esp)
		mov    %edx,0x000090(%esp)
		mov    %ebx,%ebp
		mov    %ecx,0x000084(%esp)
		call   _01cb80_func
		mov    $0x000064,%eax
		call   _07b4e8_func
		mov    _0ced38_data,%dx
		mov    %eax,0x000094(%esp)
		test   %dx,%dx
		je     _04547c_jump
		mov    _0c0898_data,%edx
		mov    %edx,(%eax)
		jmp    _04547f_jump

	_04547c_jump:
		movb   $0x000000,(%eax)

	_04547f_jump:
		mov    $_0c09a4_data,%esi
		mov    0x000094(%esp),%edi
		mov    $_0c08a8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_045499_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0454b1_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _045499_jump

	_0454b1_jump:
		pop    %edi
		mov    %edi,%eax
		call   _07d470_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _0454e8_jump
		mov    $0x0000c8,%eax
		call   _07b4e8_func
		push   %edi
		push   $_0c09b0_data
		push   %eax
		mov    %eax,%edx
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func

	_0454e8_jump:
		mov    0x000090(%esp),%edx
		lea    0x000000(,%edx,4),%edi
		sub    %edx,%edi
		shl    $0x000002,%edi
		mov    _092165_data(%edi),%al
		mov    %al,0x0000a4(%esp)
		mov    _092160_data(%edi),%eax
		xor    %ebx,%ebx
		sub    $0x000080,%eax
		mov    _09215c_data(%edi),%edx
		mov    %eax,0x000080(%esp)
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _07c89a_func
		mov    $0x000001,%ebx
		mov    $0x000080,%edx
		mov    %esp,%eax
		call   _07c67d_func
		mov    %edi,%ebx
		xor    %eax,%eax

	_045540_jump:
		mov    (%esp,%eax,1),%dl
		mov    0x0000a4(%esp),%dh
		sub    %dl,%dh
		mov    (%esp,%eax,1),%cl
		mov    %dh,0x0000a4(%esp)
		mov    _092164_data(%ebx),%dl
		inc    %eax
		xor    %dl,%cl
		mov    %cl,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _045540_jump
		mov    0x000008(%esp),%eax
		sub    0x000004(%esp),%eax
		inc    %eax
		mov    %ax,0x000000(%ebp)
		mov    0x00000a(%esp),%eax
		sub    0x000006(%esp),%eax
		mov    0x000084(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x000084(%esp),%ebx
		mov    0x000042(%esp),%eax
		xor    %edx,%edx
		mov    %eax,0x0000a0(%esp)
		xor    %eax,%eax
		mov    (%ebx),%dx
		mov    0x000000(%ebp),%ax
		imul   %eax,%edx
		mov    %esi,%ecx
		mov    0x00008c(%esp),%eax
		mov    0x000080(%esp),%ebx
		call   _07b1c0_func
		mov    %eax,%edi
		mov    0x000080(%esp),%eax
		mov    $0x000001,%edx
		call   _07b4e8_func
		mov    %eax,0x000098(%esp)
		mov    %eax,0x000088(%esp)
		call   _07c67d_func
		mov    %esi,%eax
		mov    0x000080(%esp),%ecx
		call   _07d524_func
		test   %ecx,%ecx
		jbe    _045636_jump
		mov    0x000090(%esp),%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		mov    0x000098(%esp),%eax
		shl    $0x000002,%ebx
		lea    (%eax,%ecx,1),%esi

	_045614_jump:
		mov    0x0000a4(%esp),%ch
		sub    (%eax),%ch
		mov    _092164_data(%ebx),%dl
		mov    (%eax),%dh
		inc    %eax
		xor    %dl,%dh
		mov    %ch,0x0000a4(%esp)
		mov    %dh,-0x000001(%eax)
		cmp    %esi,%eax
		jb     _045614_jump

	_045636_jump:
		cmpb   $0x000000,0x0000a4(%esp)
		je     _045678_jump
		mov    $0x0000c8,%eax
		mov    0x000090(%esp),%esi
		call   _07b4e8_func
		push   %esi
		mov    %eax,%edx
		mov    0x000098(%esp),%eax
		push   %eax
		push   $_0c09c4_data
		push   %edx
		call   _07c07b_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func

	_045678_jump:
		test   %edi,%edi
		je     _045762_jump
		cmpl   $0x000000,0x000088(%esp)
		je     _045762_jump
		xor    %ebx,%ebx
		xor    %esi,%esi
		mov    %ebx,0x00009c(%esp)
		jmp    _045740_jump

	_04569e_jump:
		xor    %eax,%eax

	_0456a0_jump:
		mov    0x00009c(%esp),%edx
		mov    0x000088(%esp),%ecx
		lea    0x000001(%edx),%ebx
		add    %ecx,%edx
		mov    (%edx),%dl
		mov    %dl,0x0000a8(%esp)
		and    $0x0000c0,%dl
		mov    %ebx,0x00009c(%esp)
		cmp    $0x0000c0,%dl
		jne    _045715_jump
		mov    0x0000a8(%esp),%dl
		and    $0x00003f,%dl
		lea    0x000001(%ebx),%ecx
		mov    %ecx,0x00009c(%esp)
		add    0x000088(%esp),%ebx
		mov    (%ebx),%bl
		and    $0x0000ff,%edx
		mov    %bl,0x0000a8(%esp)

	_0456f5_jump:
		dec    %edx
		cmp    $0xffffffff,%edx
		je     _04572d_jump
		xor    %ebx,%ebx
		mov    0x000000(%ebp),%bx
		imul   %esi,%ebx
		mov    %eax,%ecx
		add    %ecx,%ebx
		mov    0x0000a8(%esp),%cl
		inc    %eax
		mov    %cl,(%edi,%ebx,1)
		jmp    _0456f5_jump

	_045715_jump:
		xor    %edx,%edx
		mov    0x000000(%ebp),%dx
		imul   %esi,%edx
		mov    %eax,%ebx
		add    %ebx,%edx
		mov    0x0000a8(%esp),%bl
		inc    %eax
		mov    %bl,(%edx,%edi,1)

	_04572d_jump:
		xor    %edx,%edx
		mov    0x0000a0(%esp),%dx
		cmp    %edx,%eax
		jb     _0456a0_jump
		inc    %esi

	_045740_jump:
		mov    0x000084(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%ax
		cmp    %eax,%esi
		jb     _04569e_jump
		mov    0x000088(%esp),%eax
		call   _07b680_func
		jmp    _04576c_jump

	_045762_jump:
		mov    $_0c09e8_data,%eax
		call   _01f3a4_func

	_04576c_jump:
		mov    0x000094(%esp),%eax
		call   _07b680_func
		mov    %edi,%eax
		add    $0x0000ac,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_045784_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ebx
		mov    %edx,(%esp)
		call   _01cb80_func
		mov    $0x000064,%eax
		call   _07b4e8_func
		mov    _0ced38_data,%dx
		mov    %eax,%ebp
		test   %dx,%dx
		je     _0457b8_jump
		mov    _0c0898_data,%edx
		mov    %edx,(%eax)
		jmp    _0457bb_jump

	_0457b8_jump:
		movb   $0x000000,(%eax)

	_0457bb_jump:
		mov    $_0c09a4_data,%esi
		mov    %ebp,%edi
		mov    $_0c08a8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0457d0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0457e8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0457d0_jump

	_0457e8_jump:
		pop    %edi
		mov    %ebp,%eax
		call   _07d470_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _04581f_jump
		mov    $0x0000c8,%eax
		call   _07b4e8_func
		push   %ebp
		push   $_0c09b0_data
		push   %eax
		mov    %eax,%edx
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func

	_04581f_jump:
		lea    0x000000(,%ebx,4),%edi
		sub    %ebx,%edi
		shl    $0x000002,%edi
		mov    _09215c_data(%edi),%eax
		add    _092160_data(%edi),%eax
		lea    -0x000300(%eax),%edx
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _07c89a_func
		mov    $0x000001,%ebx
		mov    $0x000300,%edx
		mov    (%esp),%eax
		call   _07c67d_func
		mov    %esi,%eax
		mov    (%esp),%ebx
		call   _07d524_func
		mov    %edi,%esi
		lea    0x000300(%ebx),%ecx

	_04586c_jump:
		mov    _092164_data(%esi),%dl
		mov    (%ebx),%ah
		xor    %dl,%ah
		xor    %edx,%edx
		mov    %ah,%dl
		mov    %ah,(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		inc    %ebx
		mov    %al,-0x000001(%ebx)
		cmp    %ecx,%ebx
		jne    _04586c_jump
		mov    %ebp,%eax
		call   _07b680_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0458a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000c0,%esp
		mov    %eax,0x000080(%esp)
		cmpb   $0x000000,_0cee64_data
		je     _045e7b_jump
		call   _01cb80_func
		mov    $0x000064,%eax
		xor    %dl,%dl
		call   _07b4e8_func
		mov    %dl,0x0000b4(%esp)
		mov    _0ced38_data,%dx
		mov    %eax,0x000084(%esp)
		test   %dx,%dx
		je     _0458f9_jump
		mov    _0c0898_data,%edx
		mov    %edx,(%eax)
		jmp    _0458fc_jump

	_0458f9_jump:
		movb   $0x000000,(%eax)

	_0458fc_jump:
		mov    $_0c09a4_data,%esi
		mov    0x000084(%esp),%edi
		mov    $_0c08a8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_045916_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04592e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _045916_jump

	_04592e_jump:
		pop    %edi
		mov    %edi,%eax
		call   _07d470_func
		mov    %eax,0x0000a0(%esp)
		test   %eax,%eax
		jne    _04596a_jump
		mov    $0x0000c8,%eax
		call   _07b4e8_func
		push   %edi
		push   $_0c09b0_data
		push   %eax
		mov    %eax,%edx
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func

	_04596a_jump:
		mov    0x000080(%esp),%edx
		lea    0x000000(,%edx,4),%esi
		sub    %edx,%esi
		mov    0x0000a0(%esp),%ecx
		shl    $0x000002,%esi
		xor    %ebx,%ebx
		mov    _092165_data(%esi),%al
		mov    _09215c_data(%esi),%edx
		mov    %al,0x0000b8(%esp)
		mov    0x0000a0(%esp),%eax
		mov    _092160_data(%esi),%ebp
		call   _07c89a_func
		mov    $0x000001,%ebx
		mov    $0x000080,%edx
		mov    %esp,%eax
		sub    $0x000080,%ebp
		call   _07c67d_func
		mov    %esi,%ebx
		xor    %eax,%eax

	_0459c6_jump:
		mov    (%esp,%eax,1),%dl
		mov    0x0000b8(%esp),%dh
		sub    %dl,%dh
		mov    (%esp,%eax,1),%cl
		mov    %dh,0x0000b8(%esp)
		mov    _092164_data(%ebx),%dl
		inc    %eax
		xor    %dl,%cl
		mov    %cl,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _0459c6_jump
		mov    0x000008(%esp),%edi
		mov    0x00000a(%esp),%eax
		mov    0x000006(%esp),%ecx
		mov    0x000004(%esp),%ebx
		sub    %ecx,%eax
		sub    %ebx,%edi
		inc    %eax
		mov    _0cee64_data,%ch
		mov    %eax,0x0000b0(%esp)
		mov    0x000042(%esp),%eax
		inc    %edi
		mov    %eax,0x0000ac(%esp)
		cmp    $0x000002,%ch
		jne    _045a4d_jump
		mov    _0cc528_data,%eax
		mov    _0cc534_data,%esi
		mov    %eax,0x000088(%esp)
		cmp    $0x01f400,%ebp
		jle    _045a61_jump
		mov    $0x000001,%al
		mov    $0x01f400,%ebp
		mov    %al,0x0000b4(%esp)
		jmp    _045a61_jump

	_045a4d_jump:
		mov    %ebp,%eax
		call   _07b4e8_func
		mov    _0ccc1c_data,%esi
		mov    %eax,0x000088(%esp)

	_045a61_jump:
		mov    0x0000a0(%esp),%ecx
		mov    $0x000001,%edx
		mov    0x000088(%esp),%eax
		mov    %ebp,%ebx
		call   _07c67d_func
		mov    0x0000a0(%esp),%eax
		call   _07d524_func
		xor    %edx,%edx
		test   %ebp,%ebp
		jle    _045ac3_jump
		mov    0x000080(%esp),%eax
		lea    0x000000(,%eax,4),%ecx
		sub    %eax,%ecx
		mov    0x000088(%esp),%eax
		shl    $0x000002,%ecx

	_045aa7_jump:
		mov    (%eax),%bl
		sub    %bl,0x0000b8(%esp)
		mov    _092164_data(%ecx),%bl
		mov    (%eax),%bh
		inc    %eax
		xor    %bl,%bh
		inc    %edx
		mov    %bh,-0x000001(%eax)
		cmp    %ebp,%edx
		jl     _045aa7_jump

	_045ac3_jump:
		cmpb   $0x000000,0x0000b4(%esp)
		jne    _045b0f_jump
		cmpb   $0x000000,0x0000b8(%esp)
		je     _045b0f_jump
		mov    $0x0000c8,%eax
		mov    0x000080(%esp),%ecx
		call   _07b4e8_func
		push   %ecx
		mov    0x000088(%esp),%ebp
		push   %ebp
		push   $_0c0a14_data
		push   %eax
		mov    %eax,%edx
		call   _07c07b_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func

	_045b0f_jump:
		mov    0x000084(%esp),%eax
		call   _07b680_func
		test   %esi,%esi
		je     _045e2d_jump
		cmpl   $0x000000,0x000088(%esp)
		je     _045e2d_jump
		cmpb   $0x000002,_0cee64_data
		je     _045b47_jump
		cmpb   $0x000001,_0cee5d_data
		jne    _045cc2_jump

	_045b47_jump:
		xor    %ecx,%ecx
		mov    0x0000b0(%esp),%eax
		mov    %ecx,0x000094(%esp)
		mov    %ecx,0x00009c(%esp)
		cmp    $0x0000c8,%ax
		jbe    _045b98_jump
		xor    %eax,%eax
		mov    0x0000b0(%esp),%ax
		mov    $0x0000c8,%edx
		sub    $0x0000c8,%eax
		mov    %edx,0x0000b0(%esp)
		mov    0x0000b4(%esp),%dl
		mov    %eax,0x000094(%esp)
		test   %dl,%dl
		je     _045b98_jump
		mov    %ecx,0x000094(%esp)

	_045b98_jump:
		cmp    $0x000140,%di
		jbe    _045ba4_jump
		mov    $0x000140,%edi

	_045ba4_jump:
		xor    %edx,%edx
		mov    %edx,0x0000a4(%esp)
		jmp    _045c82_jump

	_045bb2_jump:
		mov    0x000094(%esp),%ecx
		mov    %ebx,%edx
		xor    %eax,%eax
		sub    %ecx,%edx

	_045bbf_jump:
		mov    0x00009c(%esp),%ebx
		mov    0x000088(%esp),%ecx
		lea    0x000001(%ebx),%ebp
		add    %ecx,%ebx
		mov    (%ebx),%bl
		mov    %bl,0x0000bc(%esp)
		and    $0x0000c0,%bl
		mov    %ebp,0x00009c(%esp)
		cmp    $0x0000c0,%bl
		jne    _045c44_jump
		mov    0x0000bc(%esp),%bl
		and    $0x00003f,%bl
		mov    %ebp,%ecx
		inc    %ebp
		mov    %ebp,0x00009c(%esp)
		add    0x000088(%esp),%ecx
		mov    (%ecx),%cl
		and    $0x0000ff,%ebx
		mov    %cl,0x0000bc(%esp)

	_045c14_jump:
		dec    %ebx
		cmp    $0xffffffff,%ebx
		je     _045c69_jump
		xor    %ecx,%ecx
		mov    %di,%cx
		cmp    %ecx,%eax
		jge    _045c41_jump
		test   %edx,%edx
		jl     _045c41_jump
		cmp    $0x0000c8,%edx
		jge    _045c41_jump
		imul   %edx,%ecx
		add    %eax,%ecx
		lea    (%esi,%ecx,1),%ebp
		mov    0x0000bc(%esp),%cl
		mov    %cl,0x000000(%ebp)

	_045c41_jump:
		inc    %eax
		jmp    _045c14_jump

	_045c44_jump:
		xor    %ebx,%ebx
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _045c68_jump
		test   %edx,%edx
		jl     _045c68_jump
		cmp    $0x0000c8,%edx
		jge    _045c68_jump
		imul   %edx,%ebx
		add    %eax,%ebx
		mov    0x0000bc(%esp),%cl
		mov    %cl,(%esi,%ebx,1)

	_045c68_jump:
		inc    %eax

	_045c69_jump:
		xor    %ebx,%ebx
		mov    0x0000ac(%esp),%bx
		cmp    %ebx,%eax
		jl     _045bbf_jump
		incl   0x0000a4(%esp)

	_045c82_jump:
		xor    %eax,%eax
		mov    0x000094(%esp),%edx
		mov    0x0000b0(%esp),%ax
		mov    0x0000a4(%esp),%ebx
		add    %edx,%eax
		cmp    %ebx,%eax
		jg     _045bb2_jump
		cmpb   $0x000002,_0cee64_data
		je     _045e37_jump
		mov    0x000088(%esp),%eax
		call   _07b680_func
		jmp    _045e37_jump

	_045cc2_jump:
		xor    %edx,%edx
		mov    %edx,0x000098(%esp)
		mov    %edx,0x0000a8(%esp)
		jmp    _045e06_jump

	_045cd7_jump:
		xor    %eax,%eax

	_045cd9_jump:
		mov    0x000098(%esp),%edx
		mov    0x000088(%esp),%ebp
		lea    0x000001(%edx),%ecx
		add    %ebp,%edx
		mov    (%edx),%dl
		mov    %dl,%dh
		and    $0x0000c0,%dh
		mov    %ecx,0x000098(%esp)
		cmp    $0x0000c0,%dh
		jne    _045d9d_jump
		and    $0x00003f,%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %ecx,%edx
		inc    %ecx
		add    %ebp,%edx
		mov    %ecx,0x000098(%esp)
		mov    (%edx),%dl

	_045d18_jump:
		dec    %ebx
		cmp    $0xffffffff,%ebx
		je     _045ded_jump
		mov    _095b15_data,%dh
		lea    0x000001(%eax),%ecx
		test   %dh,%dh
		jne    _045d78_jump
		movzwl %di,%ebp
		mov    %ebp,0x00008c(%esp)
		add    %ebp,%ebp
		imul   0x0000a8(%esp),%ebp
		mov    %ebp,0x000090(%esp)
		add    %eax,%ebp
		add    %esi,%ebp
		mov    %dl,0x000000(%ebp)
		mov    0x000090(%esp),%ebp
		add    0x00008c(%esp),%ebp
		mov    %ebp,0x000090(%esp)
		mov    %eax,%ebp
		mov    %ecx,%eax
		mov    0x000090(%esp),%ecx
		add    %ebp,%ecx
		mov    %dl,(%ecx,%esi,1)
		jmp    _045d18_jump

	_045d78_jump:
		movzwl %di,%ebp
		imul   0x0000a8(%esp),%ebp
		mov    %ebp,0x000090(%esp)
		mov    %eax,%ebp
		mov    %ecx,%eax
		add    0x000090(%esp),%ebp
		mov    %dl,(%esi,%ebp,1)
		jmp    _045d18_jump

	_045d9d_jump:
		mov    _095b15_data,%dh
		lea    0x000001(%eax),%ecx
		test   %dh,%dh
		jne    _045dd5_jump
		xor    %ebx,%ebx
		mov    %di,%bx
		mov    0x0000a8(%esp),%ebp
		mov    %ebx,0x000090(%esp)
		add    %ebx,%ebx
		imul   %ebp,%ebx
		lea    (%ebx,%eax,1),%ebp
		add    %esi,%ebp
		mov    %dl,0x000000(%ebp)
		add    0x000090(%esp),%ebx
		mov    %eax,%ebp
		jmp    _045de6_jump

	_045dd5_jump:
		xor    %ebx,%ebx
		mov    0x0000a8(%esp),%ebp
		mov    %di,%bx
		imul   %ebx,%ebp
		mov    %eax,%ebx

	_045de6_jump:
		add    %ebp,%ebx
		mov    %ecx,%eax
		mov    %dl,(%esi,%ebx,1)

	_045ded_jump:
		xor    %edx,%edx
		mov    0x0000ac(%esp),%dx
		cmp    %edx,%eax
		jl     _045cd9_jump
		incl   0x0000a8(%esp)

	_045e06_jump:
		xor    %eax,%eax
		mov    0x0000a8(%esp),%ebx
		mov    0x0000b0(%esp),%ax
		cmp    %ebx,%eax
		jg     _045cd7_jump
		mov    0x000088(%esp),%eax
		call   _07b680_func
		jmp    _045e37_jump

	_045e2d_jump:
		mov    $_0c0a38_data,%eax
		call   _01f3a4_func

	_045e37_jump:
		cmpb   $0x000000,_095b15_data
		jne    _045e62_jump
		mov    _0ccc30_data,%eax
		add    %edi,%edi
		mov    %eax,_0ccc1c_data
		mov    0x0000b0(%esp),%eax
		mov    %di,_0cec26_data
		mov    %ax,_0cec2a_data
		jmp    _045e7b_jump

	_045e62_jump:
		mov    _0ccc1c_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x0000b0(%esp),%bx
		mov    %di,%dx
		call   _045ee8_func

	_045e7b_jump:
		add    $0x0000c0,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_045e88_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %ebx,%esi
		cmpb   $0x000002,_0cee64_data
		jne    _045ea6_jump
		mov    _0cc534_data,%esi
		mov    _0cc528_data,%edx
		jmp    _045eda_jump

	_045ea6_jump:
		xor    %ebx,%ebx
		xor    %edi,%edi
		mov    %dx,%bx
		mov    %si,%di
		mov    %ebx,%edx
		imul   %edi,%edx
		mov    %ecx,%eax
		call   _07b1c0_func
		lea    0x000000(,%ebx,2),%edx
		imul   %edx,%edi
		mov    %eax,%esi
		lea    0x000000(,%ebx,8),%edx
		mov    %ecx,%eax
		add    %edi,%edx
		call   _07b1c0_func
		mov    %eax,%edx

	_045eda_jump:
		mov    %edx,_0ccc30_data
		mov    %esi,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_045ee8_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%esi
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x000018(%esp)
		xor    %eax,%eax
		mov    %dx,_0cec26_data
		mov    %dx,%ax
		xor    %edx,%edx
		mov    %bx,%dx
		mov    %eax,_0ccc0c_data
		imul   %edx,%eax
		mov    %bx,_0cec2a_data
		mov    %esi,0x000004(%esp)
		mov    _0ccc30_data,%esi
		mov    %eax,_0ccc24_data
		test   %esi,%esi
		jne    _045f36_jump
		mov    $_0c0a5c_data,%eax
		call   _01f3a4_func

	_045f36_jump:
		xor    %edi,%edi
		jmp    _045fe3_jump

	_045f3d_jump:
		mov    _0ccc0c_data,%edx
		xor    %eax,%eax
		test   %edx,%edx
		jbe    _045fe2_jump

	_045f4d_jump:
		mov    %eax,%edx
		mov    _0ccc24_data,%ebx
		and    $0x000003,%edx
		shr    %ebx
		imul   %ebx,%edx
		mov    %ebx,0x00000c(%esp)
		mov    %eax,%ebx
		shr    $0x000002,%ebx
		mov    %ebx,0x000010(%esp)
		add    %edx,%ebx
		mov    _0ccc0c_data,%edx
		mov    %edi,%ebp
		shr    %edx
		imul   %edx,%ebp
		mov    %ebp,0x000008(%esp)
		lea    (%ebx,%ebp,1),%edx
		xor    %ebx,%ebx
		mov    0x000014(%esp),%bx
		imul   %edi,%ebx
		mov    0x000004(%esp),%ebp
		add    %eax,%ebx
		add    %ebp,%ebx
		mov    _0ccc0c_data,%ebp
		mov    (%ebx),%cl
		shr    $0x000002,%ebp
		mov    %cl,(%edx,%esi,1)
		add    %ebp,%edx
		mov    %ebp,(%esp)
		lea    (%esi,%edx,1),%ebp
		mov    %cl,0x000000(%ebp)
		cmp    $0x000010,%edi
		jae    _045fd3_jump
		mov    0x00000c(%esp),%edx
		mov    0x000010(%esp),%ebp
		shl    $0x000002,%edx
		mov    0x000008(%esp),%ecx
		add    %ebp,%edx
		add    %ecx,%edx
		mov    (%ebx),%cl
		mov    (%esp),%ebp
		mov    %cl,(%edx,%esi,1)
		add    %ebp,%edx
		lea    (%esi,%edx,1),%ebp
		mov    %cl,0x000000(%ebp)

	_045fd3_jump:
		mov    _0ccc0c_data,%ebx
		inc    %eax
		cmp    %ebx,%eax
		jb     _045f4d_jump

	_045fe2_jump:
		inc    %edi

	_045fe3_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		cmp    %eax,%edi
		jb     _045f3d_jump
		mov    _0ccc0c_data,%eax
		mov    _0ccc24_data,%edx
		shr    %eax
		add    %edx,%edx
		mov    %eax,_0ccc0c_data
		mov    %edx,_0ccc24_data
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_046014_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		call   _01cb80_func
		mov    %esp,%ecx
		lea    0x000004(%esp),%ebx
		mov    %edi,%eax
		call   _045430_func
		mov    $_0c6d88_data,%edx
		mov    $0x000300,%ecx
		mov    $_0c6488_data,%edi
		mov    %eax,_0ccc20_data
		mov    %esi,%eax
		mov    $_0c6d88_data,%esi
		call   _045784_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		mov    0x000004(%esp),%ax
		mov    %eax,_0ccc00_data
		mov    %eax,_0ccc18_data
		xor    %eax,%eax
		mov    _0ccc18_data,%esi
		mov    (%esp),%ax
		imul   %eax,%esi
		mov    _0ccc18_data,%edx
		shr    $0x000002,%edx
		mov    %ax,_0cec28_data
		mov    %edx,_0ccc18_data
		mov    _0ccc20_data,%eax
		mov    %esi,_0ccc14_data
		mov    %eax,_0ccc34_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0460b0_func:
		push   %ebx
		push   %ecx
		cmpb   $0x00002c,(%eax)
		je     _0460d5_jump

	_0460b7_jump:
		mov    (%eax),%cl
		cmp    $0x00002a,%cl
		je     _0460d5_jump
		lea    0x000001(%eax),%ebx
		cmp    $0x000020,%cl
		jb     _0460ce_jump
		inc    %edx
		mov    %ebx,%eax
		mov    %cl,-0x000001(%edx)
		jmp    _0460d0_jump

	_0460ce_jump:
		mov    %ebx,%eax

	_0460d0_jump:
		cmpb   $0x00002c,(%eax)
		jne    _0460b7_jump

	_0460d5_jump:
		cmpb   $0x00002a,(%eax)
		jne    _0460df_jump
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_0460df_jump:
		inc    %eax
		movb   $0x000000,(%edx)
		pop    %ecx
		pop    %ebx
		ret    



_0460e8_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ebx
		mov    %edx,0x000008(%esp)
		call   _01cb80_func
		mov    $0x000064,%eax
		mov    $_0c08a8_data,%edx
		mov    $_0c0a8c_data,%esi
		call   _07b4e8_func
		mov    %eax,%edi
		mov    %eax,%ecx
		mov    %eax,0x000004(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   _07d470_func
		mov    %eax,%ebp
		test   %eax,%eax
		jne    _04614d_jump
		mov    $0x0000c8,%eax
		call   _07b4e8_func
		push   %ecx
		push   $_0c09b0_data
		push   %eax
		mov    %eax,%edx
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func

	_04614d_jump:
		mov    0x000008(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _092201_data(,%eax,4),%dl
		mov    _0921fc_data(,%eax,4),%eax
		mov    %dl,0x000014(%esp)
		mov    %eax,0x000010(%esp)
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _07b1c0_func
		mov    %eax,%edx
		mov    %eax,%esi
		mov    $0x000190,%eax
		call   _07b4e8_func
		mov    %eax,%edi
		mov    %eax,(%esp)
		test   %edx,%edx
		je     _046194_jump
		test   %eax,%eax
		jne    _04619e_jump

	_046194_jump:
		mov    $_0c0a94_data,%eax
		call   _01f3a4_func

	_04619e_jump:
		mov    0x000008(%esp),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%esp)
		mov    _0921f8_data(%eax),%edx
		mov    %ebp,%eax
		mov    %ebp,%ecx
		call   _07c89a_func
		mov    0x000010(%esp),%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _07c67d_func
		mov    %ebp,%eax
		mov    0x000010(%esp),%edx
		call   _07d524_func
		test   %edx,%edx
		jbe    _046206_jump
		mov    0x00000c(%esp),%edx
		mov    0x000010(%esp),%ecx
		mov    %esi,%eax
		add    %esi,%ecx

	_0461ee_jump:
		mov    (%eax),%bl
		sub    %bl,0x000014(%esp)
		mov    _092200_data(%edx),%bl
		mov    (%eax),%bh
		inc    %eax
		xor    %bl,%bh
		mov    %bh,-0x000001(%eax)
		cmp    %ecx,%eax
		jb     _0461ee_jump

	_046206_jump:
		cmpb   $0x000000,0x000014(%esp)
		je     _04623a_jump
		mov    $0x0000c8,%eax
		mov    0x000004(%esp),%ebx
		call   _07b4e8_func
		push   %ebx
		push   $_0c08d0_data
		push   %eax
		mov    %eax,%edx
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func

	_04623a_jump:
		mov    %esi,%ecx
		xor    %ebx,%ebx

	_04623e_jump:
		mov    %edi,%edx
		mov    %esi,%eax
		call   _0460b0_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _046263_jump
		xor    %edx,%edx
		mov    %bx,%dx
		inc    %ebx
		mov    %ecx,_0c22a8_data(,%edx,4)
		lea    0x000002(%eax),%ecx
		movb   $0x000000,-0x000001(%eax)
		jmp    _04623e_jump

	_046263_jump:
		mov    (%esp),%eax
		call   _07b680_func
		mov    0x000004(%esp),%eax
		call   _07b680_func
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_046280_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x0000a8,%esp
		mov    %eax,%ebp
		mov    %edx,0x000080(%esp)
		mov    %ebx,0x000094(%esp)
		mov    %ecx,0x000088(%esp)
		call   _01cb80_func
		mov    $0x000064,%eax
		call   _07b4e8_func
		mov    _0ced38_data,%dx
		mov    %eax,0x000084(%esp)
		test   %dx,%dx
		je     _0462cc_jump
		mov    _0c0898_data,%edx
		mov    %edx,(%eax)
		jmp    _0462cf_jump

	_0462cc_jump:
		movb   $0x000000,(%eax)

	_0462cf_jump:
		mov    $_0c09a4_data,%esi
		mov    0x000084(%esp),%edi
		mov    $_0c08a8_data,%edx
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0462e9_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _046301_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0462e9_jump

	_046301_jump:
		pop    %edi
		mov    %edi,%eax
		call   _07d470_func
		mov    %eax,%esi
		test   %eax,%eax
		jne    _046338_jump
		mov    $0x0000c8,%eax
		call   _07b4e8_func
		push   %edi
		push   $_0c09b0_data
		push   %eax
		mov    %eax,%edx
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func

	_046338_jump:
		mov    0x000080(%esp),%edx
		lea    0x000000(,%edx,4),%edi
		sub    %edx,%edi
		shl    $0x000002,%edi
		mov    _092165_data(%edi),%al
		mov    %al,0x0000a0(%esp)
		mov    _092160_data(%edi),%eax
		xor    %ebx,%ebx
		sub    $0x000080,%eax
		mov    _09215c_data(%edi),%edx
		mov    %eax,0x000090(%esp)
		mov    %esi,%eax
		mov    %esi,%ecx
		call   _07c89a_func
		mov    $0x000001,%ebx
		mov    $0x000080,%edx
		mov    %esp,%eax
		call   _07c67d_func
		mov    %edi,%ebx
		xor    %eax,%eax

	_046390_jump:
		mov    (%esp,%eax,1),%dl
		mov    0x0000a0(%esp),%dh
		sub    %dl,%dh
		mov    (%esp,%eax,1),%cl
		mov    %dh,0x0000a0(%esp)
		mov    _092164_data(%ebx),%dl
		inc    %eax
		xor    %dl,%cl
		mov    %cl,-0x000001(%esp,%eax,1)
		cmp    $0x000080,%eax
		jb     _046390_jump
		mov    0x000008(%esp),%eax
		sub    0x000004(%esp),%eax
		mov    0x000094(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x00000a(%esp),%eax
		sub    0x000006(%esp),%eax
		mov    0x000088(%esp),%edx
		inc    %eax
		mov    %ax,(%edx)
		mov    0x000090(%esp),%ebx
		mov    0x000042(%esp),%eax
		mov    %esi,%ecx
		mov    %eax,0x00009c(%esp)
		mov    0x000090(%esp),%eax
		mov    $0x000001,%edx
		call   _07b4e8_func
		mov    %eax,%edi
		mov    %eax,0x00008c(%esp)
		call   _07c67d_func
		mov    %esi,%eax
		mov    0x000090(%esp),%ecx
		call   _07d524_func
		test   %ecx,%ecx
		jbe    _04645f_jump
		mov    0x000080(%esp),%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		lea    (%ecx,%edi,1),%esi
		shl    $0x000002,%ebx
		mov    %edi,%eax

	_04643d_jump:
		mov    0x0000a0(%esp),%ch
		sub    (%eax),%ch
		mov    _092164_data(%ebx),%dl
		mov    (%eax),%dh
		inc    %eax
		xor    %dl,%dh
		mov    %ch,0x0000a0(%esp)
		mov    %dh,-0x000001(%eax)
		cmp    %esi,%eax
		jb     _04643d_jump

	_04645f_jump:
		cmpb   $0x000000,0x0000a0(%esp)
		je     _0464a1_jump
		mov    $0x0000c8,%eax
		mov    0x000080(%esp),%esi
		call   _07b4e8_func
		push   %esi
		mov    0x000088(%esp),%edi
		push   %edi
		push   $_0c0ab4_data
		push   %eax
		mov    %eax,%edx
		call   _07c07b_func
		add    $0x000010,%esp
		mov    %edx,%eax
		call   _01f3a4_func
		mov    %edx,%eax
		call   _07b680_func

	_0464a1_jump:
		test   %ebp,%ebp
		je     _046594_jump
		cmpl   $0x000000,0x00008c(%esp)
		je     _046594_jump
		xor    %edx,%edx
		xor    %esi,%esi
		mov    %edx,0x000098(%esp)
		jmp    _046572_jump

	_0464c7_jump:
		xor    %eax,%eax

	_0464c9_jump:
		mov    0x000098(%esp),%edx
		mov    0x00008c(%esp),%ecx
		lea    0x000001(%edx),%ebx
		add    %ecx,%edx
		mov    (%edx),%dl
		mov    %dl,0x0000a4(%esp)
		and    $0x0000c0,%dl
		mov    %ebx,0x000098(%esp)
		cmp    $0x0000c0,%dl
		jne    _046541_jump
		mov    0x0000a4(%esp),%dl
		and    $0x00003f,%dl
		lea    0x000001(%ebx),%edi
		add    %ecx,%ebx
		and    $0x0000ff,%edx
		mov    (%ebx),%bl
		mov    %edi,0x000098(%esp)
		mov    %bl,0x0000a4(%esp)

	_046519_jump:
		dec    %edx
		cmp    $0xffffffff,%edx
		je     _04655f_jump
		mov    0x000094(%esp),%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%bx
		mov    %ebx,%ecx
		imul   %esi,%ecx
		mov    %eax,%ebx
		add    %ecx,%ebx
		mov    0x0000a4(%esp),%cl
		inc    %eax
		mov    %cl,(%ebx,%ebp,1)
		jmp    _046519_jump

	_046541_jump:
		mov    0x000094(%esp),%ebx
		xor    %edx,%edx
		mov    (%ebx),%dx
		imul   %esi,%edx
		mov    %eax,%ebx
		add    %ebx,%edx
		mov    0x0000a4(%esp),%bl
		inc    %eax
		mov    %bl,(%edx,%ebp,1)

	_04655f_jump:
		xor    %edx,%edx
		mov    0x00009c(%esp),%dx
		cmp    %edx,%eax
		jb     _0464c9_jump
		inc    %esi

	_046572_jump:
		mov    0x000088(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%ax
		cmp    %eax,%esi
		jb     _0464c7_jump
		mov    0x00008c(%esp),%eax
		call   _07b680_func
		jmp    _04659e_jump

	_046594_jump:
		mov    $_0c0ad8_data,%eax
		call   _01f3a4_func

	_04659e_jump:
		mov    0x000084(%esp),%eax
		call   _07b680_func
		mov    %ebp,%eax
		add    $0x0000a8,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0465c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		testb  $0x000004,_0cec71_data
		je     _046634_jump
		mov    _0cc4a4_data,%eax
		mov    %eax,_0cc470_data
		mov    _0cc4a0_data,%eax
		mov    %eax,_0cc46c_data
		mov    _0cc49c_data,%eax
		mov    %eax,_0cc478_data
		mov    _0cc498_data,%eax
		mov    %eax,_0cc474_data
		mov    _0cc480_data,%eax
		mov    %eax,_0cc4a4_data
		mov    _0cc47c_data,%eax
		mov    %eax,_0cc4a0_data
		mov    _0cc490_data,%eax
		mov    _0cc4a4_data,%ecx
		mov    %eax,_0cc49c_data
		mov    _0cc484_data,%eax
		mov    _0cc4a0_data,%edx
		mov    %eax,_0cc498_data
		mov    %eax,%ebx
		mov    _0cc49c_data,%eax
		call   _016157_func

	_046634_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_046638_func:
		push   %ebx
		push   %ecx
		push   %edx
		testb  $0x000004,_0cec71_data
		je     _0466a6_jump
		mov    $0x000023,%ebx
		mov    _0cec76_data,%dx
		mov    $0x00004d,%eax
		test   %dx,%dx
		je     _04666d_jump
		mov    $0x000055,%eax
		xor    %ecx,%ecx
		mov    $0x000041,%ebx
		mov    %cx,_0cec76_data

	_04666d_jump:
		push   $0x000000
		movswl %bx,%ecx
		xor    %edx,%edx
		push   $0x0000ff
		movswl %ax,%ebx
		mov    $0x00000d,%eax
		call   _019f4c_func
		push   $0x000000
		mov    $0x000017,%ecx
		mov    $0x000044,%ebx
		push   $0x0000ff
		mov    $0x000004,%edx
		mov    $0x0000f1,%eax
		call   _019f4c_func

	_0466a6_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0466ac_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cc474_data,%edi
		mov    _0cc470_data,%ebp
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    _0cec08_data,%eax
		mov    %ebx,%edx
		sar    $0x000010,%eax
		mov    %ecx,%esi
		sub    %eax,%edx
		add    %eax,%ebx
		sub    %eax,%esi
		add    %eax,%ecx
		cmp    %ebp,%esi
		jge    _0466db_jump
		mov    %ebp,%esi

	_0466db_jump:
		cmp    _0cc46c_data,%esi
		jle    _0466e9_jump
		mov    _0cc46c_data,%esi

	_0466e9_jump:
		cmp    _0cc478_data,%edx
		jge    _0466f7_jump
		mov    _0cc478_data,%edx

	_0466f7_jump:
		cmp    %edi,%edx
		jle    _0466fd_jump
		mov    %edi,%edx

	_0466fd_jump:
		cmp    _0cc46c_data,%ecx
		jle    _04670b_jump
		mov    _0cc46c_data,%ecx

	_04670b_jump:
		cmp    %ebp,%ecx
		jge    _046711_jump
		mov    %ebp,%ecx

	_046711_jump:
		cmp    %edi,%ebx
		jle    _046717_jump
		mov    %edi,%ebx

	_046717_jump:
		cmp    _0cc478_data,%ebx
		jge    _046725_jump
		mov    _0cc478_data,%ebx

	_046725_jump:
		mov    %ebp,_0cc470_data
		mov    %edi,_0cc474_data
		mov    %esi,_0cc480_data
		mov    %ecx,_0cc47c_data
		mov    %ebx,_0cc484_data
		mov    %edx,_0cc490_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_046750_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000005,%ecx
		xor    %ebx,%ebx
		mov    $0x00000f,%esi
		mov    %bx,_0cec24_data
		mov    _0cc4a4_data,%ebx
		xor    %edi,%edi
		mov    %ebx,_0cc470_data
		mov    _0cc4a0_data,%ebx
		mov    %cx,_0cec14_data
		mov    %ebx,_0cc46c_data
		mov    _0cc49c_data,%ebx
		mov    %si,_0cec12_data
		mov    %ebx,_0cc478_data
		mov    _0cc498_data,%ebx
		mov    %di,_0cec0a_data
		mov    %ebx,_0cc474_data
		call   _0466ac_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0467b8_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %edx,%ebp
		mov    %ecx,%esi
		mov    _0cec08_data,%ecx
		mov    _0cec10_data,%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%edx
		add    %edx,%ecx
		mov    %eax,%edx
		sub    %ecx,%edx
		mov    %edx,0x000008(%esp)
		add    %eax,%ecx
		mov    %eax,%edx
		mov    0x000008(%esp),%edi
		sub    %ebx,%edx
		cmp    _0cc478_data,%edi
		jge    _0467fa_jump
		mov    _0cc478_data,%edi
		mov    %edi,0x000008(%esp)

	_0467fa_jump:
		mov    _0cc474_data,%edi
		cmp    %edi,%edx
		jl     _046806_jump
		mov    %edi,%edx

	_046806_jump:
		mov    0x000008(%esp),%edi
		sub    %edi,%edx
		mov    %edx,0x000004(%esp)
		lea    (%eax,%ebx,1),%edx
		mov    _0cc474_data,%eax
		cmp    %eax,%ecx
		jl     _04681e_jump
		mov    %eax,%ecx

	_04681e_jump:
		mov    _0cc478_data,%ebx
		cmp    %ebx,%edx
		jge    _04682a_jump
		mov    %ebx,%edx

	_04682a_jump:
		sub    %edx,%ecx
		mov    %ecx,(%esp)
		cmpl   $0x000000,0x000004(%esp)
		jle    _0468c3_jump
		mov    %ebp,%eax
		mov    _0cc470_data,%edi
		sub    %esi,%eax
		cmp    %edi,%eax
		jl     _04687f_jump
		cmp    _0cc46c_data,%eax
		jge    _04687f_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000008(%esp),%edi
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %ecx,%edi
		mov    0x000004(%esp),%ecx
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _046876_jump
		rep stos %al,%es:(%edi)

	_046876_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _04687f_jump
		rep stos %eax,%es:(%edi)

	_04687f_jump:
		mov    _0cc470_data,%edi
		lea    (%esi,%ebp,1),%eax
		cmp    %edi,%eax
		jl     _0468c3_jump
		cmp    _0cc46c_data,%eax
		jge    _0468c3_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000008(%esp),%edi
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%ecx
		add    %eax,%edi
		add    %ecx,%edi
		mov    0x000004(%esp),%ecx
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _0468ba_jump
		rep stos %al,%es:(%edi)

	_0468ba_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _0468c3_jump
		rep stos %eax,%es:(%edi)

	_0468c3_jump:
		cmpl   $0x000000,(%esp)
		jle    _04694d_jump
		mov    %ebp,%eax
		mov    _0cc470_data,%ebx
		sub    %esi,%eax
		cmp    %ebx,%eax
		jl     _04690d_jump
		cmp    _0cc46c_data,%eax
		jge    _04690d_jump
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%edi
		add    %edx,%eax
		mov    (%esp),%ecx
		add    %eax,%edi
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _046904_jump
		rep stos %al,%es:(%edi)

	_046904_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _04690d_jump
		rep stos %eax,%es:(%edi)

	_04690d_jump:
		mov    _0cc470_data,%edi
		add    %ebp,%esi
		cmp    %edi,%esi
		jl     _04694d_jump
		cmp    _0cc46c_data,%esi
		jge    _04694d_jump
		lea    0x000000(,%esi,4),%eax
		add    %esi,%eax
		shl    $0x000006,%eax
		mov    0x00001c(%esp),%edi
		add    %edx,%eax
		mov    (%esp),%ecx
		add    %eax,%edi
		cld    
		xor    %eax,%eax
		mov    %ecx,%ebx
		and    $0x000003,%ecx
		je     _046944_jump
		rep stos %al,%es:(%edi)

	_046944_jump:
		mov    %ebx,%ecx
		shr    $0x000002,%ecx
		je     _04694d_jump
		rep stos %eax,%es:(%edi)

	_04694d_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_046958_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,0x000010(%esp)
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %ebx,%esi
		xor    %edi,%edi
		jmp    _046987_jump

	_046971_jump:
		mov    0x000004(%esp),%eax
		mov    %esi,%ecx
		mov    %ebp,%edx
		inc    %edi
		xor    %ebx,%ebx
		push   %eax
		mov    0x000014(%esp),%eax
		inc    %esi
		call   _0467b8_func

	_046987_jump:
		mov    _0cec10_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jle    _046971_jump
		xor    %edi,%edi
		mov    (%esp),%esi
		mov    %edi,0x000014(%esp)
		test   %esi,%esi
		jl     _046a0a_jump
		mov    $0x000001,%edx
		lea    (%esi,%esi,1),%eax
		sub    %edx,%eax
		mov    %edx,0x000008(%esp)
		mov    %eax,0x00000c(%esp)

	_0469b2_jump:
		mov    0x000004(%esp),%ebx
		mov    0x000010(%esp),%eax
		mov    %esi,%ecx
		push   %ebx
		mov    %ebp,%edx
		mov    %edi,%ebx
		call   _0467b8_func
		mov    0x000004(%esp),%ecx
		mov    0x000010(%esp),%eax
		mov    %esi,%ebx
		push   %ecx
		mov    %ebp,%edx
		mov    %edi,%ecx
		call   _0467b8_func
		mov    0x000008(%esp),%eax
		mov    0x000014(%esp),%edx
		inc    %edi
		add    %eax,%edx
		lea    0x000002(%eax),%ebx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x000008(%esp)
		cmp    %edx,%esi
		jg     _046a06_jump
		mov    0x00000c(%esp),%eax
		dec    %esi
		sub    %eax,%edx
		lea    -0x000002(%eax),%ebx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x00000c(%esp)

	_046a06_jump:
		cmp    %esi,%edi
		jle    _0469b2_jump

	_046a0a_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_046a14_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		testb  $0x000004,_0cec71_data
		je     _046ad1_jump
		mov    _0cec06_data,%edx
		mov    _0cec0a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _046a41_jump
		neg    %eax

	_046a41_jump:
		mov    _0cec0e_data,%edx
		mov    %eax,%ebx
		mov    _0cec0c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _046a5e_jump
		neg    %eax

	_046a5e_jump:
		cmp    %ebx,%eax
		jge    _046a64_jump
		mov    %ebx,%eax

	_046a64_jump:
		mov    _0cec08_data,%ebx
		add    $0x000006,%eax
		mov    _0cec0a_data,%edx
		mov    %ax,_0cec12_data
		mov    _0cec0e_data,%ax
		sar    $0x000010,%ebx
		mov    %ax,_0cec10_data
		mov    _0cec0c_data,%ax
		sar    $0x000010,%edx
		mov    %ax,_0cec08_data
		mov    _0cec0c_data,%eax
		sub    $0x000004,%ebx
		sar    $0x000010,%eax
		call   _046958_func
		mov    _0cc470_data,%eax
		mov    %eax,_0cc4a4_data
		mov    _0cc46c_data,%eax
		mov    %eax,_0cc4a0_data
		mov    _0cc478_data,%eax
		mov    %eax,_0cc49c_data
		mov    _0cc474_data,%eax
		mov    %eax,_0cc498_data

	_046ad1_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_046ad8_func:
		testb  $0x000004,_0cec71_data
		je     _046b09_jump
		mov    _0cc470_data,%eax
		mov    %eax,_0cc4a4_data
		mov    _0cc46c_data,%eax
		mov    %eax,_0cc4a0_data
		mov    _0cc478_data,%eax
		mov    %eax,_0cc49c_data
		mov    _0cc474_data,%eax
		mov    %eax,_0cc498_data

	_046b09_jump:
		ret    



_046b0c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cdabc_data,%cx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cdb08_data,%al
		mov    _0cdafc_data,%dl
		mov    %eax,%esi
		add    %edx,%ecx
		mov    _0cdac0_data,%dx
		mov    _0ced00_data,%ax
		add    %edx,%esi
		mov    %ecx,%edx
		sub    %eax,%edx
		sub    $0x000010,%esi
		add    $0x000008,%edx
		mov    %esi,%eax
		mov    %dx,_0cec0e_data
		sub    _0cecea_data,%ax
		xor    %ebx,%ebx
		mov    %ax,_0cec0c_data
		mov    _0cec0e_data,%ax
		mov    %bx,_0cec1a_data
		mov    %ax,_0cec10_data
		mov    _0cec0c_data,%ax
		mov    %bx,_0cec1e_data
		mov    %ax,_0cec08_data
		xor    %al,%al

	_046b83_jump:
		xor    %edx,%edx
		mov    %al,%dl
		inc    %al
		mov    %cx,_0c26c0_data(,%edx,2)
		mov    %si,_0c26b8_data(,%edx,2)
		cmp    $0x000004,%al
		jb     _046b83_jump
		mov    _095b15_data,%ah
		mov    %cx,_0cec18_data
		xor    %ebx,%ebx
		mov    %si,_0cec16_data
		mov    %bx,_0cec1c_data
		test   %ah,%ah
		jne    _046bd4_jump
		mov    _0cec0a_data,%edx
		mov    _0cec0c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _046750_func

	_046bd4_jump:
		mov    _0cec18_data,%cx
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_046be0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		cmpw   $0x000003,_0ceca4_data
		je     _046e90_jump
		cmpb   $0x000002,_0cdb01_data
		jne    _046c08_jump
		cmpb   $0x000009,_0cdb00_data
		je     _046c0f_jump

	_046c08_jump:
		mov    $0x000001,%eax
		jmp    _046c11_jump

	_046c0f_jump:
		xor    %eax,%eax

	_046c11_jump:
		test   %eax,%eax
		je     _046e90_jump
		cmpb   $0x000003,_0cdb01_data
		jne    _046c32_jump
		mov    _0cdb00_data,%bl
		cmp    $0x000016,%bl
		je     _046c39_jump
		cmp    $0x000020,%bl
		je     _046c39_jump

	_046c32_jump:
		mov    $0x000001,%eax
		jmp    _046c3b_jump

	_046c39_jump:
		xor    %eax,%eax

	_046c3b_jump:
		test   %eax,%eax
		je     _046e90_jump
		cmpw   $0x000036,_0cec0a_data
		jge    _046ca2_jump
		cmpw   $0x000000,_0ced22_data
		jne    _046ca2_jump
		mov    _0cec22_data,%eax
		sar    $0x000010,%eax
		mov    $0x000200,%edx
		call   _05bd50_func
		cwtl   
		sub    %eax,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		add    %eax,%eax
		sar    $0x000009,%eax
		mov    _0cec24_data,%di
		mov    %ax,_0cec0a_data
		cmp    $0x000080,%di
		jge    _046cbf_jump
		mov    %edi,%eax
		add    $0x000002,%eax
		mov    %ax,_0cec24_data
		jmp    _046cbf_jump

	_046ca2_jump:
		mov    _0cee3f_data,%ch
		cmp    $0x000001,%ch
		jb     _046cb6_jump
		decw   _0cec0a_data
		jmp    _046cbf_jump

	_046cb6_jump:
		jae    _046cbf_jump
		incw   _0cec0a_data

	_046cbf_jump:
		mov    _0cec1a_data,%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		mov    _0cdbc2_data,%dl
		mov    _0c26c0_data(%eax),%di
		mov    _0c26b8_data(%eax),%si
		test   %dl,%dl
		je     _046d10_jump
		mov    _0cdb20_data,%edx
		xor    %ebx,%ebx
		mov    0x000068(%edx),%bl
		mov    0x000028(%edx),%cx
		add    %ecx,%ebx
		mov    %bx,_0c26c0_data(%eax)
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%cx
		mov    0x000069(%edx),%bl
		add    %ecx,%ebx
		mov    %bx,_0c26b8_data(%eax)
		jmp    _046db1_jump

	_046d10_jump:
		lea    0x000004(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		call   _01d710_func
		mov    _0cdabc_data,%bx
		xor    %edx,%edx
		mov    _0cec1a_data,%eax
		mov    _0cdafc_data,%dl
		sar    $0x000010,%eax
		add    %ebx,%edx
		mov    %dx,_0c26c0_data(,%eax,2)
		xor    %edx,%edx
		mov    _0cdac0_data,%cx
		mov    _0cdb08_data,%dl
		add    %ecx,%edx
		sub    $0x000004,%edx
		mov    %dx,_0c26b8_data(,%eax,2)
		cmpw   $0x000001,0x000008(%esp)
		setg   %al
		mov    (%esp),%edx
		xor    %ah,%ah
		add    %eax,%edx
		mov    _0cec1a_data,%eax
		sar    $0x000010,%eax
		mov    0x000004(%esp),%ebx
		mov    %dx,_0c26c0_data(,%eax,2)
		cmp    $0x000001,%bx
		setg   %al
		mov    0x00000c(%esp),%edx
		xor    %ah,%ah
		add    %eax,%edx
		mov    _0cec1a_data,%eax
		sar    $0x000010,%eax
		mov    %dx,_0c26b8_data(,%eax,2)

	_046db1_jump:
		mov    _0cec1c_data,%ax
		inc    %eax
		mov    %eax,%edx
		xor    %ah,%dh
		mov    %ax,_0cec1c_data
		and    $0x000003,%dl
		mov    _0cec18_data,%bx
		mov    %dx,_0cec1c_data
		mov    %edi,%edx
		mov    _0cec1a_data,%cx
		sub    %ebx,%edx
		sub    %cx,%dx
		je     _046df4_jump
		test   %dx,%dx
		jle    _046def_jump
		mov    $0x000001,%edx
		jmp    _046df4_jump

	_046def_jump:
		mov    $0xffffffff,%edx

	_046df4_jump:
		mov    _0cec16_data,%di
		mov    %esi,%eax
		mov    _0cec1e_data,%bx
		sub    %edi,%eax
		sub    %bx,%ax
		je     _046e1c_jump
		test   %ax,%ax
		jle    _046e17_jump
		mov    $0x000001,%eax
		jmp    _046e1c_jump

	_046e17_jump:
		mov    $0xffffffff,%eax

	_046e1c_jump:
		mov    _0cec1a_data,%cx
		add    %edx,%ecx
		mov    %cx,_0cec1a_data
		cmp    $0x000008,%cx
		jle    _046e3b_jump
		movw   $0x000008,_0cec1a_data

	_046e3b_jump:
		mov    _0cec18_data,%edx
		sar    $0x000010,%edx
		cmp    $0xfffffff8,%edx
		jge    _046e52_jump
		movw   $0x00fff8,_0cec1a_data

	_046e52_jump:
		mov    _0cec1e_data,%bx
		add    %eax,%ebx
		mov    %bx,_0cec1e_data
		cmp    $0x000008,%bx
		jle    _046e71_jump
		movw   $0x000008,_0cec1e_data

	_046e71_jump:
		mov    _0cec1c_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff8,%eax
		jge    _046f70_jump
		movw   $0x00fff8,_0cec1e_data
		jmp    _046f70_jump

	_046e90_jump:
		cmpw   $0x000036,_0cec0a_data
		jl     _046ebb_jump
		mov    $0x000200,%eax
		call   _0690e0_func
		mov    _0cec0a_data,%cx
		sub    $0x000002,%ecx
		mov    %ax,_0cec24_data
		mov    %cx,_0cec0a_data

	_046ebb_jump:
		mov    _0cec22_data,%eax
		sar    $0x000010,%eax
		call   _05bd50_func
		movswl %ax,%edx
		mov    _0cec12_data,%eax
		sar    $0x000010,%eax
		imul   %edx,%eax
		sar    $0x000009,%eax
		mov    %ax,_0cec1a_data
		mov    _0cec22_data,%eax
		sar    $0x000010,%eax
		call   _05bd90_func
		mov    _0cec12_data,%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %edx,%eax
		sar    $0x000009,%eax
		mov    _0cee3f_data,%cl
		mov    %ax,_0cec1e_data
		test   %cl,%cl
		je     _046f28_jump
		mov    _0cec0a_data,%si
		dec    %esi
		mov    %si,_0cec0a_data
		test   %si,%si
		jge    _046f28_jump
		xor    %eax,%eax
		mov    %ax,_0cec0a_data

	_046f28_jump:
		mov    $0x000036,%eax
		call   _0690e0_func
		mov    _0cec24_data,%dx
		add    %eax,%edx
		mov    %dx,_0cec24_data
		cmp    $0x000200,%dx
		jle    _046f70_jump
		mov    _0cec14_data,%si
		xor    %ecx,%ecx
		inc    %esi
		mov    %cx,_0cec24_data
		mov    %si,_0cec14_data
		cmp    $0x00000a,%si
		jle    _046f70_jump
		movw   $0x00000a,_0cec14_data

	_046f70_jump:
		mov    _0cec1a_data,%ax
		mov    _0cec18_data,%dx
		mov    _0cec16_data,%bx
		add    %eax,%edx
		mov    _0cec1e_data,%ax
		mov    _0ced00_data,%cx
		add    %eax,%ebx
		mov    %edx,%eax
		sub    %ecx,%eax
		mov    _0cecea_data,%si
		add    $0x000008,%eax
		mov    %dx,_0cec18_data
		mov    %ax,_0cec0e_data
		mov    %ebx,%eax
		mov    %bx,_0cec16_data
		sub    %esi,%eax
		mov    _095b15_data,%dh
		mov    %ax,_0cec0c_data
		test   %dh,%dh
		jne    _046fe3_jump
		mov    _0cec0a_data,%edx
		mov    _0cec0c_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0466ac_func

	_046fe3_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_046ff0_switch:
		.long   _047049_case
		.long   _047049_case
		.long   _047049_case
		.long   _047049_case
		.long   _047049_case
		.long   _047049_case




_047008_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cee5d_data,%eax
		sar    $0x000018,%eax
		mov    _0ce38d_data(%eax),%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		je     _047026_jump
		call   _0458a4_func

	_047026_jump:
		cmpb   $0x000000,_095b15_data
		jne    _047074_jump
		mov    _0cecd4_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _047049_case
		and    $0x00ffff,%eax
		jmp    *%cs:_046ff0_switch(,%eax,4)

	_047049_case:
		mov    _0cc534_data,%edx
		mov    _0ccc30_data,%ecx
		xor    %ebx,%ebx
		xor    %eax,%eax
		mov    _0cec2a_data,%bx
		push   %edx
		xor    %edx,%edx
		mov    _0cee60_data,%al
		mov    _0cec26_data,%dx
		call   _0735a0_func

	_047074_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_047078_switch:
		.long   _047212_case
		.long   _047247_case
		.long   _047267_case
		.long   _04727d_case
		.long   _047293_case
		.long   _0472a9_case

_047090_switch:
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _04722c_case
		.long   _047237_case
		.long   _0472c1_case
		.long   _04722c_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _04723e_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _04723e_case

_0470e8_switch:
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _047261_case
		.long   _047261_case
		.long   _047261_case
		.long   _047261_case
		.long   _047261_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _047261_case

_047130_switch:
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _047261_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _047240_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case

_047164_switch:
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _04723e_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _04723e_case
		.long   _0472c1_case
		.long   _0472c1_case

_047198_switch:
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _04723e_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _0472c1_case
		.long   _04723e_case
		.long   _0472c1_case




_0471c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cecc0_data,%cx
		mov    _0cda88_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _0cec2a_data,%ax
		shl    $0x000004,%edx
		xor    %bl,%bl
		cmp    %eax,%edx
		jge    _0471f0_jump
		mov    $0x000003,%dl
		jmp    _0471f2_jump

	_0471f0_jump:
		xor    %dl,%dl

	_0471f2_jump:
		mov    _0cecd4_data,%ax
		dec    %eax
		xor    %dh,%dh
		cmp    $0x000005,%ax
		ja     _0472c1_case
		and    $0x00ffff,%eax
		jmp    *%cs:_047078_switch(,%eax,4)

	_047212_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x000015,%ax
		ja     _0472c1_case
		and    $0x00ffff,%eax
		jmp    *%cs:_047090_switch(,%eax,4)

	_04722c_case:
		mov    $0x000001,%dh
		mov    $0x000002,%bl
		mov    %dh,%dl
		jmp    _0472c1_case

	_047237_case:
		mov    $0x000003,%dl
		jmp    _0472c1_case

	_04723e_case:
		mov    $0x000001,%dh

	_047240_case:
		mov    $0x000003,%dl
		jmp    _0472c1_case

	_047247_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x000011,%ax
		ja     _0472c1_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0470e8_switch(,%eax,4)

	_047261_case:
		mov    $0x000001,%dl
		mov    $0x000004,%bl
		jmp    _0472c1_case

	_047267_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x00000c,%ax
		ja     _0472c1_case
		and    $0x00ffff,%eax
		jmp    *%cs:_047130_switch(,%eax,4)

	_04727d_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x00000c,%ax
		ja     _0472c1_case
		and    $0x00ffff,%eax
		jmp    *%cs:_047164_switch(,%eax,4)

	_047293_case:
		mov    %ecx,%eax
		dec    %eax
		cmp    $0x00000b,%ax
		ja     _0472c1_case
		and    $0x00ffff,%eax
		jmp    *%cs:_047198_switch(,%eax,4)

	_0472a9_case:
		mov    %ecx,%eax
		cmp    $0x000001,%cx
		jb     _0472c1_case
		cmp    $0x000003,%cx
		jbe    _0472c1_case
		cmp    $0x000004,%cx
		jne    _0472c1_case
		mov    $0x000001,%dh
		mov    $0x000003,%dl

	_0472c1_case:
		cmpb   $0x000000,_095b15_data
		jne    _0472cc_jump
		xor    %dh,%dh

	_0472cc_jump:
		mov    %dl,_0cee5f_data
		mov    %dh,_0cee61_data
		mov    %bl,_0e2fd9_data
		mov    %cx,_0cecc0_data
		call   _047008_func
		mov    _0cee5f_data,%dl
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0472f4_switch:
		.long   _047329_case
		.long   _04735f_case
		.long   _047394_case
		.long   _0473a1_case




_047304_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cec2e_data,%cx
		mov    _0cee5f_data,%dl
		cmp    $0x000003,%dl
		ja     _0473ae_jump
		xor    %eax,%eax
		mov    %dl,%al
		jmp    *%cs:_0472f4_switch(,%eax,4)

	_047329_case:
		xor    %eax,%eax
		mov    _0cece8_data,%edx
		mov    _0cec2a_data,%ax
		sar    $0x000010,%edx
		sub    $0x0000d8,%eax
		imul   %eax,%edx
		mov    _0cecc8_data,%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%ecx
		mov    %cx,_0cec2e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04735f_case:
		mov    _0cece8_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    _0e2fd9_data,%bl
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %ebx,%ebx
		mov    %eax,%edx
		mov    _0cec2a_data,%bx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %edx,%ecx
		mov    %cx,_0cec2e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047394_case:
		xor    %ecx,%ecx
		mov    %cx,_0cec2e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0473a1_case:
		mov    _0cec2a_data,%cx
		sub    $0x0000d8,%ecx

	_0473ae_jump:
		mov    %cx,_0cec2e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0473c0_switch:
		.long   0




_0473c4_func:
		add    $0x5050505,%eax
		add    $0x6f000003,%eax
		outsb  %ds:(%esi),(%dx)
	_0473d0_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %ch,0x000066(%edi)
	_0473d4_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		data16 add %ch,0x00006e(%edi)
	_0473d7_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %ch,0x000066(%edi)
		data16 add %al,0x5050505
		add    $0x030505,%eax

	_0473e5_jump:
		add    $0x3050505,%eax

	_0473ea_jump:
		add    $0x3050505,%eax

	_0473ef_jump:
		add    $0x5050505,%eax
		add    (%eax),%eax
		add    %al,(%eax)

_0473f8_switch:
		.long   _0c0bdc_case
		.long   _0c0be0_case
		.long   _0c0be4_case
		.long   _0c0be8_case




_047408_func:
		add    $0x5050505,%eax
		add    $0x6e6f0305,%eax
	_047413_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %ch,0x000066(%edi)
	_047417_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		data16 add %ch,0x000061(%ebp)
		js     _04741b_jump

	_04741b_jump:
		xor    %al,%ss:(%eax)

	_04741e_jump:
		xor    $0x000030,%eax
		.byte 0x000000

_047424_switch:
		.long   _0c0bec_case
		.long   _0c0bf4_case
		.long   _0c0bfc_case




_047430_func:
		add    $0x5030505,%eax
		add    $0x51530305,%eax
		push   %edx
		push   %esi
		call   _0714e0_func
		test   %al,%al
		je     _04752c_jump
		xor    %edx,%edx
		mov    $_0cccbc_data,%eax
		mov    _0cee78_data,%dl
		call   _0460e8_func
		cmpw   $0x000080,_095b58_data
		jl     _047482_jump
		mov    _0ceb8e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _047482_jump
		movb   $0x000001,_095b15_data
		xor    %bh,%bh
		mov    %bh,_0cee5d_data

	_047482_jump:
		cmpb   $0x000002,_0cee64_data
		jne    _047499_jump
		mov    $0x000001,%ch
		mov    %ch,_095b15_data
		mov    %ch,_0cee5d_data

	_047499_jump:
		call   _040520_func
		cmpl   $0x0003e7,_0cc444_data
		je     _047515_jump
		cmpb   $0x000000,_0cee62_data
		je     _047515_jump
		xor    %eax,%eax
		mov    _0cc440_data,%ax
		call   _03da00_func
		mov    _0cc448_data,%eax
		call   _03da0c_func
		mov    _0cc450_data,%eax
		call   _03da14_func
		mov    _0cc44c_data,%eax
		call   _03da1c_func
		mov    _0cc444_data,%eax
		call   _03da24_func
		call   _03d560_func
		test   %eax,%eax
		je     _0474fe_jump
		xor    %bl,%bl
		mov    %bl,_0cee62_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0474fe_jump:
		mov    $0x000001,%dh
		call   _03d794_func
		mov    %dh,_0cee62_data
		call   _06ee78_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047515_jump:
		mov    _0cc444_data,%eax
		xor    %dl,%dl
		call   _03da24_func
		mov    %dl,_0cee62_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04752c_jump:
		cmpb   $0x000000,_0cee62_data
		je     _04753f_jump
		call   _03d794_func
		call   _06ee78_func

	_04753f_jump:
		xor    %dl,%dl
		mov    $_0cccbc_data,%eax
		mov    %dl,_0cee78_data
		xor    %edx,%edx
		call   _0460e8_func
		call   _04119c_func
		test   %al,%al
		je     _047577_jump
		movl   $_036348_func,_0e3c00_data
		call   _0239d0_func
		call   _03b8d0_func
		call   _04c8cc_func
		jmp    _047580_jump

	_047577_jump:
		movw   $0x00fffe,_0ceb90_data

	_047580_jump:
		mov    $0x00000d,%ebx
		mov    $0x000012,%ecx
		mov    $0x000001,%esi
		mov    $0x000002,%edx
		xor    %eax,%eax
		mov    %bx,_0c4c80_data
		mov    %cx,_0c4c82_data
		mov    %si,_0c4c84_data
		mov    %si,_0c4c78_data
		mov    %ax,_0c4c7a_data
		mov    %dx,_0c4c7e_data
		mov    $0x000012,%eax
		xor    %dh,%dh
		call   _06ee50_func
		mov    %dh,_095b15_data
		call   _040520_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0475dc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmp    $0x000002,%al
		jb     _047607_jump
		jbe    _047643_jump
		cmp    $0x000050,%al
		jb     _0475fe_jump
		jbe    _047678_jump
		cmp    $0x000064,%al
		je     _04769e_jump
		jmp    _0476b9_jump

	_0475fe_jump:
		cmp    $0x000046,%al
		je     _047652_jump
		jmp    _0476b9_jump

	_047607_jump:
		test   %al,%al
		ja     _04762b_jump
		mov    $0x000001,%cl
		mov    $0x00003c,%eax
		xor    %edi,%edi
		mov    %cl,_0cee92_data
		call   _03af94_jump
		mov    %di,_0cec2c_data
		jmp    _0476b9_jump

	_04762b_jump:
		mov    $0x000001,%bh
		mov    $0x000032,%eax
		xor    %esi,%esi
		mov    %bh,_0cee92_data
		mov    %si,_0cec2c_data
		jmp    _0476b4_jump

	_047643_jump:
		xor    %bl,%bl
		mov    $0x00003c,%eax
		mov    %bl,_0cee92_data
		jmp    _0476b4_jump

	_047652_jump:
		mov    $0x000001,%dh
		mov    $0x000046,%eax
		xor    %ecx,%ecx
		mov    %dh,_0cee92_data
		mov    %cx,_0cec2c_data
		call   _03af94_jump
		call   _035a40_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047678_jump:
		mov    $0x000001,%dl
		mov    $0x000050,%eax
		xor    %ebx,%ebx
		mov    %dl,_0cee92_data
		mov    %bx,_0cec2c_data
		call   _03af94_jump
		call   _035a40_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04769e_jump:
		mov    $0x000001,%ah
		xor    %edx,%edx
		mov    %ah,_0cee92_data
		mov    $0x000064,%eax
		mov    %dx,_0cec2c_data

	_0476b4_jump:
		call   _03af94_jump

	_0476b9_jump:
		call   _035a40_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0476c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpb   $0x000000,_095b15_data
		jne    _0477a5_jump
		cmpb   $0x000000,_0cee9c_data
		jne    _0476fb_jump
		cmpw   $0x000006,_0cecd4_data
		jne    _0476f2_jump
		cmpw   $0x000004,_0cecc0_data
		je     _0476fb_jump

	_0476f2_jump:
		call   _0264c0_func
		test   %al,%al
		je     _047744_jump

	_0476fb_jump:
		mov    _096456_data,%ecx
		mov    _09644e_data,%ebx
		mov    _096446_data,%edx
		mov    _09643e_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05abb8_func
		mov    _0cc4a0_data,%edx
		mov    _0cc4a4_data,%ecx
		mov    _0cc498_data,%ebx
		mov    _0cc49c_data,%eax
		call   _016157_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_047744_jump:
		mov    _095b50_data,%eax
		sar    $0x000010,%eax
		mov    _096456_data(,%eax,2),%ecx
		mov    _09644e_data(,%eax,2),%ebx
		mov    _096446_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09643e_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05abb8_func
		mov    _0cc4a0_data,%edx
		mov    _0cc4a4_data,%ecx
		mov    _0cc498_data,%ebx
		mov    _0cc49c_data,%eax
		call   _016157_func
		mov    _0cc534_data,%edi
		call   _014bed_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0477a5_jump:
		call   _0160f1_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0477b0_func:
		push   %ebx
		push   %edx
		mov    _0cecd4_data,%dx
		mov    _0cecc0_data,%bx
		cmp    $0x000001,%dx
		jne    _0477cc_jump
		cmp    $0x000010,%bx
		je     _047804_jump

	_0477cc_jump:
		cmp    $0x000002,%dx
		jne    _0477d8_jump
		cmp    $0x000010,%bx
		je     _047804_jump

	_0477d8_jump:
		cmp    $0x000004,%dx
		jne    _0477e3_jump
		cmp    %dx,%bx
		je     _047804_jump

	_0477e3_jump:
		cmp    $0x000004,%dx
		jne    _0477ef_jump
		cmp    $0x00000b,%bx
		je     _047804_jump

	_0477ef_jump:
		cmp    $0x000005,%dx
		jne    _0477fb_jump
		cmp    $0x000003,%bx
		je     _047804_jump

	_0477fb_jump:
		cmpb   $0x000000,_095b55_data
		je     _047808_jump

	_047804_jump:
		mov    $0x000001,%al
		jmp    _04780a_jump

	_047808_jump:
		xor    %al,%al

	_04780a_jump:
		mov    %bx,_0cecc0_data
		mov    %dx,_0cecd4_data
		pop    %edx
		pop    %ebx
		ret    



_04781c_func:
		push   %edx
		mov    _0e3be0_data,%eax
		mov    _0c25f8_data,%edx
		mov    %edx,0x000038(%eax)
		mov    _0c25fc_data,%edx
		mov    %edx,0x00003c(%eax)
		mov    _0c2600_data,%edx
		mov    %edx,0x000070(%eax)
		mov    _0c25f0_data,%edx
		mov    %edx,0x000074(%eax)
		mov    _0c25f4_data,%edx
		mov    %edx,0x0000e0(%eax)
		mov    _0c25ec_data,%edx
		mov    %edx,0x0000e4(%eax)
		mov    _0c2604_data,%edx
		mov    %edx,0x0000e8(%eax)
		mov    _0c2608_data,%edx
		mov    %edx,0x00011c(%eax)
		mov    _0c25dc_data,%edx
		mov    %edx,0x000120(%eax)
		mov    _0c260c_data,%edx
		mov    %edx,0x000124(%eax)
		mov    _0c25d8_data,%edx
		mov    %edx,0x00012c(%eax)
		mov    _0c25e0_data,%edx
		mov    %edx,0x000134(%eax)
		mov    _0c2610_data,%edx
		mov    %edx,0x00013c(%eax)
		mov    _0c25e4_data,%edx
		mov    %edx,0x000140(%eax)
		mov    _0c2614_data,%edx
		mov    %edx,0x000144(%eax)
		mov    _0c2618_data,%edx
		mov    %edx,0x000148(%eax)
		mov    _0c261c_data,%edx
		mov    %edx,0x00014c(%eax)
		pop    %edx
		ret    

_0478e4_switch:
		.long   _0479df_case
		.long   _047aa2_case
		.long   _047aa2_case
		.long   _0479ff_case
		.long   _047a28_case
		.long   _047aa2_case
		.long   _047aa2_case
		.long   _047a5a_case
		.long   _047a61_case
		.long   _047a75_case
		.long   _047a8a_case


	_047987_jump:
		mov    _0ceec1_data,%ch
		test   %ch,%ch
		jne    _047acb_jump
		test   %dx,%dx
		jne    _047acb_jump
		mov    _0c4c80_data,%eax
		sar    $0x000010,%eax
		call   _06ee50_func
		mov    _0c4c82_data,%eax
		sar    $0x000010,%eax
		call   _06ee74_func
		mov    _0c4c7e_data,%eax
		sar    $0x000010,%eax
		call   _06ee70_func
		mov    _0cee7c_data,%al
		cmp    $0x00000a,%al
		ja     _047aa2_case
		and    $0x0000ff,%eax
		jmp    *%cs:_0478e4_switch(,%eax,4)

	_0479df_case:
		mov    $_047e10_func,%ebx
		mov    $_036334_jump,%ecx
		mov    %ebx,_0e3bec_data
		mov    %ecx,_0e3c00_data
		call   _03b880_func
		jmp    _047a9d_jump

	_0479ff_case:
		call   _033ec0_func
		cmpb   $0x000000,_0cee7e_data
		jne    _047aa2_case
		mov    $0x000001,%edx
		mov    %ch,_0ceec1_data
		mov    %dx,_0cecda_data
		jmp    _047aa2_case

	_047a28_case:
		mov    $_048318_func,%esi
		mov    _0e3c00_data,%edi
		mov    %esi,_0e3bec_data
		test   %edi,%edi
		je     _047a50_jump
		movb   $0x000001,_0e3c2d_data
		movl   $_036348_func,_0e3c00_data
		jmp    _047a9d_jump

	_047a50_jump:
		xor    %ebp,%ebp
		mov    %ebp,_0e3c00_data
		jmp    _047a9d_jump

	_047a5a_case:
		mov    $_049280_func,%ebx
		jmp    _047a8f_jump

	_047a61_case:
		mov    $_04a268_func,%ebp
		xor    %eax,%eax
		mov    %ebp,_0e3bec_data
		mov    %eax,_0e3c00_data
		jmp    _047a9d_jump

	_047a75_case:
		mov    $_04ae78_func,%esi
		xor    %edi,%edi
		mov    %esi,_0e3bec_data
		mov    %edi,_0e3c00_data
		jmp    _047a9d_jump

	_047a8a_case:
		mov    $_04be84_func,%ebx

	_047a8f_jump:
		xor    %ecx,%ecx
		mov    %ebx,_0e3bec_data
		mov    %ecx,_0e3c00_data

	_047a9d_jump:
		call   _04d074_func

	_047aa2_case:
		call   _041128_func
		cmpb   $0x000000,_0cee7e_data
		je     _047abe_jump
		xor    %cl,%cl
		mov    %cl,_0cee7c_data
		mov    %cl,_0cee7e_data

	_047abe_jump:
		cmpb   $0x000000,_0cee79_data
		je     _047987_jump

	_047acb_jump:
		call   _04d244_func
		call   _0714e0_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_047adc_switch:
		.long   _047c8c_case
		.long   _047cdf_case
		.long   _047cdf_case
		.long   _047ca4_case
		.long   _047cb5_case
		.long   _047cc7_case


	_047c3c_jump:
		cmp    _0cee7c_data,%dl
		je     _047cef_jump
		mov    _0c4c80_data,%eax
		sar    $0x000010,%eax
		call   _06ee50_func
		mov    _0c4c82_data,%eax
		sar    $0x000010,%eax
		call   _06ee74_func
		mov    _0c4c7e_data,%eax
		sar    $0x000010,%eax
		call   _06ee70_func
		call   _041128_func
		mov    _0cee7c_data,%al
		sub    $0x000004,%al
		cmp    $0x000005,%al
		ja     _047cdf_case
		and    $0x0000ff,%eax
		jmp    *%cs:_047adc_switch(,%eax,4)

	_047c8c_case:
		mov    _0cee7e_data,%ah
		mov    %ebp,_0e3bec_data
		mov    %edx,_0e3c00_data
		cmp    %ah,%dl
		je     _047cdf_case
		jmp    _047cd9_jump

	_047ca4_case:
		mov    _0cee7e_data,%al
		mov    %edi,_0e3bec_data
		cmp    %al,%dl
		je     _047cdf_case
		jmp    _047cd9_jump

	_047cb5_case:
		mov    _0cee7e_data,%ch
		mov    %esi,_0e3bec_data
		cmp    %ch,%dl
		je     _047cdf_case
		jmp    _047cd9_jump

	_047cc7_case:
		movl   $_04ae78_func,_0e3bec_data
		cmp    _0cee7e_data,%dl
		je     _047cdf_case

	_047cd9_jump:
		mov    %bl,_0cee7c_data

	_047cdf_case:
		call   _04d074_func
		mov    %dl,_0cee7e_data
		jmp    _047c3c_jump

	_047cef_jump:
		xor    %al,%al
		mov    %al,_095b4b_data
		call   _04d244_func
		cmpb   $0x000000,_095b15_data
		jne    _047d62_jump
		mov    _095b50_data,%eax
		sar    $0x000010,%eax
		mov    _096456_data(,%eax,2),%ecx
		mov    _09644e_data(,%eax,2),%ebx
		mov    _096446_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09643e_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05abb8_func
		mov    _0cc4a0_data,%edx
		mov    _0cc4a4_data,%ecx
		mov    _0cc498_data,%ebx
		mov    _0cc49c_data,%eax
		call   _016157_func
		mov    _0cc534_data,%edi
		call   _014bed_func
		jmp    _047d85_jump

	_047d62_jump:
		cmpb   $0x000001,_0cee5d_data
		jne    _047d85_jump
		mov    _0ccc24_data,%edx
		mov    _0ccc0c_data,%ebx
		mov    _0ccc30_data,%esi
		shr    $0x000002,%edx
		call   _01268a_func

	_047d85_jump:
		cmpb   $0x000000,_0cee62_data
		je     _047d93_jump
		call   _070248_func

	_047d93_jump:
		mov    $0x000001,%esi
		mov    _0cecd4_data,%ax
		xor    %bl,%bl
		xor    %edi,%edi
		mov    %bl,_0cee95_data
		mov    %si,_0ceb8a_data
		xor    %ebx,%ebx
		mov    %di,_0ceb88_data
		mov    %ebx,_0cc3d8_data
		cmp    $0x000006,%ax
		jne    _047dce_jump
		cmpw   $0x000004,_0cecc0_data
		je     _047dd7_jump

	_047dce_jump:
		cmpb   $0x000000,_0cee9c_data
		je     _047de3_jump

	_047dd7_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		mov    %ax,_095b52_data

	_047de3_jump:
		mov    _0ceec4_data,%al
		mov    %al,_096478_data
		mov    (%esp),%al
		mov    %al,_0ceec3_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_047e00_switch:
		.long   _047ed6_case
		.long   _047f04_case
		.long   _047f32_case
		.long   _047f5d_case




_047e10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    $_048028_func,%ecx
		mov    $_0480c4_func,%esi
		mov    $_0482a0_func,%edi
		mov    $0x000003,%ebx
		mov    _0473c0_switch,%eax
		xor    %edx,%edx
		mov    %eax,(%esp)
		mov    %edx,_0e3be8_data
		mov    %edx,_0e3be4_data
		mov    %ecx,_0e3bf8_data
		mov    %esi,_0e3bf4_data
		mov    %edi,_0e3bfc_data
		mov    %bx,_0ceb9c_data
		mov    $0x000004,%edx
		mov    $0x0000a0,%ecx
		xor    %bl,%bl
		xor    %ah,%ah
		mov    $0x000001,%bh
		mov    %dx,_0cebe0_data
		mov    %ah,_096475_data
		mov    %cx,_0cebb4_data
		jmp    _047fbf_jump

	_047e85_jump:
		movzbl %bl,%ebp
		imul   $0x0000d8,%ebp,%ecx
		mov    $_0ca6e8_data,%edx
		add    %ecx,%edx
		mov    _0c25a0_data(,%ebp,4),%esi
		mov    %edx,%edi
		push   %edi

	_047e9f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _047eb7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _047e9f_jump

	_047eb7_jump:
		pop    %edi
		mov    (%esp,%ebp,1),%al
		mov    %al,_0ca7bf_data(%ecx)
		cmp    $0x000003,%bl
		ja     _047f86_jump
		xor    %eax,%eax
		mov    %bl,%al
		jmp    *%cs:_047e00_switch(,%eax,4)

	_047ed6_case:
		mov    _0c245c_data,%esi
		push   %edi

	_047edd_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _047ef5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _047edd_jump

	_047ef5_jump:
		pop    %edi
		movw   $0x00001e,_0ca7ba_data(%ecx)
		jmp    _047f86_jump

	_047f04_case:
		mov    _0c257c_data,%esi
		mov    $0x00003c,%edx
		push   %edi

	_047f10_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _047f28_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _047f10_jump

	_047f28_jump:
		pop    %edi
		mov    %dx,_0ca7ba_data(%ecx)
		jmp    _047f86_jump

	_047f32_case:
		mov    _0c2460_data,%esi
		push   %edi

	_047f39_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _047f51_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _047f39_jump

	_047f51_jump:
		pop    %edi
		movw   $0x00009b,_0ca7ba_data(%ecx)
		jmp    _047f86_jump

	_047f5d_case:
		mov    _0c2510_data,%esi
		push   %edi

	_047f64_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _047f7c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _047f64_jump

	_047f7c_jump:
		pop    %edi
		movw   $0x0000b9,_0ca7ba_data(%ecx)

	_047f86_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		imul   $0x0000d8,%edx,%edx
		mov    _0cebb4_data,%ax
		mov    %ax,_0ca7b8_data(%edx)
		mov    %bh,_0ca7bc_data(%edx)
		xor    %ch,%ch
		mov    %bh,_0ca7be_data(%edx)
		mov    $_0ca6e8_data,%eax
		mov    %ch,_0ca7bd_data(%edx)
		add    %edx,%eax
		add    %bh,%bl
		call   _01ec48_func

	_047fbf_jump:
		xor    %eax,%eax
		mov    _0cebe0_data,%si
		mov    %bl,%al
		cmp    %si,%ax
		jl     _047e85_jump
		mov    $0x000001,%al
		mov    $0x000064,%edx
		mov    $0x00000c,%ebx
		xor    %edi,%edi
		mov    $0x000006,%ecx
		mov    %di,_0cebfe_data
		mov    %al,_0ceec3_data
		mov    %di,_0cebf4_data
		mov    %dx,_0cebfa_data
		mov    %bx,_0cebd6_data
		mov    %cx,_0cebc4_data
		mov    %di,_0cebe8_data
		mov    %di,_0cebce_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_048028_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		call   _03bc14_func
		xor    %ah,%ah
		mov    %ah,(%esp)
		jmp    _04809a_jump

	_04803a_jump:
		cmp    _0cebfe_data,%ax
		jne    _04805f_jump
		xor    %eax,%eax
		mov    (%esp),%al
		imul   $0x0000d8,%eax,%eax
		mov    $0x000001,%edx
		add    $_0ca6e8_data,%eax
		call   _04d558_func
		jmp    _048097_jump

	_04805f_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		imul   $0x0000d8,%eax,%eax
		xor    %edx,%edx
		xor    %ecx,%ecx
		mov    _0ca7bf_data(%eax),%dl
		mov    _0ca7bc_data(%eax),%cl
		mov    _0ca7b8_data(%eax),%ebx
		push   %edx
		mov    _0ca7b6_data(%eax),%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    $_0ca6e8_data,%eax
		call   _01a178_func

	_048097_jump:
		incb   (%esp)

	_04809a_jump:
		xor    %eax,%eax
		mov    _0cebe0_data,%dx
		mov    (%esp),%al
		cmp    %dx,%ax
		jl     _04803a_jump
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0480b4_switch:
		.long   _048245_case
		.long   _048261_case
		.long   _048291_case
		.long   _04827f_case




_0480c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		call   _04d4c4_func
		mov    _0cc530_data,%ebx
		xor    %edx,%edx
		inc    %ebx
		mov    _0cebac_data,%dx
		mov    %ebx,_0cc530_data
		cmp    %ebx,%edx
		jg     _0480f7_jump
		cmpb   $0x000000,_0ceec1_data
		jne    _0480f7_jump
		call   _03521c_func

	_0480f7_jump:
		call   _036910_func
		test   %al,%al
		je     _04811c_jump
		mov    $0x000001,%eax
		call   _041118_func
		xor    %eax,%eax
		call   _04d8ec_func
		test   %al,%al
		je     _04811c_jump
		movb   $0x000001,_0cee7e_data

	_04811c_jump:
		call   _040864_func
		test   %ax,%ax
		je     _04819c_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _04815f_jump
		mov    _0cebf4_data,%ax
		cmp    _0cebd6_data,%ax
		jle    _04819c_jump
		mov    _0cebf2_data,%edx
		mov    _0cebc2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04819c_jump

	_04815f_jump:
		mov    $0x000044,%eax
		call   _06fa30_func
		xor    %eax,%eax
		mov    _0cebfe_data,%bx
		mov    _096475_data,%al
		cmp    %bx,%ax
		jge    _048188_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0cebfe_data
		jmp    _048194_jump

	_048188_jump:
		mov    _0ceb9c_data,%ax
		mov    %ax,_0cebfe_data

	_048194_jump:
		xor    %esi,%esi
		mov    %esi,_0cc530_data

	_04819c_jump:
		call   _0407f4_func
		test   %ax,%ax
		je     _04820c_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _0481db_jump
		mov    _0cebf4_data,%ax
		cmp    _0cebd6_data,%ax
		jle    _04820c_jump
		mov    _0cebf2_data,%edx
		mov    _0cebc2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04820c_jump

	_0481db_jump:
		mov    $0x000044,%eax
		call   _06fa30_func
		mov    _0cebfe_data,%ax
		cmp    _0ceb9c_data,%ax
		jge    _0481f7_jump
		inc    %eax
		jmp    _0481fe_jump

	_0481f7_jump:
		xor    %eax,%eax
		mov    _096475_data,%al

	_0481fe_jump:
		mov    %ax,_0cebfe_data
		xor    %edi,%edi
		mov    %edi,_0cc530_data

	_04820c_jump:
		call   _0367ec_func
		test   %al,%al
		je     _048291_case
		cmpb   $0x000000,_0ceec3_data
		je     _048291_case
		mov    $0x000045,%eax
		call   _06fa30_func
		mov    _0cebfe_data,%ax
		cmp    $0x000003,%ax
		ja     _048291_case
		xor    %edx,%edx
		mov    %ax,%dx
		jmp    *%cs:_0480b4_switch(,%edx,4)

	_048245_case:
		xor    %eax,%eax
		mov    $0x000001,%ebx
		mov    %eax,_0cc530_data
		mov    $0x000003,%al
		mov    %bx,_0cebce_data
		mov    %al,_0cee7c_data
		jmp    _048291_case

	_048261_case:
		mov    $0x000001,%edx
		xor    %ebp,%ebp
		mov    $0x000004,%ch
		mov    %ebp,_0cc530_data
		mov    %dx,_0cebce_data
		mov    %ch,_0cee7c_data
		jmp    _048291_case

	_04827f_case:
		xor    %eax,%eax
		call   _04d8ec_func
		test   %al,%al
		je     _048291_case
		movb   $0x000001,_0cee7e_data

	_048291_case:
		call   _04d508_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0482a0_func:
		push   %ebx
		push   %edx
		mov    _0cee7e_data,%ah
		test   %ah,%ah
		je     _0482e6_jump
		mov    $0x000001,%bh
		mov    _0e3bf8_data,%edx
		mov    %bh,_0ceec1_data
		mov    %bh,_0ceebf_data
		test   %edx,%edx
		je     _048312_jump
		call   *_0e3bf8_data
		call   _016df7_func
		call   _016de7_func
		mov    $0x000001,%eax
		call   _023a7c_func
		call   _03a2a0_func
		pop    %edx
		pop    %ebx
		ret    

	_0482e6_jump:
		mov    _0cee79_data,%dl
		test   %dl,%dl
		jne    _048312_jump
		xor    %dh,%dh
		mov    %dx,_0cebac_data
		cmpb   $0x000002,_0cee82_data
		jne    _048308_jump
		mov    %ah,_0cee82_data

	_048308_jump:
		call   _03b8d0_func
		call   _03b880_func

	_048312_jump:
		pop    %edx
		pop    %ebx
		ret    



_048318_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0484bc_func,%edx
		mov    $_0489c8_func,%ebx
		mov    $_048dbc_func,%ecx
		mov    $_0491c8_func,%esi
		mov    $0x000001,%ah
		mov    $0x00000c,%edi
		mov    %edx,_0e3be8_data
		mov    %ebx,_0e3bf8_data
		mov    %ecx,_0e3bf4_data
		mov    %esi,_0e3bfc_data
		mov    %ah,_0ceec3_data
		mov    %di,_0cebd6_data
		mov    $0x000014,%edx
		mov    $0x000004,%ebx
		mov    $0x000064,%esi
		mov    $0x000006,%eax
		xor    %ecx,%ecx
		mov    %dx,_0cebfc_data
		mov    %bx,_0cebd8_data
		mov    %cx,_0cebf4_data
		mov    %si,_0cebfa_data
		mov    %ax,_0cebc4_data
		mov    $0x000008,%edx
		mov    $0x000003,%ebx
		mov    _0cee78_data,%al
		mov    %dx,_0cebc0_data
		mov    %bx,_0cebd2_data
		cmp    $0x000001,%al
		jb     _0483be_jump
		jbe    _0483cb_jump
		cmp    $0x000002,%al
		je     _0483cb_jump
		jmp    _0483d2_jump

	_0483be_jump:
		test   %al,%al
		jne    _0483d2_jump
		movb   $0x00004b,_0e3c2c_data
		jmp    _0483d2_jump

	_0483cb_jump:
		movb   $0x00005a,_0e3c2c_data

	_0483d2_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0e3c2c_data,%al
		sub    %eax,%edx
		mov    _095b4b_data,%bh
		mov    %dx,_0cebb4_data
		test   %bh,%bh
		je     _048412_jump
		mov    $0x000006,%eax
		xor    %ch,%ch
		mov    %ax,_0cebf6_data
		mov    %ax,_0ceb9c_data
		mov    %ch,_096475_data
		mov    %ax,_0cebe0_data
		jmp    _048432_jump

	_048412_jump:
		mov    $0x000005,%ecx
		mov    %bh,_096475_data
		mov    %cx,_0cebf6_data
		mov    %cx,_0ceb9c_data
		mov    %cx,_0cebe0_data

	_048432_jump:
		mov    $0x000005,%ebx
		mov    $0x00003c,%edx
		mov    $0x000014,%eax
		call   _04d3f0_func
		cmpb   $0x000000,_096477_data
		je     _048473_jump
		xor    %eax,%eax
		mov    _0e3c09_data,%al
		mov    %ax,_0ccbae_data
		xor    %eax,%eax
		mov    _0e3c08_data,%al
		mov    %ax,_0ccbac_data
		xor    %ah,%ah
		mov    %ah,_096477_data
		jmp    _04848b_jump

	_048473_jump:
		mov    _0c4c80_data,%ax
		mov    %ax,_0ccbac_data
		mov    _0c4c82_data,%ax
		mov    %ax,_0ccbae_data

	_04848b_jump:
		xor    %dl,%dl
		xor    %ecx,%ecx
		mov    %dl,_095b98_data
		mov    %cx,_0cebce_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0484a4_switch:
		.long   _0485e1_case
		.long   _04864b_case
		.long   _04869d_case
		.long   _04869d_case
		.long   _04869d_case
		.long   _04869d_case




_0484bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    %esp,%edi
		mov    $_0473c4_func,%esi
		mov    _0473d0_jump,%eax
		mov    $0x000001,%dl
		mov    %eax,0x000010(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %dl,_0caf56_data
		lea    0x00002c(%esp),%edi
		mov    $0x000002,%ah
		mov    $_0473cd_jump,%esi
		xor    %dh,%dh
		mov    %ah,_0caf54_data
		mov    %dh,_0caf55_data
		xor    %eax,%eax
		mov    %dl,_0caf57_data
		mov    _096475_data,%al
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %ax,0x000030(%esp)
		jmp    _048703_jump

	_048513_jump:
		imul   $0x0000d8,%eax,%ebp
		mov    $0x000002,%bl
		mov    $_0ca6e8_data,%edx
		mov    _0ceb9c_data,%si
		xor    %cl,%cl
		mov    %bl,_0ca7bc_data(%ebp)
		add    %ebp,%edx
		mov    %cl,_0ca7bd_data(%ebp)
		mov    $0x000001,%bh
		mov    %edx,0x00001c(%esp)
		mov    0x000030(%esp),%edx
		mov    %bh,_0ca7be_data(%ebp)
		cmp    %si,%dx
		jne    _048598_jump
		mov    0x00001c(%esp),%edi
		mov    _0c2510_data,%esi
		mov    $0x0000a0,%ecx
		push   %edi

	_04855c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _048574_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04855c_jump

	_048574_jump:
		pop    %edi
		mov    _0cebee_data,%ax
		mov    %cx,_0ca7b8_data(%ebp)
		mov    %ax,_0ca7ba_data(%ebp)
		mov    0x000006(%esp),%al
		mov    %al,_0ca7bf_data(%ebp)
		jmp    _0486e2_jump

	_048598_jump:
		mov    0x00001c(%esp),%edi
		mov    (%esp,%eax,1),%dl
		mov    _0c25a0_data(,%eax,4),%esi
		mov    %dl,_0ca7bf_data(%ebp)
		push   %edi

	_0485ad_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0485c5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0485ad_jump

	_0485c5_jump:
		pop    %edi
		mov    0x000030(%esp),%edi
		cmp    $0x000005,%di
		ja     _0486b3_jump
		xor    %eax,%eax
		mov    %di,%ax
		jmp    *%cs:_0484a4_switch(,%eax,4)

	_0485e1_case:
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    0x000020(%esp),%eax
		call   _01ebec_func
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    %eax,%esi
		lea    0x000030(%esp),%eax
		add    $0x000010,%esi
		call   _01ebec_func
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		add    %eax,%esi
		lea    0x000014(%esp),%eax
		call   _01ebec_func
		add    %esi,%eax
		cwtl   
		mov    $0x0000a0,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dx,_0ca7b8_data(%ebp)
		jmp    _0486b3_jump

	_04864b_case:
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    0x000020(%esp),%eax
		call   _01ebec_func
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    %eax,%esi
		mov    $_0c0c04_data,%eax
		call   _01ebec_func
		imul   $0x000014,%eax,%eax
		add    $0x000010,%esi
		add    %esi,%eax
		cwtl   
		mov    $0x0000a0,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dx,_0ca7b8_data(%ebp)
		jmp    _0486b3_jump

	_04869d_case:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		movw   $0x0000a0,_0ca7b8_data(%eax)

	_0486b3_jump:
		mov    _0cebf0_data,%ax
		mov    0x000030(%esp),%ebx
		add    $0x00000f,%eax
		imul   %ebx,%eax
		mov    _0cec04_data,%si
		add    %eax,%esi
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    %si,_0ca7ba_data(%eax)

	_0486e2_jump:
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    0x000030(%esp),%esi
		inc    %esi
		add    $_0ca6e8_data,%eax
		mov    %si,0x000030(%esp)
		call   _01ec48_func

	_048703_jump:
		xor    %eax,%eax
		mov    _0cebde_data,%esi
		mov    _096475_data,%al
		sar    $0x000010,%esi
		add    %eax,%esi
		mov    0x00002e(%esp),%eax
		sar    $0x000010,%eax
		cmp    %esi,%eax
		jle    _048513_jump
		mov    $_0ca538_data,%edi
		mov    $0x0000a0,%edx
		mov    _0c24c8_data,%esi
		mov    $0x000064,%ebx
		push   %edi

	_04873a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _048752_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04873a_jump

	_048752_jump:
		pop    %edi
		xor    %ch,%ch
		mov    $0x000064,%esi
		mov    %dx,_0ca608_data
		mov    %bx,_0ca60a_data
		mov    %ch,_0ca60d_data
		mov    $0x000002,%bh
		mov    %edi,%eax
		mov    %bh,_0ca60c_data
		mov    %bh,_0ca60e_data
		call   _01ec48_func
		mov    %dx,_0ca6e0_data
		mov    %si,_0ca6e2_data
		mov    %bh,_0ca6e4_data
		mov    %bh,_0ca6e6_data
		mov    %ch,_0ca6e5_data
		mov    _0cebe6_data,%bx
		mov    _0e3c2d_data,%dh
		sub    $0x000019,%ebx
		test   %dh,%dh
		je     _048857_jump
		cmpb   $0x000000,_095b4b_data
		je     _0489b4_jump
		mov    _0cebb4_data,%ax
		mov    %ax,_0e3c1c_data
		xor    %eax,%eax
		mov    _0e3c2c_data,%al
		mov    _0ceb9a_data,%esi
		add    %eax,%eax
		sar    $0x000010,%esi
		mov    %ax,_0e3c24_data
		lea    0x000000(,%esi,8),%eax
		sub    %esi,%eax
		shl    $0x000002,%eax
		push   $0x000000
		sub    %esi,%eax
		mov    _0cebe6_data,%cx
		mov    %bx,_0e3c20_data
		mov    _0ca7ba_data(,%eax,8),%ax
		movswl %bx,%edx
		sub    %ecx,%eax
		mov    _0e3c1a_data,%esi
		add    $0x000023,%eax
		sar    $0x000010,%esi
		mov    %ax,_0e3c1e_data
		mov    _0e3c22_data,%eax
		mov    _0e3c1c_data,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _04e054_func
		xor    %ch,%ch
		mov    %ch,_0e3c2d_data
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_048857_jump:
		mov    _0ceb9a_data,%ebp
		sar    $0x000010,%ebp
		lea    0x000000(,%ebp,8),%eax
		sub    %ebp,%eax
		shl    $0x000002,%eax
		mov    _0cebb4_data,%dx
		sub    %ebp,%eax
		mov    %ebx,%esi
		mov    _0cebe6_data,%bx
		mov    _0ca7ba_data(,%eax,8),%ax
		movzbw _0e3c2c_data,%di
		sub    %ebx,%eax
		mov    _0e3c1c_data,%cx
		add    $0x000023,%eax
		add    %edi,%edi
		mov    %ax,0x000038(%esp)
		cmp    %cx,%dx
		jge    _0488ac_jump
		mov    %edx,%eax
		jmp    _0488ae_jump

	_0488ac_jump:
		mov    %ecx,%eax

	_0488ae_jump:
		mov    _0e3c20_data,%bx
		cmp    %bx,%si
		jge    _0488bc_jump
		mov    %esi,%ebx

	_0488bc_jump:
		mov    _0e3c22_data,%ebp
		mov    _0e3c1a_data,%ecx
		sar    $0x000010,%ebp
		sar    $0x000010,%ecx
		add    %ecx,%ebp
		movswl %dx,%ecx
		mov    %ecx,0x000024(%esp)
		mov    %ebp,0x000014(%esp)
		mov    0x000024(%esp),%ebp
		movswl %di,%ecx
		add    %ebp,%ecx
		mov    0x000014(%esp),%ebp
		cmp    %ebp,%ecx
		jge    _0488f7_jump
		movswl %ax,%ecx
		sub    %ecx,%ebp
		mov    %ebp,0x000018(%esp)
		jmp    _048900_jump

	_0488f7_jump:
		movswl %ax,%ebp
		sub    %ebp,%ecx
		mov    %ecx,0x000018(%esp)

	_048900_jump:
		mov    0x000018(%esp),%ecx
		mov    %cx,0x000034(%esp)
		mov    _0e3c1c_data,%ecx
		mov    _0e3c1e_data,%ebp
		sar    $0x000010,%ecx
		sar    $0x000010,%ebp
		add    %ecx,%ebp
		movswl %si,%ecx
		mov    %ecx,0x00000c(%esp)
		mov    0x000036(%esp),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,0x000028(%esp)
		mov    0x00000c(%esp),%ecx
		add    0x000028(%esp),%ecx
		mov    %ecx,0x000020(%esp)
		cmp    %ecx,%ebp
		jg     _048943_jump
		mov    0x000020(%esp),%ebp

	_048943_jump:
		movswl %bx,%ecx
		sub    %ecx,%ebp
		mov    %ebp,%ecx
		mov    %dx,_0e3c1c_data
		mov    0x000038(%esp),%edx
		mov    %si,_0e3c20_data
		mov    %dx,_0e3c1e_data
		mov    _095b4b_data,%dl
		mov    %di,_0e3c24_data
		test   %dl,%dl
		je     _04899d_jump
		push   $0x000001
		mov    0x000036(%esp),%esi
		movswl %cx,%ecx
		movswl %bx,%edx
		sar    $0x000010,%esi
		cwtl   
		mov    %esi,%ebx
		call   _04e054_func
		xor    %ch,%ch
		mov    %ch,_0e3c2d_data
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04899d_jump:
		mov    0x000032(%esp),%edx
		movswl %cx,%ecx
		movswl %bx,%esi
		sar    $0x000010,%edx
		cwtl   
		mov    %edx,%ebx
		mov    %esi,%edx
		call   _04e864_func

	_0489b4_jump:
		xor    %ch,%ch
		mov    %ch,_0e3c2d_data
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0489c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		lea    0x000004(%esp),%edi
		mov    _0473d7_jump,%eax
		mov    $_0473d4_jump,%esi
		mov    %eax,(%esp)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   _03bc14_func
		cmpb   $0x000000,_095b4b_data
		je     _048a1b_jump
		mov    _0e3c1c_data,%ecx
		mov    _0e3c22_data,%ebx
		mov    _0e3c1e_data,%edx
		mov    _0e3c1a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024538_func

	_048a1b_jump:
		push   $0x000001
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cebe4_data,%ebx
		mov    _0c257c_data,%eax
		sar    $0x000010,%ebx
		call   _01a178_func
		mov    _096475_data,%al
		mov    %al,0x000020(%esp)
		jmp    _048d8f_jump

	_048a48_jump:
		imul   $0x0000d8,%edx,%eax
		mov    _0ca7ba_data(%eax),%bx
		mov    %bx,0x000014(%esp)
		xor    %ebx,%ebx
		mov    _0cebf6_data,%cx
		mov    %dl,%bl
		mov    _0ca7b8_data(%eax),%si
		cmp    %cx,%bx
		je     _048acc_jump
		cmp    _0ceb9c_data,%bx
		jne    _048aa1_jump
		mov    _0ca7bf_data(%eax),%al
		mov    0x000012(%esp),%ebx
		mov    $0x000002,%ecx
		and    $0x0000ff,%eax
		movswl %si,%edx
		push   %eax
		sar    $0x000010,%ebx
		mov    _0c2510_data,%eax
		call   _01a178_func
		jmp    _048adb_jump

	_048aa1_jump:
		mov    _0ca7bf_data(%eax),%al
		mov    0x000012(%esp),%ebx
		mov    $0x000002,%ecx
		and    $0x0000ff,%eax
		movswl %si,%edi
		push   %eax
		sar    $0x000010,%ebx
		mov    _0c25a0_data(,%edx,4),%eax
		mov    %edi,%edx
		call   _01a178_func
		jmp    _048adb_jump

	_048acc_jump:
		mov    $0x000001,%edx
		add    $_0ca6e8_data,%eax
		call   _04d558_func

	_048adb_jump:
		mov    0x000020(%esp),%dl
		test   %dl,%dl
		jne    _048c29_jump
		movzbl %dl,%edi
		imul   $0x0000d8,%edi,%eax
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		add    $_0ca6e8_data,%eax
		call   _01ebec_func
		lea    0x000000(,%edi,2),%edx
		mov    %esi,%edi
		add    %eax,%edi
		mov    %ax,0x000018(%esp)
		mov    %edi,%eax
		add    $0x000010,%eax
		mov    _0ccbac_data(%edx),%bx
		mov    %eax,0x000008(%esp)
		test   %bx,%bx
		je     _048b64_jump
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		lea    0x000008(%esp),%eax
		call   _01ebec_func
		add    %edi,%eax
		add    $0x000020,%eax
		mov    %esp,%ebp
		mov    %ax,0x00000c(%esp)
		mov    0x000008(%esp),%eax
		lea    0x000004(%esp),%esi
		jmp    _048b90_jump

	_048b64_jump:
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    %ax,0x000010(%esp)
		lea    0x000008(%esp),%eax
		call   _01ebec_func
		add    %edi,%eax
		lea    0x000004(%esp),%ebp
		add    $0x000020,%eax
		mov    %esp,%esi

	_048b90_jump:
		mov    %ax,0x000010(%esp)
		push   $0x000005
		mov    0x000016(%esp),%edi
		mov    0x00000e(%esp),%edx
		mov    $0x000002,%ecx
		mov    %ebp,%eax
		sar    $0x000010,%edi
		sar    $0x000010,%edx
		mov    %edi,%ebx
		call   _01a178_func
		xor    %eax,%eax
		mov    _0cebf6_data,%cx
		mov    0x000020(%esp),%al
		cmp    %cx,%ax
		jne    _048c0d_jump
		mov    $_0cae80_data,%edi
		push   %edi

	_048bcb_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _048be3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _048bcb_jump

	_048be3_jump:
		pop    %edi
		mov    0x000010(%esp),%eax
		mov    %ax,_0caf50_data
		mov    0x000014(%esp),%eax
		mov    %ax,_0caf52_data
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01ec48_func
		mov    %edi,%eax
		call   _04d558_func
		jmp    _048d8b_jump

	_048c0d_jump:
		push   $0x000001
		mov    0x000012(%esp),%edx
		mov    $0x000002,%ecx
		mov    %edi,%ebx
		mov    %esi,%eax
		sar    $0x000010,%edx
		call   _01a178_func
		jmp    _048d8b_jump

	_048c29_jump:
		cmp    $0x000001,%dl
		jne    _048d8b_jump
		xor    %eax,%eax
		mov    %dl,%al
		imul   $0x0000d8,%eax,%eax
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		add    $_0ca6e8_data,%eax
		call   _01ebec_func
		mov    _0cebd8_data,%dx
		mov    %eax,%edi
		imul   $0x000014,%edx,%eax
		inc    %eax
		movswl %ax,%ebx
		mov    0x000014(%esp),%eax
		sub    $0x00000e,%eax
		add    $0x000010,%edi
		movswl %ax,%edx
		mov    %esi,%eax
		push   $0x000001
		add    %edi,%eax
		mov    $0x00000f,%ecx
		cwtl   
		call   _024620_func
		xor    %bl,%bl
		mov    $_0c0c04_data,%ebp
		mov    %bl,0x00001c(%esp)
		jmp    _048d75_jump

	_048c95_jump:
		mov    _0cebfa_data,%ebx
		sar    $0x000010,%ebx
		mov    $0x000003,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		xor    %ecx,%ecx
		mov    0x00001c(%esp),%cl
		cmp    %eax,%ecx
		jge    _048cc2_jump
		movw   $0x000005,0x000018(%esp)
		jmp    _048d30_jump

	_048cc2_jump:
		lea    0x000000(,%ebx,2),%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    %eax,%ecx
		jge    _048cf6_jump
		mov    _0cec04_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    %eax,%ecx
		jl     _048cf6_jump
		movw   $0x000003,0x000018(%esp)
		jmp    _048d30_jump

	_048cf6_jump:
		xor    %eax,%eax
		mov    _0cebfc_data,%bx
		mov    0x00001c(%esp),%al
		cmp    %bx,%ax
		jge    _048d30_jump
		mov    _0cec04_data,%edx
		sar    $0x000010,%edx
		add    %edx,%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		xor    %edx,%edx
		mov    0x00001c(%esp),%dl
		cmp    %eax,%edx
		jl     _048d30_jump
		movw   $0x000001,0x000018(%esp)

	_048d30_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		push   %eax
		mov    _0cebf0_data,%ax
		mov    _0cec04_data,%bx
		add    $0x00000f,%eax
		add    %ebx,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    _0cebd8_data,%cx
		mov    0x000020(%esp),%al
		imul   %ecx,%eax
		add    %esi,%eax
		add    %edi,%eax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		mov    %ebp,%eax
		call   _01a178_func
		incb   0x00001c(%esp)

	_048d75_jump:
		xor    %eax,%eax
		mov    _0ccbae_data,%dx
		mov    0x00001c(%esp),%al
		cmp    %dx,%ax
		jl     _048c95_jump

	_048d8b_jump:
		incb   0x000020(%esp)

	_048d8f_jump:
		xor    %eax,%eax
		mov    _0cebde_data,%edx
		mov    _096475_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000020(%esp),%dl
		cmp    %eax,%edx
		jle    _048a48_jump
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_048dbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		call   _04d4c4_func
		call   _036910_func
		test   %al,%al
		je     _048dd5_jump
		movb   $0x000001,_0cee7e_data

	_048dd5_jump:
		call   _040864_func
		test   %ax,%ax
		je     _048e65_jump
		call   _040784_func
		test   %ax,%ax
		jne    _048e65_jump
		call   _040714_func
		test   %ax,%ax
		jne    _048e65_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _048e30_jump
		mov    _0cebf4_data,%ax
		cmp    _0cebd6_data,%ax
		jle    _048e65_jump
		mov    _0cebf2_data,%edx
		mov    _0cebc2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _048e65_jump

	_048e30_jump:
		mov    $0x000044,%eax
		call   _06fa30_func
		xor    %eax,%eax
		mov    _0cebf6_data,%bx
		mov    _096475_data,%al
		cmp    %bx,%ax
		jne    _048e5b_jump
		mov    _0ceb9c_data,%ax
		mov    %ax,_0cebf6_data
		jmp    _048e65_jump

	_048e5b_jump:
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0cebf6_data

	_048e65_jump:
		call   _0407f4_func
		test   %ax,%ax
		je     _048eec_jump
		call   _040784_func
		test   %ax,%ax
		jne    _048eec_jump
		call   _040714_func
		test   %ax,%ax
		jne    _048eec_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _048ec0_jump
		mov    _0cebf4_data,%ax
		cmp    _0cebd6_data,%ax
		jle    _048eec_jump
		mov    _0cebf2_data,%edx
		mov    _0cebc2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _048eec_jump

	_048ec0_jump:
		mov    $0x000044,%eax
		call   _06fa30_func
		mov    _0cebf6_data,%ax
		mov    _0ceb9c_data,%di
		cmp    %di,%ax
		jne    _048ee5_jump
		xor    %edi,%eax
		mov    _096475_data,%al
		jmp    _048ee6_jump

	_048ee5_jump:
		inc    %eax

	_048ee6_jump:
		mov    %ax,_0cebf6_data

	_048eec_jump:
		cmpw   $0x000000,_0cebf6_data
		jne    _048f8e_jump
		cmpb   $0x000000,_0ceec3_data
		je     _048f8e_jump
		call   _0367ec_func
		test   %al,%al
		jne    _048f24_jump
		call   _040784_func
		test   %ax,%ax
		jne    _048f24_jump
		call   _040714_func
		test   %ax,%ax
		je     _048f8e_jump

	_048f24_jump:
		mov    _0cebf4_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000000,_0ccbac_data(,%eax,2)
		sete   %al
		xor    %ah,%ah
		mov    %eax,%edx
		mov    _0cebf4_data,%eax
		sar    $0x000010,%eax
		mov    %edx,%ecx
		mov    %dx,_0ccbac_data(,%eax,2)
		test   %cx,%cx
		je     _048f73_jump
		call   _01cb30_func
		xor    %edx,%edx
		mov    _095b9e_data,%ch
		mov    %edx,_0cccfc_data
		test   %ch,%ch
		je     _048f8e_jump
		movb   $0x000001,_0cee97_data
		jmp    _048f8e_jump

	_048f73_jump:
		call   _01cb30_func
		call   _01cb80_func
		cmpb   $0x000000,_095b9e_data
		je     _048f8e_jump
		xor    %cl,%cl
		mov    %cl,_0cee97_data

	_048f8e_jump:
		cmpw   $0x000001,_0cebf6_data
		jne    _049008_jump
		call   _040784_func
		test   %ax,%ax
		je     _049008_jump
		mov    _0ccbae_data,%ax
		cmp    _0cebfc_data,%ax
		jge    _049008_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _048fea_jump
		mov    _0cebf4_data,%ax
		cmp    _0cebd6_data,%ax
		jle    _049008_jump
		mov    _0cebf2_data,%edx
		mov    _0cebd0_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _049008_jump

	_048fea_jump:
		mov    $0x000044,%eax
		call   _06fa30_func
		incw   _0ccbae_data
		mov    _0ccbac_data,%eax
		sar    $0x000010,%eax
		call   _06ee50_func

	_049008_jump:
		cmpw   $0x000001,_0cebf6_data
		jne    _049079_jump
		call   _040714_func
		test   %ax,%ax
		je     _049079_jump
		cmpw   $0x000000,_0ccbae_data
		jle    _049079_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _04905b_jump
		mov    _0cebf4_data,%ax
		cmp    _0cebd6_data,%ax
		jle    _049079_jump
		mov    _0cebf2_data,%edx
		mov    _0cebd0_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _049079_jump

	_04905b_jump:
		mov    $0x000044,%eax
		call   _06fa30_func
		decw   _0ccbae_data
		mov    _0ccbac_data,%eax
		sar    $0x000010,%eax
		call   _06ee50_func

	_049079_jump:
		cmpw   $0x000003,_0cebf6_data
		jne    _0490d9_jump
		call   _0367ec_func
		test   %al,%al
		je     _0490d9_jump
		call   _04119c_func
		test   %al,%al
		je     _0490ca_jump
		mov    $0x000001,%dh
		mov    _0ccbae_data,%al
		mov    $0x000008,%bl
		mov    %al,_0e3c09_data
		mov    %dh,_096477_data
		mov    %bl,_0cee7c_data
		mov    _0ccbac_data,%al
		mov    $0x000001,%ebx
		mov    %al,_0e3c08_data
		mov    %bx,_0cebce_data
		jmp    _0491bb_jump

	_0490ca_jump:
		mov    $_0ca538_data,%eax
		call   _04d65c_func
		jmp    _0491bb_jump

	_0490d9_jump:
		cmpw   $0x000002,_0cebf6_data
		jne    _049126_jump
		call   _0367ec_func
		test   %al,%al
		je     _049126_jump
		mov    _0ccbae_data,%al
		mov    $0x000007,%dl
		mov    %al,_0e3c09_data
		mov    %dl,_0cee7c_data
		mov    _0ccbac_data,%al
		mov    $0x000001,%edx
		mov    %al,_0e3c08_data
		mov    $0x000001,%ah
		mov    %dx,_0cebce_data
		mov    %ah,_096477_data
		call   _04d508_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049126_jump:
		cmpw   $0x000004,_0cebf6_data
		jne    _049171_jump
		call   _0367ec_func
		test   %al,%al
		je     _049171_jump
		mov    _0ccbae_data,%al
		mov    %al,_0e3c09_data
		mov    _0ccbac_data,%al
		mov    %al,_0e3c08_data
		mov    $0x000009,%al
		mov    $0x000001,%ch
		mov    %al,_0cee7c_data
		mov    $0x000001,%eax
		mov    %ch,_096477_data
		mov    %ax,_0cebce_data
		call   _04d508_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049171_jump:
		cmpw   $0x000005,_0cebf6_data
		jne    _0491bb_jump
		call   _0367ec_func
		test   %al,%al
		je     _0491bb_jump
		cmpb   $0x000000,_0ceec3_data
		je     _0491bb_jump
		cmpb   $0x000000,_095b4b_data
		je     _0491bb_jump
		xor    %eax,%eax
		call   _04d8ec_func
		test   %al,%al
		je     _0491bb_jump
		mov    $0x000001,%bh
		mov    $0x000001,%edi
		mov    %bh,_095b98_data
		mov    %bh,_0ceec1_data
		mov    %di,_0cecda_data

	_0491bb_jump:
		call   _04d508_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0491c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cebf6_data,%ax
		cmp    _0ceb9c_data,%ax
		jne    _0491e3_jump
		cmpb   $0x000001,_0cee7e_data
		jne    _0491ec_jump

	_0491e3_jump:
		cmpb   $0x000000,_0ceec1_data
		je     _049204_jump

	_0491ec_jump:
		mov    _0ccbac_data,%ax
		mov    %ax,_0c4c80_data
		mov    _0ccbae_data,%ax
		mov    %ax,_0c4c82_data

	_049204_jump:
		mov    _0cebf6_data,%ax
		cmp    _0ceb9c_data,%ax
		je     _049225_jump
		cmpb   $0x000001,_0cee7e_data
		je     _049225_jump
		cmpb   $0x000000,_0ceec1_data
		je     _04927c_jump

	_049225_jump:
		cmpb   $0x000000,_095b9e_data
		je     _049238_jump
		mov    _0c4c80_data,%al
		mov    %al,_0cee97_data

	_049238_jump:
		xor    %cl,%cl
		mov    %cl,_0cee7c_data
		cmpb   $0x000000,_095b4b_data
		je     _049277_jump
		push   $0x000002
		mov    _0e3c1c_data,%ecx
		mov    _0e3c22_data,%ebx
		mov    _0e3c1e_data,%edx
		mov    _0e3c1a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _04e054_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049277_jump:
		call   _03b8d0_func

	_04927c_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049280_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpb   $0x000001,_0cee78_data
		jne    _04929b_jump
		movl   $_09647c_data,_0e3be0_data
		jmp    _0492a5_jump

	_04929b_jump:
		movl   $_09667c_data,_0e3be0_data

	_0492a5_jump:
		call   _04781c_func
		mov    $_0493a8_func,%ecx
		mov    $_049738_func,%esi
		mov    $_049960_func,%edi
		mov    $_049be8_func,%ebp
		mov    $0x000008,%edx
		mov    %ecx,_0e3be8_data
		mov    %esi,_0e3bf8_data
		mov    %edi,_0e3bf4_data
		mov    %ebp,_0e3bfc_data
		mov    %dx,_0cebf6_data
		mov    %dx,_0cebe0_data
		mov    %dx,_0ceb9c_data
		xor    %edx,%edx
		jmp    _049305_jump

	_0492f4_jump:
		xor    %ebx,%ebx
		mov    _095b44_data(%eax),%bl
		inc    %edx
		mov    %bx,_0ccbac_data(,%eax,2)

	_049305_jump:
		movswl %dx,%eax
		cmp    $0x000007,%eax
		jl     _0492f4_jump
		mov    $0x000064,%edi
		mov    $0x00000c,%eax
		xor    %dl,%dl
		xor    %esi,%esi
		mov    %dl,_0e3c2f_data
		mov    %si,_0cebf4_data
		mov    %di,_0cebfa_data
		mov    $0x000001,%dh
		mov    %ax,_0cebd6_data
		mov    %dh,_0ceec3_data
		mov    $0x000006,%edx
		mov    _0cee78_data,%al
		mov    %dx,_0cebc4_data
		cmp    $0x000001,%al
		jb     _04935a_jump
		jbe    _049367_jump
		cmp    $0x000002,%al
		je     _049370_jump
		jmp    _049377_jump

	_04935a_jump:
		test   %al,%al
		jne    _049377_jump
		movb   $0x00005a,_0e3c2c_data
		jmp    _049377_jump

	_049367_jump:
		movb   $0x000069,_0e3c2c_data
		jmp    _049377_jump

	_049370_jump:
		movb   $0x000078,_0e3c2c_data

	_049377_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0e3c2c_data,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x00000f,%eax
		mov    %dx,_0cebb4_data
		mov    $0x000044,%edx
		call   _04d3f0_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0493a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %esp,%edi
		mov    $_0473db_jump,%esi
		mov    _0cee78_data,%al
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		cmp    $0x000001,%al
		jb     _0493cd_jump
		jbe    _0493d8_jump
		cmp    $0x000002,%al
		je     _0493df_jump
		jmp    _0493e4_jump

	_0493cd_jump:
		test   %al,%al
		jne    _0493e4_jump
		movb   $0x000014,0x000018(%esp)
		jmp    _0493e4_jump

	_0493d8_jump:
		movb   $0x000019,0x000018(%esp)
		jmp    _0493e4_jump

	_0493df_jump:
		movb   $0x00002d,0x000018(%esp)

	_0493e4_jump:
		mov    $_0963cd_data,%edi
		mov    _0c25a8_data,%esi
		push   %edi

	_0493f0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049408_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0493f0_jump

	_049408_jump:
		pop    %edi
		mov    _0c25a8_data,%edi
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    %ecx,%ebx
		inc    %ebx
		movswl %bx,%eax
		movb   $0x00002f,_0963cc_data(%eax)
		xor    %bh,%bh
		mov    _0cebe0_data,%dx
		mov    %bh,_0963cd_data(%eax)
		xor    %bl,%bl
		test   %dx,%dx
		jl     _049587_jump

	_049440_jump:
		movswl %bx,%ecx
		imul   $0x0000d8,%ecx,%edx
		mov    $_0ca6e8_data,%edi
		mov    (%esp,%ecx,1),%al
		add    %edx,%edi
		mov    %al,_0ca7bf_data(%edx)
		cmp    $0x000008,%bx
		jne    _0494a6_jump
		mov    _0c2510_data,%esi
		push   %edi

	_049466_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04947e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049466_jump

	_04947e_jump:
		pop    %edi
		mov    $0x0000a0,%esi
		mov    _0cebee_data,%ax
		mov    %si,_0ca7b8_data(%edx)
		mov    %ax,_0ca7ba_data(%edx)
		mov    (%esp,%ecx,1),%al
		mov    %al,_0ca7bf_data(%edx)
		jmp    _04954c_jump

	_0494a6_jump:
		lea    0x000000(,%ecx,4),%esi
		cmp    $0x000007,%bx
		jne    _0494f8_jump
		mov    _0c2580_data(%esi),%esi
		push   %edi

	_0494ba_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0494d2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0494ba_jump

	_0494d2_jump:
		pop    %edi
		mov    _0cebf0_data,%ax
		add    $0x00000f,%eax
		imul   %ebx,%eax
		mov    $0x0000a0,%edi
		mov    _0cec04_data,%cx
		mov    %di,_0ca7b8_data(%edx)
		add    %ecx,%eax
		jmp    _049545_jump

	_0494f8_jump:
		mov    _0c2580_data(%esi),%esi
		push   %edi

	_0494ff_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049517_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0494ff_jump

	_049517_jump:
		pop    %edi
		xor    %eax,%eax
		mov    _0cebb4_data,%cx
		mov    0x000018(%esp),%al
		add    %ecx,%eax
		mov    %ax,_0ca7b8_data(%edx)
		mov    _0cebf0_data,%ax
		add    $0x00000f,%eax
		imul   %ebx,%eax
		mov    _0cec04_data,%si
		add    %esi,%eax

	_049545_jump:
		mov    %ax,_0ca7ba_data(%edx)

	_04954c_jump:
		movswl %bx,%edx
		imul   $0x0000d8,%edx,%edx
		mov    $0x000002,%cl
		xor    %al,%al
		mov    %cl,_0ca7bc_data(%edx)
		inc    %ebx
		mov    %al,_0ca7bd_data(%edx)
		mov    $_0ca6e8_data,%eax
		mov    $0x000001,%ch
		add    %edx,%eax
		mov    %ch,_0ca7be_data(%edx)
		call   _01ec48_func
		cmp    _0cebe0_data,%bx
		jle    _049440_jump

	_049587_jump:
		mov    $0x000001,%dl
		mov    $_0ca538_data,%edi
		mov    $0x000002,%bl
		mov    _0cebb4_data,%ax
		mov    _0c2620_data,%esi
		add    $0x000050,%eax
		mov    %dl,_0caf56_data
		mov    %ax,_0caf50_data
		xor    %dh,%dh
		mov    $0x000002,%ah
		mov    %dh,_0caf55_data
		mov    %ah,_0caf54_data
		push   %edi

	_0495be_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0495d6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0495be_jump

	_0495d6_jump:
		pop    %edi
		mov    $0x0000a0,%esi
		mov    $0x000064,%edi
		mov    $_0ca538_data,%eax
		mov    %bl,_0ca60c_data
		mov    %bl,_0ca60e_data
		mov    %dh,_0ca60d_data
		mov    %si,_0ca608_data
		mov    %di,_0ca60a_data
		call   _01ec48_func
		xor    %eax,%eax
		mov    _0cebb4_data,%bx
		mov    _0e3c2c_data,%al
		mov    _0cebe6_data,%cx
		add    %eax,%eax
		mov    _0cebe6_data,%dx
		mov    %ax,0x000010(%esp)
		mov    _0cae7a_data,%ax
		mov    _0e3c1c_data,%si
		sub    %edx,%eax
		sub    $0x000002,%ebx
		add    $0x000023,%eax
		sub    $0x000019,%ecx
		mov    %ax,0x000014(%esp)
		cmp    %si,%bx
		jge    _049656_jump
		mov    %ebx,%edx
		jmp    _049658_jump

	_049656_jump:
		mov    %esi,%edx

	_049658_jump:
		mov    _0e3c20_data,%di
		cmp    %di,%cx
		jge    _049668_jump
		mov    %ecx,%eax
		jmp    _04966a_jump

	_049668_jump:
		mov    %edi,%eax

	_04966a_jump:
		mov    0x00000e(%esp),%ebp
		mov    _0e3c1a_data,%esi
		mov    _0e3c22_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		sar    $0x000010,%ebp
		add    %edi,%esi
		movswl %bx,%edi
		add    %ebp,%edi
		cmp    %edi,%esi
		jle    _049697_jump
		movswl %dx,%edi
		sub    %edi,%esi
		mov    %esi,%edi
		jmp    _04969c_jump

	_049697_jump:
		movswl %dx,%esi
		sub    %esi,%edi

	_04969c_jump:
		mov    _0e3c1c_data,%ebp
		mov    _0e3c1e_data,%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		add    %esi,%ebp
		mov    %ebp,0x00000c(%esp)
		mov    0x000012(%esp),%ebp
		sar    $0x000010,%ebp
		movswl %cx,%esi
		add    %ebp,%esi
		mov    0x00000c(%esp),%ebp
		cmp    %ebp,%esi
		jge    _0496d1_jump
		movswl %ax,%esi
		sub    %esi,%ebp
		mov    %ebp,%esi
		jmp    _0496d6_jump

	_0496d1_jump:
		movswl %ax,%ebp
		sub    %ebp,%esi

	_0496d6_jump:
		mov    %bx,_0e3c1c_data
		mov    0x000010(%esp),%ebx
		mov    %cx,_0e3c20_data
		mov    %bx,_0e3c24_data
		mov    0x000014(%esp),%ebx
		mov    _095b4b_data,%ch
		mov    %bx,_0e3c1e_data
		test   %ch,%ch
		je     _04971b_jump
		push   $0x000001
		movswl %si,%ecx
		movswl %di,%ebx
		cwtl   
		movswl %dx,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   _04e054_func
		jmp    _04972e_jump

	_04971b_jump:
		movswl %si,%ecx
		movswl %di,%ebx
		cwtl   
		movswl %dx,%esi
		mov    %eax,%edx
		mov    %esi,%eax
		call   _04e864_func

	_04972e_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049738_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0cee78_data,%al
		cmp    $0x000001,%al
		jb     _049752_jump
		jbe    _04975d_jump
		cmp    $0x000002,%al
		je     _049764_jump
		jmp    _049769_jump

	_049752_jump:
		test   %al,%al
		jne    _049769_jump
		movb   $0x00003e,0x000004(%esp)
		jmp    _049769_jump

	_04975d_jump:
		movb   $0x000046,0x000004(%esp)
		jmp    _049769_jump

	_049764_jump:
		movb   $0x00004b,0x000004(%esp)

	_049769_jump:
		call   _03bc14_func
		cmpb   $0x000000,_095b4b_data
		je     _04979f_jump
		mov    _0e3c1c_data,%ecx
		mov    _0e3c22_data,%ebx
		mov    _0e3c1e_data,%edx
		mov    _0e3c1a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024538_func

	_04979f_jump:
		push   $0x000001
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cebe4_data,%ebx
		mov    $_0963cc_data,%eax
		sar    $0x000010,%ebx
		call   _01a178_func
		xor    %bh,%bh
		mov    $_0cae80_data,%ebp
		mov    %bh,0x000008(%esp)
		jmp    _04993e_jump

	_0497ce_jump:
		xor    %eax,%eax
		mov    %dl,%al
		imul   $0x0000d8,%eax,%eax
		mov    _0ca7b8_data(%eax),%bx
		mov    _0cebf6_data,%cx
		mov    %bx,(%esp)
		mov    _0ca7ba_data(%eax),%bx
		cmp    %cx,%dx
		je     _04981a_jump
		xor    %edx,%edx
		mov    $0x000002,%ecx
		mov    _0ca7bf_data(%eax),%dl
		movswl %bx,%ebx
		push   %edx
		mov    0x000002(%esp),%edx
		add    $_0ca6e8_data,%eax
		sar    $0x000010,%edx
		call   _01a178_func
		jmp    _049837_jump

	_04981a_jump:
		mov    _0cebf4_data,%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    $0x000001,%edx
		add    $_0ca6e8_data,%eax
		call   _04d558_func

	_049837_jump:
		mov    _0cebde_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000008(%esp),%dl
		dec    %eax
		cmp    %eax,%edx
		jge    _04993a_jump
		cmpb   $0x000000,_0e3c2f_data
		je     _0498f1_jump
		xor    %eax,%eax
		mov    _0cebf6_data,%si
		mov    %dl,%al
		cmp    %si,%ax
		jne    _0498f1_jump
		mov    _0cebf4_data,%eax
		sar    $0x000010,%eax
		mov    _0ccbaa_data(,%eax,2),%eax
		mov    _0e3be0_data,%esi
		sar    $0x000010,%eax
		mov    %ebp,%edi
		mov    (%esi,%eax,4),%esi
		push   %edi

	_04988d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0498a5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04988d_jump

	_0498a5_jump:
		pop    %edi
		mov    _0cebf4_data,%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    _0ca7bf_data(%eax),%dl
		mov    %dl,_0caf57_data
		mov    _0ca7ba_data(%eax),%ax
		mov    %ax,_0caf52_data
		xor    %eax,%eax
		mov    (%esp),%edx
		mov    0x000004(%esp),%al
		add    %eax,%edx
		mov    %ebp,%eax
		mov    %dx,_0caf50_data
		call   _01ec48_func
		mov    %ebp,%eax
		xor    %edx,%edx
		call   _04d558_func
		jmp    _04993a_jump

	_0498f1_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		imul   $0x0000d8,%eax,%ebx
		mov    (%esp),%edi
		mov    $0x000002,%ecx
		xor    %edx,%edx
		mov    _0e3be0_data,%esi
		mov    _0ca7bf_data(%ebx),%dl
		mov    _0ccbaa_data(,%eax,2),%eax
		push   %edx
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    _0ca7b8_data(%ebx),%ebx
		mov    0x000008(%esp),%dl
		sar    $0x000010,%ebx
		add    %edi,%edx
		mov    (%esi,%eax,4),%eax
		movswl %dx,%edx
		call   _01a178_func

	_04993a_jump:
		incb   0x000008(%esp)

	_04993e_jump:
		xor    %edx,%edx
		mov    _0cebe0_data,%bx
		mov    0x000008(%esp),%dl
		cmp    %bx,%dx
		jle    _0497ce_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049960_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cebe0_data,%si
		call   _04d4c4_func
		cmpb   $0x000000,_0e3c2f_data
		jne    _049b92_jump
		call   _036910_func
		test   %al,%al
		je     _04998e_jump
		movb   $0x000001,_0cee7e_data

	_04998e_jump:
		call   _040784_func
		test   %ax,%ax
		jne    _049a53_jump
		call   _040714_func
		test   %ax,%ax
		jne    _049a53_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _0499e7_jump
		mov    _0cebf4_data,%ax
		cmp    _0cebd6_data,%ax
		jle    _049a53_jump
		mov    _0cebf2_data,%edx
		mov    _0cebc2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _049a53_jump

	_0499e7_jump:
		call   _040864_func
		test   %ax,%ax
		je     _049a1d_jump
		mov    $0x000044,%eax
		call   _06fa30_func
		mov    _0cebf6_data,%ax
		test   %ax,%ax
		jne    _049a11_jump
		movw   $0x000008,_0cebf6_data
		jmp    _049a53_jump

	_049a11_jump:
		mov    %eax,%edx
		dec    %edx
		mov    %dx,_0cebf6_data
		jmp    _049a53_jump

	_049a1d_jump:
		call   _0407f4_func
		test   %ax,%ax
		je     _049a53_jump
		mov    $0x000044,%eax
		call   _06fa30_func
		mov    _0cebf6_data,%bx
		cmp    $0x000008,%bx
		jne    _049a49_jump
		xor    %edi,%edi
		mov    %di,_0cebf6_data
		jmp    _049a53_jump

	_049a49_jump:
		mov    %ebx,%ecx
		inc    %ecx
		mov    %cx,_0cebf6_data

	_049a53_jump:
		cmpw   $0x000007,_0cebf6_data
		jne    _049ac7_jump
		call   _0367ec_func
		test   %al,%al
		je     _049ac7_jump
		cmpb   $0x000000,_0ceec3_data
		je     _049ac7_jump
		mov    $0x00004b,%ebx
		mov    $0x000048,%ecx
		mov    $0x00004d,%edi
		mov    $0x000050,%eax
		mov    $0x000038,%edx
		mov    %bx,_0ccbac_data
		mov    %cx,_0ccbae_data
		mov    %di,_0ccbb0_data
		mov    %ax,_0ccbb2_data
		mov    %dx,_0ccbb4_data
		mov    $0x000039,%ebx
		mov    $0x00001d,%ecx
		mov    %bx,_0ccbb6_data
		mov    %cx,_0ccbb8_data
		jmp    _049bd4_jump

	_049ac7_jump:
		mov    _0cebf6_data,%di
		test   %di,%di
		jl     _049b09_jump
		cmp    $0x000006,%di
		jg     _049b09_jump
		call   _0367ec_func
		test   %al,%al
		je     _049b09_jump
		cmpb   $0x000000,_0ceec3_data
		je     _049b09_jump
		movb   $0x000001,_0e3c2f_data
		call   _041128_func
		call   _04d508_func
		mov    _0cebe0_data,%si
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049b09_jump:
		cmpw   $0x000008,_0cebf6_data
		jne    _049bd4_jump
		call   _0367ec_func
		test   %al,%al
		je     _049bd4_jump
		mov    _0cebe0_data,%si
		mov    $0x000001,%ecx
		mov    %esi,%eax
		cmp    %cx,%si
		jg     _049b65_jump
		jmp    _049b6a_jump

	_049b39_jump:
		mov    %ecx,%eax

	_049b3b_jump:
		inc    %eax
		movswl %cx,%edx
		lea    0x000000(,%edx,2),%ebx
		movswl %ax,%edx
		mov    _0ccbac_data(%ebx),%bx
		cmp    _0ccbac_data(,%edx,2),%bx
		je     _049b5f_jump
		cmp    %si,%ax
		jl     _049b3b_jump

	_049b5f_jump:
		inc    %ecx
		cmp    %si,%cx
		jge    _049b6a_jump

	_049b65_jump:
		cmp    %si,%ax
		je     _049b39_jump

	_049b6a_jump:
		mov    %si,_0cebe0_data
		cmp    %si,%ax
		jge    _049bd4_jump
		mov    $_0ca538_data,%eax
		call   _04d65c_func
		call   _04d508_func
		mov    _0cebe0_data,%si
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_049b92_jump:
		xor    %ecx,%ecx
		xor    %ebx,%ebx

	_049b96_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _0406e0_func
		test   %al,%al
		je     _049bcc_jump
		mov    _0e3be0_data,%edx
		movswl %cx,%eax
		cmp    (%edx,%eax,4),%ebx
		je     _049bcc_jump
		mov    _0cebf4_data,%eax
		sar    $0x000010,%eax
		mov    %bl,_0e3c2f_data
		mov    %cx,_0ccbac_data(,%eax,2)
		call   _041128_func

	_049bcc_jump:
		inc    %ecx
		cmp    $0x000080,%cx
		jl     _049b96_jump

	_049bd4_jump:
		call   _04d508_func
		mov    _0cebe0_data,%si
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049be8_func:
		push   %ebx
		push   %edx
		mov    $0x000004,%ah
		mov    _0cee7e_data,%dl
		mov    %ah,_0cee7c_data
		test   %dl,%dl
		jne    _049c22_jump
		xor    %dh,%dh
		jmp    _049c0e_jump

	_049c00_jump:
		mov    _0ccbac_data(,%eax,2),%bl
		inc    %edx
		mov    %bl,_095b44_data(%eax)

	_049c0e_jump:
		mov    _0cebde_data,%ebx
		sar    $0x000010,%ebx
		movswl %dx,%eax
		dec    %ebx
		cmp    %ebx,%eax
		jl     _049c00_jump
		pop    %edx
		pop    %ebx
		ret    

	_049c22_jump:
		xor    %dh,%dh
		mov    _095b4b_data,%bl
		mov    %dh,_096477_data
		test   %bl,%bl
		jne    _049c39_jump
		call   _03b8d0_func

	_049c39_jump:
		pop    %edx
		pop    %ebx
		ret    



_049c3c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_049c3c_func,%edx
		mov    $_049c9c_func,%ebx
		mov    $_049df8_func,%ecx
		mov    $_049fd0_func,%esi
		mov    $_04a228_func,%edi
		mov    %edx,_0e3bec_data
		mov    %ebx,_0e3be8_data
		mov    %ecx,_0e3bf8_data
		mov    %esi,_0e3bf4_data
		xor    %edx,%edx
		mov    %edi,_0e3bfc_data
		mov    %dx,_0c8bf6_data
		mov    %dx,_0c8bf4_data
		mov    %dx,_0c8bf2_data
		mov    %dx,_0c8bf0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049c9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		xor    %edx,%edx
		mov    $0x00000c,%ecx
		mov    %dx,_0cebf4_data
		mov    %cx,_0cebd6_data
		mov    %dx,_0cebf6_data
		xor    %dl,%dl
		xor    %ecx,%ecx
		mov    %dl,_096475_data
		imul   $0x000014,%ecx,%edx
		mov    %esp,%edi
		mov    $0x000001,%ah
		mov    $0x000064,%ebx
		mov    $_0473e5_jump,%esi
		xor    %ebp,%ebp
		mov    %ah,_0ceec3_data
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    %bx,_0cebfa_data
		mov    $0x000006,%esi
		mov    $0x000004,%eax
		mov    $_0ca6e8_data,%ebx
		mov    %si,_0cebc4_data
		mov    %ax,_0cebe0_data
		add    $0x000046,%edx
		mov    %ax,_0ceb9c_data
		mov    %edx,0x000008(%esp)

	_049d16_jump:
		xor    %dh,%dh
		mov    %dh,_0e3c26_data(%ecx)
		imul   $0x0000d8,%ecx,%edx
		movb   $0x000002,_0ca7bc_data(%edx)
		movb   $0x000001,_0ca7be_data(%edx)
		xor    %al,%al
		mov    %al,_0ca7bd_data(%edx)
		cmp    $0x000004,%ecx
		jne    _049d85_jump
		mov    $0x0000a0,%eax
		mov    $0x00009b,%esi
		mov    %ebx,%edi
		mov    %si,_0ca7ba_data(%edx)
		mov    _0c2510_data,%esi
		mov    %ax,_0ca7b8_data(%edx)
		push   %edi

	_049d60_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049d78_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049d60_jump

	_049d78_jump:
		pop    %edi
		mov    0x000004(%esp),%al
		mov    %al,_0ca7bf_data(%edx)
		jmp    _049dc7_jump

	_049d85_jump:
		mov    $0x000078,%edi
		mov    _0c2630_data(%ebp),%esi
		mov    %di,_0ca7b8_data(%edx)
		mov    %ebx,%edi
		push   %edi

	_049d9a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _049db2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _049d9a_jump

	_049db2_jump:
		pop    %edi
		mov    (%esp,%ecx,1),%al
		mov    0x000008(%esp),%esi
		mov    %al,_0ca7bf_data(%edx)
		mov    %si,_0ca7ba_data(%edx)

	_049dc7_jump:
		mov    %ebx,%eax
		mov    0x000008(%esp),%esi
		call   _01ec48_func
		add    $0x000004,%ebp
		inc    %ecx
		add    $0x000014,%esi
		add    $0x0000d8,%ebx
		mov    %esi,0x000008(%esp)
		cmp    $0x000004,%ecx
		jle    _049d16_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049df8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %esp,%edi
		mov    $_0473ea_jump,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		call   _03bc14_func
		cmpb   $0x000000,_095b4b_data
		je     _049e40_jump
		mov    _0e3c1c_data,%ecx
		mov    _0e3c22_data,%ebx
		mov    _0e3c1e_data,%edx
		mov    _0e3c1a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024538_func

	_049e40_jump:
		mov    $0x000001,%edx
		mov    $_0cc110_data,%eax
		call   _04d558_func
		xor    %dl,%dl
		mov    %dl,0x00000c(%esp)
		mov    $0x000028,%ebp

	_049e5a_jump:
		xor    %edx,%edx
		mov    0x00000c(%esp),%dl
		imul   $0x0000d8,%edx,%eax
		mov    _0ca7b8_data(%eax),%bx
		mov    _0ca7ba_data(%eax),%si
		mov    %bx,0x000008(%esp)
		cmp    $0x000004,%dl
		jae    _049f2b_jump
		cmpb   $0x000000,_0e3c26_data(%edx)
		je     _049eb0_jump
		xor    %eax,%eax
		mov    %dl,%al
		imul   $0x000014,%eax,%eax
		push   $0x000000
		mov    $0x000009,%ecx
		add    $0x00003b,%eax
		mov    $0x000022,%ebx
		movswl %ax,%edx
		mov    $0x0000c0,%eax
		call   _023c9c_func

	_049eb0_jump:
		movzbl 0x00000c(%esp),%edi
		cmpw   $0x000002,_0c8bf0_data(,%edi,2)
		jne    _049f05_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   $0x000014,%eax,%eax
		push   $0x000002
		mov    $0x000010,%ecx
		mov    %ebp,%ebx
		add    $0x000037,%eax
		push   $0x000000
		movswl %ax,%edx
		mov    $0x0000bc,%eax
		call   _019f4c_func
		xor    %eax,%eax
		mov    $0x000002,%ecx
		mov    (%esp,%edi,1),%al
		mov    $0x0000e9,%edx
		push   %eax
		movswl %si,%ebx
		mov    $_0c0c08_data,%eax
		call   _01a178_func
		jmp    _049f2b_jump

	_049f05_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		imul   $0x000014,%eax,%eax
		push   $0x000001
		mov    $0x000010,%ecx
		mov    %ebp,%ebx
		add    $0x000037,%eax
		push   $0x000000
		movswl %ax,%edx
		mov    $0x0000bc,%eax
		call   _019f4c_func

	_049f2b_jump:
		xor    %eax,%eax
		mov    _0cebf6_data,%bx
		mov    0x00000c(%esp),%al
		cmp    %bx,%ax
		je     _049f6a_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		xor    %edx,%edx
		mov    (%esp,%eax,1),%dl
		imul   $0x0000d8,%eax,%eax
		mov    $0x000002,%ecx
		push   %edx
		mov    0x00000a(%esp),%edx
		movswl %si,%ebx
		sar    $0x000010,%edx
		add    $_0ca6e8_data,%eax
		call   _01a178_func
		jmp    _049f95_jump

	_049f6a_jump:
		xor    %edx,%edx
		mov    0x00000c(%esp),%dl
		imul   $0x0000d8,%edx,%ebx
		mov    (%esp,%edx,1),%al
		mov    %al,_0ca7bf_data(%ebx)
		add    $_0ca6e8_data,%ebx
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _01ec48_func
		mov    %ebx,%eax
		call   _04d558_func

	_049f95_jump:
		mov    0x00000c(%esp),%dh
		inc    %dh
		mov    %dh,0x00000c(%esp)
		cmp    $0x000004,%dh
		jbe    _049e5a_jump
		push   $0x000005
		mov    $0x000002,%ecx
		mov    $0x0000af,%ebx
		mov    $0x0000a0,%edx
		mov    _0c2640_data,%eax
		call   _01a178_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_049fd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _04d4c4_func
		cmpw   $0x000001,_0cec3a_data
		jne    _04a005_jump
		mov    _0c8bf0_data,%bx
		test   %bx,%bx
		jne    _04a005_jump
		mov    _0cebf6_data,%ax
		cmp    _0ceb9c_data,%ax
		jne    _04a005_jump
		mov    %bx,_0cec3a_data

	_04a005_jump:
		call   _036910_func
		test   %al,%al
		je     _04a015_jump
		movb   $0x000001,_0cee7e_data

	_04a015_jump:
		cmpb   $0x000000,_0ceec3_data
		jne    _04a052_jump
		mov    _0cebf4_data,%ax
		cmp    _0cebd6_data,%ax
		jle    _04a0d2_jump
		mov    _0cebf2_data,%edx
		mov    _0cebc2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04a0d2_jump

	_04a052_jump:
		call   _040864_func
		test   %ax,%ax
		je     _04a093_jump
		mov    $0x000044,%eax
		call   _06fa30_func
		xor    %eax,%eax
		mov    _0cebf6_data,%cx
		mov    _096475_data,%al
		cmp    %cx,%ax
		jne    _04a087_jump
		mov    _0ceb9c_data,%ax
		mov    %ax,_0cebf6_data
		jmp    _04a0d2_jump

	_04a087_jump:
		mov    %ecx,%esi
		dec    %esi
		mov    %si,_0cebf6_data
		jmp    _04a0d2_jump

	_04a093_jump:
		call   _0407f4_func
		test   %ax,%ax
		je     _04a0d2_jump
		mov    $0x000044,%eax
		call   _06fa30_func
		mov    _0cebf6_data,%ax
		mov    _0ceb9c_data,%dx
		cmp    %dx,%ax
		jne    _04a0c8_jump
		xor    %edx,%eax
		mov    _096475_data,%al
		mov    %ax,_0cebf6_data
		jmp    _04a0d2_jump

	_04a0c8_jump:
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,_0cebf6_data

	_04a0d2_jump:
		xor    %dh,%dh
		mov    %dh,_0cee94_data
		call   _0408d4_func
		test   %ax,%ax
		je     _04a10f_jump
		mov    _0cebf6_data,%ax
		cmp    _0ceb9c_data,%ax
		je     _04a10f_jump
		cmpb   $0x000000,_0e3c26_data
		jne    _04a106_jump
		mov    $0x000044,%eax
		call   _06fa30_func

	_04a106_jump:
		movb   $0x000001,_0e3c26_data
		jmp    _04a129_jump

	_04a10f_jump:
		cmpb   $0x000000,_0e3c26_data
		je     _04a121_jump
		movw   $0x000002,_0c8bf0_data

	_04a121_jump:
		xor    %bh,%bh
		mov    %bh,_0e3c26_data

	_04a129_jump:
		call   _040960_func
		test   %ax,%ax
		je     _04a15e_jump
		mov    _0cebf6_data,%ax
		cmp    _0ceb9c_data,%ax
		je     _04a15e_jump
		cmpb   $0x000000,_0e3c27_data
		jne    _04a155_jump
		mov    $0x000044,%eax
		call   _06fa30_func

	_04a155_jump:
		movb   $0x000001,_0e3c27_data
		jmp    _04a178_jump

	_04a15e_jump:
		cmpb   $0x000000,_0e3c27_data
		je     _04a170_jump
		movw   $0x000002,_0c8bf2_data

	_04a170_jump:
		xor    %ah,%ah
		mov    %ah,_0e3c27_data

	_04a178_jump:
		call   _0409ec_func
		test   %ax,%ax
		je     _04a1ad_jump
		mov    _0cebf6_data,%ax
		cmp    _0ceb9c_data,%ax
		je     _04a1ad_jump
		cmpb   $0x000000,_0e3c28_data
		jne    _04a1a4_jump
		mov    $0x000044,%eax
		call   _06fa30_func

	_04a1a4_jump:
		movb   $0x000001,_0e3c28_data
		jmp    _04a1c7_jump

	_04a1ad_jump:
		cmpb   $0x000000,_0e3c28_data
		je     _04a1bf_jump
		movw   $0x000002,_0c8bf4_data

	_04a1bf_jump:
		xor    %bh,%bh
		mov    %bh,_0e3c28_data

	_04a1c7_jump:
		call   _040a78_func
		test   %ax,%ax
		je     _04a1fc_jump
		mov    _0cebf6_data,%ax
		cmp    _0ceb9c_data,%ax
		je     _04a1fc_jump
		cmpb   $0x000000,_0e3c29_data
		jne    _04a1f3_jump
		mov    $0x000044,%eax
		call   _06fa30_func

	_04a1f3_jump:
		movb   $0x000001,_0e3c29_data
		jmp    _04a216_jump

	_04a1fc_jump:
		cmpb   $0x000000,_0e3c29_data
		je     _04a20e_jump
		movw   $0x000002,_0c8bf6_data

	_04a20e_jump:
		xor    %ah,%ah
		mov    %ah,_0e3c29_data

	_04a216_jump:
		movb   $0x000001,_0cee94_data
		call   _04d508_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a228_func:
		push   %ebx
		push   %edx
		push   %esi
		xor    %eax,%eax

	_04a22d_jump:
		movswl %ax,%edx
		cmpw   $0x000000,_0c8bf0_data(,%edx,2)
		sete   %bl
		xor    %bh,%bh
		inc    %eax
		mov    %bx,_0c8bf0_data(,%edx,2)
		cmp    $0x000004,%ax
		jl     _04a22d_jump
		mov    %bh,_0cee7e_data
		xor    %esi,%esi
		xor    %edx,%edx
		mov    %si,_0cebce_data
		mov    %edx,_0e3bfc_data
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_04a268_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_04a368_func,%edx
		mov    $_04a6ec_func,%ebx
		mov    $_04a870_func,%ecx
		mov    $_04ab1c_func,%esi
		mov    $0x000064,%edi
		mov    _0c4c78_data,%ax
		mov    %edx,_0e3be8_data
		mov    %ebx,_0e3bf8_data
		mov    %ecx,_0e3bf4_data
		mov    %esi,_0e3bfc_data
		mov    %ax,_0ccbae_data
		mov    %di,_0cebfa_data
		mov    $0x000005,%edx
		mov    _0c4c7a_data,%ax
		xor    %esi,%esi
		mov    %ax,_0ccbb0_data
		mov    %dx,_0cebf6_data
		mov    %dx,_0cebe0_data
		mov    %dx,_0ceb9c_data
		mov    %si,_0cebf4_data
		mov    _0c4c7e_data,%ax
		mov    $0x000001,%dl
		mov    %ax,_0ccbb2_data
		xor    %ah,%ah
		mov    %dl,_0ceec3_data
		mov    %ah,_096475_data
		mov    $0x00000c,%eax
		mov    $0x000006,%edx
		mov    %ax,_0cebd6_data
		mov    _0cee78_data,%al
		mov    %dx,_0cebc4_data
		cmp    $0x000001,%al
		jb     _04a324_jump
		jbe    _04a331_jump
		cmp    $0x000002,%al
		je     _04a331_jump
		jmp    _04a338_jump

	_04a324_jump:
		test   %al,%al
		jne    _04a338_jump
		movb   $0x000041,_0e3c2c_data
		jmp    _04a338_jump

	_04a331_jump:
		movb   $0x000069,_0e3c2c_data

	_04a338_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0e3c2c_data,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x000014,%eax
		mov    %dx,_0cebb4_data
		mov    $0x00003c,%edx
		call   _04d3f0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a368_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    %esp,%edi
		mov    $_0473ef_jump,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		mov    $_0963cc_data,%edi
		mov    _0c25ac_data,%esi
		push   %edi

	_04a387_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a39f_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04a387_jump

	_04a39f_jump:
		pop    %edi
		mov    _096475_data,%al
		mov    %al,0x000030(%esp)
		jmp    _04a550_jump

	_04a3ae_jump:
		mov    %eax,%ebx
		imul   $0x0000d8,%eax,%ebp
		sub    %edx,%ebx
		mov    (%esp,%ebx,1),%dl
		movzbw %al,%si
		mov    %dl,_0ca7bf_data(%ebp)
		xor    %edx,%edx
		mov    %esi,%ebx
		mov    _096475_data,%dl
		sub    %edx,%ebx
		mov    %ebx,%edx
		mov    _0cebf0_data,%bx
		add    $0x00000f,%ebx
		imul   %ebx,%edx
		add    _0cec04_data,%dx
		mov    $0x000001,%bl
		mov    %dx,_0ca7ba_data(%ebp)
		mov    $0x000002,%dh
		mov    %bl,_0ca7be_data(%ebp)
		mov    _0ceb9c_data,%cx
		mov    %dh,_0ca7bc_data(%ebp)
		mov    $_0ca6e8_data,%edx
		xor    %bh,%bh
		add    %ebp,%edx
		mov    %bh,_0ca7bd_data(%ebp)
		cmp    %cx,%si
		jne    _04a456_jump
		mov    _0c2510_data,%esi
		mov    %edx,%edi
		push   %edi

	_04a422_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a43a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04a422_jump

	_04a43a_jump:
		pop    %edi
		movw   $0x0000a0,_0ca7b8_data(%ebp)
		mov    _0cebee_data,%ax
		mov    %ax,_0ca7ba_data(%ebp)
		jmp    _04a536_jump

	_04a456_jump:
		test   %al,%al
		jne    _04a48d_jump
		mov    $0x0000a0,%edi
		mov    _0c25e8_data,%esi
		mov    %di,_0ca7b8_data(%ebp)
		mov    %edx,%edi
		push   %edi

	_04a46f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a487_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04a46f_jump

	_04a487_jump:
		pop    %edi
		jmp    _04a536_jump

	_04a48d_jump:
		mov    0x000030(%esp),%ch
		shl    $0x000002,%eax
		cmp    $0x000004,%ch
		jne    _04a4c9_jump
		mov    $0x0000a0,%esi
		mov    %edx,%edi
		mov    %si,_0ca7b8_data(%ebp)
		mov    _0c258c_data(%eax),%esi
		push   %edi

	_04a4ae_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a4c6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04a4ae_jump

	_04a4c6_jump:
		pop    %edi
		jmp    _04a536_jump

	_04a4c9_jump:
		mov    $0x000001,%ecx
		mov    %edx,%edi
		mov    _0c258c_data(%eax),%esi
		mov    $0x000008,%ebx
		push   %edi

	_04a4dc_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04a4f4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04a4dc_jump

	_04a4f4_jump:
		pop    %edi
		push   $0x000002
		mov    $0xffffffff,%edx
		mov    %edi,%eax
		call   _01ebec_func
		push   $0x000002
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		mov    $0xffffffff,%edx
		mov    %eax,%esi
		mov    $_0c0b68_data,%eax
		add    $0x000010,%esi
		call   _01ebec_func
		add    %esi,%eax
		cwtl   
		mov    $0x0000a0,%edx
		sar    %eax
		sub    %eax,%edx
		mov    %dx,_0ca7b8_data(%ebp)

	_04a536_jump:
		xor    %eax,%eax
		mov    0x000030(%esp),%al
		imul   $0x0000d8,%eax,%eax
		add    $_0ca6e8_data,%eax
		call   _01ec48_func
		incb   0x000030(%esp)

	_04a550_jump:
		mov    _0cebde_data,%esi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _096475_data,%dl
		sar    $0x000010,%esi
		mov    0x000030(%esp),%al
		add    %edx,%esi
		cmp    %esi,%eax
		jle    _04a3ae_jump
		xor    %eax,%eax
		mov    _0e3c2c_data,%al
		mov    _0ceb9a_data,%esi
		add    %eax,%eax
		sar    $0x000010,%esi
		mov    %ax,0x000028(%esp)
		lea    0x000000(,%esi,8),%eax
		sub    %esi,%eax
		shl    $0x000002,%eax
		sub    %esi,%eax
		mov    _0cebb4_data,%dx
		mov    _0cebe6_data,%bx
		mov    _0ca7ba_data(,%eax,8),%ax
		mov    _0cebe6_data,%cx
		mov    %eax,%edi
		sub    $0x000019,%ebx
		sub    %ecx,%edi
		mov    _0e3c1c_data,%si
		add    $0x000023,%edi
		cmp    %si,%dx
		jge    _04a5cd_jump
		mov    %edx,%ecx
		jmp    _04a5cf_jump

	_04a5cd_jump:
		mov    %esi,%ecx

	_04a5cf_jump:
		mov    _0e3c20_data,%ax
		cmp    %ax,%bx
		jge    _04a5dc_jump
		mov    %ebx,%eax

	_04a5dc_jump:
		mov    _0e3c1a_data,%esi
		sar    $0x000010,%esi
		mov    %esi,0x000020(%esp)
		mov    _0e3c22_data,%esi
		mov    0x000020(%esp),%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		movswl %dx,%ebp
		mov    %ebp,0x000008(%esp)
		mov    0x000026(%esp),%ebp
		sar    $0x000010,%ebp
		mov    %ebp,0x00001c(%esp)
		mov    0x000008(%esp),%ebp
		add    0x00001c(%esp),%ebp
		cmp    %ebp,%esi
		jle    _04a621_jump
		movswl %cx,%ebp
		sub    %ebp,%esi
		mov    %esi,0x000024(%esp)
		jmp    _04a62a_jump

	_04a621_jump:
		movswl %cx,%esi
		sub    %esi,%ebp
		mov    %ebp,0x000024(%esp)

	_04a62a_jump:
		mov    0x000024(%esp),%esi
		mov    %si,0x00002c(%esp)
		mov    _0e3c1e_data,%esi
		sar    $0x000010,%esi
		mov    %esi,0x000018(%esp)
		mov    _0e3c1c_data,%esi
		mov    0x000018(%esp),%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		movswl %bx,%ebp
		mov    %ebp,0x000010(%esp)
		movswl %di,%ebp
		mov    %ebp,0x00000c(%esp)
		mov    0x000010(%esp),%ebp
		add    0x00000c(%esp),%ebp
		cmp    %ebp,%esi
		jle    _04a674_jump
		movswl %ax,%ebp
		sub    %ebp,%esi
		mov    %esi,0x000014(%esp)
		jmp    _04a67d_jump

	_04a674_jump:
		movswl %ax,%esi
		sub    %esi,%ebp
		mov    %ebp,0x000014(%esp)

	_04a67d_jump:
		mov    0x000014(%esp),%esi
		mov    %dx,_0e3c1c_data
		mov    0x000028(%esp),%edx
		mov    %bx,_0e3c20_data
		mov    %dx,_0e3c24_data
		mov    _095b4b_data,%dl
		mov    %di,_0e3c1e_data
		test   %dl,%dl
		je     _04a6c8_jump
		push   $0x000001
		mov    0x00002e(%esp),%ebx
		movswl %si,%edx
		cwtl   
		sar    $0x000010,%ebx
		movswl %cx,%esi
		mov    %edx,%ecx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _04e054_func
		jmp    _04a6df_jump

	_04a6c8_jump:
		mov    0x00002a(%esp),%ebx
		movswl %si,%esi
		movswl %ax,%edx
		sar    $0x000010,%ebx
		movswl %cx,%eax
		mov    %esi,%ecx
		call   _04e864_func

	_04a6df_jump:
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a6ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %esp,%edi
		mov    $_0473f8_switch,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   _03bc14_func
		cmpb   $0x000000,_095b4b_data
		je     _04a736_jump
		mov    _0e3c1c_data,%ecx
		mov    _0e3c22_data,%ebx
		mov    _0e3c1e_data,%edx
		mov    _0e3c1a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024538_func

	_04a736_jump:
		push   $0x000001
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cebe4_data,%ebx
		mov    $_0963cc_data,%eax
		sar    $0x000010,%ebx
		call   _01a178_func
		mov    _096475_data,%al
		mov    %al,0x000018(%esp)
		mov    $0x000002,%ebp
		jmp    _04a843_jump

	_04a768_jump:
		imul   $0x0000d8,%eax,%eax
		mov    _0ca7b8_data(%eax),%dx
		mov    %dx,0x000010(%esp)
		mov    _0ca7ba_data(%eax),%dx
		mov    %dx,0x000014(%esp)
		xor    %edx,%edx
		mov    _0cebf6_data,%bx
		mov    0x000018(%esp),%dl
		cmp    %bx,%dx
		je     _04a7bd_jump
		mov    0x000012(%esp),%ebx
		xor    %edx,%edx
		mov    %ebp,%ecx
		mov    _0ca7bf_data(%eax),%dl
		sar    $0x000010,%ebx
		push   %edx
		mov    0x000012(%esp),%edx
		add    $_0ca6e8_data,%eax
		sar    $0x000010,%edx
		call   _01a178_func
		jmp    _04a7da_jump

	_04a7bd_jump:
		mov    _0cebf4_data,%eax
		sar    $0x000010,%eax
		imul   $0x0000d8,%eax,%eax
		mov    $0x000001,%edx
		add    $_0ca6e8_data,%eax
		call   _04d558_func

	_04a7da_jump:
		mov    0x000018(%esp),%dl
		test   %dl,%dl
		jbe    _04a83f_jump
		cmp    $0x000004,%dl
		jae    _04a83f_jump
		movzbl %dl,%edi
		imul   $0x0000d8,%edi,%esi
		mov    $_0ca6e8_data,%eax
		mov    $0x000001,%ecx
		mov    $0x000008,%ebx
		push   %ebp
		mov    $0xffffffff,%edx
		add    %esi,%eax
		call   _01ebec_func
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0ca7bf_data(%esi),%al
		add    $0x000010,%edx
		push   %eax
		mov    0x000014(%esp),%eax
		add    %edx,%eax
		mov    0x000016(%esp),%ebx
		movswl %ax,%edx
		mov    _0ccbaa_data(,%edi,2),%eax
		mov    %ebp,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    0x000004(%esp,%eax,4),%eax
		call   _01a178_func

	_04a83f_jump:
		incb   0x000018(%esp)

	_04a843_jump:
		xor    %eax,%eax
		mov    _0cebde_data,%edx
		mov    _096475_data,%al
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000018(%esp),%al
		cmp    %edx,%eax
		jle    _04a768_jump
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04a870_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _04d4c4_func
		call   _036910_func
		mov    $0x000004,%cl
		test   %al,%al
		je     _04a88c_jump
		movb   $0x000001,_0cee7e_data

	_04a88c_jump:
		cmpb   $0x000000,_0ceec3_data
		jne    _04a8c9_jump
		mov    _0cebf4_data,%ax
		cmp    _0cebd6_data,%ax
		jle    _04a948_jump
		mov    _0cebf2_data,%edx
		mov    _0cebc2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04a948_jump

	_04a8c9_jump:
		call   _040864_func
		test   %ax,%ax
		je     _04a909_jump
		mov    $0x000044,%eax
		call   _06fa30_func
		xor    %eax,%eax
		mov    _0cebf6_data,%di
		mov    _096475_data,%al
		cmp    %di,%ax
		jne    _04a8fe_jump
		mov    _0ceb9c_data,%ax
		mov    %ax,_0cebf6_data
		jmp    _04a948_jump

	_04a8fe_jump:
		mov    %edi,%eax
		dec    %eax
		mov    %ax,_0cebf6_data
		jmp    _04a948_jump

	_04a909_jump:
		call   _0407f4_func
		test   %ax,%ax
		je     _04a948_jump
		mov    $0x000044,%eax
		call   _06fa30_func
		mov    _0cebf6_data,%ax
		mov    _0ceb9c_data,%bx
		cmp    %bx,%ax
		jne    _04a93e_jump
		xor    %ebx,%eax
		mov    _096475_data,%al
		mov    %ax,_0cebf6_data
		jmp    _04a948_jump

	_04a93e_jump:
		mov    %eax,%esi
		inc    %esi
		mov    %si,_0cebf6_data

	_04a948_jump:
		cmpw   $0x000000,_0cebf6_data
		jne    _04a987_jump
		call   _0367ec_func
		test   %al,%al
		je     _04a987_jump
		xor    %cl,%cl
		mov    %cl,_0cee94_data
		cmpb   $0x000000,_095b4b_data
		jne    _04a971_jump
		call   _03b8d0_func

	_04a971_jump:
		call   _04c8cc_func
		movb   $0x000001,_0cee94_data
		call   _040b64_func
		jmp    _04ab10_jump

	_04a987_jump:
		mov    _0cebf6_data,%bx
		cmp    $0x000001,%bx
		jl     _04aad4_jump
		cmp    $0x000003,%bx
		jg     _04aad4_jump
		cmpb   $0x000000,_0ceec3_data
		je     _04aad4_jump
		xor    %bh,%bh
		mov    %bh,_0cee94_data
		call   _040960_func
		test   %ax,%ax
		je     _04a9db_jump
		mov    _0cebf4_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000001,_0ccbac_data(,%eax,2)
		je     _04a9db_jump
		mov    $0x000001,%cl
		jmp    _04aa3c_jump

	_04a9db_jump:
		call   _0408d4_func
		test   %ax,%ax
		je     _04a9fc_jump
		mov    _0cebf4_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000000,_0ccbac_data(,%eax,2)
		je     _04a9fc_jump
		xor    %cl,%cl
		jmp    _04aa3c_jump

	_04a9fc_jump:
		call   _0409ec_func
		test   %ax,%ax
		je     _04aa1d_jump
		mov    _0cebf4_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000002,_0ccbac_data(,%eax,2)
		je     _04aa1d_jump
		mov    $0x000002,%cl
		jmp    _04aa3c_jump

	_04aa1d_jump:
		call   _040a78_func
		test   %ax,%ax
		je     _04aa3c_jump
		mov    _0cebf4_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000003,_0ccbac_data(,%eax,2)
		je     _04aa3c_jump
		mov    $0x000003,%cl

	_04aa3c_jump:
		cmp    $0x000004,%cl
		je     _04aac2_jump
		xor    %eax,%eax
		mov    _0ccbae_data,%si
		mov    %cl,%al
		cmp    %si,%ax
		je     _04aa72_jump
		cmp    _0ccbb0_data,%ax
		je     _04aa72_jump
		cmp    _0ccbb2_data,%ax
		je     _04aa72_jump
		mov    _0cebf4_data,%edx
		sar    $0x000010,%edx
		jmp    _04aaba_jump

	_04aa72_jump:
		mov    $0x000044,%eax
		call   _06fa30_func
		mov    $0x000001,%al
		jmp    _04aa82_jump

	_04aa80_jump:
		inc    %al

	_04aa82_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %al,%dl
		mov    %cl,%bl
		cmp    _0ccbac_data(,%edx,2),%bx
		je     _04aa98_jump
		cmp    $0x000003,%al
		jbe    _04aa80_jump

	_04aa98_jump:
		mov    _0cebf4_data,%edx
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		mov    _0ccbac_data(,%edx,2),%bx
		mov    %bx,_0ccbac_data(,%eax,2)
		xor    %eax,%eax
		mov    %cl,%al

	_04aaba_jump:
		mov    %ax,_0ccbac_data(,%edx,2)

	_04aac2_jump:
		movb   $0x000001,_0cee94_data
		call   _04d508_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04aad4_jump:
		cmpw   $0x000004,_0cebf6_data
		jne    _04ab10_jump
		call   _0367ec_func
		test   %al,%al
		je     _04ab10_jump
		cmpb   $0x000000,_0ceec3_data
		je     _04ab10_jump
		mov    $0x000001,%eax
		mov    $0x000002,%ebx
		xor    %edx,%edx
		mov    %ax,_0ccbae_data
		mov    %dx,_0ccbb0_data
		mov    %bx,_0ccbb2_data

	_04ab10_jump:
		call   _04d508_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ab1c_func:
		push   %ebx
		push   %edx
		mov    $0x000004,%ah
		mov    _0cee7e_data,%dl
		mov    %ah,_0cee7c_data
		test   %dl,%dl
		jne    _04ab5c_jump
		mov    _0ccbae_data,%ax
		mov    %ax,_0c4c78_data
		mov    _0ccbb0_data,%ax
		mov    %ax,_0c4c7a_data
		mov    _0ccbb2_data,%ax
		mov    %ax,_0c4c7e_data
		call   _040520_func
		pop    %edx
		pop    %ebx
		ret    

	_04ab5c_jump:
		xor    %dh,%dh
		mov    _095b4b_data,%bl
		mov    %dh,_096477_data
		test   %bl,%bl
		jne    _04ab73_jump
		call   _03b8d0_func

	_04ab73_jump:
		pop    %edx
		pop    %ebx
		ret    



_04ab78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e3c2c_data,%cl
		mov    $0x000001,%ah
		mov    $0x000064,%ebx
		mov    $0x00000c,%esi
		mov    $0x000006,%edi
		xor    %edx,%edx
		mov    %ah,_0ceec3_data
		mov    %dx,_0cebf4_data
		mov    %bx,_0cebfa_data
		mov    %si,_0cebd6_data
		mov    _0ccbae_data,%ax
		mov    %di,_0cebc4_data
		test   %ax,%ax
		jne    _04ad41_jump
		cmpb   $0x000000,_0cee77_data
		je     _04ad41_jump
		cmpb   $0x000000,_095b4b_data
		je     _04acba_jump
		cmpw   $0x000006,_0cecd4_data
		jne    _04abf5_jump
		cmpw   $0x000004,_0cecc0_data
		je     _04ac26_jump

	_04abf5_jump:
		cmpb   $0x000000,_0cee9c_data
		jne    _04ac26_jump
		mov    $0x000005,%edi
		mov    $0x000004,%eax
		mov    $0x000002,%ch
		mov    %di,_0cebf6_data
		mov    %ax,_0cebe0_data
		mov    %ch,_096475_data
		mov    %di,_0ceb9c_data
		jmp    _04ac52_jump

	_04ac26_jump:
		mov    $0x000004,%edx
		mov    $0x000003,%ebx
		mov    $0x000005,%esi
		mov    %dx,_0cebf6_data
		mov    %bx,_0cebe0_data
		mov    $0x000003,%bh
		mov    %si,_0ceb9c_data
		mov    %bh,_096475_data

	_04ac52_jump:
		mov    _0cee78_data,%al
		cmp    $0x000001,%al
		jb     _04ac63_jump
		jbe    _04ac67_jump
		cmp    $0x000002,%al
		je     _04ac6b_jump
		jmp    _04ac6d_jump

	_04ac63_jump:
		test   %al,%al
		jne    _04ac6d_jump

	_04ac67_jump:
		mov    $0x00006e,%cl
		jmp    _04ac6d_jump

	_04ac6b_jump:
		mov    $0x000078,%cl

	_04ac6d_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    %cl,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x000014,%eax
		mov    %dx,_0cebb4_data
		mov    $0x00003c,%edx
		mov    %cl,_0e3c2c_data
		call   _04d3f0_func
		mov    _0cebe0_data,%bx
		dec    %ebx
		mov    _0e3c2c_data,%cl
		mov    %bx,_0cebe0_data
		mov    %cl,_0e3c2c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04acba_jump:
		mov    $0x000007,%eax
		mov    $0x000001,%dh
		mov    %ax,_0cebf6_data
		mov    %ax,_0cebe0_data
		mov    %ax,_0ceb9c_data
		mov    _0cee78_data,%al
		mov    %dh,_096475_data
		cmp    %dh,%al
		jb     _04acea_jump
		jbe    _04acee_jump
		cmp    $0x000002,%al
		je     _04acf2_jump
		jmp    _04acf4_jump

	_04acea_jump:
		test   %al,%al
		jne    _04acf4_jump

	_04acee_jump:
		mov    $0x000078,%cl
		jmp    _04acf4_jump

	_04acf2_jump:
		mov    $0x00007d,%cl

	_04acf4_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    %cl,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x00000f,%eax
		mov    %dx,_0cebb4_data
		mov    $0x000046,%edx
		mov    %cl,_0e3c2c_data
		call   _04d3f0_func
		mov    _0cebe0_data,%si
		dec    %esi
		mov    _0e3c2c_data,%cl
		mov    %si,_0cebe0_data
		mov    %cl,_0e3c2c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04ad41_jump:
		mov    _0cee64_data,%dh
		cmp    $0x000001,%dh
		jne    _04adea_jump
		cmpb   $0x000000,_095b4b_data
		je     _04ada8_jump
		mov    $0x000005,%ebx
		mov    $0x000004,%esi
		mov    $0x000003,%ah
		mov    $0x000006,%edi
		mov    %bx,_0cebf6_data
		mov    %si,_0cebe0_data
		mov    %ah,_096475_data
		mov    _0cee78_data,%al
		mov    %di,_0ceb9c_data
		cmp    %dh,%al
		jb     _04ad99_jump
		jbe    _04ada1_jump
		cmp    $0x000002,%al
		je     _04ade6_jump
		jmp    _04ae3a_jump

	_04ad99_jump:
		test   %al,%al
		jne    _04ae3a_jump

	_04ada1_jump:
		mov    $0x00006e,%cl
		jmp    _04ae3a_jump

	_04ada8_jump:
		mov    $0x000005,%edi
		mov    _0cee78_data,%al
		mov    %dh,_096475_data
		mov    $0x000006,%edx
		mov    %di,_0cebf6_data
		mov    %di,_0cebe0_data
		mov    %dx,_0ceb9c_data
		cmp    $0x000001,%al
		jb     _04adde_jump
		jbe    _04ade2_jump
		cmp    $0x000002,%al
		je     _04ade6_jump
		jmp    _04ae3a_jump

	_04adde_jump:
		test   %al,%al
		jne    _04ae3a_jump

	_04ade2_jump:
		mov    $0x00006e,%cl
		jmp    _04ae3a_jump

	_04ade6_jump:
		mov    $0x000078,%cl
		jmp    _04ae3a_jump

	_04adea_jump:
		cmp    $0x000002,%dh
		jne    _04ae6c_jump
		mov    $0x000005,%edx
		mov    $0x000004,%ebx
		mov    $0x000006,%esi
		mov    _0cee78_data,%al
		mov    %dx,_0cebf6_data
		mov    %bx,_0cebe0_data
		mov    $0x000003,%bh
		mov    %si,_0ceb9c_data
		mov    %bh,_096475_data
		cmp    $0x000001,%al
		jb     _04ae30_jump
		jbe    _04ae34_jump
		cmp    $0x000002,%al
		je     _04ae38_jump
		jmp    _04ae3a_jump

	_04ae30_jump:
		test   %al,%al
		jne    _04ae3a_jump

	_04ae34_jump:
		mov    $0x00006e,%cl
		jmp    _04ae3a_jump

	_04ae38_jump:
		mov    $0x000078,%cl

	_04ae3a_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    %cl,%al
		mov    $0x000005,%ebx
		sub    %eax,%edx
		mov    $0x000014,%eax
		mov    %dx,_0cebb4_data
		mov    $0x00003c,%edx
		mov    %cl,_0e3c2c_data
		call   _04d3f0_func
		mov    _0e3c2c_data,%cl

	_04ae6c_jump:
		mov    %cl,_0e3c2c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ae78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_04ae78_func,%edx
		mov    $_04af5c_func,%ebx
		mov    $_04b340_func,%ecx
		mov    $_04b870_func,%esi
		mov    $_04bd6c_func,%edi
		mov    _095b15_data,%ah
		mov    %edx,_0e3bec_data
		mov    %ebx,_0e3be8_data
		mov    %ecx,_0e3bf8_data
		mov    %esi,_0e3bf4_data
		mov    %edi,_0e3bfc_data
		test   %ah,%ah
		jne    _04aed0_jump
		movb   $0x000002,_0e3c2e_data
		xor    %ecx,%ecx
		mov    %cx,_0ccbae_data
		jmp    _04af06_jump

	_04aed0_jump:
		cmp    $0x000001,%ah
		jne    _04aef2_jump
		cmpb   $0x000000,_0cee5d_data
		jne    _04aef2_jump
		mov    $0x000001,%ebx
		mov    %ah,_0e3c2e_data
		mov    %bx,_0ccbae_data
		jmp    _04af06_jump

	_04aef2_jump:
		mov    $0x000001,%bl
		mov    $0x000002,%edx
		mov    %bl,_0e3c2e_data
		mov    %dx,_0ccbae_data

	_04af06_jump:
		mov    _095b52_data,%ax
		mov    %ax,_0ccbb0_data
		xor    %eax,%eax
		mov    _095b54_data,%al
		mov    %ax,_0ccbb2_data
		mov    _095b4e_data,%ax
		mov    %ax,_0ccbb4_data
		xor    %eax,%eax
		mov    _095b55_data,%al
		mov    %ax,_0ccbb6_data
		xor    %eax,%eax
		mov    _0cee5b_data,%al
		mov    %ax,_0ccbb8_data
		call   _04d264_func
		mov    %ax,_0e3c22_data
		call   _04ab78_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04af5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %esp,%edi
		mov    $0x000001,%dl
		mov    $_0ca6e8_data,%ebp
		mov    $_047408_func,%esi
		mov    _0cec04_data,%ax
		xor    %bh,%bh
		mov    %ax,_0ca7ba_data
		mov    %dl,_0caf57_data
		mov    %dl,_0caf56_data
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		mov    %bh,_0caf55_data
		mov    (%esp),%al
		mov    $_0963cc_data,%edi
		mov    %al,_0ca7bf_data
		mov    $0x000002,%ah
		mov    _0c25b0_data,%esi
		mov    %ah,_0ca7bc_data
		mov    %ah,_0caf54_data
		push   %edi

	_04afb7_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04afcf_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04afb7_jump

	_04afcf_jump:
		pop    %edi
		mov    _096475_data,%bl
		jmp    _04b15c_jump

	_04afdb_jump:
		imul   $0x0000d8,%eax,%edx
		movb   $0x000002,_0ca7bc_data(%edx)
		movb   $0x000001,_0ca7be_data(%edx)
		xor    %cl,%cl
		mov    %cl,_0ca7bd_data(%edx)
		mov    _0ceb9c_data,%cx
		lea    (%edx,%ebp,1),%edi
		cmp    %cx,%bx
		jne    _04b04e_jump
		mov    _0c2510_data,%esi
		push   %edi

	_04b00d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04b025_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b00d_jump

	_04b025_jump:
		pop    %edi
		mov    $0x0000a0,%edi
		mov    _0cebee_data,%ax
		mov    %di,_0ca7b8_data(%edx)
		mov    %ax,_0ca7ba_data(%edx)
		mov    0x000007(%esp),%al
		mov    %al,_0ca7bf_data(%edx)
		jmp    _04b14b_jump

	_04b04e_jump:
		mov    _0cebb4_data,%si
		add    $0x00000a,%esi
		mov    (%esp,%eax,1),%cl
		mov    %si,_0ca7b8_data(%edx)
		mov    _0c25b8_data(,%eax,4),%esi
		mov    %cl,_0ca7bf_data(%edx)
		push   %edi

	_04b070_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04b088_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b070_jump

	_04b088_jump:
		pop    %edi
		mov    _0cebf0_data,%ax
		mov    _0ccbae_data,%si
		add    $0x00000f,%eax
		test   %si,%si
		jne    _04b0c0_jump
		movzbw _096475_data,%si
		mov    %ebx,%ecx
		sub    %esi,%ecx
		mov    %ecx,%esi
		inc    %esi
		imul   %esi,%eax
		mov    _0cec04_data,%si
		add    %esi,%eax
		jmp    _04b144_jump

	_04b0c0_jump:
		cmp    $0x000001,%bx
		jne    _04b0e4_jump
		movzbw _096475_data,%si
		mov    %ebx,%ecx
		sub    %esi,%ecx
		mov    %ecx,%esi
		add    %ebx,%esi
		imul   %esi,%eax
		mov    _0cec04_data,%cx
		add    %ecx,%eax
		jmp    _04b144_jump

	_04b0e4_jump:
		cmpb   $0x000000,_095b4b_data
		jne    _04b0f6_jump
		cmpb   $0x000002,_0cee64_data
		jne    _04b12c_jump

	_04b0f6_jump:
		xor    %eax,%eax
		mov    %ebx,%edx
		mov    _096475_data,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    _0cebf0_data,%dx
		inc    %eax
		add    $0x00000f,%edx
		imul   %edx,%eax
		mov    _0cec04_data,%dx
		add    %eax,%edx
		movswl %bx,%eax
		imul   $0x0000d8,%eax,%eax
		mov    %dx,_0ca7ba_data(%eax)
		jmp    _04b14b_jump

	_04b12c_jump:
		movzbw _096475_data,%si
		mov    %ebx,%ecx
		sub    %esi,%ecx
		imul   %ecx,%eax
		mov    _0cec04_data,%di
		add    %edi,%eax

	_04b144_jump:
		mov    %ax,_0ca7ba_data(%edx)

	_04b14b_jump:
		movswl %bx,%eax
		imul   $0x0000d8,%eax,%eax
		add    %ebp,%eax
		inc    %ebx
		call   _01ec48_func

	_04b15c_jump:
		xor    %edx,%edx
		mov    _0cebde_data,%eax
		mov    _096475_data,%dl
		sar    $0x000010,%eax
		add    %eax,%edx
		movswl %bx,%eax
		cmp    %edx,%eax
		jle    _04afdb_jump
		mov    _0cebe6_data,%bx
		mov    _095b15_data,%cl
		sub    $0x000019,%ebx
		test   %cl,%cl
		jne    _04b1be_jump
		mov    _0ceb9a_data,%edi
		sar    $0x000010,%edi
		lea    0x000000(,%edi,8),%eax
		sub    %edi,%eax
		shl    $0x000002,%eax
		sub    %edi,%eax
		mov    _0cebe6_data,%di
		mov    _0ca7ba_data(,%eax,8),%ax
		mov    _0cebb4_data,%dx
		sub    %edi,%eax
		jmp    _04b1ed_jump

	_04b1be_jump:
		mov    _0ceb9a_data,%edi
		sar    $0x000010,%edi
		lea    0x000000(,%edi,8),%eax
		sub    %edi,%eax
		shl    $0x000002,%eax
		sub    %edi,%eax
		mov    _0cebe6_data,%cx
		mov    _0ca7ba_data(,%eax,8),%ax
		mov    _0cebb4_data,%dx
		sub    %ecx,%eax

	_04b1ed_jump:
		movzbw _0e3c2c_data,%si
		add    $0x000023,%eax
		add    %esi,%esi
		mov    %ax,0x000020(%esp)
		mov    _0e3c1c_data,%ax
		cmp    %ax,%dx
		jge    _04b210_jump
		mov    %edx,%ecx
		jmp    _04b212_jump

	_04b210_jump:
		mov    %eax,%ecx

	_04b212_jump:
		mov    _0e3c20_data,%di
		cmp    %di,%bx
		jge    _04b222_jump
		mov    %ebx,%eax
		jmp    _04b224_jump

	_04b222_jump:
		mov    %edi,%eax

	_04b224_jump:
		mov    _0e3c22_data,%ebp
		mov    _0e3c1a_data,%edi
		sar    $0x000010,%ebp
		sar    $0x000010,%edi
		add    %ebp,%edi
		movswl %dx,%ebp
		mov    %ebp,0x000008(%esp)
		movswl %si,%ebp
		mov    %ebp,0x00000c(%esp)
		mov    0x000008(%esp),%ebp
		add    0x00000c(%esp),%ebp
		cmp    %ebp,%edi
		jle    _04b25d_jump
		movswl %cx,%ebp
		sub    %ebp,%edi
		mov    %edi,0x000018(%esp)
		jmp    _04b266_jump

	_04b25d_jump:
		movswl %cx,%edi
		sub    %edi,%ebp
		mov    %ebp,0x000018(%esp)

	_04b266_jump:
		mov    0x000018(%esp),%edi
		mov    %di,0x000024(%esp)
		mov    _0e3c1e_data,%edi
		sar    $0x000010,%edi
		mov    %edi,0x000010(%esp)
		mov    _0e3c1c_data,%edi
		mov    0x000010(%esp),%ebp
		sar    $0x000010,%edi
		add    %edi,%ebp
		mov    %ebp,0x00001c(%esp)
		mov    0x00001e(%esp),%ebp
		sar    $0x000010,%ebp
		movswl %bx,%edi
		add    %ebp,%edi
		mov    0x00001c(%esp),%ebp
		cmp    %ebp,%edi
		jge    _04b2ae_jump
		movswl %ax,%edi
		sub    %edi,%ebp
		mov    %ebp,0x000014(%esp)
		jmp    _04b2b7_jump

	_04b2ae_jump:
		movswl %ax,%ebp
		sub    %ebp,%edi
		mov    %edi,0x000014(%esp)

	_04b2b7_jump:
		mov    0x000014(%esp),%edi
		mov    %dx,_0e3c1c_data
		mov    0x000020(%esp),%edx
		mov    %bx,_0e3c20_data
		mov    %dx,_0e3c1e_data
		mov    _095b4b_data,%dl
		mov    %si,_0e3c24_data
		test   %dl,%dl
		je     _04b302_jump
		push   $0x000001
		mov    0x000026(%esp),%esi
		movswl %di,%ebx
		movswl %ax,%edx
		sar    $0x000010,%esi
		movswl %cx,%eax
		mov    %ebx,%ecx
		mov    %esi,%ebx
		call   _04e054_func
		jmp    _04b31b_jump

	_04b302_jump:
		mov    0x000022(%esp),%ebx
		movswl %di,%edx
		movswl %ax,%esi
		sar    $0x000010,%ebx
		movswl %cx,%eax
		mov    %edx,%ecx
		mov    %esi,%edx
		call   _04e864_func

	_04b31b_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04b328_switch:
		.long   _04b509_case
		.long   _04b54d_case
		.long   _04b598_case
		.long   _04b762_case
		.long   _04b73e_case
		.long   _04b715_case




_04b340_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000038,%esp
		lea    0x00001c(%esp),%edi
		mov    $_047410_jump,%esi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		lea    0x000018(%esp),%edi
		mov    $_04741b_jump,%esi
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    _047413_jump,%eax
		lea    0x000014(%esp),%edi
		mov    $_04741e_jump,%esi
		mov    %eax,0x000010(%esp)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		mov    _047417_jump,%eax
		mov    %esp,%edi
		mov    $_047424_switch,%esi
		mov    %eax,0x00000c(%esp)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		call   _03bc14_func
		cmpb   $0x000000,_095b4b_data
		je     _04b3bf_jump
		mov    _0e3c1c_data,%ecx
		mov    _0e3c22_data,%ebx
		mov    _0e3c1e_data,%edx
		mov    _0e3c1a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024538_func

	_04b3bf_jump:
		push   $0x000001
		mov    $0x000001,%ecx
		mov    $0x0000a0,%edx
		mov    _0cebe4_data,%ebx
		mov    $_0963cc_data,%eax
		sar    $0x000010,%ebx
		call   _01a178_func
		xor    %eax,%eax
		mov    _0ca7bf_data,%al
		mov    $0x000002,%ecx
		push   %eax
		mov    _0cebb4_data,%ax
		mov    _0ca7b8_data,%ebx
		add    $0x00000a,%eax
		sar    $0x000010,%ebx
		movswl %ax,%edx
		mov    _0c25b8_data,%eax
		call   _01a178_func
		mov    _0e3c20_data,%eax
		sar    $0x000010,%eax
		push   %eax
		mov    _0ca7ba_data,%ax
		sub    $0x00000c,%eax
		push   $0x000100
		movswl %ax,%edx
		xor    %eax,%eax
		mov    $0x00000c,%ecx
		mov    _0e3c2c_data,%al
		push   $0x000080
		add    $0x000016,%eax
		mov    $0x000080,%ebx
		cwtl   
		call   _0246f4_func
		mov    _096475_data,%al
		mov    %al,0x000034(%esp)
		dec    %al
		mov    %al,0x000030(%esp)
		jmp    _04b84e_jump

	_04b45b_jump:
		cmpw   $0x000000,_0ccbae_data
		je     _04b46d_jump
		cmp    $0x000002,%al
		je     _04b83a_jump

	_04b46d_jump:
		cmpb   $0x000000,_095b4b_data
		je     _04b48b_jump
		cmpw   $0x000000,_0ccbae_data
		jne    _04b48b_jump
		cmpb   $0x000006,0x000034(%esp)
		je     _04b83a_jump

	_04b48b_jump:
		xor    %edx,%edx
		mov    0x000034(%esp),%dl
		imul   $0x0000d8,%edx,%edx
		mov    _0cebf6_data,%di
		xor    %ebx,%ebx
		mov    _0ca7ba_data(%edx),%ax
		mov    0x000034(%esp),%bl
		mov    %ax,0x00002c(%esp)
		mov    $_0ca6e8_data,%eax
		mov    _0ca7b8_data(%edx),%si
		add    %edx,%eax
		cmp    %di,%bx
		je     _04b4e6_jump
		mov    _0ca7bf_data(%edx),%dl
		mov    0x00002a(%esp),%ebx
		and    $0x0000ff,%edx
		mov    $0x000002,%ecx
		push   %edx
		sar    $0x000010,%ebx
		movswl %si,%edx
		call   _01a178_func
		jmp    _04b4f0_jump

	_04b4e6_jump:
		mov    $0x000001,%edx
		call   _04d558_func

	_04b4f0_jump:
		mov    0x000030(%esp),%bh
		cmp    $0x000005,%bh
		ja     _04b83a_jump
		xor    %eax,%eax
		mov    %bh,%al
		jmp    *%cs:_04b328_switch(,%eax,4)

	_04b509_case:
		xor    %eax,%eax
		mov    0x000034(%esp),%al
		imul   $0x0000d8,%eax,%eax
		mov    _0ca7bf_data(%eax),%al
		and    $0x0000ff,%eax
		push   %eax
		xor    %eax,%eax
		mov    _0e3c2c_data,%al
		add    $0x000076,%eax
		mov    0x00002e(%esp),%ebx
		movswl %ax,%edx
		mov    _0ccbac_data,%eax
		mov    $0x000002,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    0x000004(%esp,%eax,4),%eax
		jmp    _04b835_jump

	_04b54d_case:
		cmpw   $0x000000,_0ccbae_data
		jne    _04b83a_jump
		mov    $0x000003,%eax
		sub    _0ccbb0_data,%ax
		cwtl   
		push   %eax
		mov    0x000030(%esp),%eax
		sub    $0x00000c,%eax
		push   $0x000003
		movswl %ax,%edx
		xor    %eax,%eax
		mov    $0x00000c,%ecx
		mov    _0e3c2c_data,%al
		push   $0x000000
		add    $0x000046,%eax
		mov    $0x000050,%ebx
		cwtl   
		call   _0246f4_func
		jmp    _04b83a_jump

	_04b598_case:
		cmpw   $0x000000,_0ccbb2_data
		jne    _04b5ab_jump
		cmpb   $0x000000,_095b15_data
		je     _04b5d2_jump

	_04b5ab_jump:
		mov    _0ccbb2_data,%cx
		test   %cx,%cx
		je     _04b5c9_jump
		cmp    $0x000046,%cx
		je     _04b5c9_jump
		cmp    $0x000050,%cx
		je     _04b5c9_jump
		cmp    $0x000064,%cx
		jne    _04b602_jump

	_04b5c9_jump:
		cmpb   $0x000001,_095b15_data
		jne    _04b602_jump

	_04b5d2_jump:
		lea    0x000014(%esp),%eax
		xor    %edx,%edx
		lea    0x000018(%esp),%esi
		mov    _0e3c2c_data,%dl
		lea    0x00000c(%esp),%edi
		mov    %edx,%ebx
		mov    %edx,%ecx
		add    $0x000086,%ebx
		add    $0x000066,%ecx
		add    $0x000036,%edx
		mov    %cx,0x000028(%esp)
		mov    %dx,0x000020(%esp)
		jmp    _04b669_jump

	_04b602_jump:
		cmpw   $0x000001,_0ccbb2_data
		jne    _04b63b_jump
		xor    %edx,%edx
		lea    0x000014(%esp),%esi
		mov    _0e3c2c_data,%dl
		lea    0x00000c(%esp),%edi
		mov    %edx,%eax
		mov    %edx,%ebx
		add    $0x000086,%eax
		add    $0x000066,%ebx
		add    $0x000036,%edx
		mov    %ax,0x000028(%esp)
		mov    %dx,0x000020(%esp)
		lea    0x000018(%esp),%eax
		jmp    _04b669_jump

	_04b63b_jump:
		lea    0x000014(%esp),%eax
		xor    %edx,%edx
		lea    0x000018(%esp),%edi
		mov    _0e3c2c_data,%dl
		lea    0x00000c(%esp),%esi
		mov    %edx,%ebx
		mov    %edx,%ecx
		add    $0x000086,%ebx
		add    $0x000066,%ecx
		add    $0x000036,%edx
		mov    %cx,0x000020(%esp)
		mov    %dx,0x000028(%esp)

	_04b669_jump:
		push   $0x000005
		mov    0x00002e(%esp),%ebp
		mov    $0x000002,%ecx
		sar    $0x000010,%ebp
		movswl %bx,%edx
		mov    %ebp,%ebx
		call   _01a178_func
		cmpw   $0x000000,_0ccbae_data
		jne    _04b6a2_jump
		push   $0x000005
		mov    0x000022(%esp),%edx
		mov    $0x000002,%ecx
		mov    %ebp,%ebx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01a178_func

	_04b6a2_jump:
		xor    %eax,%eax
		mov    _0cebf6_data,%cx
		mov    0x000034(%esp),%al
		cmp    %cx,%ax
		jne    _04b6fc_jump
		mov    $_0cae80_data,%edi
		push   %edi

	_04b6ba_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04b6d2_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b6ba_jump

	_04b6d2_jump:
		pop    %edi
		mov    0x000028(%esp),%eax
		mov    %ax,_0caf50_data
		mov    0x00002c(%esp),%eax
		mov    %ax,_0caf52_data
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01ec48_func
		mov    %edi,%eax
		call   _04d558_func
		jmp    _04b83a_jump

	_04b6fc_jump:
		push   $0x000001
		mov    0x00002e(%esp),%ebx
		mov    0x00002a(%esp),%edx
		mov    $0x000002,%ecx
		mov    %esi,%eax
		sar    $0x000010,%ebx
		jmp    _04b832_jump

	_04b715_case:
		cmpb   $0x000000,_095b4b_data
		jne    _04b83a_jump
		cmpw   $0x000000,_0ccbb6_data
		je     _04b83a_jump
		cmpw   $0x000000,_0ccbae_data
		jne    _04b83a_jump

	_04b73e_case:
		cmpb   $0x000000,_095b4b_data
		je     _04b755_jump
		cmpw   $0x000000,_0ccbae_data
		je     _04b83a_jump

	_04b755_jump:
		cmpb   $0x000000,_0cee64_data
		je     _04b83a_jump

	_04b762_case:
		xor    %eax,%eax
		mov    0x000034(%esp),%al
		cmpw   $0x000000,_0ccbac_data(,%eax,2)
		je     _04b795_jump
		xor    %edx,%edx
		lea    0x000010(%esp),%eax
		mov    _0e3c2c_data,%dl
		lea    0x00001c(%esp),%esi
		mov    %edx,%ebx
		add    $0x000066,%edx
		add    $0x000086,%ebx
		mov    %dx,0x000024(%esp)
		jmp    _04b7b4_jump

	_04b795_jump:
		xor    %ebx,%ebx
		mov    _0e3c2c_data,%bl
		mov    %ebx,%eax
		lea    0x000010(%esp),%esi
		add    $0x000086,%eax
		add    $0x000066,%ebx
		mov    %ax,0x000024(%esp)
		lea    0x00001c(%esp),%eax

	_04b7b4_jump:
		push   $0x000005
		mov    0x00002e(%esp),%edi
		mov    $0x000002,%ecx
		sar    $0x000010,%edi
		movswl %bx,%edx
		mov    %edi,%ebx
		call   _01a178_func
		xor    %eax,%eax
		mov    _0cebf6_data,%dx
		mov    0x000034(%esp),%al
		cmp    %dx,%ax
		jne    _04b823_jump
		mov    $_0cae80_data,%edi
		push   %edi

	_04b7e4_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04b7fc_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04b7e4_jump

	_04b7fc_jump:
		pop    %edi
		mov    0x000024(%esp),%eax
		mov    %ax,_0caf50_data
		mov    0x00002c(%esp),%eax
		mov    %ax,_0caf52_data
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01ec48_func
		mov    %edi,%eax
		call   _04d558_func
		jmp    _04b83a_jump

	_04b823_jump:
		push   $0x000001
		mov    0x000026(%esp),%edx
		mov    $0x000002,%ecx
		mov    %edi,%ebx
		mov    %esi,%eax

	_04b832_jump:
		sar    $0x000010,%edx

	_04b835_jump:
		call   _01a178_func

	_04b83a_jump:
		mov    0x000030(%esp),%dh
		mov    0x000034(%esp),%bl
		inc    %dh
		inc    %bl
		mov    %dh,0x000030(%esp)
		mov    %bl,0x000034(%esp)

	_04b84e_jump:
		xor    %eax,%eax
		mov    _0ceb9c_data,%dx
		mov    0x000034(%esp),%al
		cmp    %dx,%ax
		jle    _04b45b_jump
		add    $0x000038,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04b870_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		call   _04d4c4_func
		xor    %bl,%bl
		mov    $0x000004,%dl
		mov    %bl,(%esp)
		mov    %dl,_0cee7c_data
		call   _036910_func
		test   %al,%al
		je     _04b89a_jump
		movb   $0x000001,_0cee7e_data

	_04b89a_jump:
		cmpb   $0x000000,_0ceec3_data
		jne    _04b8d7_jump
		mov    _0cebf4_data,%ax
		cmp    _0cebd6_data,%ax
		jle    _04b990_jump
		mov    _0cebf2_data,%edx
		mov    _0cebc2_data,%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    _04b990_jump

	_04b8d7_jump:
		call   _040864_func
		test   %ax,%ax
		je     _04b936_jump
		mov    $0x000044,%eax
		call   _06fa30_func
		xor    %eax,%eax
		mov    _0cebf6_data,%cx
		mov    _096475_data,%al
		cmp    %cx,%ax
		jne    _04b90f_jump
		mov    _0ceb9c_data,%ax
		mov    %ax,_0cebf6_data
		jmp    _04b990_jump

	_04b90f_jump:
		cmpw   $0x000000,_0ccbae_data
		je     _04b92d_jump
		cmp    $0x000003,%cx
		jne    _04b92d_jump
		mov    %ecx,%edx
		sub    $0x000002,%edx
		mov    %dx,_0cebf6_data
		jmp    _04b990_jump

	_04b92d_jump:
		decw   _0cebf6_data
		jmp    _04b990_jump

	_04b936_jump:
		call   _0407f4_func
		test   %ax,%ax
		je     _04b990_jump
		mov    $0x000044,%eax
		call   _06fa30_func
		mov    _0cebf6_data,%ax
		mov    _0ceb9c_data,%cx
		cmp    %cx,%ax
		jne    _04b96b_jump
		xor    %ecx,%eax
		mov    _096475_data,%al
		mov    %ax,_0cebf6_data
		jmp    _04b990_jump

	_04b96b_jump:
		cmpw   $0x000000,_0ccbae_data
		je     _04b989_jump
		cmp    $0x000001,%ax
		jne    _04b989_jump
		mov    %eax,%edx
		add    $0x000002,%edx
		mov    %dx,_0cebf6_data
		jmp    _04b990_jump

	_04b989_jump:
		incw   _0cebf6_data

	_04b990_jump:
		cmpw   $0x000000,_0ccbae_data
		jne    _04babe_jump
		cmpw   $0x000002,_0cebf6_data
		jne    _04ba6e_jump
		call   _0407f4_func
		test   %ax,%ax
		jne    _04ba6e_jump
		call   _040864_func
		test   %ax,%ax
		jne    _04ba6e_jump
		cmpb   $0x000000,_0ceec3_data
		je     _04ba6e_jump
		call   _040714_func
		test   %ax,%ax
		je     _04ba02_jump
		mov    _0ccbb0_data,%di
		cmp    $0x000003,%di
		jge    _04b9f8_jump
		mov    %edi,%edx
		inc    %edx
		mov    %dx,_0ccbb0_data
		jmp    _04ba2d_jump

	_04b9f8_jump:
		xor    %eax,%eax
		mov    %ax,_0ccbb0_data
		jmp    _04ba2d_jump

	_04ba02_jump:
		call   _040784_func
		test   %ax,%ax
		je     _04ba2f_jump
		mov    _0ccbb0_data,%bx
		test   %bx,%bx
		jle    _04ba24_jump
		mov    %ebx,%esi
		dec    %esi
		mov    %si,_0ccbb0_data
		jmp    _04ba2d_jump

	_04ba24_jump:
		movw   $0x000003,_0ccbb0_data

	_04ba2d_jump:
		mov    $0x000001,%bl

	_04ba2f_jump:
		test   %bl,%bl
		je     _04babe_jump
		mov    _0ccbae_data,%eax
		sar    $0x000010,%eax
		mov    _096456_data(,%eax,2),%ecx
		mov    _09644e_data(,%eax,2),%ebx
		mov    _096446_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09643e_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05abb8_func
		jmp    _04baba_jump

	_04ba6e_jump:
		cmpw   $0x000006,_0cebf6_data
		jne    _04babe_jump
		cmpb   $0x000000,_095b4b_data
		jne    _04babe_jump
		cmpb   $0x000000,_0ceec3_data
		je     _04babe_jump
		call   _0367ec_func
		test   %al,%al
		jne    _04baa7_jump
		call   _040784_func
		test   %ax,%ax
		jne    _04baa7_jump
		call   _040714_func
		test   %ax,%ax
		je     _04babe_jump

	_04baa7_jump:
		cmpw   $0x000000,_0ccbb8_data
		sete   %al
		xor    %ah,%ah
		mov    %ax,_0ccbb8_data

	_04baba_jump:
		movb   $0x000001,(%esp)

	_04babe_jump:
		cmpw   $0x000003,_0cebf6_data
		jne    _04bbcf_jump
		call   _0407f4_func
		test   %ax,%ax
		jne    _04bbcf_jump
		call   _040864_func
		test   %ax,%ax
		jne    _04bbcf_jump
		cmpb   $0x000000,_0ceec3_data
		je     _04bbcf_jump
		cmpb   $0x000001,_095b15_data
		jne    _04bb13_jump
		mov    _0e3c2e_data,%al
		cmp    _0ccbb2_data,%ax
		jge    _04bb13_jump
		dec    %eax
		mov    %ax,_0ccbb2_data

	_04bb13_jump:
		call   _0367ec_func
		test   %al,%al
		jne    _04bb26_jump
		call   _040784_func
		test   %ax,%ax
		je     _04bb63_jump

	_04bb26_jump:
		xor    %eax,%eax
		mov    _0ccbb2_data,%si
		mov    _0e3c2e_data,%al
		cmp    %si,%ax
		jle    _04bb44_jump
		mov    %esi,%eax
		inc    %eax
		mov    %ax,_0ccbb2_data
		jmp    _04bb4d_jump

	_04bb44_jump:
		xor    %edi,%edi
		mov    %di,_0ccbb2_data

	_04bb4d_jump:
		xor    %eax,%eax
		mov    _0ccbb2_data,%al
		mov    $0x000001,%cl
		call   _0475dc_func
		mov    %cl,(%esp)
		jmp    _04bd4c_jump

	_04bb63_jump:
		call   _040714_func
		test   %ax,%ax
		je     _04bd4c_jump
		cmpb   $0x000001,_095b15_data
		jne    _04bb94_jump
		xor    %eax,%eax
		mov    _0ccbb2_data,%dx
		mov    _0e3c2e_data,%al
		cmp    %dx,%ax
		jge    _04bb94_jump
		dec    %eax
		mov    %ax,_0ccbb2_data

	_04bb94_jump:
		mov    _0ccbb2_data,%bx
		test   %bx,%bx
		jle    _04bbac_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0ccbb2_data
		jmp    _04bbb9_jump

	_04bbac_jump:
		xor    %eax,%eax
		mov    _0e3c2e_data,%al
		mov    %ax,_0ccbb2_data

	_04bbb9_jump:
		xor    %eax,%eax
		mov    _0ccbb2_data,%al
		mov    $0x000001,%bh
		call   _0475dc_func
		mov    %bh,(%esp)
		jmp    _04bd4c_jump

	_04bbcf_jump:
		mov    _0cebf6_data,%cx
		cmp    $0x000004,%cx
		jl     _04bd1c_jump
		cmp    _0ceb9c_data,%cx
		jge    _04bd1c_jump
		cmp    $0x000006,%cx
		je     _04bd1c_jump
		cmpb   $0x000000,_0ceec3_data
		je     _04bd1c_jump
		call   _0367ec_func
		test   %al,%al
		jne    _04bc25_jump
		call   _040784_func
		test   %ax,%ax
		jne    _04bc25_jump
		call   _040714_func
		test   %ax,%ax
		je     _04bd1c_jump

	_04bc25_jump:
		mov    _0cebf4_data,%eax
		sar    $0x000010,%eax
		cmpw   $0x000000,_0ccbac_data(,%eax,2)
		sete   %al
		xor    %ah,%ah
		mov    $0x000001,%ch
		mov    %eax,%edx
		mov    _0cebf4_data,%eax
		mov    %ch,(%esp)
		sar    $0x000010,%eax
		mov    _0cebf6_data,%cx
		mov    %dx,_0ccbac_data(,%eax,2)
		cmp    $0x000005,%cx
		jne    _04bd4c_jump
		cmpb   $0x000000,_095b4b_data
		jne    _04bd4c_jump
		mov    _0ccbb6_data,%si
		test   %si,%si
		jne    _04bd4c_jump
		cmpw   $0x000000,_0ccbae_data
		jne    _04bd4c_jump
		mov    $0x000001,%eax
		mov    $0x000001,%dl
		mov    %ax,_0ccbae_data
		mov    %dl,_0e3c2e_data
		xor    %ah,%ah
		mov    _0ccbb2_data,%dx
		mov    %ah,_0cee5d_data
		cmp    $0x000002,%dx
		jne    _04bcbd_jump
		mov    %si,_0ccbb2_data

	_04bcbd_jump:
		mov    $0x000005,%ecx
		call   _04ab78_func
		mov    %cx,_0cebf6_data
		call   _04af5c_func
		mov    _0ceb9a_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,8),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0cebe6_data,%si
		mov    _0ca7ba_data(,%eax,8),%ax
		sub    %esi,%eax
		sub    $0x000024,%eax
		movswl %ax,%ecx
		mov    %esi,%eax
		add    $0x00000e,%eax
		mov    $0x00010e,%ebx
		movswl %ax,%edx
		mov    $0x000012,%eax
		call   _04e864_func
		jmp    _04bd4c_jump

	_04bd1c_jump:
		cmpw   $0x000001,_0cebf6_data
		jne    _04bd4c_jump
		call   _0367ec_func
		test   %al,%al
		je     _04bd4c_jump
		cmpb   $0x000000,_0ceec3_data
		je     _04bd4c_jump
		mov    $0x00000a,%cl
		mov    $0x000001,%edx
		mov    %cl,_0cee7c_data
		mov    %dx,_0cebce_data

	_04bd4c_jump:
		cmpb   $0x000000,(%esp)
		je     _04bd5d_jump
		call   _04d264_func
		mov    %ax,_0e3c22_data

	_04bd5d_jump:
		call   _04d508_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04bd6c_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cee7e_data
		jne    _04be14_jump
		mov    _0ccbb0_data,%ax
		mov    %ax,_095b52_data
		mov    _0ccbb2_data,%al
		mov    %al,_095b54_data
		mov    _0ccbb4_data,%ax
		mov    %ax,_095b4e_data
		mov    _0ccbb6_data,%al
		mov    %al,_095b55_data
		call   _0477b0_func
		mov    %al,_095b56_data
		mov    _0ccbb8_data,%al
		mov    %al,_0cee5b_data
		mov    _0ccbae_data,%ax
		cmp    $0x000001,%ax
		jb     _04bdd4_jump
		jbe    _04bdef_jump
		cmp    $0x000002,%ax
		je     _04be02_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04bdd4_jump:
		test   %ax,%ax
		jne    _04be7e_jump
		xor    %ah,%ah
		mov    %ah,_095b15_data
		mov    %ah,_0cee5d_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04bdef_jump:
		mov    $0x000001,%ch
		xor    %al,%al
		mov    %ch,_095b15_data
		mov    %al,_0cee5d_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04be02_jump:
		mov    $0x000001,%bh
		mov    %bh,_095b15_data
		mov    %bh,_0cee5d_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04be14_jump:
		xor    %dl,%dl
		mov    %dl,_096477_data
		cmpb   $0x000000,_095b15_data
		jne    _04be5a_jump
		mov    _095b50_data,%eax
		sar    $0x000010,%eax
		mov    _096456_data(,%eax,2),%ecx
		mov    _09644e_data(,%eax,2),%ebx
		mov    _096446_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09643e_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05abb8_func

	_04be5a_jump:
		mov    $0x000019,%eax
		call   _03c904_func
		xor    %eax,%eax
		mov    _095b54_data,%al
		call   _0475dc_func
		cmpb   $0x000000,_095b4b_data
		jne    _04be7e_jump
		call   _03b8d0_func

	_04be7e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04be84_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_04be84_func,%edx
		mov    $_04bfb0_func,%ebx
		mov    $_04c254_func,%ecx
		mov    $_04c358_func,%esi
		mov    $_04c4ec_func,%edi
		mov    $0x000001,%ah
		mov    %edx,_0e3bec_data
		mov    %ebx,_0e3be8_data
		mov    %ecx,_0e3bf8_data
		mov    %esi,_0e3bf4_data
		mov    %edi,_0e3bfc_data
		mov    %ah,_0ceec3_data
		mov    $0x000064,%ebx
		mov    $0x00000c,%ecx
		mov    $0x000006,%esi
		mov    $0x000003,%edi
		xor    %edx,%edx
		mov    $0x00000f,%eax
		mov    %dx,_0cebf4_data
		mov    %bx,_0cebfa_data
		mov    %cx,_0cebd6_data
		mov    %si,_0cebc4_data
		mov    %di,_0cebf6_data
		mov    %di,_0cebe0_data
		xor    %dl,%dl
		mov    $0x000005,%ebx
		mov    %dl,_096475_data
		mov    $0x000044,%edx
		mov    %di,_0ceb9c_data
		call   _04d3f0_func
		xor    %ebx,%ebx
		mov    _095b15_data,%dh
		mov    %bx,_0ccbac_data
		mov    %bx,_0ccbae_data
		mov    %bx,_0ccbb0_data
		test   %dh,%dh
		jne    _04bf57_jump
		movw   $0x000001,_0ccbac_data
		jmp    _04bf79_jump

	_04bf57_jump:
		cmp    $0x000001,%dh
		jne    _04bf70_jump
		cmpb   $0x000000,_0cee5d_data
		jne    _04bf70_jump
		movw   $0x000001,_0ccbae_data
		jmp    _04bf79_jump

	_04bf70_jump:
		movw   $0x000001,_0ccbb0_data

	_04bf79_jump:
		mov    _0cee78_data,%al
		cmp    $0x000001,%al
		jb     _04bf8a_jump
		jbe    _04bf8e_jump
		cmp    $0x000002,%al
		je     _04bf8e_jump
		jmp    _04bf95_jump

	_04bf8a_jump:
		test   %al,%al
		jne    _04bf95_jump

	_04bf8e_jump:
		movb   $0x00008c,_0e3c2c_data

	_04bf95_jump:
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0e3c2c_data,%al
		sub    %eax,%edx
		mov    %dx,_0cebb4_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04bfb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    $0x000002,%dl
		mov    $_0963cc_data,%edi
		mov    $_0ca6e8_data,%ebp
		mov    _047430_func,%eax
		mov    _0c25d4_data,%esi
		xor    %bl,%bl
		mov    %eax,0x000004(%esp)
		mov    %dl,_0caf54_data
		mov    %bl,_0caf55_data
		mov    $0x000001,%ah
		xor    %bh,%bh
		mov    %ah,_0caf57_data
		mov    %ah,_0caf56_data
		push   %edi

	_04bff3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04c00b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04bff3_jump

	_04c00b_jump:
		pop    %edi
		mov    _096475_data,%bl
		jmp    _04c0eb_jump

	_04c017_jump:
		imul   $0x0000d8,%ecx,%edx
		movw   $0x0000a0,_0ca7b8_data(%edx)
		movb   $0x000002,_0ca7bc_data(%edx)
		mov    $0x000001,%ah
		mov    _0ceb9c_data,%si
		mov    %ah,_0ca7be_data(%edx)
		xor    %al,%al
		lea    (%edx,%ebp,1),%edi
		mov    %al,_0ca7bd_data(%edx)
		cmp    %si,%bx
		jne    _04c085_jump
		mov    _0c2510_data,%esi
		push   %edi

	_04c053_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04c06b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04c053_jump

	_04c06b_jump:
		pop    %edi
		mov    _0cebee_data,%ax
		mov    %ax,_0ca7ba_data(%edx)
		mov    0x000007(%esp),%al
		mov    %al,_0ca7bf_data(%edx)
		jmp    _04c0da_jump

	_04c085_jump:
		mov    _0c2624_data(,%ecx,4),%esi
		push   %edi

	_04c08d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04c0a5_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04c08d_jump

	_04c0a5_jump:
		pop    %edi
		mov    0x000004(%esp,%ecx,1),%al
		mov    %al,_0ca7bf_data(%edx)
		xor    %eax,%eax
		mov    %ebx,%ecx
		mov    _096475_data,%al
		sub    %eax,%ecx
		mov    %ecx,%eax
		mov    _0cebf0_data,%cx
		add    $0x00000f,%ecx
		imul   %ecx,%eax
		mov    _0cec04_data,%di
		add    %edi,%eax
		mov    %ax,_0ca7ba_data(%edx)

	_04c0da_jump:
		movswl %bx,%eax
		imul   $0x0000d8,%eax,%eax
		add    %ebp,%eax
		inc    %ebx
		call   _01ec48_func

	_04c0eb_jump:
		xor    %eax,%eax
		mov    _0cebde_data,%edx
		mov    _096475_data,%al
		sar    $0x000010,%edx
		movswl %bx,%ecx
		add    %edx,%eax
		cmp    %eax,%ecx
		jle    _04c017_jump
		xor    %eax,%eax
		mov    _0e3c2c_data,%al
		mov    _0ceb9a_data,%ecx
		add    %eax,%eax
		sar    $0x000010,%ecx
		mov    %ax,0x00000c(%esp)
		lea    0x000000(,%ecx,8),%eax
		sub    %ecx,%eax
		shl    $0x000002,%eax
		sub    %ecx,%eax
		mov    _0cebb4_data,%dx
		mov    _0cebe6_data,%cx
		mov    _0ca7ba_data(,%eax,8),%ax
		mov    _0cebe6_data,%bx
		sub    %ecx,%eax
		mov    _0e3c1c_data,%si
		add    $0x000023,%eax
		sub    $0x000019,%ebx
		mov    %ax,0x000010(%esp)
		cmp    %si,%dx
		jge    _04c169_jump
		mov    %edx,%eax
		jmp    _04c16b_jump

	_04c169_jump:
		mov    %esi,%eax

	_04c16b_jump:
		mov    _0e3c20_data,%di
		cmp    %di,%bx
		jge    _04c17b_jump
		mov    %ebx,%ecx
		jmp    _04c17d_jump

	_04c17b_jump:
		mov    %edi,%ecx

	_04c17d_jump:
		mov    _0e3c1a_data,%esi
		mov    _0e3c22_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		add    %esi,%edi
		movswl %dx,%esi
		mov    %esi,(%esp)
		mov    0x00000a(%esp),%esi
		mov    (%esp),%ebp
		sar    $0x000010,%esi
		add    %ebp,%esi
		cmp    %esi,%edi
		jle    _04c1b0_jump
		movswl %ax,%esi
		sub    %esi,%edi
		mov    %edi,%esi
		jmp    _04c1b5_jump

	_04c1b0_jump:
		movswl %ax,%edi
		sub    %edi,%esi

	_04c1b5_jump:
		mov    _0e3c1c_data,%ebp
		mov    %esi,%edi
		mov    _0e3c1e_data,%esi
		sar    $0x000010,%ebp
		sar    $0x000010,%esi
		add    %esi,%ebp
		mov    %ebp,0x000008(%esp)
		mov    0x00000e(%esp),%ebp
		sar    $0x000010,%ebp
		movswl %bx,%esi
		add    %ebp,%esi
		mov    0x000008(%esp),%ebp
		cmp    %ebp,%esi
		jge    _04c1ec_jump
		movswl %cx,%esi
		sub    %esi,%ebp
		mov    %ebp,%esi
		jmp    _04c1f1_jump

	_04c1ec_jump:
		movswl %cx,%ebp
		sub    %ebp,%esi

	_04c1f1_jump:
		mov    %dx,_0e3c1c_data
		mov    0x00000c(%esp),%edx
		mov    %bx,_0e3c20_data
		mov    %dx,_0e3c24_data
		mov    0x000010(%esp),%edx
		mov    _095b4b_data,%bh
		mov    %dx,_0e3c1e_data
		test   %bh,%bh
		je     _04c236_jump
		push   $0x000001
		movswl %si,%edx
		movswl %di,%ebx
		cwtl   
		movswl %cx,%esi
		mov    %edx,%ecx
		mov    %esi,%edx
		call   _04e054_func
		jmp    _04c249_jump

	_04c236_jump:
		movswl %si,%edx
		movswl %di,%ebx
		cwtl   
		movswl %cx,%esi
		mov    %edx,%ecx
		mov    %esi,%edx
		call   _04e864_func

	_04c249_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c254_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		sub    $0x000008,%esp
		mov    $0x000001,%ecx
		mov    _047434_jump,%eax
		mov    $0x0000a0,%edx
		mov    %eax,(%esp)
		call   _03bc14_func
		push   $0x000001
		mov    _0cebe4_data,%ebx
		mov    $_0963cc_data,%eax
		sar    $0x000010,%ebx
		call   _01a178_func
		mov    _096475_data,%al
		mov    %al,0x000004(%esp)
		jmp    _04c330_jump

	_04c295_jump:
		imul   $0x0000d8,%ebx,%eax
		mov    _0ca7b8_data(%eax),%dx
		mov    _0ca7ba_data(%eax),%cx
		cmp    $0x000003,%bl
		jae    _04c2bd_jump
		cmpw   $0x000000,_0ccbac_data(,%ebx,2)
		je     _04c2bd_jump
		mov    $0x000001,%bl
		jmp    _04c2c6_jump

	_04c2bd_jump:
		xor    %ebx,%ebx
		mov    0x000004(%esp),%bl
		mov    (%esp,%ebx,1),%bl

	_04c2c6_jump:
		xor    %eax,%eax
		mov    _0cebf6_data,%di
		mov    0x000004(%esp),%al
		cmp    %di,%ax
		je     _04c300_jump
		xor    %eax,%eax
		mov    %bl,%al
		push   %eax
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		imul   $0x0000d8,%eax,%eax
		movswl %dx,%edx
		movswl %cx,%ebx
		mov    $0x000002,%ecx
		add    $_0ca6e8_data,%eax
		call   _01a178_func
		jmp    _04c32c_jump

	_04c300_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		imul   $0x0000d8,%eax,%eax
		mov    %bl,_0ca7bf_data(%eax)
		mov    $_0ca6e8_data,%ebx
		add    %eax,%ebx
		mov    %ebx,%eax
		mov    $0x000001,%edx
		call   _01ec48_func
		mov    %ebx,%eax
		call   _04d558_func

	_04c32c_jump:
		incb   0x000004(%esp)

	_04c330_jump:
		mov    _0cebde_data,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _096475_data,%al
		sar    $0x000010,%edx
		mov    0x000004(%esp),%bl
		add    %edx,%eax
		cmp    %eax,%ebx
		jle    _04c295_jump
		add    $0x000008,%esp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c358_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _04d4c4_func
		call   _036910_func
		test   %al,%al
		je     _04c372_jump
		movb   $0x000001,_0cee7e_data

	_04c372_jump:
		cmpb   $0x000000,_0ceec3_data
		jne    _04c3af_jump
		mov    _0cebf4_data,%ax
		cmp    _0cebd6_data,%ax
		jle    _04c42f_jump
		mov    _0cebf2_data,%edx
		mov    _0cebc2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04c42f_jump

	_04c3af_jump:
		call   _040864_func
		test   %ax,%ax
		je     _04c3f0_jump
		mov    $0x000044,%eax
		call   _06fa30_func
		xor    %eax,%eax
		mov    _0cebf6_data,%si
		mov    _096475_data,%al
		cmp    %si,%ax
		jne    _04c3e4_jump
		mov    _0ceb9c_data,%ax
		mov    %ax,_0cebf6_data
		jmp    _04c42f_jump

	_04c3e4_jump:
		mov    %esi,%edi
		dec    %edi
		mov    %di,_0cebf6_data
		jmp    _04c42f_jump

	_04c3f0_jump:
		call   _0407f4_func
		test   %ax,%ax
		je     _04c42f_jump
		mov    $0x000044,%eax
		call   _06fa30_func
		mov    _0cebf6_data,%ax
		mov    _0ceb9c_data,%bx
		cmp    %bx,%ax
		jne    _04c425_jump
		xor    %ebx,%eax
		mov    _096475_data,%al
		mov    %ax,_0cebf6_data
		jmp    _04c42f_jump

	_04c425_jump:
		mov    %eax,%ecx
		inc    %ecx
		mov    %cx,_0cebf6_data

	_04c42f_jump:
		mov    _0cebf6_data,%ax
		test   %ax,%ax
		jl     _04c4e1_jump
		cmp    $0x000002,%ax
		jg     _04c4e1_jump
		cmpb   $0x000000,_0ceec3_data
		je     _04c4e1_jump
		call   _0367ec_func
		test   %al,%al
		jne    _04c472_jump
		call   _040784_func
		test   %ax,%ax
		jne    _04c472_jump
		call   _040714_func
		test   %ax,%ax
		je     _04c4e1_jump

	_04c472_jump:
		xor    %al,%al
		jmp    _04c478_jump

	_04c476_jump:
		inc    %al

	_04c478_jump:
		xor    %edx,%edx
		mov    %al,%dl
		cmpw   $0x000000,_0ccbac_data(,%edx,2)
		je     _04c476_jump
		xor    %edx,%edx
		mov    _0cebf6_data,%cx
		mov    %al,%dl
		cmp    %cx,%dx
		je     _04c4e1_jump
		mov    _0cebf4_data,%edx
		sar    $0x000010,%edx
		cmpw   $0x000000,_0ccbac_data(,%edx,2)
		sete   %dl
		xor    %dh,%dh
		mov    %edx,%ebx
		mov    _0cebf4_data,%edx
		sar    $0x000010,%edx
		mov    %bx,_0ccbac_data(,%edx,2)
		xor    %edx,%edx
		mov    %al,%dl
		cmpw   $0x000000,_0ccbac_data(,%edx,2)
		sete   %dl
		xor    %dh,%dh
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    %al,%dl
		mov    %bx,_0ccbac_data(,%edx,2)

	_04c4e1_jump:
		call   _04d508_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c4ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cee7e_data,%ah
		test   %ah,%ah
		jne    _04c566_jump
		cmpw   $0x000000,_0ccbac_data
		je     _04c51d_jump
		mov    $0x000001,%bl
		mov    %ah,_095b15_data
		mov    %ah,_0cee5d_data
		mov    %bl,_095b55_data
		jmp    _04c566_jump

	_04c51d_jump:
		cmpw   $0x000000,_0ccbae_data
		je     _04c540_jump
		mov    $0x000001,%cl
		mov    %ah,_0cee5d_data
		mov    _095b54_data,%al
		mov    %cl,_095b15_data
		cmp    $0x000002,%al
		jne    _04c566_jump
		jmp    _04c559_jump

	_04c540_jump:
		mov    $0x000001,%dl
		mov    _095b54_data,%bl
		mov    %dl,_095b15_data
		mov    %dl,_0cee5d_data
		cmp    $0x000002,%bl
		jne    _04c566_jump

	_04c559_jump:
		mov    %ah,_095b54_data
		xor    %eax,%eax
		call   _0475dc_func

	_04c566_jump:
		movb   $0x000009,_0cee7c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c574_func:
		push   %esi
		push   %edi
		movw   $0x0000c8,(%eax)
		mov    $_0cc110_data,%edi
		movw   $0x000000,(%edx)
		mov    _0c25e8_data,%esi
		movw   $0x0000c8,(%ebx)
		mov    $0x0000a0,%edx
		movw   $0x000000,(%ecx)
		mov    $0x000046,%ecx
		mov    $0x000024,%ebx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000001,%ah
		mov    %dx,_0cc1e0_data
		mov    %bx,_0cc1e2_data
		mov    %ah,_0cc1e4_data
		xor    %dl,%dl
		mov    %ah,_0cc1e6_data
		mov    %dl,_0cc1e5_data
		mov    %edi,%eax
		mov    %dl,_0cc1e7_data
		call   _01ec48_func
		pop    %edi
		pop    %esi
		ret    



_04c5e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		call   _03bc14_func
		cmpb   $0x000000,_095b4b_data
		je     _04c624_jump
		mov    _0e3c1c_data,%ecx
		mov    _0e3c22_data,%ebx
		mov    _0e3c1e_data,%edx
		mov    _0e3c1a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024538_func

	_04c624_jump:
		mov    $0x000001,%edx
		mov    $_0cc110_data,%eax
		mov    $0x000001,%ecx
		mov    $0x000062,%ebx
		call   _04d558_func
		push   $0x000005
		mov    $0x00009b,%edx
		mov    $_0c0c0c_data,%eax
		call   _01a178_func
		xor    %dl,%dl
		mov    %dl,0x00000c(%esp)

	_04c654_jump:
		xor    %ebx,%ebx
		push   $0x000005
		mov    0x000010(%esp),%bl
		mov    $0x000001,%ecx
		shl    $0x000003,%ebx
		mov    $0x000096,%edx
		add    $0x00004a,%ebx
		mov    $_0c0bd4_data,%eax
		movswl %bx,%ebx
		call   _01a178_func
		mov    0x00000c(%esp),%dh
		inc    %dh
		mov    %dh,0x00000c(%esp)
		cmp    $0x000007,%dh
		jb     _04c654_jump
		mov    _0ceb8e_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esp,%edx
		mov    $0x000002,%ecx
		call   _07cdde_func
		push   $0x000005
		mov    $0x000062,%ebx
		mov    $0x0000c6,%edx
		lea    0x000004(%esp),%eax
		call   _01a178_func
		mov    _0ceb96_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esp,%edx
		mov    $0x000002,%ecx
		call   _07cdde_func
		push   $0x000005
		mov    $0x000062,%ebx
		mov    $0x000069,%edx
		lea    0x000004(%esp),%eax
		call   _01a178_func
		mov    _0ceb98_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esp,%edx
		mov    $0x000002,%ecx
		call   _07cdde_func
		push   $0x000005
		mov    $0x000040,%ebx
		mov    $0x000096,%edx
		lea    0x000004(%esp),%eax
		call   _01a178_func
		mov    _0ceb90_data,%edx
		sar    $0x000010,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esp,%edx
		mov    $0x000002,%ecx
		call   _07cdde_func
		push   $0x000005
		mov    $0x00008a,%ebx
		mov    $0x000096,%edx
		lea    0x000004(%esp),%eax
		call   _01a178_func
		push   $0x000005
		mov    $0x000002,%ecx
		mov    $0x0000a0,%ebx
		mov    _0c24c0_data,%eax
		mov    %ebx,%edx
		call   _01a178_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c780_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $_0ceb9a_data,%ecx
		mov    $_0ceb92_data,%ebx
		mov    $_0ceb98_data,%edx
		mov    $_0ceb90_data,%eax
		call   _040b6c_func
		call   _04c5e8_func
		call   _0367ec_func
		xor    %ah,%ah
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c7ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x00000c,%esp
		call   _03bc14_func
		cmpb   $0x000000,_095b4b_data
		je     _04c7e8_jump
		mov    _0e3c1c_data,%ecx
		mov    _0e3c22_data,%ebx
		mov    _0e3c1e_data,%edx
		mov    _0e3c1a_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _024538_func

	_04c7e8_jump:
		mov    $0x000001,%edx
		mov    $_0cc110_data,%eax
		mov    $0x000002,%ecx
		mov    $0x000064,%ebx
		call   _04d558_func
		push   $0x000005
		mov    $0x0000a0,%edx
		mov    _0c24bc_data,%eax
		call   _01a178_func
		mov    _0ceb94_data,%edx
		sar    $0x000010,%edx
		mov    $0x000014,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00000a,%ebx
		mov    %esp,%edx
		add    %eax,%eax
		mov    $0x000002,%ecx
		call   _07cdde_func
		push   $0x000005
		mov    $0x000078,%ebx
		mov    $0x000082,%edx
		lea    0x000004(%esp),%eax
		call   _01a178_func
		mov    _0ceb92_data,%edx
		sar    $0x000010,%edx
		mov    $0x000014,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x00000a,%ebx
		mov    %esp,%edx
		add    %eax,%eax
		mov    $0x000002,%ecx
		call   _07cdde_func
		push   $0x000005
		mov    $0x000078,%ebx
		mov    $0x0000b4,%edx
		lea    0x000004(%esp),%eax
		call   _01a178_func
		push   $0x000005
		mov    $0x000002,%ecx
		mov    $0x0000a0,%ebx
		mov    _0c24c4_data,%eax
		mov    %ebx,%edx
		call   _01a178_func
		add    $0x00000c,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04c8ac_func:
		push   %edx
		mov    $_0ceb94_data,%edx
		mov    $_0ceb96_data,%eax
		call   _040bb4_func
		call   _04c7ac_func
		call   _0367ec_func
		xor    %ah,%ah
		pop    %edx
		ret    



_04c8cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		cmpl   $0x000000,_0e3c00_data
		je     _04c955_jump
		xor    %edx,%edx
		call   *_0e3c00_data
		mov    _0ceec7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7388_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e32dc_data,%edi
		add    %eax,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0ceec7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7388_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0c7088_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		call   _023a7c_func

	_04c955_jump:
		mov    $_0ceb92_data,%ecx
		mov    $_0ceb9a_data,%ebx
		mov    $_0ceb90_data,%edx
		mov    $_0ceb98_data,%eax
		call   _04c574_func
		cmpb   $0x000000,_095b4b_data
		jne    _04c981_jump
		call   _03b880_func
		jmp    _04caed_jump

	_04c981_jump:
		mov    _0cee78_data,%al
		cmp    $0x000001,%al
		jb     _04c995_jump
		jbe    _04c9c6_jump
		cmp    $0x000002,%al
		je     _04c9ef_jump
		jmp    _04ca16_jump

	_04c995_jump:
		test   %al,%al
		jne    _04ca16_jump
		mov    $0x000046,%ecx
		mov    $0x000008,%esi
		mov    $0x0000b0,%edi
		mov    $0x0000be,%eax
		mov    %cx,(%esp)
		mov    %si,0x00000c(%esp)
		mov    %di,0x000008(%esp)
		mov    %ax,0x000004(%esp)
		jmp    _04ca16_jump

	_04c9c6_jump:
		mov    $0x000039,%edi
		mov    $0x000008,%eax
		mov    $0x0000c8,%edx
		mov    $0x0000be,%ebx
		mov    %di,(%esp)
		mov    %ax,0x00000c(%esp)
		mov    %dx,0x000008(%esp)
		mov    %bx,0x000004(%esp)
		jmp    _04ca16_jump

	_04c9ef_jump:
		mov    $0x000032,%edx
		mov    $0x000008,%ebx
		mov    $0x0000d8,%ecx
		mov    $0x0000be,%esi
		mov    %dx,(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000008(%esp)
		mov    %si,0x000004(%esp)

	_04ca16_jump:
		mov    (%esp),%edx
		mov    _0e3c1c_data,%ax
		cmp    %dx,%ax
		jle    _04ca26_jump
		mov    %edx,%eax

	_04ca26_jump:
		mov    0x00000c(%esp),%ebx
		mov    _0e3c20_data,%dx
		cmp    %bx,%dx
		jle    _04ca38_jump
		mov    %ebx,%edx

	_04ca38_jump:
		mov    _0e3c1a_data,%ecx
		mov    _0e3c22_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x000006(%esp),%esi
		add    %ecx,%ebx
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		add    %esi,%ecx
		cmp    %ecx,%ebx
		jle    _04ca69_jump
		movswl %ax,%ecx
		sub    %ecx,%ebx
		mov    %ebx,%ecx
		jmp    _04ca6e_jump

	_04ca69_jump:
		movswl %ax,%ebx
		sub    %ebx,%ecx

	_04ca6e_jump:
		mov    _0e3c1c_data,%ebx
		mov    %ecx,%esi
		mov    _0e3c1e_data,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%ecx
		mov    0x000002(%esp),%edi
		add    %ebx,%ecx
		mov    0x00000a(%esp),%ebx
		sar    $0x000010,%edi
		sar    $0x000010,%ebx
		add    %edi,%ebx
		cmp    %ebx,%ecx
		jle    _04caa1_jump
		movswl %dx,%ebx
		sub    %ebx,%ecx
		mov    %ecx,%ebx
		jmp    _04caa6_jump

	_04caa1_jump:
		movswl %dx,%ecx
		sub    %ecx,%ebx

	_04caa6_jump:
		mov    (%esp),%ecx
		mov    %cx,_0e3c1c_data
		mov    0x00000c(%esp),%ecx
		mov    %cx,_0e3c20_data
		mov    0x000008(%esp),%ecx
		push   $0x000001
		mov    %cx,_0e3c24_data
		mov    0x000008(%esp),%ecx
		movswl %dx,%edx
		mov    %cx,_0e3c1e_data
		mov    $_04c5e8_func,%ecx
		cwtl   
		mov    %ecx,_0e3bf8_data
		movswl %bx,%ecx
		movswl %si,%ebx
		call   _04e054_func

	_04caed_jump:
		mov    $_04c780_func,%eax
		call   _03b948_func
		cmpb   $0x000000,_095b4b_data
		jne    _04cb0f_jump
		call   _03b8d0_func
		call   _03b880_func
		jmp    _04cc7b_jump

	_04cb0f_jump:
		mov    _0cee78_data,%al
		cmp    $0x000001,%al
		jb     _04cb23_jump
		jbe    _04cb54_jump
		cmp    $0x000002,%al
		je     _04cb7d_jump
		jmp    _04cba4_jump

	_04cb23_jump:
		test   %al,%al
		jne    _04cba4_jump
		mov    $0x000046,%edi
		mov    $0x000008,%eax
		mov    $0x0000b0,%edx
		mov    $0x0000af,%ebx
		mov    %di,(%esp)
		mov    %ax,0x00000c(%esp)
		mov    %dx,0x000008(%esp)
		mov    %bx,0x000004(%esp)
		jmp    _04cba4_jump

	_04cb54_jump:
		mov    $0x00003d,%edx
		mov    $0x000008,%ebx
		mov    $0x0000c2,%ecx
		mov    $0x0000af,%esi
		mov    %dx,(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000008(%esp)
		mov    %si,0x000004(%esp)
		jmp    _04cba4_jump

	_04cb7d_jump:
		mov    $0x000032,%ecx
		mov    $0x000008,%esi
		mov    $0x0000d7,%edi
		mov    $0x0000af,%eax
		mov    %cx,(%esp)
		mov    %si,0x00000c(%esp)
		mov    %di,0x000008(%esp)
		mov    %ax,0x000004(%esp)

	_04cba4_jump:
		mov    (%esp),%ecx
		mov    _0e3c1c_data,%ax
		cmp    %cx,%ax
		jle    _04cbb4_jump
		mov    %ecx,%eax

	_04cbb4_jump:
		mov    0x00000c(%esp),%esi
		mov    _0e3c20_data,%dx
		cmp    %si,%dx
		jle    _04cbc6_jump
		mov    %esi,%edx

	_04cbc6_jump:
		mov    _0e3c1a_data,%ecx
		mov    _0e3c22_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    -0x000002(%esp),%esi
		add    %ebx,%ecx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%esi
		sar    $0x000010,%ebx
		add    %esi,%ebx
		cmp    %ebx,%ecx
		jle    _04cbf7_jump
		movswl %ax,%ebx
		sub    %ebx,%ecx
		mov    %ecx,%ebx
		jmp    _04cbfc_jump

	_04cbf7_jump:
		movswl %ax,%ecx
		sub    %ecx,%ebx

	_04cbfc_jump:
		mov    _0e3c1c_data,%ecx
		mov    %ebx,%esi
		mov    _0e3c1e_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x00000a(%esp),%edi
		add    %ecx,%ebx
		mov    0x000002(%esp),%ecx
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		add    %edi,%ecx
		cmp    %ecx,%ebx
		jle    _04cc2d_jump
		movswl %dx,%ecx
		sub    %ecx,%ebx
		jmp    _04cc34_jump

	_04cc2d_jump:
		movswl %dx,%ebx
		sub    %ebx,%ecx
		mov    %ecx,%ebx

	_04cc34_jump:
		mov    (%esp),%ecx
		mov    $_04c7ac_func,%edi
		mov    %cx,_0e3c1c_data
		mov    0x00000c(%esp),%ecx
		push   $0x000001
		mov    %cx,_0e3c20_data
		mov    0x00000c(%esp),%ecx
		movswl %dx,%edx
		mov    %cx,_0e3c24_data
		mov    0x000008(%esp),%ecx
		cwtl   
		mov    %cx,_0e3c1e_data
		movswl %bx,%ecx
		movswl %si,%ebx
		mov    %edi,_0e3bf8_data
		call   _04e054_func

	_04cc7b_jump:
		mov    $_04c8ac_func,%eax
		call   _03b948_func
		cmpb   $0x000000,_095b4b_data
		jne    _04cc9d_jump
		call   _03b8d0_func
		call   _03b880_func
		jmp    _04ce11_jump

	_04cc9d_jump:
		mov    _0cee78_data,%al
		cmp    $0x000001,%al
		jb     _04ccb1_jump
		jbe    _04cce2_jump
		cmp    $0x000002,%al
		je     _04cd0b_jump
		jmp    _04cd32_jump

	_04ccb1_jump:
		test   %al,%al
		jne    _04cd32_jump
		mov    $0x00003c,%edx
		mov    $0x000008,%ebx
		mov    $0x0000c0,%ecx
		mov    $0x0000bb,%esi
		mov    %dx,(%esp)
		mov    %bx,0x00000c(%esp)
		mov    %cx,0x000008(%esp)
		mov    %si,0x000004(%esp)
		jmp    _04cd32_jump

	_04cce2_jump:
		mov    $0x00003c,%ecx
		mov    $0x000008,%esi
		mov    $0x0000c0,%edi
		mov    $0x0000bb,%eax
		mov    %cx,(%esp)
		mov    %si,0x00000c(%esp)
		mov    %di,0x000008(%esp)
		mov    %ax,0x000004(%esp)
		jmp    _04cd32_jump

	_04cd0b_jump:
		mov    $0x000032,%edi
		mov    $0x000008,%eax
		mov    $0x0000d6,%edx
		mov    $0x0000be,%ebx
		mov    %di,(%esp)
		mov    %ax,0x00000c(%esp)
		mov    %dx,0x000008(%esp)
		mov    %bx,0x000004(%esp)

	_04cd32_jump:
		mov    (%esp),%edi
		mov    _0e3c1c_data,%ax
		cmp    %di,%ax
		jle    _04cd44_jump
		mov    %edi,%ebx
		jmp    _04cd46_jump

	_04cd44_jump:
		mov    %eax,%ebx

	_04cd46_jump:
		mov    0x00000c(%esp),%edx
		mov    _0e3c20_data,%ax
		cmp    %dx,%ax
		jg     _04cd57_jump
		mov    %eax,%edx

	_04cd57_jump:
		mov    _0e3c1a_data,%ecx
		mov    _0e3c22_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		mov    0x000006(%esp),%esi
		add    %ecx,%eax
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		add    %esi,%ecx
		cmp    %ecx,%eax
		jle    _04cd87_jump
		movswl %bx,%ecx
		sub    %ecx,%eax
		mov    %eax,%ecx
		jmp    _04cd8c_jump

	_04cd87_jump:
		movswl %bx,%eax
		sub    %eax,%ecx

	_04cd8c_jump:
		mov    _0e3c1c_data,%eax
		mov    %ecx,%esi
		mov    _0e3c1e_data,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		mov    0x000002(%esp),%edi
		add    %ecx,%eax
		mov    0x00000a(%esp),%ecx
		sar    $0x000010,%edi
		sar    $0x000010,%ecx
		add    %edi,%ecx
		cmp    %ecx,%eax
		jle    _04cdbe_jump
		movswl %dx,%ecx
		sub    %ecx,%eax
		mov    %eax,%ecx
		jmp    _04cdc3_jump

	_04cdbe_jump:
		movswl %dx,%eax
		sub    %eax,%ecx

	_04cdc3_jump:
		mov    (%esp),%eax
		mov    %ax,_0e3c1c_data
		mov    0x00000c(%esp),%eax
		mov    $_049df8_func,%ebp
		mov    %ax,_0e3c20_data
		mov    0x000008(%esp),%eax
		movswl %cx,%ecx
		mov    %ax,_0e3c24_data
		mov    0x000004(%esp),%eax
		movswl %dx,%edx
		mov    %ax,_0e3c1e_data
		call   _049c9c_func
		push   $0x000001
		movswl %si,%eax
		movswl %bx,%esi
		mov    %eax,%ebx
		mov    %esi,%eax
		mov    %ebp,_0e3bf8_data
		call   _04e054_func

	_04ce11_jump:
		push   $_0ceb94_data
		mov    $_0ceb9a_data,%ecx
		mov    $_0ceb92_data,%ebx
		mov    $_0ceb98_data,%edx
		mov    _0e3bfc_data,%eax
		push   $_0ceb96_data
		mov    %eax,_0e3bf0_data
		mov    $_0ceb90_data,%eax
		call   _040bf0_func
		mov    $_049c3c_func,%eax
		mov    _095b4b_data,%bl
		mov    %eax,_0e3bec_data
		test   %bl,%bl
		jne    _04ce59_jump
		call   _04d074_func
		jmp    _04ce5e_jump

	_04ce59_jump:
		call   _04d03c_func

	_04ce5e_jump:
		mov    _0e3bf0_data,%eax
		mov    _095b4b_data,%bh
		mov    %eax,_0e3bfc_data
		test   %bh,%bh
		jne    _04ce88_jump
		call   _03b8d0_func
		call   _04a268_func
		call   _04a368_func
		call   _03b880_func
		jmp    _04ce92_jump

	_04ce88_jump:
		call   _04a268_func
		call   _04a368_func

	_04ce92_jump:
		cmpl   $0x000000,_0e3c00_data
		je     _04ced0_jump
		xor    %edx,%edx
		mov    _0ceec7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7388_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e32dc_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_04ced0_jump:
		call   _036338_jump
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04cee0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _040b64_func
		cmpb   $0x000000,_095b9a_data
		je     _04cf46_jump
		mov    _0ceb8e_data,%ax
		cmp    _0ceb98_data,%ax
		jge    _04cf0b_jump
		mov    $0x000001,%dl
		mov    %ax,_0ceb98_data
		jmp    _04cf1c_jump

	_04cf0b_jump:
		cmp    _0ceb90_data,%ax
		jle    _04cf1c_jump
		mov    $0x000001,%dl
		mov    %ax,_0ceb90_data

	_04cf1c_jump:
		mov    _0ceb8c_data,%ax
		cmp    _0ceb9a_data,%ax
		jge    _04cf35_jump
		mov    $0x000001,%dl
		mov    %ax,_0ceb9a_data
		jmp    _04cf46_jump

	_04cf35_jump:
		cmp    _0ceb92_data,%ax
		jle    _04cf46_jump
		mov    $0x000001,%dl
		mov    %ax,_0ceb92_data

	_04cf46_jump:
		test   %dl,%dl
		je     _04cf6d_jump
		push   $_0ceb94_data
		mov    $_0ceb9a_data,%ecx
		mov    $_0ceb92_data,%ebx
		push   $_0ceb96_data
		mov    $_0ceb98_data,%edx
		mov    $_0ceb90_data,%eax
		call   _040bf0_func

	_04cf6d_jump:
		cmpl   $0x000000,_0e3bf8_data
		je     _04cf7c_jump
		call   *_0e3bf8_data

	_04cf7c_jump:
		cmpb   $0x000000,_095b99_data
		je     _04cfa6_jump
		xor    %dh,%dh
		mov    %dh,_095b99_data
		call   _016df7_func
		call   _016de7_func
		mov    $0x000001,%eax
		call   _023a7c_func
		call   _03a2a0_func

	_04cfa6_jump:
		cmpb   $0x000000,_0ceec1_data
		jne    _04cfcc_jump
		mov    _0cebce_data,%ax
		test   %ax,%ax
		jne    _04cfcc_jump
		cmpb   $0x000000,_0cee7e_data
		jne    _04cfcc_jump
		cmpb   $0x000000,_0cee79_data
		je     _04cfd1_jump

	_04cfcc_jump:
		mov    $0x000001,%eax

	_04cfd1_jump:
		mov    %eax,%edx
		test   %ax,%ax
		jne    _04d034_jump
		cmpl   $0x000000,_0e3bf4_data
		je     _04cff1_jump
		cmpw   $0x000000,_0ced22_data
		jne    _04cff1_jump
		call   *_0e3bf4_data

	_04cff1_jump:
		call   _0367ec_func
		test   %al,%al
		je     _04d01f_jump
		mov    _0cebf6_data,%ax
		cmp    _0ceb9c_data,%ax
		jne    _04d01f_jump
		mov    $0x000001,%esi
		mov    $0x000045,%eax
		mov    %si,_0cebce_data
		call   _06fa30_func

	_04d01f_jump:
		cmpb   $0x000000,_0cee7e_data
		je     _04d032_jump
		mov    $0x00004d,%eax
		call   _06fa30_func

	_04d032_jump:
		mov    %edx,%eax

	_04d034_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04d03c_func:
		cmpl   $0x000000,_0e3bec_data
		je     _04d04b_jump
		call   *_0e3bec_data

	_04d04b_jump:
		cmpl   $0x000000,_0e3be8_data
		je     _04d05a_jump
		call   *_0e3be8_data

	_04d05a_jump:
		mov    $_04cee0_func,%eax
		call   _03b948_func
		cmpl   $0x000000,_0e3bfc_data
		je     _04d073_jump
		call   *_0e3bfc_data

	_04d073_jump:
		ret    



_04d074_func:
		push   %ecx
		push   %esi
		push   %edi
		cmpl   $0x000000,_0e3bec_data
		je     _04d086_jump
		call   *_0e3bec_data

	_04d086_jump:
		cmpl   $0x000000,_0e3be8_data
		je     _04d095_jump
		call   *_0e3be8_data

	_04d095_jump:
		cmpl   $0x000000,_0e3c00_data
		je     _04d0a4_jump
		call   *_0e3c00_data

	_04d0a4_jump:
		cmpw   $0x000001,_0cecd4_data
		jne    _04d0b8_jump
		cmpw   $0x000009,_0cecc0_data
		je     _04d0f4_jump

	_04d0b8_jump:
		cmpw   $0x000002,_0cecd4_data
		jne    _04d0cc_jump
		cmpw   $0x000004,_0cecc0_data
		je     _04d0f4_jump

	_04d0cc_jump:
		cmpw   $0x000004,_0cecd4_data
		jne    _04d0e0_jump
		cmpw   $0x000009,_0cecc0_data
		je     _04d0f4_jump

	_04d0e0_jump:
		cmpw   $0x000005,_0cecd4_data
		jne    _04d11d_jump
		cmpw   $0x000004,_0cecc0_data
		jne    _04d11d_jump

	_04d0f4_jump:
		mov    _0ceb86_data,%esi
		sar    $0x000010,%esi
		lea    0x000000(,%esi,4),%eax
		mov    $0x000300,%ecx
		sub    %esi,%eax
		mov    _0ccc78_data,%esi
		shl    $0x000008,%eax
		mov    $_0e32dc_data,%edi
		add    %eax,%esi
		jmp    _04d175_jump

	_04d11d_jump:
		movzbl _0ceec7_data,%esi
		lea    0x000000(,%esi,4),%eax
		mov    $0x000300,%ecx
		sub    %esi,%eax
		mov    $_0c7388_data,%esi
		shl    $0x000008,%eax
		mov    $_0e32dc_data,%edi
		add    %eax,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		movzbl _0ceec7_data,%esi
		lea    0x000000(,%esi,4),%eax
		mov    $_0c7388_data,%edi
		sub    %esi,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0c7088_data,%esi
		add    %eax,%edi

	_04d175_jump:
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _024690_func
		xor    %eax,%eax
		call   _023a7c_func
		mov    $_04cee0_func,%eax
		call   _03b948_func
		cmpl   $0x000000,_0e3bfc_data
		je     _04d1aa_jump
		call   *_0e3bfc_data

	_04d1aa_jump:
		movzbl _0ceec7_data,%esi
		lea    0x000000(,%esi,4),%eax
		mov    $_0c7388_data,%edi
		sub    %esi,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e32dc_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04d1e4_func:
		push   %ebx
		push   %edx
		xor    %eax,%eax

	_04d1e8_jump:
		movswl %ax,%edx
		mov    _095b28_data(,%edx,4),%ebx
		mov    (%ebx),%bl
		inc    %eax
		mov    %bl,_095b44_data(%edx)
		cmp    $0x000007,%ax
		jl     _04d1e8_jump
		mov    _095b28_data,%edx
		movb   $0x00004b,(%edx)
		mov    _095b2c_data,%edx
		movb   $0x000048,(%edx)
		mov    _095b30_data,%edx
		movb   $0x00004d,(%edx)
		mov    _095b34_data,%edx
		movb   $0x000050,(%edx)
		mov    _095b38_data,%edx
		movb   $0x00001d,(%edx)
		mov    _095b3c_data,%edx
		movb   $0x000038,(%edx)
		mov    _095b40_data,%edx
		movb   $0x000032,(%edx)
		pop    %edx
		pop    %ebx
		ret    



_04d244_func:
		push   %ebx
		push   %edx
		xor    %eax,%eax

	_04d248_jump:
		movswl %ax,%edx
		mov    _095b28_data(,%edx,4),%ebx
		mov    _095b44_data(%edx),%dl
		inc    %eax
		mov    %dl,(%ebx)
		cmp    $0x000007,%ax
		jl     _04d248_jump
		pop    %edx
		pop    %ebx
		ret    



_04d264_func:
		push   %ebx
		push   %edx
		push   %edi
		cmpw   $0x000000,_0ccbae_data
		jne    _04d31f_jump
		cmpw   $0x000002,_0ccbb2_data
		jne    _04d286_jump
		xor    %eax,%eax
		jmp    _04d3b8_jump

	_04d286_jump:
		mov    _0ccbb0_data,%edx
		sar    $0x000010,%edx
		mov    _0ccbb4_data,%di
		mov    _095b88_data(,%edx,2),%ax
		shl    $0x000003,%edx
		test   %di,%di
		je     _04d2b9_jump
		mov    _0ccbae_data,%ebx
		sar    $0x000010,%ebx
		add    _095b58_data(%edx,%ebx,2),%ax
		jmp    _04d2ca_jump

	_04d2b9_jump:
		mov    _0ccbae_data,%ebx
		sar    $0x000010,%ebx
		add    _095b68_data(%edx,%ebx,2),%ax

	_04d2ca_jump:
		cmpw   $0x000000,_0ccbb8_data
		je     _04d2fe_jump
		mov    _0ccbb0_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,8),%ebx
		mov    _0ccbae_data,%edx
		sar    $0x000010,%edx
		mov    _095b78_data(%ebx,%edx,2),%dx
		add    %edx,%edx
		add    %edx,%eax
		jmp    _04d3b8_jump

	_04d2fe_jump:
		mov    _0ccbae_data,%ebx
		mov    _0ccbb0_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %ebx,%ebx
		add    _095b78_data(%ebx,%edx,8),%ax
		jmp    _04d3b8_jump

	_04d31f_jump:
		cmpb   $0x000000,_0cee5d_data
		jne    _04d372_jump
		mov    _0ccbb0_data,%eax
		sar    $0x000010,%eax
		mov    _095b92_data(,%eax,2),%edx
		sar    $0x000010,%edx
		mov    %edx,%ebx
		sar    %ebx
		movswl %bx,%eax
		mov    _0ccbb4_data,%di
		add    %ebx,%eax
		test   %di,%di
		je     _04d355_jump
		sar    $0x000003,%edx
		cwtl   
		add    %edx,%eax

	_04d355_jump:
		cmpw   $0x000000,_0ccbb6_data
		je     _04d3b8_jump
		mov    _0ccbb0_data,%edx
		sar    $0x000010,%edx
		add    _095b8c_data(,%edx,2),%ax
		jmp    _04d3b8_jump

	_04d372_jump:
		mov    _0ccbb0_data,%eax
		sar    $0x000010,%eax
		mov    _095b92_data(,%eax,2),%edx
		sar    $0x000010,%edx
		mov    %edx,%ebx
		sar    %ebx
		movswl %bx,%eax
		add    %ebx,%eax
		cmpw   $0x000000,_0ccbb4_data
		je     _04d39d_jump
		sar    $0x000003,%edx
		cwtl   
		add    %edx,%eax

	_04d39d_jump:
		cmpw   $0x000000,_0ccbb6_data
		je     _04d3b8_jump
		mov    _0ccbb0_data,%edx
		sar    $0x000010,%edx
		add    _095b90_data(,%edx,2),%ax

	_04d3b8_jump:
		cmpw   $0x000100,_0e3c22_data
		jle    _04d3cc_jump
		mov    $0x000080,%eax
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    

	_04d3cc_jump:
		cmp    $0x000080,%ax
		jge    _04d3db_jump
		mov    $0x000100,%eax
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    

	_04d3db_jump:
		mov    $0x000100,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		add    $0x000080,%eax
		pop    %edi
		pop    %edx
		pop    %ebx
		ret    



_04d3f0_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%ecx
		mov    %ebx,%edi
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000064,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		mov    %eax,%ebx
		sub    %edx,%eax
		sar    %eax
		add    $0x00000b,%eax
		movswl %cx,%edx
		mov    %ax,_0cebe6_data
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000064,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    _0cebde_data,%esi
		sar    $0x000010,%esi
		mov    %eax,%ecx
		mov    %esi,%eax
		shl    $0x000004,%eax
		mov    %ecx,%edx
		sub    %esi,%eax
		sub    %eax,%edx
		inc    %esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%esi
		mov    %ax,_0cebf0_data
		cwtl   
		add    $0x00000f,%eax
		add    %ebx,%eax
		movswl %di,%edx
		mov    %ax,_0cec04_data
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000003,%edx
		mov    $0x000064,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		add    $0x00000b,%eax
		add    %ebx,%eax
		xor    %edx,%edx
		add    %eax,%ecx
		mov    %dx,_0cebce_data
		mov    %cx,_0cebee_data
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_04d4c4_func:
		push   %edx
		mov    _0cebf4_data,%dx
		cmp    _0cebfa_data,%dx
		jge    _04d4e1_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _04d4e1_jump
		inc    %edx
		jmp    _04d4fd_jump

	_04d4e1_jump:
		cmpb   $0x000000,_0ceec3_data
		jne    _04d4fb_jump
		mov    _0cebd6_data,%dx
		inc    %edx
		mov    %dx,_0cebf4_data
		pop    %edx
		ret    

	_04d4fb_jump:
		xor    %edx,%edx

	_04d4fd_jump:
		mov    %dx,_0cebf4_data
		pop    %edx
		ret    



_04d508_func:
		push   %edx
		call   _040864_func
		test   %ax,%ax
		jne    _04d54c_jump
		call   _0407f4_func
		test   %ax,%ax
		jne    _04d54c_jump
		call   _040784_func
		test   %ax,%ax
		jne    _04d54c_jump
		call   _040714_func
		test   %ax,%ax
		jne    _04d54c_jump
		call   _0367ec_func
		test   %al,%al
		jne    _04d54c_jump
		movb   $0x000001,_0ceec3_data
		xor    %edx,%edx
		mov    %dx,_0cebf4_data
		pop    %edx
		ret    

	_04d54c_jump:
		xor    %ah,%ah
		mov    %ah,_0ceec3_data
		pop    %edx
		ret    



_04d558_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		cmpb   $0x000000,_096474_data
		jne    _04d59f_jump
		mov    0x0000cc(%esi),%ecx
		xor    %eax,%eax
		mov    0x0000ca(%esi),%ebx
		mov    %dl,%al
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %eax
		mov    0x0000c8(%esi),%edx
		mov    0x0000c6(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _023c9c_func
		mov    %esi,%eax
		call   _01a830_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_04d59f_jump:
		mov    0x0000d0(%esi),%ebx
		mov    0x0000ce(%esi),%edx
		xor    %eax,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    0x0000d7(%esi),%al
		sar    $0x000010,%edx
		push   %eax
		mov    0x0000d4(%esi),%cl
		mov    %esi,%eax
		call   _01a178_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04d5d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x0000cc(%eax),%ecx
		mov    0x0000ca(%eax),%ebx
		mov    0x0000c8(%eax),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    0x0000c6(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0241d8_func
		mov    %esi,%eax
		call   _01a830_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04d60c_jump:
		xor    %ah,%ah
		mov    %ah,_096476_data
		call   _040b64_func
		cmpl   $0x000000,_0e3bf8_data
		je     _04d628_jump
		call   *_0e3bf8_data

	_04d628_jump:
		mov    _0e3bdc_data,%eax
		call   _04d5d0_func
		cmpl   $0x000000,_0e3c04_data
		je     _04d641_jump
		call   *_0e3c04_data

	_04d641_jump:
		call   _036910_func
		test   %al,%al
		jne    _04d653_jump
		cmpb   $0x000000,_096476_data
		je     _04d659_jump

	_04d653_jump:
		mov    $0x000001,%eax
		ret    

	_04d659_jump:
		xor    %ah,%ah
		ret    



_04d65c_func:
		push   %ebx
		push   %edx
		mov    _0e3bf8_data,%edx
		mov    %eax,_0e3bdc_data
		test   %edx,%edx
		je     _04d673_jump
		call   *_0e3bf8_data

	_04d673_jump:
		call   _016df7_func
		call   _016de7_func
		call   _023e80_func
		call   _03a2a0_func
		mov    $0x000001,%ah
		xor    %ebx,%ebx
		xor    %dl,%dl
		mov    %ah,_096474_data
		mov    $_04d60c_jump,%eax
		mov    %ebx,_0e3c04_data
		call   _03b948_func
		mov    %dl,_096474_data
		movb   $0x000001,_095b99_data
		call   _041128_func
		pop    %edx
		pop    %ebx
		ret    



_04d6b8_func:
		push   %ebx
		mov    %eax,_0e3bdc_data
		mov    %edx,_0e3c04_data
		mov    $0x000001,%ah
		xor    %edx,%edx
		mov    %ah,_096474_data
		call   _016df7_func
		call   _016de7_func
		call   _023e80_func

	_04d6dd_jump:
		cmp    _0e3bf8_data,%edx
		je     _04d6eb_jump
		call   *_0e3bf8_data

	_04d6eb_jump:
		mov    _0e3bdc_data,%eax
		call   _04d5d0_func
		call   _04d748_func
		call   _016df7_func
		call   _016de7_func
		call   _03b858_func
		call   _03a2a0_func
		call   _040b64_func
		call   _0367ec_func
		test   %al,%al
		jne    _04d6dd_jump
		mov    _0ced22_data,%bx
		cmp    %bx,%dx
		jne    _04d6dd_jump
		mov    $_04d60c_jump,%eax
		xor    %bl,%dl
		call   _03b948_func
		mov    %dl,_096474_data
		movb   $0x000001,_095b99_data
		call   _041128_func
		pop    %ebx
		ret    



_04d748_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cee96_data
		jne    _04d7ab_jump
		mov    _0e3bdc_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		push   $0x000001
		sub    $0x000019,%eax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		mov    _0c24f4_data,%eax
		call   _01a178_func
		mov    _0e3bdc_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		push   $0x000000
		jmp    _04d800_jump

	_04d7ab_jump:
		mov    _0e3bdc_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		push   $0x000000
		sub    $0x000019,%eax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		mov    _0c24f4_data,%eax
		call   _01a178_func
		mov    _0e3bdc_data,%edx
		mov    0x0000ca(%edx),%ax
		add    0x0000ce(%edx),%ax
		movswl %ax,%ebx
		mov    0x0000d0(%edx),%ax
		push   $0x000001

	_04d800_jump:
		add    $0x000023,%eax
		mov    $0x000002,%ecx
		movswl %ax,%edx
		mov    _0c24f8_data,%eax
		call   _01a178_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04d81c_func:
		push   %ebx
		push   %edx
		call   _04d4c4_func
		call   _040714_func
		test   %ax,%ax
		jne    _04d837_jump
		call   _040784_func
		test   %ax,%ax
		je     _04d89a_jump

	_04d837_jump:
		call   _0407f4_func
		test   %ax,%ax
		jne    _04d89a_jump
		call   _040864_func
		test   %ax,%ax
		jne    _04d89a_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _04d880_jump
		mov    _0cebf4_data,%ax
		cmp    _0cebd6_data,%ax
		jle    _04d89a_jump
		mov    _0cebf2_data,%edx
		mov    _0cebc2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _04d89a_jump

	_04d880_jump:
		mov    _0cee96_data,%dl
		test   %dl,%dl
		sete   %al
		mov    %al,_0cee96_data
		mov    $0x000044,%eax
		call   _06fa30_func

	_04d89a_jump:
		call   _04d748_func
		call   _036910_func
		test   %al,%al
		je     _04d8b6_jump
		mov    $0x000001,%dh
		mov    %dh,_0cee96_data
		mov    %dh,_096476_data

	_04d8b6_jump:
		call   _0367ec_func
		test   %al,%al
		je     _04d8cf_jump
		cmpb   $0x000000,_0ceec3_data
		je     _04d8cf_jump
		movb   $0x000001,_096476_data

	_04d8cf_jump:
		call   _04d508_func
		pop    %edx
		pop    %ebx
		ret    

_04d8d8_switch:
		.long   _04d934_case
		.long   _04d9a1_case
		.long   _04d9fb_case
		.long   _04da56_case
		.long   _04db42_case




_04d8ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0000a0,%edx
		mov    $0x000064,%ebx
		mov    $0x000002,%ah
		mov    %dx,_0ca6e0_data
		mov    %bx,_0ca6e2_data
		mov    %ah,_0ca6e4_data
		xor    %dh,%dh
		mov    %ah,_0ca6e6_data
		mov    %dh,_0ca6e5_data
		cmp    $0x000004,%al
		ja     _04dc36_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_04d8d8_switch(,%eax,4)

	_04d934_case:
		mov    $0x000001,%ah
		mov    _095b4b_data,%dl
		mov    %ah,_0cee96_data
		test   %dl,%dl
		je     _04d953_jump
		mov    $_0ca610_data,%edi
		mov    _0c24b4_data,%esi
		jmp    _04d95e_jump

	_04d953_jump:
		mov    $_0ca610_data,%edi
		mov    _0c24b8_data,%esi

	_04d95e_jump:
		push   %edi

	_04d95f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04d977_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04d95f_jump

	_04d977_jump:
		pop    %edi
		mov    $_0ca610_data,%eax
		mov    $_04d81c_func,%edx
		call   _01ec48_func
		mov    $_0ca610_data,%eax
		call   _04d6b8_func
		cmpb   $0x000000,_0cee96_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04d9a1_case:
		mov    $0x000001,%al
		mov    $_033f54_func,%esi
		mov    $_0ca610_data,%edi
		mov    %esi,_0e3bf8_data
		mov    _0c24ac_data,%esi
		mov    %al,_0cee96_data
		push   %edi

	_04d9bf_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04d9d7_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04d9bf_jump

	_04d9d7_jump:
		pop    %edi
		mov    %edi,%eax
		mov    $_04d81c_func,%edx
		call   _01ec48_func
		mov    %edi,%eax
		call   _04d6b8_func
		cmpb   $0x000000,_0cee96_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04d9fb_case:
		mov    $0x000001,%ch
		mov    $_0ca610_data,%edi
		mov    %ch,_0cee96_data
		mov    $_033f54_func,%ecx
		mov    _0c24b0_data,%esi
		mov    %ecx,_0e3bf8_data
		push   %edi

	_04da1a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04da32_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04da1a_jump

	_04da32_jump:
		pop    %edi
		mov    %edi,%eax
		mov    $_04d81c_func,%edx
		call   _01ec48_func
		mov    %edi,%eax
		call   _04d6b8_func
		cmpb   $0x000000,_0cee96_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04da56_case:
		call   _04d1e4_func
		mov    $0x000001,%cl
		mov    $_0c7388_data,%esi
		mov    $_0e38dc_data,%edi
		mov    $0x000001,%edx
		mov    %cl,_0cee96_data
		mov    $0x000300,%ecx
		mov    $_03bc14_func,%ebx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _02423c_func
		mov    _0ccba8_data,%eax
		mov    $_0dd334_data,%esi
		call   _0243ec_func
		call   _03b8d0_func
		mov    _0ccba8_data,%edi
		mov    $_04d81c_func,%edx
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    $0x000300,%ecx
		mov    $_0c7388_data,%edi
		call   _03b880_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_0ca610_data,%edi
		mov    _0c24b0_data,%esi
		mov    %ebx,_0e3bf8_data
		push   %edi

	_04daed_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04db05_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04daed_jump

	_04db05_jump:
		pop    %edi
		mov    %edi,%eax
		mov    $0x000300,%ecx
		call   _01ec48_func
		mov    %edi,%eax
		mov    $_0e38dc_data,%esi
		call   _04d6b8_func
		mov    $_0c7388_data,%edi
		call   _03b8d0_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03b880_func
		jmp    _04dc31_jump

	_04db42_case:
		call   _04d1e4_func
		mov    $0x000001,%bl
		mov    $0x000300,%ecx
		mov    $_0c7388_data,%esi
		mov    $_0e38dc_data,%edi
		mov    $0x000001,%edx
		mov    %bl,_0cee96_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _02423c_func
		mov    _0ccba8_data,%eax
		mov    $_0dd334_data,%esi
		call   _0243ec_func
		call   _03b8d0_func
		xor    %bh,%bh
		mov    _0ccba8_data,%edi
		mov    $_03bc14_func,%edx
		mov    $0x000000,%eax
		mov    $0x003e80,%ecx
		rep stos %eax,%es:(%edi)
		mov    $0x000300,%ecx
		mov    $_0c7388_data,%edi
		call   _03b880_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_0ca610_data,%edi
		mov    $0x000300,%ecx
		mov    _0c24b4_data,%esi
		mov    %edx,_0e3bf8_data
		push   %edi

	_04dbdb_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _04dbf3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _04dbdb_jump

	_04dbf3_jump:
		pop    %edi
		mov    %edi,%eax
		mov    $_04d81c_func,%edx
		call   _01ec48_func
		mov    %edi,%eax
		mov    $_0e38dc_data,%esi
		call   _04d6b8_func
		mov    $_0c7388_data,%edi
		call   _03b8d0_func
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03b880_func
		mov    %bh,_095b99_data

	_04dc31_jump:
		call   _04d244_func

	_04dc36_jump:
		cmpb   $0x000000,_0cee96_data
		sete   %al
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04dc48_func:
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,(%esp)

	_04dc51_jump:
		call   _016df7_func
		call   _016de7_func
		mov    $_0e2fdc_data,%esi
		mov    $0x0000ff,%ecx
		xor    %eax,%eax
		sub    %eax,%ecx
		inc    %ecx
		imul   $0x000003,%ecx,%ecx
		mov    $0x0003c8,%dx
		out    %al,(%dx)
		imul   $0x000003,%eax,%eax
		add    %eax,%esi
		cli    
		mov    $0x0003c9,%dx
		rep outsb %ds:(%esi),(%dx)
		sti    
		call   _03a2a0_func
		call   *(%esp)
		test   %ax,%ax
		je     _04dc51_jump
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_04dc94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0e3c12_data,%di
		mov    _0cc498_data,%ebp
		mov    $0x000140,%eax
		sub    %edi,%eax
		mov    %ax,(%esp)
		call   _01cb68_func
		call   _03bc14_func
		mov    _0cc528_data,%edx
		mov    _0e3c14_data,%eax
		add    $0x00fa00,%edx
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ecx
		mov    _0e3c16_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    _0e3c12_data,%edx
		sar    $0x000010,%edx
		shl    $0x000006,%eax
		neg    %edx
		add    %eax,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    _0e3c12_data,%di
		mov    %ax,0x000004(%esp)
		jmp    _04ddae_jump

	_04dd12_jump:
		mov    0x000004(%esp),%eax
		imul   _0e3c1a_data,%ax
		add    $0x000064,%eax
		cwtl   
		imul   $0x000140,%eax,%esi
		mov    _0cc534_data,%edx
		mov    _0cc4a4_data,%ebx
		add    %edx,%esi
		cmp    %ebx,%eax
		jle    _04dd98_jump
		cmp    _0cc4a0_data,%eax
		jge    _04dd98_jump
		movswl %di,%edx
		neg    %edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%ebx
		jmp    _04dd7a_jump

	_04dd56_jump:
		mov    _0e3c1a_data,%ax
		imul   %ebx,%eax
		add    $0x0000a0,%eax
		movswl %ax,%edx
		cmp    _0cc49c_data,%edx
		jle    _04dd78_jump
		cmp    %ebp,%edx
		jge    _04dd78_jump
		mov    (%ecx),%al
		mov    %al,(%edx,%esi,1)

	_04dd78_jump:
		inc    %ebx
		inc    %ecx

	_04dd7a_jump:
		movswl %di,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movswl %bx,%edx
		cmp    %eax,%edx
		jl     _04dd56_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    %eax,%ecx
		jmp    _04dd9e_jump

	_04dd98_jump:
		add    $0x000140,%ecx

	_04dd9e_jump:
		mov    0x000004(%esp),%esi
		inc    %esi
		mov    %ebp,_0cc498_data
		mov    %si,0x000004(%esp)

	_04ddae_jump:
		mov    _0e3c12_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    _0cc498_data,%ebp
		cmp    %eax,%edx
		jl     _04dd12_jump
		cmpb   $0x000000,_0e3c2b_data
		je     _04ddf8_jump
		mov    _0e3c1a_data,%si
		dec    %esi
		mov    %si,_0e3c1a_data
		cmp    $0x000001,%si
		sete   %bl
		xor    %bh,%bh
		jmp    _04de38_jump

	_04ddf8_jump:
		mov    _0e3c1a_data,%dx
		mov    %di,_0e3c12_data
		cmp    $0x000010,%dx
		jne    _04de11_jump
		call   _03b8a8_func

	_04de11_jump:
		mov    _0e3c1a_data,%bx
		mov    _0cc498_data,%ebp
		inc    %ebx
		mov    _0e3c12_data,%di
		mov    %bx,_0e3c1a_data
		cmp    $0x000020,%bx
		sete   %al
		xor    %ah,%ah
		mov    %eax,%ebx

	_04de38_jump:
		mov    %ebx,%eax
		mov    %ebp,_0cc498_data
		mov    %di,_0e3c12_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04de54_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    $0x000140,%eax
		mov    _0e3c12_data,%dx
		mov    _0e3c16_data,%ebx
		mov    _0cc534_data,%ecx
		sar    $0x000010,%ebx
		sub    %edx,%eax
		mov    _0e3c14_data,%edx
		mov    %eax,(%esp)
		lea    0x000000(,%ebx,4),%eax
		sar    $0x000010,%edx
		add    %ebx,%eax
		add    %edx,%ecx
		shl    $0x000006,%eax
		lea    (%ecx,%eax,1),%ebx
		mov    _0cc528_data,%ecx
		mov    $0x000011,%ebp
		add    $0x00fa00,%ecx
		xor    %esi,%esi
		add    %edx,%ecx
		mov    %esi,0x000004(%esp)
		jmp    _04df09_jump

	_04deb2_jump:
		xor    %esi,%esi
		jmp    _04dee7_jump

	_04deb6_jump:
		mov    (%ebx),%al
		cmp    (%ecx),%al
		je     _04dee4_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0e3c18_data,%eax
		mov    $0x000010,%edi
		sar    $0x000010,%eax
		sub    %eax,%edi
		imul   %edi,%edx
		movzbl (%ecx),%edi
		add    %edi,%edx
		mov    %ebp,%edi
		sub    %eax,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %al,(%ebx)

	_04dee4_jump:
		inc    %esi
		inc    %ebx
		inc    %ecx

	_04dee7_jump:
		xor    %edx,%edx
		mov    _0e3c10_data,%eax
		mov    %si,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _04deb6_jump
		mov    0x000004(%esp),%edi
		xor    %eax,%eax
		inc    %edi
		mov    (%esp),%ax
		mov    %edi,0x000004(%esp)
		add    %eax,%ebx

	_04df09_jump:
		add    %eax,%ecx
		xor    %eax,%eax
		mov    _0e3c12_data,%edx
		mov    0x000004(%esp),%ax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jl     _04deb2_jump
		mov    _0e3c1a_data,%ax
		inc    %eax
		mov    %ax,_0e3c1a_data
		cmp    $0x000010,%ax
		sete   %al
		xor    %ah,%ah
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04df40_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000001,%ebx
		xor    %edx,%edx

	_04df4c_jump:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		mov    _0e2fdc_data(%eax),%cl
		mov    _0e38dc_data(%eax),%ch
		cmp    %ch,%cl
		je     _04df9b_jump
		movzbl %ch,%esi
		xor    %ecx,%ecx
		lea    0x000002(%esi),%edi
		mov    _0e2fdc_data(%eax),%cl
		xor    %ebx,%ebx
		cmp    %edi,%ecx
		jle    _04df83_jump
		mov    %cl,%ch
		sub    $0x000002,%ch
		mov    %ch,_0e2fdc_data(%eax)
		jmp    _04df9b_jump

	_04df83_jump:
		sub    $0x000002,%esi
		cmp    %esi,%ecx
		jge    _04df8f_jump
		add    $0x000002,%cl
		jmp    _04df95_jump

	_04df8f_jump:
		mov    _0e38dc_data(%eax),%cl

	_04df95_jump:
		mov    %cl,_0e2fdc_data(%eax)

	_04df9b_jump:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		mov    _0e38dd_data(%eax),%cl
		cmp    _0e2fdd_data(%eax),%cl
		je     _04dfec_jump
		xor    %ecx,%ecx
		mov    _0e38dd_data(%eax),%cl
		movzbl _0e2fdd_data(%eax),%esi
		lea    0x000002(%ecx),%edi
		xor    %ebx,%ebx
		cmp    %edi,%esi
		jle    _04dfd0_jump
		subb   $0x000002,_0e2fdd_data(%eax)
		jmp    _04dfec_jump

	_04dfd0_jump:
		sub    $0x000002,%ecx
		cmp    %ecx,%esi
		jge    _04dfe0_jump
		addb   $0x000002,_0e2fdd_data(%eax)
		jmp    _04dfec_jump

	_04dfe0_jump:
		mov    _0e38dd_data(%eax),%cl
		mov    %cl,_0e2fdd_data(%eax)

	_04dfec_jump:
		movswl %dx,%eax
		lea    (%eax,%eax,2),%eax
		mov    _0e2fde_data(%eax),%cl
		cmp    _0e38de_data(%eax),%cl
		je     _04e03d_jump
		xor    %ecx,%ecx
		mov    _0e38de_data(%eax),%cl
		movzbl _0e2fde_data(%eax),%esi
		lea    0x000002(%ecx),%edi
		xor    %ebx,%ebx
		cmp    %edi,%esi
		jle    _04e021_jump
		subb   $0x000002,_0e2fde_data(%eax)
		jmp    _04e03d_jump

	_04e021_jump:
		sub    $0x000002,%ecx
		cmp    %ecx,%esi
		jge    _04e031_jump
		addb   $0x000002,_0e2fde_data(%eax)
		jmp    _04e03d_jump

	_04e031_jump:
		mov    _0e38de_data(%eax),%cl
		mov    %cl,_0e2fde_data(%eax)

	_04e03d_jump:
		inc    %edx
		cmp    $0x000100,%dx
		jl     _04df4c_jump
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e054_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %ecx,%esi
		mov    0x000014(%esp),%cl
		cmp    $0x000001,%cl
		jb     _04e06e_jump
		jbe    _04e084_jump
		cmp    $0x000002,%cl
		je     _04e08f_jump
		jmp    _04e0a0_jump

	_04e06e_jump:
		test   %cl,%cl
		jne    _04e0a0_jump
		movw   $0x000020,_0e3c1a_data
		movb   $0x000001,_0e3c2b_data
		jmp    _04e0a0_jump

	_04e084_jump:
		xor    %edi,%edi
		mov    %di,_0e3c1a_data
		jmp    _04e0a0_jump

	_04e08f_jump:
		movw   $0x000001,_0e3c1a_data
		xor    %ch,%ch
		mov    %ch,_0e3c2b_data

	_04e0a0_jump:
		mov    %eax,%ecx
		xor    %ah,%ch
		mov    $0x000004,%edi
		and    $0x000003,%cl
		sub    %ecx,%edi
		add    %edi,%eax
		mov    %ax,_0e3c16_data
		mov    %ebx,%eax
		mov    %dx,_0e3c18_data
		xor    %bh,%ah
		mov    $0x000004,%edx
		and    $0x000003,%al
		sub    %eax,%edx
		mov    %edx,%eax
		add    %ebx,%eax
		add    $0x000002,%esi
		add    $0x000002,%eax
		mov    %si,_0e3c14_data
		mov    %ax,_0e3c12_data
		mov    $0x000140,%eax
		mov    _0e3c12_data,%si
		sub    %esi,%eax
		mov    %eax,(%esp)
		mov    0x000014(%esp),%al
		test   %al,%al
		jne    _04e281_jump
		cmpb   $0x000000,_095b15_data
		jne    _04e1b0_jump
		mov    $0x000001,%edx
		mov    _0ccba4_data,%eax
		call   _0243ec_func
		testb  $0x000004,_0cec71_data
		je     _04e169_jump
		mov    _096456_data,%ecx
		mov    _09644e_data,%ebx
		mov    _096446_data,%edx
		mov    _09643e_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05abb8_func
		mov    _0cc4a0_data,%edx
		mov    _0cc4a4_data,%ecx
		mov    _0cc498_data,%ebx
		mov    _0cc49c_data,%eax
		call   _016157_func

	_04e169_jump:
		call   _03b8d0_func
		mov    _095b50_data,%eax
		sar    $0x000010,%eax
		mov    _096456_data(,%eax,2),%ecx
		mov    _09644e_data(,%eax,2),%ebx
		mov    _096446_data(,%eax,2),%edx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		mov    _09643e_data(,%eax,2),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _05abb8_func
		mov    _0cc534_data,%edi
		call   _014bed_func
		jmp    _04e1dc_jump

	_04e1b0_jump:
		mov    $0x000001,%edx
		mov    _0ccba8_data,%eax
		call   _0243ec_func
		call   _03b8d0_func
		xor    %eax,%eax
		mov    _0cee8f_data,%al
		call   _03c7cc_func
		xor    %eax,%eax
		mov    _095b54_data,%al
		call   _0475dc_func

	_04e1dc_jump:
		cmpw   $0x000001,_0cecd4_data
		jne    _04e1f0_jump
		cmpw   $0x000009,_0cecc0_data
		je     _04e22c_jump

	_04e1f0_jump:
		cmpw   $0x000002,_0cecd4_data
		jne    _04e204_jump
		cmpw   $0x000004,_0cecc0_data
		je     _04e22c_jump

	_04e204_jump:
		cmpw   $0x000004,_0cecd4_data
		jne    _04e218_jump
		cmpw   $0x000009,_0cecc0_data
		je     _04e22c_jump

	_04e218_jump:
		cmpw   $0x000005,_0cecd4_data
		jne    _04e268_jump
		cmpw   $0x000004,_0cecc0_data
		jne    _04e268_jump

	_04e22c_jump:
		xor    %edx,%edx
		mov    _0ceec7_data,%dl
		mov    $_0c7388_data,%edi
		lea    0x000000(,%edx,4),%eax
		mov    $0x000300,%ecx
		sub    %edx,%eax
		mov    _0ccc78_data,%esi
		shl    $0x000008,%eax
		add    $0x002d00,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_04e268_jump:
		call   _02423c_func
		mov    _0cc534_data,%eax
		mov    %eax,_0ccba4_data
		call   _03bc14_func
		jmp    _04e3b5_jump

	_04e281_jump:
		cmp    $0x000001,%al
		jne    _04e3b5_jump
		mov    $0x000003,%esi
		xor    %ecx,%ecx

	_04e290_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		lea    (%ebx,%ebx,2),%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0dd335_data(%ebx),%al
		mov    _0dd334_data(%ebx),%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0dd336_data(%ebx),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		and    $0x0000ff,%eax
		add    $0x000080,%eax
		imul   %esi,%eax
		mov    _0dd334_data(%eax),%dl
		mov    %dl,_0e38dc_data(%ebx)
		mov    _0dd335_data(%eax),%dl
		mov    _0dd336_data(%eax),%al
		mov    %dl,_0e38dd_data(%ebx)
		inc    %ecx
		mov    %al,_0e38de_data(%ebx)
		cmp    $0x000100,%cx
		jb     _04e290_jump
		mov    $0x000300,%ecx
		mov    $_0dd334_data,%esi
		mov    $_0e2fdc_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_04df40_func,%eax
		call   _04dc48_func
		mov    _0e3c14_data,%ebx
		mov    _0cc534_data,%edx
		sar    $0x000010,%ebx
		add    %edx,%ebx
		mov    _0e3c16_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		xor    %edi,%edi
		jmp    _04e3a2_jump

	_04e347_jump:
		xor    %ecx,%ecx
		jmp    _04e389_jump

	_04e34b_jump:
		mov    (%ebx),%al
		xor    %edx,%edx
		mov    %al,%dl
		lea    (%edx,%edx,2),%edx
		xor    %eax,%eax
		movzbl _0dd335_data(%edx),%esi
		mov    _0dd334_data(%edx),%al
		mov    _0dd336_data(%edx),%dl
		add    %esi,%eax
		and    $0x0000ff,%edx
		add    %eax,%edx
		mov    $0x000003,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		inc    %ebx
		add    $0x000080,%eax
		inc    %ecx
		mov    %al,-0x000001(%ebx)

	_04e389_jump:
		xor    %eax,%eax
		mov    _0e3c10_data,%edx
		mov    %cx,%ax
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jl     _04e34b_jump
		xor    %eax,%eax
		mov    (%esp),%ax
		inc    %edi

	_04e3a2_jump:
		add    %eax,%ebx
		xor    %edx,%edx
		mov    _0e3c12_data,%eax
		mov    %di,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _04e347_jump

	_04e3b5_jump:
		mov    _0cc528_data,%eax
		add    $0x00fa00,%eax
		mov    %eax,_0ccba4_data
		call   *_0e3bf8_data
		mov    _0cc534_data,%eax
		mov    0x000014(%esp),%bl
		mov    %eax,_0ccba4_data
		cmp    $0x000001,%bl
		jne    _04e480_jump
		mov    _0cc528_data,%edx
		mov    _0e3c14_data,%eax
		add    $0x00fa00,%edx
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ebx
		mov    _0e3c16_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000006,%eax
		xor    %edi,%edi
		add    %eax,%ebx
		mov    $0x000003,%ebp
		jmp    _04e46f_jump

	_04e418_jump:
		xor    %ecx,%ecx
		jmp    _04e455_jump

	_04e41c_jump:
		mov    (%ebx),%al
		xor    %edx,%edx
		mov    %al,%dl
		lea    (%edx,%edx,2),%edx
		xor    %eax,%eax
		mov    _0dd335_data(%edx),%al
		movzbl _0dd334_data(%edx),%esi
		mov    _0dd336_data(%edx),%dl
		add    %esi,%eax
		and    $0x0000ff,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		inc    %ebx
		add    $0x000080,%eax
		inc    %ecx
		mov    %al,-0x000001(%ebx)

	_04e455_jump:
		xor    %edx,%edx
		mov    _0e3c10_data,%eax
		mov    %cx,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _04e41c_jump
		xor    %eax,%eax
		mov    (%esp),%ax
		inc    %edi
		add    %eax,%ebx

	_04e46f_jump:
		xor    %edx,%edx
		mov    _0e3c12_data,%eax
		mov    %di,%dx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jl     _04e418_jump

	_04e480_jump:
		mov    0x000014(%esp),%bh
		test   %bh,%bh
		jne    _04e543_jump
		xor    %edx,%edx
		mov    _0ceec7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7388_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e38dc_data,%edi
		add    %eax,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0ceec7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7388_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0dd334_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03b880_func
		mov    $_04dc94_func,%eax
		xor    %edx,%edx
		call   _03b948_func
		mov    _0ceec7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7388_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e38dc_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_04e543_jump:
		cmp    $0x000001,%bh
		jne    _04e5f9_jump
		mov    $_04de54_func,%eax
		mov    $0x000003,%esi
		call   _03b948_func
		xor    %ecx,%ecx

	_04e55d_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		lea    (%ebx,%ebx,2),%ebx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0dd335_data(%ebx),%al
		mov    _0dd334_data(%ebx),%dl
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0dd336_data(%ebx),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		and    $0x0000ff,%eax
		add    $0x000080,%eax
		imul   %esi,%eax
		mov    _0dd334_data(%eax),%dl
		mov    %dl,_0e2fdc_data(%ebx)
		mov    _0dd335_data(%eax),%dl
		mov    _0dd336_data(%eax),%al
		mov    %dl,_0e2fdd_data(%ebx)
		inc    %ecx
		mov    %al,_0e2fde_data(%ebx)
		cmp    $0x000100,%cx
		jb     _04e55d_jump
		mov    $0x000300,%ecx
		mov    $_0dd334_data,%esi
		mov    $_0e38dc_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   *_0e3bf8_data
		mov    $_04df40_func,%eax
		call   _04dc48_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_04e5f9_jump:
		cmp    $0x000002,%bh
		jne    _04e786_jump
		xor    %edx,%edx
		mov    _0ceec7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7388_data,%esi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e38dc_data,%edi
		add    %eax,%esi
		xor    %edx,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0ceec7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7388_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0dd334_data,%esi
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $_04dc94_func,%eax
		call   _03b948_func
		cmpb   $0x000001,_095b15_data
		jne    _04e697_jump
		xor    %eax,%eax
		mov    _0cee8f_data,%al
		call   _03c6a0_func
		xor    %eax,%eax
		mov    _095b54_data,%al
		call   _0475dc_func

	_04e697_jump:
		cmpw   $0x000001,_0cecd4_data
		jne    _04e6ab_jump
		cmpw   $0x000009,_0cecc0_data
		je     _04e6e7_jump

	_04e6ab_jump:
		cmpw   $0x000002,_0cecd4_data
		jne    _04e6bf_jump
		cmpw   $0x000004,_0cecc0_data
		je     _04e6e7_jump

	_04e6bf_jump:
		cmpw   $0x000004,_0cecd4_data
		jne    _04e6d3_jump
		cmpw   $0x000009,_0cecc0_data
		je     _04e6e7_jump

	_04e6d3_jump:
		cmpw   $0x000005,_0cecd4_data
		jne    _04e724_jump
		cmpw   $0x000004,_0cecc0_data
		jne    _04e724_jump

	_04e6e7_jump:
		mov    _0ceb86_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0ccc78_data,%esi
		sub    %edx,%eax
		xor    %edx,%edx
		shl    $0x000008,%eax
		mov    _0ceec7_data,%dl
		add    %eax,%esi
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $_0c7388_data,%edi
		shl    $0x000008,%eax
		mov    $0x000300,%ecx
		jmp    _04e747_jump

	_04e724_jump:
		xor    %edx,%edx
		mov    _0ceec7_data,%dl
		lea    0x000000(,%edx,4),%eax
		mov    $_0c7388_data,%edi
		sub    %edx,%eax
		mov    $0x000300,%ecx
		shl    $0x000008,%eax
		mov    $_0e38dc_data,%esi

	_04e747_jump:
		add    %eax,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpb   $0x000000,_0ceec7_data
		je     _04e781_jump
		mov    $0x000300,%ecx
		mov    $_0e35dc_data,%esi
		mov    $_0c7388_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi

	_04e781_jump:
		call   _03b880_func

	_04e786_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_04e790_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    $0x000140,%eax
		mov    _0e3c12_data,%dx
		mov    _0e3c16_data,%esi
		mov    _0cc534_data,%edi
		sar    $0x000010,%esi
		sub    %edx,%eax
		mov    _0e3c14_data,%edx
		mov    %eax,(%esp)
		lea    0x000000(,%esi,4),%eax
		sar    $0x000010,%edx
		add    %eax,%esi
		add    %edx,%edi
		shl    $0x000006,%esi
		lea    (%edi,%esi,1),%eax
		mov    _0cc528_data,%edi
		add    $0x00fa00,%edi
		xor    %ebx,%ebx
		add    %edi,%edx
		mov    %ebx,0x000004(%esp)
		jmp    _04e831_jump

	_04e7e8_jump:
		xor    %ecx,%ecx
		jmp    _04e80e_jump

	_04e7ec_jump:
		xor    %edi,%edi
		mov    _0e3c18_data,%esi
		mov    %bx,%di
		sar    $0x000010,%esi
		cmp    %esi,%edi
		jne    _04e80a_jump
		mov    (%eax),%bl
		mov    (%edx),%bh
		cmp    %bh,%bl
		je     _04e808_jump
		mov    %bh,(%eax)

	_04e808_jump:
		xor    %ebx,%ebx

	_04e80a_jump:
		inc    %ecx
		inc    %eax
		inc    %edx
		inc    %ebx

	_04e80e_jump:
		xor    %esi,%esi
		mov    _0e3c10_data,%edi
		mov    %cx,%si
		sar    $0x000010,%edi
		cmp    %edi,%esi
		jl     _04e7ec_jump
		mov    0x000004(%esp),%edi
		xor    %esi,%esi
		inc    %edi
		mov    (%esp),%si
		mov    %edi,0x000004(%esp)
		add    %esi,%eax

	_04e831_jump:
		add    %esi,%edx
		xor    %esi,%esi
		mov    _0e3c12_data,%edi
		mov    0x000004(%esp),%si
		sar    $0x000010,%edi
		cmp    %edi,%esi
		jl     _04e7e8_jump
		mov    _0e3c1a_data,%ax
		dec    %ax
		mov    %ax,_0e3c1a_data
		sete   %al
		xor    %ah,%ah
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e864_func:
		mov    %ax,_0e3c16_data
		mov    %dx,_0e3c18_data
		mov    %bx,_0e3c12_data
		mov    %cx,_0e3c14_data
		mov    _0cc528_data,%eax
		mov    $0x000010,%edx
		add    $0x00fa00,%eax
		mov    %dx,_0e3c1a_data
		mov    %eax,_0ccba4_data
		call   *_0e3bf8_data
		mov    _0cc534_data,%eax
		mov    %eax,_0ccba4_data
		mov    $_04e790_func,%eax
		jmp    _03b948_func



_04e8c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xffffffff,%ecx
		mov    _0cc1f0_data,%edx
		mov    _0cc1f4_data,%bx
		xor    %eax,%eax
		mov    %ecx,%esi
		test   %bx,%bx
		jle    _04e903_jump

	_04e8e0_jump:
		mov    0x000060(%edx),%di
		cmp    $0x0000cb,%di
		jne    _04e8ef_jump
		mov    %eax,%ecx
		jmp    _04e8f7_jump

	_04e8ef_jump:
		cmp    $0x000070,%di
		jne    _04e8f7_jump
		mov    %eax,%esi

	_04e8f7_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _04e8e0_jump

	_04e903_jump:
		mov    %si,_0e3cbc_data
		mov    %cx,_0e3cc0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04e918_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000000,_0ceead_data
		jne    _04e9db_jump
		mov    _0cecb0_data,%ecx
		mov    _0cecf4_data,%eax
		mov    _0cecae_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _04e95f_jump
		cmp    %ecx,%eax
		jg     _04e95f_jump
		mov    $0x000001,%eax
		jmp    _04e961_jump

	_04e95f_jump:
		xor    %eax,%eax

	_04e961_jump:
		test   %eax,%eax
		je     _04e9a4_jump
		mov    _0cecb2_data,%ecx
		mov    _0cecf6_data,%eax
		mov    _0cecac_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0cece8_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _04e99a_jump
		cmp    %ecx,%eax
		jg     _04e99a_jump
		mov    $0x000001,%eax
		jmp    _04e99c_jump

	_04e99a_jump:
		xor    %eax,%eax

	_04e99c_jump:
		test   %eax,%eax
		je     _04e9a4_jump
		mov    $0x000001,%al
		jmp    _04e9a6_jump

	_04e9a4_jump:
		xor    %al,%al

	_04e9a6_jump:
		mov    %al,_0ceead_data
		test   %al,%al
		je     _04ea0b_jump
		mov    _0ced00_data,%ax
		mov    %ax,_0cecb8_data
		mov    %ax,_0cecaa_data
		mov    _0cecae_data,%ax
		mov    %ax,_0cecac_data
		mov    _0cecb4_data,%ax
		mov    %ax,_0cecb6_data
		jmp    _04ea0b_jump

	_04e9db_jump:
		mov    0x00007f(%edx),%bl
		test   %bl,%bl
		je     _04e9f2_jump
		cmpb   $0x000000,_0cee3f_data
		jne    _04e9f2_jump
		mov    %bl,%cl
		dec    %cl
		mov    %cl,0x00007f(%edx)

	_04e9f2_jump:
		mov    _0cecac_data,%ax
		mov    _0cecea_data,%bx
		cmp    %bx,%ax
		jge    _04ea0b_jump
		mov    %bx,_0cecac_data

	_04ea0b_jump:
		cmpb   $0x000000,_0ceead_data
		je     _04ea20_jump
		cmpb   $0x000000,0x00007f(%edx)
		jne    _04ea20_jump
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04ea20_jump:
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ea28_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		test   %dl,%dl
		jbe    _04ea3a_jump
		cmp    $0x000001,%dl
		je     _04ea65_jump
		jmp    _04ea92_jump

	_04ea3a_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0ceca8_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dh
		mov    %eax,0x000028(%ebx)
		or     $0x000008,%dh
		mov    $0xffffffff,%eax
		mov    %dh,0x000081(%ebx)
		jmp    _04eafb_jump

	_04ea65_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0cecb6_data,%eax
		sar    $0x000010,%eax
		add    $0x000130,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dl
		mov    %eax,0x000028(%ebx)
		and    $0x0000f7,%dl
		mov    $0x000001,%eax
		mov    %dl,0x000081(%ebx)
		jmp    _04eafb_jump

	_04ea92_jump:
		mov    _0ceca8_data,%esi
		mov    _0cecb6_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		lea    0x000140(%esi,%edi,1),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x000068(%ebx),%cl
		add    %ecx,%ebp
		sub    %eax,%ebp
		mov    %ebp,%eax
		test   %ax,%ax
		jle    _04eae7_jump
		add    $0x000130,%edi
		sub    %ecx,%edi
		mov    0x000081(%ebx),%ch
		mov    %edi,0x000028(%ebx)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%ebx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_04eae7_jump:
		sub    %ecx,%esi
		mov    0x000081(%ebx),%cl
		mov    %esi,0x000028(%ebx)
		or     $0x000008,%cl
		mov    %cl,0x000081(%ebx)

	_04eafb_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04eb04_func:
		push   %edx
		mov    _0e3cc4_data,%eax
		sar    $0x000010,%eax
		call   _05bd90_func
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000009,%edx
		sbb    %edx,%eax
		sar    $0x000009,%eax
		mov    _0e3cc0_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    %ax,_0cec94_data
		mov    _0e3cc4_data,%eax
		sar    $0x000010,%eax
		call   _05bd50_func
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000009,%edx
		sbb    %edx,%eax
		sar    $0x000009,%eax
		mov    _0e3cc2_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    _0e3cc6_data,%dx
		add    $0x000004,%edx
		mov    %ax,_0cec8e_data
		mov    %dx,_0e3cc6_data
		cmp    $0x000200,%dx
		jle    _04eb9d_jump
		movw   $0x008300,_0e3cc6_data

	_04eb9d_jump:
		pop    %edx
		ret    

_04eba0_switch:
		.long   _04ebff_case
		.long   _04ec48_case
		.long   _04ec0d_case
		.long   _04ec48_case
		.long   _04ec0d_case
		.long   _04ec48_case
		.long   _04ec30_case




_04ebbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,(%esp)

	_04ebcb_jump:
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%di
		xor    %eax,%eax
		test   %di,%di
		jle    _04ed28_jump
		mov    0x00006c(%esi),%dl
		dec    %dl

	_04ebe8_jump:
		xor    %bl,%bl
		mov    %bl,0x000004(%esp)
		cmp    $0x000006,%dl
		ja     _04ec48_case
		xor    %ebx,%ebx
		mov    %dl,%bl
		jmp    *%cs:_04eba0_switch(,%ebx,4)

	_04ebff_case:
		xor    %bh,%bh
		mov    $0x000001,%dh
		mov    %bh,0x000008(%esp)
		mov    %dh,0x00000c(%esp)
		jmp    _04ec48_case

	_04ec0d_case:
		testb  $0x000008,0x000081(%esi)
		je     _04ec24_jump
		mov    $0x000004,%dh
		mov    $0x000005,%bl
		mov    %dh,0x000008(%esp)
		mov    %bl,0x00000c(%esp)
		jmp    _04ec48_case

	_04ec24_jump:
		movb   $0x000002,0x000008(%esp)
		movb   $0x000003,0x00000c(%esp)
		jmp    _04ec48_case

	_04ec30_case:
		testb  $0x000008,0x000081(%esi)
		je     _04ec3e_jump
		movb   $0x000001,0x000004(%esp)

	_04ec3e_jump:
		movb   $0x000006,0x000008(%esp)
		movb   $0x000007,0x00000c(%esp)

	_04ec48_case:
		cmpw   $0x0000c2,0x000060(%ecx)
		jne    _04ed18_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _04ed18_jump
		mov    0x000008(%esp),%bl
		mov    0x00006c(%ecx),%dh
		cmp    %bl,%dh
		je     _04ec73_jump
		cmp    0x00000c(%esp),%dh
		jne    _04ed18_jump

	_04ec73_jump:
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f304_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    (%esp),%bl
		mov    %eax,0x00002c(%ecx)
		test   %bl,%bl
		je     _04ecca_jump
		mov    0x00000c(%esp),%al
		jmp    _04ecce_jump

	_04ecca_jump:
		mov    0x000008(%esp),%al

	_04ecce_jump:
		xor    %ebx,%ebx
		mov    $0x000001,%edx
		mov    %al,%bl
		mov    %ecx,%eax
		call   _01d374_func
		mov    %ecx,%eax
		mov    0x000004(%esp),%bh
		call   _01db8c_func
		mov    $0x000001,%eax
		test   %bh,%bh
		je     _04ecff_jump
		cmpb   $0x000000,(%esp)
		sete   %dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		jmp    _04ed09_jump

	_04ecff_jump:
		mov    (%esp),%dh
		xor    %ebx,%ebx
		test   %dh,%dh
		setne  %bl

	_04ed09_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		mov    %eax,%ebx
		mov    %ecx,%eax
		call   _05efb0_func
		jmp    _04ed28_jump

	_04ed18_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %di,%ax
		jl     _04ebe8_jump

	_04ed28_jump:
		mov    (%esp),%dl
		add    $0x000002,%dl
		mov    %dl,(%esp)
		cmp    $0x000002,%dl
		jbe    _04ebcb_jump
		mov    %esi,%eax
		call   _076f4c_func
		mov    0x000032(%esi),%edx
		mov    $0x0000dc,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		mov    0x000081(%esi),%bh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04ed70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %esi,%esi
		mov    $0xffffffff,%edi

	_04ed7c_jump:
		xor    %eax,%eax

	_04ed7e_jump:
		movswl %si,%edx
		movswl %ax,%ebx
		shl    $0x000004,%edx
		add    %ebx,%ebx
		add    %edx,%ebx
		mov    _0e3c2e_data(%ebx),%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _04edb1_jump
		imul   $0x000084,%edx,%edx
		mov    _0cc1f0_data,%ecx
		movb   $0x000046,0x00007f(%ecx,%edx,1)
		mov    %di,_0e3c30_data(%ebx)

	_04edb1_jump:
		inc    %eax
		cmp    $0x000008,%ax
		jl     _04ed7e_jump
		inc    %esi
		cmp    $0x000008,%si
		jl     _04ed7c_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_04edc8_switch:
		.long   _04eff3_case
		.long   _04f002_case
		.long   _04f01a_case
		.long   _04f048_case
		.long   _04eff3_case
		.long   _04f002_case
		.long   _04f032_case
		.long   _04f048_case
		.long   _04f05f_case




_04edec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%edi
		cmpb   $0x0000fe,_0e3ccc_data
		jne    _04ef19_jump
		mov    _0e3cbc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		jne    _04ef19_jump
		mov    _0cdabc_data,%dx
		movzbw 0x000068(%edi),%si
		mov    0x000028(%edi),%bx
		xor    %eax,%eax
		add    %ebx,%esi
		mov    _0cdafc_data,%al
		movswl %si,%ebx
		add    %edx,%eax
		lea    0x000008(%ebx),%ecx
		cwtl   
		sub    $0x000008,%ebx
		cmp    %ebx,%eax
		jl     _04ee4b_jump
		cmp    %ecx,%eax
		jg     _04ee4b_jump
		mov    $0x000001,%eax
		jmp    _04ee4d_jump

	_04ee4b_jump:
		xor    %eax,%eax

	_04ee4d_jump:
		test   %eax,%eax
		je     _04f1c4_jump
		mov    _0cc1f0_data,%ebx
		mov    _0cc1f4_data,%ax
		xor    %edx,%edx
		test   %ax,%ax
		jle    _04ef00_jump

	_04ee6c_jump:
		cmpw   $0x0000c1,0x000060(%ebx)
		jne    _04eef0_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _04eef0_jump
		andb   $0x0000f7,0x000081(%ebx)
		xor    %edx,%edx
		movswl %si,%eax
		mov    0x000068(%ebx),%dl
		movb   $0x000000,0x00006c(%ebx)
		sub    %edx,%eax
		mov    %eax,0x000028(%ebx)
		xor    %eax,%eax
		mov    $0x000012,%ecx
		mov    0x000069(%edi),%al
		mov    0x00002c(%edi),%edi
		mov    _0cc4a4_data,%ebp
		add    %eax,%edi
		xor    %eax,%eax
		mov    _0cc4a0_data,%edx
		mov    0x000069(%ebx),%al
		sub    %ebp,%edx
		sub    %eax,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		movl   $0x000001,0x000024(%ebx)
		mov    %eax,%edx
		mov    0x000081(%ebx),%cl
		shl    $0x000002,%eax
		or     $0x000004,%cl
		sub    %edx,%eax
		mov    %cl,0x000081(%ebx)
		sub    %eax,%edi
		mov    %ebx,%eax
		mov    %edi,0x00002c(%ebx)
		call   _01f304_func
		movb   $0x000032,0x00007f(%ebx)
		jmp    _04ef00_jump

	_04eef0_jump:
		inc    %edx
		add    $0x000084,%ebx
		cmp    %ax,%dx
		jl     _04ee6c_jump

	_04ef00_jump:
		mov    $0x0000ff,%ch
		mov    %si,_0e3cbe_data
		mov    %ch,_0e3ccc_data
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_04ef19_jump:
		xor    %dl,%dl
		mov    %dl,0x000010(%esp)

	_04ef1f_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		cmpb   $0x000007,_0e3cb0_data(%edx)
		jne    _04ef4c_jump
		mov    $0x0000ff,%al
		mov    $0xffff8300,%ebx
		mov    %al,_0e3ccc_data
		mov    %bx,_0e3cbe_data
		mov    %al,_0e3cb0_data(%edx)
		jmp    _04f1b1_jump

	_04ef4c_jump:
		xor    %eax,%eax
		mov    0x000028(%edi),%dx
		mov    0x000068(%edi),%al
		add    %eax,%edx
		mov    0x000010(%esp),%ah
		mov    %dx,0x000008(%esp)
		test   %ah,%ah
		jne    _04ef9f_jump
		mov    _0cc498_data,%edx
		sub    _0cc49c_data,%edx
		mov    $0x000009,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000006(%esp),%ebx
		mov    %eax,%edx
		mov    _0e3cbc_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		test   %eax,%eax
		jge    _04ef97_jump
		neg    %eax

	_04ef97_jump:
		cmp    %edx,%eax
		jl     _04f1c4_jump

	_04ef9f_jump:
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0e3ccc_data,%al
		mov    0x000010(%esp),%bl
		lea    0x000000(,%eax,4),%edx
		mov    _0e3cb0_data(%ebx),%cl
		lea    0x000000(,%ebx,4),%eax
		mov    _096a1c_data(%edx),%edx
		inc    %cl
		add    %edx,%eax
		xor    %edx,%edx
		mov    %cl,_0e3cb0_data(%ebx)
		mov    %cl,%dl
		mov    (%eax),%eax
		add    %edx,%edx
		mov    (%edx,%eax,1),%ax
		cmp    $0x000008,%ax
		ja     _04f076_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_04edc8_switch(,%eax,4)

	_04eff3_case:
		xor    %cl,%cl
		mov    %cl,0x000014(%esp)
		mov    %cl,0x00000c(%esp)
		jmp    _04f076_jump

	_04f002_case:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		mov    $0x000002,%bh
		shr    $0x000007,%al
		mov    %bh,0x000014(%esp)
		mov    %al,0x00000c(%esp)
		jmp    _04f076_jump

	_04f01a_case:
		mov    0x000081(%edi),%al
		shl    $0x000004,%al
		mov    $0x000006,%bl
		shr    $0x000007,%al
		mov    %bl,0x000014(%esp)
		mov    %al,0x00000c(%esp)
		jmp    _04f076_jump

	_04f032_case:
		mov    $0x000006,%ch
		mov    0x000081(%edi),%ah
		mov    %ch,0x000014(%esp)
		test   $0x000008,%ah
		sete   0x00000c(%esp)
		jmp    _04f076_jump

	_04f048_case:
		movb   $0x000004,0x000014(%esp)
		mov    0x000081(%edi),%dh
		test   $0x000008,%dh
		sete   %al
		mov    %al,0x00000c(%esp)
		jmp    _04f076_jump

	_04f05f_case:
		mov    $0xffffffff,%esi
		xor    %eax,%eax
		shl    $0x000004,%ebx
		mov    %ax,0x000008(%esp)
		mov    %si,_0e3c30_data(%edx,%ebx,1)

	_04f076_jump:
		cmpw   $0x000000,0x000008(%esp)
		je     _04f1a0_jump
		mov    _0cc1f0_data,%ebx
		mov    _0cc1f4_data,%si
		xor    %ecx,%ecx
		test   %si,%si
		jle    _04f180_jump

	_04f09a_jump:
		cmpw   $0x0000c1,0x000060(%ebx)
		jne    _04f170_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _04f170_jump
		mov    0x000081(%ebx),%dl
		mov    0x000014(%esp),%al
		and    $0x0000f7,%dl
		mov    %al,0x00006c(%ebx)
		mov    0x00000c(%esp),%al
		mov    %dl,0x000081(%ebx)
		and    $0x000001,%al
		mov    %dl,%dh
		shl    $0x000003,%al
		movzbl 0x000010(%esp),%ebp
		or     %al,%dh
		xor    %eax,%eax
		mov    %dh,0x000081(%ebx)
		mov    %ebp,%edx
		mov    _0e3cb0_data(%ebp),%al
		shl    $0x000004,%edx
		add    %eax,%eax
		add    %edx,%eax
		mov    %cx,_0e3c30_data(%eax)
		xor    %eax,%eax
		mov    0x000068(%ebx),%al
		mov    %eax,0x000004(%esp)
		mov    0x000006(%esp),%eax
		mov    0x000004(%esp),%edx
		sar    $0x000010,%eax
		movb   $0x000000,0x00006b(%ebx)
		sub    %edx,%eax
		mov    %eax,0x000028(%ebx)
		xor    %eax,%eax
		mov    0x00002c(%edi),%edx
		mov    0x000069(%edi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%ebx),%dl
		sub    %edx,%eax
		mov    _0cc4a0_data,%edx
		mov    %eax,0x000004(%esp)
		sub    _0cc4a4_data,%edx
		movl   $0x000012,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		sub    $0x000006,%ebp
		imul   %ebp,%eax
		mov    0x000004(%esp),%edx
		add    %eax,%edx
		mov    0x000081(%ebx),%al
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%al
		mov    %al,0x000081(%ebx)
		mov    %ebx,%eax
		mov    %edx,0x00002c(%ebx)
		call   _01f304_func
		jmp    _04f180_jump

	_04f170_jump:
		inc    %ecx
		add    $0x000084,%ebx
		cmp    %si,%cx
		jl     _04f09a_jump

	_04f180_jump:
		cmp    %si,%cx
		jl     _04f1a0_jump
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		xor    %eax,%eax
		mov    _0e3cb0_data(%edx),%al
		shl    $0x000004,%edx
		movw   $0x00ffff,_0e3c30_data(%edx,%eax,2)

	_04f1a0_jump:
		xor    %eax,%eax
		mov    0x000028(%edi),%dx
		mov    0x000068(%edi),%al
		add    %edx,%eax
		mov    %ax,_0e3cbe_data

	_04f1b1_jump:
		mov    0x000010(%esp),%ah
		inc    %ah
		mov    %ah,0x000010(%esp)
		cmp    $0x000008,%ah
		jb     _04ef1f_jump

	_04f1c4_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_04f1d0_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		movzbl %dl,%esi
		mov    %esi,%ebx
		xor    %edx,%edx
		call   _01d374_func
		mov    0x00000c(%ecx),%eax
		lea    0x000000(,%esi,8),%edx
		movb   $0x000000,0x00006b(%ecx)
		mov    (%eax),%esi
		mov    0x000002(%edx,%esi,1),%dl
		mov    %dl,0x00006a(%ecx)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_04f1fc_func:
		test   %dl,%dl
		je     _04f208_jump
		movw   $0x0000d5,0x000060(%eax)
		jmp    _04f20e_jump

	_04f208_jump:
		movw   $0x000062,0x000060(%eax)

	_04f20e_jump:
		xor    %edx,%edx
		mov    0x000060(%eax),%dx
		mov    _0930d6_data(,%edx,2),%dx
		mov    %dx,0x00005c(%eax)
		ret    

_04f224_switch:
		.long   _04f3af_case
		.long   _04f3b5_case
		.long   _04f3c6_case
		.long   _04f365_case
		.long   _04f365_case
		.long   _04f61d_case
		.long   _04f365_case
		.long   _04f699_case
		.long   _04f766_case
		.long   _04f365_case
		.long   _04f365_case
		.long   _04f365_case
		.long   _04f7dd_case
		.long   _04f8d5_case
		.long   _04f921_case
		.long   _04f9dd_case
		.long   _04fa24_case
		.long   _04f365_case
		.long   _04fb31_case
		.long   _04fcf7_case
		.long   _04f365_case
		.long   _04fd29_case
		.long   _04fdcc_case
		.long   _04fe98_case
		.long   _050005_case
		.long   _04fe91_case
		.long   _04faff_case
		.long   _0500cf_case
		.long   _050154_case
		.long   _0502ea_case
		.long   _04fe6d_case
		.long   _050088_case
		.long   _04fc31_case
		.long   _04fc31_case
		.long   _04fb73_case
		.long   _04fbbb_case
		.long   _04f962_case
		.long   _05003e_case
		.long   _04f855_case
		.long   _04fd5b_case
		.long   _04f529_case
		.long   _04f641_case
		.long   _04f446_case
		.long   _04fc31_case
		.long   _04f481_case
		.long   _04fe98_case
		.long   _04f3fb_case

_04f2e0_switch:
		.long   _04f49b_case
		.long   _04f49b_case
		.long   _04f49b_case
		.long   _04f49b_case
		.long   _04f49b_case
		.long   _04f4f7_case

_04f2f8_switch:
		.long   _04fbe4_case
		.long   _04fbfc_case
		.long   _04fbe4_case
		.long   _04fbd1_case
		.long   _04fbe4_case




_04f30c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    _0e3cbe_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cc1f0_data,%edi
		add    %edx,%eax
		mov    _0e3cba_data,%edx
		shl    $0x000002,%eax
		sar    $0x000010,%edx
		lea    (%edi,%eax,1),%ebp
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %eax,%edi
		mov    _0e3cc4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		jne    _050340_jump
		mov    %esi,%eax
		add    $0x000081,%eax
		mov    %eax,(%esp)

	_04f365_case:
		cmpb   $0x000000,_0ceeb1_data
		je     _050340_jump
		xor    %eax,%eax
		mov    _0ceeb3_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0ceeb4_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096aec_data(%edx),%edx
		mov    %al,_0ceeb4_data
		mov    (%edx,%ebx,1),%al
		mov    %al,0x000004(%esp)
		cmp    $0x00002e,%al
		ja     _04f365_case
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		jmp    *%cs:_04f224_switch(,%eax,4)

	_04f3af_case:
		incb   _0ceeb3_data

	_04f3b5_case:
		xor    %ch,%ch
		mov    $0x000001,%al
		mov    %ch,_0ceeb4_data
		mov    %al,_0ceeb1_data
		jmp    _04f365_case

	_04f3c6_case:
		mov    _0ceeae_data,%al
		mov    %al,_0ceeb3_data
		mov    _0ceeac_data,%al
		mov    %al,_0ceeb4_data
		cmp    $0x0000ff,%al
		jne    _04f3e8_jump
		mov    %al,%dh
		inc    %dh
		mov    %dh,_0ceeb4_data

	_04f3e8_jump:
		movb   $0x000001,_0ceeb1_data
		movb   $0x0000ff,_0ceeae_data
		jmp    _04f365_case

	_04f3fb_case:
		mov    $0xffff8300,%edx
		mov    $0x000007,%ebx
		mov    $_0cda94_data,%eax
		mov    %dx,_0ceca6_data
		mov    $0x000003,%edx
		call   _01d374_func
		mov    $0x000001,%dh
		mov    $_0cda94_data,%eax
		mov    %dh,_0ceeb8_data
		mov    $0x000001,%edx
		xor    %bl,%bl
		call   _01d224_func
		sub    $0x000003,%eax
		mov    %bl,_0ceeb1_data
		mov    %ax,0x000048(%esi)
		jmp    _04f365_case

	_04f446_case:
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    _0cdabc_data,%ax
		xor    %edx,%edx
		mov    %ax,_0ceca6_data
		mov    %esi,%eax
		call   _05efb0_func
		mov    $0x000001,%dh
		movw   $0x000000,0x000048(%esi)
		mov    %dh,_0ceeb1_data
		jmp    _04f365_case

	_04f481_case:
		mov    0x00006c(%edi),%al
		sub    $0x000025,%al
		cmp    $0x000005,%al
		ja     _04f51d_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_04f2e0_switch(,%eax,4)

	_04f49b_case:
		mov    $0x000010,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x00002b,%edx
		mov    %ebp,%eax
		call   _04f1d0_func
		mov    0x00006c(%edi),%al
		xor    %edx,%edx
		inc    %al
		mov    %al,%dl
		mov    %edi,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%edi)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%edi)
		xor    %ah,%ah
		movb   $0x000000,0x00006b(%edi)
		mov    %ah,_0ceeb1_data
		movb   $0x0000ff,_0ceeb2_data
		jmp    _04f365_case

	_04f4f7_case:
		mov    $0x000006,%cl
		mov    0x000081(%ebp),%bh
		mov    $0x000001,%al
		and    $0x0000fb,%bh
		mov    %cl,_0ceeb3_data
		mov    %al,_0ceeb1_data
		xor    %ch,%ch
		mov    %bh,0x000081(%ebp)
		mov    %ch,_0ceeb4_data

	_04f51d_jump:
		movb   $0x0000ff,_0ceeb2_data
		jmp    _04f365_case

	_04f529_case:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x00002c(%esi),%ax
		mov    %ax,_0cec8e_data
		mov    _0cdb20_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		je     _04f602_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		mov    0x00000c(%esi),%eax
		mov    (%eax),%eax
		mov    0x000046(%esi),%edx
		mov    0x00000d(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %ax,_0cec94_data
		mov    _0cdb20_data,%eax
		mov    0x000040(%eax),%cx
		test   %cx,%cx
		jge    _04f5aa_jump
		mov    _0cec94_data,%cx
		mov    0x000028(%esi),%ax
		add    %eax,%ecx
		mov    %cx,_0cec94_data
		jmp    _04f5bf_jump

	_04f5aa_jump:
		jle    _04f5bf_jump
		mov    _0cec94_data,%bx
		mov    0x000028(%esi),%ax
		sub    %ebx,%eax
		mov    %ax,_0cec94_data

	_04f5bf_jump:
		mov    $0x0000ff,%cl
		mov    $0x000001,%al
		mov    $0x000001,%edx
		mov    %cl,_0ceea8_data
		mov    %cl,_0ceea9_data
		mov    %al,_0ceeaf_data
		mov    $0x0000ff,%ecx
		mov    %esi,%eax
		mov    %ecx,%ebx
		call   _018690_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		xor    %ah,%ah
		mov    %ah,_0ceeb1_data
		jmp    _04f365_case

	_04f602_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		xor    %ah,%ah
		mov    %ah,_0ceeb1_data
		jmp    _04f365_case

	_04f61d_case:
		mov    %esi,%eax
		call   _076124_func
		movw   $0x000001,_0cecc4_data
		orb    $0x000020,_0cec78_data
		xor    %ah,%ah
		mov    %ah,_0ceeb1_data
		jmp    _04f365_case

	_04f641_case:
		mov    %esi,%eax
		mov    0x000081(%esi),%dl
		call   _01db14_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _04f68d_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		xor    %bh,%bh
		mov    %bh,_0ceeb1_data
		jmp    _04f365_case

	_04f68d_jump:
		movb   $0x000001,_0ceeb1_data
		jmp    _04f365_case

	_04f699_case:
		mov    $0x000001,%edx
		xor    %ah,%ah
		mov    $0x00002c,%ebx
		mov    %ah,_0e3cca_data
		mov    %ah,_0e3ccb_data
		mov    %esi,%eax
		movb   $0x000003,0x00007e(%esi)
		call   _04f1fc_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _04ea28_func
		mov    0x000081(%esi),%dh
		mov    0x000028(%esi),%eax
		and    $0x0000f7,%dh
		sub    $0x000090,%eax
		mov    %dh,0x000081(%esi)
		mov    %eax,0x000028(%esi)
		mov    _0cec60_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%dl
		mov    $0x0000ff,%ecx
		sub    %edx,%eax
		mov    $0x000001,%bl
		sub    $0x000020,%eax
		mov    %bl,_0ceeaf_data
		mov    %eax,0x00002c(%esi)
		xor    %eax,%eax
		mov    _0cecaa_data,%dx
		mov    0x000068(%esi),%al
		mov    $0x0000ff,%bh
		sub    %eax,%edx
		mov    %bh,_0ceea8_data
		mov    %edx,%eax
		mov    %bh,_0ceea9_data
		add    $0x000032,%eax
		mov    %ecx,%ebx
		mov    %ax,_0cec94_data
		mov    0x00002c(%esi),%ax
		mov    $0x000001,%edx
		mov    %ax,_0cec8e_data
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _05efb0_func
		mov    %ch,_0ceeb1_data
		jmp    _04f365_case

	_04f766_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000004,%ecx
		call   _04f1fc_func
		mov    $0x000001,%edx
		mov    0x000028(%esi),%ax
		mov    %cx,_0e3cc6_data
		mov    %ax,_0e3cc2_data
		mov    0x00002c(%esi),%ax
		mov    $0x0000ff,%ecx
		sub    $0x00003c,%eax
		mov    %ecx,%ebx
		mov    %ax,_0e3cc4_data
		call   _04eb04_func
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%bh
		mov    $0x0000ff,%cl
		mov    %esi,%eax
		mov    %bh,_0ceeaf_data
		mov    $0x000001,%ebx
		mov    %cl,_0ceea8_data
		mov    %ebx,%edx
		mov    %cl,_0ceea9_data
		call   _05efb0_func
		xor    %al,%al
		mov    %al,_0ceeb1_data
		jmp    _04f365_case

	_04f7dd_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _04f1fc_func
		mov    0x000028(%esi),%ax
		add    $0x00006e,%eax
		mov    %ax,_0cec94_data
		xor    %eax,%eax
		mov    _0cec62_data,%dx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    $0x0000ff,%ecx
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x00007c,%eax
		mov    $0x0000ff,%dl
		mov    %ax,_0cec8e_data
		mov    %dl,_0ceea8_data
		mov    %dl,_0ceea9_data
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ah,_0ceeaf_data
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		xor    %bl,%bl
		mov    %bl,_0ceeb1_data
		jmp    _04f365_case

	_04f855_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _04f1fc_func
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ecx,%ecx
		call   _01d374_func
		mov    $0x0000ff,%bl
		xor    %edx,%edx
		mov    _0cec62_data,%ax
		mov    0x000069(%esi),%dl
		mov    %bl,_0ceea8_data
		sub    %edx,%eax
		xor    %bh,%bh
		mov    $0x000001,%dh
		mov    %ax,_0cec8e_data
		mov    %bh,_0ceea9_data
		mov    $0x0000ff,%ebx
		mov    %dh,_0ceeaf_data
		mov    0x000028(%esi),%ax
		mov    $0x000001,%edx
		mov    %ax,_0cec94_data
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %cl,%cl
		call   _05efb0_func
		mov    %cl,_0ceeb1_data
		jmp    _04f365_case

	_04f8d5_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x00000a,%ebx
		call   _04f1fc_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ebp)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ebp)
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%edi)
		mov    $0x000001,%ebx
		mov    0x00002c(%esi),%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%edi)
		mov    %esi,%eax
		call   _05efb0_func
		xor    %al,%al
		mov    %al,_0ceeb1_data
		jmp    _04f365_case

	_04f921_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000025,%ebx
		call   _04f1fc_func
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%edi),%cl
		or     $0x000004,%cl
		mov    %edi,%eax
		mov    %cl,0x000081(%edi)
		call   _01f304_func
		mov    %edi,%eax
		mov    $0x000001,%ch
		call   _01db8c_func
		mov    %ch,_0ceeb1_data
		jmp    _04f365_case

	_04f962_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _04f1fc_func
		testb  $0x000004,0x000081(%edi)
		jne    _04f97e_jump
		mov    %edi,%eax
		call   _01f304_func

	_04f97e_jump:
		orb    $0x000004,0x000081(%edi)
		movb   $0x000006,0x00007e(%esi)
		testb  $0x000004,0x000081(%ebp)
		jne    _04f999_jump
		mov    %ebp,%eax
		call   _01f304_func

	_04f999_jump:
		mov    0x000081(%ebp),%bh
		mov    %esi,%eax
		or     $0x000004,%bh
		xor    %edx,%edx
		mov    %bh,0x000081(%ebp)
		mov    $0x000013,%ebx
		call   _01d374_func
		mov    $0x000024,%edx
		mov    %ebp,%eax
		mov    $0x000001,%ebx
		call   _04f1d0_func
		mov    %esi,%eax
		xor    %edx,%edx
		xor    %cl,%cl
		call   _05efb0_func
		mov    %cl,_0ceeb1_data
		jmp    _04f365_case

	_04f9dd_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _04f1fc_func
		mov    $0x000001,%eax
		call   _0690e0_func
		test   %ax,%ax
		je     _04f9fb_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		jmp    _04fa02_jump

	_04f9fb_jump:
		mov    $0x000009,%ebx
		mov    %esi,%eax

	_04fa02_jump:
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		xor    %bh,%bh
		mov    %bh,_0ceeb1_data
		jmp    _04f365_case

	_04fa24_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000001,%ebx
		call   _04f1fc_func
		mov    _0e3cca_data,%ch
		mov    %ebx,%edx
		inc    %ch
		mov    %esi,%eax
		mov    %ch,_0e3cca_data
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		mov    0x00002c(%esi),%ax
		mov    %ax,_0cec8e_data
		mov    0x00000c(%esi),%eax
		mov    0x000004(%eax),%eax
		mov    0x000046(%esi),%edx
		mov    0x000005(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000018,%eax
		imul   %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %ax,_0cec94_data
		testb  $0x000008,0x000081(%esi)
		je     _04faa8_jump
		mov    _0cec94_data,%bx
		mov    0x000028(%esi),%ax
		add    %eax,%ebx
		mov    %bx,_0cec94_data
		jmp    _04fabb_jump

	_04faa8_jump:
		mov    _0cec94_data,%dx
		mov    0x000028(%esi),%ax
		sub    %edx,%eax
		mov    %ax,_0cec94_data

	_04fabb_jump:
		mov    $0x000001,%ah
		mov    $0x0000ff,%dl
		mov    $0x0000ff,%ecx
		mov    %ah,_0ceeaf_data
		mov    %dl,_0ceea8_data
		mov    %dl,_0ceea9_data
		mov    %ecx,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		xor    %bl,%bl
		mov    %bl,_0ceeb1_data
		jmp    _04f365_case

	_04faff_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000005,%ebx
		call   _04f1fc_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		xor    %ah,%ah
		mov    %ah,_0ceeb1_data
		jmp    _04f365_case

	_04fb31_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000005,%bl
		call   _04f1fc_func
		mov    %bl,_0ceeb2_data
		mov    %esi,%eax
		mov    $0x000004,%bh
		xor    %edx,%edx
		mov    %bh,_0e3cc9_data
		mov    $0x000007,%ebx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		xor    %cl,%cl
		call   _05efb0_func
		mov    %cl,_0ceeb1_data
		jmp    _04f365_case

	_04fb73_case:
		mov    0x00006c(%esi),%al
		cmp    $0x000015,%al
		jb     _04fb8f_jump
		jbe    _04fba8_jump
		cmp    $0x00001f,%al
		jb     _04fbfc_case
		jbe    _04fba8_jump
		cmp    $0x000022,%al
		je     _04fb95_jump
		jmp    _04fbfc_case

	_04fb8f_jump:
		cmp    $0x000013,%al
		je     _04fba8_jump
		jmp    _04fbfc_case

	_04fb95_jump:
		mov    $0x00001f,%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    $0x000021,%edx
		jmp    _04fbf5_jump

	_04fba8_jump:
		mov    $0x000018,%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    $0x000019,%edx
		jmp    _04fbf5_jump

	_04fbbb_case:
		mov    0x00006c(%esi),%al
		sub    $0x000013,%al
		cmp    $0x000004,%al
		ja     _04fbfc_case
		and    $0x0000ff,%eax
		jmp    *%cs:_04f2f8_switch(,%eax,4)

	_04fbd1_case:
		mov    $0x000017,%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    $0x00001a,%edx
		jmp    _04fbf5_jump

	_04fbe4_case:
		mov    $0x00001e,%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    $0x000020,%edx

	_04fbf5_jump:
		mov    %ebp,%eax
		call   _04f1d0_func

	_04fbfc_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _04f1fc_func
		mov    0x000081(%ebp),%ch
		mov    %esi,%eax
		or     $0x000004,%ch
		xor    %edx,%edx
		mov    %ch,0x000081(%ebp)
		call   _05efb0_func
		xor    %al,%al
		mov    %al,_0ceeb1_data
		jmp    _04f365_case

	_04fc31_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _04f1fc_func
		movb   $0x000008,_0ceeb2_data
		xor    %eax,%eax
		mov    _0ceeb3_data,%al
		lea    0x000000(,%eax,4),%ebx
		xor    %edx,%edx
		mov    _0ceeb4_data,%al
		mov    %al,%dl
		inc    %al
		mov    _096aec_data(%ebx),%ebx
		mov    %al,_0ceeb4_data
		mov    (%edx,%ebx,1),%al
		mov    0x000004(%esp),%dl
		mov    %al,_0e3cc9_data
		cmp    $0x000021,%dl
		jb     _04fc82_jump
		jbe    _04fc89_jump
		cmp    $0x00002b,%dl
		je     _04fcb3_jump
		jmp    _04fccd_jump

	_04fc82_jump:
		cmp    $0x000020,%dl
		je     _04fc9e_jump
		jmp    _04fccd_jump

	_04fc89_jump:
		mov    $0x000016,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000012,%edx
		jmp    _04fcc6_jump

	_04fc9e_jump:
		mov    $0x000015,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000011,%edx
		jmp    _04fcc6_jump

	_04fcb3_jump:
		mov    $0x000022,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000023,%edx

	_04fcc6_jump:
		mov    %ebp,%eax
		call   _04f1d0_func

	_04fccd_jump:
		mov    $0x000001,%ebx
		mov    0x000081(%ebp),%cl
		mov    %esi,%eax
		or     $0x000004,%cl
		xor    %edx,%edx
		mov    %cl,0x000081(%ebp)
		xor    %ch,%ch
		call   _05efb0_func
		mov    %ch,_0ceeb1_data
		jmp    _04f365_case

	_04fcf7_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000008,%ebx
		call   _04f1fc_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		xor    %dh,%dh
		mov    %dh,_0ceeb1_data
		jmp    _04f365_case

	_04fd29_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000b,%ebx
		call   _04f1fc_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		xor    %dl,%dl
		mov    %dl,_0ceeb1_data
		jmp    _04f365_case

	_04fd5b_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _04f1fc_func
		mov    0x000081(%edi),%dl
		mov    $0x000001,%ebx
		or     $0x000004,%dl
		mov    %edi,%eax
		mov    %dl,0x000081(%edi)
		call   _01f304_func
		mov    $0x000002,%edx
		movb   $0x000003,0x00007e(%esi)
		mov    %edi,%eax
		movw   $0x00fffa,0x000042(%edi)
		call   _01d374_func
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%edi),%al
		movsbw (%edx,%eax,8),%ax
		mov    $0x00000e,%ebx
		mov    %ax,0x000040(%edi)
		neg    %eax
		xor    %edx,%edx
		mov    %ax,0x000040(%edi)
		mov    %esi,%eax
		call   _01d374_func
		addl   $0x000064,0x000028(%esi)
		jmp    _04fde3_jump

	_04fdcc_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000d,%ebx
		call   _04f1fc_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func

	_04fde3_jump:
		mov    0x000028(%esi),%ax
		mov    %ax,_0cec94_data
		xor    %eax,%eax
		mov    _0cecb6_data,%dx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    $0x0000ff,%ecx
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x000010,%eax
		mov    $0x000001,%edx
		mov    %ax,_0cec8e_data
		mov    %esi,%eax
		call   _018690_func
		cmpb   $0x000016,0x000004(%esp)
		jne    _04fe52_jump
		mov    $0x000020,%bh
		mov    $0x000002,%ch
		mov    0x000081(%esi),%al
		mov    %bh,_0ceea8_data
		mov    %bh,_0ceea9_data
		mov    %ch,_0ceeaf_data
		test   $0x000008,%al
		je     _04fe4a_jump
		addw   $0x000050,_0cec94_data
		jmp    _04fe52_jump

	_04fe4a_jump:
		subw   $0x000050,_0cec94_data

	_04fe52_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		xor    %ah,%ah
		mov    %ah,_0ceeb1_data
		jmp    _04f365_case

	_04fe6d_case:
		mov    0x000081(%esi),%dh
		mov    (%esp),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)
		jmp    _04fe98_case

	_04fe91_case:
		orb    $0x000008,0x000081(%esi)

	_04fe98_case:
		mov    $0x00003c,%ecx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    %ecx,_0e3cb8_data
		call   _04f1fc_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		mov    %esi,%eax
		mov    0x000004(%esp),%bl
		call   _04ea28_func
		cmp    $0x00002d,%bl
		jne    _04fef8_jump
		mov    _0cdabc_data,%bx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0cdafc_data,%dl
		mov    0x000068(%esi),%al
		add    %ebx,%edx
		sub    %eax,%edx
		mov    %dx,_0cec94_data
		mov    _0cec92_data,%eax
		sar    $0x000010,%eax
		jmp    _04ff7f_jump

	_04fef8_jump:
		cmp    $0x000019,%bl
		jne    _04ff2e_jump
		mov    _0e3cba_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%edx
		mov    0x000028(%edx,%eax,1),%ax
		add    $0x000064,%eax
		mov    %ax,_0cec94_data
		mov    _0cec92_data,%eax
		sar    $0x000010,%eax
		add    $0x000050,%eax
		jmp    _04ff7f_jump

	_04ff2e_jump:
		testb  $0x000008,0x000081(%esi)
		je     _04ff53_jump
		mov    0x000028(%esi),%ax
		add    $0x000030,%eax
		mov    %ax,_0cec94_data
		mov    _0cec92_data,%eax
		sar    $0x000010,%eax
		add    $0x000050,%eax
		jmp    _04ff7f_jump

	_04ff53_jump:
		mov    0x000028(%esi),%ax
		sub    $0x0000a0,%eax
		mov    %ax,_0cec94_data
		cmp    $0x000019,%bl
		jne    _04ff74_jump
		mov    %eax,%edx
		add    $0x000070,%edx
		mov    %dx,_0cec94_data

	_04ff74_jump:
		mov    _0cec92_data,%eax
		sar    $0x000010,%eax
		sub    $0x000050,%eax

	_04ff7f_jump:
		mov    %eax,0x000028(%esi)
		mov    _0cecb4_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		sub    $0x000010,%edx
		mov    $0x0000ff,%ecx
		mov    %edx,0x00002c(%esi)
		mov    %ecx,%ebx
		mov    0x00002c(%esi),%ax
		mov    $0x000001,%dl
		mov    %ax,_0cec8e_data
		mov    %dl,_0ceeaf_data
		mov    $0x000018,%al
		mov    $0x000001,%edx
		mov    %al,_0ceea8_data
		mov    %al,_0ceea9_data
		mov    %esi,%eax
		call   _018690_func
		xor    %edx,%edx
		mov    _0cec62_data,%ax
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    $0x00000e,%ebx
		mov    %ax,_0cec8e_data
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		xor    %dh,%dh
		mov    %dh,_0ceeb1_data
		jmp    _04f365_case

	_050005_case:
		mov    %esi,%eax
		call   _01db14_func
		xor    %edx,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _04f1fc_func
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		xor    %dh,%dh
		mov    %dh,_0ceeb1_data
		jmp    _04f365_case

	_05003e_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _04f1fc_func
		andb   $0x0000fb,0x000081(%ebp)
		mov    0x000081(%edi),%al
		mov    $0x000006,%ebx
		and    $0x0000fb,%al
		xor    %edx,%edx
		mov    %al,0x000081(%edi)
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		xor    %ah,%ah
		mov    %ah,_0ceeb1_data
		jmp    _04f365_case

	_050088_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _04f1fc_func
		subl   $0x000064,0x000028(%esi)
		mov    0x000081(%edi),%al
		xor    %edx,%edx
		and    $0x0000fb,%al
		mov    $0x000014,%ebx
		mov    %al,0x000081(%edi)
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		xor    %ah,%ah
		mov    %ah,_0ceeb1_data
		jmp    _04f365_case

	_0500cf_case:
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x00000f,%ebx
		call   _04f1fc_func
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000001,%cl
		call   _01d374_func
		mov    $0x0000ff,%bl
		mov    _0cecb6_data,%dx
		mov    0x000028(%esi),%ax
		mov    %cl,_0ceeaf_data
		mov    %ax,_0cec94_data
		xor    %eax,%eax
		mov    $0x0000ff,%ecx
		mov    0x000069(%esi),%al
		mov    %bl,_0ceea8_data
		sub    %eax,%edx
		mov    %bl,_0ceea9_data
		mov    %edx,%eax
		mov    %ecx,%ebx
		sub    $0x000010,%eax
		mov    $0x000001,%edx
		mov    %ax,_0cec8e_data
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		xor    %ch,%ch
		call   _05efb0_func
		mov    $0x0000ff,%al
		mov    %ch,_0ceeb1_data
		mov    %al,_0e3ccc_data
		jmp    _04f365_case

	_050154_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _04f1fc_func
		mov    0x000081(%esi),%bh
		xor    %edx,%edx
		test   $0x000008,%bh
		sete   %dl
		mov    %esi,%eax
		call   _04ea28_func
		testb  $0x000008,0x000081(%esi)
		je     _0501b3_jump
		mov    $0x000090,%eax
		mov    _0cc4a4_data,%edx
		mov    0x000028(%esi),%ebx
		sub    %edx,%eax
		mov    _0cecb8_data,%dx
		sub    %eax,%ebx
		xor    %eax,%eax
		add    $0x000140,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		add    $0x000090,%edx
		mov    %ebx,0x000028(%esi)
		mov    %dx,_0cec94_data
		jmp    _0501db_jump

	_0501b3_jump:
		xor    %eax,%eax
		mov    _0cecaa_data,%dx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000028(%esi),%ecx
		mov    %edx,%eax
		add    $0x000088,%ecx
		sub    $0x000090,%eax
		mov    %ecx,0x000028(%esi)
		mov    %ax,_0cec94_data

	_0501db_jump:
		xor    %eax,%eax
		mov    _0ceeb3_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0ceeb4_data,%al
		mov    _096aec_data(%edx),%edx
		mov    %al,%bl
		inc    %al
		mov    (%edx,%ebx,1),%dl
		mov    %al,_0ceeb4_data
		mov    _0cec60_data,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000069(%esi),%bl
		sub    %ebx,%eax
		and    $0x0000ff,%edx
		sub    $0x000020,%eax
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		mov    $0x00000f,%ebx
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %ax,_0cec8e_data
		mov    %esi,%eax
		mov    $0x0000ff,%ch
		call   _01d374_func
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ch,_0ceea8_data
		mov    %ch,_0ceea9_data
		mov    $0x0000ff,%ecx
		mov    %ah,_0ceeaf_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		xor    %eax,%eax
		mov    $0x000029,%dl
		mov    _0ceeb3_data,%al
		mov    %dl,_0e3cc8_data
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0ceeb4_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096aec_data(%edx),%edx
		mov    %al,_0ceeb4_data
		mov    (%edx,%ebx,1),%al
		mov    %al,_0e3ccc_data
		cmp    $0x0000ff,%al
		jne    _0502bd_jump

	_0502a6_jump:
		mov    $0x000006,%eax
		call   _0690e0_func
		mov    %al,_0e3ccc_data
		cmp    $0x000001,%al
		je     _0502a6_jump
		cmp    $0x000006,%al
		je     _0502a6_jump

	_0502bd_jump:
		mov    $0x0000ff,%bl
		xor    %edx,%edx

	_0502c1_jump:
		movswl %dx,%eax
		inc    %edx
		mov    %bl,_0e3cb0_data(%eax)
		cmp    $0x000008,%dx
		jl     _0502c1_jump
		mov    $0xffff8300,%edx
		xor    %bh,%bh
		mov    %dx,_0e3cbe_data
		mov    %bh,_0ceeb1_data
		jmp    _04f365_case

	_0502ea_case:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _04f1fc_func
		mov    0x000081(%esi),%cl
		mov    (%esp),%eax
		test   $0x000008,%cl
		sete   %dl
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    %ch,%dh
		mov    %ch,(%eax)
		or     %dl,%dh
		xor    %ebx,%ebx
		mov    %dh,(%eax)
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		xor    %bl,%bl
		call   _04ed70_func
		mov    %bl,_0ceeb1_data
		jmp    _04f365_case

	_050340_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05034c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dl,0x000010(%esp)
		mov    0x000048(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%edi
		shl    $0x000005,%edi
		add    %edx,%edi
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edi
		mov    %esp,%ecx
		add    %eax,%edi
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		lea    0x000010(%esp),%eax
		mov    0x000050(%esi),%edx
		push   %eax
		sar    $0x000010,%edx
		mov    %edi,%eax
		call   _01d710_func
		cmpb   $0x000000,0x000010(%esp)
		je     _050419_jump
		xor    %eax,%eax
		mov    0x00006d(%edi),%al
		mov    0x00000c(%edi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x00006c(%edi),%dl
		mov    (%eax),%eax
		shl    $0x000003,%edx
		add    %eax,%edx
		mov    0x00006c(%edi),%al
		cmp    $0x000012,%al
		jb     _0503c0_jump
		jbe    _0503d0_jump
		cmp    $0x000023,%al
		je     _0503ca_jump
		jmp    _0503d4_jump

	_0503c0_jump:
		cmp    $0x000011,%al
		jne    _0503d4_jump
		movb   $0x00002f,0x000002(%edx)
		jmp    _0503d4_jump

	_0503ca_jump:
		movb   $0x000030,0x000002(%edx)
		jmp    _0503d4_jump

	_0503d0_jump:
		movb   $0x00002e,0x000002(%edx)

	_0503d4_jump:
		mov    0x000002(%edx),%al
		mov    %al,0x00006a(%edi)
		mov    0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _05040c_jump
		movb   $0x000001,0x000070(%esi)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000028(%esi),%ebx
		sub    $0x000005,%eax
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		jmp    _050419_jump

	_05040c_jump:
		mov    0x000028(%esi),%edx
		movb   $0x000000,0x000070(%esi)
		add    $0x000005,%edx
		mov    %edx,0x000028(%esi)

	_050419_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%al
		mov    0x000074(%esi),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movw   $0x000000,0x000042(%esi)
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		mov    -0x000002(%esp),%edx
		sar    %ebx
		sar    $0x000010,%edx
		add    %ebx,%edx
		sub    %eax,%edx
		add    $0x000002,%edx
		mov    %edx,0x00002c(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_050458_switch:
		.long   _050489_case
		.long   _050496_case
		.long   _0504a3_case
		.long   _0504b0_case




_050468_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    _0e3cc9_data,%al
		dec    %al
		cmp    $0x000003,%al
		ja     _0504bb_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_050458_switch(,%edx,4)

	_050489_case:
		mov    $0x000003,%ch
		mov    $0x0000c0,%al
		mov    %ch,0x000004(%esp)
		mov    %al,(%esp)
		jmp    _0504bb_jump

	_050496_case:
		mov    $0x000004,%bh
		mov    $0x0000c0,%cl
		mov    %bh,0x000004(%esp)
		mov    %cl,(%esp)
		jmp    _0504bb_jump

	_0504a3_case:
		mov    $0x000002,%dh
		mov    $0x0000c0,%bl
		mov    %dh,0x000004(%esp)
		mov    %bl,(%esp)
		jmp    _0504bb_jump

	_0504b0_case:
		mov    $0x000004,%ah
		mov    $0x0000f4,%dl
		mov    %ah,0x000004(%esp)
		mov    %dl,(%esp)

	_0504bb_jump:
		mov    _0cc1f0_data,%ebx
		mov    _0cc1f4_data,%si
		xor    %eax,%eax
		test   %si,%si
		jle    _0505a7_jump

	_0504d3_jump:
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    (%esp),%cl
		mov    0x000060(%ebx),%dx
		cmp    %ecx,%edx
		jne    _050597_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _050597_jump
		cmpw   $0x0000d5,0x000060(%edi)
		jne    _050513_jump
		mov    _0e3cbe_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0cc1f0_data,%edi
		shl    $0x000002,%edx
		add    %edx,%edi

	_050513_jump:
		mov    0x000034(%edi),%ax
		mov    %ax,0x00004a(%ebx)
		xor    %eax,%eax
		mov    _0ceeb2_data,%al
		mov    %ax,0x000052(%ebx)
		mov    0x000081(%ebx),%ah
		and    $0x0000ef,%ah
		mov    %ah,0x000081(%ebx)
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    %ah,%dl
		and    $0x0000f7,%dl
		mov    %dl,0x000081(%ebx)
		mov    %dl,%dh
		movb   $0x000000,0x00006b(%ebx)
		or     %al,%dh
		mov    0x000004(%esp),%al
		mov    %dh,0x000081(%ebx)
		mov    %al,0x00006c(%ebx)
		mov    0x000034(%ebx),%ax
		mov    $0x000001,%edx
		mov    %ax,0x00004a(%edi)
		mov    %ebx,%eax
		call   _05034c_func
		mov    0x000081(%ebx),%cl
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%cl
		mov    %ebx,%eax
		mov    %cl,0x000081(%ebx)
		call   _01f304_func
		mov    %ebx,%eax
		call   _01db8c_func
		jmp    _0505a7_jump

	_050597_jump:
		inc    %eax
		add    $0x000084,%ebx
		cmp    %si,%ax
		jl     _0504d3_jump

	_0505a7_jump:
		mov    $0x0000ff,%ch
		xor    %al,%al
		mov    %ch,_0ceeb2_data
		mov    %al,_0e3cc9_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0505c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0e3cb8_data,%edx
		test   %edx,%edx
		je     _0505de_jump
		lea    -0x000001(%edx),%ebx
		mov    %ebx,_0e3cb8_data
		jmp    _0506d5_jump

	_0505de_jump:
		call   _04e918_func
		test   %al,%al
		je     _0506d5_jump
		mov    _0ceeb0_data,%ah
		test   %ah,%ah
		je     _0505ff_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0ceeb0_data

	_0505ff_jump:
		testb  $0x000001,0x000081(%esi)
		jne    _0506ce_jump
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		jne    _05064e_jump
		cmpb   $0x0000ff,_0ceeb2_data
		je     _050623_jump
		mov    %esi,%eax
		call   _050468_func

	_050623_jump:
		movw   $0x000000,0x000040(%esi)
		mov    $0xffff8300,%edx
		movw   $0x000000,0x000042(%esi)
		mov    %dx,_0cec94_data
		mov    %dx,_0cec8e_data
		mov    %dx,_0e3cc6_data
		jmp    _0506c7_jump

	_05064e_jump:
		mov    _0e3cc4_data,%edx
		mov    $0x0000ff,%bl
		sar    $0x000010,%edx
		mov    %bl,_0ceeb2_data
		cmp    $0xffff8300,%edx
		je     _05066e_jump
		call   _04eb04_func
		jmp    _0506a8_jump

	_05066e_jump:
		cmpb   $0x000000,_0e3cc8_data
		jne    _050694_jump
		cmp    _0e3ccc_data,%bl
		je     _050694_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _050694_jump
		cmpb   $0x00000f,0x00006c(%esi)
		jne    _050694_jump
		mov    %esi,%eax
		call   _04edec_func
		jmp    _0506a8_jump

	_050694_jump:
		mov    _0e3cc8_data,%ah
		test   %ah,%ah
		je     _0506a8_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0e3cc8_data

	_0506a8_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0ceea9_data,%cl
		mov    _0ceea8_data,%bl
		mov    _0ceeaf_data,%dl
		call   _018690_func

	_0506c7_jump:
		mov    %esi,%eax
		call   _018864_func

	_0506ce_jump:
		mov    %esi,%eax
		call   _04f30c_func

	_0506d5_jump:
		andb   $0x0000fe,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0506e4_switch:
		.long   _050738_case
		.long   _050757_case
		.long   _050763_case
		.long   _050763_case
		.long   _050763_case




_0506f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ceeb3_data,%ah
		cmp    $0x000008,%ah
		je     _05070b_jump
		cmp    $0x000009,%ah
		jne    _050717_jump

	_05070b_jump:
		mov    $_0ceeae_data,%eax
		mov    $_0ceeac_data,%ebx
		jmp    _050721_jump

	_050717_jump:
		mov    $_0ceeb3_data,%eax
		mov    $_0ceeb4_data,%ebx

	_050721_jump:
		mov    (%eax),%dh
		mov    %dh,%dl
		dec    %dl
		cmp    $0x000004,%dl
		ja     _050763_case
		xor    %ecx,%ecx
		mov    %dl,%cl
		jmp    *%cs:_0506e4_switch(,%ecx,4)

	_050738_case:
		cmpb   $0x000002,_0e3ccb_data
		jb     _050763_case
		cmpb   $0x000002,_0e3cca_data
		jbe    _050763_case
		xor    %cl,%cl
		movb   $0x000002,(%eax)
		mov    %cl,_0e3cca_data
		jmp    _050763_case

	_050757_case:
		cmpb   $0x000003,_0e3ccb_data
		jb     _050763_case
		movb   $0x000003,(%eax)

	_050763_case:
		cmp    (%eax),%dh
		je     _050771_jump
		xor    %al,%al
		movb   $0x000000,(%ebx)
		mov    %al,_0e3ccb_data

	_050771_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050778_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ceeb4_data,%dl
		mov    _0ceeb3_data,%dh

	_050787_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %dh,%bl
		mov    %dl,%cl
		mov    _096aec_data(,%ebx,4),%ebx
		xor    %ah,%ah
		mov    (%ecx,%ebx,1),%al
		cmp    $0x000018,%al
		jb     _0507dd_jump
		jbe    _050809_jump
		cmp    $0x00001d,%al
		jb     _0507cd_jump
		jbe    _050812_jump
		cmp    $0x000022,%al
		jb     _0507c4_jump
		cmp    $0x000024,%al
		jbe    _050809_jump
		cmp    $0x00002b,%al
		je     _050807_jump
		jmp    _05081e_jump

	_0507c4_jump:
		cmp    $0x000021,%al
		je     _050807_jump
		jmp    _05081e_jump

	_0507cd_jump:
		cmp    $0x00001a,%al
		jb     _05081e_jump
		jbe    _050809_jump
		cmp    $0x00001c,%al
		je     _05080f_jump
		jmp    _05081e_jump

	_0507dd_jump:
		cmp    $0x00000f,%al
		jb     _0507f1_jump
		jbe    _050809_jump
		cmp    $0x000012,%al
		jb     _05081e_jump
		cmp    $0x000013,%al
		jbe    _050809_jump
		cmp    $0x000016,%al
		je     _050816_jump
		jmp    _05081e_jump

	_0507f1_jump:
		test   %al,%al
		jbe    _0507ff_jump
		cmp    $0x000001,%al
		jne    _05081e_jump
		mov    %al,%ah
		xor    %dl,%dl
		jmp    _05081e_jump

	_0507ff_jump:
		mov    $0x000001,%ah
		xor    %dl,%dl
		add    %ah,%dh
		jmp    _05081e_jump

	_050807_jump:
		inc    %dl

	_050809_jump:
		mov    $0x000001,%ah
		add    %ah,%dl
		jmp    _05081e_jump

	_05080f_jump:
		add    $0x000002,%dl

	_050812_jump:
		mov    $0x000001,%ah
		jmp    _05081e_jump

	_050816_jump:
		test   %dl,%dl
		je     _05081e_jump
		mov    $0x000001,%ah
		sub    %ah,%dl

	_05081e_jump:
		test   %ah,%ah
		jne    _050787_jump
		mov    %dl,_0ceeac_data
		mov    %dh,_0ceeae_data
		mov    %dh,_0ceeb3_data
		mov    %dl,_0ceeb4_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050844_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		xor    %ecx,%ecx
		mov    0x00006d(%eax),%cl
		mov    0x00000c(%ebx),%esi
		lea    0x000000(,%ecx,4),%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    (%esi),%esi
		mov    0x00006c(%ebx),%al
		testb  $0x000001,0x000007(%esi,%eax,8)
		je     _050990_jump
		cmpb   $0x000000,_0ceeb0_data
		jne    _050990_jump
		shl    $0x000008,%ecx
		add    %ecx,%eax
		cmp    $0x000013,%eax
		jb     _0508cb_jump
		jbe    _0508f1_jump
		cmp    $0x000022,%eax
		jb     _0508b1_jump
		jbe    _0508f1_jump
		cmp    $0x000025,%eax
		jb     _0508ff_jump
		jbe    _0508f8_jump
		cmp    $0x00002c,%eax
		je     _0508f8_jump
		jmp    _0508ff_jump

	_0508b1_jump:
		cmp    $0x000015,%eax
		jb     _0508ff_jump
		cmp    $0x000018,%eax
		jbe    _0508f1_jump
		cmp    $0x00001e,%eax
		jb     _0508ff_jump
		cmp    $0x00001f,%eax
		jbe    _0508f1_jump
		jmp    _0508ff_jump

	_0508cb_jump:
		cmp    $0x00000a,%eax
		jb     _0508e3_jump
		cmp    $0x00000b,%eax
		jbe    _0508f8_jump
		cmp    $0x00000d,%eax
		jb     _0508ff_jump
		jbe    _0508f8_jump
		cmp    $0x00000f,%eax
		je     _0508f8_jump
		jmp    _0508ff_jump

	_0508e3_jump:
		cmp    $0x000002,%eax
		jb     _0508ff_jump
		jbe    _0508f8_jump
		cmp    $0x000006,%eax
		je     _0508f8_jump
		jmp    _0508ff_jump

	_0508f1_jump:
		mov    $0x0000ff,%eax
		jmp    _050904_jump

	_0508f8_jump:
		mov    $0xffffffff,%eax
		jmp    _050904_jump

	_0508ff_jump:
		mov    $0x000001,%eax

	_050904_jump:
		cmp    %dx,%ax
		jne    _050990_jump
		cmp    $0x000001,%dx
		jne    _05092c_jump
		movb   $0x000001,_0cdbc3_data
		mov    %ebx,%eax
		call   _01e6dc_func
		incb   _0e3ccb_data
		call   _0506f8_func

	_05092c_jump:
		cmpb   $0x000000,0x000076(%ebx)
		je     _05095d_jump
		mov    _0ceeb3_data,%al
		cmp    $0x000008,%al
		je     _05096b_jump
		cmp    $0x000009,%al
		je     _05096b_jump
		call   _050778_func
		cmpw   $0x000062,0x000060(%ebx)
		jne    _050954_jump
		movb   $0x000008,_0ceeb3_data
		jmp    _05096b_jump

	_050954_jump:
		movb   $0x000009,_0ceeb3_data
		jmp    _05096b_jump

	_05095d_jump:
		movb   $0x00000a,_0ceeb3_data
		movb   $0x000001,_0ceeba_data

	_05096b_jump:
		xor    %cl,%cl
		mov    $0x000001,%al
		mov    %cl,_0ceeb4_data
		mov    %al,_0ceeb1_data
		mov    0x000081(%ebx),%ah
		mov    $0x0000ff,%ch
		or     %al,%ah
		mov    %ch,_0ceeb0_data
		mov    %ah,0x000081(%ebx)

	_050990_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_050994_switch:
		.long   _0509c7_case
		.long   _0509bf_case
		.long   _0509c3_case
		.long   _0509bf_case




_0509a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x00006c(%eax),%al
		sub    $0x000002,%al
		cmp    $0x000003,%al
		ja     _0509c9_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_050994_switch(,%eax,4)

	_0509bf_case:
		xor    %dl,%dl
		jmp    _0509c9_jump

	_0509c3_case:
		mov    $0x000007,%dl
		jmp    _0509c9_jump

	_0509c7_case:
		mov    $0x00000e,%dl

	_0509c9_jump:
		cmp    0x00006b(%ebx),%dl
		jb     _0509dc_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _05034c_func
		jmp    _050a55_jump

	_0509dc_jump:
		mov    0x000048(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x000034(%ebx),%cx
		cmp    0x00004a(%eax),%cx
		jne    _050a55_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ecx
		shl    $0x000002,%edx
		add    %edx,%ecx
		xor    %edx,%edx
		mov    0x00006c(%eax),%dl
		mov    (%ecx),%ecx
		shl    $0x000003,%edx
		mov    0x00006a(%eax),%al
		add    %ecx,%edx
		cmp    $0x00002f,%al
		jb     _050a2f_jump
		jbe    _050a42_jump
		cmp    $0x000030,%al
		je     _050a51_jump
		mov    %ebx,%eax
		call   _053c34_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_050a2f_jump:
		cmp    $0x00002e,%al
		jne    _050a55_jump
		movb   $0x000001,0x000002(%edx)
		mov    %ebx,%eax
		call   _053c34_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_050a42_jump:
		movb   $0x000000,0x000002(%edx)
		mov    %ebx,%eax
		call   _053c34_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_050a51_jump:
		movb   $0x00001c,0x000002(%edx)

	_050a55_jump:
		mov    %ebx,%eax
		call   _053c34_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050a60_func:
		push   %edx
		mov    0x00007f(%eax),%dl
		test   %dl,%dl
		je     _050a76_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,0x00007f(%eax)
		jne    _050a76_jump
		call   _04ebbc_func

	_050a76_jump:
		pop    %edx
		ret    



_050a80_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%ebx
		mov    _0cdb20_data,%edx
		cmpl   $0x000000,0x000024(%edx)
		jne    _050acf_jump
		xor    %ecx,%ecx
		mov    _0cdabc_data,%di
		mov    _0cdafc_data,%cl
		movzbl _0cdb08_data,%esi
		add    %edi,%ecx
		movzbl _0cdafd_data,%edi
		add    %edi,%esi
		mov    _0cdac0_data,%ebp
		sar    %esi
		movw   $0x000000,0x000040(%edx)
		add    %ebp,%esi
		movw   $0x000000,0x000042(%edx)
		sub    $0x00000a,%esi
		jmp    _050aec_jump

	_050acf_jump:
		xor    %ecx,%ecx
		mov    0x000028(%edx),%si
		mov    0x000068(%edx),%cl
		movzbl 0x000069(%edx),%edi
		add    %esi,%ecx
		movzbl 0x000074(%edx),%esi
		add    %edi,%esi
		sar    %esi
		add    0x00002c(%edx),%esi
		sub    $0x000003,%esi

	_050aec_jump:
		xor    %edx,%edx
		movzbl 0x000074(%eax),%edi
		mov    0x000069(%eax),%dl
		add    %edi,%edx
		sar    %edx
		mov    0x00002c(%eax),%edi
		add    %edx,%edi
		movswl %si,%edx
		mov    0x000028(%eax),%si
		sub    %esi,%ecx
		mov    %ecx,%esi
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		sub    %edx,%edi
		sub    %ecx,%esi
		mov    %edi,%edx
		mov    %si,(%ebx)
		test   %di,%di
		jge    _050b63_jump
		mov    _0cdb20_data,%ebx
		cmpw   $0x000000,0x000042(%ebx)
		jle    _050b4d_jump
		movswl %dx,%edx
		cmp    $0xffffffe2,%edx
		jle    _050b3b_jump
		addw   $0x000002,0x000042(%eax)
		jmp    _050bac_jump

	_050b3b_jump:
		cmp    $0xffffffd0,%edx
		jle    _050bac_jump
		incw   0x000042(%eax)
		jmp    _050bac_jump

	_050b4d_jump:
		movswl %dx,%edx
		cmp    $0xffffffe2,%edx
		jle    _050b5c_jump
		subw   $0x000002,0x000042(%eax)
		jmp    _050bac_jump

	_050b5c_jump:
		cmp    $0xffffffd0,%edx
		jle    _050bac_jump
		jmp    _050ba8_jump

	_050b63_jump:
		mov    _0cdb20_data,%ebx
		cmpw   $0x000000,0x000042(%ebx)
		jl     _050b91_jump
		cmp    $0x00001e,%dx
		jge    _050b81_jump
		addw   $0x000002,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_050b81_jump:
		cmp    $0x000030,%dx
		jge    _050bac_jump
		incw   0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_050b91_jump:
		cmp    $0x00001e,%dx
		jge    _050ba2_jump
		subw   $0x000002,0x000042(%eax)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_050ba2_jump:
		cmp    $0x000030,%dx
		jge    _050bac_jump

	_050ba8_jump:
		decw   0x000042(%eax)

	_050bac_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_050bb4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    0x00006d(%eax),%dl
		xor    %cl,%cl
		cmp    $0x000002,%dl
		je     _050bee_jump
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%eax),%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		testb  $0x000001,0x000007(%ebx,%edx,8)
		je     _050c17_jump
		mov    $0x000001,%ebx
		mov    %ebx,%edx
		call   _05efb0_func
		jmp    _050c17_jump

	_050bee_jump:
		cmp    %dl,%dl
		jne    _050c15_jump
		cmpb   $0x000001,0x00006c(%eax)
		jne    _050c15_jump
		cmpb   $0x000000,0x00006b(%eax)
		jne    _050c15_jump
		movw   $0x00fffb,0x000042(%eax)
		mov    %cl,0x000071(%eax)
		mov    0x00002c(%eax),%edx
		mov    %cl,0x000072(%eax)
		sub    $0x00000e,%edx
		mov    %edx,0x00002c(%eax)
		jmp    _050c17_jump

	_050c15_jump:
		mov    $0x000001,%cl

	_050c17_jump:
		mov    %cl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_050c20_func:
		testb  $0x000008,0x000081(%eax)
		jne    _050c2e_jump
		test   %dx,%dx
		jg     _050c3c_jump

	_050c2e_jump:
		testb  $0x000008,0x000081(%eax)
		je     _050c3f_jump
		test   %dx,%dx
		jge    _050c3f_jump

	_050c3c_jump:
		mov    $0x000001,%al
		ret    

	_050c3f_jump:
		xor    %al,%al
		ret    



_050c44_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000002,0x00006d(%eax)
		je     _050c5a_jump
		cmpb   $0x000001,0x00006d(%ebx)
		jne    _050dab_jump

	_050c5a_jump:
		movswl %dx,%edx
		mov    %ebx,%eax
		call   _050c20_func
		test   %al,%al
		je     _050cb2_jump
		cmpb   $0x000002,0x00006d(%ebx)
		jne    _050c8d_jump
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _050c8d_jump
		cmpb   $0x000000,0x00006c(%ebx)
		setne  %al
		and    $0x0000ff,%eax
		je     _050c8d_jump
		incw   0x000042(%ebx)
		jmp    _050c94_jump

	_050c8d_jump:
		mov    %ebx,%eax
		call   _050bb4_func

	_050c94_jump:
		testb  $0x000008,0x000081(%ebx)
		jne    _050ca4_jump
		mov    $0x000004,%eax
		jmp    _050ca9_jump

	_050ca4_jump:
		mov    $0xfffffffc,%eax

	_050ca9_jump:
		mov    %ax,0x000040(%ebx)
		jmp    _050d22_jump

	_050cb2_jump:
		mov    _0cdad4_data,%ax
		mov    %eax,%edx
		mov    %ax,0x000040(%ebx)
		neg    %edx
		mov    0x00003a(%ebx),%eax
		mov    %dx,0x000040(%ebx)
		sar    $0x000010,%eax
		cmp    0x000028(%ebx),%eax
		jle    _050cf3_jump
		testb  $0x000008,0x000081(%ebx)
		je     _050cf3_jump
		mov    0x000040(%ebx),%di
		test   %di,%di
		jge    _050ce9_jump
		movw   $0x000000,0x000040(%ebx)
		jmp    _050d22_jump

	_050ce9_jump:
		mov    %edi,%eax
		add    %edi,%eax
		mov    %ax,0x000040(%ebx)
		jmp    _050d22_jump

	_050cf3_jump:
		mov    0x00003a(%ebx),%eax
		mov    0x000028(%ebx),%ecx
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		jge    _050d22_jump
		testb  $0x000008,0x000081(%ebx)
		jne    _050d22_jump
		mov    0x000040(%ebx),%cx
		test   %cx,%cx
		jle    _050d1a_jump
		movw   $0x000000,0x000040(%ebx)
		jmp    _050d22_jump

	_050d1a_jump:
		mov    %ecx,%esi
		add    %ecx,%esi
		mov    %si,0x000040(%ebx)

	_050d22_jump:
		mov    0x00006d(%ebx),%cl
		cmp    $0x000001,%cl
		jne    _050d83_jump
		xor    %eax,%eax
		mov    %cl,%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ebx),%al
		mov    (%edx),%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    0x000081(%ebx),%ch
		add    $0x000007,%eax
		test   $0x000008,%ch
		jne    _050d57_jump
		cmpw   $0x000000,0x000040(%ebx)
		jg     _050d67_jump

	_050d57_jump:
		testb  $0x000008,0x000081(%ebx)
		je     _050d6e_jump
		cmpw   $0x000000,0x000040(%ebx)
		jge    _050d6e_jump

	_050d67_jump:
		mov    $0x000001,%edx
		jmp    _050d70_jump

	_050d6e_jump:
		xor    %edx,%edx

	_050d70_jump:
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		mov    %dh,(%eax)
		shl    $0x000004,%dl
		mov    %dh,%cl
		or     %dl,%cl
		mov    %cl,(%eax)

	_050d83_jump:
		cmpw   $0x000004,0x000040(%ebx)
		jle    _050d95_jump
		movw   $0x000004,0x000040(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_050d95_jump:
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffc,%eax
		jge    _050db2_jump
		movw   $0x00fffc,0x000040(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_050dab_jump:
		mov    %ebx,%eax
		call   _053c34_func

	_050db2_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_050db8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _050dea_jump
		cmpb   $0x00000a,0x00006c(%ebx)
		jne    _050dea_jump
		mov    0x00004a(%ebx),%cx
		cmp    $0x000032,%cx
		jle    _051064_jump
		mov    %ecx,%esi
		sub    $0x000032,%esi
		mov    %si,0x00004a(%ebx)
		jmp    _051064_jump

	_050dea_jump:
		mov    %ebx,%eax
		call   _050bb4_func
		test   %al,%al
		je     _051064_jump
		cmpb   $0x000001,0x00006c(%ebx)
		setne  %al
		and    $0x0000ff,%eax
		je     _050e3f_jump
		cmpw   $0x0001f4,0x00004a(%ebx)
		jne    _050e3f_jump
		movb   $0x00008c,0x00007d(%ebx)
		mov    0x00004a(%ebx),%dx
		mov    0x000028(%ebx),%ax
		inc    %edx
		mov    %ax,0x00004e(%ebx)
		mov    %ebx,%eax
		mov    %dx,0x00004a(%ebx)
		mov    $0x000003,%edx
		movw   $0x000000,0x000042(%ebx)
		call   _01d364_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_050e3f_jump:
		mov    0x00006c(%ebx),%cl
		cmp    $0x000003,%cl
		jne    _050e6e_jump
		cmpb   $0x000000,0x000072(%ebx)
		je     _051064_jump
		mov    0x000042(%ebx),%di
		test   %di,%di
		jl     _051064_jump
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x000042(%ebx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_050e6e_jump:
		cmp    $0x000004,%cl
		jne    _051064_jump
		mov    0x00004c(%ebx),%eax
		mov    0x000028(%ebx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _050e8a_jump
		neg    %eax

	_050e8a_jump:
		mov    %eax,%edx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    _0cdabc_data,%esi
		mov    _0cdafc_data,%al
		add    %eax,%esi
		mov    0x00004c(%ebx),%eax
		sar    $0x000010,%eax
		sub    %eax,%esi
		mov    %esi,%eax
		movzbl 0x000068(%ebx),%esi
		sub    %esi,%eax
		sub    $0x00000a,%eax
		test   %eax,%eax
		jge    _050eb6_jump
		neg    %eax

	_050eb6_jump:
		movzbw 0x00007d(%ebx),%si
		mov    %ax,(%esp)
		cmp    %si,%dx
		jg     _050ecf_jump
		cmp    %ax,%dx
		jle    _050f1e_jump
		cmpb   $0x00008c,0x00007d(%ebx)
		jne    _050f1e_jump

	_050ecf_jump:
		cmpb   $0x00008c,0x00007d(%ebx)
		jne    _050ee3_jump
		cmpw   $0x00008c,(%esp)
		jge    _050ee3_jump
		mov    (%esp),%al
		mov    %al,0x00007d(%ebx)

	_050ee3_jump:
		cmpb   $0x000001,0x000072(%ebx)
		jne    _050efc_jump
		testb  $0x000008,0x000081(%ebx)
		jne    _050ef8_jump
		incw   0x000040(%ebx)
		jmp    _050efc_jump

	_050ef8_jump:
		decw   0x000040(%ebx)

	_050efc_jump:
		cmpb   $0x000001,0x000071(%ebx)
		jne    _051036_jump
		mov    0x000040(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jle    _051036_jump
		decw   0x000042(%ebx)
		jmp    _051036_jump

	_050f1e_jump:
		xor    %eax,%eax
		mov    _0cdac0_data,%di
		mov    0x000069(%ebx),%al
		mov    0x00002c(%ebx),%si
		mov    %eax,%edx
		xor    %eax,%eax
		add    %esi,%edx
		mov    _0cdafd_data,%al
		sub    %edi,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		cmpw   $0x000000,0x000040(%ebx)
		jg     _050f4f_jump
		testb  $0x000008,0x000081(%ebx)
		je     _050f5f_jump

	_050f4f_jump:
		cmpw   $0x000000,0x000040(%ebx)
		jl     _050fb3_jump
		testb  $0x000008,0x000081(%ebx)
		je     _050fb3_jump

	_050f5f_jump:
		testb  $0x000008,0x000081(%ebx)
		jne    _050f70_jump
		movw   $0x00fffc,0x000040(%ebx)
		jmp    _050f76_jump

	_050f70_jump:
		movw   $0x000004,0x000040(%ebx)

	_050f76_jump:
		cmp    $0x00000a,%ax
		jle    _050f87_jump
		movw   $0x00ffff,0x000042(%ebx)
		jmp    _051036_jump

	_050f87_jump:
		cwtl   
		cmp    $0xffffffec,%eax
		jge    _050f98_jump
		movw   $0x000002,0x000042(%ebx)
		jmp    _051036_jump

	_050f98_jump:
		cmp    $0xfffffff6,%eax
		jge    _050fa8_jump
		movw   $0x000001,0x000042(%ebx)
		jmp    _051036_jump

	_050fa8_jump:
		movw   $0x000000,0x000042(%ebx)
		jmp    _051036_jump

	_050fb3_jump:
		cwtl   
		cmp    $0xfffffff6,%eax
		jle    _050fca_jump
		cmpb   $0x000000,_0cdb01_data
		jne    _050fca_jump
		movw   $0x000000,0x000042(%ebx)
		jmp    _050fd0_jump

	_050fca_jump:
		movw   $0x000001,0x000042(%ebx)

	_050fd0_jump:
		cmp    $0x000008,%cx
		jge    _050fdf_jump
		testb  $0x000008,0x000081(%ebx)
		je     _050fee_jump

	_050fdf_jump:
		cmp    $0x000008,%cx
		jle    _051005_jump
		testb  $0x000008,0x000081(%ebx)
		je     _051005_jump

	_050fee_jump:
		decw   0x000040(%ebx)
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffc,%eax
		jge    _05101a_jump
		movw   $0x00fffc,0x000040(%ebx)
		jmp    _05101a_jump

	_051005_jump:
		mov    0x000040(%ebx),%di
		inc    %edi
		mov    %di,0x000040(%ebx)
		cmp    $0x000004,%di
		jle    _05101a_jump
		movw   $0x000004,0x000040(%ebx)

	_05101a_jump:
		mov    0x000040(%ebx),%si
		test   %si,%si
		jne    _051036_jump
		cmp    $0x000008,%cx
		jge    _051036_jump
		mov    %ebx,%eax
		xor    %edx,%edx
		mov    %si,0x00004a(%ebx)
		call   _01d364_func

	_051036_jump:
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _051064_jump
		cmpw   $0x000000,0x000040(%ebx)
		jle    _05105b_jump
		mov    $0xffffffff,%eax
		jmp    _051060_jump

	_05105b_jump:
		mov    $0x000001,%eax

	_051060_jump:
		mov    %ax,0x000040(%ebx)

	_051064_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051070_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x00006d(%eax),%ah
		xor    %bl,%bl
		test   %ah,%ah
		jne    _0510a6_jump
		cmpb   $0x000003,0x00006c(%edx)
		jne    _0510a6_jump
		movw   $0x00fffc,0x000042(%edx)
		mov    0x000081(%edx),%cl
		movw   $0x000000,0x000040(%edx)
		and    $0x0000ef,%cl
		mov    $0x000001,%bl
		mov    %cl,0x000081(%edx)
		jmp    _051166_jump

	_0510a6_jump:
		cmpb   $0x000001,0x00006d(%edx)
		jne    _0510b2_jump
		cmpb   $0x000002,0x00006c(%edx)
		je     _0510da_jump

	_0510b2_jump:
		cmpb   $0x000000,0x00006d(%edx)
		jne    _0510c5_jump
		mov    0x00006c(%edx),%ah
		cmp    $0x000002,%ah
		je     _0510da_jump
		cmp    $0x000004,%ah
		je     _0510da_jump

	_0510c5_jump:
		mov    0x00006d(%edx),%cl
		cmp    $0x000002,%cl
		jne    _051166_jump
		cmp    0x00006c(%edx),%cl
		jne    _051166_jump

	_0510da_jump:
		mov    %edx,%eax
		mov    $0x000001,%bl
		call   _01cbd0_func
		test   %al,%al
		je     _0510f3_jump
		movw   $0x000000,0x00004a(%edx)
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0510f3_jump:
		cmpb   $0x000002,0x00006d(%edx)
		je     _051106_jump
		mov    %edx,%eax
		call   _053c34_func
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_051106_jump:
		mov    0x00004a(%edx),%cx
		movw   $0x000000,0x000042(%edx)
		cmp    $0x0001f4,%cx
		jl     _051166_jump
		mov    0x00004c(%edx),%eax
		mov    0x000028(%edx),%ecx
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		test   %eax,%eax
		jge    _05112a_jump
		neg    %eax

	_05112a_jump:
		cmp    $0x000008,%ax
		jge    _05114d_jump
		testb  $0x000008,0x000081(%edx)
		jne    _051143_jump
		decw   0x000040(%edx)
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_051143_jump:
		incw   0x000040(%edx)
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05114d_jump:
		testb  $0x000008,0x000081(%edx)
		jne    _05115d_jump
		mov    $0x000004,%eax
		jmp    _051162_jump

	_05115d_jump:
		mov    $0xfffffffc,%eax

	_051162_jump:
		mov    %ax,0x000040(%edx)

	_051166_jump:
		mov    %bl,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05116c_switch:
		.long   _051378_case
		.long   _0513a3_case
		.long   _051418_case
		.long   _051378_case




_05117c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		mov    (%edx),%ebp
		shl    $0x000003,%eax
		add    %eax,%ebp
		mov    %ecx,%eax
		call   _051070_func
		test   %al,%al
		jne    _05157d_jump
		cmpw   $0x0001f4,0x00004a(%ecx)
		jl     _0511c7_jump
		mov    %ecx,%eax
		call   _050db8_func
		jmp    _05157d_jump

	_0511c7_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0511d7_jump
		cmpb   $0x000007,0x00006c(%ecx)
		je     _05157d_jump

	_0511d7_jump:
		mov    0x000070(%ecx),%dh
		test   %dh,%dh
		jne    _0511e7_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _0511f3_jump

	_0511e7_jump:
		cmp    $0x000001,%dh
		jne    _0511f3_jump
		orb    $0x000008,0x000081(%ecx)

	_0511f3_jump:
		cmpb   $0x000000,0x00007b(%ecx)
		je     _0514d9_jump
		xor    %eax,%eax
		mov    _0cdabc_data,%bx
		mov    _0cdafc_data,%al
		mov    0x000028(%ecx),%si
		add    %ebx,%eax
		sub    %esi,%eax
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%esi
		movswl %si,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _051227_jump
		neg    %eax

	_051227_jump:
		sar    %eax
		mov    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%ecx),%bx
		mov    0x000069(%ecx),%al
		add    %ebx,%eax
		mov    _0cdac0_data,%bx
		sub    %ebx,%eax
		mov    %eax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%ebx
		mov    _0cdafd_data,%al
		sub    %eax,%ebx
		incw   0x00004a(%ecx)
		mov    %ecx,%eax
		mov    %ebx,0x000008(%esp)
		call   _050c20_func
		test   %al,%al
		je     _05128c_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _051280_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _051280_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d364_func
		jmp    _051455_jump

	_051280_jump:
		mov    %ecx,%eax
		call   _050bb4_func
		jmp    _051455_jump

	_05128c_jump:
		cmpb   $0x000000,_0cdbc2_data
		jne    _0512a2_jump
		cmpb   $0x000000,_0cdbc4_data
		je     _05135e_jump

	_0512a2_jump:
		mov    %esp,%edx
		mov    %ecx,%eax
		call   _050a80_func
		testb  $0x000008,0x000081(%ecx)
		jne    _0512d8_jump
		movswl %si,%eax
		cmp    $0xfffffff6,%eax
		jge    _0512d8_jump
		movswl %di,%eax
		mov    -0x000002(%esp),%edx
		neg    %eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _0512f9_jump
		mov    _0cdb20_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jge    _0512f9_jump

	_0512d8_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _05131f_jump
		cmp    $0x00000a,%si
		jle    _05131f_jump
		cmp    (%esp),%di
		jg     _0512f9_jump
		mov    _0cdb20_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jg     _05131f_jump

	_0512f9_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _051309_jump
		mov    %ecx,%eax
		call   _050bb4_func
		jmp    _051337_jump

	_051309_jump:
		testb  $0x000004,0x000007(%ebp)
		je     _051337_jump
		mov    $0x000009,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _051337_jump

	_05131f_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _051337_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _051337_jump
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _01d364_func

	_051337_jump:
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _051348_jump
		movw   $0x00fffd,0x000042(%ecx)

	_051348_jump:
		cmpw   $0x000003,0x000042(%ecx)
		jle    _051455_jump
		movw   $0x000003,0x000042(%ecx)
		jmp    _051455_jump

	_05135e_jump:
		mov    _0cdb01_data,%al
		cmp    $0x000003,%al
		ja     _051455_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05116c_switch(,%eax,4)

	_051378_case:
		mov    0x00006d(%ecx),%dl
		cmp    $0x000001,%dl
		je     _05138a_jump
		test   %dl,%dl
		jne    _051398_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _051398_jump

	_05138a_jump:
		mov    $0x000008,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func

	_051398_jump:
		movw   $0x000000,0x000040(%ecx)
		jmp    _051455_jump

	_0513a3_case:
		cmpb   $0x000002,0x00006d(%ecx)
		setne  %al
		and    $0x0000ff,%eax
		je     _051455_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0513c1_jump
		cmpb   $0x000009,0x00006c(%ecx)
		je     _0513c8_jump

	_0513c1_jump:
		mov    $0x000001,%edx
		jmp    _0513ca_jump

	_0513c8_jump:
		xor    %edx,%edx

	_0513ca_jump:
		test   %edx,%edx
		je     _051455_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0513de_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		je     _0513e5_jump

	_0513de_jump:
		mov    $0x000001,%edx
		jmp    _0513e7_jump

	_0513e5_jump:
		xor    %edx,%edx

	_0513e7_jump:
		test   %edx,%edx
		je     _051455_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0513fb_jump
		cmpb   $0x00000b,0x00006c(%ecx)
		je     _051402_jump

	_0513fb_jump:
		mov    $0x000001,%eax
		jmp    _051404_jump

	_051402_jump:
		xor    %eax,%eax

	_051404_jump:
		test   %eax,%eax
		je     _051455_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		jmp    _051455_jump

	_051418_case:
		mov    %ecx,%eax
		call   _050bb4_func
		test   %al,%al
		je     _051455_jump
		cmpw   $0x000000,0x000008(%esp)
		jle    _051448_jump
		cmpb   $0x000001,0x000071(%ecx)
		jne    _051455_jump
		decw   0x000042(%ecx)
		mov    0x000040(%ecx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _051455_jump
		movw   $0x00fffd,0x000042(%ecx)
		jmp    _051455_jump

	_051448_jump:
		cmpw   $0x000001,0x000042(%ecx)
		jle    _051455_jump
		movw   $0x000001,0x000042(%ecx)

	_051455_jump:
		cmp    $0x000028,%di
		jge    _051495_jump
		cmpw   $0x00000a,0x000008(%esp)
		jge    _051495_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _051495_jump
		testb  $0x000002,0x000007(%ebp)
		je     _051495_jump
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _05147f_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d36c_func

	_05147f_jump:
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _01d364_func
		movw   $0x000001,0x000052(%ecx)
		movb   $0x000000,0x00007f(%ecx)

	_051495_jump:
		cmpw   $0x000001,0x000052(%ecx)
		jne    _0514af_jump
		mov    0x00007f(%ecx),%dl
		inc    %dl
		mov    %dl,0x00007f(%ecx)
		cmp    $0x000028,%dl
		jbe    _0514af_jump
		movw   $0x000000,0x000052(%ecx)

	_0514af_jump:
		mov    _0cece8_data,%eax
		mov    0x00002c(%ecx),%ebx
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000074(%ecx),%dl
		sub    $0x000032,%eax
		add    %ebx,%edx
		cmp    %eax,%edx
		jge    _0514cd_jump
		addw   $0x000002,0x000042(%ecx)

	_0514cd_jump:
		movswl %si,%edx
		mov    %ecx,%eax
		call   _050c44_func
		jmp    _05153f_jump

	_0514d9_jump:
		mov    0x00006d(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x000002,%dl
		je     _05153f_jump
		cmp    $0x000001,%dl
		jne    _05150b_jump
		mov    $0x000008,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _05efb0_func

	_05150b_jump:
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01db14_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _05153f_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05efb0_func

	_05153f_jump:
		xor    %eax,%eax
		mov    0x000065(%ecx),%al
		testb  $0x000001,_092224_data(%eax)
		je     _051553_jump
		movw   $0x000000,0x000042(%ecx)

	_051553_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _051570_jump
		movw   $0x000000,0x000040(%ecx)

	_051570_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		je     _05157d_jump
		mov    %ecx,%eax
		call   _0252c0_func

	_05157d_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051588_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x000001,%dx
		jne    _0515c6_jump
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _0515b1_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		pop    %ecx
		pop    %ebx
		ret    

	_0515b1_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		andb   $0x0000ef,0x000081(%ecx)

	_0515c6_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0515cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0515fe_jump
		cmpb   $0x000003,0x00006c(%ecx)
		jne    _0515fe_jump
		movw   $0x000000,0x000040(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x00fff8,0x000042(%ecx)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%ecx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0515fe_jump:
		mov    %ecx,%eax
		call   _0517b8_func
		cmpw   $0x000000,0x00004a(%ecx)
		je     _05162e_jump
		mov    %ecx,%eax
		call   _050bb4_func
		test   %al,%al
		je     _05162e_jump
		testb  $0x000008,0x000081(%ecx)
		je     _051628_jump
		movw   $0x000002,0x000040(%ecx)
		jmp    _05162e_jump

	_051628_jump:
		movw   $0x00fffe,0x000040(%ecx)

	_05162e_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		je     _05166a_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _05165c_jump
		movw   $0x0001f6,0x00004a(%ecx)
		movw   $0x000000,0x000040(%ecx)

	_05165c_jump:
		mov    %ecx,%eax
		call   _053c34_func
		mov    %ecx,%eax
		call   _0252c0_func

	_05166a_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024c98_func
		mov    0x00006d(%ecx),%bh
		movzbw %al,%si
		cmp    $0x000002,%bh
		jne    _0516bf_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000074(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _0516ec_jump
		cmpw   $0x000000,0x000042(%ecx)
		jge    _0516ec_jump
		movw   $0x000001,0x000042(%ecx)
		jmp    _0516ec_jump

	_0516bf_jump:
		xor    %eax,%eax
		mov    0x000066(%ecx),%al
		testb  $0x000002,_092224_data(%eax)
		jne    _0516ec_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _05efb0_func

	_0516ec_jump:
		movswl %si,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _05174c_jump
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _05170a_jump
		mov    %ecx,%eax
		call   _01dbb8_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05170a_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		and    $0x000001,%al
		mov    0x000081(%ecx),%ah
		and    $0x0000f7,%ah
		mov    0x000040(%ecx),%si
		mov    %ah,0x000081(%ecx)
		shl    $0x000003,%al
		neg    %esi
		mov    %ah,%dl
		mov    %si,0x000040(%ecx)
		or     %al,%dl
		mov    %dl,0x000081(%ecx)

	_05174c_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051754_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x000001,%dx
		jne    _0517b4_jump
		mov    _0cdb20_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _051775_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _05177e_jump

	_051775_jump:
		jge    _05177e_jump
		orb    $0x000008,0x000081(%ecx)

	_05177e_jump:
		mov    %ecx,%eax
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _05179f_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		pop    %ecx
		pop    %ebx
		ret    

	_05179f_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		andb   $0x0000ef,0x000081(%ecx)

	_0517b4_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0517b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		cmpb   $0x000000,_0cdbc2_data
		jne    _0517d7_jump
		cmpb   $0x000000,_0cdbc4_data
		je     _0518ce_jump

	_0517d7_jump:
		lea    0x000008(%esp),%ecx
		mov    %esp,%ebx
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _0778f0_func
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0517f5_jump
		neg    %eax

	_0517f5_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jg     _0518fd_jump
		cmpw   $0x000023,(%esp)
		jge    _0518fd_jump
		cmpb   $0x000001,0x00006d(%esi)
		jne    _0518fd_jump
		testb  $0x000008,0x000081(%esi)
		jne    _05182a_jump
		cmpw   $0x000000,0x000004(%esp)
		jl     _051843_jump

	_05182a_jump:
		testb  $0x000008,0x000081(%esi)
		je     _0518fd_jump
		cmpw   $0x000000,0x000004(%esp)
		jle    _0518fd_jump

	_051843_jump:
		mov    _0cdb20_data,%eax
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _05185c_jump
		mov    $0x000001,%eax
		jg     _05185c_jump
		neg    %eax

	_05185c_jump:
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		neg    %edx
		cmp    $0x000000,%eax
		je     _051874_jump
		mov    $0x000001,%eax
		jg     _051874_jump
		neg    %eax

	_051874_jump:
		cmp    %edx,%eax
		jne    _0518fd_jump
		movw   $0x000000,0x000040(%esi)
		mov    _0cdb01_data,%al
		movw   $0x000000,0x000042(%esi)
		cmp    $0x000002,%al
		je     _051899_jump
		movw   $0x0001f5,0x00004a(%esi)
		jmp    _0518fd_jump

	_051899_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _0518fd_jump
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _0518f6_jump

	_0518ce_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0518fd_jump
		cmpb   $0x00000a,0x00006c(%esi)
		jne    _0518fd_jump
		mov    $0x00000c,%edx
		mov    $0x000001,%ebx
		mov    %esi,%eax
		movw   $0x000000,0x00004a(%esi)
		call   _01d364_func
		mov    $0x000008,%edx

	_0518f6_jump:
		mov    %esi,%eax
		call   _05efb0_func

	_0518fd_jump:
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051910_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0cec9e_data,%ecx
		mov    _0cec9a_data,%esi
		sar    $0x000010,%ecx
		sar    $0x000010,%esi
		sar    %ecx
		add    %esi,%ecx
		mov    %ecx,%esi
		mov    _0cecb8_data,%ecx
		mov    _0cec9c_data,%edi
		sar    $0x000010,%ecx
		sar    $0x000010,%edi
		sar    %ecx
		add    %edi,%ecx
		mov    %ecx,(%esp)
		xor    %ecx,%ecx
		mov    0x000068(%eax),%cl
		sub    %ecx,%esi
		mov    %si,(%edx)
		testb  $0x000008,0x000081(%eax)
		je     _051962_jump
		sub    $0x000030,%esi
		mov    %si,(%edx)
		jmp    _05196a_jump

	_051962_jump:
		mov    %esi,%ecx
		add    $0x000030,%ecx
		mov    %cx,(%edx)

	_05196a_jump:
		mov    (%esp),%eax
		sub    $0x000070,%eax
		mov    %ax,(%ebx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05197c_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    %ebx,%edi
		lea    0x000004(%esp),%ebx
		mov    %esp,%edx
		call   _051910_func
		mov    (%esp),%edx
		mov    0x000028(%ecx),%ax
		sub    %eax,%edx
		mov    %dx,(%esp)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0519ad_jump
		neg    %eax

	_0519ad_jump:
		mov    %ax,(%esp)
		mov    0x000004(%esp),%ebx
		mov    0x00002c(%ecx),%ax
		sub    %eax,%ebx
		mov    %bx,0x000004(%esp)
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		test   %eax,%eax
		jge    _0519cf_jump
		neg    %eax

	_0519cf_jump:
		mov    -0x000002(%esp),%ebx
		mov    %si,%dx
		sar    $0x000010,%ebx
		mov    %ax,0x000004(%esp)
		cmp    %edx,%ebx
		jge    _0519f2_jump
		movswl %ax,%edx
		xor    %eax,%eax
		mov    %di,%ax
		cmp    %eax,%edx
		jge    _0519f2_jump
		mov    $0x000001,%al
		jmp    _0519f4_jump

	_0519f2_jump:
		xor    %al,%al

	_0519f4_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0519fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		cmpb   $0x000000,_0ceead_data
		jne    _051ac0_jump
		mov    _0cecb0_data,%ecx
		mov    _0cecf4_data,%eax
		mov    _0cecae_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _051a44_jump
		cmp    %ecx,%eax
		jg     _051a44_jump
		mov    $0x000001,%eax
		jmp    _051a46_jump

	_051a44_jump:
		xor    %eax,%eax

	_051a46_jump:
		test   %eax,%eax
		je     _051a89_jump
		mov    _0cecb2_data,%ecx
		mov    _0cecf6_data,%eax
		mov    _0cecac_data,%ebx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ecx
		sub    %eax,%ebx
		mov    _0cece8_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _051a7f_jump
		cmp    %ecx,%eax
		jg     _051a7f_jump
		mov    $0x000001,%eax
		jmp    _051a81_jump

	_051a7f_jump:
		xor    %eax,%eax

	_051a81_jump:
		test   %eax,%eax
		je     _051a89_jump
		mov    $0x000001,%al
		jmp    _051a8b_jump

	_051a89_jump:
		xor    %al,%al

	_051a8b_jump:
		mov    %al,_0ceead_data
		test   %al,%al
		je     _051af7_jump
		mov    _0ced00_data,%ax
		mov    %ax,_0cecb8_data
		mov    %ax,_0cecaa_data
		mov    _0cecae_data,%ax
		mov    %ax,_0cecac_data
		mov    _0cecb4_data,%ax
		mov    %ax,_0cecb6_data
		jmp    _051af7_jump

	_051ac0_jump:
		mov    _0cecac_data,%ax
		mov    _0cecea_data,%bx
		cmp    %bx,%ax
		jge    _051ad9_jump
		mov    %bx,_0cecac_data

	_051ad9_jump:
		mov    0x00007f(%edx),%bl
		test   %bl,%bl
		je     _051ae7_jump
		mov    %bl,%bh
		dec    %bh
		mov    %bh,0x00007f(%edx)

	_051ae7_jump:
		mov    0x00005a(%edx),%cx
		test   %cx,%cx
		je     _051af7_jump
		mov    %ecx,%esi
		dec    %esi
		mov    %si,0x00005a(%edx)

	_051af7_jump:
		cmpb   $0x000000,_0ceead_data
		je     _051b0d_jump
		cmpb   $0x000000,0x00007f(%edx)
		jne    _051b0d_jump
		mov    $0x000001,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_051b0d_jump:
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_051b14_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		test   %dl,%dl
		jbe    _051b26_jump
		cmp    $0x000001,%dl
		je     _051b51_jump
		jmp    _051b7e_jump

	_051b26_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0ceca8_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dh
		mov    %eax,0x000028(%ebx)
		and    $0x0000f7,%dh
		mov    $0xffffffff,%eax
		mov    %dh,0x000081(%ebx)
		jmp    _051be7_jump

	_051b51_jump:
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    _0cecb6_data,%eax
		sar    $0x000010,%eax
		add    $0x000140,%eax
		sub    %edx,%eax
		mov    0x000081(%ebx),%dl
		mov    %eax,0x000028(%ebx)
		or     $0x000008,%dl
		mov    $0x000001,%eax
		mov    %dl,0x000081(%ebx)
		jmp    _051be7_jump

	_051b7e_jump:
		mov    _0ceca8_data,%esi
		mov    _0cecb6_data,%edi
		sar    $0x000010,%esi
		sar    $0x000010,%edi
		lea    0x000140(%esi,%edi,1),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%ebp
		mov    0x000068(%ebx),%cl
		add    %ecx,%ebp
		sub    %eax,%ebp
		mov    %ebp,%eax
		test   %ax,%ax
		jle    _051bd3_jump
		add    $0x000140,%edi
		sub    %ecx,%edi
		mov    0x000081(%ebx),%ch
		mov    %edi,0x000028(%ebx)
		and    $0x0000f7,%ch
		mov    %ch,0x000081(%ebx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_051bd3_jump:
		sub    %ecx,%esi
		mov    0x000081(%ebx),%cl
		mov    %esi,0x000028(%ebx)
		or     $0x000008,%cl
		mov    %cl,0x000081(%ebx)

	_051be7_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_051bf0_switch:
		.long   _051ce1_case
		.long   _051cdb_case
		.long   _052221_case
		.long   _051cf5_case
		.long   _0520c4_case
		.long   _052423_case
		.long   _052431_case
		.long   _052544_case
		.long   _052300_case
		.long   _0521f1_case
		.long   _051e1d_case
		.long   _052367_case
		.long   _0522d7_case
		.long   _0522ae_case
		.long   _05209b_case
		.long   _052013_case
		.long   _052654_case
		.long   _052654_case
		.long   _052763_case
		.long   _05270d_case
		.long   _051eba_case
		.long   _0521b6_case
		.long   _051f77_case
		.long   _051e4e_case
		.long   _0520ed_case




_051c54_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    _0ceca8_data,%edx
		mov    _0cecb6_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		lea    0x000140(%eax),%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %eax,%edi
		cmpb   $0x000000,_0ceeb1_data
		je     _052832_jump

	_051c90_jump:
		xor    %eax,%eax
		mov    _0ceeb3_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0ceeb4_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096ba8_data(%edx),%edx
		mov    %al,_0ceeb4_data
		mov    (%edx,%ebx,1),%al
		mov    %al,_0e3cd0_data
		xor    %ebx,%ebx
		sub    $0x000002,%al
		mov    %ebx,_0cda08_data
		cmp    $0x000018,%al
		ja     _052825_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_051bf0_switch(,%eax,4)

	_051cdb_case:
		incb   _0ceeb3_data

	_051ce1_case:
		xor    %dl,%dl
		mov    %dl,_0ceeb4_data
		movb   $0x000001,_0ceeb1_data
		jmp    _052825_jump

	_051cf5_case:
		mov    _0ceeae_data,%al
		mov    %al,_0ceeb3_data
		mov    _0ceeac_data,%al
		mov    %al,_0ceeb4_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0ceeb3_data,%al
		mov    _0ceeb4_data,%dl
		mov    _096ba8_data(,%eax,4),%eax
		mov    (%edx,%eax,1),%al
		mov    %al,_0e3cd0_data
		cmp    $0x00001a,%al
		je     _051d2f_jump
		cmp    $0x00000e,%al
		jne    _051d6d_jump

	_051d2f_jump:
		mov    _0e3cd0_data,%bl
		cmp    $0x00001a,%bl
		je     _051d43_jump
		cmp    $0x00000e,%bl
		jne    _051e01_jump

	_051d43_jump:
		mov    _0ceeb4_data,%cl
		xor    %eax,%eax
		xor    %edx,%edx
		inc    %cl
		mov    _0ceeb3_data,%al
		mov    %cl,%dl
		mov    _096ba8_data(,%eax,4),%eax
		mov    (%edx,%eax,1),%al
		mov    %cl,_0ceeb4_data
		mov    %al,_0e3cd0_data
		jmp    _051d2f_jump

	_051d6d_jump:
		cmp    $0x000014,%al
		jne    _051d80_jump
		mov    %dl,%dh
		inc    %dh
		mov    %dh,_0ceeb4_data
		jmp    _051e01_jump

	_051d80_jump:
		cmp    $0x000012,%al
		je     _051d90_jump
		cmp    $0x000013,%al
		je     _051d90_jump
		cmp    $0x000015,%al
		jne    _051e01_jump

	_051d90_jump:
		cmpb   $0x000015,_0e3cd0_data
		jne    _051d9f_jump
		incb   _0ceeb4_data

	_051d9f_jump:
		mov    _0ceeb4_data,%dl
		xor    %eax,%eax
		inc    %dl
		mov    _0ceeb3_data,%al
		mov    %dl,_0ceeb4_data

	_051db4_jump:
		xor    %edx,%edx
		mov    _096ba8_data(,%eax,4),%eax
		mov    _0ceeb4_data,%dl
		mov    (%edx,%eax,1),%al
		mov    %al,_0e3cd0_data
		mov    _0e3cd0_data,%ch
		cmp    $0x000015,%ch
		je     _051ddb_jump
		cmp    $0x000014,%ch
		jne    _051e01_jump

	_051ddb_jump:
		cmpb   $0x000015,_0e3cd0_data
		jne    _051dea_jump
		incb   _0ceeb4_data

	_051dea_jump:
		mov    _0ceeb4_data,%dh
		xor    %eax,%eax
		inc    %dh
		mov    _0ceeb3_data,%al
		mov    %dh,_0ceeb4_data
		jmp    _051db4_jump

	_051e01_jump:
		mov    $0x000001,%al
		mov    $0x0000ff,%ch
		mov    %al,_0ceeb1_data
		xor    %ah,%ah
		mov    %ch,_0ceeae_data
		mov    %ah,_0e3cd2_data
		jmp    _052825_jump

	_051e1d_case:
		mov    _0ceeb4_data,%al
		xor    %cl,%cl
		and    $0x0000ff,%eax
		mov    %cl,_0ceeb4_data
		mov    (%edx,%eax,1),%al
		cmp    _0ceeb3_data,%al
		jne    _051e3c_jump
		inc    %al

	_051e3c_jump:
		mov    %al,_0ceeb3_data
		xor    %ah,%ah
		mov    %ah,_0ceeb1_data
		jmp    _052825_jump

	_051e4e_case:
		cmpb   $0x000005,0x000077(%esi)
		jne    _051e62_jump
		call   _077c40_func
		orb    $0x000001,_0cec78_data
		jmp    _051ead_jump

	_051e62_jump:
		mov    $0xffff8300,%ebx
		mov    _0cec78_data,%dl
		mov    $_0cda94_data,%eax
		or     $0x000002,%dl
		mov    %bx,_0ceca6_data
		mov    $0x000007,%ebx
		mov    %dl,_0cec78_data
		mov    $0x000003,%edx
		call   _01d374_func
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		call   _01d224_func
		mov    $0x000001,%dh
		inc    %eax
		mov    %dh,_0ceeb8_data
		mov    %ax,0x000048(%esi)

	_051ead_jump:
		xor    %bh,%bh
		mov    %bh,_0ceeb1_data
		jmp    _052825_jump

	_051eba_case:
		cmpb   $0x00000c,0x000077(%esi)
		jne    _051ed3_jump
		mov    $0x000013,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _051f4f_jump

	_051ed3_jump:
		mov    _0cc1f0_data,%eax
		mov    _0cc1f4_data,%dx
		xor    %ebx,%ebx
		test   %dx,%dx
		jle    _051f4f_jump

	_051ee6_jump:
		cmpw   $0x0000ab,0x000060(%eax)
		jne    _051f44_jump
		mov    (%eax),%edx
		mov    %edx,(%esi)
		mov    0x000004(%eax),%edx
		mov    %edx,0x000004(%esi)
		mov    0x000008(%eax),%edx
		mov    %edx,0x000008(%esi)
		mov    0x00000c(%eax),%edx
		mov    %edx,0x00000c(%esi)
		mov    0x000044(%eax),%dx
		mov    %dx,0x000044(%esi)
		mov    0x00006d(%eax),%dl
		mov    %dl,0x00006d(%esi)
		mov    0x00006c(%eax),%dl
		mov    0x000069(%esi),%bl
		mov    %dl,0x00006c(%esi)
		add    $0x000004,%bl
		mov    0x00006a(%eax),%al
		movb   $0x000000,0x00006b(%esi)
		mov    %bl,0x000069(%esi)
		mov    0x000081(%esi),%bh
		mov    %al,0x00006a(%esi)
		and    $0x0000f7,%bh
		xor    %ecx,%ecx
		mov    %bh,0x000081(%esi)
		mov    %ecx,_0cdab8_data
		jmp    _051f4f_jump

	_051f44_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %dx,%bx
		jl     _051ee6_jump

	_051f4f_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		mov    0x000048(%esi),%ax
		xor    %cl,%cl
		add    $0x000080,%eax
		mov    %cl,_0ceeb1_data
		mov    %ax,0x000048(%esi)
		jmp    _052825_jump

	_051f77_case:
		cmpb   $0x00000c,0x000077(%esi)
		jne    _051f81_jump
		subb   $0x000010,0x000069(%esi)

	_051f81_jump:
		mov    0x000081(%esi),%al
		and    $0x0000f7,%al
		mov    _0cecaa_data,%dx
		mov    %al,0x000081(%esi)
		xor    %eax,%eax
		add    $0x0000a0,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %dx,_0cec94_data
		mov    _0cec92_data,%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		xor    %eax,%eax
		mov    _0cec62_data,%dx
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    $0x000001,%ebx
		mov    %dx,_0cec8e_data
		mov    %esi,%eax
		mov    $0x000002,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		movb   $0x000002,0x000072(%esi)
		call   _05efb0_func
		xor    %dl,%dl
		mov    $0x0000ff,%ah
		mov    %dl,_0ceea9_data
		mov    $0x000001,%dh
		mov    %ah,_0ceea8_data
		mov    %dh,_0ceeaf_data
		mov    %dl,_0ceeb1_data
		jmp    _052825_jump

	_052013_case:
		mov    _0cecaa_data,%ax
		xor    %edx,%edx
		add    $0x0000a0,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %ax,_0cec94_data
		mov    _0cec62_data,%ax
		mov    _0cc4a4_data,%dx
		sub    $0x0000e6,%eax
		add    %edx,%eax
		mov    $0x000006,%ebx
		mov    %ax,_0cec8e_data
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		mov    $0x0000ff,%ch
		call   _05efb0_func
		mov    $0x000001,%ah
		mov    $0x000001,%edx
		mov    %ch,_0ceea8_data
		mov    %ch,_0ceea9_data
		mov    $0x0000ff,%ecx
		mov    %ah,_0ceeaf_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018690_func
		xor    %dl,%dl
		mov    %dl,_0ceeb1_data
		jmp    _052825_jump

	_05209b_case:
		mov    $0x000005,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		xor    %dh,%dh
		mov    %dh,_0ceeb1_data
		jmp    _052825_jump

	_0520c4_case:
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		xor    %ah,%ah
		mov    %ah,_0ceeb1_data
		jmp    _052825_jump

	_0520ed_case:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _052125_jump
		cmpb   $0x000014,0x00006c(%esi)
		jne    _052125_jump
		mov    %esi,%eax
		call   _01db14_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		xor    %al,%al
		mov    %al,_0ceeb1_data
		jmp    _052825_jump

	_052125_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    %al,%dl
		mov    %esi,%eax
		call   _01db14_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _052825_jump
		mov    %dl,%al
		mov    0x000081(%esi),%bh
		and    $0x000001,%al
		and    $0x0000f7,%bh
		xor    %edx,%edx
		shl    $0x000003,%al
		mov    %bh,%cl
		mov    %bh,0x000081(%esi)
		or     %al,%cl
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    %cl,0x000081(%esi)
		call   _01d374_func
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01d224_func
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		mov    0x000048(%esi),%dx
		add    %ecx,%edx
		xor    %ch,%ch
		mov    %dx,0x000048(%esi)
		jmp    _05281f_jump

	_0521b6_case:
		mov    _0cecaa_data,%dx
		xor    %eax,%eax
		add    $0x0000a0,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		sub    $0x000030,%edx
		mov    _0cdabc_data,%bh
		mov    %dx,_0ceca6_data
		test   $0x000001,%bh
		je     _0521e8_jump
		orb    $0x000001,_0ceca6_data
		jmp    _052221_case

	_0521e8_jump:
		andb   $0x0000fe,_0ceca6_data
		jmp    _052221_case

	_0521f1_case:
		xor    %dl,%dl
		mov    %dl,_0ceeb0_data
		mov    _0e3cd2_data,%dh
		movb   $0x000003,0x00007e(%esi)
		test   %dh,%dh
		jne    _052213_jump
		movb   $0x000001,_0ceeb1_data
		jmp    _052825_jump

	_052213_jump:
		mov    $0x000004,%bh
		mov    %dl,_0e3cd2_data
		mov    %bh,_0e3cd0_data

	_052221_case:
		mov    _0cecac_data,%dx
		mov    _0cc4a4_data,%cx
		mov    _0e3cd0_data,%bl
		add    %ecx,%edx
		mov    0x000028(%esi),%ax
		sub    $0x000080,%edx
		mov    %ax,_0cec94_data
		mov    %dx,_0cec8e_data
		cmp    $0x000004,%bl
		jne    _05225a_jump
		mov    $0x000008,%ebx
		jmp    _05225f_jump

	_05225a_jump:
		mov    $0x000006,%ebx

	_05225f_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x0000ff,%bh
		mov    $0x000001,%ch
		mov    $0x000001,%edx
		mov    %esi,%eax
		mov    %bh,_0ceea8_data
		mov    %ch,_0ceeaf_data
		mov    $0x0000ff,%ecx
		mov    %bh,_0ceea9_data
		mov    %ecx,%ebx
		call   _018690_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _05efb0_func
		xor    %al,%al
		mov    %al,_0ceeb1_data
		jmp    _052825_jump

	_0522ae_case:
		mov    $0x000014,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		xor    %bl,%bl
		mov    %bl,_0ceeb1_data
		jmp    _052825_jump

	_0522d7_case:
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		xor    %bh,%bh
		mov    %bh,_0ceeb1_data
		jmp    _052825_jump

	_052300_case:
		mov    %esi,%eax
		call   _01db14_func
		mov    0x000081(%esi),%ch
		xor    %edx,%edx
		test   $0x000008,%ch
		sete   %dl
		mov    %esi,%eax
		call   _051b14_func
		mov    _0cecaa_data,%eax
		sar    $0x000010,%eax
		sub    $0x000080,%eax
		mov    %eax,0x00002c(%esi)
		testb  $0x000008,0x000081(%esi)
		je     _05234f_jump
		mov    0x000028(%esi),%ecx
		mov    0x000081(%esi),%dl
		sub    $0x000030,%ecx
		and    $0x0000f7,%dl
		mov    %ecx,0x000028(%esi)
		mov    %dl,0x000081(%esi)
		jmp    _052367_case

	_05234f_jump:
		mov    0x000028(%esi),%ebx
		mov    0x000081(%esi),%ah
		add    $0x000030,%ebx
		or     $0x000008,%ah
		mov    %ebx,0x000028(%esi)
		mov    %ah,0x000081(%esi)

	_052367_case:
		mov    0x000081(%esi),%al
		mov    $_0cec8e_data,%ebx
		shl    $0x000004,%al
		xor    %dh,%dh
		shr    $0x000007,%al
		mov    %dh,_0e3cd1_data
		mov    %al,(%esp)
		mov    %esi,%eax
		mov    $_0cec94_data,%edx
		call   _01db14_func
		mov    %esi,%eax
		call   _051910_func
		mov    $0x000008,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000002,%cl
		call   _01d374_func
		mov    $0x000010,%bl
		mov    $0x000001,%edx
		mov    %cl,_0ceeaf_data
		mov    %esi,%eax
		mov    $0x0000ff,%ecx
		mov    %bl,_0ceea8_data
		mov    %bl,_0ceea9_data
		mov    %ecx,%ebx
		call   _018690_func
		cmpb   $0x00000d,_0e3cd0_data
		jne    _0523de_jump
		movw   $0x00ffc0,0x000042(%esi)
		jmp    _0523e4_jump

	_0523de_jump:
		movw   $0x000000,0x000040(%esi)

	_0523e4_jump:
		mov    (%esp),%al
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%esi)
		shl    $0x000003,%al
		mov    %ah,%dl
		mov    $0x000001,%ebx
		or     %al,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		mov    $0x000002,%edx
		call   _05efb0_func
		xor    %dh,%dh
		mov    %dh,_0ceeb1_data
		jmp    _052825_jump

	_052423_case:
		mov    $0x00000c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func

	_052431_case:
		cmpb   $0x000008,_0e3cd0_data
		jne    _052448_jump
		mov    $0x00000b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func

	_052448_jump:
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _051b14_func
		test   %ax,%ax
		jle    _052486_jump
		mov    _0cecaa_data,%dx
		mov    0x000081(%esi),%bl
		xor    %eax,%eax
		and    $0x0000f7,%bl
		mov    0x000068(%esi),%al
		mov    %bl,0x000081(%esi)
		sub    %eax,%edx
		mov    0x000028(%esi),%ebx
		mov    %edx,%eax
		add    $0x000030,%ebx
		sub    $0x000030,%eax
		mov    %ebx,0x000028(%esi)
		jmp    _0524ad_jump

	_052486_jump:
		orb    $0x000008,0x000081(%esi)
		mov    0x000028(%esi),%edx
		sub    $0x000030,%edx
		mov    _0cecb8_data,%ax
		mov    %edx,0x000028(%esi)
		xor    %edx,%edx
		add    $0x000140,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		add    $0x000030,%eax

	_0524ad_jump:
		mov    %ax,_0cec94_data
		mov    _0cec60_data,%eax
		sar    $0x000010,%eax
		sub    $0x0000e6,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,_0cec8e_data
		xor    %eax,%eax
		mov    _0ceeb3_data,%al
		mov    $0x000001,%ch
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0ceeb4_data,%al
		mov    %ch,_0ceeaf_data
		mov    %al,%bl
		inc    %al
		mov    _096ba8_data(%edx),%edx
		mov    %al,_0ceeb4_data
		xor    %eax,%eax
		mov    $0x0000ff,%ecx
		mov    (%edx,%ebx,1),%al
		mov    $0x0000ff,%bh
		shl    $0x00000a,%eax
		mov    $0x000001,%edx
		mov    %eax,_0cda08_data
		mov    %bh,_0ceea8_data
		mov    %bh,_0ceea9_data
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _05efb0_func
		xor    %al,%al
		mov    %al,_0ceeb1_data
		jmp    _052825_jump

	_052544_case:
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _051b14_func
		test   %ax,%ax
		jle    _05258b_jump
		addl   $0x000050,0x000028(%esi)
		xor    %eax,%eax
		mov    _0cecaa_data,%dx
		mov    0x000068(%esi),%al
		mov    0x000081(%esi),%bh
		sub    %eax,%edx
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%esi)
		sub    $0x000050,%eax
		jmp    _0525ba_jump

	_05258b_jump:
		mov    _0cecb8_data,%ax
		mov    0x000081(%esi),%bl
		mov    0x000028(%esi),%ebp
		xor    %edx,%edx
		or     $0x000008,%bl
		sub    $0x000060,%ebp
		add    $0x000140,%eax
		mov    0x000068(%esi),%dl
		mov    %bl,0x000081(%esi)
		sub    %edx,%eax
		mov    %ebp,0x000028(%esi)
		add    $0x000040,%eax

	_0525ba_jump:
		mov    %ax,_0cec94_data
		mov    _0cec60_data,%eax
		sar    $0x000010,%eax
		sub    $0x0000b4,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,_0cec8e_data
		xor    %eax,%eax
		mov    _0ceeb3_data,%al
		lea    0x000000(,%eax,4),%edx
		xor    %ebx,%ebx
		mov    _0ceeb4_data,%al
		mov    %al,%bl
		inc    %al
		mov    _096ba8_data(%edx),%edx
		mov    %al,_0ceeb4_data
		mov    (%edx,%ebx,1),%al
		mov    $0x0000ff,%cl
		and    $0x0000ff,%eax
		mov    $0x000001,%edx
		shl    $0x00000a,%eax
		mov    %cl,_0ceea8_data
		mov    %cl,_0ceea9_data
		mov    $0x0000ff,%ecx
		mov    %eax,_0cda08_data
		mov    $0x000001,%al
		mov    %ecx,%ebx
		mov    %al,_0ceeaf_data
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _05efb0_func
		xor    %ah,%ah
		mov    %ah,_0ceeb1_data
		jmp    _052825_jump

	_052654_case:
		mov    _0cec60_data,%eax
		sar    $0x000010,%eax
		sub    $0x000048,%eax
		mov    %eax,0x00002c(%esi)
		cmpb   $0x000013,_0e3cd0_data
		jne    _05266f_jump
		subl   $0x000030,0x00002c(%esi)

	_05266f_jump:
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _051b14_func
		test   %ax,%ax
		jle    _052694_jump
		andb   $0x0000f7,0x000081(%esi)
		addl   $0x000044,0x000028(%esi)
		mov    0x000028(%esi),%ax
		sub    $0x000018,%eax
		jmp    _0526a8_jump

	_052694_jump:
		orb    $0x000008,0x000081(%esi)
		subl   $0x00004c,0x000028(%esi)
		mov    0x000028(%esi),%ax
		add    $0x000010,%eax

	_0526a8_jump:
		mov    %ax,_0cec94_data
		mov    $0x00000e,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x0000ff,%ecx
		call   _01d374_func
		mov    $0x0000ff,%dh
		mov    0x00002c(%esi),%ax
		mov    $0x000001,%bh
		mov    %ax,_0cec8e_data
		mov    %dh,_0ceea8_data
		mov    %dh,_0ceea9_data
		mov    %bh,_0ceeaf_data
		mov    $0x000001,%edx
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _018690_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %cl,%cl
		call   _05efb0_func
		mov    %cl,_0ceeb1_data
		jmp    _052825_jump

	_05270d_case:
		mov    $0x00000e,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		mov    _0ceeb4_data,%al
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    _0ceeb3_data,%dl
		mov    %al,%bl
		inc    %al
		mov    _096ba8_data(,%edx,4),%edx
		mov    %al,_0ceeb4_data
		mov    (%edx,%ebx,1),%al
		mov    0x000048(%esi),%dx
		xor    %ah,%ah
		imul   %eax,%edx
		mov    %ah,_0ceeb1_data
		mov    %dx,0x000048(%esi)
		jmp    _052825_jump

	_052763_case:
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		movswl %di,%edx
		add    %ecx,%eax
		cmp    %edx,%eax
		jle    _05279e_jump
		mov    0x000081(%esi),%dh
		xor    %eax,%eax
		and    $0x0000f7,%dh
		mov    0x000068(%esi),%al
		mov    %dh,0x000081(%esi)
		mov    _0cecaa_data,%dx
		sub    %eax,%edx
		mov    %edx,%eax
		sub    $0x000038,%eax
		mov    %ax,_0cec94_data
		jmp    _0527cb_jump

	_05279e_jump:
		mov    0x000081(%esi),%dl
		or     $0x000008,%dl
		xor    %eax,%eax
		mov    %dl,0x000081(%esi)
		mov    _0cecb8_data,%dx
		mov    0x000068(%esi),%al
		add    $0x000140,%edx
		sub    %eax,%edx
		add    $0x000030,%edx
		mov    %dx,_0cec94_data

	_0527cb_jump:
		mov    $0x000004,%ebx
		mov    0x00002c(%esi),%ax
		xor    %edx,%edx
		mov    %ax,_0cec8e_data
		mov    %esi,%eax
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		mov    $0x000001,%cl
		call   _05efb0_func
		mov    $0x0000ff,%bl
		mov    $0x000001,%edx
		mov    %cl,_0ceeaf_data
		mov    %esi,%eax
		mov    $0x0000ff,%ecx
		mov    %bl,_0ceea8_data
		mov    %bl,_0ceea9_data
		mov    %ecx,%ebx
		call   _018690_func
		xor    %ch,%ch

	_05281f_jump:
		mov    %ch,_0ceeb1_data

	_052825_jump:
		cmpb   $0x000000,_0ceeb1_data
		jne    _051c90_jump

	_052832_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05283c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%edi
		mov    0x00006c(%eax),%al
		xor    %ebp,%ebp
		cmp    $0x00000b,%al
		jb     _052870_jump
		jbe    _052864_jump
		cmp    $0x00000c,%al
		jne    _052870_jump
		mov    $0x000003,%ah
		mov    $0x000033,%dl
		mov    %ah,0x000014(%esp)
		mov    %dl,0x000010(%esp)
		jmp    _052870_jump

	_052864_jump:
		mov    $0x000003,%dh
		mov    $0x000034,%bl
		mov    %dh,0x000014(%esp)
		mov    %bl,0x000010(%esp)

	_052870_jump:
		mov    _0cc1f0_data,%esi
		mov    _0cc1f4_data,%cx
		xor    %eax,%eax
		test   %cx,%cx
		jle    _0529df_jump

	_052888_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000010(%esp),%dl
		mov    0x000060(%esi),%bx
		cmp    %edx,%ebx
		jne    _0529cf_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _0529cf_jump
		lea    0x000004(%esp),%edx
		lea    0x00000c(%esp),%ecx
		mov    0x000081(%esi),%bh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		call   _01f304_func
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		xor    %edx,%edx
		mov    %edi,%eax
		mov    0x00001c(%esp),%dl
		call   _01d710_func
		mov    -0x000002(%esp),%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sar    %edx
		add    %edx,%ebx
		mov    %ebx,0x000028(%esi)
		xor    %edx,%edx
		mov    0x00000a(%esp),%ebx
		mov    0x000074(%esi),%dl
		mov    0x000028(%esi),%ax
		sar    $0x000010,%ebx
		mov    %ax,0x00003c(%esi)
		sub    %edx,%ebx
		mov    %ebx,0x00002c(%esi)
		mov    0x00002c(%esi),%ax
		mov    0x000010(%esp),%cl
		mov    %ax,0x00003e(%esi)
		cmp    $0x000033,%cl
		jb     _05294f_jump
		jbe    _052933_jump
		cmp    $0x000034,%cl
		je     _052941_jump
		jmp    _05294f_jump

	_052933_jump:
		movw   $0x000001,0x000050(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _05294f_jump

	_052941_jump:
		movw   $0x000003,0x000050(%esi)
		mov    0x000040(%edi),%ax
		mov    %ax,0x000040(%esi)

	_05294f_jump:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		movw   $0x000000,0x000042(%esi)
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%esi),%dl
		mov    0x000002(%ebx,%edx,8),%al
		mov    %al,0x00006a(%esi)
		mov    %esi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01db8c_func
		movb   $0x000000,0x000071(%esi)
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		mov    0x000081(%esi),%dl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%dl
		and    $0x000008,%al
		mov    %dl,0x000081(%esi)
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,%bl
		mov    %dh,0x000081(%esi)
		and    $0x0000bf,%bl
		mov    %esi,%ebp
		mov    %bl,0x000081(%esi)
		mov    %ebp,%eax
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0529cf_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %cx,%ax
		jl     _052888_jump

	_0529df_jump:
		mov    %ebp,%eax
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0529ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		movzbw 0x000068(%eax),%di
		add    0x000028(%eax),%di
		mov    0x00006c(%eax),%al
		mov    %di,0x000008(%esp)
		cmp    $0x00000b,%al
		jb     _052a65_jump
		jbe    _052a46_jump
		cmp    $0x00000c,%al
		jne    _052a65_jump
		mov    0x00003e(%esi),%eax
		mov    _0cdad2_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		add    %eax,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		movswl %di,%edi
		sub    %eax,%edi
		jmp    _052a65_jump

	_052a46_jump:
		mov    0x00003e(%esi),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000003,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    %eax,%ebx

	_052a65_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _052a6e_jump
		neg    %eax

	_052a6e_jump:
		mov    %ax,0x000004(%esp)
		test   %bx,%bx
		jge    _052a7a_jump
		add    %ebx,%edi

	_052a7a_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000069(%esi),%al
		mov    _0cecac_data,%bx
		add    %eax,%edx
		mov    _0cecb6_data,%ax
		sub    %ebx,%eax
		mov    _0cecb6_data,%ecx
		add    $0x0000c8,%eax
		mov    %dx,0x000010(%esp)
		mov    %ax,(%esp)
		mov    _0cec9e_data,%eax
		mov    _0cec9a_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		sar    $0x000010,%ecx
		add    %eax,%edx
		mov    _0cecb8_data,%eax
		mov    _0cec9c_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		sar    %eax
		add    $0x000130,%ecx
		add    %ebx,%eax
		mov    _0ceca8_data,%ebx
		mov    %ax,0x00000c(%esp)
		mov    0x000006(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _052aff_jump
		cmp    %ecx,%eax
		jg     _052aff_jump
		mov    $0x000001,%eax
		jmp    _052b01_jump

	_052aff_jump:
		xor    %eax,%eax

	_052b01_jump:
		test   %eax,%eax
		je     _052b60_jump
		cmp    %di,%dx
		jl     _052b60_jump
		mov    0x00000c(%esp),%eax
		cmp    0x000010(%esp),%ax
		jl     _052b60_jump
		mov    0x000002(%esp),%eax
		movswl %di,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		add    %ebx,%eax
		cmp    %eax,%edx
		jg     _052b60_jump
		mov    0x00000e(%esp),%eax
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jg     _052b60_jump
		mov    %esi,%eax
		mov    $0x000010,%ebx
		call   _05283c_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d374_func
		subw   $0x000040,_0cec8e_data

	_052b60_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052b6c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		call   _0519fc_func
		test   %al,%al
		je     _052d58_jump
		mov    0x00005a(%esi),%dx
		test   %dx,%dx
		je     _052b8f_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    %bx,0x00005a(%esi)

	_052b8f_jump:
		mov    _0ceeb0_data,%ah
		test   %ah,%ah
		je     _052ba3_jump
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0ceeb0_data

	_052ba3_jump:
		mov    0x000081(%esi),%dh
		test   $0x000001,%dh
		jne    _052d51_jump
		mov    0x000070(%esi),%al
		cmp    $0x000002,%al
		jne    _052c0c_jump
		cmpw   $0x00000e,_096bd0_data
		jne    _052be8_jump
		cmpb   $0x00000f,0x00006a(%esi)
		jne    _052be8_jump
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)

	_052be8_jump:
		mov    $0xffff8300,%ecx
		mov    %cx,_0cec94_data
		mov    %cx,_0cec8e_data
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		jmp    _052d4a_jump

	_052c0c_jump:
		mov    _0e3cd0_data,%al
		cmp    $0x00000a,%al
		jb     _052c20_jump
		jbe    _052c29_jump
		cmp    $0x00000d,%al
		je     _052c29_jump
		jmp    _052d11_jump

	_052c20_jump:
		cmp    $0x000004,%al
		je     _052c5a_jump
		jmp    _052d11_jump

	_052c29_jump:
		mov    $_0cec8e_data,%ebx
		mov    %esi,%eax
		mov    $_0cec94_data,%edx
		call   _01db14_func
		mov    %esi,%eax
		call   _051910_func
		mov    $0x000018,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05197c_func
		test   %al,%al
		je     _052c5a_jump
		movb   $0x000001,_0ceeb1_data

	_052c5a_jump:
		cmpb   $0x000002,0x000076(%esi)
		jae    _052d11_jump
		cmpb   $0x000000,_0cdbc2_data
		je     _052d11_jump
		cmpb   $0x000000,_0e3cd1_data
		jne    _052d11_jump
		cmpb   $0x000000,_0cee79_data
		jne    _052d11_jump
		cmpb   $0x000000,_0ca314_data
		jne    _052d11_jump
		mov    $0x000001,%dl
		xor    %eax,%eax
		mov    %dl,_0e3cd1_data
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    0x000069(%esi),%dl
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x00002c(%esi),%ecx
		mov    _0cdb20_data,%ebx
		add    %eax,%ecx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%ebx),%dl
		mov    0x000074(%ebx),%al
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		add    0x00002c(%ebx),%eax
		cmp    %eax,%ecx
		jle    _052ce3_jump
		addw   $0x000050,0x000042(%esi)
		jmp    _052ce8_jump

	_052ce3_jump:
		subw   $0x000050,0x000042(%esi)

	_052ce8_jump:
		xor    %edx,%edx
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%dl
		mov    _0cdb20_data,%eax
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000028(%eax),%ecx
		mov    0x000068(%eax),%bl
		add    %ecx,%ebx
		cmp    %ebx,%edx
		jle    _052d0c_jump
		addw   $0x000050,0x000040(%esi)
		jmp    _052d11_jump

	_052d0c_jump:
		subw   $0x000050,0x000040(%esi)

	_052d11_jump:
		mov    %esi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0ceea9_data,%cl
		mov    _0ceea8_data,%bl
		mov    _0ceeaf_data,%dl
		call   _018690_func
		cmpb   $0x000000,0x00006d(%esi)
		jne    _052d4a_jump
		mov    0x00006c(%esi),%bl
		cmp    $0x00000c,%bl
		je     _052d43_jump
		cmp    $0x00000b,%bl
		jne    _052d4a_jump

	_052d43_jump:
		mov    %esi,%eax
		call   _0529ec_func

	_052d4a_jump:
		mov    %esi,%eax
		call   _018864_func

	_052d51_jump:
		mov    %esi,%eax
		call   _051c54_func

	_052d58_jump:
		xor    %eax,%eax
		mov    0x000081(%esi),%bh
		mov    0x00006a(%esi),%al
		and    $0x0000fe,%bh
		mov    %ax,_096bd0_data
		mov    %bh,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_052d78_switch:
		.long   _052def_case
		.long   _052df5_case
		.long   _052e1a_case
		.long   _052e02_case
		.long   _052e1a_case
		.long   _052e1a_case
		.long   _052e1a_case
		.long   _052e1a_case
		.long   _052e1a_case
		.long   _052e1a_case
		.long   _052e0b_case




_052da4_func:
		push   %ebx
		push   %edx
		mov    _0ceeb3_data,%bl
		cmp    $0x000008,%bl
		je     _052dbf_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %bl,%al
		mov    _0ceeb4_data,%dl
		jmp    _052dce_jump

	_052dbf_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0ceeae_data,%al
		mov    _0ceeac_data,%dl

	_052dce_jump:
		mov    _096ba8_data(,%eax,4),%eax
		add    %edx,%eax
		mov    (%eax),%dl
		sub    $0x000002,%dl
		cmp    $0x00000a,%dl
		ja     _052e1a_case
		and    $0x0000ff,%edx
		jmp    *%cs:_052d78_switch(,%edx,4)

	_052def_case:
		xor    %eax,%eax
		mov    %bl,%al
		jmp    _052e13_jump

	_052df5_case:
		xor    %eax,%eax
		mov    %bl,%al
		mov    _096bac_data(,%eax,4),%eax
		jmp    _052e1a_case

	_052e02_case:
		xor    %eax,%eax
		mov    _0ceeae_data,%al
		jmp    _052e13_jump

	_052e0b_case:
		mov    0x000001(%eax),%al
		and    $0x0000ff,%eax

	_052e13_jump:
		mov    _096ba8_data(,%eax,4),%eax

	_052e1a_case:
		mov    (%eax),%al
		mov    %bl,_0ceeb3_data
		pop    %edx
		pop    %ebx
		ret    



_052e28_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000008,_0ceeb3_data
		jne    _052e42_jump
		mov    $_0ceeae_data,%eax
		mov    $_0ceeac_data,%ebx
		jmp    _052e4c_jump

	_052e42_jump:
		mov    $_0ceeb3_data,%eax
		mov    $_0ceeb4_data,%ebx

	_052e4c_jump:
		mov    (%eax),%cl
		cmpb   $0x00000c,0x000077(%edx)
		jne    _052e90_jump
		mov    0x000076(%edx),%ch
		cmp    $0x000009,%ch
		jbe    _052e61_jump
		movb   $0x000003,(%eax)
		jmp    _052e89_jump

	_052e61_jump:
		cmp    $0x000007,%ch
		jbe    _052e6b_jump
		movb   $0x000005,(%eax)
		jmp    _052e89_jump

	_052e6b_jump:
		cmp    $0x000004,%ch
		jbe    _052e75_jump
		movb   $0x000006,(%eax)
		jmp    _052e89_jump

	_052e75_jump:
		test   %ch,%ch
		jbe    _052e7e_jump
		movb   $0x000007,(%eax)
		jmp    _052e89_jump

	_052e7e_jump:
		xor    %dl,%dl
		movb   $0x000009,(%eax)
		mov    %dl,_0ceeb0_data

	_052e89_jump:
		cmp    (%eax),%cl
		je     _052e90_jump
		movb   $0x000000,(%ebx)

	_052e90_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_052e94_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmpb   $0x000000,_0ceeb0_data
		jne    _052f7a_jump
		mov    $0x000001,%dl
		mov    %ebx,%eax
		mov    %dl,_0cdbc3_data
		call   _01e6dc_func
		mov    $0x0000ff,%dh
		mov    0x000081(%ebx),%cl
		mov    %ebx,%eax
		or     %dl,%cl
		mov    %dh,_0ceeb0_data
		mov    %cl,0x000081(%ebx)
		call   _052e28_func
		call   _052da4_func
		cmp    $0x000007,%al
		jb     _052eed_jump
		cmp    $0x00000a,%al
		jbe    _052ee6_jump
		cmp    $0x000012,%al
		jb     _052eed_jump
		cmp    $0x000015,%al
		ja     _052eed_jump

	_052ee6_jump:
		movb   $0x000001,_0e3cd2_data

	_052eed_jump:
		mov    0x000076(%ebx),%al
		test   %al,%al
		je     _052f4f_jump
		xor    %ecx,%ecx
		xor    %edx,%edx
		mov    %al,%cl
		mov    0x000077(%ebx),%dl
		add    %edx,%ecx
		lea    0x000000(,%edx,4),%ebx
		sub    %edx,%ebx
		mov    %ebx,%edx
		shl    $0x00000e,%edx
		mov    $0x00000c,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    $0x004000,%eax
		mov    _0ceeb3_data,%dh
		mov    %eax,_0cda00_data
		cmp    $0x000008,%dh
		je     _052f6a_jump
		mov    $0x000008,%bl
		mov    _0ceeb4_data,%al
		mov    %dh,_0ceeae_data
		mov    %al,_0ceeac_data
		mov    %bl,_0ceeb3_data
		jmp    _052f6a_jump

	_052f4f_jump:
		mov    $0x004000,%edx
		mov    $0x000009,%ah
		mov    %edx,_0cda00_data
		mov    $0x000001,%dl
		mov    %ah,_0ceeb3_data
		mov    %dl,_0ceeba_data

	_052f6a_jump:
		xor    %bh,%bh
		mov    $0x000001,%cl
		mov    %bh,_0ceeb4_data
		mov    %cl,_0ceeb1_data

	_052f7a_jump:
		pop    %ecx
		pop    %ebx
		ret    



_052f80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpb   $0x000000,0x000076(%eax)
		jne    _053112_jump
		mov    0x00007f(%eax),%cl
		cmp    $0x000001,%cl
		jb     _052fa8_jump
		jbe    _052fd5_jump
		cmp    $0x000002,%cl
		je     _053018_jump
		jmp    _053047_jump

	_052fa8_jump:
		test   %cl,%cl
		jne    _053047_jump
		mov    _0cdabc_data,%dx
		sub    $0x000032,%edx
		mov    %dx,0x00004a(%eax)
		mov    _0cdac0_data,%dx
		sub    $0x000050,%edx
		mov    $0x000001,%ebx
		mov    %dx,0x000056(%eax)
		mov    %ebx,%edx
		jmp    _053047_jump

	_052fd5_jump:
		cmpw   $0x000000,_0ceca4_data
		jg     _052fe3_jump
		movb   $0x000002,0x00007f(%eax)

	_052fe3_jump:
		mov    _0ced00_data,%dx
		add    0x000050(%eax),%dx
		sub    $0x000064,%edx
		mov    0x000052(%eax),%cx
		mov    %dx,0x00004a(%eax)
		mov    _0cecea_data,%dx
		add    %ecx,%edx
		mov    _0cecf6_data,%bx
		sub    $0x00000a,%edx
		inc    %ebx
		mov    %dx,0x000056(%eax)
		mov    $0x000002,%edx
		jmp    _053047_jump

	_053018_jump:
		mov    _0ced00_data,%dx
		add    $0x0003e8,%edx
		mov    %dx,0x00004a(%eax)
		mov    _0cdac0_data,%dx
		movw   $0x0001f4,0x000050(%eax)
		sub    $0x00007d,%edx
		mov    $0x000003,%ebx
		mov    %dx,0x000056(%eax)
		mov    $0x000001,%edx

	_053047_jump:
		mov    _0ced16_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _05305f_jump
		cmpb   $0x000002,0x00007f(%eax)
		je     _05305f_jump
		movb   $0x000001,0x00007f(%eax)

	_05305f_jump:
		cmpb   $0x000000,_0cee42_data
		je     _053112_jump
		mov    0x000048(%eax),%ecx
		mov    0x000028(%eax),%esi
		sar    $0x000010,%ecx
		cmp    %esi,%ecx
		jle    _0530a7_jump
		mov    0x000040(%eax),%di
		inc    %edi
		mov    %di,0x000040(%eax)
		cmp    %di,%bx
		jge    _05308b_jump
		mov    %bx,0x000040(%eax)

	_05308b_jump:
		mov    0x00003e(%eax),%esi
		mov    0x000028(%eax),%edi
		mov    0x000048(%eax),%ecx
		sar    $0x000010,%esi
		sar    $0x000010,%ecx
		add    %edi,%esi
		cmp    %ecx,%esi
		jle    _0530bc_jump
		dec    %ebx
		mov    %bx,0x000040(%eax)
		jmp    _0530bc_jump

	_0530a7_jump:
		decw   0x000040(%eax)
		mov    0x00003e(%eax),%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jge    _0530bc_jump
		movw   $0x00ffff,0x000040(%eax)

	_0530bc_jump:
		mov    0x000040(%eax),%ebx
		mov    0x00002c(%eax),%ebp
		mov    0x000054(%eax),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%esi
		add    %ebp,%ebx
		cmp    %ebx,%esi
		jle    _0530e5_jump
		mov    0x000042(%eax),%bx
		inc    %ebx
		mov    %bx,0x000042(%eax)
		cmp    %bx,%dx
		jge    _053112_jump
		mov    %dx,0x000042(%eax)
		jmp    _053112_jump

	_0530e5_jump:
		movswl %dx,%ecx
		sub    %ecx,%ebx
		cmp    %ebx,%esi
		jge    _05310c_jump
		decw   0x000042(%eax)
		mov    0x000040(%eax),%ebx
		neg    %ecx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jge    _053112_jump
		mov    %edx,%edi
		mov    %dx,0x000042(%eax)
		neg    %edi
		mov    %di,0x000042(%eax)
		jmp    _053112_jump

	_05310c_jump:
		movw   $0x000000,0x000042(%eax)

	_053112_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05311c_switch:
		.long   _05316f_case
		.long   _053178_case
		.long   _053181_case
		.long   _05318a_case
		.long   _053193_case




_053130_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    _0cecba_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpw   $0x0001f4,0x000050(%eax)
		je     _053199_jump
		mov    0x000076(%ebx),%dl
		dec    %dl
		cmp    $0x000004,%dl
		ja     _053199_jump
		and    $0x0000ff,%edx
		jmp    *%cs:_05311c_switch(,%edx,4)

	_05316f_case:
		movw   $0x000064,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_053178_case:
		movw   $0x000000,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_053181_case:
		movw   $0x00ffb0,0x000050(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_05318a_case:
		movw   $0x00ff9c,0x000052(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_053193_case:
		movw   $0x000000,0x000052(%eax)

	_053199_jump:
		pop    %edx
		pop    %ebx
		ret    



_05319c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		je     _0531c5_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _0531c5_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000001,0x000050(%ecx)
		call   _05efb0_func
		movb   $0x000004,0x000072(%ecx)

	_0531c5_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0531d0_func:
		push   %ecx
		push   %edx
		mov    $0x000019,%ecx
		mov    $_0cee3d_data,%eax
		xor    %edx,%edx
		call   _0814e0_func
		pop    %edx
		pop    %ecx
		ret    



_0531e8_func:
		push   %ebx
		push   %edx
		mov    %al,%bl
		xor    %eax,%eax

	_0531ee_jump:
		incb   _0cee3d_data(%eax)
		xor    %edx,%edx
		mov    _0cee3d_data(%eax),%dl
		cmp    %eax,%edx
		jl     _053208_jump
		xor    %dh,%dh
		mov    %dh,_0cee3d_data(%eax)

	_053208_jump:
		inc    %eax
		cmp    $0x000019,%eax
		jl     _0531ee_jump
		xor    %eax,%eax
		mov    _0ccd14_data,%edx
		mov    %bl,%al
		add    %eax,%edx
		mov    %edx,_0ccd14_data
		pop    %edx
		pop    %ebx
		ret    

_053224_switch:
		.long   _053271_case
		.long   _053364_case
		.long   _053455_case
		.long   _053546_case
		.long   _053637_case
		.long   _053727_case




_05323c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		mov    $0xfffffffe,%edi

	_05324c_jump:
		movswl %bx,%eax
		mov    %edx,%ecx
		add    %eax,%eax
		dec    %ecx
		add    $_0ca388_data,%eax
		cmp    $0x000005,%cx
		ja     _053803_jump
		and    $0x00ffff,%ecx
		jmp    *%cs:_053224_switch(,%ecx,4)

	_053271_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x00001e,(%eax)
		add    $0x000002,%eax
		movw   $0x00002d,(%eax)
		add    $0x000002,%eax
		movw   $0x000023,(%eax)
		add    $0x000002,%eax
		movw   $0x000019,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _05324c_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053364_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x000028,(%eax)
		add    $0x000002,%eax
		movw   $0x000019,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _05324c_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053455_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x00002d,(%eax)
		add    $0x000002,%eax
		movw   $0x000014,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _05324c_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053546_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x000023,(%eax)
		add    $0x000002,%eax
		movw   $0x000032,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _05324c_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053637_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		movw   $0x000023,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x000024(%eax)
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)
		mov    %di,0x000002(%eax)
		add    $0x000002,%eax
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _05324c_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053727_case:
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %di,-0x00003e(%eax)
		mov    %di,-0x00003c(%eax)
		mov    %di,-0x00003a(%eax)
		mov    %di,-0x000038(%eax)
		mov    %di,-0x000036(%eax)
		mov    %di,-0x000034(%eax)
		mov    %di,-0x000032(%eax)
		mov    %di,-0x000030(%eax)
		mov    %di,-0x00002e(%eax)
		mov    %di,-0x00002c(%eax)
		mov    %di,-0x00002a(%eax)
		mov    %di,-0x000028(%eax)
		mov    %di,-0x000026(%eax)
		mov    %di,-0x000024(%eax)
		mov    %di,-0x000022(%eax)
		mov    %di,-0x000020(%eax)
		mov    %di,-0x00001e(%eax)
		mov    %di,-0x00001c(%eax)
		mov    %di,-0x00001a(%eax)
		mov    %di,-0x000018(%eax)
		mov    %di,-0x000016(%eax)
		mov    %di,-0x000014(%eax)
		mov    %di,-0x000012(%eax)
		mov    %di,-0x000010(%eax)
		mov    %di,-0x00000e(%eax)
		mov    %di,-0x00000c(%eax)
		mov    %di,-0x00000a(%eax)
		mov    %di,-0x000008(%eax)
		mov    %di,-0x000006(%eax)
		mov    %di,-0x000004(%eax)
		mov    %di,-0x000002(%eax)
		mov    %di,(%eax)

	_053803_jump:
		inc    %edx
		add    $0x000020,%ebx
		cmp    $0x000006,%dx
		jle    _05324c_jump
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053818_func:
		push   %ebx
		push   %ecx
		cmpl   $0x000000,_0ccd14_data
		jne    _053828_jump
		call   _03b880_func

	_053828_jump:
		mov    $0x000020,%ebx
		mov    _0cec2a_data,%ecx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    _0ceec4_data,%al
		add    $0x000021,%ecx
		cmp    %ebx,%eax
		jl     _05384f_jump
		cmp    %ecx,%eax
		jg     _05384f_jump
		mov    $0x000001,%eax
		jmp    _053851_jump

	_05384f_jump:
		xor    %eax,%eax

	_053851_jump:
		test   %eax,%eax
		je     _053863_jump
		cmpb   $0x000041,_0ceecb_data
		jne    _053863_jump
		call   _03b8a8_func

	_053863_jump:
		testb  $0x000040,_0ceecb_data
		jne    _053871_jump
		call   _03b858_func

	_053871_jump:
		pop    %ecx
		pop    %ebx
		ret    



_053874_func:
		push   %ecx
		cwtl   
		mov    $0x000007,%cl
		mov    _0948fc_data(,%eax,2),%ax
		test   %ax,%ax
		js     _05388a_jump
		sar    %cl,%ax
		jmp    _053893_jump

	_05388a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_053893_jump:
		pop    %ecx
		ret    



_053898_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpw   $0x000000,_0cec96_data
		je     _0538db_jump
		mov    _0cec94_data,%eax
		sar    $0x000010,%eax
		call   _053874_func
		mov    _0cec96_data,%bx
		inc    %ebx
		mov    %eax,%edx
		mov    %bx,_0cec96_data
		cmp    $0x0000ff,%ax
		jne    _0538d4_jump
		xor    %ecx,%ecx
		xor    %eax,%edx
		mov    %cx,_0cec96_data

	_0538d4_jump:
		add    %dx,_0cecea_data

	_0538db_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0538e0_func:
		push   %ebx
		push   %edx
		mov    _0cec90_data,%dx
		movswl %dx,%eax
		mov    _09497a_data(,%eax,2),%ax
		cmp    $0x0000ff,%ax
		je     _05390d_jump
		mov    _0cecea_data,%bx
		add    %eax,%ebx
		inc    %edx
		mov    %bx,_0cecea_data
		jmp    _05390f_jump

	_05390d_jump:
		xor    %edx,%edx

	_05390f_jump:
		mov    %dx,_0cec90_data
		pop    %edx
		pop    %ebx
		ret    



_05391c_func:
		push   %ebx
		push   %edx
		mov    _0cec92_data,%dx
		movswl %dx,%eax
		mov    _09497a_data(,%eax,2),%ax
		cmp    $0x0000ff,%ax
		je     _053949_jump
		mov    _0ced00_data,%bx
		add    %eax,%ebx
		inc    %edx
		mov    %bx,_0ced00_data
		jmp    _05394b_jump

	_053949_jump:
		xor    %edx,%edx

	_05394b_jump:
		mov    %dx,_0cec92_data
		pop    %edx
		pop    %ebx
		ret    



_053958_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    _0cecea_data,%cx
		mov    _0ced00_data,%si
		mov    %eax,%ebx
		cmpw   $0x0000ff,(%edx)
		jne    _053978_jump
		movw   $0x000000,(%edx)

	_053978_jump:
		cmpw   $0x000006,_0cecd4_data
		jne    _053991_jump
		cmpw   $0x000004,_0cecc0_data
		jne    _053991_jump
		movw   $0x000000,(%ebx)

	_053991_jump:
		cmpw   $0x000005,_0cecd4_data
		jne    _0539aa_jump
		cmpw   $0x00000b,_0cecc0_data
		jne    _0539aa_jump
		movw   $0x000000,(%ebx)

	_0539aa_jump:
		mov    _0cecd4_data,%ax
		mov    %cx,_0cecea_data
		mov    %si,_0ced00_data
		cmp    $0x000005,%ax
		jne    _0539d8_jump
		cmpw   $0x000003,_0cecc0_data
		jne    _0539d8_jump
		movw   $0x000000,(%ebx)
		movw   $0x000000,(%edx)

	_0539d8_jump:
		call   _053898_func
		cmpw   $0x000000,_0cec92_data
		jle    _0539ec_jump
		call   _05391c_func

	_0539ec_jump:
		cmpw   $0x000000,_0cec90_data
		jle    _0539fb_jump
		call   _0538e0_func

	_0539fb_jump:
		mov    _0cecea_data,%cx
		mov    (%edx),%ax
		mov    _0ced00_data,%si
		add    %eax,%ecx
		mov    (%ebx),%ax
		mov    _0cecaa_data,%di
		add    %eax,%esi
		cmp    %di,%si
		jge    _053a33_jump
		mov    %edi,%eax
		sub    %esi,%eax
		add    %ax,(%ebx)
		mov    %edi,%esi
		xor    %edi,%edi
		mov    %di,_092208_data
		jmp    _053a55_jump

	_053a33_jump:
		mov    _0cecb8_data,%di
		cmp    %di,%si
		jle    _053a55_jump
		mov    %esi,%eax
		mov    %edi,%esi
		sub    %edi,%eax
		mov    (%ebx),%di
		sub    %eax,%edi
		xor    %eax,%eax
		mov    %di,(%ebx)
		mov    %ax,_092208_data

	_053a55_jump:
		mov    _0cecac_data,%bx
		cmp    %bx,%cx
		jge    _053a7f_jump
		mov    %ebx,%eax
		xor    %edi,%edi
		mov    (%edx),%bx
		sub    %ecx,%eax
		mov    %di,_09220a_data
		add    %eax,%ebx
		mov    _0cecac_data,%cx
		mov    %bx,(%edx)
		jmp    _053aa2_jump

	_053a7f_jump:
		mov    _0cecb6_data,%di
		cmp    %di,%cx
		jle    _053aa2_jump
		mov    %ecx,%eax
		mov    (%edx),%cx
		sub    %edi,%eax
		sub    %eax,%ecx
		mov    %cx,(%edx)
		mov    %edi,%ecx
		xor    %edi,%edi
		mov    %di,_09220a_data

	_053aa2_jump:
		mov    $_0cda94_data,%eax
		mov    %cx,_0cecea_data
		mov    %si,_0ced00_data
		call   _01db8c_func
		mov    _0cecea_data,%cx
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_053ac8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edi
		xor    %esi,%esi

	_053ad1_jump:
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _053b9b_jump

	_053ae9_jump:
		cmpw   $0x0000d0,0x000060(%ecx)
		jne    _053b8b_jump
		mov    0x000024(%ecx),%ebx
		test   %ebx,%ebx
		jne    _053b8b_jump
		mov    0x000081(%ecx),%ah
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01f304_func
		movw   $0x000000,0x00005e(%ecx)
		mov    %ecx,%eax
		mov    %ebx,0x000030(%ecx)
		test   %si,%si
		setne  %bl
		call   _01d374_func
		xor    %ebx,%ebx
		mov    0x000028(%edi),%eax
		mov    0x000068(%edi),%bl
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    %eax,0x000028(%ecx)
		mov    0x000069(%edi),%bl
		mov    0x00002c(%edi),%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		sub    %ebx,%eax
		mov    %eax,0x00002c(%ecx)
		test   %si,%si
		je     _053b69_jump
		mov    $0x000002,%ebx
		jmp    _053b6e_jump

	_053b69_jump:
		mov    $0x000007,%ebx

	_053b6e_jump:
		mov    %ecx,%eax
		mov    %bl,0x00007e(%ecx)
		call   _01db8c_func
		add    $0x000002,%esi
		cmp    $0x000002,%si
		jle    _053ad1_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_053b8b_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _053ae9_jump

	_053b9b_jump:
		add    $0x000002,%esi
		cmp    $0x000002,%si
		jle    _053ad1_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053bb0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edx
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _053bc4_jump
		sar    %cl,%ax
		jmp    _053bcd_jump

	_053bc4_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_053bcd_jump:
		movswl %dx,%edx
		movswl %ax,%ebx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _053bdb_jump
		neg    %eax

	_053bdb_jump:
		mov    %eax,%esi
		and    $0x00000f,%esi
		je     _053c2a_jump
		mov    _0ccd14_data,%edi
		imul   %esi,%edi
		mov    $0x000004,%cl
		mov    %edi,%eax
		test   %eax,%eax
		je     _053bf7_jump
		sar    %cl,%eax
		jmp    _053bfd_jump

	_053bf7_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_053bfd_jump:
		mov    %eax,%ebp
		mov    %edi,%eax
		mov    $0x000004,%cl
		sub    %esi,%eax
		test   %eax,%eax
		je     _053c0d_jump
		sar    %cl,%eax
		jmp    _053c13_jump

	_053c0d_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_053c13_jump:
		sub    %eax,%ebp
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _053c25_jump
		mov    $0x000001,%eax
		jg     _053c25_jump
		neg    %eax

	_053c25_jump:
		imul   %ebp,%eax
		add    %eax,%ebx

	_053c2a_jump:
		mov    %ebx,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_053c34_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ecx,%ecx
		mov    0x00006a(%eax),%cl
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		mov    0x000004(%edx),%ecx
		mov    0x000008(%ecx,%eax,4),%ax
		xor    %al,%al
		and    $0x0000c0,%ah
		and    $0x00ffff,%eax
		sar    $0x00000e,%eax
		xor    %ecx,%ecx
		inc    %eax
		mov    %al,%cl
		cmpb   $0x000000,_0cee3d_data(%ecx)
		jne    _053cb7_jump
		xor    %ecx,%ecx
		mov    0x00006d(%edx),%cl
		mov    0x000081(%edx),%ah
		lea    0x000000(,%ecx,4),%esi
		shl    $0x000004,%ah
		mov    0x00000c(%edx),%ecx
		add    %esi,%ecx
		movzbl 0x00006c(%edx),%esi
		mov    (%ecx),%ecx
		shl    $0x000003,%esi
		shr    $0x000007,%ah
		add    %esi,%ecx
		test   %ah,%ah
		jbe    _053c9e_jump
		cmp    $0x000001,%ah
		je     _053caa_jump
		jmp    _053cb9_jump

	_053c9e_jump:
		movsbw 0x000001(%ecx),%bx
		xor    %ah,%ah
		imul   %eax,%ebx
		jmp    _053cb9_jump

	_053caa_jump:
		xor    %ebx,%ebx
		movsbw (%ecx),%cx
		mov    %al,%bl
		imul   %ecx,%ebx
		jmp    _053cb9_jump

	_053cb7_jump:
		xor    %ebx,%ebx

	_053cb9_jump:
		cmpw   $0x000017,0x000060(%edx)
		jne    _053ce2_jump
		testb  $0x000002,_0cec71_data
		je     _053ce2_jump
		mov    $0x000001,%cl
		mov    %ebx,%eax
		test   %ax,%ax
		js     _053cd7_jump
		sar    %cl,%ax
		jmp    _053ce0_jump

	_053cd7_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_053ce0_jump:
		mov    %eax,%ebx

	_053ce2_jump:
		mov    %bx,0x000040(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_053cea_jump:
		ret    



_053cec_func:
		movl   $0x000001,0x000024(%eax)
		movl   $0x000001,0x00001c(%eax)
		movl   $0x000000,0x000030(%eax)
		test   %dl,%dl
		je     _053cea_jump
		jmp    _0772d8_func



_053d0c_func:
		testb  $0x000004,0x000081(%eax)
		je     _053cea_jump
		movl   $0x000001,0x000024(%eax)
		movl   $0x000001,0x00001c(%eax)
		movl   $0x000000,0x000030(%eax)
		test   %dl,%dl
		je     _053cea_jump
		jmp    _0772d8_func



_053d34_func:
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dx,0x000008(%esp)
		mov    %ebx,%edi
		mov    %cl,0x000010(%esp)
		xor    %edx,%edx
		mov    _0e3cd4_data,%dx
		xor    %ecx,%ecx
		mov    _09288a_data(,%edx,2),%ax
		mov    _09267e_data(,%edx,2),%bx
		mov    %ax,0x000004(%esp)
		mov    0x000068(%edi),%al
		shl    $0x000002,%edx
		mov    %al,0x00000c(%esp)
		mov    _092264_data(%edx),%ah
		mov    %bx,(%esp)
		test   $0x000010,%ah
		je     _053f4d_jump
		test   $0x000080,%ah
		je     _053d9b_jump
		cmpb   $0x000000,_0ceedb_data
		je     _053d9b_jump

	_053d91_jump:
		mov    $0x000001,%ecx
		jmp    _053f4d_jump

	_053d9b_jump:
		mov    _0e3cd4_data,%ax
		cmp    $0x00009d,%ax
		jb     _053e0b_jump
		jbe    _053f03_jump
		cmp    $0x0000d7,%ax
		jb     _053ddf_jump
		jbe    _053d91_jump
		cmp    $0x0000dc,%ax
		jb     _053dd0_jump
		jbe    _053e85_jump
		cmp    $0x0000f4,%ax
		je     _053f48_jump
		jmp    _053f4d_jump

	_053dd0_jump:
		cmp    $0x0000db,%ax
		je     _053edf_jump
		jmp    _053f4d_jump

	_053ddf_jump:
		cmp    $0x0000c0,%ax
		jb     _053e00_jump
		jbe    _053f48_jump
		cmp    $0x0000cc,%ax
		jb     _053f4d_jump
		cmp    $0x0000cd,%ax
		jbe    _053d91_jump
		jmp    _053f4d_jump

	_053e00_jump:
		cmp    $0x0000be,%ax
		je     _053d91_jump
		jmp    _053f4d_jump

	_053e0b_jump:
		cmp    $0x000078,%ax
		jb     _053e41_jump
		jbe    _053d91_jump
		cmp    $0x00008f,%ax
		jb     _053e32_jump
		jbe    _053d91_jump
		cmp    $0x000099,%ax
		je     _053d91_jump
		jmp    _053f4d_jump

	_053e32_jump:
		cmp    $0x00007a,%ax
		je     _053f1b_jump
		jmp    _053f4d_jump

	_053e41_jump:
		cmp    $0x00005e,%ax
		jb     _053e58_jump
		jbe    _053d91_jump
		cmp    $0x000061,%ax
		je     _053e62_jump
		jmp    _053f4d_jump

	_053e58_jump:
		cmp    $0x00000a,%ax
		jne    _053f4d_jump

	_053e62_jump:
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _053f4d_jump
		cmp    $0x0001bc,%si
		jge    _053f4d_jump
		mov    $0x000001,%ecx
		jmp    _053f4d_jump

	_053e85_jump:
		mov    0x000006(%esp),%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		cmp    $0xffffffce,%eax
		jle    _053edf_jump
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _053edf_jump
		cmp    $0x0001f4,%si
		jge    _053edf_jump
		mov    _0cecd4_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpb   $0x000000,0x000076(%eax)
		jne    _053edf_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movb   $0x00000a,0x000076(%eax)
		call   _01d374_func

	_053edf_jump:
		mov    _0cecd4_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		cmpb   $0x000000,0x000076(%edx,%eax,4)
		jbe    _053f4d_jump
		mov    $0x000001,%ecx
		jmp    _053f4d_jump

	_053f03_jump:
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _053f4d_jump
		cmp    $0x0001f4,%si
		jge    _053f4d_jump
		mov    $0x000001,%ecx
		jmp    _053f4d_jump

	_053f1b_jump:
		movswl %si,%eax
		cmp    $0xfffffee4,%eax
		jle    _053f4d_jump
		cmp    $0x0001bc,%si
		jge    _053f4d_jump
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff9c,%eax
		jle    _053f4d_jump
		cmpw   $0x0000fa,0x000008(%esp)
		jge    _053f4d_jump
		mov    $0x000001,%ecx
		jmp    _053f4d_jump

	_053f48_jump:
		movb   $0x000080,0x00000c(%esp)

	_053f4d_jump:
		test   %cx,%cx
		jne    _054001_jump
		cmpb   $0x000000,0x000010(%esp)
		je     _053f73_jump
		mov    (%esp),%ebx
		mov    0x000004(%esp),%ecx
		add    $0x00003c,%ebx
		add    $0x00003c,%ecx
		mov    %bx,(%esp)
		mov    %cx,0x000004(%esp)

	_053f73_jump:
		mov    -0x000002(%esp),%eax
		mov    $0xfffffee4,%ebx
		sar    $0x000010,%eax
		movswl %si,%edx
		sub    %eax,%ebx
		cmp    %ebx,%edx
		jl     _053ff8_jump
		add    $0x0001bc,%eax
		cmp    %eax,%edx
		jg     _053ff8_jump
		mov    0x000002(%esp),%eax
		mov    $0xffffff70,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %eax,%ebx
		cmp    %ebx,%edx
		jl     _053ff8_jump
		add    $0x000130,%eax
		cmp    %eax,%edx
		jg     _053ff8_jump
		xor    %eax,%eax
		mov    0x00002c(%edi),%edx
		mov    0x000069(%edi),%al
		add    %edx,%eax
		cmp    $0xffffffe2,%eax
		jl     _053ff8_jump
		mov    _0cda88_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		add    $0x00001e,%eax
		cmp    %edx,%eax
		jl     _053ff8_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		mov    0x000028(%edi),%ecx
		add    %eax,%eax
		add    %ecx,%eax
		test   %eax,%eax
		jl     _053ff8_jump
		mov    _0cda86_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %ecx,%eax
		jge    _053ffc_jump

	_053ff8_jump:
		xor    %ecx,%ecx
		jmp    _054001_jump

	_053ffc_jump:
		mov    $0x000001,%ecx

	_054001_jump:
		cmp    $0x000001,%cx
		jne    _05404e_jump
		xor    %eax,%eax
		mov    _0e3cd4_data,%ax
		testb  $0x000080,_092264_data(,%eax,4)
		je     _05404e_jump
		mov    $0x000001,%dh
		mov    _0ceeb5_data,%bl
		mov    %dh,_0ceedb_data
		test   %bl,%bl
		jne    _05403a_jump
		cmpb   $0x000000,0x000076(%edi)
		je     _05403a_jump
		cmpb   $0x000000,_0ceead_data
		jne    _054049_jump

	_05403a_jump:
		cmpb   $0x000000,_0ceeb5_data
		je     _05404e_jump
		cmpb   $0x000000,0x000076(%edi)
		jne    _05404e_jump

	_054049_jump:
		call   _01f2c0_func

	_05404e_jump:
		cmp    $0x000001,%cx
		sete   %al
		xor    %ah,%ah
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		ret    



_054060_func:
		push   %edx
		movl   $0xffff8300,0x000028(%eax)
		movl   $0xffff8300,0x00002c(%eax)
		mov    0x000081(%eax),%dl
		movl   $0x000001,0x000030(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    



_054088_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %ebx,%esi
		mov    0x000060(%ebx),%bx
		mov    %bx,_0e3cd4_data
		mov    0x000024(%esi),%bl
		mov    %bl,(%esp)
		mov    0x000081(%esi),%bl
		movl   $0x000000,0x000024(%esi)
		test   $0x000004,%bl
		je     _0542e9_jump
		movswl %dx,%edx
		cwtl   
		xor    %ecx,%ecx
		mov    %esi,%ebx
		mov    (%esp),%cl
		call   _053d34_func
		test   %ax,%ax
		je     _0541d1_jump
		cmpw   $0x000000,0x00005e(%esi)
		jne    _0541b5_jump
		xor    %eax,%eax
		mov    _0e3cd4_data,%ax
		testb  $0x000001,_092265_data(,%eax,4)
		jne    _054106_jump
		mov    0x000030(%esi),%edx
		cmp    $0x000002,%edx
		jl     _054106_jump
		je     _0541b5_jump
		cmp    $0x00000a,%ax
		jne    _0541b5_jump

	_054106_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		mov    %eax,0x000024(%esi)
		xor    %eax,%eax
		mov    _0e3cd4_data,%ax
		shl    $0x000002,%eax
		testb  $0x000001,_092264_data(%eax)
		jne    _05412b_jump
		testb  $0x000040,_092267_data(%eax)
		je     _054159_jump

	_05412b_jump:
		cmpl   $0x000000,0x000024(%esi)
		jne    _054147_jump
		xor    %eax,%eax
		mov    _0e3cd4_data,%ax
		testb  $0x000001,_092265_data(,%eax,4)
		je     _054147_jump
		mov    $0x000001,%al
		jmp    _054149_jump

	_054147_jump:
		xor    %al,%al

	_054149_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %esi,%eax
		call   _053cec_func
		jmp    _0542e9_jump

	_054159_jump:
		mov    0x000034(%esi),%ax
		xor    %ecx,%ecx

	_05415f_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%ebx
		add    %eax,%ebx
		cmp    0x000024(%ebx),%ecx
		jne    _054187_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000001,_092265_data(,%eax,4)
		je     _054187_jump
		mov    $0x000001,%al
		jmp    _054189_jump

	_054187_jump:
		mov    %cl,%al

	_054189_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebx,%eax
		call   _053d0c_func
		mov    0x000032(%ebx),%eax
		mov    _0ce324_data,%edx
		sar    $0x000010,%eax
		mov    0x000034(%esi),%di
		mov    (%edx,%eax,2),%ax
		cmp    %di,%ax
		jne    _05415f_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0541b5_jump:
		mov    0x00005e(%esi),%di
		test   %di,%di
		jle    _0542e9_jump
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x00005e(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0541d1_jump:
		mov    0x000030(%esi),%ax
		cmp    $0x000001,%ax
		je     _0542e9_jump
		xor    %edx,%edx
		mov    _0e3cd4_data,%dx
		movw   $0x000000,0x00005e(%esi)
		testb  $0x000020,_092266_data(,%edx,4)
		je     _054207_jump
		mov    %esi,%eax
		call   _054060_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_054207_jump:
		cmp    $0x000002,%ax
		jne    _05421c_jump
		movl   $0x000001,0x000030(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05421c_jump:
		test   %ax,%ax
		je     _05422b_jump
		cmp    $0x000004,%ax
		jne    _0542e9_jump

	_05422b_jump:
		xor    %eax,%eax
		mov    _0e3cd4_data,%ax
		testb  $0x000001,_092264_data(,%eax,4)
		je     _05424c_jump
		mov    %esi,%eax
		call   _05e018_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05424c_jump:
		movl   $0x000004,0x000030(%esi)
		mov    _0e3cd4_data,%dx
		mov    0x000034(%esi),%ax
		movl   $0x000001,0x000024(%esi)
		xor    %bl,%bl
		cmp    $0x00000a,%dx
		je     _05429c_jump

	_05426d_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%edx
		add    %edx,%eax
		cmpl   $0x000004,0x000030(%eax)
		je     _054286_jump
		mov    $0x000001,%bl
		jmp    _05429c_jump

	_054286_jump:
		mov    0x000032(%eax),%eax
		mov    _0ce324_data,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%esi),%ax
		jne    _05426d_jump

	_05429c_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ebp
		mov    0x000069(%esi),%al
		add    %ebp,%eax
		cmp    $0xffffffe2,%eax
		jge    _0542b2_jump
		movl   $0x000000,0x000024(%esi)

	_0542b2_jump:
		test   %bl,%bl
		jne    _0542e9_jump
		mov    0x000034(%esi),%ax

	_0542ba_jump:
		cwtl   
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%ebx
		add    %eax,%ebx
		mov    %ebx,%eax
		call   _05e018_func
		mov    0x000032(%ebx),%eax
		mov    _0ce324_data,%edx
		sar    $0x000010,%eax
		mov    0x000034(%esi),%bx
		mov    (%edx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _0542ba_jump

	_0542e9_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

_0542f4_switch:
		.long   _0543b7_case
		.long   _0543cd_case
		.long   _0543e3_case
		.long   _054404_case
		.long   _05441f_case
		.long   _05439e_case
		.long   _054461_case
		.long   _054461_case
		.long   _054461_case
		.long   _05442c_case
		.long   _054446_case




_054320_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ecx,%ecx
		mov    0x00006d(%edx),%cl
		mov    0x00000c(%edx),%esi
		shl    $0x000002,%ecx
		add    %esi,%ecx
		movzbl 0x00006c(%edx),%esi
		mov    (%ecx),%ecx
		mov    0x000005(%ecx,%esi,8),%cl
		xor    %ebx,%ebx
		shr    $0x000004,%cl
		xor    %eax,%eax
		test   %cl,%cl
		je     _05447a_jump
		mov    0x000060(%edx),%si
		cmp    $0x000057,%si
		je     _05435c_jump
		cmp    $0x000058,%si
		jne    _054385_jump

	_05435c_jump:
		mov    0x00007d(%edx),%cl
		test   %cl,%cl
		jbe    _05436d_jump
		dec    %cl
		mov    %cl,0x00007d(%edx)
		jmp    _054461_case

	_05436d_jump:
		cmpb   $0x000000,0x000071(%edx)
		jne    _054461_case
		mov    $0x000001,%ebx
		add    %bx,0x000042(%edx)
		jmp    _054461_case

	_054385_jump:
		dec    %cl
		cmp    $0x00000a,%cl
		ja     _054461_case
		and    $0x0000ff,%ecx
		jmp    *%cs:_0542f4_switch(,%ecx,4)

	_05439e_case:
		cmpb   $0x000000,_0cee3f_data
		jne    _054461_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _054461_case

	_0543b7_case:
		cmpb   $0x000000,0x000071(%edx)
		jne    _054461_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _054461_case

	_0543cd_case:
		cmpb   $0x000000,0x000072(%edx)
		jne    _054461_case
		mov    $0x000001,%eax
		mov    %eax,%ebx
		jmp    _054461_case

	_0543e3_case:
		mov    0x000042(%edx),%cx
		cmp    $0x000001,%cx
		jge    _0543f7_jump
		mov    $0x000001,%eax
		jmp    _054461_case

	_0543f7_jump:
		jle    _054461_case
		mov    $0xffffffff,%eax
		jmp    _054461_case

	_054404_case:
		mov    0x000040(%edx),%ecx
		sar    $0x000010,%ecx
		cmp    $0xfffffffe,%ecx
		jle    _054416_jump
		mov    $0xffffffff,%eax
		jmp    _054461_case

	_054416_jump:
		jge    _054461_case
		mov    $0x000001,%eax
		jmp    _054461_case

	_05441f_case:
		cmpb   $0x000000,0x000071(%edx)
		jne    _054461_case
		mov    $0xffffffff,%eax
		jmp    _054461_case

	_05442c_case:
		mov    0x000071(%edx),%cl
		inc    %cl
		mov    %cl,0x000071(%edx)
		cmp    0x000072(%edx),%cl
		jb     _054461_case
		mov    $0x000001,%eax
		movb   $0x000000,0x000071(%edx)
		mov    %eax,%ebx
		jmp    _054461_case

	_054446_case:
		mov    0x000071(%edx),%cl
		inc    %cl
		mov    %cl,0x000071(%edx)
		cmp    0x000072(%edx),%cl
		jb     _054461_case
		mov    $0xffffffff,%eax
		mov    $0x000001,%ebx
		movb   $0x000000,0x000071(%edx)

	_054461_case:
		xor    %ecx,%ecx
		mov    0x000060(%edx),%cx
		testb  $0x000020,_092265_data(,%ecx,4)
		je     _054476_jump
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax

	_054476_jump:
		add    %ax,0x000042(%edx)

	_05447a_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054484_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006a(%eax),%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    0x000004(%ecx),%ebx
		mov    0x00000a(%ebx,%eax,4),%ax
		dec    %eax
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%ebx
		mov    0x00000c(%ecx),%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%ecx),%al
		testb  $0x000010,0x000007(%ebx,%eax,8)
		je     _0544e1_jump
		xor    %ebx,%ebx
		mov    -0x000002(%esp),%eax
		mov    %dl,%bl
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0544d6_jump
		mov    %ebx,%eax

	_0544d6_jump:
		mov    (%esp),%ah
		sub    %al,%ah
		mov    %ah,%al
		inc    %al
		jmp    _0544f2_jump

	_0544e1_jump:
		xor    %ebx,%ebx
		mov    -0x000002(%esp),%eax
		mov    %dl,%bl
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0544f2_jump
		mov    %ebx,%eax

	_0544f2_jump:
		mov    %al,0x00006b(%ecx)
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_0544fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006b(%esi),%al
		mov    %ax,0x000004(%esp)
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		mov    %eax,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		mov    (%edx),%ebx
		shl    $0x000003,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		lea    0x000000(,%eax,4),%edi
		sub    %eax,%edi
		mov    0x000004(%esi),%ebp
		shl    $0x000002,%edi
		mov    0x000005(%ebx),%al
		add    %edi,%ebp
		and    $0x00000f,%al
		je     _054573_jump
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _054573_jump
		mov    0x000007(%ebx),%al
		shl    $0x000003,%al
		shr    $0x000007,%al
		test   %al,%al
		jne    _054570_jump
		incb   0x00006b(%esi)
		jmp    _054573_jump

	_054570_jump:
		decb   0x00006b(%esi)

	_054573_jump:
		mov    0x000002(%ebx),%al
		mov    %al,0x00006a(%esi)
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		lea    0x000000(,%eax,4),%edi
		sub    %eax,%edi
		shl    $0x000002,%edi
		mov    0x000004(%esi),%eax
		add    %eax,%edi
		mov    0x000073(%esi),%al
		cmp    $0x000001,%al
		jb     _05461b_jump
		jbe    _0545a5_jump
		cmp    $0x000002,%al
		je     _0545cf_jump
		jmp    _05461b_jump

	_0545a5_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%edx
		mov    0x00006a(%esi),%al
		cmp    %dx,%ax
		je     _0545c7_jump
		testb  $0x000010,0x000007(%ebx)
		jne    _0545bf_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _0545c7_jump

	_0545bf_jump:
		mov    0x00000a(%edi),%al
		dec    %al
		mov    %al,0x00006b(%esi)

	_0545c7_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _05461b_jump
		jmp    _0545e9_jump

	_0545cf_jump:
		testb  $0x000010,0x000007(%ebx)
		jne    _0545db_jump
		movb   $0x000000,0x00006b(%esi)
		jmp    _0545e3_jump

	_0545db_jump:
		mov    0x00000a(%edi),%al
		dec    %al
		mov    %al,0x00006b(%esi)

	_0545e3_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _05461b_jump

	_0545e9_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		shl    $0x000003,%eax
		mov    %eax,(%esp)
		mov    (%ecx),%eax
		mov    (%esp),%ecx
		mov    0x000032(%esi),%edx
		add    %ecx,%eax
		sar    $0x000010,%edx
		mov    0x000006(%eax),%al
		and    $0x0000ff,%eax
		call   _06f35c_func

	_05461b_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x00006b(%esi),%dl
		mov    0x00000a(%edi),%ax
		cmp    %eax,%edx
		jge    _054633_jump
		cmp    $0x0000ff,%dl
		jne    _054720_jump

	_054633_jump:
		mov    0x000004(%ebx),%al
		mov    %al,0x00006c(%esi)
		mov    0x000003(%ebx),%al
		mov    %al,0x00006d(%esi)
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		xor    %ebx,%ebx
		lea    0x000000(,%eax,4),%edx
		mov    0x00006c(%esi),%bl
		mov    0x00000c(%esi),%eax
		shl    $0x000003,%ebx
		mov    (%edx,%eax,1),%eax
		add    %eax,%ebx
		mov    0x000002(%ebx),%al
		mov    %al,0x00006a(%esi)
		xor    %eax,%eax
		mov    0x00006a(%esi),%al
		lea    0x000000(,%eax,4),%edi
		sub    %eax,%edi
		lea    0x000000(,%edi,4),%eax
		mov    0x000004(%esi),%edi
		mov    0x000060(%esi),%cx
		add    %eax,%edi
		cmp    $0x000017,%cx
		jne    _0546a8_jump
		cmpw   $0x000008,_0ced1c_data
		jne    _0546a8_jump
		mov    _0ced0a_data,%dx
		cmp    $0x000002,%dx
		je     _0546a2_jump
		cmp    $0x000006,%dx
		jne    _0546a8_jump

	_0546a2_jump:
		cmpb   $0x000008,0x00006c(%esi)
		jne    _0546c2_jump

	_0546a8_jump:
		cmpw   $0x00003d,_0ced1c_data
		jne    _0546de_jump
		cmpw   $0x000000,_0ced0a_data
		jne    _0546de_jump
		cmpb   $0x00003d,0x00006c(%esi)
		je     _0546de_jump

	_0546c2_jump:
		cmpw   $0x00003c,_0cdaea_data
		jle    _0546de_jump
		testb  $0x000080,_0cec71_data
		jne    _0546de_jump
		movw   $0x00003c,_0cdaea_data

	_0546de_jump:
		testb  $0x000010,0x000007(%ebx)
		je     _0546ed_jump
		xor    %eax,%eax
		mov    0x00000a(%edi),%ax
		dec    %eax
		jmp    _0546ef_jump

	_0546ed_jump:
		xor    %eax,%eax

	_0546ef_jump:
		mov    %al,0x00006b(%esi)
		cmpl   $0x000000,0x000024(%esi)
		je     _054720_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000032(%esi),%edx
		xor    %ebx,%ebx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%bl
		sar    $0x000010,%edx
		mov    0x000006(%eax,%ebx,8),%al
		and    $0x0000ff,%eax
		call   _06f35c_func

	_054720_jump:
		mov    0x000081(%esi),%al
		movb   $0x000000,0x000073(%esi)
		test   $0x000020,%al
		je     _054740_jump
		mov    0x000002(%esp),%ecx
		mov    %ebp,%ebx
		mov    %edi,%edx
		mov    %esi,%eax
		sar    $0x000010,%ecx
		call   _01d660_func

	_054740_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x00006b(%esi),%al
		lea    0x000081(%esi),%ebx
		cmp    %dx,%ax
		jne    _054762_jump
		xor    %edx,%eax
		mov    0x000008(%esp),%ecx
		mov    0x00006a(%esi),%al
		cmp    %cx,%ax
		je     _054769_jump

	_054762_jump:
		mov    $0x000001,%eax
		jmp    _05476b_jump

	_054769_jump:
		xor    %eax,%eax

	_05476b_jump:
		and    $0x000001,%al
		mov    (%ebx),%ah
		and    $0x00007f,%ah
		mov    %ah,(%ebx)
		shl    $0x000007,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,(%ebx)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054788_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000069(%eax),%dl
		mov    0x00002c(%eax),%ax
		add    %edx,%eax
		xor    %ah,%ah
		and    $0x00000f,%al
		pop    %edx
		ret    



_05479c_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %dl,(%esp)
		cmpw   $0x000001,0x000042(%eax)
		jg     _0547da_jump
		movw   $0x000000,0x000042(%eax)
		xor    %edx,%edx
		and    $0x0000ff,%ebx
		mov    (%esp),%dl
		call   _01d374_func
		cmpb   $0x000002,(%esp)
		je     _05490d_jump
		mov    %ecx,%eax
		call   _0255d0_func
		jmp    _05490d_jump

	_0547da_jump:
		cmpb   $0x000000,_0cee3f_data
		jne    _0548fd_jump
		mov    0x000062(%ecx),%al
		cmp    $0x00000c,%al
		jb     _05483a_jump
		jbe    _0548fd_jump
		cmp    $0x000014,%al
		jb     _05481d_jump
		cmp    $0x000015,%al
		jbe    _0548aa_jump
		cmp    $0x000018,%al
		jb     _0548c9_jump
		cmp    $0x000019,%al
		jbe    _0548fd_jump
		cmp    $0x00001e,%al
		je     _0548e3_jump
		jmp    _0548fd_jump

	_05481d_jump:
		cmp    $0x000012,%al
		jb     _054825_jump
		jbe    _054867_jump
		jmp    _05488a_jump

	_054825_jump:
		cmp    $0x00000e,%al
		jb     _0548fd_jump
		cmp    $0x00000f,%al
		jbe    _0548e3_jump
		jmp    _0548fd_jump

	_05483a_jump:
		cmp    $0x000004,%al
		jb     _05485d_jump
		cmp    $0x000005,%al
		jbe    _0548aa_jump
		cmp    $0x000008,%al
		jb     _0548c9_jump
		jbe    _0548fd_jump
		cmp    $0x000009,%al
		je     _0548ec_jump
		jmp    _0548fd_jump

	_05485d_jump:
		cmp    $0x000002,%al
		jb     _0548fd_jump
		ja     _05488a_jump

	_054867_jump:
		mov    $0x000001,%ebx
		mov    0x000040(%ecx),%edx
		mov    0x000040(%ecx),%ax
		sar    $0x000010,%edx
		sub    $0x000002,%eax
		sar    %edx
		mov    %ax,0x000040(%ecx)
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		jmp    _0548fd_jump

	_05488a_jump:
		mov    $0x000001,%ebx
		mov    0x000040(%ecx),%edx
		mov    0x000040(%ecx),%di
		sar    $0x000010,%edx
		add    $0x000002,%edi
		sar    %edx
		mov    %di,0x000040(%ecx)
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		jmp    _0548fd_jump

	_0548aa_jump:
		mov    0x000040(%ecx),%edx
		mov    $0x000001,%ebx
		sar    $0x000010,%edx
		mov    0x000040(%ecx),%si
		inc    %edx
		dec    %esi
		sar    %edx
		mov    %si,0x000040(%ecx)
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		jmp    _0548fd_jump

	_0548c9_jump:
		mov    0x000040(%ecx),%edx
		sar    $0x000010,%edx
		inc    %edx
		mov    $0x000001,%ebx
		sar    %edx
		sub    %edx,%ebx
		mov    %bx,0x000042(%ecx)
		incw   0x000040(%ecx)
		jmp    _0548fd_jump

	_0548e3_jump:
		mov    0x000040(%ecx),%edx
		sar    $0x000010,%edx
		inc    %edx
		jmp    _0548f5_jump

	_0548ec_jump:
		mov    0x000040(%ecx),%edx
		sar    $0x000010,%edx
		add    $0x000003,%edx

	_0548f5_jump:
		sar    %edx
		neg    %edx
		mov    %dx,0x000042(%ecx)

	_0548fd_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _05490d_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d364_func

	_05490d_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_054914_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000062(%eax),%dl
		testb  $0x000001,_092224_data(%edx)
		je     _054938_jump
		mov    0x000065(%eax),%al
		and    $0x0000ff,%eax
		testb  $0x000040,_092224_data(%eax)
		je     _054938_jump
		mov    $0x000001,%al
		pop    %edx
		ret    

	_054938_jump:
		xor    %al,%al
		pop    %edx
		ret    



_05493c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    0x000060(%eax),%si
		cmp    $0x00002f,%si
		jne    _054958_jump
		mov    $0x000020,%ecx
		mov    $0xfffffffc,%ebx
		jmp    _054968_jump

	_054958_jump:
		cmp    $0x000045,%si
		jne    _054968_jump
		mov    $0x000030,%ecx
		mov    $0xfffffffa,%ebx

	_054968_jump:
		mov    %edx,%eax
		call   _054914_func
		test   %al,%al
		je     _054979_jump
		mov    0x000065(%edx),%al
		mov    %al,0x000062(%edx)

	_054979_jump:
		mov    0x000062(%edx),%al
		cmp    $0x00000e,%al
		jb     _0549ad_jump
		cmp    $0x00000f,%al
		jbe    _054a16_jump
		cmp    $0x000014,%al
		jb     _0549a1_jump
		cmp    $0x000015,%al
		jbe    _0549c7_jump
		cmp    $0x000017,%al
		jbe    _0549df_jump
		cmp    $0x00001e,%al
		je     _054a16_jump
		jmp    _054a1a_jump

	_0549a1_jump:
		cmp    $0x000012,%al
		jb     _054a1a_jump
		jbe    _0549f4_jump
		jmp    _0549d9_jump

	_0549ad_jump:
		cmp    $0x000004,%al
		jb     _0549bf_jump
		cmp    $0x000005,%al
		jbe    _0549c7_jump
		cmp    $0x000007,%al
		jbe    _0549df_jump
		cmp    $0x000009,%al
		je     _054a13_jump
		jmp    _054a1a_jump

	_0549bf_jump:
		cmp    $0x000002,%al
		jb     _054a1a_jump
		jbe    _0549f4_jump
		jmp    _0549d9_jump

	_0549c7_jump:
		mov    %bx,0x000042(%edx)
		mov    %ecx,%eax
		mov    %cx,0x000040(%edx)
		neg    %eax
		mov    %ax,0x000040(%edx)
		jmp    _054a1a_jump

	_0549d9_jump:
		add    $0x000002,%ebx
		add    $0x000010,%ecx

	_0549df_jump:
		mov    %bx,0x000042(%edx)
		mov    %cx,0x000040(%edx)
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0549f4_jump:
		add    $0x000002,%ebx
		mov    %bx,0x000042(%edx)
		mov    $0xfffffff0,%ebx
		sub    %ecx,%ebx
		mov    %bx,0x000040(%edx)
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_054a13_jump:
		sub    $0x000003,%ebx

	_054a16_jump:
		mov    %bx,0x000042(%edx)

	_054a1a_jump:
		movb   $0x000000,0x000071(%edx)
		movb   $0x000002,0x000072(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054a28_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%edi
		mov    $0x000005,%esi
		mov    0x00006d(%eax),%ah
		mov    $0x000003,%edx
		cmp    $0x000002,%ah
		jne    _054a57_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _054a57_jump
		mov    $0xffffffff,%edx
		mov    %ecx,%eax
		call   _0790cc_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_054a57_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _054a7c_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _054a7c_jump
		mov    %ecx,%eax
		mov    0x000060(%ecx),%dx
		movw   $0x00002f,0x000060(%ecx)
		call   _05493c_func
		mov    %dx,0x000060(%ecx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_054a7c_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jl     _054c1d_jump
		mov    %ecx,%eax
		call   _054914_func
		mov    %al,%ah
		test   %al,%al
		je     _054a99_jump
		mov    0x000065(%ecx),%al
		jmp    _054a9c_jump

	_054a99_jump:
		mov    0x000062(%ecx),%al

	_054a9c_jump:
		cmp    $0x00000c,%al
		jb     _054acb_jump
		jbe    _054b74_jump
		cmp    $0x000014,%al
		jb     _054abf_jump
		cmp    $0x000015,%al
		jbe    _054b2e_jump
		cmp    $0x000018,%al
		jb     _054b49_jump
		jmp    _054b74_jump

	_054abf_jump:
		cmp    $0x000012,%al
		jb     _054b74_jump
		jbe    _054af8_jump
		jmp    _054b13_jump

	_054acb_jump:
		cmp    $0x000004,%al
		jb     _054aee_jump
		cmp    $0x000005,%al
		jbe    _054b2e_jump
		cmp    $0x000008,%al
		jb     _054b49_jump
		jbe    _054b74_jump
		cmp    $0x000009,%al
		je     _054b64_jump
		jmp    _054b74_jump

	_054aee_jump:
		cmp    $0x000002,%al
		jb     _054b74_jump
		ja     _054b13_jump

	_054af8_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _054b08_jump
		mov    $0x000001,%edx
		mov    %dx,0x000042(%ecx)

	_054b08_jump:
		imul   0x000042(%ecx),%si
		sub    %si,0x000040(%ecx)
		jmp    _054b74_jump

	_054b13_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _054b23_jump
		mov    $0x000001,%edx
		mov    %dx,0x000042(%ecx)

	_054b23_jump:
		imul   0x000042(%ecx),%si
		add    %si,0x000040(%ecx)
		jmp    _054b74_jump

	_054b2e_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _054b3e_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_054b3e_jump:
		imul   0x000042(%ecx),%dx
		sub    %dx,0x000040(%ecx)
		jmp    _054b74_jump

	_054b49_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _054b59_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_054b59_jump:
		imul   0x000042(%ecx),%dx
		add    %dx,0x000040(%ecx)
		jmp    _054b74_jump

	_054b64_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jne    _054b74_jump
		mov    $0x000001,%esi
		mov    %si,0x000042(%ecx)

	_054b74_jump:
		test   %bx,%bx
		jle    _054b9d_jump
		mov    0x000042(%ecx),%si
		cmp    $0x000001,%si
		jle    _054b95_jump
		sub    %esi,%ebx
		mov    %bx,0x000042(%ecx)
		test   %di,%di
		je     _054ba3_jump
		inc    %ebx
		mov    %bx,0x000042(%ecx)
		jmp    _054ba3_jump

	_054b95_jump:
		movw   $0x000000,0x000042(%ecx)
		jmp    _054ba3_jump

	_054b9d_jump:
		movw   $0x00fffd,0x000042(%ecx)

	_054ba3_jump:
		test   %ah,%ah
		je     _054be4_jump

	_054ba7_jump:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%ebx
		mov    0x000068(%ecx),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		cmp    0x000062(%ecx),%al
		jne    _054bd4_jump
		decl   0x00002c(%ecx)
		jmp    _054ba7_jump

	_054bd4_jump:
		mov    %ecx,%eax
		call   _0255d0_func
		mov    %ecx,%eax
		call   _01e2ec_func
		jmp    _054c1d_jump

	_054be4_jump:
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000001,_092224_data(%eax)
		je     _054c16_jump
		mov    %ecx,%eax
		call   _054788_func
		cmp    $0x000004,%ax
		jl     _054c16_jump
		mov    0x000042(%ecx),%si
		cmp    $0x000002,%si
		jg     _054c16_jump
		test   %si,%si
		jne    _054c1d_jump
		movw   $0x000001,0x000042(%ecx)
		jmp    _054c1d_jump

	_054c16_jump:
		mov    %ecx,%eax
		call   _0255d0_func

	_054c1d_jump:
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %edx,%eax
		movb   $0x000000,0x000071(%ecx)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		mov    0x000005(%eax,%edx,8),%al
		shr    $0x000004,%al
		cmp    $0x00000b,%al
		je     _054c4c_jump
		cmp    $0x00000a,%al
		je     _054c4c_jump
		movb   $0x000000,0x000072(%ecx)

	_054c4c_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_054c50_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %edx,(%esp)
		mov    %ebx,0x000004(%esp)
		cmpw   $0x000026,0x000060(%eax)
		jne    _054c7b_jump
		mov    $0x000001,%eax
		mov    $0x000002,%edi
		mov    %eax,%ebx
		mov    %eax,%edx
		mov    %ax,0x000008(%esp)
		jmp    _054c96_jump

	_054c7b_jump:
		mov    $0x000005,%eax
		mov    $0x000004,%ebx
		mov    $0x000003,%ecx
		mov    $0x000001,%edi
		mov    %eax,%edx
		mov    %cx,0x000008(%esp)

	_054c96_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _054f23_jump
		mov    0x000040(%esi),%cx
		test   %cx,%cx
		jle    _054cae_jump
		sub    %eax,%ecx
		jmp    _054cb2_jump

	_054cae_jump:
		jge    _054cb6_jump
		add    %eax,%ecx

	_054cb2_jump:
		mov    %cx,0x000040(%esi)

	_054cb6_jump:
		movswl %bx,%ecx
		mov    0x00003e(%esi),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jl     _054cd2_jump
		cmp    %ecx,%eax
		jg     _054cd2_jump
		mov    $0x000001,%eax
		jmp    _054cd4_jump

	_054cd2_jump:
		xor    %eax,%eax

	_054cd4_jump:
		test   %eax,%eax
		je     _054cde_jump
		movw   $0x000000,0x000040(%esi)

	_054cde_jump:
		mov    %esi,%eax
		call   _054914_func
		mov    %al,%cl
		test   %al,%al
		je     _054cf0_jump
		mov    0x000065(%esi),%al
		jmp    _054cf3_jump

	_054cf0_jump:
		mov    0x000062(%esi),%al

	_054cf3_jump:
		cmp    $0x00000c,%al
		jb     _054d22_jump
		jbe    _054e0f_jump
		cmp    $0x000014,%al
		jb     _054d16_jump
		cmp    $0x000015,%al
		jbe    _054d8b_jump
		cmp    $0x000018,%al
		jb     _054dc5_jump
		jmp    _054e0f_jump

	_054d16_jump:
		cmp    $0x000012,%al
		jb     _054e0f_jump
		jbe    _054d4f_jump
		jmp    _054d6d_jump

	_054d22_jump:
		cmp    $0x000004,%al
		jb     _054d45_jump
		cmp    $0x000005,%al
		jbe    _054d8b_jump
		cmp    $0x000008,%al
		jb     _054dc5_jump
		jbe    _054e0f_jump
		cmp    $0x000009,%al
		je     _054dff_jump
		jmp    _054e0f_jump

	_054d45_jump:
		cmp    $0x000002,%al
		jb     _054e0f_jump
		ja     _054d6d_jump

	_054d4f_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _054d5f_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%esi)

	_054d5f_jump:
		imul   0x000042(%esi),%dx
		sub    %dx,0x000040(%esi)
		jmp    _054e0f_jump

	_054d6d_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _054d7d_jump
		mov    $0x000001,%edi
		mov    %di,0x000042(%esi)

	_054d7d_jump:
		imul   0x000042(%esi),%dx
		add    %dx,0x000040(%esi)
		jmp    _054e0f_jump

	_054d8b_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _054d9b_jump
		mov    $0x000001,%edx
		mov    %dx,0x000042(%esi)

	_054d9b_jump:
		mov    0x000040(%esi),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %di,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,0x000040(%esi)
		jmp    _054e0f_jump

	_054dc5_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _054dd5_jump
		mov    $0x000001,%ebx
		mov    %bx,0x000042(%esi)

	_054dd5_jump:
		mov    0x000040(%esi),%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %di,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		add    %edx,%eax
		mov    %ax,0x000040(%esi)
		jmp    _054e0f_jump

	_054dff_jump:
		cmpw   $0x000000,0x000042(%esi)
		jne    _054e0f_jump
		mov    $0x000001,%eax
		mov    %ax,0x000042(%esi)

	_054e0f_jump:
		mov    0x000004(%esp),%eax
		test   %ax,%ax
		jle    _054e4d_jump
		mov    0x000042(%esi),%dx
		cmp    $0x000001,%dx
		jle    _054e3e_jump
		sub    %edx,%eax
		mov    (%esp),%edi
		mov    %ax,0x000042(%esi)
		test   %di,%di
		je     _054eb0_jump
		inc    %eax
		mov    %ax,0x000042(%esi)
		jmp    _054eb0_jump

	_054e3e_jump:
		movw   $0x000000,0x000042(%esi)
		movb   $0x000002,0x000076(%esi)
		jmp    _054eb0_jump

	_054e4d_jump:
		mov    0x000060(%esi),%dx
		cmp    $0x000008,%dx
		je     _054e72_jump
		cmp    $0x000086,%dx
		je     _054e72_jump
		cmp    $0x0000a7,%dx
		je     _054e72_jump
		cmp    $0x0000b1,%dx
		je     _054e72_jump
		cmp    $0x000006,%dx
		jne    _054eaa_jump

	_054e72_jump:
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _054e97_jump
		testb  $0x000002,_0cec71_data
		je     _054e8f_jump
		movw   $0x00fffc,0x000042(%esi)
		jmp    _054e9d_jump

	_054e8f_jump:
		movw   $0x00fffd,0x000042(%esi)
		jmp    _054e9d_jump

	_054e97_jump:
		movw   $0x00fffb,0x000042(%esi)

	_054e9d_jump:
		cmpw   $0x000006,0x000060(%esi)
		jne    _054eb0_jump
		incw   0x000042(%esi)
		jmp    _054eb0_jump

	_054eaa_jump:
		movw   $0x00fffd,0x000042(%esi)

	_054eb0_jump:
		test   %cl,%cl
		je     _054eea_jump

	_054eb4_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%edx
		mov    0x000069(%esi),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		cmp    0x000062(%esi),%al
		jne    _054ee1_jump
		decl   0x00002c(%esi)
		jmp    _054eb4_jump

	_054ee1_jump:
		mov    %esi,%eax
		call   _01e2ec_func
		jmp    _054f1c_jump

	_054eea_jump:
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000001,_092224_data(%eax)
		je     _054f1c_jump
		mov    %esi,%eax
		call   _054788_func
		cmp    $0x000004,%ax
		jl     _054f1c_jump
		mov    0x000042(%esi),%dx
		cmp    $0x000002,%dx
		jg     _054f1c_jump
		test   %dx,%dx
		jne    _054f23_jump
		movw   $0x000001,0x000042(%esi)
		jmp    _054f23_jump

	_054f1c_jump:
		mov    %esi,%eax
		call   _0255d0_func

	_054f23_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %edx,%eax
		movb   $0x000000,0x000071(%esi)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		mov    0x000005(%eax,%edx,8),%al
		shr    $0x000004,%al
		cmp    $0x00000b,%al
		je     _054f52_jump
		cmp    $0x00000a,%al
		je     _054f52_jump
		movb   $0x000000,0x000072(%esi)

	_054f52_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_054f5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		call   _01d374_func
		movw   $0x000000,0x000042(%ecx)
		movw   $0x000000,0x000040(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_054f80_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _0255d0_func
		mov    0x000076(%ecx),%dl
		cmp    0x000077(%ecx),%dl
		je     _054fcb_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%bl
		testb  $0x000040,0x000007(%edx,%ebx,8)
		je     _054fb4_jump
		mov    $0x000002,%edx
		jmp    _054fb9_jump

	_054fb4_jump:
		mov    $0x00000b,%edx

	_054fb9_jump:
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %dl,%bl
		mov    $0x000001,%edx
		call   _01d374_func
		jmp    _054fe0_jump

	_054fcb_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		orb    $0x000010,0x000081(%ecx)

	_054fe0_jump:
		mov    %ecx,%eax
		call   _01db14_func
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		test   $0x000008,%ah
		setne  %dl
		and    $0x0000ff,%edx
		add    $0x000002,%edx
		and    $0x0000ff,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055014_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpw   $0x000000,0x000042(%eax)
		jle    _055044_jump
		call   _0255d0_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		cmpw   $0x0001f4,0x00004a(%ecx)
		jle    _055044_jump
		movw   $0x000000,0x00004a(%ecx)

	_055044_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055048_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,_0ceebd_data
		je     _05506e_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _05506e_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _05479c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05506e_jump:
		cmpb   $0x000000,0x00006c(%ecx)
		je     _05508f_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _0255d0_func

	_05508f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055094_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006c(%eax)
		jne    _0550b7_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		mov    %ecx,%eax
		call   _0255d0_func

	_0550b7_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0550bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %edx,%eax
		lea    -0x000002(%eax),%ebx
		lea    0x000002(%eax),%esi
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edi
		mov    0x000069(%ecx),%al
		mov    _0cda86_data,%edx
		add    %edi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %eax,%edx
		sar    $0x000004,%ebx
		add    %edx,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0cda90_data,%ebx
		sar    $0x000004,%esi
		mov    0x000002(%ebx,%eax,2),%al
		xor    %ah,%ah
		add    %esi,%edx
		mov    %ax,(%esp)
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		xor    %edx,%edx
		mov    0x000002(%ebx,%eax,2),%dl
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _0551fb_jump
		xor    %eax,%eax
		mov    0x000062(%ecx),%al
		testb  $0x000002,_092224_data(%eax)
		jne    _0551fb_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _055157_jump
		testb  $0x000008,0x000081(%ecx)
		je     _055174_jump

	_055157_jump:
		movswl %dx,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _0551fb_jump
		testb  $0x000008,0x000081(%ecx)
		je     _0551fb_jump

	_055174_jump:
		cmpw   $0x000000,0x000042(%ecx)
		jge    _0551aa_jump
		testb  $0x000008,0x000081(%ecx)
		je     _055197_jump
		mov    $0x000001,%ebx
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		jmp    _0551fb_jump

	_055197_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		jmp    _0551fb_jump

	_0551aa_jump:
		mov    0x00003e(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    $0x000001,%ebx
		mov    0x000028(%ecx),%ebp
		mov    $0x000004,%edx
		add    %eax,%ebp
		mov    %ecx,%eax
		mov    %ebp,0x000028(%ecx)
		call   _05efb0_func
		mov    0x000081(%ecx),%bl
		lea    0x000081(%ecx),%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		mov    %bh,(%eax)
		or     %dl,%cl
		mov    %cl,(%eax)

	_0551fb_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055208_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%edx
		xor    %ebx,%ebx
		call   _01d374_func
		testb  $0x000008,0x000081(%ecx)
		je     _055230_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		jmp    _055239_jump

	_055230_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_055239_jump:
		call   _05efb0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055244_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006e(%eax),%bl
		mov    0x00006f(%eax),%dl
		call   _01d374_func
		mov    %ecx,%eax
		call   _0255d0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_055264_switch:
		.long   _055918_case
		.long   _05595e_case
		.long   _05552e_case
		.long   _055918_case
		.long   _05552e_case
		.long   _05552e_case
		.long   _05590d_case




_055280_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		shr    $0x000004,%al
		cmp    $0x00000b,%al
		je     _0552cf_jump
		cmp    $0x00000a,%al
		je     _0552cf_jump
		mov    0x000071(%esi),%ah
		inc    %ah
		mov    %ah,0x000071(%esi)
		cmp    $0x000003,%ah
		jb     _0552be_jump
		movb   $0x000000,0x000071(%esi)

	_0552be_jump:
		mov    0x000072(%esi),%dh
		inc    %dh
		mov    %dh,0x000072(%esi)
		cmp    $0x000004,%dh
		jb     _0552cf_jump
		movb   $0x000000,0x000072(%esi)

	_0552cf_jump:
		mov    %esi,%eax
		call   _054320_func
		mov    0x000060(%esi),%dx
		mov    %eax,%edi
		cmp    $0x000003,%dx
		jne    _055334_jump
		cmpw   $0x000000,0x000042(%esi)
		jl     _0552fb_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _0552fb_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d364_func

	_0552fb_jump:
		cmpb   $0x000000,_0ceebd_data
		jne    _0553a8_jump
		cmpw   $0x000003,0x000042(%esi)
		jl     _0553a8_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _0553a8_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d364_func
		movw   $0x000000,0x000040(%esi)
		jmp    _0553a8_jump

	_055334_jump:
		cmp    $0x000028,%dx
		je     _055340_jump
		cmp    $0x00007a,%dx
		jne    _05538f_jump

	_055340_jump:
		mov    %esi,%eax
		call   _0550bc_func
		mov    0x00006d(%esi),%bh
		cmp    $0x000002,%bh
		jne    _0553a8_jump
		mov    0x000042(%esi),%cx
		test   %cx,%cx
		jle    _05536b_jump
		cmp    0x00006c(%esi),%bh
		je     _0553a8_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d364_func
		jmp    _0553a8_jump

	_05536b_jump:
		jge    _0553a8_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _0553a8_jump
		movw   $0x000000,0x000042(%esi)
		jmp    _0553a8_jump

	_05538f_jump:
		cmp    $0x00005b,%dx
		jne    _0553a8_jump
		mov    0x000056(%esi),%dx
		dec    %dx
		mov    %dx,0x000056(%esi)
		jne    _0553a8_jump
		mov    %esi,%eax
		call   _071b38_func

	_0553a8_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000004,_092267_data(,%eax,4)
		je     _05545e_jump
		cmpw   $0x000000,0x000042(%esi)
		jge    _05545e_jump
		testb  $0x000020,0x000081(%esi)
		je     _055406_jump
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x00000c(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x000004(%esp),%edx
		mov    0x000074(%esi),%al
		jmp    _05541e_jump

	_055406_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%dx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    %dx,(%esp)
		xor    %eax,%eax
		mov    0x000074(%esi),%al
		mov    0x00002c(%esi),%dx

	_05541e_jump:
		add    %eax,%edx
		mov    %dx,0x000004(%esp)
		mov    0x000040(%esi),%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _05545e_jump
		movw   $0x000000,0x000042(%esi)

	_05545e_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000001,_092266_data(,%eax,4)
		je     _05552e_case
		xor    %eax,%eax
		mov    0x000062(%esi),%al
		testb  $0x000002,_092224_data(%eax)
		je     _05552e_case
		mov    0x000060(%esi),%ax
		cmp    $0x000064,%ax
		jb     _0556b5_jump
		jbe    _0559a2_jump
		cmp    $0x0000ac,%ax
		jb     _0555d6_jump
		jbe    _0559ae_jump
		cmp    $0x0000cc,%ax
		jb     _05556d_jump
		cmp    $0x0000cd,%ax
		jbe    _05552e_case
		cmp    $0x0000d9,%ax
		jb     _055502_jump
		jbe    _0559a2_jump
		cmp    $0x0000de,%ax
		jb     _0554f3_jump
		jbe    _05552e_case
		cmp    $0x0000e3,%ax
		jb     _055527_jump
		jbe    _05552e_case
		cmp    $0x0000ef,%ax
		je     _055ba8_jump
		jmp    _055527_jump

	_0554f3_jump:
		cmp    $0x0000da,%ax
		je     _05588f_jump
		jmp    _055527_jump

	_055502_jump:
		cmp    $0x0000d4,%ax
		jb     _05551d_jump
		jbe    _05552e_case
		cmp    $0x0000d5,%ax
		je     _05552e_case
		jmp    _055527_jump

	_05551d_jump:
		cmp    $0x0000d3,%ax
		je     _055ca8_jump

	_055527_jump:
		mov    %esi,%eax
		call   _055244_func

	_05552e_case:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000020,_092265_data(,%eax,4)
		je     _055d15_jump
		cmpw   $0x000060,0x000042(%esi)
		jle    _05554f_jump
		movw   $0x000060,0x000042(%esi)

	_05554f_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffff80,%eax
		jge    _055d33_jump
		movw   $0x00ff80,0x000042(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05556d_jump:
		cmp    $0x0000bb,%ax
		jb     _0555ac_jump
		jbe    _055c90_jump
		cmp    $0x0000c3,%ax
		jb     _05559d_jump
		jbe    _055cb4_jump
		cmp    $0x0000c6,%ax
		jb     _055527_jump
		jbe    _055c60_jump
		cmp    $0x0000c8,%ax
		je     _055c6c_jump
		jmp    _055527_jump

	_05559d_jump:
		cmp    $0x0000be,%ax
		je     _055c9c_jump
		jmp    _055527_jump

	_0555ac_jump:
		cmp    $0x0000b4,%ax
		jb     _0555c7_jump
		jbe    _055c78_jump
		cmp    $0x0000b6,%ax
		je     _055c19_jump
		jmp    _055527_jump

	_0555c7_jump:
		cmp    $0x0000b1,%ax
		je     _055b11_jump
		jmp    _055527_jump

	_0555d6_jump:
		cmp    $0x000084,%ax
		jb     _055647_jump
		jbe    _05552e_case
		cmp    $0x000093,%ax
		jb     _055628_jump
		jbe    _05552e_case
		cmp    $0x000097,%ax
		jb     _055619_jump
		jbe    _05552e_case
		cmp    $0x0000a5,%ax
		jb     _055527_jump
		jbe    _0559ef_jump
		cmp    $0x0000a7,%ax
		je     _055b11_jump
		jmp    _055527_jump

	_055619_jump:
		cmp    $0x000096,%ax
		je     _05552e_case
		jmp    _055527_jump

	_055628_jump:
		cmp    $0x000086,%ax
		jb     _055c08_jump
		jbe    _055b11_jump
		cmp    $0x00008b,%ax
		je     _05552e_case
		jmp    _055527_jump

	_055647_jump:
		cmp    $0x000070,%ax
		jb     _055687_jump
		jbe    _05597b_jump
		cmp    $0x00007a,%ax
		jb     _055678_jump
		jbe    _055a49_jump
		cmp    $0x00007b,%ax
		jbe    _0558f3_jump
		cmp    $0x000082,%ax
		je     _055b11_jump
		jmp    _055527_jump

	_055678_jump:
		cmp    $0x000077,%ax
		je     _0559d3_jump
		jmp    _055527_jump

	_055687_jump:
		cmp    $0x000067,%ax
		jb     _0556a6_jump
		cmp    $0x000068,%ax
		jbe    _05552e_case
		cmp    $0x00006e,%ax
		je     _05552e_case
		jmp    _055527_jump

	_0556a6_jump:
		cmp    $0x000066,%ax
		je     _05552e_case
		jmp    _055527_jump

	_0556b5_jump:
		cmp    $0x000034,%ax
		jb     _0557b2_jump
		jbe    _055ad9_jump
		cmp    $0x000048,%ax
		jb     _055748_jump
		jbe    _055be2_jump
		cmp    $0x00004e,%ax
		jb     _055729_jump
		jbe    _055a55_jump
		cmp    $0x00005a,%ax
		jb     _055710_jump
		cmp    $0x00005d,%ax
		jbe    _055c19_jump
		cmp    $0x000061,%ax
		jb     _055527_jump
		jbe    _055c25_jump
		cmp    $0x000062,%ax
		je     _05552e_case
		jmp    _055527_jump

	_055710_jump:
		cmp    $0x000057,%ax
		jb     _055527_jump
		cmp    $0x000058,%ax
		jbe    _05552e_case
		jmp    _055527_jump

	_055729_jump:
		cmp    $0x00004a,%ax
		jb     _05552e_case
		jbe    _055c84_jump
		cmp    $0x00004d,%ax
		je     _055ba8_jump
		jmp    _055527_jump

	_055748_jump:
		cmp    $0x00003e,%ax
		jb     _055788_jump
		jbe    _055996_jump
		cmp    $0x000044,%ax
		jb     _055779_jump
		jbe    _05552e_case
		cmp    $0x000045,%ax
		jbe    _0559fb_jump
		cmp    $0x000046,%ax
		je     _055883_jump
		jmp    _055527_jump

	_055779_jump:
		cmp    $0x000041,%ax
		je     _055c3d_jump
		jmp    _055527_jump

	_055788_jump:
		cmp    $0x00003a,%ax
		jb     _0557a3_jump
		jbe    _055b83_jump
		cmp    $0x00003c,%ax
		jb     _055527_jump
		jmp    _055c31_jump

	_0557a3_jump:
		cmp    $0x000035,%ax
		je     _055a69_jump
		jmp    _055527_jump

	_0557b2_jump:
		cmp    $0x00001b,%ax
		jb     _055824_jump
		jbe    _05552e_case
		cmp    $0x000028,%ax
		jb     _0557fa_jump
		jbe    _055a49_jump
		cmp    $0x00002f,%ax
		jb     _0557eb_jump
		jbe    _0559fb_jump
		cmp    $0x000032,%ax
		jb     _055527_jump
		jbe    _05552e_case
		jmp    _055aa1_jump

	_0557eb_jump:
		cmp    $0x00002e,%ax
		je     _055c49_jump
		jmp    _055527_jump

	_0557fa_jump:
		cmp    $0x000024,%ax
		jb     _055815_jump
		jbe    _055a1e_jump
		cmp    $0x000026,%ax
		je     _055b11_jump
		jmp    _055527_jump

	_055815_jump:
		cmp    $0x000020,%ax
		je     _05552e_case
		jmp    _055527_jump

	_055824_jump:
		cmp    $0x000008,%ax
		jb     _05585a_jump
		jbe    _055b11_jump
		cmp    $0x00000d,%ax
		jb     _05584b_jump
		jbe    _05552e_case
		cmp    $0x00000f,%ax
		je     _05552e_case
		jmp    _055527_jump

	_05584b_jump:
		cmp    $0x000009,%ax
		je     _0559ef_jump
		jmp    _055527_jump

	_05585a_jump:
		cmp    $0x000003,%ax
		jb     _055875_jump
		jbe    _055b9c_jump
		cmp    $0x000006,%ax
		je     _055b11_jump
		jmp    _055527_jump

	_055875_jump:
		test   %ax,%ax
		je     _0559ef_jump
		jmp    _055527_jump

	_055883_jump:
		mov    %esi,%eax
		call   _07a32c_func
		jmp    _05552e_case

	_05588f_jump:
		mov    %esi,%eax
		mov    $0x000001,%ebx
		call   _01db14_func
		mov    %esi,%eax
		mov    $0x000003,%edx
		call   _0255d0_func
		mov    %esi,%eax
		call   _05efb0_func
		cmpb   $0x000002,_0cdb01_data
		je     _0558e5_jump
		mov    %esi,%eax
		call   _053ac8_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		mov    $0x000001,%ah
		mov    $0xfffffff8,%ebx
		mov    %ah,_0ceec3_data
		call   _069ec0_func
		mov    %bx,_0cdad6_data

	_0558e5_jump:
		movw   $0x000001,_0cec96_data
		jmp    _05552e_case

	_0558f3_jump:
		mov    0x000075(%esi),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _05552e_case
		and    $0x0000ff,%eax
		jmp    *%cs:_055264_switch(,%eax,4)

	_05590d_case:
		mov    %esi,%eax
		movb   $0x000002,0x00007d(%esi)
		call   _01db14_func

	_055918_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _05593b_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _055945_jump

	_05593b_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_055945_jump:
		mov    %esi,%eax
		call   _05efb0_func
		mov    %esi,%eax
		call   _0255d0_func
		movw   $0x000000,0x000042(%esi)
		jmp    _05552e_case

	_05595e_case:
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		mov    %esi,%eax
		call   _0255d0_func
		movw   $0x000000,0x000042(%esi)
		jmp    _05552e_case

	_05597b_jump:
		cmpw   $0x000000,0x000042(%esi)
		jle    _05552e_case
		mov    %esi,%eax
		call   _0255d0_func
		negw   0x000042(%esi)
		jmp    _05552e_case

	_055996_jump:
		mov    %esi,%eax
		call   _054f5c_func
		jmp    _05552e_case

	_0559a2_jump:
		mov    %esi,%eax
		call   _055014_func
		jmp    _05552e_case

	_0559ae_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _05552e_case
		mov    $0x000001,%ebx
		mov    $0x000010,%edx
		mov    %esi,%eax
		call   _05efb0_func
		movb   $0x000000,0x00007d(%esi)
		jmp    _05552e_case

	_0559d3_jump:
		mov    0x000032(%esi),%edx
		mov    $0x0000bb,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		mov    %esi,%eax
		call   _077020_func
		jmp    _05552e_case

	_0559ef_jump:
		mov    %esi,%eax
		call   _054f80_func
		jmp    _05552e_case

	_0559fb_jump:
		cmpw   $0x000000,0x000042(%esi)
		je     _055a12_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _06f35c_func

	_055a12_jump:
		mov    %esi,%eax
		call   _05493c_func
		jmp    _05552e_case

	_055a1e_jump:
		cmpw   $0x000000,0x000042(%esi)
		je     _055a35_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000c8,%eax
		sar    $0x000010,%edx
		call   _06f35c_func

	_055a35_jump:
		mov    $0x000001,%ebx
		movswl %di,%edx
		mov    %esi,%eax
		call   _054a28_func
		jmp    _05552e_case

	_055a49_jump:
		mov    %esi,%eax
		call   _055094_func
		jmp    _05552e_case

	_055a55_jump:
		mov    $0x000001,%ebx
		movswl %di,%edx
		mov    %esi,%eax
		call   _054c50_func
		jmp    _05552e_case

	_055a69_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _05552e_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _06f35c_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000006,0x000042(%esi)
		call   _054c50_func
		decw   0x000050(%esi)
		jmp    _05552e_case

	_055aa1_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _05552e_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _06f35c_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000007,0x000042(%esi)
		call   _054c50_func
		decw   0x000050(%esi)
		jmp    _05552e_case

	_055ad9_jump:
		cmpw   $0x000000,0x000050(%esi)
		je     _05552e_case
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		sar    $0x000010,%edx
		mov    $0x000001,%ebx
		call   _06f35c_func
		mov    %ebx,%edx
		mov    %esi,%eax
		movw   $0x000006,0x000042(%esi)
		call   _054a28_func
		decw   0x000050(%esi)
		jmp    _05552e_case

	_055b11_jump:
		mov    0x000060(%esi),%dx
		cmp    $0x000082,%dx
		jb     _055b39_jump
		jbe    _055b65_jump
		cmp    $0x0000a7,%dx
		jb     _055b30_jump
		jbe    _055b51_jump
		cmp    $0x0000b1,%dx
		je     _055b5b_jump
		jmp    _055b72_jump

	_055b30_jump:
		cmp    $0x000086,%dx
		je     _055b51_jump
		jmp    _055b72_jump

	_055b39_jump:
		cmp    $0x000008,%dx
		jb     _055b49_jump
		jbe    _055b51_jump
		cmp    $0x000026,%dx
		je     _055b65_jump
		jmp    _055b72_jump

	_055b49_jump:
		cmp    $0x000006,%dx
		je     _055b5b_jump
		jmp    _055b72_jump

	_055b51_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00002d,%eax
		jmp    _055b6a_jump

	_055b5b_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00008c,%eax
		jmp    _055b6a_jump

	_055b65_jump:
		mov    0x000032(%esi),%edx
		xor    %eax,%eax

	_055b6a_jump:
		sar    $0x000010,%edx
		call   _06f35c_func

	_055b72_jump:
		movswl %di,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _054c50_func
		jmp    _05552e_case

	_055b83_jump:
		mov    $0x00000b,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000042(%esi)
		jmp    _05552e_case

	_055b9c_jump:
		mov    %esi,%eax
		call   _055048_func
		jmp    _05552e_case

	_055ba8_jump:
		cmpb   $0x000002,0x00006c(%esi)
		jne    _055bb5_jump
		mov    $0x000007,%ebx
		jmp    _055bc1_jump

	_055bb5_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _055bca_jump
		mov    $0x00000a,%ebx

	_055bc1_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func

	_055bca_jump:
		mov    %esi,%eax
		call   _0255d0_func
		movw   $0x000000,0x000042(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _05552e_case

	_055be2_jump:
		mov    %esi,%eax
		mov    $0x000005,%ebx
		call   _0255d0_func
		xor    %edx,%edx
		mov    %esi,%eax
		call   _01d374_func
		movw   $0x000000,0x000042(%esi)
		movw   $0x000000,0x000040(%esi)
		jmp    _05552e_case

	_055c08_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		jmp    _05552e_case

	_055c19_jump:
		mov    %esi,%eax
		call   _071dd4_func
		jmp    _05552e_case

	_055c25_jump:
		mov    %esi,%eax
		call   _020314_func
		jmp    _05552e_case

	_055c31_jump:
		mov    %esi,%eax
		call   _02ab2c_func
		jmp    _05552e_case

	_055c3d_jump:
		mov    %esi,%eax
		call   _055208_func
		jmp    _05552e_case

	_055c49_jump:
		cmpw   $0x00000a,0x000056(%esi)
		jge    _05552e_case
		mov    %esi,%eax
		call   _021198_func
		jmp    _05552e_case

	_055c60_jump:
		mov    %esi,%eax
		call   _022738_func
		jmp    _05552e_case

	_055c6c_jump:
		mov    %esi,%eax
		call   _022a3c_func
		jmp    _05552e_case

	_055c78_jump:
		mov    %esi,%eax
		call   _073350_func
		jmp    _05552e_case

	_055c84_jump:
		mov    %esi,%eax
		call   _072de4_func
		jmp    _05552e_case

	_055c90_jump:
		mov    %esi,%eax
		call   _063e10_func
		jmp    _05552e_case

	_055c9c_jump:
		mov    %esi,%eax
		call   _063d00_func
		jmp    _05552e_case

	_055ca8_jump:
		mov    %esi,%eax
		call   _020264_func
		jmp    _05552e_case

	_055cb4_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _05552e_case
		cmpw   $0x000000,0x000042(%esi)
		jle    _05552e_case
		mov    $0x00001d,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000028(%esi),%ebx
		mov    _0cdabc_data,%edx
		lea    0x000081(%esi),%eax
		cmp    %ebx,%edx
		setg   %dl
		and    $0x0000ff,%edx
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)
		jmp    _05552e_case

	_055d15_jump:
		cmpw   $0x000006,0x000042(%esi)
		jle    _055d22_jump
		movw   $0x000006,0x000042(%esi)

	_055d22_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff8,%eax
		jge    _055d33_jump
		movw   $0x00fff8,0x000042(%esi)

	_055d33_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055d3c_func:
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x00000a,0x000062(%eax)
		jne    _055dcf_jump
		cmpw   $0x000017,0x000060(%edx)
		jne    _055d5a_jump
		cmpb   $0x000006,_0cdb01_data
		je     _055d61_jump

	_055d5a_jump:
		mov    $0x000001,%eax
		jmp    _055d63_jump

	_055d61_jump:
		xor    %eax,%eax

	_055d63_jump:
		test   %eax,%eax
		je     _055dcf_jump
		mov    0x000060(%edx),%cx
		cmp    $0x000034,%cx
		jne    _055d7b_jump
		andb   $0x0000fb,0x000081(%edx)
		pop    %edx
		pop    %ecx
		ret    

	_055d7b_jump:
		xor    %eax,%eax
		mov    %cx,%ax
		testb  $0x000002,_092266_data(,%eax,4)
		je     _055dcf_jump
		testb  $0x000040,0x000081(%edx)
		jne    _055da8_jump
		mov    %edx,%eax
		call   _0769d0_func
		movw   $0x000000,0x000042(%edx)
		mov    0x000042(%edx),%ax
		mov    %ax,0x000040(%edx)

	_055da8_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000002,_092267_data(,%eax,4)
		je     _055dcf_jump
		mov    _0cece8_data,%eax
		sar    $0x000010,%eax
		movl   $0x000000,0x000024(%edx)
		add    $0x0001e4,%eax
		mov    %eax,0x00002c(%edx)

	_055dcf_jump:
		pop    %edx
		pop    %ecx
		ret    



_055dd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpw   $0x000000,0x000040(%eax)
		jne    _055df1_jump
		cmpw   $0x000000,0x000042(%eax)
		je     _055fa7_jump

	_055df1_jump:
		xor    %ebx,%ebx
		mov    0x000060(%esi),%bx
		mov    0x000040(%esi),%dx
		mov    _092266_data(,%ebx,4),%cl
		mov    0x000042(%esi),%ax
		test   $0x000080,%cl
		je     _055e36_jump
		cmpb   $0x000001,0x00007d(%esi)
		jne    _055e36_jump
		cmpb   $0x000000,_0cee51_data
		jne    _055e36_jump
		test   %dx,%dx
		jle    _055e24_jump
		mov    %edx,%ebx
		dec    %ebx
		jmp    _055e27_jump

	_055e24_jump:
		mov    %edx,%ebx
		inc    %ebx

	_055e27_jump:
		mov    %bx,0x000040(%esi)
		cmpw   $0x000000,0x000040(%esi)
		jne    _055e36_jump
		movb   $0x000000,0x00007d(%esi)

	_055e36_jump:
		cmpw   $0x00005e,0x000060(%esi)
		jne    _055e6b_jump
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax
		mov    _0cdbb4_data,%ecx
		mov    0x000028(%esi),%ebp
		add    %eax,%ecx
		mov    0x00003e(%esi),%eax
		mov    %ecx,%ebx
		sar    $0x000010,%eax
		sar    $0x000004,%ebx
		add    %eax,%ebp
		mov    %ebx,0x00002c(%esi)
		mov    %ecx,_0cdbb4_data
		mov    %ebp,0x000028(%esi)
		jmp    _055f6c_jump

	_055e6b_jump:
		xor    %ebx,%ebx
		mov    0x000060(%esi),%bx
		testb  $0x000020,_092265_data(,%ebx,4)
		je     _055e86_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		call   _053bb0_func

	_055e86_jump:
		mov    %ax,(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000010,_092265_data(,%eax,4)
		je     _055ea9_jump
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%eax
		call   _053bb0_func
		mov    %eax,%edi
		jmp    _055eab_jump

	_055ea9_jump:
		mov    %edx,%edi

	_055eab_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000040,_092266_data(,%eax,4)
		je     _055f52_jump
		mov    0x000028(%esi),%cx
		mov    0x00002c(%esi),%bx
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%dl
		mov    0x000068(%esi),%al
		add    %ebx,%edx
		add    %ecx,%eax
		sub    $0x000008,%edx
		mov    %eax,%ecx
		movswl %dx,%ebx
		cwtl   
		sar    $0x000004,%ebx
		sar    $0x000004,%eax
		movswl %bx,%ebx
		cwtl   
		mov    %ebx,%edx
		add    %edi,%ecx
		call   _01e0e4_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		jne    _055f1b_jump
		movswl %cx,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e0e4_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		jne    _055f46_jump

	_055f1b_jump:
		mov    _0cecd6_data,%ebx
		sar    $0x000010,%ebx
		add    $0x000130,%ebx
		movswl %cx,%eax
		mov    %ebx,%ecx
		xor    %ebx,%ebx
		cmp    %ebx,%eax
		jl     _055f40_jump
		cmp    %ecx,%eax
		jg     _055f40_jump
		mov    $0x000001,%eax
		jmp    _055f42_jump

	_055f40_jump:
		xor    %eax,%eax

	_055f42_jump:
		test   %eax,%eax
		jne    _055f52_jump

	_055f46_jump:
		mov    0x000040(%esi),%cx
		neg    %ecx
		neg    %edi
		mov    %cx,0x000040(%esi)

	_055f52_jump:
		movswl %di,%eax
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		mov    -0x000002(%esp),%eax
		mov    0x00002c(%esi),%ebx
		sar    $0x000010,%eax
		mov    %edx,0x000028(%esi)
		add    %eax,%ebx
		mov    %ebx,0x00002c(%esi)

	_055f6c_jump:
		lea    0x000082(%esi),%ebx
		test   %di,%di
		jne    _055f7e_jump
		cmpw   $0x000000,(%esp)
		je     _055f85_jump

	_055f7e_jump:
		mov    $0x000001,%eax
		jmp    _055f87_jump

	_055f85_jump:
		xor    %eax,%eax

	_055f87_jump:
		mov    (%ebx),%cl
		and    $0x0000fe,%cl
		and    $0x000001,%al
		mov    %cl,(%ebx)
		mov    %cl,%ch
		or     %al,%ch
		mov    %esi,%eax
		mov    %ch,(%ebx)
		call   _055d3c_func
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_055fa7_jump:
		mov    0x000082(%eax),%ah
		and    $0x0000fe,%ah
		mov    %ah,0x000082(%esi)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_055fc0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _01db50_func
		test   %ax,%ax
		je     _055fe8_jump
		xor    %ebx,%ebx
		mov    0x000060(%edx),%bx
		lea    0x000000(,%ebx,4),%eax
		add    %eax,%ebx
		shl    $0x000002,%ebx
		mov    %edx,%eax
		call   *_0932f0_data(%ebx)

	_055fe8_jump:
		pop    %edx
		pop    %ebx
		mov    %eax,%eax
		ret    



_055ff0_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    _0e3cd4_data,%ax
		testb  $0x000002,_092264_data(,%eax,4)
		je     _05600d_jump
		mov    %edx,%eax
		call   _076acc_func

	_05600d_jump:
		xor    %eax,%eax
		mov    _0e3cd4_data,%ax
		testb  $0x000020,_092264_data(,%eax,4)
		je     _056026_jump
		mov    %edx,%eax
		call   _02d9b8_func

	_056026_jump:
		xor    %eax,%eax
		mov    _0e3cd4_data,%ax
		testb  $0x000001,_092266_data(,%eax,4)
		je     _05603f_jump
		mov    %edx,%eax
		call   _01e2ec_func

	_05603f_jump:
		xor    %eax,%eax
		mov    _0e3cd4_data,%ax
		testb  $0x000080,_092265_data(,%eax,4)
		je     _05605a_jump
		mov    %edx,%eax
		call   _05ef3c_func
		jmp    _05605e_jump

	_05605a_jump:
		movb   $0x00001e,0x000070(%edx)

	_05605e_jump:
		xor    %ebx,%ebx
		mov    _0e3cd4_data,%bx
		lea    0x000000(,%ebx,4),%eax
		add    %eax,%ebx
		shl    $0x000002,%ebx
		mov    %edx,%eax
		call   *_0932e4_data(%ebx)
		cmpb   $0x000002,0x00006d(%edx)
		jne    _056088_jump
		mov    %edx,%eax
		call   _055280_func

	_056088_jump:
		testb  $0x000020,0x000081(%edx)
		je     _05609a_jump
		mov    %edx,%eax
		call   _02cf00_func
		jmp    _0560a0_jump

	_05609a_jump:
		movw   $0x002710,0x000054(%edx)

	_0560a0_jump:
		xor    %eax,%eax
		mov    _0e3cd4_data,%ax
		testb  $0x000040,_092265_data(,%eax,4)
		je     _0560b9_jump
		mov    %edx,%eax
		call   _061260_func

	_0560b9_jump:
		xor    %eax,%eax
		mov    _0e3cd4_data,%ax
		testb  $0x000020,_092264_data(,%eax,4)
		je     _0560d2_jump
		mov    %edx,%eax
		call   _055fc0_func

	_0560d2_jump:
		pop    %edx
		pop    %ebx
		ret    



_0560d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    $0xffffffff,%ebx
		xor    %edx,%edx
		mov    _0cecfe_data,%eax
		mov    %dx,_0ce46c_data
		sar    $0x000010,%eax
		mov    %bx,_0ce3a4_data
		mov    %eax,0x000004(%esp)
		mov    _0cece8_data,%ebx
		mov    0x000004(%esp),%edx
		sar    $0x000010,%ebx
		add    $0x000528,%eax
		mov    %ebx,(%esp)
		sub    %edx,%eax
		mov    (%esp),%ecx
		sar    %eax
		add    $0x0004b0,%ebx
		mov    %eax,0x00000c(%esp)
		add    %edx,%eax
		sub    %ecx,%ebx
		sub    $0x0001f4,%eax
		sar    %ebx
		mov    %eax,0x000004(%esp)
		lea    -0x0001f4(%ecx,%ebx,1),%eax
		mov    %eax,(%esp)
		mov    _0cc1f8_data,%eax
		movswl (%eax),%ecx
		mov    %ecx,%eax
		xor    %edi,%edi
		shl    $0x000005,%eax
		mov    %ebx,0x000010(%esp)
		add    %ecx,%eax
		mov    _0cc1f0_data,%ecx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%ecx
		xor    %eax,%eax
		jmp    _05618b_jump

	_056167_jump:
		movl   $0x000000,0x00001c(%ecx)
		mov    _0cc1f8_data,%ecx
		movswl 0x000002(%ecx,%eax,1),%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0cc1f0_data,%esi
		add    $0x000002,%eax
		inc    %ebx
		add    %esi,%ecx

	_05618b_jump:
		mov    _0cc1fa_data,%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%ebx
		jl     _056167_jump
		mov    $_0ce3a4_data,%esi
		mov    _0ce46a_data,%eax
		dec    %ebp
		sar    $0x000010,%eax
		mov    %ebp,0x000014(%esp)
		add    %eax,%eax
		lea    0x000000(%ebp,%ebp,1),%ecx
		add    %eax,%esi
		mov    _0cc1f8_data,%eax
		movswl (%ecx,%eax,1),%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc1f0_data,%ebx
		shl    $0x000002,%eax
		mov    %esi,0x000008(%esp)
		add    %eax,%ebx
		test   %ebp,%ebp
		jl     _0562ab_jump

	_0561d9_jump:
		cmpl   $0x000000,0x00001c(%ebx)
		jne    _05627f_jump
		mov    0x000004(%esp),%edx
		mov    0x000028(%ebx),%eax
		sub    %edx,%eax
		mov    0x00000c(%esp),%ebp
		test   %eax,%eax
		jge    _0561f6_jump
		neg    %eax

	_0561f6_jump:
		cmp    %ebp,%eax
		jge    _05623c_jump
		mov    (%esp),%edx
		mov    0x00002c(%ebx),%eax
		sub    %edx,%eax
		mov    0x000010(%esp),%ebp
		test   %eax,%eax
		jge    _05620c_jump
		neg    %eax

	_05620c_jump:
		cmp    %ebp,%eax
		jge    _05623c_jump
		mov    _0cecea_data,%dx
		mov    0x00002c(%ebx),%ax
		sub    %edx,%eax
		mov    _0ced00_data,%dx
		movswl %ax,%ebp
		mov    0x000028(%ebx),%ax
		sub    %edx,%eax
		add    $0x000008,%eax
		mov    %ebp,%edx
		cwtl   
		call   _054088_func
		jmp    _05627f_jump

	_05623c_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000010,_092264_data(,%eax,4)
		je     _056278_jump
		mov    _0cecea_data,%dx
		mov    0x00002c(%ebx),%ax
		sub    %edx,%eax
		mov    _0ced00_data,%dx
		movswl %ax,%ebp
		mov    0x000028(%ebx),%ax
		sub    %edx,%eax
		add    $0x000008,%eax
		mov    %ebp,%edx
		cwtl   
		call   _054088_func
		jmp    _05627f_jump

	_056278_jump:
		movl   $0x000000,0x000024(%ebx)

	_05627f_jump:
		mov    _0cc1f8_data,%eax
		movswl -0x000002(%ecx,%eax,1),%eax
		imul   $0x000084,%eax,%eax
		mov    0x000014(%esp),%edx
		mov    _0cc1f0_data,%ebx
		dec    %edx
		sub    $0x000002,%ecx
		mov    %edx,0x000014(%esp)
		add    %eax,%ebx
		test   %ecx,%ecx
		jge    _0561d9_jump

	_0562ab_jump:
		mov    _0cc1fa_data,%ebp
		sar    $0x000010,%ebp
		dec    %ebp
		mov    _0cc1f8_data,%eax
		lea    0x000000(,%ebp,2),%ecx
		movswl (%ecx,%eax,1),%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc1f0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		test   %ebp,%ebp
		jl     _056368_jump
		mov    %ecx,%ebx

	_0562e1_jump:
		cmpl   $0x000000,0x000024(%eax)
		je     _056329_jump
		mov    _0ced00_data,%dx
		mov    0x000028(%eax),%cx
		sub    %edx,%ecx
		add    $0x000008,%ecx
		mov    %cx,0x000036(%eax)
		mov    _0cecea_data,%dx
		mov    0x00002c(%eax),%cx
		sub    %edx,%ecx
		mov    %cx,0x000038(%eax)
		add    $0x000002,%esi
		mov    0x000034(%eax),%ax
		inc    %edi
		mov    %ax,-0x000002(%esi)
		cmp    $0x000064,%edi
		jle    _056344_jump
		mov    $_0c0c18_data,%eax
		call   _01f3a4_func
		jmp    _056344_jump

	_056329_jump:
		xor    %ecx,%ecx
		mov    0x000060(%eax),%cx
		testb  $0x000001,_092264_data(,%ecx,4)
		je     _056344_jump
		mov    0x000032(%eax),%eax
		sar    $0x000010,%eax
		call   _01f334_func

	_056344_jump:
		mov    _0cc1f8_data,%eax
		movswl -0x000002(%ebx,%eax,1),%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%ecx
		sub    $0x000002,%ebx
		dec    %ebp
		add    %ecx,%eax
		test   %ebx,%ebx
		jge    _0562e1_jump

	_056368_jump:
		mov    0x000008(%esp),%ebx
		movw   $0x00ffff,(%esi)
		sub    %ebx,%esi
		mov    _0ce46a_data,%eax
		mov    %esi,%ebx
		sar    $0x000010,%eax
		sar    %ebx
		add    %ebx,%eax
		mov    %ax,_0ce46c_data
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056394_func:
		push   %edx
		mov    _0ce39a_data,%dx
		inc    %edx
		mov    %dx,_0ce39a_data
		cmp    $0x000063,%dx
		jle    _0563b3_jump
		movw   $0x000063,_0ce39a_data

	_0563b3_jump:
		mov    _0ce3a3_data,%ah
		cmp    $0x000004,%ah
		jne    _0563c6_jump
		mov    %ah,_0cdb0a_data
		pop    %edx
		ret    

	_0563c6_jump:
		movb   $0x000002,_0cdb0a_data
		pop    %edx
		ret    



_0563d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    _0cec70_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _056441_jump
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		mov    0x00007f(%edx),%ah
		test   %ah,%ah
		jbe    _056404_jump
		mov    %ah,%bl
		movb   $0x000000,0x00006b(%edx)
		dec    %bl
		mov    %bl,0x00007f(%edx)

	_056404_jump:
		mov    %edx,%eax
		call   _0544fc_func
		mov    %edx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _056441_jump
		mov    $0xffffffff,%ebx
		mov    _0ceca4_data,%cx
		mov    %bx,_0cec72_data
		cmp    $0x000003,%cx
		je     _05643a_jump
		cmp    $0x000004,%cx
		je     _05643a_jump
		call   _056394_func

	_05643a_jump:
		andb   $0x0000fb,0x000081(%edx)

	_056441_jump:
		mov    _0cec88_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _05649f_jump
		mov    %edx,%eax
		shl    $0x000005,%edx
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    0x00007f(%edx),%cl
		test   %cl,%cl
		jbe    _056473_jump
		mov    %cl,%ch
		movb   $0x000000,0x00006b(%edx)
		dec    %ch
		mov    %ch,0x00007f(%edx)

	_056473_jump:
		mov    %edx,%eax
		call   _0544fc_func
		mov    %edx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _05649f_jump
		mov    0x000081(%edx),%al
		mov    $0xffffffff,%edi
		and    $0x0000fb,%al
		mov    %di,_0cec8a_data
		mov    %al,0x000081(%edx)

	_05649f_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0564a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ce3a2_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc1f0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _0ce46c_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _056510_jump

	_0564d1_jump:
		mov    0x000060(%eax),%si
		cmp    $0x0000cc,%si
		je     _0564e8_jump
		cmp    $0x0000cd,%si
		je     _0564e8_jump
		call   _0544fc_func

	_0564e8_jump:
		inc    %edx
		movswl %dx,%eax
		mov    _0ce3a2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%ebx
		mov    _0ce46c_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _0564d1_jump

	_056510_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056518_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cec70_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _056536_jump
		mov    _0cec88_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05653b_jump

	_056536_jump:
		call   _0563d0_func

	_05653b_jump:
		cmpb   $0x000000,_0ceeaa_data
		je     _05655b_jump
		mov    $0x000007,%edx
		mov    _0cda04_data,%eax
		call   _028994_func
		xor    %dl,%dl
		mov    %dl,_0ceeaa_data

	_05655b_jump:
		mov    _0ce3a2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0ce46c_data,%cx
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		xor    %ebx,%ebx
		add    %eax,%edx
		test   %cx,%cx
		jle    _056651_jump

	_056588_jump:
		mov    0x000060(%edx),%ax
		mov    %ax,_0e3cd4_data
		xor    %eax,%eax
		mov    _0e3cd4_data,%ax
		testb  $0x000008,_092267_data(,%eax,4)
		jne    _0565d0_jump
		cmp    $0x0000a1,%ax
		jne    _0565b0_jump
		cmpb   $0x000017,0x00006c(%edx)
		je     _0565d0_jump

	_0565b0_jump:
		cmpw   $0x000053,_0e3cd4_data
		jne    _0565c0_jump
		cmpb   $0x000001,0x00006c(%edx)
		je     _0565d0_jump

	_0565c0_jump:
		cmpw   $0x000021,_0e3cd4_data
		jne    _0565d7_jump
		cmpb   $0x000023,0x00006c(%edx)
		je     _0565d7_jump

	_0565d0_jump:
		mov    %edx,%eax
		call   _01e674_func

	_0565d7_jump:
		cmpw   $0x0000a1,_0e3cd4_data
		je     _056625_jump
		cmpl   $0x000000,0x000024(%edx)
		je     _056625_jump
		mov    %edx,%eax
		call   _055ff0_func
		xor    %eax,%eax
		mov    _0e3cd4_data,%ax
		testb  $0x000080,_092264_data(,%eax,4)
		jne    _056625_jump
		cmpb   $0x000000,0x000076(%edx)
		jne    _056625_jump
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		xor    %ecx,%ecx
		mov    (%eax),%eax
		mov    0x00006c(%edx),%cl
		testb  $0x000008,0x000007(%eax,%ecx,8)
		je     _056625_jump
		incb   0x000076(%edx)

	_056625_jump:
		inc    %ebx
		movswl %bx,%eax
		mov    _0ce3a2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%edx
		mov    _0ce46c_data,%si
		add    %eax,%edx
		cmp    %si,%bx
		jl     _056588_jump

	_056651_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056658_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ce3a2_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    _0ce46c_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _0566b0_jump

	_056683_jump:
		inc    %edx
		call   _055dd4_func
		movswl %dx,%eax
		mov    _0ce3a2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%ebx
		mov    _0ce46c_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _056683_jump

	_0566b0_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0566b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    _0ce3a2_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc1f0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    _0ce46c_data,%bx
		xor    %edx,%edx
		test   %bx,%bx
		jle    _056711_jump

	_0566e5_jump:
		inc    %edx
		call   _01db8c_func
		movswl %dx,%eax
		mov    _0ce3a2_data(,%eax,2),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0cc1f0_data,%eax
		mov    _0ce46c_data,%cx
		add    %ebx,%eax
		cmp    %cx,%dx
		jl     _0566e5_jump

	_056711_jump:
		mov    _0cdadc_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _0567e0_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmpl   $0x000000,0x000024(%esi)
		je     _0567e0_jump
		lea    0x00000c(%esp),%eax
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000004(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		mov    0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000074(%esi),%al
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0cdafd_data,%dl
		sub    %edx,%eax
		mov    0x000060(%esi),%di
		mov    %eax,_0cdac0_data
		cmp    $0x0000fe,%di
		jne    _0567d6_jump
		mov    -0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		xor    %ebx,%ebx
		mov    _0cdabc_data,%ecx
		mov    _0cdafc_data,%bl
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %ecx,%ebx
		add    %edx,%eax
		sub    %eax,%ebx
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _0567be_jump
		sar    %cl,%ax
		jmp    _0567c7_jump

	_0567be_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0567c7_jump:
		mov    _0cdac0_data,%esi
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0cdac0_data

	_0567d6_jump:
		mov    $_0cda94_data,%eax
		call   _01db8c_func

	_0567e0_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0567ec_switch:
		.long   _0569a8_case
		.long   _056a72_case
		.long   _056845_case
		.long   _0568f5_case




_0567fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cdb15_data,%dl
		xor    %ebx,%ebx
		test   $0x000008,%dl
		je     _05681a_jump
		mov    _0cdabc_data,%si
		add    $0x000046,%esi
		jmp    _056824_jump

	_05681a_jump:
		mov    _0cdabc_data,%si
		add    $0x00003a,%esi

	_056824_jump:
		mov    _0cdac0_data,%di
		add    $0x000020,%edi
		cmp    $0x000003,%ax
		ja     _056b30_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_0567ec_switch(,%eax,4)

	_056845_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x000003,%edx
		jge    _056b30_jump
		mov    _0cda86_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cda90_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092224_data(%edx)
		je     _05689c_jump
		mov    $0x000001,%ebx

	_05689c_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cda90_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092224_data(%edx)
		je     _0568c4_jump
		mov    $0x000001,%ebx

	_0568c4_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _056b30_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0568f5_case:
		movswl %di,%ecx
		mov    $0x000010,%edi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		cmp    $0x00000c,%edx
		jle    _056b30_jump
		add    $0x000040,%ecx
		mov    _0cda86_data,%eax
		sar    $0x000004,%ecx
		sar    $0x000010,%eax
		imul   %eax,%ecx
		movswl %si,%eax
		sar    $0x000004,%eax
		add    %ecx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cda90_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092224_data(%edx)
		je     _05694f_jump
		mov    $0x000001,%ebx

	_05694f_jump:
		inc    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cda90_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092224_data(%edx)
		je     _056977_jump
		mov    $0x000001,%ebx

	_056977_jump:
		inc    %eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _056b30_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0569a8_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x000003,%edx
		jge    _056b30_jump
		movswl %di,%eax
		mov    _0cda86_data,%edx
		add    %esi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		dec    %eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cda90_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092224_data(%edx)
		je     _056a03_jump
		mov    $0x000001,%ebx

	_056a03_jump:
		mov    _0cda86_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		mov    _0cda90_data,%ecx
		sub    %eax,%edx
		mov    0x000002(%ecx,%edx,2),%dl
		and    $0x0000ff,%edx
		testb  $0x000001,_092224_data(%edx)
		je     _056a35_jump
		mov    $0x000001,%ebx

	_056a35_jump:
		mov    _0cda86_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _056b30_jump
		mov    $0x000001,%ebx
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056a72_case:
		movswl %si,%ecx
		mov    $0x000010,%esi
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cmp    $0x00000c,%edx
		jle    _056b30_jump
		movswl %di,%eax
		mov    _0cda86_data,%edx
		add    %esi,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		sar    $0x000004,%ecx
		add    %ecx,%eax
		lea    0x000003(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		mov    _0cda90_data,%ecx
		sub    %edx,%eax
		mov    0x000002(%ecx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _056ace_jump
		mov    $0x000001,%ebx

	_056ace_jump:
		mov    _0cda86_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%ecx
		mov    _0cda90_data,%eax
		mov    0x000002(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _056b00_jump
		mov    $0x000001,%ebx

	_056b00_jump:
		mov    _0cda86_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _056b30_jump
		mov    $0x000001,%ebx

	_056b30_jump:
		mov    %ebx,%eax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056b38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpw   $0x000002,_0ceca4_data
		jne    _056b5e_jump
		mov    $0x000002,%eax
		call   _0567fc_func
		test   %ax,%ax
		je     _056b5e_jump
		xor    %ebx,%ebx
		mov    %bx,_0cdad6_data

	_056b5e_jump:
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0cdaa0_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdb00_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _056b8c_jump
		testb  $0x000002,_0cec71_data
		je     _056b93_jump

	_056b8c_jump:
		mov    $0x000028,%eax
		jmp    _056b98_jump

	_056b93_jump:
		mov    $0x000019,%eax

	_056b98_jump:
		mov    _0cdad4_data,%edx
		mov    _0cdac0_data,%ebx
		sar    $0x000010,%edx
		add    %edx,%ebx
		mov    _0cecaa_data,%edx
		mov    %ebx,_0cdac0_data
		sar    $0x000010,%edx
		movswl %ax,%ebx
		lea    -0x000014(%edx),%eax
		mov    _0cdac0_data,%ecx
		sub    %ebx,%eax
		cmp    %ecx,%eax
		jle    _056bff_jump
		mov    %eax,_0cdac0_data
		mov    _0cdadc_data,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    %cx,_0cdad6_data
		cmp    $0xffffffff,%eax
		je     _056bff_jump
		mov    _0cdae8_data,%eax
		sar    $0x000010,%eax
		xor    %edx,%edx
		cmp    $0xffffffff,%eax
		sete   %al
		and    $0x0000ff,%eax
		call   _02d60c_func

	_056bff_jump:
		mov    $_0cda94_data,%eax
		xor    %esi,%esi
		call   _01db8c_func
		mov    %si,_0cecf8_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056c18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		cmpw   $0x000002,_0ceca4_data
		jne    _056c3e_jump
		mov    $0x000003,%eax
		call   _0567fc_func
		test   %ax,%ax
		je     _056c3e_jump
		xor    %ebx,%ebx
		mov    %bx,_0cdad6_data

	_056c3e_jump:
		mov    _0cdad4_data,%eax
		mov    _0cdac0_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    $_0cda94_data,%eax
		mov    %edx,_0cdac0_data
		call   _01db8c_func
		cmpb   $0x000002,_0cdb01_data
		jne    _056cba_jump
		mov    _0cecb4_data,%eax
		mov    _0cece8_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0cdad4_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _056cb1_jump
		cmpw   $0x000064,_0cdacc_data
		jge    _056ca0_jump
		xor    %edi,%edi
		mov    %di,_0cecf8_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056ca0_jump:
		mov    _0cdad6_data,%ax
		mov    %ax,_0cecf8_data
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_056cb1_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cecf8_data

	_056cba_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_056cc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000003,_0cdb01_data
		jne    _056cdb_jump
		cmpb   $0x000017,_0cdb00_data
		je     _057162_jump

	_056cdb_jump:
		mov    _0ced18_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _056eec_jump
		mov    _0cecb8_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _0cdafd_data,%al
		sar    %edx
		sub    %eax,%edx
		mov    _0cdb01_data,%bl
		add    $0x000072,%edx
		cmp    $0x000002,%bl
		setne  %al
		and    $0x0000ff,%eax
		jne    _056d30_jump
		cmpb   $0x00000f,_0cdb00_data
		jne    _056e68_jump
		cmpb   $0x000000,_0ceeb7_data
		je     _056e68_jump

	_056d30_jump:
		cmpw   $0x000000,_0cec96_data
		jne    _056e68_jump
		cmpw   $0x0000ff,_0cecf8_data
		jne    _056d57_jump
		cmpw   $0x000000,_0ceca2_data
		je     _056e2c_jump

	_056d57_jump:
		mov    _0cdacc_data,%ax
		sub    %edx,%eax
		mov    $0x000002,%cl
		mov    %eax,%edx
		test   %ax,%ax
		js     _056d6d_jump
		sar    %cl,%ax
		jmp    _056d76_jump

	_056d6d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_056d76_jump:
		mov    %ax,_0cecf8_data
		mov    _0cdad4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _056d8a_jump
		neg    %eax

	_056d8a_jump:
		mov    %eax,%ebx
		mov    _0cecf6_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _056d9a_jump
		neg    %eax

	_056d9a_jump:
		cmp    %eax,%ebx
		jg     _056eec_jump
		mov    _0cdad4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _056db0_jump
		neg    %eax

	_056db0_jump:
		mov    %eax,%ebx
		mov    $0x000003,%eax
		cmp    %ebx,%eax
		jge    _056dbd_jump
		mov    %ebx,%eax

	_056dbd_jump:
		mov    _0cecf8_data,%bx
		test   %bx,%bx
		jle    _056de5_jump
		movswl %ax,%ebx
		mov    _0cecf6_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _056dda_jump
		mov    %ebx,%eax

	_056dda_jump:
		mov    %ax,_0cecf8_data
		jmp    _056eec_jump

	_056de5_jump:
		jge    _056e05_jump
		movswl %ax,%ebx
		mov    _0cecf6_data,%eax
		neg    %ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jge    _056dfa_jump
		mov    %ebx,%eax

	_056dfa_jump:
		mov    %ax,_0cecf8_data
		jmp    _056eec_jump

	_056e05_jump:
		test   %dx,%dx
		jle    _056e18_jump
		movw   $0x000001,_0cecf8_data
		jmp    _056eec_jump

	_056e18_jump:
		jge    _056eec_jump
		movw   $0x00ffff,_0cecf8_data
		jmp    _056eec_jump

	_056e2c_jump:
		cmpb   $0x000001,_0cdb01_data
		je     _056eec_jump
		mov    _0cdaca_data,%ebx
		movswl %dx,%eax
		sar    $0x000010,%ebx
		add    $0x000030,%eax
		cmp    %eax,%ebx
		jge    _056e5a_jump
		movw   $0x00fffc,_0cecf8_data
		jmp    _056eec_jump

	_056e5a_jump:
		xor    %edi,%edi
		mov    %di,_0cecf8_data
		jmp    _056eec_jump

	_056e68_jump:
		mov    _0cecea_data,%ax
		cmp    _0cecb6_data,%ax
		je     _056e9b_jump
		mov    _0cdaca_data,%ebx
		mov    _0cdad4_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		movswl %dx,%edx
		sub    %eax,%ebx
		cmp    %edx,%ebx
		jle    _056e9b_jump
		cmpw   $0x000000,_0cdad6_data
		jg     _056ecd_jump

	_056e9b_jump:
		mov    _0cecea_data,%ax
		cmp    _0cecac_data,%ax
		je     _056eec_jump
		xor    %eax,%eax
		mov    _0cdb08_data,%al
		mov    _0cdaca_data,%edx
		neg    %eax
		sar    $0x000010,%edx
		sub    $0x000010,%eax
		cmp    %eax,%edx
		jg     _056eec_jump
		cmpw   $0x000000,_0cdad6_data
		jge    _056eec_jump

	_056ecd_jump:
		mov    _0cdad6_data,%dx
		cmp    $0x000010,%dx
		jg     _056ee3_jump
		mov    %dx,_0cecf8_data
		jmp    _056eec_jump

	_056ee3_jump:
		xor    %ebx,%ebx
		mov    %bx,_0cecf8_data

	_056eec_jump:
		mov    _0ced16_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0570f3_jump
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0cdafc_data,%al
		sub    %eax,%edx
		mov    %edx,%eax
		mov    %edx,%ebx
		mov    _0cecec_data,%dx
		sub    $0x000030,%ebx
		add    $0x000030,%eax
		sub    %edx,%ebx
		mov    _0cecf2_data,%dx
		mov    _0ceca2_data,%cx
		add    %eax,%edx
		test   %cx,%cx
		jg     _056f41_jump
		mov    _0cdad4_data,%si
		test   %si,%si
		jle    _056f86_jump

	_056f41_jump:
		mov    _0cdaca_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _056f55_jump
		sar    %cl,%ax
		jmp    _056f5e_jump

	_056f55_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_056f5e_jump:
		mov    _092208_data,%cx
		cmp    %cx,%ax
		jge    _056f78_jump
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,_092208_data
		jmp    _05705a_jump

	_056f78_jump:
		jle    _05705a_jump
		mov    %ecx,%edi
		inc    %edi
		jmp    _057053_jump

	_056f86_jump:
		test   %cx,%cx
		jl     _056f90_jump
		test   %si,%si
		jge    _056fd2_jump

	_056f90_jump:
		mov    _0cdaca_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _056fa4_jump
		sar    %cl,%ax
		jmp    _056fad_jump

	_056fa4_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_056fad_jump:
		mov    _092208_data,%cx
		cmp    %cx,%ax
		jle    _056fc7_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_092208_data
		jmp    _05705a_jump

	_056fc7_jump:
		jge    _05705a_jump
		jmp    _057050_jump

	_056fd2_jump:
		mov    _0cdb15_data,%al
		test   $0x000008,%al
		je     _057016_jump
		mov    _0cdaca_data,%ax
		mov    $0x000002,%cl
		sub    %ebx,%eax
		test   %ax,%ax
		js     _056fef_jump
		sar    %cl,%ax
		jmp    _056ff8_jump

	_056fef_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_056ff8_jump:
		mov    _092208_data,%cx
		cmp    %cx,%ax
		jge    _05700f_jump
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,_092208_data
		jmp    _05705a_jump

	_05700f_jump:
		jle    _05705a_jump
		mov    %ecx,%edi
		inc    %edi
		jmp    _057053_jump

	_057016_jump:
		test   $0x000008,%al
		jne    _05705a_jump
		mov    _0cdaca_data,%ax
		mov    $0x000002,%cl
		sub    %edx,%eax
		test   %ax,%ax
		js     _05702e_jump
		sar    %cl,%ax
		jmp    _057037_jump

	_05702e_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_057037_jump:
		mov    _092208_data,%cx
		cmp    %cx,%ax
		jle    _05704e_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_092208_data
		jmp    _05705a_jump

	_05704e_jump:
		jge    _05705a_jump

	_057050_jump:
		mov    %ecx,%edi
		dec    %edi

	_057053_jump:
		mov    %di,_092208_data

	_05705a_jump:
		cmpb   $0x000000,_0cee98_data
		je     _057092_jump
		mov    _092206_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _057071_jump
		neg    %eax

	_057071_jump:
		cmp    $0x000004,%eax
		jle    _057092_jump
		cmpw   $0x000000,_092208_data
		jle    _057087_jump
		mov    $0x000004,%eax
		jmp    _05708c_jump

	_057087_jump:
		mov    $0xfffffffc,%eax

	_05708c_jump:
		mov    %ax,_092208_data

	_057092_jump:
		mov    $0x000002,%cl
		mov    _092208_data,%ax
		test   %ax,%ax
		js     _0570a4_jump
		sar    %cl,%ax
		jmp    _0570ad_jump

	_0570a4_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0570ad_jump:
		mov    _0cecf6_data,%si
		add    %eax,%esi
		mov    _0cdaca_data,%di
		mov    %si,_0cecf6_data
		cmp    %di,%dx
		jle    _0570d3_jump
		cmpw   $0x000000,_0cdad4_data
		jl     _0570e6_jump

	_0570d3_jump:
		cmp    _0cdaca_data,%bx
		jge    _0570f3_jump
		cmpw   $0x000000,_0cdad4_data
		jle    _0570f3_jump

	_0570e6_jump:
		mov    _0cdad4_data,%ax
		add    %ax,_0cecf6_data

	_0570f3_jump:
		mov    _0ced18_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _057162_jump
		mov    _0cdadc_data,%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		je     _057162_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000020,_092265_data(,%eax,4)
		je     _057143_jump
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		call   _053bb0_func
		add    %ax,_0cecf8_data
		jmp    _057157_jump

	_057143_jump:
		mov    _0cecf8_data,%si
		mov    0x000042(%edx),%ax
		add    %eax,%esi
		mov    %si,_0cecf8_data

	_057157_jump:
		mov    0x00004c(%edx),%ax
		add    %ax,_0cecf8_data

	_057162_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057168_func:
		push   %ebx
		push   %edx
		push   %esi
		cmpw   $0x000002,_0ceca4_data
		jne    _057194_jump
		mov    $0x000001,%eax
		call   _0567fc_func
		test   %ax,%ax
		je     _057194_jump
		xor    %ebx,%ebx
		mov    %bx,_0cdad4_data
		mov    %bx,_0ceca2_data

	_057194_jump:
		mov    _0cdad2_data,%eax
		mov    _0cdabc_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0ceba0_data,%ax
		cwtl   
		mov    %edx,_0cdabc_data
		cmp    %edx,%eax
		jge    _0571dc_jump
		mov    %eax,_0cdabc_data
		xor    %esi,%esi
		mov    _0cdb01_data,%ah
		mov    %si,_0cdad4_data
		mov    %si,_0ceca2_data
		cmp    $0x000002,%ah
		je     _0571dc_jump
		mov    %si,_0cdad6_data

	_0571dc_jump:
		mov    $_0cda94_data,%eax
		call   _01db8c_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_0571ec_func:
		push   %ebx
		push   %edx
		push   %esi
		cmpw   $0x000002,_0ceca4_data
		jne    _057215_jump
		xor    %eax,%eax
		call   _0567fc_func
		test   %ax,%ax
		je     _057215_jump
		xor    %ebx,%ebx
		mov    %bx,_0cdad4_data
		mov    %bx,_0ceca2_data

	_057215_jump:
		mov    _0cdad2_data,%eax
		mov    _0cdabc_data,%edx
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    _0ced16_data,%eax
		sar    $0x000010,%eax
		mov    %edx,_0cdabc_data
		cmp    $0xffffffff,%eax
		jne    _057263_jump
		mov    _0ceb9e_data,%ax
		cwtl   
		cmp    %edx,%eax
		jle    _057263_jump
		mov    %eax,_0cdabc_data
		xor    %esi,%esi
		mov    _0cdb01_data,%ah
		mov    %si,_0ceca2_data
		cmp    $0x000002,%ah
		je     _057263_jump
		mov    %si,_0cdad6_data

	_057263_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_057268_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000002,_0ce3a3_data
		jne    _057288_jump
		mov    _0cdb0a_data,%al
		xor    %bh,%bh
		mov    %al,_0ce39f_data
		mov    %bh,_0ce39e_data
		jmp    _0572af_jump

	_057288_jump:
		mov    _0cdb0a_data,%dl
		cmp    $0x000002,%dl
		ja     _05729d_jump
		xor    %bl,%bl
		mov    %dl,_0ce39f_data
		jmp    _0572a9_jump

	_05729d_jump:
		mov    $0x000002,%dh
		mov    %dl,%bl
		sub    %dh,%bl
		mov    %dh,_0ce39f_data

	_0572a9_jump:
		mov    %bl,_0ce39e_data

	_0572af_jump:
		mov    _0ce398_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		jne    _0572cd_jump
		xor    %cl,%cl
		mov    %cl,_0ce39d_data
		mov    %cl,_0ce39c_data
		jmp    _0572ef_jump

	_0572cd_jump:
		mov    $0x00000a,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %dl,_0ce39d_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %al,_0ce39c_data

	_0572ef_jump:
		cmpb   $0x000063,_0ce3a0_data
		jbe    _0572ff_jump
		mov    $0x000063,%eax
		jmp    _057306_jump

	_0572ff_jump:
		xor    %eax,%eax
		mov    _0ce3a0_data,%al

	_057306_jump:
		xor    %ebx,%ebx
		mov    $0x00000a,%ecx
		mov    %al,%bl
		mov    %al,_0ce3a0_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %al,_0ce3a1_data
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %dl,_0ce3a2_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057338_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ce324_data,%esi
		mov    _0cec4e_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _05739e_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		cmpl   $0x000000,0x000020(%ecx)
		je     _05739e_jump
		mov    0x000032(%ecx),%eax
		mov    %esi,%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,2),%ax
		cmp    0x000034(%ecx),%ax
		je     _05739e_jump

	_05737a_jump:
		cwtl   
		imul   $0x000084,%eax,%ebx
		mov    _0cc1f0_data,%edx
		andb   $0x0000fb,0x000081(%edx,%ebx,1)
		mov    %esi,%edx
		mov    0x000034(%ecx),%bx
		mov    (%edx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _05737a_jump

	_05739e_jump:
		mov    %esi,_0ce324_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0573ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    _0ce324_data,%esi
		mov    %eax,%ecx
		xor    %ah,%ah
		mov    0x000032(%ecx),%edx
		mov    %ah,(%esp)
		sar    $0x000010,%edx
		mov    %esi,%eax
		mov    (%eax,%edx,2),%ax
		cmp    0x000034(%ecx),%ax
		je     _0573fd_jump

	_0573d2_jump:
		cwtl   
		imul   $0x000084,%eax,%edx
		mov    _0cc1f0_data,%ebx
		cmpw   $0x0000a4,0x000060(%edx,%ebx,1)
		jne    _0573ee_jump
		movb   $0x000001,(%esp)
		jmp    _0573fd_jump

	_0573ee_jump:
		mov    %esi,%edx
		mov    0x000034(%ecx),%bx
		mov    (%edx,%eax,2),%ax
		cmp    %bx,%ax
		jne    _0573d2_jump

	_0573fd_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		mov    %esi,_0ce324_data
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057410_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    _0cc1f0_data,%ebx
		mov    _0cc1f4_data,%ax
		xor    %edi,%edi
		mov    %eax,(%esp)
		test   %ax,%ax
		jle    _057541_jump

	_057437_jump:
		cmpw   $0x0000a4,0x000060(%ebx)
		jne    _05752e_jump
		mov    _0ce324_data,%ecx
		movswl %di,%eax
		mov    (%ecx,%eax,2),%ax
		mov    %edi,%edx
		cmp    %di,%ax
		je     _057496_jump

	_057457_jump:
		cmp    %di,%ax
		je     _057496_jump
		testb  $0x000004,0x000081(%ebx)
		je     _057484_jump
		cmpw   $0x0000a4,0x000060(%ebx)
		jne    _057484_jump
		movswl %ax,%edx
		imul   $0x000084,%edx,%ecx
		mov    _0cc1f0_data,%edx
		andb   $0x0000fb,0x000081(%ecx,%edx,1)

	_057484_jump:
		mov    _0ce324_data,%ecx
		mov    %eax,%edx
		cwtl   
		mov    (%ecx,%eax,2),%ax
		cmp    %dx,%ax
		jne    _057457_jump

	_057496_jump:
		cmp    %di,%ax
		jne    _0574ec_jump
		movswl %di,%ecx
		mov    _0ce324_data,%eax
		add    %ecx,%ecx
		lea    (%eax,%ecx,1),%esi
		movswl %dx,%ecx
		lea    (%ecx,%ecx,1),%ebp
		add    %ebp,%eax
		mov    (%esi),%si
		mov    %si,(%eax)
		cmp    %si,%dx
		jne    _0574ce_jump
		imul   $0x000084,%ecx,%ecx
		mov    _0cc1f0_data,%eax
		movl   $0x000000,0x000020(%ecx,%eax,1)

	_0574ce_jump:
		movswl %di,%eax
		mov    _0ce324_data,%edx
		add    %eax,%eax
		add    %edx,%eax
		mov    (%eax),%dx
		mov    %dx,0x000052(%ebx)
		mov    %di,(%eax)
		movl   $0x000000,0x000020(%ebx)

	_0574ec_jump:
		cmpb   $0x000000,0x000004(%esp)
		je     _05752e_jump
		testb  $0x000004,0x000081(%ebx)
		jne    _05752e_jump
		mov    0x000052(%ebx),%si

	_057500_jump:
		movswl %si,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0ce324_data,%eax
		mov    (%edx,%eax,1),%dx
		movswl %dx,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%ecx
		add    %ecx,%eax
		call   _05754c_func
		cmp    %si,%dx
		jne    _057500_jump

	_05752e_jump:
		mov    (%esp),%ecx
		inc    %edi
		add    $0x000084,%ebx
		cmp    %cx,%di
		jl     _057437_jump

	_057541_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05754c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0ce324_data,%esi
		mov    %eax,%ebx
		mov    0x000034(%eax),%cx
		mov    %esi,%edx
		movswl %cx,%eax
		mov    (%edx,%eax,2),%ax
		cmp    %cx,%ax
		je     _05757d_jump

	_05756c_jump:
		mov    %eax,%ecx
		movswl %ax,%edx
		mov    %esi,%eax
		mov    (%eax,%edx,2),%ax
		cmp    0x000034(%ebx),%ax
		jne    _05756c_jump

	_05757d_jump:
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		lea    (%esi,%eax,1),%ebp
		movswl %cx,%eax
		lea    (%eax,%eax,1),%edi
		lea    (%esi,%edi,1),%edx
		mov    0x000000(%ebp),%di
		mov    %di,(%edx)
		cmp    %di,%cx
		jne    _0575b2_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		movl   $0x000000,0x000020(%edx,%eax,4)

	_0575b2_jump:
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		add    %eax,%eax
		lea    (%esi,%eax,1),%edx
		mov    0x000034(%ebx),%ax
		mov    %ax,(%edx)
		movl   $0x000000,0x000020(%ebx)
		mov    %esi,_0ce324_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0575d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cc1f0_data,%edx
		mov    _0cc1f4_data,%si
		xor    %ebx,%ebx
		test   %si,%si
		jle    _057649_jump

	_0575f0_jump:
		mov    _0ce324_data,%ecx
		movswl %bx,%eax
		cmp    (%ecx,%eax,2),%bx
		je     _057636_jump
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		shl    $0x000002,%eax
		mov    _092267_data(%eax),%cl
		test   $0x000040,%cl
		jne    _057624_jump
		test   $0x000020,%cl
		je     _05762d_jump
		mov    %edx,%eax
		call   _0573ac_func
		test   %ax,%ax
		jne    _05762d_jump

	_057624_jump:
		mov    %edx,%eax
		call   _05754c_func
		jmp    _05763d_jump

	_05762d_jump:
		movl   $0x000001,0x000020(%edx)
		jmp    _05763d_jump

	_057636_jump:
		movl   $0x000000,0x000020(%edx)

	_05763d_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %si,%bx
		jl     _0575f0_jump

	_057649_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057650_func:
		push   %ebx
		push   %edx
		mov    $0x000002,%bl
		mov    _0cec70_data,%ah
		mov    _0cec71_data,%dl
		and    $0x000048,%ah
		and    $0x000002,%dl
		mov    %bl,_0ce3a3_data
		mov    %ah,_0cec70_data
		mov    %dl,_0cec71_data
		xor    %bh,%bh
		mov    _0cdb15_data,%dh
		mov    %bh,_0ce3a0_data
		and    $0x0000fe,%dh
		mov    %bh,_0cee9f_data
		mov    %dh,_0cdb15_data
		pop    %edx
		pop    %ebx
		ret    



_057698_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		xor    %ah,%ah
		mov    _0cdb01_data,%dl
		mov    %ah,_0ceea6_data
		cmp    $0x000006,%dl
		sete   %al
		xor    %ah,%ah
		xor    %edx,%edx
		inc    %eax
		mov    %dx,_0cebba_data
		mov    _0cec71_data,%dh
		mov    %ax,_0ceca4_data
		test   $0x000002,%dh
		je     _0576ef_jump
		mov    $0x000021,%ecx
		mov    _0cdb0a_data,%al
		mov    $_0cda94_data,%edi
		mov    $_0ce21c_data,%esi
		mov    %al,_0ce292_data
		rep movsl %ds:(%esi),%es:(%edi)

	_0576ef_jump:
		mov    $0x000017,%esi
		mov    $0x000064,%edx
		mov    $0x000014,%cl
		xor    %al,%al
		xor    %ebx,%ebx
		mov    _0cdb15_data,%ah
		mov    %bx,_0ced00_data
		mov    %bx,_0cecea_data
		mov    %si,_0cdaf4_data
		mov    %bx,_0cdaca_data
		mov    %bx,_0cdacc_data
		mov    %bx,_0cdad4_data
		mov    %bx,_0cdad6_data
		mov    %edx,_0cdabc_data
		mov    %cl,_0cdb08_data
		mov    $0x00000a,%ebx
		mov    $0x000002,%dl
		or     $0x00000c,%ah
		xor    %ch,%ch
		mov    %ebx,_0cdac0_data
		mov    %ch,_0cdafe_data
		mov    %ch,_0cdaff_data
		mov    %ah,_0cdb15_data
		mov    %dl,_0cdb01_data
		mov    %dl,_0cdb00_data
		mov    %al,_0cdb11_data
		mov    %al,_0cdb13_data
		mov    $0x000050,%bl
		mov    $0xffffffff,%ecx
		xor    %dl,%dl
		mov    %bl,_0cdafc_data
		mov    %cx,_0cdade_data
		mov    %ecx,%edi
		mov    %cx,_0cdae6_data
		xor    %dh,%dh
		mov    $0x00004e,%bh
		mov    $0x000001,%ecx
		mov    %di,_0cdaea_data
		mov    %dx,_0ceca2_data
		mov    _0cdabc_data,%dx
		mov    %bh,_0cdafd_data
		mov    %ecx,_0cdab8_data
		mov    %ah,%cl
		xor    %bl,%bl
		mov    $0xffff8300,%eax
		and    $0x0000bf,%cl
		mov    %bl,_0ceed2_data
		mov    %bl,_0ceebb_data
		mov    %bl,_0ceece_data
		mov    %cl,_0cdb15_data
		mov    %ax,_0ceca6_data
		xor    %al,%al
		mov    $0x000001,%ch
		xor    %ah,%ah
		mov    %ch,_0ceebe_data
		mov    %al,_0ceed8_data
		mov    %al,_0ceebc_data
		mov    %al,_0ceeb9_data
		mov    %al,_0cee80_data

	_05780f_jump:
		movswl %ax,%ebx
		inc    %eax
		mov    %dx,_0cda0c_data(,%ebx,2)
		cmp    $0x00000a,%ax
		jl     _05780f_jump
		xor    %ch,%ch
		mov    (%esp),%ah
		mov    %ch,_0cdbc2_data
		mov    %ch,_0cdbc4_data
		test   %ah,%ah
		je     _05783d_jump
		andb   $0x0000f7,_0cec70_data

	_05783d_jump:
		cmpw   $0x000009,_0cecc0_data
		jne    _057851_jump
		cmpw   $0x000001,_0cecd4_data
		je     _05786a_jump

	_057851_jump:
		cmpb   $0x000000,_0cee79_data
		jne    _05786a_jump
		cmpb   $0x000000,_0ca314_data
		jne    _05786a_jump
		andb   $0x0000bf,_0cec70_data

	_05786a_jump:
		mov    _0cec71_data,%cl
		test   $0x000080,%cl
		je     _05789d_jump
		mov    %cl,%al
		mov    %cl,%ah
		shr    $0x000007,%ah
		and    $0x000001,%ah
		and    $0x0000fd,%al
		mov    %al,_0cec71_data
		mov    %ah,%al
		mov    _0cec71_data,%ch
		add    %ah,%al
		or     %al,%ch
		mov    %ch,_0cec71_data
		call   _059120_func

	_05789d_jump:
		andb   $0x0000e5,_0cec71_data
		cmpb   $0x000000,_0cdf24_data
		je     _0578e2_jump
		mov    _0cdd14_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0578e2_jump
		mov    _0cec71_data,%bl
		and    $0x00009f,%bl
		mov    _0cecd4_data,%si
		mov    %bl,_0cec71_data
		cmp    $0x000006,%si
		jne    _057901_jump
		cmpw   $0x000003,_0cecc0_data
		jne    _057901_jump
		jmp    _0578fc_jump

	_0578e2_jump:
		mov    _0cec71_data,%dl
		and    $0x00009f,%dl
		mov    %dl,_0cec71_data
		mov    %dl,%dh
		or     $0x000020,%dh
		mov    %dh,_0cec71_data

	_0578fc_jump:
		call   _058e4c_func

	_057901_jump:
		mov    _0cc1f0_data,%edx
		mov    _0cc1f4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _057a14_jump

	_057919_jump:
		cmpw   $0x000063,0x000060(%edx)
		jne    _057a04_jump
		cmpb   $0x000000,_0cee9f_data
		jne    _057944_jump
		mov    _0cdb15_data,%cl
		xor    %esi,%esi
		and    $0x0000fb,%cl
		mov    %esi,_0cdab8_data
		mov    %cl,_0cdb15_data

	_057944_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%si
		mov    0x000068(%edx),%al
		add    %esi,%eax
		sub    $0x0000a0,%eax
		mov    %ax,_0ced00_data
		mov    0x00002c(%edx),%ax
		sub    $0x00000a,%eax
		mov    _095b15_data,%ch
		mov    %ax,_0cecea_data
		test   %ch,%ch
		jne    _057979_jump
		call   _05a880_func
		jmp    _0579d0_jump

	_057979_jump:
		mov    _0ced00_data,%ax
		mov    _0cecd8_data,%di
		cmp    %di,%ax
		jl     _057992_jump
		mov    %di,_0ced00_data

	_057992_jump:
		mov    _0cecea_data,%ax
		mov    _0cecca_data,%bx
		cmp    %bx,%ax
		jl     _0579ab_jump
		mov    %bx,_0cecea_data

	_0579ab_jump:
		cmpw   $0x000000,_0ced00_data
		jge    _0579be_jump
		xor    %esi,%esi
		mov    %si,_0ced00_data

	_0579be_jump:
		cmpw   $0x000000,_0cecea_data
		jge    _0579d0_jump
		xor    %eax,%eax
		mov    %ax,_0cecea_data

	_0579d0_jump:
		xor    %eax,%eax
		mov    0x000028(%edx),%ebx
		mov    0x000068(%edx),%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdafc_data,%al
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    0x000069(%edx),%al
		mov    0x00002c(%edx),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    _0cdafd_data,%al
		sub    %eax,%edx
		mov    %ebx,_0cdabc_data
		mov    %edx,_0cdac0_data
		jmp    _057a14_jump

	_057a04_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _057919_jump

	_057a14_jump:
		cmpb   $0x000000,_0ceedd_data
		je     _057a29_jump
		mov    $_0cda94_data,%eax
		call   _01e2ec_func
		jmp    _057a39_jump

	_057a29_jump:
		xor    %eax,%eax

	_057a2b_jump:
		inc    %eax
		xor    %dl,%dl
		mov    %dl,_0cdaf5_data(%eax)
		cmp    $0x000005,%eax
		jb     _057a2b_jump

	_057a39_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057a44_func:
		push   %edx
		and    $0x0000ff,%eax
		mov    _092224_data(%eax),%dl
		test   $0x000040,%dl
		je     _057a61_jump
		test   $0x000008,%dl
		je     _057a61_jump
		mov    $0x000001,%eax
		pop    %edx
		ret    

	_057a61_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_057a68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		cmpb   $0x000007,_0cdb01_data
		je     _057be4_jump
		mov    _0cdabc_data,%si
		xor    %eax,%eax
		mov    _0cdac0_data,%dx
		mov    _0cdafc_data,%al
		xor    %ebx,%ebx
		add    %eax,%esi
		xor    %eax,%eax
		mov    _0cdafd_data,%bl
		mov    _0cdaf6_data,%al
		add    %edx,%ebx
		testb  $0x000040,_092224_data(%eax)
		je     _057ab0_jump
		sub    $0x000008,%ebx

	_057ab0_jump:
		mov    _0cdad4_data,%ax
		add    %eax,%eax
		movswl %bx,%ecx
		add    %eax,%esi
		lea    -0x000008(%ecx),%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %si,%eax
		sar    $0x000004,%eax
		movswl %ax,%ebx
		mov    %ebx,%eax
		call   _01e0e4_func
		mov    %al,0x000008(%esp)
		lea    -0x000018(%ecx),%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _01e0e4_func
		mov    %al,(%esp)
		mov    %al,0x000004(%esp)
		lea    -0x000028(%ecx),%eax
		sar    $0x000004,%eax
		sub    $0x000038,%ecx
		movswl %ax,%edx
		mov    %ebx,%eax
		sar    $0x000004,%ecx
		call   _01e0e4_func
		mov    %al,0x00000c(%esp)
		movswl %cx,%edx
		mov    %ebx,%eax
		call   _01e0e4_func
		mov    %al,%cl
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    _092224_data(%eax),%dh
		xor    %ebx,%ebx
		test   $0x000010,%dh
		je     _057b3e_jump
		xor    %eax,%eax
		mov    (%esp),%al
		call   _057a44_func
		test   %ax,%ax
		jne    _057b3e_jump
		mov    $0x000001,%ebx

	_057b3e_jump:
		test   %bx,%bx
		jne    _057bb7_jump
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0cdaa0_data,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0cdb00_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		jne    _057bb7_jump
		testb  $0x000002,_0cec71_data
		jne    _057bb7_jump
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		testb  $0x000010,_092224_data(%eax)
		je     _057b95_jump
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		call   _057a44_func
		test   %ax,%ax
		je     _057bb2_jump

	_057b95_jump:
		xor    %eax,%eax
		mov    0x00000c(%esp),%al
		testb  $0x000010,_092224_data(%eax)
		je     _057bb7_jump
		xor    %eax,%eax
		mov    %cl,%al
		call   _057a44_func
		test   %ax,%ax
		jne    _057bb7_jump

	_057bb2_jump:
		mov    $0x000001,%ebx

	_057bb7_jump:
		test   %bx,%bx
		je     _057be4_jump
		xor    %ebx,%ebx
		mov    $0x000001,%eax
		mov    %bx,_0cdad4_data
		mov    %bx,_0ceca2_data
		mov    %bx,_0cdadc_data
		call   _069c78_func
		xor    %eax,%eax
		call   _069c78_func

	_057be4_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057bec_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		xor    %edx,%edx
		mov    %dx,_0cecf6_data
		mov    %dx,_0cecf8_data
		mov    %dx,_0cdad4_data
		mov    %dx,_0cdad6_data
		call   _040784_func
		test   %ax,%ax
		je     _057c31_jump
		xor    %eax,%eax
		mov    _0cdad4_data,%dx
		mov    _0ceeb6_data,%al
		add    %eax,%edx
		mov    %dx,_0cdad4_data
		jmp    _057c52_jump

	_057c31_jump:
		call   _040714_func
		test   %ax,%ax
		je     _057c52_jump
		xor    %eax,%eax
		mov    _0cdad4_data,%di
		mov    _0ceeb6_data,%al
		sub    %eax,%edi
		mov    %di,_0cdad4_data

	_057c52_jump:
		call   _0407f4_func
		test   %ax,%ax
		je     _057c72_jump
		xor    %edx,%edx
		mov    _0cdad4_data,%eax
		mov    _0ceeb6_data,%dl
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		jmp    _057c90_jump

	_057c72_jump:
		call   _040864_func
		test   %ax,%ax
		je     _057c96_jump
		xor    %edx,%edx
		mov    _0cdad4_data,%eax
		mov    _0ceeb6_data,%dl
		sar    $0x000010,%eax
		sar    %edx
		sub    %edx,%eax

	_057c90_jump:
		mov    %ax,_0cdad6_data

	_057c96_jump:
		mov    _0cdad6_data,%bx
		test   %bx,%bx
		jle    _057ca9_jump
		call   _056c18_func
		jmp    _057cb0_jump

	_057ca9_jump:
		jge    _057cb0_jump
		call   _056b38_func

	_057cb0_jump:
		mov    _0cdad4_data,%si
		test   %si,%si
		jge    _057cc3_jump
		call   _0571ec_func
		jmp    _057cca_jump

	_057cc3_jump:
		jle    _057cca_jump
		call   _057168_func

	_057cca_jump:
		mov    $_0cda94_data,%eax
		call   _01db8c_func
		mov    _0cdad4_data,%ax
		mov    %ax,_0cecf6_data
		mov    _0cdad6_data,%ax
		mov    %ax,_0cecf8_data
		call   _02e45c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

_057cf8_switch:
		.long   _057d82_case
		.long   _057db7_case
		.long   _057dec_case
		.long   _057e07_case




_057d08_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0cdabc_data,%ax
		mov    _0cdac0_data,%di
		mov    _0cecbe_data,%cx
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %ax,(%esp)
		mov    %dx,_0ced18_data
		mov    $0xffffffff,%edx
		test   %cx,%cx
		jle    _057e97_jump

	_057d42_jump:
		movswl %bx,%eax
		mov    _0cda22_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%esi
		add    %esi,%eax
		cmpw   $0x000040,0x000060(%eax)
		jne    _057e97_jump
		mov    0x000076(%eax),%cl
		cmp    $0x000003,%cl
		ja     _057e86_jump
		and    $0x0000ff,%ecx
		jmp    *%cs:_057cf8_switch(,%ecx,4)

	_057d82_case:
		mov    -0x000002(%esp),%ecx
		mov    0x000028(%eax),%ebp
		sar    $0x000010,%ecx
		cmp    %ebp,%ecx
		jl     _057e86_jump
		mov    0x00003a(%eax),%ecx
		mov    _0ced18_data,%si
		sar    $0x000010,%ecx
		inc    %esi
		sub    $0x0000c8,%ecx
		mov    %si,_0ced18_data
		mov    %ecx,0x000028(%eax)
		jmp    _057e86_jump

	_057db7_case:
		mov    -0x000002(%esp),%ecx
		mov    0x000028(%eax),%esi
		sar    $0x000010,%ecx
		cmp    %esi,%ecx
		jl     _057e86_jump
		mov    0x00003a(%eax),%ecx
		mov    _0ced18_data,%si
		sar    $0x000010,%ecx
		dec    %esi
		sub    $0x0000c8,%ecx
		mov    %si,_0ced18_data
		mov    %ecx,0x000028(%eax)
		jmp    _057e86_jump

	_057dec_case:
		movswl %di,%ecx
		cmp    0x00002c(%eax),%ecx
		jl     _057dfb_jump
		neg    %edx
		jmp    _057e86_jump

	_057dfb_jump:
		movl   $0x002710,0x00002c(%eax)
		jmp    _057e86_jump

	_057e07_case:
		mov    _0cecc4_data,%ecx
		sar    $0x000010,%ecx
		cmp    $0xffffffff,%ecx
		je     _057e2a_jump
		imul   $0x000084,%ecx,%ecx
		add    %ecx,%esi
		cmpb   $0x000000,0x000076(%esi)
		jne    _057e86_jump
		cmpw   $0x000000,0x000050(%esi)
		jne    _057e86_jump

	_057e2a_jump:
		movswl %di,%ecx
		cmp    0x00002c(%eax),%ecx
		jl     _057e59_jump
		movswl %dx,%eax
		mov    %dx,_0ced1a_data
		test   %eax,%eax
		jge    _057e42_jump
		neg    %eax

	_057e42_jump:
		mov    _0ced1a_data,%dx
		cmp    $0x000001,%eax
		jne    _057e55_jump
		mov    $0x000002,%edx
		jmp    _057e60_jump

	_057e55_jump:
		neg    %edx
		jmp    _057e60_jump

	_057e59_jump:
		movl   $0x002710,0x00002c(%eax)

	_057e60_jump:
		mov    _0cecc4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _057e86_jump
		cmp    $0x000002,%dx
		je     _057e86_jump
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%ecx
		movw   $0x000002,0x000056(%ecx,%eax,1)

	_057e86_jump:
		mov    _0cecbe_data,%si
		inc    %ebx
		cmp    %si,%bx
		jl     _057d42_jump

	_057e97_jump:
		mov    _0ced18_data,%si
		mov    $0x000001,%al
		test   %si,%si
		jg     _057eaf_jump
		mov    %esi,%edi
		dec    %edi
		mov    %di,_0ced18_data

	_057eaf_jump:
		test   %al,%al
		je     _057f1d_jump
		mov    _0ced18_data,%ax
		test   %ax,%ax
		jg     _057ed6_jump
		mov    _0ced16_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jge    _057edc_jump
		mov    _0ced18_data,%ax
		inc    %eax

	_057ed6_jump:
		mov    %ax,_0cecf6_data

	_057edc_jump:
		cmp    $0x000001,%dx
		jne    _057eed_jump
		movw   $0x00ffff,_0cecf8_data
		jmp    _057f1d_jump

	_057eed_jump:
		cmp    $0x000002,%dx
		jne    _057f10_jump
		cmpb   $0x000000,_0cee3f_data
		je     _057f07_jump
		movw   $0x00ffff,_0cecf8_data
		jmp    _057f10_jump

	_057f07_jump:
		xor    %ebx,%ebx
		mov    %bx,_0cecf8_data

	_057f10_jump:
		movswl %dx,%eax
		cmp    $0xfffffffe,%eax
		jne    _057f1d_jump
		mov    $0xffffffff,%edx

	_057f1d_jump:
		mov    %dx,_0ced1a_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_057f30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %al,%cl
		mov    _0cc1f0_data,%edx
		mov    _0cc1f4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _057f5e_jump

	_057f4b_jump:
		add    $0x000084,%edx
		inc    %eax
		movl   $0x000000,-0x000068(%edx)
		cmp    %bx,%ax
		jl     _057f4b_jump

	_057f5e_jump:
		xor    %ebx,%ebx
		xor    %esi,%esi

	_057f62_jump:
		movswl %bx,%edx
		imul   $0x000282,%edx,%edx
		mov    %esi,%eax
		mov    %si,_0c90f0_data(%edx)
		add    $_0c8e70_data,%edx

	_057f7a_jump:
		add    $0x000002,%edx
		inc    %eax
		mov    %si,-0x000002(%edx)
		cmp    $0x000140,%ax
		jl     _057f7a_jump
		inc    %ebx
		cmp    $0x000008,%bx
		jl     _057f62_jump
		cmpb   $0x000000,_0cee9f_data
		jne    _057f9d_jump
		call   _059750_func

	_057f9d_jump:
		cmpw   $0x000001,_0cecd4_data
		jne    _057fbb_jump
		cmpw   $0x000009,_0cecc0_data
		jne    _057fbb_jump
		mov    $0x00000b,%eax
		call   _05a1ec_jump

	_057fbb_jump:
		mov    _0cec79_data,%al
		xor    %dl,%dl
		xor    %esi,%esi
		xor    %bl,%bl
		mov    %dl,_0ceead_data
		mov    %si,_0cec58_data
		mov    %bl,_0cee98_data
		mov    %si,_0ced36_data
		shl    $0x000005,%al
		mov    %si,_0ced3c_data
		shr    $0x000007,%al
		xor    %dh,%dh
		xor    %bh,%bh
		mov    %dl,_0cee85_data
		mov    %dx,_0ced24_data
		mov    %bh,_0ceed0_data
		mov    _0cecd4_data,%bx
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ax,_0cebcc_data
		mov    %edx,_0ce33c_data
		cmp    $0x000005,%bx
		jne    _058048_jump
		cmpw   $0x00000a,_0cecc0_data
		jne    _058048_jump
		mov    $0x000020,%edi
		mov    $0x000138,%eax
		mov    %di,_0cda8a_data
		mov    %ax,_0cecb6_data
		mov    %ax,_0cecca_data

	_058048_jump:
		mov    $0xfffffffe,%esi
		xor    %ch,%ch
		xor    %ebx,%ebx
		mov    %ch,_0cee95_data
		mov    %ebx,_0ccd14_data
		mov    %esi,_0ccd18_data
		call   _0531d0_func
		mov    $0xffffffff,%ebx
		mov    _095b15_data,%al
		xor    %esi,%esi
		mov    %bx,_0cdac8_data
		mov    %si,_0ce46c_data
		mov    %bx,_0ce3a4_data
		mov    %si,_0ced00_data
		mov    %si,_0cecea_data
		test   %al,%al
		jne    _0580a2_jump
		call   _05a7d4_func
		jmp    _058112_jump

	_0580a2_jump:
		mov    _0cda8a_data,%ax
		shl    $0x000004,%eax
		sub    $0x0000c8,%eax
		mov    %ax,_0cecca_data
		mov    _0cda88_data,%ax
		shl    $0x000004,%eax
		sub    $0x000131,%eax
		mov    %ax,_0cecd8_data
		test   %ax,%ax
		jge    _0580d8_jump
		mov    %si,_0cecd8_data

	_0580d8_jump:
		cmpw   $0x000000,_0cecca_data
		jge    _0580ea_jump
		xor    %eax,%eax
		mov    %ax,_0cecca_data

	_0580ea_jump:
		xor    %edx,%edx
		mov    _0cecd8_data,%ax
		mov    %dx,_0cecaa_data
		mov    %ax,_0cecb8_data
		mov    _0cecca_data,%ax
		mov    %dx,_0cecac_data
		mov    %ax,_0cecb6_data

	_058112_jump:
		mov    $0xffffffff,%ebx
		mov    _0ceec1_data,%ch
		xor    %esi,%esi
		xor    %ah,%ah
		mov    %si,_0cecf8_data
		mov    %si,_0cecf6_data
		mov    %si,_09220a_data
		mov    %si,_092208_data
		mov    %si,_0cece8_data
		mov    %ah,_0ceebd_data
		mov    %si,_0ceca2_data
		mov    %si,_0cecc8_data
		mov    %si,_0cec96_data
		xor    %al,%al
		mov    %bx,_0cecfc_data
		mov    %ax,_0cecce_data
		mov    %al,_0ceeaa_data
		mov    %al,_0ceeb8_data
		mov    %al,_0ceeba_data
		mov    %al,_0ceecc_data
		test   %ch,%ch
		jne    _05818d_jump
		movb   $0x000040,_0ceec4_data

	_05818d_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _057698_func
		cmpw   $0x000000,_0cec4e_data
		jne    _0581c9_jump
		cmpw   $0x000000,_0cece4_data
		je     _0581c9_jump
		cmpb   $0x000000,_0cdf29_data
		je     _0581c9_jump
		mov    $_0cdcd0_data,%eax
		mov    _0ce3a0_data,%dl
		call   _070ea4_func
		mov    %dl,_0ce3a0_data

	_0581c9_jump:
		cmpw   $0x000000,_0cece4_data
		jne    _058252_jump
		mov    _0ceec8_data,%al
		mov    %al,_0cdf29_data
		mov    _0cecec_data,%eax
		mov    $0x000001,%edi
		sar    $0x000010,%eax
		mov    _0cdb15_data,%dh
		mov    %eax,_0cdabc_data
		mov    _0cece4_data,%eax
		mov    %edi,_0cdab8_data
		sar    $0x000010,%eax
		and    $0x0000fb,%dh
		mov    %eax,_0cdac0_data
		mov    _0ceeca_data,%al
		mov    %dh,_0cdb15_data
		inc    %al
		mov    %dh,%bl
		mov    %al,_0ceec7_data
		xor    %eax,%eax
		or     $0x000004,%bl
		mov    _0ceeca_data,%al
		mov    %bl,_0cdb15_data
		call   _03b4ec_func
		mov    _0cecfa_data,%ax
		mov    %ax,_0ced00_data
		mov    _0cecfe_data,%ax
		mov    %ax,_0cecea_data
		jmp    _05825a_jump

	_058252_jump:
		xor    %dl,%dl
		mov    %dl,_0cee9a_data

	_05825a_jump:
		xor    %eax,%eax
		mov    %cl,%al
		call   _05d064_func
		call   _0575d8_func
		call   _057338_func
		call   _05e054_func
		cmpw   $0x000005,_0cec82_data
		jne    _058298_jump
		cmpw   $0x000004,_0cec74_data
		jne    _058298_jump
		testb  $0x000002,_0cec79_data
		je     _058298_jump
		orb    $0x000004,_0cec71_data
		jmp    _05829f_jump

	_058298_jump:
		andb   $0x0000fb,_0cec71_data

	_05829f_jump:
		testb  $0x000004,_0cec71_data
		je     _0582ad_jump
		call   _046b0c_func

	_0582ad_jump:
		call   _056518_func
		cmpw   $0x000014,_0cda88_data
		jg     _0582e1_jump
		cmpw   $0x000000,_095b52_data
		je     _0582cf_jump
		cmpb   $0x000001,_095b15_data
		jne    _0582e1_jump

	_0582cf_jump:
		mov    _0cecb8_data,%ax
		mov    %ax,_0cecaa_data
		mov    %ax,_0ced00_data

	_0582e1_jump:
		cmpb   $0x000000,_0cee61_data
		je     _0582fc_jump
		mov    _0cecaa_data,%ax
		mov    %ax,_0cecb8_data
		mov    %ax,_0ced00_data

	_0582fc_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058304_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _05323c_func
		call   _02362c_func
		call   _01f29c_func
		call   _02571c_func
		mov    $0x000001,%edx
		mov    $0x000003,%ecx
		mov    $0x000002,%ah
		mov    $0xffffffff,%edi
		xor    %bl,%bl
		mov    %dx,_0cecc4_data
		mov    %edx,%esi
		mov    %dx,_0cecda_data
		mov    %cx,_0ce39a_data
		mov    %ah,_0cdb0a_data
		mov    %bl,_0ceea6_data
		mov    $0x000001,%dl
		mov    $0x0000a0,%eax
		mov    %si,_0cece4_data
		xor    %bh,%bh
		mov    %dl,_0cdbc0_data
		mov    $0x000009,%dh
		xor    %cl,%cl
		mov    %dh,_0cee88_data
		mov    $0x0000aa,%edx
		mov    %bl,_0cee86_data
		call   _01d0bc_func
		call   _057650_func
		mov    $0x000005,%eax
		mov    %di,_0ced18_data
		mov    %di,_0ced1a_data
		mov    %bx,_0cecf2_data
		xor    %edx,%edx
		mov    %cl,_0ceebf_data
		mov    %dx,_0cecec_data
		call   _0690e0_func
		movswl %ax,%edx
		add    %edx,%edx
		mov    _095af8_data(%edx),%cx
		mov    %ax,_0cebae_data
		cmp    $0x000005,%cx
		jne    _0583ed_jump
		cmpw   $0x00000a,_095b04_data(%edx)
		jne    _0583ed_jump
		inc    %eax
		mov    %ax,_0cebae_data
		cmp    $0x000006,%ax
		jne    _0583ed_jump
		xor    %eax,%eax
		mov    %ax,_0cebae_data

	_0583ed_jump:
		mov    $0x000001,%ch
		mov    $0xfffffffe,%edx
		xor    %ah,%ah
		mov    %ch,_0cee82_data
		mov    %ch,_0cee83_data
		mov    %edx,_0ccd18_data
		xor    %dl,%dl
		mov    %ah,_0ceede_data
		xor    %dh,%dh
		mov    %ah,_0cee84_data
		mov    %dx,_0cebac_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058428_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    %dx,_0cecda_data
		mov    %bx,_0cecc4_data
		pop    %edx
		pop    %ebx
		ret    



_058444_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    _0cc49c_data,%eax
		mov    %eax,_0cc490_data
		mov    _0cc498_data,%eax
		mov    %eax,_0cc484_data
		mov    _0cc4a4_data,%eax
		mov    %eax,_0cc480_data
		mov    _0cc4a0_data,%eax
		mov    %eax,_0cc47c_data
		cmpb   $0x000000,_0ceec1_data
		jne    _058527_jump
		call   _0234a0_func
		cwtl   
		cmp    $0xfffffffe,%eax
		setne  %al
		xor    %ah,%ah
		mov    %ax,_0cec4e_data
		test   %ax,%ax
		jne    _0584ae_jump
		cmpw   $0x000000,_0cece4_data
		je     _0584ae_jump
		cmpb   $0x000000,_0cee9f_data
		jne    _0584ae_jump
		mov    $0x000001,%al
		jmp    _0584b0_jump

	_0584ae_jump:
		xor    %al,%al

	_0584b0_jump:
		mov    %al,%bl
		test   %al,%al
		je     _0584c4_jump
		xor    %ecx,%ecx
		call   _070c60_func
		mov    %cx,_0cec4a_data

	_0584c4_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _057f30_func
		test   %bl,%bl
		je     _0584dd_jump
		mov    $_0cdcd0_data,%edx
		xor    %eax,%eax
		call   _070c6c_func

	_0584dd_jump:
		cmpw   $0x000000,_0cece4_data
		jne    _0584f7_jump
		movw   $0x000001,_0cece4_data
		call   _01ccb8_func
		jmp    _0584ff_jump

	_0584f7_jump:
		xor    %bh,%bh
		mov    %bh,_0cee9a_data

	_0584ff_jump:
		mov    $0x000001,%edx
		xor    %eax,%eax
		mov    $0x000010,%cl
		call   _057410_func
		mov    %dx,_0ceca4_data
		xor    %eax,%eax
		mov    %cl,_0ceeb6_data
		mov    %ax,_0cecc4_data
		call   _0560d8_func

	_058527_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05852c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    _0cc1f0_data,%esi
		xor    %edx,%edx
		mov    _0cc1f4_data,%ax
		mov    %edx,(%esp)
		mov    %eax,0x000004(%esp)
		test   %ax,%ax
		jle    _05862a_jump

	_058552_jump:
		cmpw   $0x0000a4,0x000060(%esi)
		jne    _058610_jump
		testb  $0x000004,0x000081(%esi)
		je     _0585b3_jump
		mov    _0ce324_data,%ebx
		mov    0x000052(%esi),%ax

	_058571_jump:
		mov    %eax,%edx
		cwtl   
		mov    0x000052(%esi),%cx
		mov    (%ebx,%eax,2),%ax
		cmp    %cx,%ax
		jne    _058571_jump
		mov    0x000032(%esi),%ecx
		sar    $0x000010,%ecx
		mov    %ax,(%ebx,%ecx,2)
		movswl %dx,%eax
		mov    0x000034(%esi),%dx
		mov    %dx,(%ebx,%eax,2)
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%ebx
		movl   $0x000001,0x000020(%esi)
		movl   $0x000001,0x000020(%ebx,%eax,1)
		jmp    _058610_jump

	_0585b3_jump:
		mov    0x000034(%esi),%dx
		movswl %dx,%eax
		mov    _0cdd18_data(,%eax,2),%ax
		cmp    %ax,%dx
		je     _058610_jump

	_0585c7_jump:
		movswl %dx,%ebx
		mov    _0ce324_data,%edi
		mov    _0cdd18_data(,%ebx,2),%ax
		mov    %ax,(%edi,%ebx,2)
		imul   $0x000084,%ebx,%ebx
		cmp    %ax,%dx
		je     _0585f7_jump
		mov    _0cc1f0_data,%ecx
		movl   $0x000001,0x000020(%ecx,%ebx,1)
		jmp    _058605_jump

	_0585f7_jump:
		mov    _0cc1f0_data,%ecx
		movl   $0x000000,0x000020(%ecx,%ebx,1)

	_058605_jump:
		mov    0x000034(%esi),%bx
		mov    %eax,%edx
		cmp    %bx,%ax
		jne    _0585c7_jump

	_058610_jump:
		mov    (%esp),%ecx
		mov    0x000004(%esp),%edi
		inc    %ecx
		add    $0x000084,%esi
		mov    %ecx,(%esp)
		cmp    %di,%cx
		jl     _058552_jump

	_05862a_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058634_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _05852c_func
		cmpw   $0x000000,_0cec4e_data
		jne    _058671_jump
		cmpw   $0x000000,_0cece4_data
		je     _058671_jump
		xor    %eax,%eax
		mov    _0cecc0_data,%al
		call   _05f244_func
		test   %ax,%ax
		jne    _058671_jump
		cmpb   $0x000000,_0cee9f_data
		jne    _058671_jump
		call   _070c60_func

	_058671_jump:
		mov    _0cecda_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0586f3_jump
		cmpw   $0x000000,_0cecc4_data
		jne    _058692_jump
		cmpw   $0x000000,_0cecda_data
		je     _0586f3_jump

	_058692_jump:
		mov    $0x000021,%ecx
		mov    $_0ce2a0_data,%edi
		mov    $_0cda94_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0cda94_data,%edi
		mov    $_0ce21c_data,%esi
		mov    $0x000001,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		call   _057698_func
		mov    _0ce316_data,%al
		mov    %al,_0cdb0a_data
		mov    _0ce317_data,%al
		xor    %ebx,%ebx
		mov    %al,_0cdb0b_data
		mov    _0ce319_data,%al
		xor    %edx,%edx
		mov    %al,_0cdb0d_data
		mov    $_0cda94_data,%eax
		xor    %edi,%edi
		call   _01d374_func
		mov    %di,_0ceca4_data

	_0586f3_jump:
		cmpb   $0x000000,_0ceeb5_data
		je     _058701_jump
		call   _01f2c0_func

	_058701_jump:
		mov    _0cecce_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _058716_jump
		xor    %dh,%dh
		mov    %dh,_0ca315_data

	_058716_jump:
		mov    $_0ccc98_data,%eax
		call   _07b7b4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058728_func:
		push   %edx
		cmpb   $0x000000,_0ceec4_data
		jne    _058745_jump
		call   _05852c_func
		xor    %eax,%eax
		call   _057f30_func
		xor    %eax,%eax
		call   _057410_func

	_058745_jump:
		cmpw   $0x000000,_0cec4e_data
		jne    _05876d_jump
		cmpw   $0x000000,_0cece4_data
		je     _05876d_jump
		mov    $_0cdf2c_data,%edx
		xor    %eax,%eax
		call   _070c6c_func
		xor    %dl,%dl
		mov    %dl,_0ceede_data

	_05876d_jump:
		pop    %edx
		ret    



_058770_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0ceecd_data
		je     _058830_jump
		mov    _0cecda_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _058815_jump
		mov    $0x000021,%ecx
		mov    $_0ce21c_data,%edi
		mov    $_0cda94_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,%esi
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %esi,%eax
		mov    _0cc1f0_data,%esi
		shl    $0x000002,%eax
		mov    $_0cda94_data,%edi
		add    %eax,%esi
		mov    $0x000001,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		call   _057698_func
		mov    _0ce292_data,%al
		mov    %al,_0cdb0a_data
		mov    _0ce293_data,%al
		mov    $0x000006,%edx
		mov    %al,_0cdb0b_data
		mov    _0ce295_data,%al
		xor    %ebx,%ebx
		mov    %al,_0cdb0d_data
		mov    $_0cda94_data,%eax
		call   _01d374_func
		mov    $0x000002,%edx
		xor    %bl,%bl
		mov    %dx,_0ceca4_data
		mov    %bl,_0ceecd_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_058815_jump:
		cmpb   $0x000000,_0cee8e_data
		je     _058830_jump
		mov    $0x000001,%eax
		xor    %dh,%dh
		call   _057698_func
		mov    %dh,_0ceecd_data

	_058830_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058838_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000000,_0cee79_data
		je     _0588a2_jump
		mov    $0x000201,%edx
		sub    %eax,%eax
		in     (%dx),%al
		test   $0x000010,%al
		je     _05886e_jump
		test   $0x000020,%al
		je     _05886e_jump
		test   $0x000040,%al
		je     _05886e_jump
		test   $0x000080,%al
		je     _05886e_jump
		mov    _0cee79_data,%dl
		cmp    $0x000003,%dl
		je     _05886e_jump
		cmp    $0x000004,%dl
		jne    _0588a2_jump

	_05886e_jump:
		movw   $0x000001,_0cecda_data
		call   _03b8d0_func
		cmpb   $0x000004,_0cee79_data
		jne    _058893_jump
		mov    $0x000001,%bh
		mov    %bh,_0ceebf_data
		mov    %bh,_0ceec1_data

	_058893_jump:
		mov    $0x000002,%ch
		mov    $0x000001,%al
		mov    %ch,_0cee79_data
		mov    %al,_0cee7a_data

	_0588a2_jump:
		mov    _0cee7a_data,%ah
		cmp    $0x000002,%ah
		jne    _0588bd_jump
		movw   $0x000001,_0cecda_data
		call   _03b8d0_func
		jmp    _0588e1_jump

	_0588bd_jump:
		cmp    $0x000003,%ah
		jne    _0588e1_jump
		mov    $0x000001,%ebx
		mov    $0x000001,%dh
		mov    %bx,_0cecda_data
		call   _03b8d0_func
		mov    %dh,_0ceebf_data
		mov    %dh,_0ceec1_data

	_0588e1_jump:
		mov    $0x000001,%eax
		call   _0531e8_func
		call   _0234c8_func
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    %ax,_0ced0a_data
		xor    %eax,%eax
		mov    _0cdb00_data,%al
		mov    %ax,_0ced1c_data
		mov    _0ced00_data,%ax
		mov    %ax,_0cecf4_data
		mov    _0cecea_data,%ax
		mov    _095b14_data,%bh
		mov    %ax,_0cecf0_data
		cmp    $0x000001,%bh
		jne    _058962_jump
		xor    %eax,%eax
		mov    _0ced00_data,%dx
		mov    _0cdafc_data,%al
		add    $0x000140,%edx
		sub    %eax,%edx
		sub    $0x000024,%edx
		mov    %dx,_0ceba0_data
		mov    _0ced00_data,%dx
		add    $0x000014,%edx
		sub    %eax,%edx
		mov    %dx,_0ceb9e_data
		jmp    _0589a0_jump

	_058962_jump:
		mov    _0ced00_data,%ax
		xor    %edx,%edx
		mov    _0cc498_data,%si
		mov    _0cdafc_data,%dl
		add    %esi,%eax
		sub    %edx,%eax
		sub    $0x000024,%eax
		mov    _0cc49c_data,%di
		mov    %ax,_0ceba0_data
		mov    _0ced00_data,%ax
		add    %edi,%eax
		add    $0x000014,%eax
		sub    %edx,%eax
		mov    %ax,_0ceb9e_data

	_0589a0_jump:
		mov    _0cdadc_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _0589c8_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0e3cd6_data,%al
		mov    %al,0x00007e(%edx)

	_0589c8_jump:
		testb  $0x000004,_0cec71_data
		je     _0589d6_jump
		call   _046be0_func

	_0589d6_jump:
		cmpw   $0x000003,_0cecd4_data
		je     _0589ee_jump
		mov    _0cecce_data,%ax
		mov    %ax,_0cecc8_data
		jmp    _0589f7_jump

	_0589ee_jump:
		xor    %edx,%edx
		mov    %dx,_0cecc8_data

	_0589f7_jump:
		call   _056518_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_058a04_switch:
		.long   _058a65_case
		.long   _058a6c_case
		.long   _058a8d_case
		.long   _058a8d_case
		.long   _058a94_case




_058a18_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _0235c8_func
		call   _023890_func
		call   _0564a4_func
		testb  $0x000004,_0cdb15_data
		je     _058cea_jump
		cmpb   $0x000040,_0ceec4_data
		je     _058a4b_jump
		movw   $0x00ffff,_0cdade_data

	_058a4b_jump:
		mov    _0ceca4_data,%ax
		dec    %eax
		cmp    $0x000004,%ax
		ja     _058a9b_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_058a04_switch(,%eax,4)

	_058a65_case:
		call   _06e4bc_func
		jmp    _058aa0_jump

	_058a6c_case:
		cmpb   $0x000006,_0cdb01_data
		je     _058a86_jump
		mov    $0x000006,%edx
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx
		call   _01d374_func

	_058a86_jump:
		call   _06e178_func
		jmp    _058aa0_jump

	_058a8d_case:
		call   _06dc68_func
		jmp    _058aa0_jump

	_058a94_case:
		call   _02830c_func
		jmp    _058aa0_jump

	_058a9b_jump:
		call   _057bec_func

	_058aa0_jump:
		cmpw   $0x000000,_0cecbe_data
		jle    _058abb_jump
		cmpw   $0x000000,_0ceca4_data
		jle    _058abb_jump
		call   _057d08_func
		jmp    _058ace_jump

	_058abb_jump:
		mov    $0xffffffff,%edi
		mov    %di,_0ced18_data
		mov    %di,_0ced1a_data

	_058ace_jump:
		call   _056658_func
		mov    $_0cda94_data,%eax
		call   _01db8c_func
		mov    _0ced18_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _058afe_jump
		cmpw   $0x0000ff,_0cecf8_data
		jne    _058afe_jump
		xor    %ebx,%ebx
		mov    %bx,_0cecf8_data

	_058afe_jump:
		cmpw   $0x000000,_0ceca4_data
		jle    _058b0d_jump
		call   _056cc0_func

	_058b0d_jump:
		cmpw   $0x000002,_0ceca4_data
		jne    _058c9d_jump
		mov    _0ced16_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _058b5f_jump
		mov    _0cdad4_data,%ax
		mov    %ax,_0ced18_data
		mov    _0cecf6_data,%ax
		mov    %ax,_0cdad4_data
		test   %ax,%ax
		jle    _058b4c_jump
		call   _057168_func
		jmp    _058b53_jump

	_058b4c_jump:
		jge    _058b53_jump
		call   _0571ec_func

	_058b53_jump:
		mov    _0ced18_data,%ax
		mov    %ax,_0cdad4_data

	_058b5f_jump:
		mov    _0cdb00_data,%cl
		cmp    $0x00000e,%cl
		je     _058c76_jump
		mov    %cl,%al
		cmp    $0x000001,%cl
		jb     _058b85_jump
		jbe    _058bcb_jump
		cmp    $0x000005,%cl
		je     _058c43_jump
		jmp    _058c6a_jump

	_058b85_jump:
		test   %cl,%cl
		jne    _058c6a_jump
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _058b9b_jump
		neg    %eax

	_058b9b_jump:
		cmp    $0x000001,%eax
		jg     _058bb7_jump
		mov    _0cecf4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _058bae_jump
		neg    %eax

	_058bae_jump:
		cmp    $0x000001,%eax
		jle    _058c6a_jump

	_058bb7_jump:
		mov    $0x000006,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func
		jmp    _058c6a_jump

	_058bcb_jump:
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _058bd9_jump
		neg    %eax

	_058bd9_jump:
		cmp    $0x000001,%eax
		jg     _058c02_jump
		mov    _0cecf4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _058bec_jump
		neg    %eax

	_058bec_jump:
		cmp    $0x000001,%eax
		jg     _058c02_jump
		mov    $0x000007,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func
		jmp    _058c6a_jump

	_058c02_jump:
		mov    _0cecf4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _058c10_jump
		neg    %eax

	_058c10_jump:
		cmp    $0x000004,%eax
		jle    _058c6a_jump
		mov    _0cecd6_data,%edx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    $0x000064,%edx
		cmp    %edx,%eax
		jge    _058c6a_jump
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func
		call   _01cb68_func
		jmp    _058c6a_jump

	_058c43_jump:
		mov    _0cecf4_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _058c51_jump
		neg    %eax

	_058c51_jump:
		cmp    $0x000004,%eax
		jg     _058c6a_jump
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func
		call   _01cb68_func

	_058c6a_jump:
		mov    _0ced00_data,%ax
		mov    %ax,_0cecaa_data

	_058c76_jump:
		mov    _0cecf4_data,%edx
		mov    _0cdb20_data,%eax
		sar    $0x000010,%edx
		mov    0x000028(%eax),%ebx
		add    %edx,%ebx
		mov    _0cecf6_data,%edx
		mov    0x00002c(%eax),%ecx
		sar    $0x000010,%edx
		mov    %ebx,0x000028(%eax)
		add    %edx,%ecx
		mov    %ecx,0x00002c(%eax)

	_058c9d_jump:
		mov    $_0cecf8_data,%edx
		mov    $_0cecf6_data,%eax
		call   _053958_func
		call   _0560d8_func
		call   _0566b4_func
		mov    _0cdadc_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _058d14_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x00007e(%eax),%dl
		mov    %dl,_0e3cd6_data
		cmp    $0x000003,%dl
		jbe    _058d14_jump
		movb   $0x000003,0x00007e(%eax)
		jmp    _058d14_jump

	_058cea_jump:
		mov    $0xffffffff,%edx
		call   _056658_func
		mov    %dx,_0ced1a_data
		call   _0560d8_func
		mov    _0ceec4_data,%dl
		test   %dl,%dl
		je     _058d14_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0ceec4_data

	_058d14_jump:
		call   _057268_func
		cmpw   $0x000000,_0cec4a_data
		je     _058d50_jump
		mov    _0cecee_data,%ecx
		mov    _0cecf2_data,%ebx
		mov    _0cece8_data,%edx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _059928_func
		call   _05a028_func

	_058d50_jump:
		call   _077ad4_func
		testb  $0x000002,_0cec71_data
		je     _058e45_jump
		xor    %eax,%eax
		call   _01d1ac_func
		testb  $0x000080,_0cec71_data
		je     _058d92_jump
		mov    _0cdae8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _058da8_jump
		mov    _0cdaee_data,%bx
		cmp    $0x000100,%bx
		je     _058d92_jump
		test   %bx,%bx
		jne    _058da8_jump

	_058d92_jump:
		mov    $0x000100,%esi
		mov    $0x0000c8,%cl
		mov    %si,_0cdaee_data
		mov    %cl,_0ceedc_data
		jmp    _058df2_jump

	_058da8_jump:
		testb  $0x000080,_0cec71_data
		je     _058df2_jump
		cmpb   $0x000005,_0cdb01_data
		setne  %al
		and    $0x0000ff,%eax
		je     _058df2_jump
		mov    _0ceedc_data,%bl
		test   %bl,%bl
		jne    _058de8_jump
		mov    _0cdaec_data,%ebx
		sar    $0x000010,%ebx
		xor    %eax,%eax
		sub    $0x000005,%ebx
		cmp    %ebx,%eax
		jge    _058de0_jump
		mov    %ebx,%eax

	_058de0_jump:
		mov    %ax,_0cdaee_data
		jmp    _058df2_jump

	_058de8_jump:
		mov    %bl,%bh
		dec    %bh
		mov    %bh,_0ceedc_data

	_058df2_jump:
		testb  $0x000008,_0cdb15_data
		je     _058e1c_jump
		xor    %eax,%eax
		mov    _0cdacc_data,%cx
		mov    _0cdafd_data,%al
		add    %ecx,%eax
		mov    _0cdaca_data,%bx
		movswl %ax,%edx
		xor    %eax,%eax
		sub    $0x000008,%ebx
		jmp    _058e38_jump

	_058e1c_jump:
		xor    %eax,%eax
		mov    _0cdacc_data,%di
		mov    _0cdafd_data,%al
		add    %edi,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0cdaca_data,%bx

	_058e38_jump:
		mov    _0cdafc_data,%al
		add    %ebx,%eax
		cwtl   
		call   _01d0bc_func

	_058e45_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058e4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cdb18_data,%edx
		mov    _0cdb1c_data,%ebx
		mov    _0cec71_data,%al
		and    $0x00009f,%al
		testb  $0x000060,_0cec71_data
		jne    _058eaa_jump
		or     $0x000020,%al
		mov    %al,_0cec71_data
		test   %ebx,%ebx
		je     _058e90_jump
		movl   $0x000001,0x000024(%ebx)
		mov    0x000081(%ebx),%cl
		movb   $0x000003,0x00007e(%ebx)
		or     $0x000004,%cl
		mov    %cl,0x000081(%ebx)

	_058e90_jump:
		test   %edx,%edx
		je     _058eeb_jump
		movl   $0x000001,0x000024(%edx)
		mov    0x000081(%edx),%ch
		movb   $0x000001,0x00007e(%edx)
		or     $0x000004,%ch
		jmp    _058ee5_jump

	_058eaa_jump:
		mov    %al,_0cec71_data
		test   %ebx,%ebx
		je     _058ecd_jump
		movl   $0x000000,0x000024(%ebx)
		mov    0x000081(%ebx),%cl
		movb   $0x000003,0x00007e(%ebx)
		and    $0x0000fb,%cl
		mov    %cl,0x000081(%ebx)

	_058ecd_jump:
		test   %edx,%edx
		je     _058eeb_jump
		movl   $0x000000,0x000024(%edx)
		mov    0x000081(%edx),%ch
		movb   $0x000003,0x00007e(%edx)
		and    $0x0000fb,%ch

	_058ee5_jump:
		mov    %ch,0x000081(%edx)

	_058eeb_jump:
		mov    %ebx,_0cdb1c_data
		mov    %edx,_0cdb18_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_058efc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cec71_data,%ah
		test   $0x000002,%ah
		sete   %al
		and    $0x000001,%al
		mov    %ah,%dl
		and    $0x0000fd,%dl
		add    %al,%al
		mov    %dl,_0cec71_data
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,_0cec71_data
		test   $0x000002,%dh
		je     _058f79_jump
		mov    $0x000021,%ecx
		mov    $_0ce21c_data,%edi
		mov    $_0cda94_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0cecca_data,%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %esi,%eax
		mov    _0cc1f0_data,%esi
		shl    $0x000002,%eax
		mov    $_0cda94_data,%edi
		add    %eax,%esi
		mov    _0ce220_data,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0xffffffff,%edx
		mov    %eax,_0cda98_data
		mov    $0x0000ce,%eax
		jmp    _058fb6_jump

	_058f79_jump:
		mov    $0x000021,%ecx
		mov    $_0ce2a0_data,%edi
		mov    $_0ce21c_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0ce21c_data,%edi
		mov    $_0cda94_data,%esi
		rep movsl %ds:(%esi),%es:(%edi)
		mov    $0x000021,%ecx
		mov    $_0cda94_data,%edi
		mov    $_0ce2a0_data,%esi
		mov    $0xffffffff,%edx
		mov    $0x0000cf,%eax
		rep movsl %ds:(%esi),%es:(%edi)

	_058fb6_jump:
		call   _06f35c_func
		mov    _0ce252_data,%ax
		mov    %ax,_0cdaca_data
		mov    _0ce254_data,%ax
		mov    %ax,_0cdacc_data
		mov    _0ce25c_data,%ax
		mov    %ax,_0cdad4_data
		mov    _0ce25e_data,%ax
		mov    %ax,_0cdad6_data
		mov    _0ce244_data,%eax
		mov    %eax,_0cdabc_data
		mov    _0ce248_data,%eax
		mov    %eax,_0cdac0_data
		mov    _0ce284_data,%al
		mov    %al,_0cdafc_data
		mov    _0ce285_data,%al
		mov    %al,_0cdafd_data
		mov    _0ce290_data,%al
		mov    %al,_0cdb08_data
		mov    _0ce286_data,%al
		mov    _0cdb15_data,%bh
		mov    %al,_0cdafe_data
		mov    _0ce287_data,%al
		and    $0x0000f7,%bh
		mov    %al,_0cdaff_data
		mov    _0ce29d_data,%al
		mov    %bh,%cl
		and    $0x000008,%al
		or     %al,%cl
		mov    _0ce26c_data,%ax
		mov    %ax,_0cdae4_data
		mov    _0ce289_data,%al
		mov    %al,_0cdb01_data
		mov    _0ce288_data,%al
		mov    $0x000017,%edx
		mov    %al,_0cdb00_data
		mov    _0ce266_data,%ax
		mov    %dx,_0cdaf4_data
		mov    %ax,_0cdade_data
		mov    _0ce26e_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0cdae6_data
		mov    _0ce272_data,%ax
		mov    %bh,_0cdb15_data
		mov    %ax,_0cdaea_data
		mov    _0ce299_data,%al
		mov    %edx,_0cdab8_data
		mov    %al,_0cdb11_data
		mov    _0ce29b_data,%al
		mov    $0x000002,%edx
		mov    %al,_0cdb13_data
		mov    _0ce292_data,%al
		mov    %cl,_0cdb15_data
		mov    %al,_0cdb0a_data
		mov    _0ce293_data,%al
		mov    %cl,%ch
		mov    %al,_0cdb0b_data
		mov    _0ce295_data,%al
		or     $0x000004,%ch
		mov    %al,_0cdb0d_data
		mov    $_0cda94_data,%eax
		mov    %ch,_0cdb15_data
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _059117_jump
		mov    $0x00000f,%ebx
		mov    $_0cda94_data,%eax
		xor    %edx,%edx
		call   _01d374_func

	_059117_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059120_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cec71_data,%dl
		mov    _0cec71_data,%al
		shl    $0x000006,%dl
		mov    %al,%ah
		shr    $0x000007,%dl
		shr    $0x000007,%ah
		cmp    %ah,%dl
		jne    _05940a_jump
		test   $0x000080,%al
		sete   %al
		and    $0x000001,%al
		mov    _0cec71_data,%ah
		and    $0x00007f,%ah
		mov    %ah,_0cec71_data
		shl    $0x000007,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %dl,%al
		mov    %dl,%ah
		shr    $0x000007,%ah
		and    $0x000001,%ah
		mov    %dl,_0cec71_data
		and    $0x0000fd,%al
		mov    %al,_0cec71_data
		mov    %ah,%al
		mov    _0cec71_data,%dh
		add    %ah,%al
		or     %al,%dh
		mov    %dh,_0cec71_data
		test   $0x000080,%dh
		je     _05923d_jump
		mov    $0x000021,%ecx
		mov    _0cecca_data,%edx
		mov    $_0ce21c_data,%edi
		sar    $0x000010,%edx
		mov    $_0cda94_data,%esi
		mov    %edx,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %edx,%eax
		mov    _0cc1f0_data,%esi
		shl    $0x000002,%eax
		mov    $_0cda94_data,%edi
		add    %eax,%esi
		mov    _0ce220_data,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %eax,_0cda98_data
		mov    _0ce224_data,%eax
		mov    %eax,_0cda9c_data
		mov    _0ce21c_data,%eax
		mov    %eax,_0cda94_data
		mov    _0cec70_data,%ax
		mov    %ax,_0cec6e_data
		mov    _0cec71_data,%al
		and    $0x000006,%al
		mov    %al,_0cec71_data
		mov    %al,%ah
		or     $0x000080,%ah
		mov    %ah,_0cec71_data
		mov    %ah,%al
		shr    $0x000007,%ah
		and    $0x000001,%ah
		and    $0x0000fd,%al
		mov    _0cec70_data,%ch
		mov    %al,_0cec71_data
		mov    %ah,%al
		mov    _0cec71_data,%dl
		add    %ah,%al
		and    $0x000041,%ch
		or     %al,%dl
		mov    %ch,_0cec70_data
		mov    %dl,_0cec71_data
		jmp    _0592ae_jump

	_05923d_jump:
		mov    $0x000021,%ecx
		mov    $_0ce2a0_data,%edi
		mov    $_0ce21c_data,%esi
		mov    _0cec6e_data,%ax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %ax,_0cec70_data
		mov    $0x000021,%ecx
		mov    $_0ce21c_data,%edi
		mov    _0cec71_data,%bh
		mov    $_0cda94_data,%esi
		and    $0x00007f,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %bh,%al
		mov    $0x000021,%ecx
		mov    %bh,%ah
		mov    $_0cda94_data,%edi
		shr    $0x000007,%ah
		mov    $_0ce2a0_data,%esi
		and    $0x000001,%ah
		mov    %bh,_0cec71_data
		and    $0x0000fd,%al
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %al,_0cec71_data
		mov    %ah,%al
		mov    _0cec71_data,%cl
		add    %ah,%al
		or     %al,%cl
		mov    %cl,_0cec71_data

	_0592ae_jump:
		mov    _0ce252_data,%ax
		mov    %ax,_0cdaca_data
		mov    _0ce254_data,%ax
		mov    %ax,_0cdacc_data
		mov    _0ce25c_data,%ax
		mov    %ax,_0cdad4_data
		mov    _0ce25e_data,%ax
		mov    %ax,_0cdad6_data
		mov    _0ce244_data,%eax
		mov    %eax,_0cdabc_data
		mov    _0ce248_data,%eax
		mov    %eax,_0cdac0_data
		mov    _0ce284_data,%al
		mov    %al,_0cdafc_data
		mov    _0ce285_data,%al
		mov    $0x000017,%edx
		mov    %al,_0cdafd_data
		mov    _0ce290_data,%al
		mov    %dx,_0cdaf4_data
		mov    %al,_0cdb08_data
		mov    _0ce286_data,%al
		mov    _0cdb15_data,%dh
		mov    %al,_0cdafe_data
		mov    _0ce287_data,%al
		and    $0x0000f7,%dh
		mov    %al,_0cdaff_data
		mov    _0ce29d_data,%al
		mov    %dh,%bl
		and    $0x000008,%al
		or     %al,%bl
		mov    _0ce26c_data,%ax
		mov    %ax,_0cdae4_data
		mov    _0ce289_data,%al
		mov    %al,_0cdb01_data
		mov    _0ce288_data,%al
		mov    %al,_0cdb00_data
		mov    _0ce266_data,%ax
		mov    %ax,_0cdade_data
		mov    _0ce26e_data,%ax
		mov    %dh,_0cdb15_data
		mov    %ax,_0cdae6_data
		mov    _0ce272_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0cdaea_data
		mov    _0ce299_data,%al
		mov    %edx,_0cdab8_data
		mov    %al,_0cdb11_data
		mov    _0ce29b_data,%al
		mov    $0x000002,%edx
		mov    %al,_0cdb13_data
		mov    _0ce292_data,%al
		mov    %bl,_0cdb15_data
		mov    %al,_0cdb0a_data
		mov    _0ce293_data,%al
		mov    %bl,%bh
		mov    %al,_0cdb0b_data
		mov    _0ce295_data,%al
		or     $0x000004,%bh
		mov    %al,_0cdb0d_data
		mov    $_0cda94_data,%eax
		mov    %bh,_0cdb15_data
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _05940a_jump
		mov    $0x00000f,%ebx
		mov    $_0cda94_data,%eax
		xor    %edx,%edx
		call   _01d374_func

	_05940a_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059410_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0ceea6_data,%ah
		cmp    $0x000003,%ah
		je     _05953d_jump
		cmp    $0x000002,%ah
		jne    _059454_jump
		mov    $0x000001,%eax
		call   _0531e8_func
		call   _05fbb4_func
		xor    %edx,%edx
		mov    $_0cda94_data,%eax
		mov    %dx,_0cecf6_data
		mov    %dx,_0cecf8_data
		call   _0544fc_func
		jmp    _059459_jump

	_059454_jump:
		call   _028720_func

	_059459_jump:
		cmpw   $0x000000,_0cec4a_data
		je     _0594a5_jump
		mov    $0x000001,%esi
		mov    _0cecee_data,%ecx
		mov    _0cecf2_data,%ebx
		mov    _0cece8_data,%edx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		xor    %edi,%edi
		call   _059928_func
		call   _05a028_func
		mov    %si,_0ceb8a_data
		mov    %di,_0ceb88_data

	_0594a5_jump:
		mov    _0ce3a2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    _0ce46c_data,%ax
		xor    %ebx,%ebx
		test   %ax,%ax
		jle    _05953d_jump

	_0594d1_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000008,_092267_data(,%eax,4)
		jne    _059507_jump
		cmp    $0x0000a1,%ax
		jne    _0594ed_jump
		cmpb   $0x000017,0x00006c(%edx)
		je     _059507_jump

	_0594ed_jump:
		cmpw   $0x000053,0x000060(%edx)
		jne    _0594fa_jump
		cmpb   $0x000001,0x00006c(%edx)
		je     _059507_jump

	_0594fa_jump:
		cmpw   $0x000021,0x000060(%edx)
		jne    _059515_jump
		cmpb   $0x000023,0x00006c(%edx)
		je     _059515_jump

	_059507_jump:
		mov    %edx,%eax
		call   _0544fc_func
		mov    %edx,%eax
		call   _01e674_func

	_059515_jump:
		inc    %ebx
		movswl %bx,%eax
		mov    _0ce3a2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%edx
		mov    _0ce46c_data,%cx
		add    %eax,%edx
		cmp    %cx,%bx
		jl     _0594d1_jump

	_05953d_jump:
		call   _0560d8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059550_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpw   $0x000000,_0cec4a_data
		je     _0595f0_jump
		cmpb   $0x000000,_0cdf29_data
		je     _0595f0_jump
		mov    _0cdd14_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _0595f0_jump
		cmpb   $0x000000,_0cee9f_data
		jne    _0595f0_jump
		xor    %esi,%esi

	_059588_jump:
		movswl %si,%edx
		mov    _0cecee_data,%ecx
		mov    %edx,%eax
		mov    _0cecf2_data,%ebx
		call   _0690e0_func
		add    _0cecea_data,%ax
		movswl %ax,%edi
		mov    %edx,%eax
		call   _0690e0_func
		mov    _0ced00_data,%dx
		sar    $0x000010,%ecx
		add    %edx,%eax
		sar    $0x000010,%ebx
		cwtl   
		mov    %edi,%edx
		call   _059928_func
		call   _05a028_func
		xor    %eax,%eax
		call   _0531e8_func
		mov    _0ced00_data,%ax
		mov    %ax,_0cecf4_data
		mov    _0cecea_data,%ax
		inc    %esi
		mov    %ax,_0cecf0_data
		cmp    $0x000064,%esi
		jl     _059588_jump

	_0595f0_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0595f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x0001ff,%eax
		mov    $0x000007,%edx
		call   _0690e0_func
		xor    %ebx,%ebx
		mov    %eax,%ecx

	_05960e_jump:
		movswl %dx,%eax
		add    %eax,%eax
		cmp    _0ca318_data(%eax),%cx
		jle    _059628_jump
		mov    $0x000001,%ebx
		add    %bx,_0ca358_data(%eax)

	_059628_jump:
		dec    %edx
		test   %bx,%bx
		je     _05960e_jump
		movswl %dx,%eax
		add    %eax,%eax
		mov    _0ca35a_data(%eax),%dx
		cmp    _0ca37a_data(%eax),%dx
		jle    _05964d_jump
		mov    %edx,%ecx
		dec    %ecx
		mov    %cx,_0ca35a_data(%eax)

	_05964d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059654_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x00000a,%edx
		mov    $0x00000f,%ebx
		mov    $0x000019,%ecx
		mov    $0x00001e,%esi
		mov    $0x000023,%edi
		mov    $0x000028,%eax
		mov    %dx,_0ca358_data
		mov    %bx,_0ca35a_data
		mov    %cx,_0ca35c_data
		mov    %si,_0ca35e_data
		mov    %di,_0ca360_data
		mov    %ax,_0ca362_data
		mov    $0x00002b,%edx
		mov    $0x000035,%ebx
		mov    %dx,_0ca364_data
		mov    %bx,_0ca366_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0596c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x0001ff,%eax
		mov    $0x000007,%edx
		call   _0690e0_func
		xor    %ebx,%ebx
		mov    %eax,%ecx

	_0596d8_jump:
		movswl %dx,%eax
		add    %eax,%eax
		cmp    _0ca318_data(%eax),%cx
		jl     _059702_jump
		mov    _0ca358_data(%eax),%di
		test   %di,%di
		jle    _059702_jump
		mov    $0x000001,%ebx
		mov    %edi,%esi
		sub    %ebx,%esi
		mov    %si,_0ca358_data(%eax)

	_059702_jump:
		dec    %edx
		test   %bx,%bx
		jne    _05970d_jump
		test   %dx,%dx
		jge    _0596d8_jump

	_05970d_jump:
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		jne    _05974a_jump
		mov    $0x000007,%eax
		xor    %ebx,%ebx
		xor    %ecx,%ecx

	_05971e_jump:
		movswl %ax,%edx
		add    %edx,%edx
		mov    _0ca358_data(%edx),%di
		cmp    %di,%cx
		jge    _05973f_jump
		mov    $0x000001,%ebx
		mov    %edi,%esi
		sub    %ebx,%esi
		mov    %si,_0ca358_data(%edx)

	_05973f_jump:
		dec    %eax
		test   %bx,%bx
		jne    _05974a_jump
		test   %ax,%ax
		jge    _05971e_jump

	_05974a_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059750_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    $0x000014,%edx
		mov    $0x00001e,%ebx
		mov    $0x000032,%ecx
		mov    $0x00003c,%esi
		mov    $0x000046,%edi
		mov    $0x000050,%eax
		mov    %dx,_0ca378_data
		mov    %bx,_0ca37a_data
		mov    %cx,_0ca37c_data
		mov    %si,_0ca37e_data
		mov    %di,_0ca380_data
		mov    %ax,_0ca382_data
		mov    $0x000060,%edx
		mov    $0x00006a,%ebx
		mov    $0xffffffc0,%edi
		xor    %ecx,%ecx
		mov    %dx,_0ca384_data
		mov    %bx,_0ca386_data
		mov    %cx,0x00000c(%esp)
		mov    %cx,0x000004(%esp)
		mov    %di,(%esp)
		mov    $0x000190,%ebp

	_0597d2_jump:
		mov    0x000002(%esp),%ecx
		mov    0x00000c(%esp),%eax
		mov    -0x000002(%esp),%ebx
		xor    %esi,%esi
		sar    $0x000010,%ecx
		xor    %edx,%edx
		mov    %ax,_0ca318_data(,%ecx,2)
		mov    (%esp),%eax
		sar    $0x000010,%ebx
		mov    %ax,0x000010(%esp)
		mov    %ebx,%eax
		mov    %si,_0ca358_data(,%ecx,2)
		call   _01d1ec_func
		mov    $0x0000c8,%edx
		mov    %ax,_0ca328_data(,%ecx,2)
		mov    %ebx,%eax
		call   _01d1ec_func
		xor    %edx,%edx
		mov    %ax,_0ca348_data(,%ecx,2)
		mov    %ebx,%eax
		call   _01d1b4_func
		mov    $0x000140,%edx
		mov    %ax,_0ca338_data(,%ecx,2)
		mov    %ebx,%eax
		mov    %esi,0x000008(%esp)
		call   _01d1b4_func
		mov    %ax,_0ca368_data(,%ecx,2)
		jmp    _0598d2_jump

	_059851_jump:
		mov    $0x0002bc,%eax
		mov    0x00000e(%esp),%ebx
		call   _0690e0_func
		mov    %eax,%esi
		mov    %ebp,%eax
		sar    $0x000010,%ebx
		call   _0690e0_func
		movswl %si,%edx
		mov    %eax,%edi
		mov    %ebx,%eax
		sub    $0x000096,%edi
		call   _01d134_func
		mov    %eax,%ecx
		movswl %di,%edx
		mov    %ebx,%eax
		call   _01d170_func
		cmp    $0x000140,%cx
		jge    _059851_jump
		test   %cx,%cx
		jle    _059851_jump
		cmp    $0x0000c8,%ax
		jge    _059851_jump
		test   %ax,%ax
		jle    _059851_jump
		mov    0x00000a(%esp),%edx
		mov    0x000010(%esp),%eax
		mov    0x00000c(%esp),%ecx
		mov    _0ccd04_data,%ebx
		inc    %ecx
		sar    $0x000010,%edx
		mov    %cx,0x00000c(%esp)
		mov    %si,(%ebx,%edx,8)
		mov    0x000008(%esp),%esi
		mov    %di,0x000002(%ebx,%edx,8)
		inc    %esi
		mov    %ax,0x000004(%ebx,%edx,8)
		mov    %esi,0x000008(%esp)

	_0598d2_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    0x000008(%esp),%eax
		cmp    _0ca378_data(,%edx,2),%ax
		jl     _059851_jump
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		add    $0x000020,%eax
		inc    %edx
		mov    %ax,(%esp)
		mov    %dx,0x000004(%esp)
		cmp    $0x000008,%dx
		jl     _0597d2_jump
		xor    %edi,%edi
		mov    %di,_0cec6c_data
		mov    %di,_0cec6a_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_059928_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00003c,%esp
		mov    %eax,0x000034(%esp)
		mov    %edx,0x000038(%esp)
		mov    %ebx,0x000004(%esp)
		mov    %ecx,0x000008(%esp)
		mov    _0cec6a_data,%ax
		mov    %eax,0x00000c(%esp)
		mov    _0cec6c_data,%ax
		mov    %ax,0x000010(%esp)
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    %eax,%edi
		mov    0x00000c(%esp),%eax
		add    $0x000004,%eax
		mov    %ax,_0cec6a_data
		mov    _0cec68_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%ebp
		mov    %eax,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %edx,%ebx
		mov    %ecx,%edx
		mov    %ecx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		movswl %bx,%eax
		test   %eax,%eax
		jge    _0599b6_jump
		neg    %eax

	_0599b6_jump:
		cmp    $0x000001,%eax
		jne    _0599dc_jump
		cmpb   $0x000000,_0cee41_data
		jne    _0599dc_jump
		mov    _0cec6a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _0599da_jump
		mov    $0x000001,%eax
		jg     _0599da_jump
		neg    %eax

	_0599da_jump:
		add    %eax,%edi

	_0599dc_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _0599e5_jump
		neg    %eax

	_0599e5_jump:
		cmp    $0x000002,%eax
		jne    _059a0b_jump
		cmpb   $0x000000,_0cee3f_data
		jne    _059a0b_jump
		mov    _0cec6a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _059a09_jump
		mov    $0x000001,%eax
		jg     _059a09_jump
		neg    %eax

	_059a09_jump:
		add    %eax,%edi

	_059a0b_jump:
		movswl %bx,%eax
		test   %eax,%eax
		jge    _059a14_jump
		neg    %eax

	_059a14_jump:
		cmp    $0x000003,%eax
		jne    _059a3a_jump
		cmpb   $0x000003,_0cee41_data
		jae    _059a3a_jump
		mov    _0cec6a_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _059a38_jump
		mov    $0x000001,%eax
		jg     _059a38_jump
		neg    %eax

	_059a38_jump:
		add    %eax,%edi

	_059a3a_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _059a43_jump
		neg    %eax

	_059a43_jump:
		cmp    $0x000001,%eax
		jne    _059a69_jump
		cmpb   $0x000000,_0cee41_data
		jne    _059a69_jump
		mov    _0cec68_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _059a67_jump
		mov    $0x000001,%eax
		jg     _059a67_jump
		neg    %eax

	_059a67_jump:
		add    %eax,%esi

	_059a69_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _059a72_jump
		neg    %eax

	_059a72_jump:
		cmp    $0x000002,%eax
		jne    _059a98_jump
		cmpb   $0x000000,_0cee3f_data
		jne    _059a98_jump
		mov    _0cec68_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _059a96_jump
		mov    $0x000001,%eax
		jg     _059a96_jump
		neg    %eax

	_059a96_jump:
		add    %eax,%esi

	_059a98_jump:
		movswl %dx,%eax
		test   %eax,%eax
		jge    _059aa1_jump
		neg    %eax

	_059aa1_jump:
		cmp    $0x000003,%eax
		jne    _059ac7_jump
		cmpb   $0x000003,_0cee41_data
		jae    _059ac7_jump
		mov    _0cec68_data,%eax
		sar    $0x000010,%eax
		cmp    $0x000000,%eax
		je     _059ac5_jump
		mov    $0x000001,%eax
		jg     _059ac5_jump
		neg    %eax

	_059ac5_jump:
		add    %eax,%esi

	_059ac7_jump:
		mov    $0x0000aa,%edx
		mov    $0x0000a0,%eax
		mov    $0xffffffc0,%ebx
		mov    0x000038(%esp),%ecx
		call   _01d0bc_func
		mov    0x000008(%esp),%eax
		mov    %ebx,0x00001c(%esp)
		xor    %edx,%edx
		mov    0x000034(%esp),%ebx
		mov    %dx,0x000020(%esp)
		mov    0x000004(%esp),%edx
		sub    %ecx,%eax
		sub    %ebx,%edx
		add    %esi,%eax
		add    %edi,%edx
		mov    %eax,0x000018(%esp)
		mov    %edx,0x000014(%esp)

	_059b06_jump:
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%edx
		mov    _0ca316_data(,%edx,2),%ebx
		mov    _0ccd04_data,%eax
		sar    $0x000010,%ebx
		mov    _0ca328_data(,%edx,2),%si
		shl    $0x000003,%ebx
		mov    _0ca338_data(,%edx,2),%cx
		add    %ebx,%eax
		mov    0x000018(%esp),%ebx
		mov    _0ca318_data(,%edx,2),%di
		mov    %ebx,0x000028(%esp)
		mov    0x000014(%esp),%ebx
		mov    %edi,(%esp)
		mov    %ebx,0x000024(%esp)
		mov    _0ca348_data(,%edx,2),%bx
		add    _0ca358_data(,%edx,2),%di
		mov    %ebx,0x000030(%esp)
		mov    _0ca368_data(,%edx,2),%bx
		mov    (%esp),%edx
		mov    %edi,0x00002c(%esp)
		cmp    %di,%dx
		jge    _059bc3_jump

	_059b74_jump:
		mov    0x000024(%esp),%edi
		add    %di,(%eax)
		mov    0x000028(%esp),%edi
		add    %di,0x000002(%eax)
		mov    (%eax),%di
		cmp    %di,%bx
		jge    _059b90_jump
		mov    %cx,(%eax)
		jmp    _059b98_jump

	_059b90_jump:
		cmp    %di,%cx
		jle    _059b98_jump
		mov    %bx,(%eax)

	_059b98_jump:
		mov    0x000002(%eax),%di
		cmp    0x000030(%esp),%di
		jle    _059ba9_jump
		mov    %si,0x000002(%eax)
		jmp    _059bb6_jump

	_059ba9_jump:
		cmp    %di,%si
		jle    _059bb6_jump
		mov    0x000030(%esp),%edi
		mov    %di,0x000002(%eax)

	_059bb6_jump:
		mov    0x00002c(%esp),%edi
		inc    %edx
		add    $0x000008,%eax
		cmp    %di,%dx
		jl     _059b74_jump

	_059bc3_jump:
		mov    0x000020(%esp),%ecx
		mov    0x00001c(%esp),%esi
		inc    %ecx
		add    $0x000020,%esi
		mov    %cx,0x000020(%esp)
		mov    %esi,0x00001c(%esp)
		cmp    $0x0000c0,%si
		jl     _059b06_jump
		mov    0x00000c(%esp),%eax
		mov    %ax,_0cec6a_data
		mov    0x000010(%esp),%eax
		mov    %ax,_0cec6c_data
		cmpw   $0x000001,_0cecd4_data
		je     _059c1b_jump
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000003,%edx
		sbb    %edx,%eax
		sar    $0x000003,%eax
		mov    %ax,_0cecce_data

	_059c1b_jump:
		add    $0x00003c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_059c24_func:
		push   %ebx
		mov    %ax,_0cec48_data
		xor    %ebx,%ebx
		cwtl   
		mov    %bx,_0cec46_data
		mov    %dx,_0ca280_data(,%eax,2)
		pop    %ebx
		ret    

	_059c3f_jump:
		cmp    %si,%dx
		jne    _059c61_jump
		movw   $0x000004,(%eax)
		add    $0x000002,%eax
		movw   $0x000003,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		jmp    _059f9c_jump

	_059c61_jump:
		cmp    $0x000002,%dx
		jne    _059c84_jump
		movw   $0x000004,(%eax)
		add    $0x000002,%eax
		movw   $0x000003,(%eax)
		add    $0x000002,%eax
		movw   $0x000200,(%eax)
		add    $0x000002,%eax
		jmp    _059f9c_jump

	_059c84_jump:
		cmp    $0x000003,%dx
		jne    _059cdd_jump
		cmp    $0x000008,%cx
		je     _059c97_jump
		movw   $0x000004,(%eax)
		jmp    _059c9c_jump

	_059c97_jump:
		movw   $0x000002,(%eax)

	_059c9c_jump:
		add    $0x000002,%eax
		lea    0x000002(%eax),%esi
		mov    %ecx,%edx
		lea    0x000004(%eax),%edi
		add    %ecx,%edx
		cmp    $0x000008,%cx
		jle    _059cc1_jump
		sub    $0x000010,%edx
		movw   $0x000008,(%eax)
		mov    %edi,%eax
		mov    %dx,(%esi)
		jmp    _059f9c_jump

	_059cc1_jump:
		jge    _059f9c_jump
		movw   $0x000009,(%eax)
		mov    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,(%esi)
		mov    %edi,%eax
		jmp    _059f9c_jump

	_059cdd_jump:
		cmp    $0x000004,%dx
		jne    _059d2a_jump
		test   %cx,%cx
		je     _059cf1_jump
		add    $0x000002,%eax
		mov    %dx,-0x000002(%eax)
		jmp    _059cf9_jump

	_059cf1_jump:
		movw   $0x000002,(%eax)
		add    $0x000002,%eax

	_059cf9_jump:
		lea    0x000002(%eax),%edx
		lea    0x000004(%eax),%esi
		test   %cx,%cx
		jle    _059d0f_jump
		movw   $0x000008,(%eax)
		mov    %ecx,%eax
		add    %ecx,%eax
		jmp    _059d20_jump

	_059d0f_jump:
		jge    _059f9c_jump
		movw   $0x000009,(%eax)
		mov    %ecx,%eax
		neg    %eax
		add    %eax,%eax

	_059d20_jump:
		mov    %ax,(%edx)
		mov    %esi,%eax
		jmp    _059f9c_jump

	_059d2a_jump:
		add    $0x000002,%eax
		cmp    $0x000005,%dx
		jne    _059d92_jump
		movswl %bx,%edx
		cmp    $0xfffffff8,%edx
		je     _059d46_jump
		movw   $0x000004,_0c8bf8_data
		jmp    _059d4f_jump

	_059d46_jump:
		movw   $0x000002,_0c8bf8_data

	_059d4f_jump:
		mov    %ebx,%esi
		movswl %bx,%edx
		add    %ebx,%esi
		lea    0x000002(%eax),%edi
		mov    %esi,(%esp)
		lea    0x000004(%eax),%esi
		cmp    $0xfffffff8,%edx
		jle    _059d73_jump
		movw   $0x000006,(%eax)
		mov    (%esp),%eax
		add    $0x000010,%eax
		jmp    _059d88_jump

	_059d73_jump:
		jge    _059f9c_jump
		mov    (%esp),%edx
		movw   $0x000007,(%eax)
		mov    $0xfffffff0,%eax
		sub    %edx,%eax

	_059d88_jump:
		mov    %ax,(%edi)
		mov    %esi,%eax
		jmp    _059f9c_jump

	_059d92_jump:
		cmp    $0x000006,%dx
		jne    _059df0_jump
		cmp    $0x000008,%bx
		je     _059da9_jump
		movw   $0x000004,_0c8bf8_data
		jmp    _059db2_jump

	_059da9_jump:
		movw   $0x000002,_0c8bf8_data

	_059db2_jump:
		lea    0x000002(%eax),%esi
		mov    %ebx,%edx
		lea    0x000004(%eax),%edi
		add    %ebx,%edx
		cmp    $0x000008,%bx
		jle    _059dd4_jump
		sub    $0x000010,%edx
		movw   $0x000006,(%eax)
		mov    %edi,%eax
		mov    %dx,(%esi)
		jmp    _059f9c_jump

	_059dd4_jump:
		jge    _059f9c_jump
		movw   $0x000007,(%eax)
		mov    $0x000010,%eax
		sub    %edx,%eax
		mov    %ax,(%esi)
		mov    %edi,%eax
		jmp    _059f9c_jump

	_059df0_jump:
		cmp    $0x000007,%dx
		jne    _059e58_jump
		movswl %bx,%edx
		cmp    $0xfffffff0,%edx
		je     _059e09_jump
		movw   $0x000004,_0c8bf8_data
		jmp    _059e12_jump

	_059e09_jump:
		movw   $0x000002,_0c8bf8_data

	_059e12_jump:
		mov    %ebx,%edi
		movswl %bx,%edx
		add    %ebx,%edi
		lea    0x000002(%eax),%esi
		mov    %edi,0x000004(%esp)
		lea    0x000004(%eax),%edi
		cmp    $0xfffffff0,%edx
		jle    _059e38_jump
		movw   $0x000006,(%eax)
		mov    0x000004(%esp),%eax
		add    $0x000020,%eax
		jmp    _059e4e_jump

	_059e38_jump:
		jge    _059f9c_jump
		mov    0x000004(%esp),%edx
		movw   $0x000007,(%eax)
		mov    $0xffffffe0,%eax
		sub    %edx,%eax

	_059e4e_jump:
		mov    %ax,(%esi)
		mov    %edi,%eax
		jmp    _059f9c_jump

	_059e58_jump:
		cmp    $0x000008,%dx
		jne    _059eb6_jump
		cmp    $0x000010,%bx
		je     _059e6f_jump
		movw   $0x000004,_0c8bf8_data
		jmp    _059e78_jump

	_059e6f_jump:
		movw   $0x000002,_0c8bf8_data

	_059e78_jump:
		lea    0x000002(%eax),%edi
		mov    %ebx,%esi
		lea    0x000004(%eax),%edx
		add    %ebx,%esi
		cmp    $0x000010,%bx
		jle    _059e9a_jump
		sub    $0x000020,%esi
		movw   $0x000006,(%eax)
		mov    %edx,%eax
		mov    %si,(%edi)
		jmp    _059f9c_jump

	_059e9a_jump:
		jge    _059f9c_jump
		movw   $0x000007,(%eax)
		mov    $0x000020,%eax
		sub    %esi,%eax
		mov    %ax,(%edi)
		mov    %edx,%eax
		jmp    _059f9c_jump

	_059eb6_jump:
		cmp    $0x000009,%dx
		jne    _059f03_jump
		test   %bx,%bx
		je     _059ecc_jump
		movw   $0x000004,_0c8bf8_data
		jmp    _059ed5_jump

	_059ecc_jump:
		movw   $0x000002,_0c8bf8_data

	_059ed5_jump:
		lea    0x000002(%eax),%edx
		lea    0x000004(%eax),%esi
		jle    _059ee8_jump
		movw   $0x000006,(%eax)
		mov    %ebx,%eax
		add    %ebx,%eax
		jmp    _059ef9_jump

	_059ee8_jump:
		jge    _059f9c_jump
		movw   $0x000007,(%eax)
		mov    %ebx,%eax
		neg    %eax
		add    %eax,%eax

	_059ef9_jump:
		mov    %ax,(%edx)
		mov    %esi,%eax
		jmp    _059f9c_jump

	_059f03_jump:
		cmp    $0x00000a,%dx
		jne    _059f7e_jump
		movswl %cx,%edx
		cmp    $0xfffffff0,%edx
		je     _059f20_jump
		movw   $0x000006,_0c8bf8_data
		jmp    _059f29_jump

	_059f20_jump:
		movw   $0x000004,_0c8bf8_data

	_059f29_jump:
		movswl %cx,%edx
		lea    0x000002(%eax),%ebp
		mov    %ecx,%edi
		lea    0x000004(%eax),%esi
		add    %ecx,%edi
		cmp    $0xfffffff0,%edx
		jle    _059f4b_jump
		add    $0x000020,%edi
		movw   $0x000008,(%eax)
		mov    %esi,%eax
		mov    %di,0x000000(%ebp)
		jmp    _059f5f_jump

	_059f4b_jump:
		jge    _059f5f_jump
		movw   $0x000009,(%eax)
		mov    $0xffffffe0,%eax
		sub    %edi,%eax
		mov    %ax,0x000000(%ebp)
		mov    %esi,%eax

	_059f5f_jump:
		movw   $0x000000,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		movw   $0x000009,(%eax)
		add    $0x000002,%eax
		movw   $0x000020,(%eax)
		jmp    _059fa9_jump

	_059f7e_jump:
		cmp    $0x00000b,%dx
		jne    _059fa9_jump
		movw   $0x000004,_0c8bf8_data
		movw   $0x00000a,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %si,-0x000002(%eax)

	_059f9c_jump:
		movw   $0x000000,(%eax)
		add    $0x000002,%eax

	_059fa4_jump:
		movw   $0x007fff,(%eax)

	_059fa9_jump:
		mov    $0x000001,%esi
		mov    _0c8bfa_data,%edx
		mov    _0c8bf8_data,%eax
		mov    %bx,_0cec6c_data
		mov    %cx,_0cec6a_data
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %si,_0cec42_data
		call   _059c24_func
		mov    _0cec42_data,%di
		add    $0x000002,%edi
		mov    _0cec6c_data,%bx
		mov    %di,_0cec42_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_059ffc_switch:
		.long   _05a0df_case
		.long   _05a051_case
		.long   _05a066_case
		.long   _05a070_case
		.long   _05a083_case
		.long   _05a095_case
		.long   _05a07a_case
		.long   _05a08c_case
		.long   _05a09e_case
		.long   _05a0b0_case
		.long   _05a0c2_case




_05a028_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cec42_data,%cx
		mov    _0cec48_data,%ax
		cmp    $0x00000a,%ax
		ja     _05a0df_case
		and    $0x00ffff,%eax
		jmp    *%cs:_059ffc_switch(,%eax,4)

	_05a051_case:
		xor    %edi,%edi
		mov    %di,_0cec6c_data
		mov    %di,_0cec6a_data
		jmp    _05a0df_case

	_05a066_case:
		call   _0595f8_func
		jmp    _05a0df_case

	_05a070_case:
		call   _0596c0_func
		jmp    _05a0df_case

	_05a07a_case:
		cmpb   $0x000000,_0cee3f_data
		jne    _05a0df_case

	_05a083_case:
		decw   _0cec6c_data
		jmp    _05a0df_case

	_05a08c_case:
		cmpb   $0x000000,_0cee3f_data
		jne    _05a0df_case

	_05a095_case:
		incw   _0cec6c_data
		jmp    _05a0df_case

	_05a09e_case:
		cmpb   $0x000000,_0cee3f_data
		jne    _05a0df_case
		decw   _0cec6a_data
		jmp    _05a0df_case

	_05a0b0_case:
		cmpb   $0x000000,_0cee3f_data
		jne    _05a0df_case
		incw   _0cec6a_data
		jmp    _05a0df_case

	_05a0c2_case:
		mov    $0xfffffff8,%edx
		mov    $0x000008,%ebx
		mov    %dx,_0cec6c_data
		mov    %bx,_0cec6a_data
		call   _059654_func

	_05a0df_case:
		mov    _0cec46_data,%eax
		sar    $0x000010,%eax
		mov    _0cec46_data,%bx
		lea    0x000000(,%eax,2),%edx
		mov    _0cec42_data,%cx
		inc    %ebx
		mov    _0ca280_data(%edx),%si
		mov    %bx,_0cec46_data
		cmp    %si,%bx
		jne    _05a14f_jump
		movswl %cx,%eax
		inc    %ecx
		mov    _0c8bf8_data(,%eax,2),%bx
		movswl %cx,%eax
		mov    _0c8bf8_data(,%eax,2),%ax
		inc    %ecx
		movswl %ax,%edx
		movswl %bx,%eax
		mov    %cx,_0cec42_data
		call   _059c24_func
		mov    _0cec42_data,%cx
		mov    _0c8bf8_data,%di
		cmp    %di,%cx
		jne    _05a14f_jump
		xor    %edi,%ecx

	_05a14f_jump:
		mov    %cx,_0cec42_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_05a15b_jump:
		ret    

_05a15c_switch:
		.long   _05a1ad_case
		.long   _05a1b4_case
		.long   _05a1bb_case
		.long   _05a1c2_case
		.long   _05a1c9_case
		.long   _05a1d0_case
		.long   _05a1d7_case
		.long   _05a1de_case
		.long   _05a1e5_case
		.long   _05a243_case
		.long   _05a15b_jump
		.long   _05a1a9_case




_05a18c_func:
		andb   $0x0000fb,0x000081(%eax)
		mov    0x00006c(%eax),%al
		sub    $0x000015,%al
		cmp    $0x00000b,%al
		ja     _05a15b_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05a15c_switch(,%eax,4)

	_05a1a9_case:
		xor    %eax,%eax
		jmp    _05a1ec_jump

	_05a1ad_case:
		mov    $0x000001,%eax
		jmp    _05a1ec_jump

	_05a1b4_case:
		mov    $0x000002,%eax
		jmp    _05a1ec_jump

	_05a1bb_case:
		mov    $0x000003,%eax
		jmp    _05a1ec_jump

	_05a1c2_case:
		mov    $0x000004,%eax
		jmp    _05a1ec_jump

	_05a1c9_case:
		mov    $0x000005,%eax
		jmp    _05a1ec_jump

	_05a1d0_case:
		mov    $0x000006,%eax
		jmp    _05a1ec_jump

	_05a1d7_case:
		mov    $0x000007,%eax
		jmp    _05a1ec_jump

	_05a1de_case:
		mov    $0x000008,%eax
		jmp    _05a1ec_jump

	_05a1e5_case:
		mov    $0x000009,%eax
		mov    %eax,%eax

	_05a1ec_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0cec6c_data,%bx
		mov    _0cec6a_data,%cx
		mov    %eax,%edx
		mov    $0x000001,%esi
		mov    $_0c8bf8_data,%eax
		mov    %si,_0cec4a_data
		test   %dx,%dx
		jne    _059c3f_jump
		movw   $0x000004,(%eax)
		add    $0x000002,%eax
		movw   $0x000002,(%eax)
		add    $0x000002,%eax
		movw   $0x000080,(%eax)
		add    $0x000002,%eax
		add    $0x000002,%eax
		mov    %dx,-0x000002(%eax)
		jmp    _059fa4_jump

	_05a243_case:
		mov    $0x00000a,%eax
		jmp    _05a1ec_jump



_05a5dc_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    _0cda90_data,%eax
		mov    %ebx,0x00000c(%edx)
		mov    %eax,(%edx)
		mov    _0cda8c_data,%edx
		mov    %esi,%eax
		shl    $0x000002,%edx
		call   _07b1c0_func
		mov    $0x000008,%edx
		mov    %eax,0x000004(%ecx)
		mov    %esi,%eax
		call   _07b1c0_func
		mov    _0cda8c_data,%edx
		xor    %esi,%esi
		mov    %eax,0x000008(%ecx)
		test   %edx,%edx
		jle    _05a6a4_jump
		xor    %eax,%eax
		xor    %edx,%edx

	_05a627_jump:
		mov    (%ecx),%ebx
		mov    (%edx,%ebx,1),%bx
		and    $0x00ffff,%ebx
		mov    0x00000c(%ecx),%edi
		mov    _0c3988_data(,%ebx,4),%ebx
		add    %ebx,%edi
		mov    %edi,(%esp)
		mov    0x000004(%ecx),%edi
		mov    (%esp),%ebp
		mov    %ebp,(%edi,%eax,1)
		imul   $0x000120,_0cc454_data,%edi
		cmp    %edi,%ebx
		ja     _05a667_jump
		mov    0x000004(%ecx),%ebx
		mov    (%ebx,%eax,1),%ebx
		mov    0x000100(%ebx),%ebx
		jmp    _05a673_jump

	_05a667_jump:
		mov    0x000004(%ecx),%ebx
		mov    (%ebx,%eax,1),%ebx
		mov    0x000200(%ebx),%ebx

	_05a673_jump:
		cmp    $0xaaaaaaaa,%ebx
		jne    _05a67f_jump
		mov    $0x000001,%bl
		jmp    _05a68d_jump

	_05a67f_jump:
		cmp    $0x55555555,%ebx
		jne    _05a68b_jump
		xor    %bl,%bl
		jmp    _05a68d_jump

	_05a68b_jump:
		mov    $0x000002,%bl

	_05a68d_jump:
		mov    (%ecx),%edi
		add    $0x000004,%eax
		inc    %esi
		mov    %bl,0x000004(%edx,%edi,1)
		mov    _0cda8c_data,%ebx
		add    $0x000006,%edx
		cmp    %ebx,%esi
		jl     _05a627_jump

	_05a6a4_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05a6ac_func:
		mov    _0cda88_data,%dx
		mov    %dx,0x000016(%eax)
		mov    _0cda8a_data,%dx
		mov    %dx,0x000018(%eax)
		mov    %eax,%eax



_05a6c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0cecfe_data,%ecx
		mov    _0cc49c_data,%ebx
		sar    $0x000010,%ecx
		add    %ebx,%ecx
		mov    _0cece8_data,%ebx
		mov    _0cc4a4_data,%esi
		sar    $0x000010,%ebx
		add    %esi,%ebx
		mov    0x000014(%edx),%edx
		mov    %ebx,%esi
		sar    $0x000010,%edx
		sar    $0x000004,%esi
		imul   %edx,%esi
		sub    $0x000008,%ecx
		mov    %ecx,%edx
		mov    0x000008(%eax),%eax
		sar    $0x000004,%edx
		xor    %ch,%ch
		add    %esi,%edx
		and    $0x00000f,%cl
		mov    %dx,0x000006(%eax)
		mov    _0cc49c_data,%dx
		xor    %bh,%bh
		sub    %ecx,%edx
		and    $0x00000f,%bl
		mov    %dx,(%eax)
		mov    _0cc4a4_data,%dx
		sub    %ebx,%edx
		movswl (%eax),%ebx
		mov    %dx,0x000002(%eax)
		mov    _0cc498_data,%edx
		sub    %ebx,%edx
		mov    %edx,%ebx
		mov    (%eax),%edx
		mov    _0cc4a0_data,%ecx
		sar    $0x000010,%edx
		sub    %edx,%ecx
		mov    %ecx,%edx
		test   $0x00000f,%bl
		setne  %cl
		and    $0x0000ff,%ecx
		sar    $0x000004,%ebx
		add    %ecx,%ebx
		mov    %bl,0x000004(%eax)
		test   $0x00000f,%dl
		setne  %bl
		and    $0x0000ff,%ebx
		sar    $0x000004,%edx
		add    %ebx,%edx
		mov    %dl,0x000005(%eax)
		mov    (%eax),%ax
		xor    %ah,%ah
		and    $0x000003,%al
		mov    $0x000004,%ebx
		cwtl   
		mov    _0cc538_data,%edx
		sub    %eax,%ebx
		add    %ebx,%edx
		mov    %ebx,_0cc52c_data
		mov    %edx,_0cc534_data
		mov    %edx,_0ccba4_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a7a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x0000c8,%ebx
		mov    $0x000004,%ecx
		xor    %edx,%edx
		mov    $0x000140,%esi
		mov    %edx,_0cc4a4_data
		mov    %ebx,_0cc4a0_data
		mov    %ecx,_0cc49c_data
		mov    %esi,_0cc498_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a7d4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cda88_data,%cx
		shl    $0x000004,%ecx
		mov    _0cc498_data,%dx
		mov    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0cda8a_data,%ax
		mov    _0cc4a0_data,%bx
		shl    $0x000004,%eax
		sub    $0x000140,%ecx
		mov    %eax,%esi
		mov    %cx,_0ceba2_data
		sub    %ebx,%esi
		sub    $0x0000c8,%eax
		mov    %esi,%ebx
		mov    %ax,_0ceba4_data
		test   %dx,%dx
		jge    _05a825_jump
		xor    %edx,%edx

	_05a825_jump:
		test   %bx,%bx
		jge    _05a82c_jump
		xor    %ebx,%ebx

	_05a82c_jump:
		mov    _0cc49c_data,%ax
		neg    %eax
		add    $0x000008,%eax
		mov    %ax,_0cecaa_data
		mov    %edx,%eax
		add    $0x000008,%eax
		mov    %ax,_0cecb8_data
		mov    _0cc4a4_data,%ax
		mov    %eax,%ecx
		mov    %ax,_0cecac_data
		neg    %ecx
		mov    %bx,_0cecb6_data
		mov    %cx,_0cecac_data
		mov    %bx,_0cecca_data
		mov    %dx,_0cecd8_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05a880_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ced00_data,%bx
		mov    _0cecea_data,%cx
		mov    _0cc49c_data,%eax
		movswl %bx,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _05a8a9_jump
		mov    _0cc49c_data,%bx
		neg    %ebx

	_05a8a9_jump:
		mov    _0cecd8_data,%dx
		cmp    %dx,%bx
		jle    _05a8b7_jump
		mov    %edx,%ebx

	_05a8b7_jump:
		mov    _0cc4a4_data,%eax
		movswl %cx,%edx
		neg    %eax
		cmp    %eax,%edx
		jge    _05a8ce_jump
		mov    _0cc4a4_data,%cx
		neg    %ecx

	_05a8ce_jump:
		mov    _0cecca_data,%si
		cmp    %si,%cx
		jle    _05a8dc_jump
		mov    %esi,%ecx

	_05a8dc_jump:
		mov    %cx,_0cecea_data
		mov    %bx,_0ced00_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ab14_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cdabc_data,%ecx
		mov    _0cecfe_data,%eax
		mov    _0cc49c_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0cdafc_data,%dl
		add    %eax,%ebx
		add    %edx,%ecx
		add    $0x000010,%ebx
		cmp    %ebx,%ecx
		jg     _05ab69_jump
		mov    _0cc49c_data,%ebx
		sub    %edx,%ebx
		lea    0x000010(%ebx),%edx
		add    %eax,%edx
		mov    %edx,_0cdabc_data
		mov    _0cdabc_data,%ax
		sub    _0cecaa_data,%ax
		add    $0x000008,%eax
		mov    %ax,_0cdaca_data

	_05ab69_jump:
		mov    _0cdabc_data,%ebx
		mov    _0cecfe_data,%eax
		mov    _0cc498_data,%ecx
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    _0cdafc_data,%dl
		add    %ecx,%eax
		add    %edx,%ebx
		sub    $0x000018,%eax
		cmp    %eax,%ebx
		jle    _05abb4_jump
		sub    %edx,%eax
		sub    $0x000008,%eax
		mov    %eax,_0cdabc_data
		mov    _0ced00_data,%bx
		mov    _0cdabc_data,%ax
		sub    %ebx,%eax
		add    $0x000008,%eax
		mov    %ax,_0cdaca_data

	_05abb4_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05abb8_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    _0cc49c_data,%di
		sub    %edi,%eax
		mov    %eax,0x000004(%esp)
		mov    _0cc498_data,%ax
		sub    %edx,%eax
		mov    _0cc4a4_data,%di
		mov    %eax,(%esp)
		mov    %ebx,%eax
		sub    %edi,%eax
		mov    %eax,0x000008(%esp)
		movswl %bx,%eax
		mov    %eax,_0cc4a4_data
		movswl %cx,%eax
		mov    _0cc4a0_data,%di
		mov    %eax,_0cc4a0_data
		movswl %si,%eax
		sub    %ecx,%edi
		mov    %eax,_0cc49c_data
		movswl %dx,%eax
		mov    _0cc4a0_data,%edx
		mov    %eax,_0cc498_data
		cmp    $0x0000c8,%edx
		jle    _05ac27_jump
		movl   $0x0000c8,_0cc4a0_data

	_05ac27_jump:
		cmpl   $0x000000,_0cc4a4_data
		jge    _05ac38_jump
		xor    %esi,%esi
		mov    %esi,_0cc4a4_data

	_05ac38_jump:
		cmpl   $0x000140,_0cc498_data
		jle    _05ac4e_jump
		movl   $0x000140,_0cc498_data

	_05ac4e_jump:
		cmpl   $0x000004,_0cc49c_data
		jge    _05ac61_jump
		movl   $0x000004,_0cc49c_data

	_05ac61_jump:
		cmpl   $0x000004,_0cc49c_data
		jl     _05ad0a_jump
		mov    0x000004(%esp),%eax
		mov    _0cecaa_data,%dx
		mov    _0cecb8_data,%bx
		sub    %eax,%edx
		add    (%esp),%ebx
		mov    %dx,_0cecaa_data
		mov    %bx,_0cecb8_data
		cmp    $0x00000c,%dx
		jle    _05aca2_jump
		movw   $0x00000c,_0cecaa_data

	_05aca2_jump:
		mov    _0ceba0_data,%eax
		mov    _0cecb6_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    $0x000008,%eax
		cmp    %eax,%ebx
		jge    _05accb_jump
		mov    _0ceba2_data,%ax
		add    $0x000008,%eax
		mov    %ax,_0cecb8_data

	_05accb_jump:
		mov    (%esp),%eax
		mov    _0cecd8_data,%dx
		add    %eax,%edx
		mov    _0ceba2_data,%bx
		mov    %dx,_0cecd8_data
		cmp    %bx,%dx
		jge    _05acf1_jump
		mov    %bx,_0cecd8_data

	_05acf1_jump:
		mov    _0cecd8_data,%ax
		mov    _0ced00_data,%cx
		cmp    %cx,%ax
		jge    _05ad0a_jump
		mov    %cx,_0cecd8_data

	_05ad0a_jump:
		cmpl   $0x000000,_0cc4a4_data
		jl     _05ad9c_jump
		mov    0x000008(%esp),%eax
		mov    _0cecac_data,%si
		sub    %eax,%esi
		mov    _0cecb6_data,%ax
		add    %edi,%eax
		mov    %si,_0cecac_data
		mov    %ax,_0cecb6_data
		test   %si,%si
		jle    _05ad47_jump
		xor    %ebx,%ebx
		mov    %bx,_0cecac_data

	_05ad47_jump:
		mov    _0cecb6_data,%ax
		mov    _0ceba4_data,%cx
		cmp    %cx,%ax
		jge    _05ad60_jump
		mov    %cx,_0cecb6_data

	_05ad60_jump:
		mov    _0cecca_data,%si
		add    %edi,%esi
		mov    _0ceba4_data,%di
		mov    %si,_0cecca_data
		cmp    %di,%si
		jge    _05ad83_jump
		mov    %di,_0cecca_data

	_05ad83_jump:
		mov    _0cecca_data,%ax
		mov    _0cecea_data,%dx
		cmp    %dx,%ax
		jge    _05ad9c_jump
		mov    %dx,_0cecca_data

	_05ad9c_jump:
		cmpw   $0x000000,_0cecb0_data
		je     _05adbe_jump
		mov    _0cecaa_data,%ax
		mov    %ax,_0cecb0_data
		mov    _0cecb8_data,%ax
		mov    %ax,_0cecb2_data

	_05adbe_jump:
		cmpw   $0x000014,_0cda88_data
		jg     _05ade3_jump
		cmpl   $0x000004,_0cc49c_data
		jne    _05ade3_jump
		mov    _0cecb8_data,%ax
		mov    %ax,_0cecaa_data
		mov    %ax,_0ced00_data

	_05ade3_jump:
		call   _05a880_func
		cmpb   $0x000000,_0ceead_data
		je     _05ae24_jump
		cmpw   $0x000003,_0cecd4_data
		jne    _05ae05_jump
		cmpw   $0x00000a,_0cecc0_data
		je     _05ae0c_jump

	_05ae05_jump:
		mov    $0x000001,%eax
		jmp    _05ae0e_jump

	_05ae0c_jump:
		xor    %eax,%eax

	_05ae0e_jump:
		test   %eax,%eax
		je     _05ae24_jump
		mov    _0ced00_data,%ax
		mov    %ax,_0cecb8_data
		mov    %ax,_0cecaa_data

	_05ae24_jump:
		mov    _0cc498_data,%ax
		mov    _0cecd6_data,%ebx
		xor    %ecx,%ecx
		sar    $0x000010,%ebx
		mov    %ax,%cx
		add    %ebx,%ecx
		mov    _0cda86_data,%ebx
		sar    $0x000010,%ebx
		shl    $0x000004,%ebx
		mov    _0cc4a0_data,%dx
		cmp    %ebx,%ecx
		jle    _05ae64_jump
		mov    _0cda88_data,%bx
		shl    $0x000004,%ebx
		sub    %eax,%ebx
		mov    %bx,_0cecd8_data

	_05ae64_jump:
		mov    _0cecc8_data,%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    %dx,%ax
		add    %eax,%ebx
		mov    _0cda88_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		cmp    %eax,%ebx
		jle    _05ae94_jump
		mov    _0cda8a_data,%ax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    %ax,_0cecca_data

	_05ae94_jump:
		mov    _0cc49c_data,%eax
		mov    %eax,_0cc490_data
		mov    _0cc498_data,%eax
		mov    %eax,_0cc484_data
		mov    _0cc4a4_data,%eax
		mov    %eax,_0cc480_data
		mov    _0cc4a0_data,%eax
		mov    _095b4b_data,%dl
		mov    %eax,_0cc47c_data
		test   %dl,%dl
		je     _05aecb_jump
		call   _05ab14_func

	_05aecb_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    



_05aed4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,(%esp)
		mov    $0x000001,%edx
		mov    $0x00000c,%ebx
		mov    _0ce188_data,%eax
		mov    $0x000004,%ebp
		mov    %edx,0x000008(%esp)
		mov    0x000044(%eax),%ax
		mov    %ebx,0x000004(%esp)
		mov    %ax,0x00000c(%esp)
		jmp    _05afa0_jump

	_05af0a_jump:
		mov    _0ce188_data,%esi
		mov    0x000004(%esp),%edi
		mov    (%esi),%esi
		add    %edi,%esi
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000006(%esi),%dl
		mov    0x000005(%esi),%al
		mov    %dx,0x000010(%esp)
		test   $0x000001,%al
		je     _05af30_jump
		and    $0x010000,%eax

	_05af30_jump:
		mov    0x00000e(%esp),%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    (%esp),%eax
		call   _07b1c0_func
		mov    %eax,_0c1938_data(%ebp)
		mov    _0ce188_data,%eax
		mov    0x000008(%eax),%ebx
		mov    (%esi),%eax
		xor    %edi,%edi
		add    %eax,%ebx
		mov    _0c1938_data(%ebp),%eax
		jmp    _05af7e_jump

	_05af5f_jump:
		xor    %edx,%edx
		jmp    _05af74_jump

	_05af63_jump:
		mov    (%ebx),%cl
		test   %cl,%cl
		jne    _05af6e_jump
		movb   $0x0000ff,(%eax)
		jmp    _05af71_jump

	_05af6e_jump:
		movb   $0x000000,(%eax)

	_05af71_jump:
		inc    %ebx
		inc    %eax
		inc    %edx

	_05af74_jump:
		xor    %ecx,%ecx
		mov    0x000005(%esi),%cl
		cmp    %ecx,%edx
		jb     _05af63_jump
		inc    %edi

	_05af7e_jump:
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%edi
		jb     _05af5f_jump
		mov    0x000004(%esp),%edx
		mov    0x000008(%esp),%ebx
		add    $0x000004,%ebp
		add    $0x00000c,%edx
		inc    %ebx
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)

	_05afa0_jump:
		mov    0x00000a(%esp),%eax
		mov    0x000008(%esp),%ecx
		sar    $0x000010,%eax
		cmp    %ecx,%eax
		ja     _05af0a_jump
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05afc0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000044,%esp
		mov    %eax,%ebp
		mov    %edx,%ecx
		mov    0x000008(%edx),%eax
		mov    0x000005(%eax),%dl
		mov    %eax,0x000028(%esp)
		cmp    $0x000001,%dl
		jbe    _05b334_jump
		cmpb   $0x000001,0x000004(%eax)
		jbe    _05b334_jump
		mov    (%eax),%eax
		mov    0x000028(%esp),%ebx
		sar    $0x000010,%eax
		movswl (%ebx),%ebx
		mov    %eax,%edx
		add    %ebx,%ebp
		shl    $0x000008,%edx
		shl    $0x000006,%eax
		add    %edx,%ebp
		mov    0x000028(%esp),%edx
		add    %eax,%ebp
		xor    %eax,%eax
		mov    0x000006(%edx),%ax
		mov    %eax,0x000008(%esp)
		mov    (%edx),%ax
		mov    %ax,0x000040(%esp)
		mov    %eax,%edx
		mov    0x000028(%esp),%eax
		mov    0x000002(%eax),%ax
		xor    %ebx,%ebx
		mov    %eax,0x000038(%esp)
		mov    %ax,0x00003c(%esp)
		mov    0x000008(%esp),%eax
		mov    %ebx,0x00002c(%esp)
		mov    %eax,(%esp)
		mov    %eax,%ebx
		shl    $0x000002,%eax
		sub    %ebx,%eax
		add    %eax,%eax
		mov    %eax,0x00001c(%esp)
		mov    %ebx,%eax
		shl    $0x000002,%eax
		mov    %ebp,0x000010(%esp)
		mov    %eax,0x000024(%esp)
		jmp    _05b0d4_jump

	_05b058_jump:
		mov    0x00001c(%esp),%ebx
		mov    (%ecx),%eax
		add    %ebx,%eax
		mov    0x000004(%eax),%bl
		test   %bl,%bl
		je     _05b0a6_jump
		cmp    $0x000001,%bl
		jne    _05b08a_jump
		mov    0x00003a(%esp),%ebx
		mov    0x000024(%esp),%edi
		mov    0x000004(%ecx),%esi
		movswl %dx,%eax
		add    %edi,%esi
		sar    $0x000010,%ebx
		mov    %ebp,%edi
		mov    (%esi),%esi
		call   _0154bd_func
		jmp    _05b0a6_jump

	_05b08a_jump:
		mov    0x00003a(%esp),%ebx
		mov    0x000024(%esp),%edi
		mov    0x000004(%ecx),%esi
		movswl %dx,%eax
		add    %edi,%esi
		sar    $0x000010,%ebx
		mov    %ebp,%edi
		mov    (%esi),%esi
		call   _015325_func

	_05b0a6_jump:
		mov    0x00001c(%esp),%eax
		mov    0x000024(%esp),%ebx
		mov    0x000008(%esp),%esi
		mov    0x00002c(%esp),%edi
		add    $0x000010,%ebp
		add    $0x000010,%edx
		add    $0x000006,%eax
		add    $0x000004,%ebx
		inc    %esi
		inc    %edi
		mov    %eax,0x00001c(%esp)
		mov    %ebx,0x000024(%esp)
		mov    %esi,0x000008(%esp)
		mov    %edi,0x00002c(%esp)

	_05b0d4_jump:
		mov    0x000028(%esp),%ebx
		xor    %eax,%eax
		mov    0x00002c(%esp),%esi
		mov    0x000004(%ebx),%al
		cmp    %esi,%eax
		jg     _05b058_jump
		mov    0x000010(%esp),%edx
		mov    (%esp),%ebx
		mov    0x000014(%ecx),%eax
		mov    $0x000001,%edi
		sar    $0x000010,%eax
		add    $0x001400,%edx
		add    %eax,%ebx
		mov    %edi,0x000014(%esp)
		jmp    _05b24c_jump

	_05b10c_jump:
		mov    0x000018(%esp),%eax
		mov    %eax,0x00000c(%esp)
		imul   $0x000006,%eax,%esi
		mov    (%ecx),%eax
		add    %eax,%esi
		mov    0x000004(%esi),%al
		mov    %edx,0x000004(%esp)
		test   %al,%al
		je     _05b15a_jump
		cmp    $0x000001,%al
		jne    _05b143_jump
		mov    0x00003e(%esp),%eax
		movswl %bx,%ebx
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _0154bd_func
		jmp    _05b15a_jump

	_05b143_jump:
		mov    0x00003e(%esp),%eax
		movswl %bx,%ebx
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _015325_func

	_05b15a_jump:
		mov    $0x000001,%ebx
		mov    0x000018(%esp),%esi
		add    %ebx,%esi
		mov    %ebx,0x00002c(%esp)
		mov    %esi,0x000018(%esp)
		lea    0x000000(,%esi,4),%ebx
		add    $0x000010,%edx
		imul   $0x000006,%esi,%ebp
		jmp    _05b1c2_jump

	_05b17c_jump:
		mov    (%ecx),%esi
		add    %ebp,%esi
		mov    0x000004(%esi),%al
		test   %al,%al
		je     _05b1a7_jump
		cmp    $0x000001,%al
		jne    _05b19a_jump
		mov    0x000004(%ecx),%esi
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		call   _014fa0_func
		jmp    _05b1a7_jump

	_05b19a_jump:
		mov    0x000004(%ecx),%esi
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		call   _014dc3_func

	_05b1a7_jump:
		mov    0x000018(%esp),%eax
		mov    0x00002c(%esp),%esi
		add    $0x000010,%edx
		add    $0x000004,%ebx
		add    $0x000006,%ebp
		inc    %eax
		inc    %esi
		mov    %eax,0x000018(%esp)
		mov    %esi,0x00002c(%esp)

	_05b1c2_jump:
		mov    0x000028(%esp),%esi
		movzbl 0x000004(%esi),%esi
		mov    0x00002c(%esp),%edi
		dec    %esi
		cmp    %edi,%esi
		jg     _05b17c_jump
		mov    (%ecx),%eax
		add    %eax,%ebp
		cmpb   $0x000000,0x000004(%ebp)
		je     _05b22d_jump
		mov    0x000014(%esp),%esi
		mov    0x000038(%esp),%eax
		mov    0x00002c(%esp),%edi
		shl    $0x000004,%esi
		shl    $0x000004,%edi
		add    %eax,%esi
		add    0x000040(%esp),%edi
		cmpb   $0x000001,0x000004(%ebp)
		jne    _05b216_jump
		movswl %si,%eax
		mov    0x000004(%ecx),%ebp
		movswl %di,%esi
		mov    (%ebx,%ebp,1),%ebp
		mov    %eax,%ebx
		mov    %edx,%edi
		mov    %esi,%eax
		mov    %ebp,%esi
		call   _0154bd_func
		jmp    _05b22d_jump

	_05b216_jump:
		movswl %si,%eax
		mov    0x000004(%ecx),%esi
		movswl %di,%ebp
		mov    %edx,%edi
		mov    (%esi,%ebx,1),%esi
		mov    %eax,%ebx
		mov    %ebp,%eax
		call   _015325_func

	_05b22d_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000014(%esp),%ebp
		mov    0x000014(%ecx),%eax
		add    $0x001400,%edx
		sar    $0x000010,%eax
		inc    %ebp
		add    %eax,%ebx
		mov    %ebp,0x000014(%esp)

	_05b24c_jump:
		mov    %ebx,0x000018(%esp)
		mov    0x000028(%esp),%ebx
		xor    %eax,%eax
		mov    0x000038(%esp),%esi
		mov    0x000005(%ebx),%al
		mov    0x000014(%esp),%ebx
		mov    0x000018(%esp),%ebp
		shl    $0x000004,%ebx
		dec    %eax
		add    %esi,%ebx
		mov    0x000014(%esp),%esi
		shl    $0x000002,%ebp
		cmp    %esi,%eax
		jg     _05b10c_jump
		mov    0x000040(%esp),%eax
		mov    %bx,0x000034(%esp)
		mov    0x000018(%esp),%ebx
		mov    %ax,0x000030(%esp)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		xor    %edi,%edi
		add    %eax,%eax
		mov    %edi,0x00002c(%esp)
		mov    %eax,0x000020(%esp)
		jmp    _05b321_jump

	_05b2a6_jump:
		mov    0x000020(%esp),%esi
		mov    (%ecx),%eax
		add    %esi,%eax
		mov    0x000004(%eax),%bl
		test   %bl,%bl
		je     _05b2f2_jump
		cmp    $0x000001,%bl
		jne    _05b2d7_jump
		mov    0x000032(%esp),%ebx
		mov    0x00002e(%esp),%eax
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _0154bd_func
		jmp    _05b2f2_jump

	_05b2d7_jump:
		mov    0x000032(%esp),%ebx
		mov    0x00002e(%esp),%eax
		mov    %edx,%edi
		mov    0x000004(%ecx),%esi
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    (%esi,%ebp,1),%esi
		call   _015325_func

	_05b2f2_jump:
		mov    0x000030(%esp),%edi
		mov    0x000018(%esp),%eax
		mov    0x00002c(%esp),%ebx
		add    $0x000010,%edx
		add    $0x000004,%ebp
		add    $0x000010,%edi
		inc    %eax
		inc    %ebx
		mov    %di,0x000030(%esp)
		mov    0x000020(%esp),%edi
		mov    %eax,0x000018(%esp)
		add    $0x000006,%edi
		mov    %ebx,0x00002c(%esp)
		mov    %edi,0x000020(%esp)

	_05b321_jump:
		mov    0x000028(%esp),%ebx
		xor    %eax,%eax
		mov    0x000004(%ebx),%al
		cmp    0x00002c(%esp),%eax
		jg     _05b2a6_jump

	_05b334_jump:
		add    $0x000044,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_05b340_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    _0cc4a0_data,%edx
		mov    _0cc4a4_data,%ecx
		mov    _0cc498_data,%ebx
		mov    _0cc49c_data,%eax
		call   _016157_func
		mov    _0cc534_data,%eax
		mov    $_014c59_func,%edx
		mov    %eax,_0cc538_data
		mov    %edx,_0cc514_data
		lea    0x000004(%eax),%ebx
		mov    _0ccc94_data,%edx
		mov    $_0c1a00_data,%eax
		mov    %ebx,_0cc534_data
		call   _05a6ac_func
		mov    $0x00fa00,%ebx
		mov    _095b10_data,%eax
		xor    %edx,%edx
		call   _07c050_func
		mov    _0cc534_data,%edi
		call   _014bed_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b3b0_func:
		mov    _0cc538_data,%eax
		mov    %eax,_0cc534_data
		mov    %eax,_0ccba4_data
		ret    



_05b3c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cec4e_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _05b3f9_jump
		mov    %edx,%eax
		push   $0xffffffcd
		shl    $0x000005,%eax
		mov    $0x000015,%ecx
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000002,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01cd60_func

	_05b3f9_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b400_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%esi
		mov    _0cec4e_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _05b49c_jump
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc1f0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		lea    0x00000c(%esp),%ebx
		push   %ebx
		lea    0x00000c(%esp),%ebx
		lea    0x000008(%esp),%ecx
		push   %ebx
		mov    $0x000002,%edx
		lea    0x000008(%esp),%ebx
		call   _01d710_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		add    $0x000015,%eax
		mov    %eax,0x000028(%esi)
		mov    0x000004(%esp),%eax
		sub    $0x000043,%eax
		mov    %ax,0x00000c(%esp)
		mov    0x000040(%esi),%ebx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		lea    (%eax,%ebx,1),%ecx
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x00002c(%esi),%eax
		cmp    %ebx,%eax
		jl     _05b488_jump
		cmp    %ecx,%eax
		jg     _05b488_jump
		mov    $0x000001,%eax
		jmp    _05b48a_jump

	_05b488_jump:
		xor    %eax,%eax

	_05b48a_jump:
		test   %eax,%eax
		je     _05b49c_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d374_func

	_05b49c_jump:
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b4a4_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,0x000008(%esp)
		mov    _0cc1f0_data,%esi
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _05b652_jump

	_05b4c9_jump:
		cmpw   $0x000049,0x000060(%esi)
		jne    _05b642_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _05b642_jump
		test   %bl,%bl
		je     _05b505_jump
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,0x000081(%esi)
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _05b52a_jump

	_05b505_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_05b52a_jump:
		mov    0x000008(%esp),%eax
		mov    %ax,0x000042(%esi)
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000004(%esp),%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		mov    $0x000006,%edx
		mov    %edi,%eax
		call   _01d710_func
		mov    0x00000a(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		testb  $0x000008,0x000081(%edi)
		je     _05b577_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ebp
		mov    %ebp,0x000028(%esi)

	_05b577_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000074(%esi),%dl
		mov    0x000069(%esi),%al
		add    %edx,%eax
		mov    0x00000e(%esp),%edx
		sar    %eax
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000081(%esi),%al
		mov    %edx,0x00002c(%esi)
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _05efb0_func
		mov    %esi,%eax
		call   _01db8c_func
		orb    $0x000004,0x000081(%esi)
		mov    %esi,%eax
		movl   $0x000001,0x000024(%esi)
		call   _01f304_func
		mov    0x000081(%esi),%dl
		xor    %eax,%eax
		and    $0x0000bf,%dl
		mov    _0cdafc_data,%al
		mov    %dl,0x000081(%esi)
		mov    _0cdabc_data,%dx
		mov    0x000028(%esi),%bx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		testb  $0x000008,0x000081(%esi)
		je     _05b605_jump
		mov    $0x000001,%edx
		jmp    _05b60a_jump

	_05b605_jump:
		mov    $0xffffffff,%edx

	_05b60a_jump:
		cwtl   
		imul   %edx,%eax
		xor    %ebx,%ebx
		cwtl   
		cmp    %ebx,%eax
		jge    _05b617_jump
		mov    %ebx,%eax

	_05b617_jump:
		mov    0x000081(%esi),%bl
		add    $0x00000f,%eax
		and    $0x0000fc,%bl
		mov    %ax,0x000052(%esi)
		mov    %bl,0x000081(%esi)
		mov    0x000034(%edi),%ax
		mov    %ax,0x000050(%esi)
		decb   0x00007d(%edi)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05b642_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _05b4c9_jump

	_05b652_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05b65c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x00001a,0x00006b(%eax)
		jae    _05b66d_jump
		movw   $0x000000,0x000052(%ecx)

	_05b66d_jump:
		cmpw   $0x000000,0x000052(%ecx)
		jne    _05b6bd_jump
		cmpb   $0x00001a,0x00006b(%ecx)
		jne    _05b6bd_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _05b6bd_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _05b4a4_func
		movw   $0x000001,0x000052(%ecx)

	_05b6bd_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05b6c4_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _05b6d2_jump
		cmpb   $0x000000,0x00006c(%eax)
		je     _05b6de_jump

	_05b6d2_jump:
		cmpb   $0x000001,0x00006d(%eax)
		jne    _05b6f0_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _05b6f0_jump

	_05b6de_jump:
		cmpb   $0x000000,0x00007d(%eax)
		jbe    _05b6f0_jump
		mov    $0x000002,%ebx
		xor    %edx,%edx
		call   _01d374_func

	_05b6f0_jump:
		pop    %edx
		pop    %ebx
		ret    



_05b6f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		mov    0x000081(%eax),%bl
		call   _01db14_func
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		shl    $0x000004,%bl
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    0x00006c(%ecx),%al
		shr    $0x000007,%bl
		add    %edx,%eax
		mov    %bl,%dl
		and    $0x000001,%dl
		shl    $0x000003,%dl
		cmp    $0x000006,%eax
		jb     _05b780_jump
		jbe    _05b965_jump
		cmp    $0x000100,%eax
		jb     _05b769_jump
		jbe    _05b879_jump
		cmp    $0x000205,%eax
		jb     _05b759_jump
		jbe    _05ba04_jump
		cmp    $0x000207,%eax
		je     _05b94d_jump
		jmp    _05ba0a_jump

	_05b759_jump:
		cmp    $0x000202,%eax
		jb     _05ba0a_jump
		jmp    _05b959_jump

	_05b769_jump:
		cmp    $0x000007,%eax
		jbe    _05b9e0_jump
		cmp    $0x000008,%eax
		je     _05b9a9_jump
		jmp    _05ba0a_jump

	_05b780_jump:
		cmp    $0x000002,%eax
		jb     _05b79b_jump
		jbe    _05b831_jump
		cmp    $0x000004,%eax
		jb     _05b7a4_jump
		jbe    _05b965_jump
		jmp    _05ba04_jump

	_05b79b_jump:
		test   %eax,%eax
		jbe    _05b7af_jump
		jmp    _05ba00_jump

	_05b7a4_jump:
		movw   $0x00fff8,0x000042(%ecx)
		jmp    _05ba04_jump

	_05b7af_jump:
		mov    _0cdbc2_data,%dl
		movw   $0x000000,0x000040(%ecx)
		test   %dl,%dl
		je     _05b7d2_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _05ba0a_jump

	_05b7d2_jump:
		cmpb   $0x000001,0x00007d(%ecx)
		jne    _05b80c_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %bl,%al
		je     _05b7f9_jump
		mov    $0x000006,%edx
		mov    %ecx,%eax
		call   _01d364_func
		jmp    _05ba0a_jump

	_05b7f9_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		jmp    _05ba0a_jump

	_05b80c_jump:
		mov    %bl,%al
		mov    0x000081(%ecx),%bl
		and    $0x000001,%al
		and    $0x0000f7,%bl
		shl    $0x000003,%al
		mov    %bl,0x000081(%ecx)
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,0x000081(%ecx)
		jmp    _05ba0a_jump

	_05b831_jump:
		mov    0x000081(%ecx),%bh
		and    $0x0000f7,%bh
		mov    %bh,%al
		mov    %bh,0x000081(%ecx)
		or     %dl,%al
		mov    %al,0x000081(%ecx)
		mov    _0cdbc2_data,%ah
		movw   $0x000000,0x000040(%ecx)
		test   %ah,%ah
		je     _05b86d_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _05ba0a_jump

	_05b86d_jump:
		mov    %ecx,%eax
		call   _05b65c_func
		jmp    _05ba0a_jump

	_05b879_jump:
		cmpb   $0x000000,_0cdbc2_data
		je     _05b895_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _05ba0a_jump

	_05b895_jump:
		cmpb   $0x000001,0x00007d(%ecx)
		jne    _05b93d_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		jne    _05b8f2_jump
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		add    %edx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%ecx),%esi
		mov    0x000068(%ecx),%al
		add    %eax,%esi
		mov    0x00003e(%ecx),%eax
		sar    $0x000010,%eax
		add    %esi,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _05b90c_jump

	_05b8f2_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%bl
		jne    _05b90c_jump
		testb  $0x000008,0x000081(%ecx)
		sete   %bl

	_05b90c_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %bl,%al
		je     _05b92a_jump
		mov    $0x000006,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func

	_05b92a_jump:
		mov    %ecx,%eax
		call   _053c34_func
		mov    %ecx,%eax
		call   _0252c0_func
		jmp    _05ba0a_jump

	_05b93d_jump:
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		jmp    _05ba0a_jump

	_05b94d_jump:
		mov    %ecx,%eax
		call   _05b400_func
		jmp    _05ba0a_jump

	_05b959_jump:
		mov    %ecx,%eax
		call   _05b3c0_func
		jmp    _05ba0a_jump

	_05b965_jump:
		mov    %bl,%al
		mov    0x000081(%ecx),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%ecx)
		mov    %dl,%dh
		movw   $0x000000,0x000040(%ecx)
		or     %al,%dh
		mov    _0cdbc2_data,%bl
		mov    %dh,0x000081(%ecx)
		test   %bl,%bl
		je     _05ba0a_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _05ba0a_jump

	_05b9a9_jump:
		mov    0x000081(%ecx),%dh
		and    $0x0000f7,%dh
		mov    %dh,%bl
		mov    %dh,0x000081(%ecx)
		or     %dl,%bl
		mov    %bl,0x000081(%ecx)
		mov    _0cdbc2_data,%bh
		movw   $0x000000,0x000040(%ecx)
		test   %bh,%bh
		jne    _05ba0a_jump
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _01d364_func
		jmp    _05ba0a_jump

	_05b9e0_jump:
		mov    0x000081(%ecx),%al
		and    $0x0000f7,%al
		mov    %al,0x000081(%ecx)
		mov    %al,%ah
		movw   $0x000000,0x000040(%ecx)
		or     %dl,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _05ba0a_jump

	_05ba00_jump:
		movb   $0x000064,0x00007f(%ecx)

	_05ba04_jump:
		movw   $0x000000,0x000040(%ecx)

	_05ba0a_jump:
		mov    0x00007f(%ecx),%al
		test   %al,%al
		je     _05ba18_jump
		mov    %al,%ah
		dec    %ah
		mov    %ah,0x00007f(%ecx)

	_05ba18_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ba20_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00007f(%eax)
		jne    _05bae5_jump
		mov    $0x000001,%dl
		mov    %ecx,%eax
		mov    %dl,_0cdbc3_data
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _05ba96_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    _0cec4e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05bae5_jump
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%ecx
		add    %ecx,%eax
		call   _05ef10_func
		mov    _0cec4e_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc1f0_data,%eax
		movw   $0x000000,0x000048(%eax,%ecx,4)
		pop    %ecx
		pop    %ebx
		ret    

	_05ba96_jump:
		mov    _0cdb20_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _05baad_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _05bad7_jump

	_05baad_jump:
		jl     _05bad0_jump
		testb  $0x000008,0x000081(%eax)
		je     _05bad0_jump
		andb   $0x0000f7,0x000081(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_05bad0_jump:
		orb    $0x000008,0x000081(%ecx)

	_05bad7_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func

	_05bae5_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05bae8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		mov    0x00004e(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _05bb28_jump
		mov    0x000081(%ebx),%dh
		and    $0x0000fb,%dh
		mov    %ebx,%eax
		mov    %dh,0x000081(%ebx)
		call   _0772d8_func
		jmp    _05bc6d_jump

	_05bb28_jump:
		cmpw   $0x000000,0x000052(%ebx)
		jg     _05bb96_jump
		mov    0x000081(%ebx),%dh
		test   $0x000001,%dh
		je     _05bb59_jump
		mov    0x000081(%ebx),%ch
		movl   $0x000000,0x000024(%ebx)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%ebx)
		incb   0x00007d(%eax)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bb59_jump:
		mov    %dh,%cl
		or     $0x000003,%cl
		xor    %edx,%edx
		mov    %cl,0x000081(%ebx)
		mov    0x000068(%ebx),%dl
		mov    0x000028(%ebx),%cx
		mov    0x000028(%eax),%si
		add    %ecx,%edx
		mov    0x000068(%eax),%al
		sub    %esi,%edx
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %dx,0x000052(%ebx)
		mov    0x000050(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05bb8c_jump
		neg    %eax

	_05bb8c_jump:
		mov    %ax,0x000052(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bb96_jump:
		andb   $0x0000fd,0x000081(%ebx)
		mov    0x000070(%ebx),%al
		cmp    $0x000014,%al
		jne    _05bc6d_jump
		mov    0x000056(%ebx),%ax
		mov    0x00004a(%ebx),%si
		mov    %ax,0x000040(%ebx)
		test   %si,%si
		je     _05bbc3_jump
		mov    %si,0x000042(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05bbc3_jump:
		testb  $0x000001,0x000081(%ebx)
		je     _05bc57_jump
		mov    0x00004e(%ebx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		add    %ecx,%eax
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    0x000028(%eax),%di
		mov    0x000028(%ebx),%cx
		add    %edi,%edx
		sub    %ecx,%edx
		mov    %edx,%ecx
		xor    %edx,%edx
		mov    0x000068(%ebx),%dl
		sub    %edx,%ecx
		xor    %edx,%edx
		mov    %cx,0x000052(%ebx)
		xor    %ecx,%ecx
		mov    0x000074(%eax),%dl
		mov    0x000069(%eax),%cl
		add    %ecx,%edx
		sar    %edx
		mov    0x00002c(%eax),%ecx
		add    %edx,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%ebx),%al
		mov    0x000069(%ebx),%dl
		add    %edx,%eax
		mov    0x00002c(%ebx),%esi
		sar    %eax
		add    %esi,%eax
		sub    %eax,%ecx
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		imul   %ecx,%eax
		mov    0x000052(%ebx),%si
		mov    %ax,0x000042(%ebx)
		test   %si,%si
		je     _05bc47_jump
		cwtd   
		idiv   %si
		mov    %ax,0x000042(%ebx)

	_05bc47_jump:
		mov    0x000050(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05bc53_jump
		neg    %eax

	_05bc53_jump:
		mov    %ax,0x000052(%ebx)

	_05bc57_jump:
		mov    0x00003e(%ebx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05bc63_jump
		neg    %eax

	_05bc63_jump:
		cwtl   
		call   _053bb0_func
		sub    %ax,0x000052(%ebx)

	_05bc6d_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05bcb4_func:
		push   %esi
		push   %edi
		mov    %ecx,%esi
		mov    (%eax),%eax
		mov    $0x00000f,%ecx
		and    $0x0000ff,%edx
		sub    %edx,%ecx
		lea    (%ecx,%ecx,1),%edx
		mov    $0x000003,%edi
		mov    %dl,%cl
		shl    %cl,%edi
		and    %edi,%eax
		sar    %cl,%eax
		mov    %eax,%edx
		and    $0x000002,%edx
		sar    %edx
		and    $0x000001,%eax
		mov    %edx,(%ebx)
		mov    %eax,(%esi)
		pop    %edi
		pop    %esi
		ret    

	_05bce8_jump:
		push   %ebx
		push   %ecx
		xor    %ebx,%ebx
		mov    %dl,%cl
		mov    %dx,%bx
		and    $0x000007,%cl
		sar    $0x000003,%ebx
		mov    $0x000001,%dl
		movswl %bx,%ebx
		shl    %cl,%dl
		or     %dl,(%ebx,%eax,1)
		pop    %ecx
		pop    %ebx
		ret    

	_05bd28_jump:
		push   %ebx
		push   %ecx
		xor    %ebx,%ebx
		mov    %dx,%bx
		sar    $0x000003,%ebx
		mov    %dl,%cl
		movswl %bx,%ebx
		and    $0x000007,%cl
		add    %eax,%ebx
		mov    $0x000001,%al
		shl    %cl,%al
		and    (%ebx),%al
		pop    %ecx
		pop    %ebx
		ret    



_05bd50_func:
		add    $0x000080,%eax
		and    $0x000001,%ah
		cmp    $0x000100,%ax
		jge    _05bd75_jump
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05bd6b_jump
		neg    %eax

	_05bd6b_jump:
		cwtl   
		mov    _096bd4_data(,%eax,2),%ax
		ret    

	_05bd75_jump:
		sub    $0x000180,%eax
		test   %ax,%ax
		jge    _05bd82_jump
		neg    %eax

	_05bd82_jump:
		cwtl   
		mov    _096bd4_data(,%eax,2),%ax
		neg    %eax
		ret    



_05bd90_func:
		and    $0x000001,%ah
		cmp    $0x000100,%ax
		jge    _05bdb0_jump
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05bda6_jump
		neg    %eax

	_05bda6_jump:
		cwtl   
		mov    _096bd4_data(,%eax,2),%ax
		ret    

	_05bdb0_jump:
		sub    $0x000180,%eax
		test   %ax,%ax
		jge    _05bdbd_jump
		neg    %eax

	_05bdbd_jump:
		cwtl   
		mov    _096bd4_data(,%eax,2),%ax
		neg    %eax
		ret    



_05bdcc_func:
		push   %ecx
		push   %esi
		push   %edi
		and    $0x000001,%ah
		cmp    $0x000100,%ax
		jge    _05be2a_jump
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05bdfc_jump
		neg    %eax
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096bd4_data(,%esi,2),%cx
		mov    %cx,(%ebx)
		jmp    _05be18_jump

	_05bdfc_jump:
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096bd4_data(,%esi,2),%cx
		mov    %ecx,%edi
		mov    %cx,(%ebx)
		neg    %edi
		mov    %di,(%ebx)

	_05be18_jump:
		movswl %ax,%ebx
		mov    _096bd4_data(,%ebx,2),%ax
		mov    %ax,(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_05be2a_jump:
		sub    $0x000180,%eax
		test   %ax,%ax
		jge    _05be50_jump
		neg    %eax
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096bd4_data(,%esi,2),%cx
		mov    %cx,(%ebx)
		neg    %ecx
		jmp    _05be62_jump

	_05be50_jump:
		mov    $0x000080,%esi
		movswl %ax,%ecx
		sub    %ecx,%esi
		mov    _096bd4_data(,%esi,2),%cx

	_05be62_jump:
		mov    %cx,(%ebx)
		movswl %ax,%ebx
		mov    _096bd4_data(,%ebx,2),%ax
		mov    %eax,%esi
		mov    %ax,(%edx)
		neg    %esi
		mov    %si,(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_05be9c_func:
		add    $0x000080,%eax
		xor    %ah,%ah
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05beb0_jump
		neg    %eax

	_05beb0_jump:
		cwtl   
		mov    _096bd4_data(,%eax,2),%ax
		ret    



_05bebc_func:
		push   %ecx
		xor    %ah,%ah
		sub    $0x000080,%eax
		test   %ax,%ax
		jge    _05becc_jump
		neg    %eax

	_05becc_jump:
		cwtl   
		mov    _096bd4_data(,%eax,2),%cx
		mov    %cx,(%edx)
		mov    $0x000080,%edx
		sub    %eax,%edx
		mov    _096bd4_data(,%edx,2),%ax
		mov    %ax,(%ebx)
		pop    %ecx
		ret    



_05bef0_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x00008d,%ax
		jb     _05c148_jump
		jbe    _05c37a_jump
		cmp    $0x0000c4,%ax
		jb     _05c02e_jump
		jbe    _05c3c9_jump
		cmp    $0x0000ea,%ax
		jb     _05bfb4_jump
		jbe    _05c144_jump
		cmp    $0x0000f6,%ax
		jb     _05bf75_jump
		jbe    _05c3bd_jump
		cmp    $0x0000fb,%ax
		jb     _05bf57_jump
		jbe    _05c3bd_jump
		cmp    $0x0000fc,%ax
		jbe    _05c3c5_jump
		cmp    $0x0000fd,%ax
		je     _05c3a2_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05bf57_jump:
		cmp    $0x0000f8,%ax
		jb     _05c3c9_jump
		jbe    _05c144_jump
		cmp    $0x0000f9,%ax
		je     _05c39e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05bf75_jump:
		cmp    $0x0000ef,%ax
		jb     _05bf96_jump
		jbe    _05c39e_jump
		cmp    $0x0000f4,%ax
		jb     _05c3c9_jump
		jbe    _05c3c9_jump
		jmp    _05c37a_jump

	_05bf96_jump:
		cmp    $0x0000ec,%ax
		jb     _05c3c9_jump
		jbe    _05c37a_jump
		cmp    $0x0000ee,%ax
		je     _05c37a_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05bfb4_jump:
		cmp    $0x0000cb,%ax
		jb     _05c006_jump
		jbe    _05c39e_jump
		cmp    $0x0000d5,%ax
		jb     _05bfee_jump
		jbe    _05c37a_jump
		cmp    $0x0000dc,%ax
		jb     _05c3c9_jump
		cmp    $0x0000dd,%ax
		jbe    _05c144_jump
		cmp    $0x0000e0,%ax
		je     _05c144_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05bfee_jump:
		cmp    $0x0000cc,%ax
		jbe    _05c37a_jump
		cmp    $0x0000d3,%ax
		je     _05c39e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c006_jump:
		cmp    $0x0000c6,%ax
		jb     _05c37e_jump
		jbe    _05c39e_jump
		cmp    $0x0000c7,%ax
		jbe    _05c37a_jump
		cmp    $0x0000c9,%ax
		jbe    _05c39e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c02e_jump:
		cmp    $0x0000a1,%ax
		jb     _05c0c8_jump
		jbe    _05c144_jump
		cmp    $0x0000b4,%ax
		jb     _05c090_jump
		jbe    _05c39e_jump
		cmp    $0x0000bb,%ax
		jb     _05c078_jump
		jbe    _05c39e_jump
		cmp    $0x0000be,%ax
		jb     _05c3c9_jump
		jbe    _05c39e_jump
		cmp    $0x0000c0,%ax
		jb     _05c3c9_jump
		cmp    $0x0000c2,%ax
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c078_jump:
		cmp    $0x0000b5,%ax
		jbe    _05c37a_jump
		cmp    $0x0000b7,%ax
		je     _05c39e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c090_jump:
		cmp    $0x0000a8,%ax
		jb     _05c0ba_jump
		jbe    _05c144_jump
		cmp    $0x0000aa,%ax
		jb     _05c3c9_jump
		jbe    _05c144_jump
		cmp    $0x0000ad,%ax
		je     _05c3c1_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c0ba_jump:
		cmp    $0x0000a4,%ax
		je     _05c37a_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c0c8_jump:
		cmp    $0x000094,%ax
		jb     _05c11a_jump
		jbe    _05c3c1_jump
		cmp    $0x00009a,%ax
		jb     _05c102_jump
		cmp    $0x00009b,%ax
		jbe    _05c39e_jump
		cmp    $0x00009d,%ax
		jb     _05c3c9_jump
		jbe    _05c37e_jump
		cmp    $0x00009e,%ax
		je     _05c37a_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c102_jump:
		cmp    $0x000095,%ax
		jbe    _05c37e_jump
		cmp    $0x000096,%ax
		je     _05c144_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c11a_jump:
		cmp    $0x00008f,%ax
		jb     _05c3c1_jump
		jbe    _05c144_jump
		cmp    $0x000092,%ax
		jb     _05c3c9_jump
		jbe    _05c144_jump
		cmpb   $0x000000,0x000076(%edx)
		jne    _05c37a_jump

	_05c144_jump:
		mov    $0x000002,%al
		pop    %edx
		ret    

	_05c148_jump:
		cmp    $0x00004b,%ax
		jb     _05c26e_jump
		jbe    _05c144_jump
		cmp    $0x000062,%ax
		jb     _05c1ee_jump
		jbe    _05c37a_jump
		cmp    $0x000079,%ax
		jb     _05c1b0_jump
		jbe    _05c144_jump
		cmp    $0x000087,%ax
		jb     _05c192_jump
		jbe    _05c144_jump
		cmp    $0x000089,%ax
		jb     _05c3c9_jump
		jbe    _05c3c1_jump
		cmp    $0x00008a,%ax
		je     _05c39e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c192_jump:
		cmp    $0x00007b,%ax
		jb     _05c3c9_jump
		jbe    _05c382_jump
		cmp    $0x000085,%ax
		je     _05c39e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c1b0_jump:
		cmp    $0x00006e,%ax
		jb     _05c1d0_jump
		jbe    _05c144_jump
		cmp    $0x000070,%ax
		jbe    _05c3bd_jump
		cmp    $0x000077,%ax
		je     _05c39e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c1d0_jump:
		cmp    $0x000066,%ax
		jb     _05c3c9_jump
		jbe    _05c144_jump
		cmp    $0x00006d,%ax
		je     _05c3bd_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c1ee_jump:
		cmp    $0x000056,%ax
		jb     _05c232_jump
		jbe    _05c39e_jump
		cmp    $0x00005f,%ax
		jb     _05c214_jump
		jbe    _05c3c1_jump
		cmp    $0x000060,%ax
		jbe    _05c3bd_jump
		mov    $0x000003,%al
		pop    %edx
		ret    

	_05c214_jump:
		cmp    $0x000058,%ax
		jb     _05c3c9_jump
		jbe    _05c3c5_jump
		cmp    $0x00005a,%ax
		jb     _05c3c9_jump
		mov    $0x000002,%al
		pop    %edx
		ret    

	_05c232_jump:
		cmp    $0x00004e,%ax
		jb     _05c260_jump
		cmp    $0x00004f,%ax
		jbe    _05c144_jump
		cmp    $0x000052,%ax
		jb     _05c3c9_jump
		jbe    _05c3c1_jump
		cmp    $0x000053,%ax
		je     _05c144_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c260_jump:
		cmp    $0x00004d,%ax
		je     _05c39e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c26e_jump:
		cmp    $0x000029,%ax
		jb     _05c308_jump
		jbe    _05c144_jump
		cmp    $0x000030,%ax
		jb     _05c2d6_jump
		jbe    _05c144_jump
		cmp    $0x00003a,%ax
		jb     _05c2b8_jump
		cmp    $0x00003b,%ax
		jbe    _05c39e_jump
		cmp    $0x000042,%ax
		jb     _05c3c9_jump
		jbe    _05c39e_jump
		cmp    $0x000048,%ax
		jb     _05c3c9_jump
		mov    $0x000003,%al
		pop    %edx
		ret    

	_05c2b8_jump:
		cmp    $0x000037,%ax
		jb     _05c3c9_jump
		jbe    _05c3c1_jump
		cmp    $0x000039,%ax
		je     _05c144_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c2d6_jump:
		cmp    $0x00002c,%ax
		jb     _05c2fa_jump
		jbe    _05c39e_jump
		cmp    $0x00002d,%ax
		jbe    _05c144_jump
		cmp    $0x00002e,%ax
		je     _05c39e_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c2fa_jump:
		cmp    $0x00002a,%ax
		je     _05c3c5_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c308_jump:
		cmp    $0x000013,%ax
		jb     _05c352_jump
		jbe    _05c144_jump
		cmp    $0x00001c,%ax
		jb     _05c33a_jump
		jbe    _05c39e_jump
		cmp    $0x00001e,%ax
		jb     _05c3c9_jump
		jbe    _05c37a_jump
		cmp    $0x00001f,%ax
		je     _05c3c1_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c33a_jump:
		cmp    $0x000014,%ax
		jbe    _05c3bd_jump
		cmp    $0x000015,%ax
		je     _05c144_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c352_jump:
		cmp    $0x000004,%ax
		jb     _05c370_jump
		jbe    _05c3c5_jump
		cmp    $0x000007,%ax
		jb     _05c3c9_jump
		jbe    _05c3bd_jump
		cmp    $0x00000b,%ax
		je     _05c144_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c370_jump:
		cmp    $0x000002,%ax
		je     _05c3c1_jump
		mov    $0x000004,%al
		pop    %edx
		ret    

	_05c37a_jump:
		xor    %al,%al
		pop    %edx
		ret    

	_05c37e_jump:
		mov    $0x000001,%al
		pop    %edx
		ret    

	_05c382_jump:
		cmpw   $0x000001,_0cecd4_data
		jne    _05c144_jump
		cmpw   $0x00000e,_0cecc0_data
		jne    _05c144_jump

	_05c39e_jump:
		mov    $0x000003,%al
		pop    %edx
		ret    

	_05c3a2_jump:
		mov    _0cec4e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05c3b6_jump
		mov    $0x000004,%eax
		pop    %edx
		ret    

	_05c3b6_jump:
		mov    $0x000007,%eax
		pop    %edx
		ret    

	_05c3bd_jump:
		mov    $0x000005,%al
		pop    %edx
		ret    

	_05c3c1_jump:
		mov    $0x000006,%al
		pop    %edx
		ret    

	_05c3c5_jump:
		mov    $0x000007,%al
		pop    %edx
		ret    

	_05c3c9_jump:
		mov    $0x000004,%al
		pop    %edx
		ret    



_05c3d0_func:
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000001,_092264_data(,%eax,4)
		jne    _05c3f4_jump
		test   %ax,%ax
		je     _05c3ee_jump
		cmp    $0x000009,%ax
		jne    _05c402_jump

	_05c3ee_jump:
		cmpl   $0x000000,0x000028(%edx)
		jge    _05c402_jump

	_05c3f4_jump:
		movl   $0xffff8300,0x000028(%edx)
		movl   $0xffff8300,0x00002c(%edx)

	_05c402_jump:
		movw   $0x000000,0x00005a(%edx)
		mov    0x000028(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00002c(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    0x00006d(%edx),%al
		mov    %al,0x00006f(%edx)
		mov    0x00006c(%edx),%al
		mov    %al,0x00006e(%edx)
		mov    0x000076(%edx),%al
		mov    %al,0x000077(%edx)
		mov    0x000060(%edx),%ax
		movl   $0x000001,0x000030(%edx)
		cmp    $0x000062,%ax
		jb     _05c57d_jump
		jbe    _05c6a3_jump
		cmp    $0x0000ae,%ax
		jb     _05c4dd_jump
		jbe    _05c6e3_jump
		cmp    $0x0000d5,%ax
		jb     _05c495_jump
		jbe    _05c6a3_jump
		cmp    $0x0000e1,%ax
		jb     _05c486_jump
		jbe    _05c6e3_jump
		cmp    $0x0000e2,%ax
		jbe    _05c6ef_jump
		cmp    $0x0000e3,%ax
		je     _05c6b9_jump
		jmp    _05c721_jump

	_05c486_jump:
		cmp    $0x0000d9,%ax
		je     _05c6b3_jump
		jmp    _05c721_jump

	_05c495_jump:
		cmp    $0x0000b8,%ax
		jb     _05c4c7_jump
		jbe    _05c6ef_jump
		cmp    $0x0000bb,%ax
		jb     _05c721_jump
		jbe    _05c6e3_jump
		cmp    $0x0000d4,%ax
		je     _05c6e3_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c4c7_jump:
		cmp    $0x0000b7,%ax
		je     _05c6bf_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c4dd_jump:
		cmp    $0x00007a,%ax
		jb     _05c535_jump
		jbe    _05c6d7_jump
		cmp    $0x000099,%ax
		jb     _05c51f_jump
		jbe    _05c6ad_jump
		cmp    $0x0000a8,%ax
		jb     _05c721_jump
		cmp    $0x0000a9,%ax
		jbe    _05c707_jump
		cmp    $0x0000ac,%ax
		je     _05c6cb_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c51f_jump:
		cmp    $0x000096,%ax
		je     _05c6b3_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c535_jump:
		cmp    $0x000071,%ax
		jb     _05c567_jump
		jbe    _05c713_jump
		cmp    $0x000074,%ax
		jb     _05c721_jump
		jbe    _05c6ad_jump
		cmp    $0x000078,%ax
		je     _05c6d7_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c567_jump:
		cmp    $0x000064,%ax
		je     _05c6cb_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c57d_jump:
		cmp    $0x000032,%ax
		jb     _05c623_jump
		jbe    _05c6b9_jump
		cmp    $0x00003d,%ax
		jb     _05c5e1_jump
		jbe    _05c6e3_jump
		cmp    $0x000046,%ax
		jb     _05c5cb_jump
		jbe    _05c6b3_jump
		cmp    $0x000048,%ax
		jb     _05c721_jump
		jbe    _05c6d7_jump
		cmp    $0x000051,%ax
		je     _05c707_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c5cb_jump:
		cmp    $0x000041,%ax
		je     _05c6b9_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c5e1_jump:
		cmp    $0x000038,%ax
		jb     _05c60d_jump
		jbe    _05c6cb_jump
		cmp    $0x000039,%ax
		jbe    _05c6fb_jump
		cmp    $0x00003c,%ax
		je     _05c6cb_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c60d_jump:
		cmp    $0x000037,%ax
		je     _05c6d7_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c623_jump:
		cmp    $0x000014,%ax
		jb     _05c677_jump
		jbe    _05c6bf_jump
		cmp    $0x000023,%ax
		jb     _05c661_jump
		jbe    _05c6d7_jump
		cmp    $0x000028,%ax
		jb     _05c721_jump
		jbe    _05c6d7_jump
		cmp    $0x00002b,%ax
		je     _05c6d7_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c661_jump:
		cmp    $0x000020,%ax
		je     _05c6e3_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c677_jump:
		cmp    $0x00000c,%ax
		jb     _05c691_jump
		jbe    _05c6bf_jump
		cmp    $0x00000e,%ax
		je     _05c6bf_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c691_jump:
		cmp    $0x000005,%ax
		je     _05c6b9_jump
		movb   $0x000028,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c6a3_jump:
		call   _04e8c0_func
		jmp    _05c725_jump

	_05c6ad_jump:
		movb   $0x0000c8,0x00007a(%edx)
		jmp    _05c725_jump

	_05c6b3_jump:
		movb   $0x0000a0,0x00007a(%edx)
		jmp    _05c725_jump

	_05c6b9_jump:
		movb   $0x00003c,0x00007a(%edx)
		jmp    _05c725_jump

	_05c6bf_jump:
		movb   $0x0000b4,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c6cb_jump:
		movb   $0x0000dc,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c6d7_jump:
		movb   $0x000064,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c6e3_jump:
		movb   $0x000096,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c6ef_jump:
		movb   $0x000032,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c6fb_jump:
		movb   $0x0000fa,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c707_jump:
		movb   $0x000000,0x00007a(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c713_jump:
		movw   $0x000000,0x000050(%edx)
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

	_05c721_jump:
		movb   $0x000028,0x00007a(%edx)

	_05c725_jump:
		movw   $0x000000,0x000052(%edx)
		pop    %edx
		ret    

_05c730_switch:
		.long   _05cd60_case
		.long   _05cd6f_case
		.long   _05cd7e_case
		.long   _05cd8d_case
		.long   _05cd9c_case
		.long   _05cdb1_case
		.long   _05cdc0_case




_05c74c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		movw   $0x000000,0x000048(%eax)
		movl   $0x000000,0x000024(%eax)
		call   _05bef0_func
		mov    %al,0x00007e(%ecx)
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		mov    _0930d6_data(,%eax,2),%ax
		mov    0x000060(%ecx),%dx
		mov    %ax,0x00005c(%ecx)
		cmp    $0x0000a3,%dx
		je     _05c792_jump
		mov    0x00006f(%ecx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%ecx),%al
		mov    %al,0x00006c(%ecx)

	_05c792_jump:
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00003c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		movw   $0x000000,0x000040(%ecx)
		add    %eax,%edx
		movw   $0x000000,0x000042(%ecx)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000002(%edx,%eax,8),%al
		movb   $0x000000,0x000073(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000000,0x000072(%ecx)
		movw   $0x00ffff,0x000056(%ecx)
		movw   $0x00ffff,0x00004a(%ecx)
		movb   $0x000000,0x00007b(%ecx)
		mov    %al,0x00006a(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x00ffff,0x000046(%ecx)
		and    $0x0000f7,%ah
		mov    0x000010(%ecx),%ebx
		mov    %ah,0x000081(%ecx)
		lea    0x000081(%ecx),%eax
		test   %ebx,%ebx
		setne  %dl
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000ef,%dh
		mov    %dh,(%eax)
		shl    $0x000004,%dl
		mov    %dh,%bl
		or     %dl,%bl
		xor    %edx,%edx
		mov    %bl,(%eax)
		mov    $0x000005,%ebx
		lea    0x000062(%ecx),%eax
		call   _07c050_func
		mov    %ecx,%eax
		call   _05ef3c_func
		movw   $0x000000,0x000058(%ecx)
		movb   $0x0000ff,0x00007c(%ecx)
		movl   $0x000001,0x000030(%ecx)
		mov    0x000077(%ecx),%al
		movb   $0x000000,0x00007f(%ecx)
		mov    %al,0x000076(%ecx)
		mov    0x000082(%ecx),%al
		movb   $0x000000,0x00007d(%ecx)
		and    $0x0000fe,%al
		mov    0x000081(%ecx),%bh
		mov    %al,0x000082(%ecx)
		and    $0x00003f,%bh
		mov    0x000060(%ecx),%ax
		mov    %bh,0x000081(%ecx)
		cmp    $0x0000af,%ax
		jb     _05c9e4_jump
		cmp    $0x0000af,%ax
		jbe    _05cc29_jump
		cmp    $0x0000df,%ax
		jb     _05c935_jump
		jbe    _05cf71_jump
		cmp    $0x0000ed,%ax
		jb     _05c8f2_jump
		jbe    _05cea3_jump
		cmp    $0x0000f1,%ax
		jb     _05c8dd_jump
		jbe    _05cec3_jump
		cmp    $0x0000fa,%ax
		jb     _05c8ce_jump
		jbe    _05cc29_jump
		cmp    $0x0000fc,%ax
		jbe    _05cba0_jump
		jmp    _05cf71_jump

	_05c8ce_jump:
		cmp    $0x0000f3,%ax
		je     _05cea3_jump
		jmp    _05cf71_jump

	_05c8dd_jump:
		cmp    $0x0000ef,%ax
		jb     _05cf71_jump
		jbe    _05cded_jump
		jmp    _05cbf5_jump

	_05c8f2_jump:
		cmp    $0x0000e4,%ax
		jb     _05c919_jump
		jbe    _05cb60_jump
		cmp    $0x0000e6,%ax
		jbe    _05cc29_jump
		cmp    $0x0000eb,%ax
		je     _05cc1c_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c919_jump:
		cmp    $0x0000e2,%ax
		jb     _05cf71_jump
		jbe    _05cf01_jump
		movb   $0x000002,_0ceeb3_data
		jmp    _05cccf_jump

	_05c935_jump:
		cmp    $0x0000bf,%ax
		jb     _05c99c_jump
		jbe    _05cc1c_jump
		cmp    $0x0000d4,%ax
		jb     _05c97b_jump
		jbe    _05cf0f_jump
		cmp    $0x0000d9,%ax
		jb     _05c96a_jump
		jbe    _05cf1c_jump
		cmp    $0x0000da,%ax
		je     _05cbb5_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c96a_jump:
		cmp    $0x0000d5,%ax
		je     _05cc6d_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c97b_jump:
		cmp    $0x0000c5,%ax
		jb     _05cf71_jump
		jbe    _05cee4_jump
		cmp    $0x0000ca,%ax
		je     _05cf3d_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c99c_jump:
		cmp    $0x0000b4,%ax
		jb     _05c9c9_jump
		jbe    _05cb52_jump
		cmp    $0x0000b7,%ax
		jb     _05cf71_jump
		jbe    _05cb52_jump
		cmp    $0x0000b8,%ax
		je     _05cf01_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c9c9_jump:
		cmp    $0x0000b0,%ax
		jbe    _05cbf5_jump
		cmp    $0x0000b2,%ax
		je     _05cec3_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05c9e4_jump:
		cmp    $0x000048,%ax
		jb     _05cab7_jump
		jbe    _05cde2_jump
		cmp    $0x00007b,%ax
		jb     _05ca5f_jump
		jbe    _05cd46_jump
		cmp    $0x000096,%ax
		jb     _05ca3e_jump
		jbe    _05ced0_jump
		cmp    $0x0000a8,%ax
		jb     _05ca2d_jump
		cmp    $0x0000a9,%ax
		jbe    _05cec3_jump
		cmp    $0x0000aa,%ax
		je     _05cee4_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ca2d_jump:
		cmp    $0x000098,%ax
		je     _05cea3_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ca3e_jump:
		cmp    $0x000090,%ax
		jb     _05cf71_jump
		jbe    _05cd39_jump
		cmp    $0x000091,%ax
		je     _05cdcf_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ca5f_jump:
		cmp    $0x00004d,%ax
		jb     _05ca96_jump
		jbe    _05cded_jump
		cmp    $0x000062,%ax
		jb     _05cf71_jump
		jbe    _05cc67_jump
		cmp    $0x000074,%ax
		jb     _05cf71_jump
		cmp    $0x000076,%ax
		jbe    _05cebf_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ca96_jump:
		cmp    $0x00004a,%ax
		jb     _05cf71_jump
		jbe    _05cb52_jump
		cmp    $0x00004b,%ax
		je     _05cee4_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cab7_jump:
		cmp    $0x00001c,%ax
		jb     _05cb0b_jump
		jbe    _05ce10_jump
		cmp    $0x000032,%ax
		jb     _05caf0_jump
		jbe    _05ccc7_jump
		cmp    $0x000034,%ax
		jb     _05cc51_jump
		jbe    _05cc5c_jump
		cmp    $0x000035,%ax
		je     _05cc51_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05caf0_jump:
		cmp    $0x00001d,%ax
		jbe    _05cea3_jump
		cmp    $0x000022,%ax
		je     _05cea3_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cb0b_jump:
		cmp    $0x000015,%ax
		jb     _05cb38_jump
		jbe    _05ceb1_jump
		cmp    $0x000019,%ax
		jb     _05cf71_jump
		jbe    _05ce7f_jump
		cmp    $0x00001a,%ax
		je     _05ce34_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cb38_jump:
		test   %ax,%ax
		jbe    _05cd20_jump
		cmp    $0x000007,%ax
		je     _05ceb1_jump
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cb52_jump:
		mov    %ecx,%eax
		call   _0715d8_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cb60_jump:
		testb  $0x000004,_0cec79_data
		je     _05cf71_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    %bx,_0cebd4_data
		mov    $0x000002,%ebx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		movb   $0x000002,0x00006e(%ecx)
		call   _05efb0_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cba0_jump:
		movw   $0x00fff1,0x00003c(%ecx)
		mov    0x00003c(%ecx),%ax
		cwtl   
		mov    %eax,0x000028(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cbb5_jump:
		mov    0x000028(%ecx),%ax
		xor    %edx,%edx
		xor    %esi,%esi
		mov    %ax,_0cec94_data
		mov    0x000069(%ecx),%dl
		mov    $_0cda94_data,%eax
		mov    $0x004000,%ecx
		call   _0188d0_func
		sub    %edx,%eax
		mov    %ecx,_0cda00_data
		add    $0x000010,%eax
		mov    %esi,_0cda08_data
		mov    %ax,_0cec8e_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cbf5_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		dec    %eax
		cwtl   
		call   _0690e0_func
		mov    %al,0x00006b(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cc1c_jump:
		mov    0x000076(%ecx),%al
		mov    %al,0x00006b(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cc29_jump:
		mov    0x000076(%ecx),%al
		mov    0x000081(%ecx),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,0x000081(%ecx)
		or     %al,%bl
		mov    %bl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cc51_jump:
		movb   $0x000005,0x000072(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cc5c_jump:
		movb   $0x00000a,0x000072(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cc67_jump:
		movw   $0x0000d5,0x000060(%ecx)

	_05cc6d_jump:
		mov    $0x000001,%edx
		mov    $0x004000,%edi
		mov    %ecx,%eax
		mov    $0x0000ff,%bh
		call   _04f1fc_func
		mov    %ecx,%eax
		xor    %ebp,%ebp
		call   _018a8c_func
		mov    %edi,_0cda00_data
		mov    %ebp,_0cda08_data
		mov    %bh,_0ceeb2_data
		mov    %bh,_0ceeae_data
		xor    %al,%al
		movb   $0x0000b4,0x00007f(%ecx)
		mov    %al,_0ceedb_data
		mov    %al,_0ceead_data
		mov    %al,_0ceeb4_data
		mov    %al,_0ceeb1_data
		mov    %al,_0ceeb3_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ccc7_jump:
		xor    %dh,%dh
		mov    %dh,_0ceeb3_data

	_05cccf_jump:
		mov    %ecx,%eax
		movw   $0x0000ff,0x00005a(%ecx)
		call   _018a8c_func
		xor    %edx,%edx
		xor    %bl,%bl
		mov    $0x004000,%eax
		mov    %edx,_0cda08_data
		mov    %bl,_0ceedb_data
		movb   $0x000064,0x00007f(%ecx)
		mov    $0x0000ff,%cl
		xor    %bh,%bh
		mov    %eax,_0cda00_data
		mov    %bh,_0ceead_data
		mov    %cl,_0ceeae_data
		xor    %al,%al
		xor    %ch,%ch
		mov    %al,_0ceeb1_data
		mov    %ch,_0ceeb4_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cd20_jump:
		mov    0x000081(%ecx),%al
		movb   $0x00001e,0x000074(%ecx)
		and    $0x0000df,%al
		mov    %al,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cd39_jump:
		movw   $0x000000,0x000056(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cd46_jump:
		mov    0x000075(%ecx),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _05cf71_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05c730_switch(,%eax,4)

	_05cd60_case:
		movb   $0x000002,0x00007d(%ecx)
		movb   $0x000000,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cd6f_case:
		movb   $0x000008,0x00007d(%ecx)
		movb   $0x00003c,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cd7e_case:
		movb   $0x000018,0x00007d(%ecx)
		movb   $0x0000aa,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cd8d_case:
		movb   $0x00000a,0x00007d(%ecx)
		movb   $0x000064,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cd9c_case:
		movw   $0x000000,0x00004a(%ecx)
		movb   $0x000001,0x00007d(%ecx)
		movb   $0x000000,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cdb1_case:
		movb   $0x000004,0x00007d(%ecx)
		movb   $0x00003c,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cdc0_case:
		movb   $0x000024,0x00007d(%ecx)
		movb   $0x000078,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cdcf_jump:
		movw   $0x000028,0x000050(%ecx)
		movw   $0x000028,0x000056(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cde2_jump:
		movb   $0x000001,0x00007d(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cded_jump:
		mov    0x00006e(%ecx),%ah
		xor    %edx,%edx
		cmp    $0x00000e,%ah
		sete   %dl
		mov    %ecx,%eax
		call   _03c920_func
		movw   $0x000000,0x000056(%ecx)
		movb   $0x000050,0x00007a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ce10_jump:
		movw   $0x000064,0x00004a(%ecx)
		mov    0x000081(%ecx),%dl
		mov    0x00004a(%ecx),%ax
		or     $0x000004,%dl
		mov    %ax,0x000056(%ecx)
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ce34_jump:
		cmpw   $0x000001,_0cecd4_data
		je     _05ce57_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d224_func
		sub    $0x000002,%eax
		mov    %ax,0x000050(%ecx)
		mov    %ax,0x000056(%ecx)
		jmp    _05ce63_jump

	_05ce57_jump:
		movw   $0x000028,0x000050(%ecx)
		movw   $0x000014,0x000056(%ecx)

	_05ce63_jump:
		mov    0x000081(%ecx),%dh
		movw   $0x000014,0x000052(%ecx)
		or     $0x000024,%dh
		mov    %dh,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ce7f_jump:
		movw   $0x00000f,0x00004a(%ecx)
		mov    0x000081(%ecx),%bl
		mov    0x00004a(%ecx),%ax
		or     $0x000004,%bl
		mov    %ax,0x000056(%ecx)
		mov    %bl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cea3_jump:
		movw   $0x000001,0x00004a(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000056(%ecx)

	_05ceb1_jump:
		orb    $0x000004,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cebf_jump:
		movb   $0x000000,0x00007d(%ecx)

	_05cec3_jump:
		movw   $0x000000,0x000052(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ced0_jump:
		movb   $0x0000a0,0x00007a(%ecx)
		xor    %ecx,%ecx
		mov    %cx,_0cec5e_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cee4_jump:
		mov    0x000081(%ecx),%dl
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cf01_jump:
		orb    $0x000008,0x000081(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cf0f_jump:
		movw   $0x000000,0x000050(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cf1c_jump:
		mov    0x00000c(%ecx),%eax
		mov    0x000004(%eax),%eax
		andb   $0x0000ef,0x000007(%eax)
		mov    0x00000c(%ecx),%eax
		mov    0x000004(%eax),%eax
		andb   $0x0000ef,0x000017(%eax)
		movw   $0x000000,0x00004a(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05cf3d_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _05cf51_jump
		cmpb   $0x000039,0x00006c(%ecx)
		jne    _05cf51_jump
		mov    %ecx,_0cdb1c_data
		jmp    _05cf57_jump

	_05cf51_jump:
		mov    %ecx,_0cdb18_data

	_05cf57_jump:
		movb   $0x000003,0x00007e(%ecx)
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)

	_05cf71_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05cf78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    _0cc1f4_data,%cx
		mov    %dx,_0cc1ec_data
		mov    %dx,_0cc1fc_data
		test   %cx,%cx
		jle    _05cfc1_jump
		xor    %ecx,%ecx

	_05cf9d_jump:
		mov    _0cc1e8_data,%ebx
		movswl %dx,%eax
		mov    %cx,(%ebx,%eax,2)
		mov    _0cc1f8_data,%ebx
		mov    _0cc1f4_data,%si
		inc    %edx
		mov    %cx,(%ebx,%eax,2)
		cmp    %si,%dx
		jl     _05cf9d_jump

	_05cfc1_jump:
		mov    _0cc1f0_data,%ebx
		mov    _0cc1f4_data,%ax
		xor    %edx,%edx
		mov    %eax,(%esp)
		test   %ax,%ax
		jle    _05d059_jump

	_05cfdb_jump:
		cmpw   $0x000000,_0cec4e_data
		jne    _05d004_jump
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000002,_092265_data(,%eax,4)
		je     _05d004_jump
		mov    0x000032(%ebx),%eax
		sar    $0x000010,%eax
		call   _071388_func
		test   %al,%al
		jne    _05d04a_jump

	_05d004_jump:
		xor    %eax,%eax
		mov    0x000060(%ebx),%ax
		testb  $0x000001,_092264_data(,%eax,4)
		je     _05d030_jump
		mov    _0cc1ec_data,%ax
		movswl %ax,%ecx
		inc    %eax
		mov    _0cc1e8_data,%esi
		mov    %ax,_0cc1ec_data
		mov    %dx,(%esi,%ecx,2)
		jmp    _05d04a_jump

	_05d030_jump:
		mov    _0cc1fc_data,%ax
		mov    _0cc1f8_data,%ecx
		movswl %ax,%esi
		inc    %eax
		mov    %dx,(%ecx,%esi,2)
		mov    %ax,_0cc1fc_data

	_05d04a_jump:
		mov    (%esp),%eax
		inc    %edx
		add    $0x000084,%ebx
		cmp    %ax,%dx
		jl     _05cfdb_jump

	_05d059_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05d064_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %al,0x00000c(%esp)
		mov    $0xffffffff,%edx
		xor    %ah,%ah
		xor    %esi,%esi
		mov    %dx,0x000008(%esp)
		mov    %edx,%ebx
		mov    %dx,(%esp)
		mov    %ah,_0cee99_data
		mov    %ah,_0ceec0_data
		mov    %ah,_0ceedb_data
		mov    %dx,_0cecde_data
		mov    %si,_0cecbe_data
		mov    %dx,_0cecdc_data
		mov    %dx,_0ceccc_data
		mov    %dx,_0cec72_data
		mov    %dx,_0cec8a_data
		mov    %dx,_0cecd0_data
		mov    %dx,_0cecc6_data
		mov    %dx,_0cecbc_data
		mov    %dx,_0cec50_data
		mov    %dx,_0cec54_data
		mov    %dx,_0ced02_data
		mov    %dx,_0cecd6_data
		mov    %dx,_0ced12_data
		mov    %dx,_0cec5c_data
		mov    %dx,_0ced16_data
		mov    %dx,_0ced20_data
		mov    %dx,_0ced0e_data
		mov    %dx,_0ced1e_data
		mov    %dx,_0ced14_data
		mov    _0cc1f0_data,%eax
		xor    %dl,%bl
		mov    %edx,%esi
		mov    %bl,_0cee9b_data
		xor    %edx,%esi
		mov    _0cc1f4_data,%dx
		mov    %eax,%ecx
		mov    %edx,0x000004(%esp)
		test   %dx,%dx
		jle    _05dfa9_jump
		lea    0x000081(%eax),%edi

	_05d150_jump:
		mov    0x00000c(%esp),%al
		mov    %si,0x000034(%ecx)
		test   %al,%al
		je     _05d163_jump
		mov    %ecx,%eax
		call   _05c3d0_func

	_05d163_jump:
		mov    0x000060(%ecx),%bx
		movw   $0x000000,0x00005e(%ecx)
		cmp    $0x0000a3,%bx
		jne    _05d180_jump
		mov    0x00006f(%ecx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%ecx),%al
		mov    %al,0x00006c(%ecx)

	_05d180_jump:
		mov    %ecx,%eax
		call   _05c74c_func
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000001,_092264_data(,%eax,4)
		je     _05d1b6_jump
		movl   $0xffff8300,0x000028(%ecx)
		mov    0x000081(%ecx),%bl
		movl   $0xffff8300,0x00002c(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _05d1bd_jump

	_05d1b6_jump:
		orb    $0x000004,0x000081(%ecx)

	_05d1bd_jump:
		mov    0x000060(%ecx),%ax
		cmp    $0x000077,%ax
		jb     _05d449_jump
		jbe    _05dd60_jump
		cmp    $0x0000c4,%ax
		jb     _05d30f_jump
		cmp    $0x0000c5,%ax
		jbe    _05dd60_jump
		cmp    $0x0000dc,%ax
		jb     _05d28f_jump
		jbe    _05d7f5_jump
		cmp    $0x0000ee,%ax
		jb     _05d24b_jump
		jbe    _05dd49_jump
		cmp    $0x0000f6,%ax
		jb     _05d22c_jump
		jbe    _05d71f_jump
		cmp    $0x0000f9,%ax
		jb     _05df05_jump
		jbe    _05d6ab_jump
		cmp    $0x000101,%ax
		je     _05d6ff_jump
		jmp    _05df05_jump

	_05d22c_jump:
		cmp    $0x0000f2,%ax
		jb     _05df05_jump
		jbe    _05d887_jump
		cmp    $0x0000f4,%ax
		je     _05dd60_jump
		jmp    _05df05_jump

	_05d24b_jump:
		cmp    $0x0000e7,%ax
		jb     _05d270_jump
		jbe    _05d783_jump
		cmp    $0x0000e8,%ax
		jbe    _05d7b7_jump
		cmp    $0x0000e9,%ax
		je     _05dd60_jump
		jmp    _05df05_jump

	_05d270_jump:
		cmp    $0x0000df,%ax
		jb     _05df05_jump
		jbe    _05d72e_jump
		cmp    $0x0000e0,%ax
		je     _05dd49_jump
		jmp    _05df05_jump

	_05d28f_jump:
		cmp    $0x0000cd,%ax
		jb     _05d2df_jump
		jbe    _05dcbd_jump
		cmp    $0x0000d7,%ax
		jb     _05d2bc_jump
		jbe    _05dd60_jump
		cmp    $0x0000da,%ax
		jb     _05df05_jump
		jbe    _05d759_jump
		jmp    _05d807_jump

	_05d2bc_jump:
		cmp    $0x0000ce,%ax
		jbe    _05dd60_jump
		cmp    $0x0000d1,%ax
		jb     _05df05_jump
		cmp    $0x0000d2,%ax
		jbe    _05dd60_jump
		jmp    _05df05_jump

	_05d2df_jump:
		cmp    $0x0000c8,%ax
		jb     _05d300_jump
		jbe    _05de3e_jump
		cmp    $0x0000cb,%ax
		jb     _05df05_jump
		jbe    _05dd49_jump
		jmp    _05dd8c_jump

	_05d300_jump:
		cmp    $0x0000c6,%ax
		je     _05de3e_jump
		jmp    _05df05_jump

	_05d30f_jump:
		cmp    $0x000093,%ax
		jb     _05d3b9_jump
		jbe    _05db42_jump
		cmp    $0x0000ad,%ax
		jb     _05d37f_jump
		jbe    _05deb2_jump
		cmp    $0x0000bb,%ax
		jb     _05d360_jump
		jbe    _05decb_jump
		cmp    $0x0000be,%ax
		jb     _05df05_jump
		jbe    _05ddbd_jump
		cmp    $0x0000c0,%ax
		jb     _05df05_jump
		cmp    $0x0000c2,%ax
		jbe    _05dd60_jump
		jmp    _05df05_jump

	_05d360_jump:
		cmp    $0x0000b3,%ax
		jb     _05df05_jump
		jbe    _05d887_jump
		cmp    $0x0000ba,%ax
		je     _05dd60_jump
		jmp    _05df05_jump

	_05d37f_jump:
		cmp    $0x000099,%ax
		jb     _05d3aa_jump
		jbe    _05db36_jump
		cmp    $0x00009d,%ax
		jb     _05df05_jump
		jbe    _05d8a9_jump
		cmp    $0x0000a5,%ax
		je     _05dc6e_jump
		jmp    _05df05_jump

	_05d3aa_jump:
		cmp    $0x000094,%ax
		je     _05de63_jump
		jmp    _05df05_jump

	_05d3b9_jump:
		cmp    $0x000088,%ax
		jb     _05d405_jump
		jbe    _05dbbc_jump
		cmp    $0x00008f,%ax
		jb     _05d3e6_jump
		jbe    _05dd60_jump
		cmp    $0x000091,%ax
		jb     _05df05_jump
		jbe    _05dd38_jump
		jmp    _05dd60_jump

	_05d3e6_jump:
		cmp    $0x00008b,%ax
		jb     _05df05_jump
		jbe    _05dd60_jump
		cmp    $0x00008e,%ax
		je     _05de63_jump
		jmp    _05df05_jump

	_05d405_jump:
		cmp    $0x000082,%ax
		jb     _05d430_jump
		jbe    _05dd60_jump
		cmp    $0x000085,%ax
		jb     _05df05_jump
		jbe    _05d6c4_jump
		cmp    $0x000087,%ax
		je     _05dd60_jump
		jmp    _05df05_jump

	_05d430_jump:
		cmp    $0x000079,%ax
		jb     _05df05_jump
		cmp    $0x00007a,%ax
		jbe    _05dd60_jump
		jmp    _05df05_jump

	_05d449_jump:
		cmp    $0x00003b,%ax
		jb     _05d57f_jump
		jbe    _05dd60_jump
		cmp    $0x00005a,%ax
		jb     _05d4f1_jump
		cmp    $0x00005d,%ax
		jbe    _05dd60_jump
		cmp    $0x00006c,%ax
		jb     _05d4ad_jump
		jbe    _05dd60_jump
		cmp    $0x00006f,%ax
		jb     _05d49e_jump
		jbe    _05de4a_jump
		cmp    $0x000070,%ax
		jbe    _05dd60_jump
		cmp    $0x000073,%ax
		je     _05dd60_jump
		jmp    _05df05_jump

	_05d49e_jump:
		cmp    $0x00006d,%ax
		jbe    _05de63_jump
		jmp    _05dd60_jump

	_05d4ad_jump:
		cmp    $0x000061,%ax
		jb     _05d4d8_jump
		jbe    _05dd60_jump
		cmp    $0x000063,%ax
		jb     _05df05_jump
		jbe    _05dbde_jump
		cmp    $0x000066,%ax
		je     _05dd60_jump
		jmp    _05df05_jump

	_05d4d8_jump:
		cmp    $0x00005e,%ax
		jbe    _05dcd3_jump
		cmp    $0x000060,%ax
		je     _05d70e_jump
		jmp    _05df05_jump

	_05d4f1_jump:
		cmp    $0x000047,%ax
		jb     _05d54b_jump
		jbe    _05dd60_jump
		cmp    $0x000051,%ax
		jb     _05d522_jump
		jbe    _05dc7d_jump
		cmp    $0x000052,%ax
		jbe    _05de63_jump
		cmp    $0x000053,%ax
		je     _05dd60_jump
		jmp    _05df05_jump

	_05d522_jump:
		cmp    $0x000049,%ax
		jb     _05df05_jump
		jbe    _05dd60_jump
		cmp    $0x00004e,%ax
		jb     _05df05_jump
		cmp    $0x00004f,%ax
		jbe    _05dd60_jump
		jmp    _05df05_jump

	_05d54b_jump:
		cmp    $0x000040,%ax
		jb     _05d570_jump
		jbe    _05dc21_jump
		cmp    $0x000041,%ax
		jbe    _05dd55_jump
		cmp    $0x000042,%ax
		je     _05dd60_jump
		jmp    _05df05_jump

	_05d570_jump:
		cmp    $0x00003e,%ax
		je     _05dd60_jump
		jmp    _05df05_jump

	_05d57f_jump:
		cmp    $0x00001f,%ax
		jb     _05d627_jump
		jbe    _05de9d_jump
		cmp    $0x000026,%ax
		jb     _05d5e3_jump
		jbe    _05dd49_jump
		cmp    $0x00002e,%ax
		jb     _05d5ca_jump
		jbe    _05de3e_jump
		cmp    $0x000033,%ax
		jb     _05df05_jump
		cmp    $0x000034,%ax
		jbe    _05dd60_jump
		cmp    $0x000037,%ax
		je     _05de6c_jump
		jmp    _05df05_jump

	_05d5ca_jump:
		cmp    $0x000027,%ax
		jbe    _05dd43_jump
		cmp    $0x00002c,%ax
		je     _05dd60_jump
		jmp    _05df05_jump

	_05d5e3_jump:
		cmp    $0x000021,%ax
		jb     _05ded4_jump
		jbe    _05dd60_jump
		cmp    $0x000024,%ax
		jb     _05df05_jump
		jbe    _05dd60_jump
		mov    _0cec70_data,%dh
		mov    (%edi),%bl
		test   $0x000040,%dh
		sete   %dl
		and    $0x0000fb,%bl
		and    $0x000001,%dl
		mov    %bl,(%edi)
		shl    $0x000002,%dl
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%edi)
		jmp    _05df05_jump

	_05d627_jump:
		cmp    $0x00000d,%ax
		jb     _05d677_jump
		jbe    _05dd60_jump
		cmp    $0x000014,%ax
		jb     _05d658_jump
		jbe    _05dd7f_jump
		cmp    $0x000015,%ax
		jbe    _05dec5_jump
		cmp    $0x000017,%ax
		je     _05dca2_jump
		jmp    _05df05_jump

	_05d658_jump:
		cmp    $0x00000f,%ax
		jb     _05df05_jump
		jbe    _05dd60_jump
		cmp    $0x000013,%ax
		je     _05dc62_jump
		jmp    _05df05_jump

	_05d677_jump:
		cmp    $0x000009,%ax
		jb     _05d69c_jump
		jbe    _05dc6e_jump
		cmp    $0x00000a,%ax
		jbe    _05ddea_jump
		cmp    $0x00000b,%ax
		je     _05dd19_jump
		jmp    _05df05_jump

	_05d69c_jump:
		cmp    $0x000003,%ax
		je     _05dd67_jump
		jmp    _05df05_jump

	_05d6ab_jump:
		cmpb   $0x000002,0x00006e(%ecx)
		jne    _05df05_jump
		mov    0x000034(%ecx),%ax
		mov    %ax,_0ced12_data
		jmp    _05df05_jump

	_05d6c4_jump:
		testb  $0x000008,_0cec70_data
		jne    _05dd49_jump
		mov    _0cec79_data,%al
		mov    0x000081(%ecx),%dl
		shl    $0x000004,%al
		and    $0x0000fb,%dl
		shr    $0x000007,%al
		mov    %dl,0x000081(%ecx)
		and    $0x000001,%al
		mov    %dl,%dh
		shl    $0x000002,%al
		or     %al,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _05df05_jump

	_05d6ff_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0cec5c_data
		jmp    _05df05_jump

	_05d70e_jump:
		movw   $0x000000,0x000050(%ecx)
		movw   $0x000000,0x000056(%ecx)
		jmp    _05df05_jump

	_05d71f_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0ced14_data
		jmp    _05df05_jump

	_05d72e_jump:
		movw   $0x000000,0x000050(%ecx)
		mov    0x000034(%ecx),%ax
		mov    0x000081(%ecx),%bh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %ax,_0ced16_data
		mov    %bh,0x000081(%ecx)
		jmp    _05df05_jump

	_05d759_jump:
		mov    0x000034(%ecx),%ax
		movw   $0x000000,0x000050(%ecx)
		mov    %ax,_0ced1e_data
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%ecx)
		jmp    _05df05_jump

	_05d783_jump:
		movw   $0x000000,0x000050(%ecx)
		mov    0x000034(%ecx),%ax
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		mov    %ax,_0ced20_data
		and    $0x0000fb,%dh
		mov    0x000034(%ecx),%ax
		mov    %dh,0x000081(%ecx)
		mov    %ax,0x000008(%esp)
		jmp    _05df05_jump

	_05d7b7_jump:
		mov    0x000034(%ecx),%ax
		mov    %ax,_0ced0e_data
		mov    0x000034(%ecx),%ax
		mov    %ax,(%esp)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000050(%ecx)
		or     $0x000008,%ah
		movl   $0x000000,0x000024(%ecx)
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)
		jmp    _05df05_jump

	_05d7f5_jump:
		mov    %si,_0cecd6_data
		movw   $0x000000,0x000056(%ecx)
		jmp    _05df05_jump

	_05d807_jump:
		xor    %eax,%eax
		mov    0x000077(%ecx),%al
		sar    $0x000002,%eax
		mov    %al,0x000076(%ecx)
		mov    _0cecd4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05df05_jump
		mov    _0cecd4_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%edx
		add    %eax,%edx
		mov    0x000028(%ecx),%eax
		cmp    0x000028(%edx),%eax
		jge    _05d85e_jump
		mov    _0cecd4_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%edx
		mov    0x00002c(%edx,%eax,1),%eax
		add    $0x000070,%eax
		jmp    _05d879_jump

	_05d85e_jump:
		mov    _0cecd4_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%edx
		mov    0x00002c(%edx,%eax,1),%eax
		add    $0x000078,%eax

	_05d879_jump:
		mov    %eax,0x00002c(%ecx)
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		jmp    _05df02_jump

	_05d887_jump:
		mov    0x00001c(%ecx),%ebp
		test   %ebp,%ebp
		jne    _05df05_jump
		mov    0x000081(%ecx),%bh
		mov    %ebp,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %bh,0x000081(%ecx)
		jmp    _05df05_jump

	_05d8a9_jump:
		cmpb   $0x000000,0x000076(%ecx)
		je     _05d9cf_jump
		mov    _0cecfe_data,%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    _0cecd4_data,%bx
		mov    %edx,0x000028(%ecx)
		cmp    $0x000001,%bx
		jne    _05d8f5_jump
		testb  $0x000040,_0cec70_data
		je     _05d8e0_jump
		movb   $0x000001,0x000076(%ecx)

	_05d8e0_jump:
		mov    _0cecc8_data,%eax
		sar    $0x000010,%eax
		add    $0x0000c8,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _05d9a0_jump

	_05d8f5_jump:
		mov    0x000028(%ecx),%ax
		movb   $0x000000,0x000076(%ecx)
		mov    %ax,0x000050(%ecx)
		cmp    $0x000003,%bx
		jne    _05d915_jump
		cmpw   $0x000007,_0cecc0_data
		je     _05d99a_jump

	_05d915_jump:
		mov    _0cecc8_data,%edx
		sar    $0x000010,%edx
		lea    0x000078(%edx),%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0cecca_data,%ax
		add    $0x000078,%eax
		mov    _0cecd4_data,%bx
		mov    %ax,0x00003e(%ecx)
		cmp    $0x000005,%bx
		jne    _05d96f_jump
		cmpw   $0x000008,_0cecc0_data
		jne    _05d96f_jump
		mov    _0cc4a0_data,%eax
		mov    _0cc4a0_data,%bx
		add    %eax,%edx
		mov    _0cecca_data,%ax
		sub    $0x000050,%edx
		add    %ebx,%eax
		mov    %edx,0x00002c(%ecx)
		sub    $0x000050,%eax
		mov    %ax,0x00003e(%ecx)
		jmp    _05d9a0_jump

	_05d96f_jump:
		cmpw   $0x000004,_0cecd4_data
		jne    _05d9a0_jump
		mov    _0cecc8_data,%eax
		sar    $0x000010,%eax
		add    $0x000082,%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0cecca_data,%ax
		add    $0x000082,%eax
		mov    %ax,0x00003e(%ecx)
		jmp    _05d9a0_jump

	_05d99a_jump:
		movw   $0x000000,0x00003a(%ecx)

	_05d9a0_jump:
		movl   $0x000001,0x000024(%ecx)
		mov    %si,_0cecc6_data
		mov    0x000081(%ecx),%dl
		movw   $0x000000,0x000056(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01db8c_func
		jmp    _05df05_jump

	_05d9cf_jump:
		mov    _0cecc4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05db1b_jump
		cmpw   $0x000001,_0cecd4_data
		je     _05db1b_jump
		mov    _0cecc4_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    0x000081(%ecx),%dl
		movw   $0x000000,0x000042(%ecx)
		and    $0x0000f7,%dl
		mov    %dl,0x000081(%ecx)
		mov    _0cc1f0_data,%edx
		movw   $0x000000,0x000040(%ecx)
		addw   $0x000065,0x000050(%edx,%eax,1)
		mov    0x00004e(%edx,%eax,1),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0cecc4_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    0x00002c(%edx,%eax,1),%eax
		mov    %eax,0x00002c(%ecx)
		cmpw   $0x000003,_0cecd4_data
		jne    _05da56_jump
		cmpw   $0x000007,_0cecc0_data
		je     _05dac0_jump

	_05da56_jump:
		mov    _0cecca_data,%ax
		add    $0x000078,%eax
		mov    _0cecd4_data,%bx
		mov    %ax,0x00003e(%ecx)
		cmp    $0x000004,%bx
		jne    _05da81_jump
		mov    _0cecca_data,%ax
		add    $0x000082,%eax
		mov    %ax,0x00003e(%ecx)

	_05da81_jump:
		cmpw   $0x000005,_0cecd4_data
		jne    _05dace_jump
		cmpw   $0x000008,_0cecc0_data
		jne    _05dace_jump
		mov    _0cecc4_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%edx
		mov    _0cc1f0_data,%ebx
		mov    0x00002c(%edx,%ebx,1),%ebp
		mov    0x000032(%ecx),%edx
		add    %ebp,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x00002c(%ecx),%ax
		jmp    _05daca_jump

	_05dac0_jump:
		mov    0x00002c(%ecx),%ax
		movw   $0x000000,0x00003a(%ecx)

	_05daca_jump:
		mov    %ax,0x00003e(%ecx)

	_05dace_jump:
		mov    %ecx,%eax
		call   _01db8c_func
		mov    _0cecc4_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		orb    $0x000004,0x000081(%ecx)
		mov    _0cc1f0_data,%edx
		movl   $0x000001,0x000024(%ecx)
		mov    0x000076(%edx,%eax,1),%bl
		inc    %bl
		mov    %bl,0x000076(%edx,%eax,1)
		mov    %bl,0x00006c(%ecx)
		cmp    $0x000003,%bl
		jbe    _05db10_jump
		mov    %bl,%al
		sub    $0x000004,%al
		mov    %al,0x00006c(%ecx)

	_05db10_jump:
		movw   $0x000000,0x000056(%ecx)
		jmp    _05df05_jump

	_05db1b_jump:
		mov    0x000081(%ecx),%ah
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _05df05_jump

	_05db36_jump:
		mov    %si,_0cecd0_data
		jmp    _05df05_jump

	_05db42_jump:
		cmpb   $0x000000,0x000076(%ecx)
		jne    _05df05_jump
		mov    _0cdabc_data,%ax
		sub    $0x0000c8,%eax
		mov    %ax,0x00003c(%ecx)
		mov    0x00003a(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%ecx)
		mov    _0cdac0_data,%eax
		mov    $0x000009,%ebx
		sub    $0x000032,%eax
		xor    %edx,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01d374_func
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		movl   $0x000001,0x000024(%ecx)
		movw   $0x000000,0x000050(%ecx)
		movw   $0x000000,0x000052(%ecx)
		mov    0x000081(%ecx),%bl
		movb   $0x000000,0x00007f(%ecx)
		or     $0x000008,%bl
		mov    %si,_0cecbc_data
		mov    %bl,0x000081(%ecx)
		jmp    _05df05_jump

	_05dbbc_jump:
		mov    0x000081(%ecx),%bh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%bh
		mov    %si,_0ceccc_data
		mov    %bh,0x000081(%ecx)
		jmp    _05df05_jump

	_05dbde_jump:
		cmpb   $0x000000,_0cdf29_data
		je     _05dbf8_jump
		cmpw   $0x000000,_0cec4e_data
		jne    _05dbf8_jump
		andb   $0x0000fb,0x000081(%ecx)

	_05dbf8_jump:
		mov    0x00006d(%ecx),%al
		test   %al,%al
		jbe    _05dc08_jump
		cmp    $0x000005,%al
		je     _05dc18_jump
		jmp    _05df05_jump

	_05dc08_jump:
		movb   $0x000000,0x00007f(%ecx)
		movl   $0x000000,0x000024(%ecx)
		jmp    _05df05_jump

	_05dc18_jump:
		movb   $0x00001e,0x00007f(%ecx)
		jmp    _05df05_jump

	_05dc21_jump:
		mov    _0cecbc_data,%eax
		sar    $0x000010,%eax
		mov    %si,_0cda24_data(,%eax,2)
		mov    0x00003c(%ecx),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%ecx)
		mov    _0cecbe_data,%dx
		mov    0x00003a(%ecx),%eax
		inc    %edx
		sar    $0x000010,%eax
		mov    %dx,_0cecbe_data
		mov    %eax,0x000028(%ecx)
		cmp    $0x000032,%dx
		jl     _05dc62_jump
		mov    $_0c0c30_data,%eax
		call   _01f3a4_func

	_05dc62_jump:
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _05df05_jump

	_05dc6e_jump:
		mov    0x00000c(%ecx),%eax
		mov    0x000008(%eax),%eax
		movb   $0x000000,0x000016(%eax)
		jmp    _05df05_jump

	_05dc7d_jump:
		mov    _0ceec0_data,%al
		mov    _0ceec0_data,%dh
		and    $0x0000ff,%eax
		inc    %dh
		mov    %si,_0cda20_data(,%eax,2)
		mov    %dh,_0ceec0_data
		jmp    _05df05_jump

	_05dca2_jump:
		mov    0x000081(%ecx),%dl
		and    $0x0000fb,%dl
		mov    %si,_0cecdc_data
		mov    %dl,0x000081(%ecx)
		jmp    _05df05_jump

	_05dcbd_jump:
		andb   $0x0000fb,0x000081(%ecx)
		mov    0x000034(%ecx),%ax
		mov    %ax,_0ced04_data
		jmp    _05df05_jump

	_05dcd3_jump:
		mov    _0cdbc0_data,%al
		mov    %al,0x00006e(%ecx)
		mov    %si,_0cecd2_data
		mov    %al,0x00006c(%ecx)
		mov    _0cecd0_data,%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%edx
		add    %eax,%edx
		mov    %edx,_0cdb20_data
		mov    0x000081(%ecx),%dl
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%ecx)
		jmp    _05df05_jump

	_05dd19_jump:
		mov    0x000081(%ecx),%bh
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%bh
		mov    %si,_0cecc2_data
		mov    %bh,0x000081(%ecx)
		jmp    _05df05_jump

	_05dd38_jump:
		movw   $0x000028,0x000056(%ecx)
		jmp    _05df05_jump

	_05dd43_jump:
		movw   $0x000000,0x000056(%ecx)

	_05dd49_jump:
		andb   $0x0000fb,0x000081(%ecx)
		jmp    _05df05_jump

	_05dd55_jump:
		movw   $0x000000,0x000052(%ecx)
		jmp    _05df05_jump

	_05dd60_jump:
		movl   $0x000000,0x000024(%ecx)

	_05dd67_jump:
		mov    0x000081(%ecx),%bl
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%ecx)
		jmp    _05df05_jump

	_05dd7f_jump:
		movb   $0x000007,0x000078(%ecx)
		movb   $0x000000,0x00007f(%ecx)
		jmp    _05df05_jump

	_05dd8c_jump:
		movl   $0x000000,0x000024(%ecx)
		movb   $0x000007,0x000078(%ecx)
		mov    _0cda98_data,%eax
		mov    0x000081(%ecx),%dl
		mov    %eax,0x000004(%ecx)
		and    $0x0000fb,%dl
		mov    0x000034(%ecx),%ax
		mov    %dl,0x000081(%ecx)
		mov    %ax,_0ced02_data
		jmp    _05df05_jump

	_05ddbd_jump:
		movw   $0x000001,0x00004a(%ecx)
		movl   $0x000000,0x000024(%ecx)
		movb   $0x000007,0x000078(%ecx)
		mov    0x000081(%ecx),%bl
		mov    0x00004a(%ecx),%ax
		and    $0x0000fb,%bl
		mov    %ax,0x000056(%ecx)
		mov    %bl,0x000081(%ecx)
		jmp    _05df05_jump

	_05ddea_jump:
		cmp    $0x000001,%si
		jl     _05df05_jump
		movswl %si,%eax
		dec    %eax
		imul   $0x000084,%eax,%edx
		mov    _0cc1f0_data,%eax
		add    %edx,%eax
		orb    $0x000004,0x000081(%ecx)
		cmpw   $0x00000a,0x000060(%eax)
		jne    _05df05_jump
		mov    0x000028(%eax),%eax
		cmp    0x000028(%ecx),%eax
		jne    _05df05_jump
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _05df05_jump

	_05de3e_jump:
		mov    %ecx,%eax
		call   _0208ec_func
		jmp    _05df05_jump

	_05de4a_jump:
		testb  $0x000008,_0cec79_data
		je     _05de63_jump
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d364_func
		movb   $0x00000a,0x00006e(%ecx)

	_05de63_jump:
		movb   $0x000007,0x000078(%ecx)
		jmp    _05df05_jump

	_05de6c_jump:
		mov    _0cec79_data,%bh
		mov    0x000034(%ecx),%ax
		movb   $0x000007,0x000078(%ecx)
		mov    %ax,_0cecde_data
		test   $0x000008,%bh
		je     _05df05_jump
		mov    $0x000004,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movb   $0x000004,0x00006e(%ecx)
		call   _01d374_func
		jmp    _05df05_jump

	_05de9d_jump:
		mov    0x000081(%ecx),%ah
		movb   $0x000007,0x000078(%ecx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%ecx)
		jmp    _05df05_jump

	_05deb2_jump:
		movw   $0x00ffff,0x000050(%ecx)
		movw   $0x000000,0x000052(%ecx)
		mov    %si,_0cec50_data

	_05dec5_jump:
		movb   $0x000000,0x00007f(%ecx)
		jmp    _05df05_jump

	_05decb_jump:
		mov    %si,_0cec54_data
		jmp    _05df05_jump

	_05ded4_jump:
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x00003c(%ecx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%ecx)
		mov    0x00003c(%ecx),%ax
		movw   $0x000000,0x00003e(%ecx)
		cwtl   
		mov    %eax,0x000028(%ecx)
		mov    0x00003e(%ecx),%ax
		movl   $0x000000,0x000024(%ecx)
		cwtl   

	_05df02_jump:
		mov    %eax,0x00002c(%ecx)

	_05df05_jump:
		xor    %eax,%eax
		mov    _0ceea2_data,%al
		imul   $0x000014,%eax,%eax
		cmpb   $0x000006,_094a4d_data(%eax)
		jne    _05df38_jump
		cmpw   $0x00003a,0x000060(%ecx)
		jne    _05df38_jump
		andb   $0x0000fb,0x000081(%ecx)
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		movl   $0x000000,0x000024(%ecx)
		call   _071350_func

	_05df38_jump:
		cmpw   $0x000000,_0cec4e_data
		jne    _05df77_jump
		xor    %eax,%eax
		mov    0x000060(%ecx),%ax
		testb  $0x000002,_092265_data(,%eax,4)
		je     _05df77_jump
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		call   _071388_func
		test   %al,%al
		je     _05df77_jump
		mov    0x000081(%ecx),%dh
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%ecx)

	_05df77_jump:
		cmpw   $0x000000,_0cec4e_data
		je     _05df8f_jump
		cmpw   $0x0000a1,0x000060(%ecx)
		jne    _05df8f_jump
		incb   _0cee9b_data

	_05df8f_jump:
		mov    0x000004(%esp),%eax
		add    $0x000084,%edi
		inc    %esi
		add    $0x000084,%ecx
		cmp    %ax,%si
		jl     _05d150_jump

	_05dfa9_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05dfea_jump
		mov    -0x000002(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _05dfea_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		mov    (%esp),%ecx
		mov    %cx,0x000052(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    0x000008(%esp),%edx
		mov    %dx,0x000052(%eax)

	_05dfea_jump:
		cmpw   $0x000000,_0cec4e_data
		je     _05e008_jump
		xor    %eax,%eax
		mov    _0ce3a0_data,%al
		xor    %bh,%bh
		mov    %eax,_0ccd00_data
		mov    %bh,_0ce3a0_data

	_05e008_jump:
		call   _05cf78_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e018_func:
		push   %edx
		mov    %eax,%edx
		call   _05c74c_func
		orb    $0x000004,0x000081(%edx)
		mov    %edx,%eax
		movl   $0x000002,0x000030(%edx)
		call   _01db8c_func
		cmpl   $0x000000,0x000020(%edx)
		je     _05e03f_jump
		xor    %eax,%eax
		jmp    _05e044_jump

	_05e03f_jump:
		mov    $0x000078,%eax

	_05e044_jump:
		movl   $0x000000,0x000024(%edx)
		mov    %ax,0x00005e(%edx)
		pop    %edx
		ret    



_05e054_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cecc0_data,%si
		mov    _0cecd4_data,%di
		xor    %eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx

	_05e06d_jump:
		test   %eax,%eax
		jne    _05e08b_jump
		cmp    $0x000003,%si
		jne    _05e082_jump
		movw   $0x00ff88,_09267e_data(%ebx)
		jmp    _05e08b_jump

	_05e082_jump:
		xor    %ecx,%ecx
		mov    %cx,_09267e_data(%ebx)

	_05e08b_jump:
		cmp    $0x000011,%eax
		je     _05e09a_jump
		cmp    $0x000010,%eax
		je     _05e09a_jump
		cmp    $0x000018,%eax
		jne    _05e0b0_jump

	_05e09a_jump:
		cmp    $0x000001,%di
		jne    _05e0a9_jump
		orb    $0x000008,_092265_data(%edx)
		jmp    _05e0b0_jump

	_05e0a9_jump:
		andb   $0x0000f7,_092265_data(%edx)

	_05e0b0_jump:
		add    $0x000002,%ebx
		inc    %eax
		add    $0x000004,%edx
		cmp    $0x000106,%eax
		jl     _05e06d_jump
		mov    %di,_0cecd4_data
		mov    %si,_0cecc0_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05e0e0_switch:
		.long   _05e2ff_case
		.long   _05e2da_case
		.long   _05e2bc_case
		.long   _05e2c5_case
		.long   _05e2d4_case
		.long   _05e2e3_case
		.long   _05e2f2_case
		.long   _05e308_case
		.long   _05e340_case
		.long   _05e36a_case
		.long   _05e394_case
		.long   _05e3cc_case
		.long   _05e3f0_case
		.long   _05e41f_case
		.long   _05e450_case




_05e11c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %al,(%esp)
		mov    %edx,%ebx
		mov    _0e3cd8_data,%edx
		mov    0x000034(%edx),%ecx
		call   _010010_func
		test   %bx,%bx
		jl     _05e14d_jump
		mov    $0x000001,%eax
		movswl %bx,%ebx
		cmp    %ebx,%eax
		jge    _05e149_jump
		mov    %ebx,%eax

	_05e149_jump:
		neg    %eax
		jmp    _05e15d_jump

	_05e14d_jump:
		movswl %bx,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _05e15d_jump
		mov    %ebx,%eax

	_05e15d_jump:
		xor    %ebx,%ebx
		mov    %ax,0x000004(%edx)
		mov    (%esp),%bl
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _05e171_jump
		mov    %ebx,%eax

	_05e171_jump:
		mov    $0x00000f,%ebx
		cmp    %ebx,%eax
		jle    _05e17c_jump
		mov    %ebx,%eax

	_05e17c_jump:
		mov    %al,0x00001d(%edx)
		movl   $0x000000,0x000014(%ecx)
		movl   $0x000000,0x000054(%ecx)
		movl   $0x00013f,0x00003c(%ecx)
		movl   $0x0000c7,0x000068(%ecx)
		movl   $0x0000a0,0x000064(%ecx)
		movl   $0x000000,0x00006c(%ecx)
		mov    0x000014(%ecx),%eax
		mov    %eax,(%ecx)
		mov    0x000054(%ecx),%eax
		mov    %eax,0x000040(%ecx)
		mov    %eax,0x000004(%ecx)
		mov    0x00003c(%ecx),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x000068(%ecx),%eax
		mov    %eax,0x00002c(%ecx)
		mov    %eax,0x000018(%ecx)
		mov    0x000064(%ecx),%eax
		mov    %eax,0x000050(%ecx)
		mov    0x00006c(%ecx),%eax
		mov    %eax,0x000058(%ecx)
		mov    %eax,0x000044(%ecx)
		mov    %eax,0x000030(%ecx)
		mov    %eax,0x00001c(%ecx)
		mov    %eax,0x000008(%ecx)
		mov    0x000030(%edx),%ecx
		mov    0x000028(%edx),%eax
		movb   $0x000000,0x000026(%ecx)
		movb   $0x00009f,0x00002a(%ecx)
		movb   $0x000000,0x00002b(%ecx)
		movb   $0x0000c7,0x000029(%ecx)
		mov    %eax,(%ecx)
		mov    0x000026(%ecx),%al
		mov    %al,0x000024(%ecx)
		mov    0x00002a(%ecx),%al
		mov    %al,0x000028(%ecx)
		mov    0x00002b(%ecx),%al
		mov    %al,0x000025(%ecx)
		mov    0x000029(%ecx),%al
		mov    %al,0x000027(%ecx)
		mov    0x000030(%edx),%ecx
		add    $0x00002c,%ecx
		mov    0x00002c(%edx),%eax
		movb   $0x000000,0x000026(%ecx)
		mov    %eax,(%ecx)
		mov    0x000026(%ecx),%al
		mov    %al,0x000024(%ecx)
		movb   $0x00009f,0x00002a(%ecx)
		movb   $0x000000,0x00002b(%ecx)
		movb   $0x0000c7,0x000029(%ecx)
		mov    0x00002a(%ecx),%al
		mov    %al,0x000028(%ecx)
		mov    0x00002b(%ecx),%al
		mov    %al,0x000025(%ecx)
		mov    0x000029(%ecx),%al
		mov    %al,0x000027(%ecx)
		movw   $0x000000,(%edx)
		movw   $0x000200,0x000002(%edx)
		movw   $0x000000,0x00000a(%edx)
		movw   $0x000000,0x000010(%edx)
		movw   $0x000000,0x000016(%edx)
		movw   $0x0000a0,0x000018(%edx)
		mov    0x00000a(%edx),%ax
		mov    %ax,0x000008(%edx)
		mov    %ax,0x000006(%edx)
		mov    0x000010(%edx),%ax
		mov    %ax,0x00000e(%edx)
		mov    %ax,0x00000c(%edx)
		mov    0x000016(%edx),%ax
		mov    %ax,0x000014(%edx)
		mov    %ax,0x000012(%edx)
		mov    0x000002(%edx),%eax
		movw   $0x000064,0x00001a(%edx)
		sar    $0x000010,%eax
		movb   $0x000000,0x00001c(%edx)
		test   %eax,%eax
		jge    _05e29e_jump
		neg    %eax

	_05e29e_jump:
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    0x00001d(%edx),%al
		dec    %al
		cmp    $0x00000e,%al
		ja     _05e471_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_05e0e0_switch(,%eax,4)

	_05e2bc_case:
		mov    %cx,0x000016(%edx)
		jmp    _05e471_jump

	_05e2c5_case:
		mov    %cx,0x000014(%edx)
		add    %ecx,%ecx
		mov    %cx,0x000012(%edx)
		jmp    _05e471_jump

	_05e2d4_case:
		mov    %cx,0x000016(%edx)
		add    %ecx,%ecx

	_05e2da_case:
		mov    %cx,0x000014(%edx)
		jmp    _05e471_jump

	_05e2e3_case:
		mov    %cx,0x000016(%edx)
		add    %ecx,%ecx
		mov    %cx,0x000012(%edx)
		jmp    _05e471_jump

	_05e2f2_case:
		mov    %cx,0x000016(%edx)
		imul   $0x000003,%ecx,%eax
		add    %ecx,%ecx
		mov    %ax,0x000014(%edx)

	_05e2ff_case:
		mov    %cx,0x000012(%edx)
		jmp    _05e471_jump

	_05e308_case:
		movw   $0x000200,0x000006(%edx)
		movw   $0x0000c9,0x00001a(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %eax,%edi
		mov    %ax,0x000012(%edx)
		neg    %edi
		mov    0x000004(%edx),%ax
		mov    %di,0x000012(%edx)
		test   %ax,%ax
		jg     _05e471_jump
		movw   $0x000180,0x000006(%edx)
		jmp    _05e471_jump

	_05e340_case:
		movw   $0x0000c9,0x00001a(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%si
		mov    %ax,0x000012(%edx)
		test   %si,%si
		jg     _05e471_jump
		movw   $0x000080,0x000006(%edx)
		jmp    _05e471_jump

	_05e36a_case:
		movw   $0x00fffe,0x00001a(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%cx
		mov    %ax,0x000012(%edx)
		test   %cx,%cx
		jg     _05e471_jump
		movw   $0x000080,0x000006(%edx)
		jmp    _05e471_jump

	_05e394_case:
		movw   $0x000200,0x000006(%edx)
		movw   $0x00fffe,0x00001a(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %eax,%edi
		mov    %ax,0x000012(%edx)
		neg    %edi
		mov    0x000004(%edx),%ax
		mov    %di,0x000012(%edx)
		test   %ax,%ax
		jg     _05e471_jump
		movw   $0x000180,0x000006(%edx)
		jmp    _05e471_jump

	_05e3cc_case:
		movw   $0x00fffe,0x000018(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%si
		mov    %ax,0x000014(%edx)
		test   %si,%si
		jg     _05e471_jump
		jmp    _05e46b_jump

	_05e3f0_case:
		movw   $0x000200,0x000008(%edx)
		movw   $0x00fffe,0x000018(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %ax,0x000014(%edx)
		neg    %eax
		mov    0x000004(%edx),%cx
		mov    %ax,0x000014(%edx)
		test   %cx,%cx
		jg     _05e471_jump
		movw   $0x000180,0x000008(%edx)
		jmp    _05e471_jump

	_05e41f_case:
		movw   $0x000200,0x000008(%edx)
		movw   $0x000141,0x000018(%edx)
		mov    0x000004(%edx),%ax
		movb   $0x000001,0x00001c(%edx)
		mov    %eax,%esi
		mov    %ax,0x000014(%edx)
		neg    %esi
		mov    0x000004(%edx),%di
		mov    %si,0x000014(%edx)
		test   %di,%di
		jg     _05e471_jump
		movw   $0x000180,0x000008(%edx)
		jmp    _05e471_jump

	_05e450_case:
		movw   $0x000141,0x000018(%edx)
		movb   $0x000001,0x00001c(%edx)
		mov    0x000004(%edx),%ax
		mov    0x000004(%edx),%cx
		mov    %ax,0x000014(%edx)
		test   %cx,%cx
		jg     _05e471_jump

	_05e46b_jump:
		movw   $0x000080,0x000008(%edx)

	_05e471_jump:
		cmpb   $0x000001,0x00001c(%edx)
		jne    _05e481_jump
		add    $0x000080,%ebx
		mov    %bx,0x000002(%edx)

	_05e481_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_05e48c_case:
		push   %edx
		mov    _0e3cd8_data,%edx
		test   %edx,%edx
		je     _05e4c6_jump
		cmpl   $0x000000,0x000030(%edx)
		je     _05e4a5_jump
		lea    0x000030(%edx),%eax
		call   _07b7dc_func

	_05e4a5_jump:
		cmpl   $0x000000,0x000034(%edx)
		je     _05e4b3_jump
		lea    0x000034(%edx),%eax
		call   _07b7dc_func

	_05e4b3_jump:
		cmpl   $0x000000,_0e3cd8_data
		je     _05e4c6_jump
		mov    $_0e3cd8_data,%eax
		call   _07b7dc_func

	_05e4c6_jump:
		pop    %edx
		ret    



_05e4c8_func:
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %al,0x000004(%esp)
		mov    %dx,(%esp)
		mov    %ecx,%edi
		xor    %cl,%cl
		test   %ebx,%ebx
		je     _05e533_jump
		test   %edi,%edi
		je     _05e533_jump
		mov    $0x000038,%eax
		call   _07b7c4_func
		mov    %eax,%edx
		mov    %eax,_0e3cd8_data
		test   %eax,%eax
		je     _05e533_jump
		mov    %ebx,0x000020(%eax)
		mov    %eax,%esi
		mov    %edi,0x000024(%eax)
		mov    $0x000058,%eax
		call   _07b7c4_func
		mov    %eax,0x000030(%edx)
		test   %eax,%eax
		je     _05e533_jump
		mov    $0x000078,%eax
		call   _07b7c4_func
		mov    %eax,0x000034(%edx)
		test   %eax,%eax
		je     _05e533_jump
		mov    _0cc528_data,%eax
		mov    %eax,0x000028(%edx)
		lea    0x00c800(%eax),%ebx
		mov    $0x000001,%cl
		mov    %ebx,0x00002c(%edx)

	_05e533_jump:
		test   %cl,%cl
		je     _05e570_jump
		mov    $0x0000a0,%ebx
		mov    0x000028(%esi),%edx
		mov    0x000020(%esi),%eax
		call   _07a010_func
		mov    $0x0000a0,%ebx
		mov    0x000020(%esi),%eax
		mov    0x00002c(%esi),%edx
		add    $0x0000a0,%eax
		call   _07a010_func
		xor    %eax,%eax
		mov    -0x000002(%esp),%edx
		mov    0x000004(%esp),%al
		sar    $0x000010,%edx
		call   _05e11c_func
		jmp    _05e575_jump

	_05e570_jump:
		call   _05e48c_case

	_05e575_jump:
		mov    %cl,%al
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		ret    



_05e580_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000034,%esp
		mov    _0e3cd8_data,%ecx
		mov    0x00001c(%ecx),%ah
		mov    0x000034(%ecx),%edi
		test   %ah,%ah
		jne    _05e5c4_jump
		cmpw   $0x000000,0x000004(%ecx)
		jl     _05e5a5_jump
		mov    (%ecx),%ax
		jmp    _05e5ae_jump

	_05e5a5_jump:
		mov    0x000002(%ecx),%ax
		mov    (%ecx),%si
		sub    %esi,%eax

	_05e5ae_jump:
		mov    %ax,0x00002c(%esp)
		mov    0x00002c(%esp),%eax
		shl    $0x000002,%eax
		add    $0x000002,%ah
		mov    %ax,0x00002c(%esp)
		jmp    _05e5cb_jump

	_05e5c4_jump:
		movw   $0x000200,0x00002c(%esp)

	_05e5cb_jump:
		lea    0x000028(%esp),%ebx
		mov    0x000004(%ecx),%eax
		lea    0x000024(%esp),%edx
		sar    $0x000010,%eax
		call   _05bdcc_func
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000028(%esp),%ebx
		mov    %eax,0x000014(%esp)
		mov    0x000006(%ecx),%eax
		lea    0x000024(%esp),%edx
		sar    $0x000010,%eax
		mov    0x000026(%esp),%ebp
		call   _05bdcc_func
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00001c(%esp)
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000028(%esp),%ebx
		mov    %eax,0x000018(%esp)
		mov    0x000008(%ecx),%eax
		lea    0x000024(%esp),%edx
		sar    $0x000010,%eax
		call   _05bdcc_func
		mov    0x000022(%esp),%eax
		sar    $0x000010,%eax
		sar    $0x000010,%ebp
		mov    %eax,0x000020(%esp)
		mov    0x000026(%esp),%eax
		xor    %dl,%dl
		sar    $0x000010,%eax
		mov    %dl,0x000030(%esp)
		mov    %eax,0x000010(%esp)

	_05e648_jump:
		mov    0x000016(%ecx),%eax
		mov    (%edi),%edx
		sar    $0x000010,%eax
		mov    0x000018(%ecx),%esi
		sub    %eax,%edx
		sar    $0x000010,%esi
		mov    %edx,%eax
		mov    0x000004(%edi),%edx
		sub    %esi,%edx
		mov    %edx,%esi
		mov    0x00000a(%ecx),%dx
		mov    0x000008(%edi),%ebx
		test   %dx,%dx
		je     _05e6a3_jump
		mov    0x000010(%esp),%edx
		imul   %eax,%edx
		mov    %edx,0x000008(%esp)
		mov    0x000020(%esp),%edx
		imul   %esi,%edx
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		sub    0x000004(%esp),%edx
		mov    %edx,(%esp)
		imul   0x000020(%esp),%eax
		imul   0x000010(%esp),%esi
		add    %eax,%esi
		mov    (%esp),%eax
		sar    $0x000009,%esi
		sar    $0x000009,%eax

	_05e6a3_jump:
		cmpw   $0x000000,0x000008(%ecx)
		je     _05e6e0_jump
		mov    0x00001c(%esp),%edx
		imul   %ebx,%edx
		mov    %edx,0x000008(%esp)
		mov    0x000018(%esp),%edx
		imul   %eax,%edx
		mov    %edx,0x000004(%esp)
		mov    0x000008(%esp),%edx
		add    0x000004(%esp),%edx
		mov    %edx,(%esp)
		imul   0x000018(%esp),%ebx
		imul   0x00001c(%esp),%eax
		sub    %eax,%ebx
		mov    (%esp),%eax
		sar    $0x000009,%ebx
		sar    $0x000009,%eax

	_05e6e0_jump:
		cmpw   $0x000000,0x000006(%ecx)
		je     _05e725_jump
		mov    0x000014(%esp),%edx
		imul   %ebx,%edx
		imul   %ebp,%ebx
		mov    %edx,0x000004(%esp)
		mov    %esi,%edx
		imul   %ebp,%edx
		mov    %ebx,0x00000c(%esp)
		mov    0x000014(%esp),%ebx
		imul   %esi,%ebx
		mov    %edx,0x000008(%esp)
		mov    0x000004(%esp),%edx
		add    0x000008(%esp),%edx
		mov    %edx,(%esp)
		mov    0x00000c(%esp),%edx
		sub    %ebx,%edx
		mov    (%esp),%esi
		mov    %edx,%ebx
		sar    $0x000009,%esi
		sar    $0x000009,%ebx

	_05e725_jump:
		mov    0x00002a(%esp),%edx
		sar    $0x000010,%edx
		shl    $0x000009,%eax
		add    %edx,%ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000016(%ecx),%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,0x00000c(%edi)
		mov    %esi,%edx
		shl    $0x000009,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    0x000018(%ecx),%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    0x000030(%esp),%dh
		add    $0x000014,%edi
		inc    %dh
		mov    %eax,-0x000004(%edi)
		mov    %dh,0x000030(%esp)
		cmp    $0x000006,%dh
		jb     _05e648_jump
		mov    0x000012(%ecx),%ax
		mov    0x000006(%ecx),%di
		mov    0x000008(%ecx),%dx
		mov    0x00000a(%ecx),%bx
		add    %eax,%edi
		mov    0x000014(%ecx),%ax
		mov    %di,0x000006(%ecx)
		add    %eax,%edx
		mov    0x000016(%ecx),%ax
		mov    %dx,0x000008(%ecx)
		add    %eax,%ebx
		mov    %bx,0x00000a(%ecx)
		mov    0x000034(%ecx),%edx
		mov    0x000030(%ecx),%eax
		mov    0x00000c(%edx),%ebx
		mov    %ebx,0x000004(%eax)
		mov    0x000010(%edx),%ebx
		mov    %ebx,0x000008(%eax)
		mov    0x000020(%edx),%ebx
		mov    %ebx,0x00000c(%eax)
		mov    0x000024(%edx),%ebx
		mov    %ebx,0x000010(%eax)
		mov    0x000070(%edx),%ebx
		mov    %ebx,0x000014(%eax)
		mov    0x000074(%edx),%ebx
		mov    %ebx,0x000018(%eax)
		mov    0x00005c(%edx),%ebx
		mov    %ebx,0x00001c(%eax)
		mov    0x000060(%edx),%ebx
		mov    %ebx,0x000020(%eax)
		mov    0x000030(%ecx),%eax
		mov    0x00005c(%edx),%ebx
		mov    %ebx,0x000030(%eax)
		mov    0x000060(%edx),%ebx
		mov    %ebx,0x000034(%eax)
		mov    0x000070(%edx),%ebx
		mov    %ebx,0x000038(%eax)
		mov    0x000074(%edx),%ebx
		mov    %ebx,0x00003c(%eax)
		mov    0x000034(%edx),%ebx
		mov    %ebx,0x000040(%eax)
		mov    0x000038(%edx),%ebx
		mov    %ebx,0x000044(%eax)
		mov    0x000048(%edx),%ebx
		mov    %ebx,0x000048(%eax)
		add    $0x00002c,%eax
		mov    0x00004c(%edx),%edx
		mov    %edx,0x000020(%eax)
		mov    0x000002(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05e812_jump
		neg    %eax

	_05e812_jump:
		mov    (%ecx),%si
		add    %eax,%esi
		mov    0x000002(%ecx),%di
		mov    %si,(%ecx)
		cmp    %di,%si
		jbe    _05e828_jump
		movw   $0x000000,(%ecx)

	_05e828_jump:
		mov    (%ecx),%ax
		add    $0x000034,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e838_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    _0e3cd8_data,%ebx
		mov    0x000030(%ebx),%edx
		mov    0x000024(%ebx),%eax
		mov    %edx,%esi
		call   _010045_func
		lea    0x00002c(%edx),%esi
		mov    0x000024(%ebx),%eax
		call   _010045_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_05e860_func:
		push   %edx
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		mov    0x000018(%eax,%edx,4),%dx
		mov    %dx,0x000046(%eax)
		decb   0x00007c(%eax)
		pop    %edx
		ret    



_05e874_func:
		push   %edx
		cmp    $0x00007f,%al
		jbe    _05e888_jump
		mov    $0x000100,%edx
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %edx,%eax
		neg    %eax
		pop    %edx
		ret    

	_05e888_jump:
		xor    %ah,%ah
		pop    %edx
		ret    

	_05e88c_jump:
		xor    %al,%al
		ret    



_05e890_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000048(%eax)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_05e8b0_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000048(%eax)
		cmp    $0x000004,%dx
		ja     _05e8e4_jump
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		xor    %dh,%dh
		mov    %dx,0x000050(%eax)

	_05e8e4_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_05e8ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		sar    $0x000010,%ebx
		mov    0x000010(%eax),%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _05e874_func
		mov    0x000046(%edx),%cx
		mov    %ax,0x000048(%edx)
		inc    %ecx
		mov    %cx,0x000046(%edx)
		mov    0x000044(%edx),%ebx
		mov    0x000010(%edx),%eax
		sar    $0x000010,%ebx
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _05e874_func
		mov    %ax,0x000052(%edx)
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e938_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		sar    $0x000010,%ebx
		mov    0x000010(%eax),%eax
		mov    (%ebx,%eax,1),%al
		mov    0x000046(%edx),%cx
		xor    %ah,%ah
		inc    %ecx
		mov    %ax,0x000048(%edx)
		mov    %cx,0x000046(%edx)
		mov    0x000044(%edx),%eax
		mov    0x000010(%edx),%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _05e874_func
		mov    0x000046(%edx),%si
		mov    %ax,0x000056(%edx)
		inc    %esi
		mov    %si,0x000046(%edx)
		mov    0x000044(%edx),%eax
		mov    0x000010(%edx),%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _05e874_func
		mov    %ax,0x00004a(%edx)
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05e9a4_func:
		movw   $0x00ffff,0x000046(%eax)
		call   _05eee4_func
		mov    $0x000001,%al
		ret    

	_05e9b4_jump:
		incw   0x000046(%eax)
		xor    %al,%al
		ret    



_05e9bc_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%edx
		mov    0x000010(%eax),%ebx
		sar    $0x000010,%edx
		mov    (%edx,%ebx,1),%dl
		cmp    $0x000004,%dl
		ja     _05e9d7_jump
		incw   0x000046(%eax)

	_05e9d7_jump:
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_05e9dc_jump:
		addw   $0x000002,0x000046(%eax)
		xor    %al,%al
		ret    



_05e9e4_func:
		addw   $0x000003,0x000046(%eax)
		lea    0x000000(%eax),%eax

	_05e9ec_jump:
		xor    %al,%al
		ret    



_05e9f0_func:
		movw   $0x00ffff,0x000046(%eax)
		call   _05ef10_func
		nop



_05e9fc_func:
		mov    $0x000001,%al
		ret    



_05ea00_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		movb   $0x000001,0x000073(%eax)
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		movb   $0x000002,0x000070(%eax)
		call   _01d224_func
		dec    %eax
		mov    %ax,0x000048(%ebx)
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_05ea20_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    $0x000001,%edx
		call   _05ef84_func
		mov    0x000046(%ebx),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,2),%edx
		mov    0x000014(%ebx),%eax
		mov    (%edx,%eax,1),%ax
		mov    %ax,0x000046(%ebx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05ea4c_func:
		push   %ebx
		push   %edx
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05ea6c_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _05ea8f_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_05ea8f_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05ea94_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _05eab7_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_05eab7_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05eabc_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _05eadf_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_05eadf_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05eae4_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _05eb07_jump
		mov    0x000046(%eax),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,2),%ebx
		mov    0x000014(%eax),%edx
		mov    (%edx,%ebx,1),%dx
		mov    %dx,0x000046(%eax)

	_05eb07_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05eb0c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000046(%eax),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000050(%edx),%ebx
		shl    $0x000002,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %eax,0x000028(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05eb38_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000046(%eax),%ebx
		sar    $0x000010,%ebx
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000050(%edx),%ebx
		shl    $0x000002,%eax
		sar    $0x000010,%ebx
		add    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05eb64_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _05efb0_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    



_05eb7c_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _01d36c_func
		movw   $0x000000,0x000040(%ebx)
		mov    $0x000001,%al
		movw   $0x000000,0x000042(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_05eb9c_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _01d364_func
		movw   $0x000000,0x000040(%ebx)
		mov    $0x000001,%al
		movw   $0x000000,0x000042(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_05ebbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    0x000048(%eax),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _05ebd9_jump

	_05ebcc_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _05ef10_func
		cmp    %cx,%dx
		jl     _05ebcc_jump

	_05ebd9_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ebe0_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000048(%eax),%dl
		call   _05ef84_func
		mov    $0x000001,%al
		pop    %edx
		ret    



_05ebf0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%edx
		mov    $0x000001,%ebx
		call   _05ef84_func
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    0x000048(%ecx),%dl
		call   _05efb0_func
		xor    %al,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ec18_func:
		call   _05e860_func
		mov    $0x000001,%al
		ret    



_05ec20_func:
		push   %ebx
		push   %edx
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		mov    0x00001a(%eax,%edx,4),%bx
		dec    %ebx
		mov    %bx,0x00001a(%eax,%edx,4)
		test   %bx,%bx
		jle    _05ec4a_jump
		xor    %edx,%edx
		mov    0x00007c(%eax),%dl
		mov    0x000018(%eax,%edx,4),%dx
		mov    %dx,0x000046(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    

	_05ec4a_jump:
		decb   0x00007c(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05ec54_func:
		movw   $0x00ffff,0x000046(%eax)
		mov    $0x000001,%al
		ret    



_05ec60_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		je     _05ec7f_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _05efb0_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_05ec7f_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05ec84_func:
		push   %ebx
		push   %edx
		testb  $0x000002,0x000081(%eax)
		jne    _05eca3_jump
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    0x000048(%eax),%dl
		call   _05efb0_func
		xor    %al,%al
		pop    %edx
		pop    %ebx
		ret    

	_05eca3_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05eca8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		testb  $0x000002,0x000081(%eax)
		je     _05ecce_jump
		mov    0x000048(%ebx),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _05ecce_jump

	_05ecc1_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _05ef10_func
		cmp    %cx,%dx
		jl     _05ecc1_jump

	_05ecce_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ecd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		testb  $0x000002,0x000081(%eax)
		jne    _05ecfa_jump
		mov    0x000048(%ebx),%cx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _05ecfa_jump

	_05eced_jump:
		mov    %ebx,%eax
		inc    %edx
		call   _05ef10_func
		cmp    %cx,%dx
		jl     _05eced_jump

	_05ecfa_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ed00_func:
		push   %ebx
		push   %edx
		mov    0x000048(%eax),%dl
		and    $0x000001,%dl
		mov    0x000081(%eax),%dh
		and    $0x0000fd,%dh
		mov    %dh,0x000081(%eax)
		add    %dl,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,0x000081(%eax)
		mov    $0x000001,%al
		pop    %edx
		pop    %ebx
		ret    



_05ed28_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000048(%eax),%ax
		cmp    $0x000003,%ax
		jb     _05ed69_jump
		jbe    _05ee9e_jump
		cmp    $0x000046,%ax
		jb     _05ed5a_jump
		jbe    _05ed88_jump
		cmp    $0x000047,%ax
		jbe    _05eda4_jump
		cmp    $0x000048,%ax
		je     _05edd0_jump
		jmp    _05eedb_jump

	_05ed5a_jump:
		cmp    $0x000004,%ax
		je     _05eeb9_jump
		jmp    _05eedb_jump

	_05ed69_jump:
		cmp    $0x000001,%ax
		jb     _05ed7a_jump
		jbe    _05ee21_jump
		jmp    _05ee42_jump

	_05ed7a_jump:
		test   %ax,%ax
		je     _05edfd_jump
		jmp    _05eedb_jump

	_05ed88_jump:
		mov    %edx,%eax
		call   _01db50_func
		test   %ax,%ax
		je     _05eed4_jump
		orb    $0x000002,0x000081(%edx)
		jmp    _05eedb_jump

	_05eda4_jump:
		mov    0x000081(%edx),%cl
		test   $0x000001,%cl
		je     _05edbf_jump
		mov    %cl,%al
		or     $0x000002,%al
		mov    %al,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05edbf_jump:
		mov    %cl,%ch
		and    $0x0000fd,%ch
		mov    %ch,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05edd0_jump:
		mov    0x000081(%edx),%ah
		test   $0x000010,%ah
		jne    _05edec_jump
		mov    %ah,%bh
		or     $0x000002,%bh
		mov    %bh,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05edec_jump:
		mov    %ah,%bl
		and    $0x0000fd,%bl
		mov    %bl,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05edfd_jump:
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		mov    0x000050(%edx),%cl
		shr    $0x000007,%al
		cmp    %cl,%al
		jne    _05eed4_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ee21_jump:
		mov    0x00004e(%edx),%eax
		sar    $0x000010,%eax
		call   _0690e0_func
		test   %ax,%ax
		jne    _05eed4_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ee42_jump:
		mov    %edx,%eax
		mov    0x000081(%edx),%bl
		call   _01db14_func
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		shl    $0x000004,%bl
		mov    0x000050(%edx),%ah
		shr    $0x000007,%bl
		cmp    %ah,%al
		jne    _05ee71_jump
		orb    $0x000002,0x000081(%edx)
		jmp    _05ee78_jump

	_05ee71_jump:
		andb   $0x0000fd,0x000081(%edx)

	_05ee78_jump:
		mov    %bl,%al
		mov    0x000081(%edx),%ch
		and    $0x000001,%al
		and    $0x0000f7,%ch
		shl    $0x000003,%al
		mov    %ch,%ah
		mov    %ch,0x000081(%edx)
		or     %al,%ah
		mov    %ah,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05ee9e_jump:
		xor    %eax,%eax
		mov    0x000050(%edx),%cx
		mov    0x00006d(%edx),%al
		cmp    %cx,%ax
		jne    _05eed4_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05eeb9_jump:
		xor    %eax,%eax
		mov    0x000050(%edx),%bx
		mov    0x00006c(%edx),%al
		cmp    %bx,%ax
		jne    _05eed4_jump
		orb    $0x000002,0x000081(%edx)
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05eed4_jump:
		andb   $0x0000fd,0x000081(%edx)

	_05eedb_jump:
		mov    $0x000001,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05eee4_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		mov    0x000010(%eax),%edx
		sar    $0x000010,%ebx
		mov    (%edx,%ebx,1),%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %dl,0x000070(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		call   *_096cd8_data(,%edx,4)
		pop    %edx
		pop    %ebx
		ret    



_05ef10_func:
		push   %ebx
		push   %edx
		incw   0x000046(%eax)
		mov    0x000044(%eax),%ebx
		mov    0x000010(%eax),%edx
		sar    $0x000010,%ebx
		mov    (%edx,%ebx,1),%dl
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    %dl,0x000070(%eax)
		lea    0x000000(,%ebx,4),%edx
		sub    %ebx,%edx
		call   *_096cdc_data(,%edx,4)
		pop    %edx
		pop    %ebx
		ret    



_05ef3c_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		cmpl   $0x000000,0x000010(%eax)
		je     _05ef7d_jump
		testb  $0x000010,0x000081(%eax)
		je     _05ef81_jump
		mov    0x000048(%edx),%ax
		mov    %eax,%ebx
		dec    %ebx
		mov    %bx,0x000048(%edx)
		test   %ax,%ax
		jne    _05ef81_jump

	_05ef5f_jump:
		mov    %edx,%eax
		call   _05eee4_func
		xor    %eax,%eax
		mov    0x000070(%edx),%al
		imul   $0x00000c,%eax,%ebx
		mov    %edx,%eax
		call   *_096ce0_data(%ebx)
		test   %al,%al
		jne    _05ef5f_jump
		pop    %edx
		pop    %ebx
		ret    

	_05ef7d_jump:
		movb   $0x00001e,0x000070(%eax)

	_05ef81_jump:
		pop    %edx
		pop    %ebx
		ret    



_05ef84_func:
		push   %ebx
		push   %ecx
		mov    0x00007c(%eax),%dh
		xor    %ebx,%ebx
		inc    %dh
		mov    %dh,%bl
		shl    $0x000002,%ebx
		mov    %dh,0x00007c(%eax)
		lea    (%eax,%ebx,1),%ecx
		mov    0x000046(%eax),%bx
		mov    %bx,0x000018(%ecx)
		xor    %ebx,%ebx
		mov    0x00007c(%eax),%bl
		xor    %dh,%dh
		mov    %dx,0x00001a(%eax,%ebx,4)
		pop    %ecx
		pop    %ebx
		ret    



_05efb0_func:
		push   %ecx
		sub    $0x00000c,%esp
		mov    %eax,%ecx
		mov    %dl,0x000008(%esp)
		mov    %bl,(%esp)
		mov    0x000046(%eax),%bx
		mov    0x000081(%eax),%al
		shl    $0x000003,%al
		shr    $0x000007,%al
		mov    %al,0x000004(%esp)

	_05efd1_jump:
		mov    %ecx,%eax
		call   _05ef10_func
		cmp    0x000046(%ecx),%bx
		je     _05eff6_jump
		cmpb   $0x00000b,0x000070(%ecx)
		jne    _05efd1_jump
		mov    0x000044(%ecx),%eax
		mov    0x000010(%ecx),%edx
		sar    $0x000010,%eax
		mov    (%edx,%eax,1),%al
		cmp    0x000008(%esp),%al
		jne    _05efd1_jump

	_05eff6_jump:
		cmpb   $0x000000,(%esp)
		je     _05f045_jump
		cmp    0x000046(%ecx),%bx
		je     _05f049_jump
		mov    0x000081(%ecx),%bl
		movw   $0x000000,0x000048(%ecx)
		or     $0x000010,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _05ef3c_func
		mov    0x000004(%esp),%al
		mov    0x000081(%ecx),%bh
		and    $0x000001,%al
		and    $0x0000ef,%bh
		shl    $0x000004,%al
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    %ah,0x000081(%ecx)
		add    $0x00000c,%esp
		pop    %ecx
		ret    

	_05f045_jump:
		movb   $0x00001e,0x000070(%ecx)

	_05f049_jump:
		add    $0x00000c,%esp
		pop    %ecx
		ret    



_05f050_func:
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %dl,(%esp)
		mov    $0x000001,%edx
		call   _05ef84_func
		and    $0x0000ff,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		mov    (%esp),%dl
		call   _05efb0_func
		add    $0x000004,%esp
		pop    %ecx
		ret    



_05f080_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000081(%edx),%bl
		add    $0x000081,%eax
		test   $0x000008,%bl
		sete   %dl
		mov    (%eax),%bh
		and    $0x000001,%dl
		and    $0x0000f7,%bh
		shl    $0x000003,%dl
		mov    %bh,%cl
		mov    %bh,(%eax)
		or     %dl,%cl
		mov    %cl,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_05f200_switch:
		.long   _05f26a_case
		.long   _05f2a4_case
		.long   _05f2d9_case
		.long   _05f2bb_case
		.long   _05f2cf_case
		.long   _05f2d9_case

_05f218_switch:
		.long   _05f284_case
		.long   _05f2d9_case
		.long   _05f28c_case
		.long   _05f2d9_case
		.long   _05f2d9_case
		.long   _05f2d9_case
		.long   _05f2d9_case
		.long   _05f2d9_case
		.long   _05f2d9_case
		.long   _05f294_case
		.long   _05f29c_case




_05f244_func:
		push   %ebx
		push   %edx
		mov    %al,%dl
		mov    _0cecd4_data,%bx
		dec    %ebx
		xor    %eax,%eax
		cmp    $0x000005,%bx
		ja     _05f2d9_case
		and    $0x00ffff,%ebx
		jmp    *%cs:_05f200_switch(,%ebx,4)

	_05f26a_case:
		sub    $0x000002,%dl
		cmp    $0x00000a,%dl
		ja     _05f2d9_case
		and    $0x0000ff,%edx
		jmp    *%cs:_05f218_switch(,%edx,4)

	_05f284_case:
		mov    $0x000015,%eax
		pop    %edx
		pop    %ebx
		ret    

	_05f28c_case:
		mov    $0x000014,%eax
		pop    %edx
		pop    %ebx
		ret    

	_05f294_case:
		mov    $0x000012,%eax
		pop    %edx
		pop    %ebx
		ret    

	_05f29c_case:
		mov    $0x000013,%eax
		pop    %edx
		pop    %ebx
		ret    

	_05f2a4_case:
		cmp    $0x000004,%dl
		jb     _05f2d9_case
		jbe    _05f2b3_jump
		cmp    $0x000009,%dl
		je     _05f294_case
		pop    %edx
		pop    %ebx
		ret    

	_05f2b3_jump:
		mov    $0x000011,%eax
		pop    %edx
		pop    %ebx
		ret    

	_05f2bb_case:
		cmp    $0x000003,%dl
		jb     _05f2d9_case
		jbe    _05f2d4_jump
		cmp    $0x000009,%dl
		jne    _05f2d9_case
		mov    $0x00000d,%eax
		pop    %edx
		pop    %ebx
		ret    

	_05f2cf_case:
		cmp    $0x000002,%dl
		jne    _05f2d9_case

	_05f2d4_jump:
		mov    $0x00000c,%eax

	_05f2d9_case:
		pop    %edx
		pop    %ebx
		ret    



_05f2dc_func:
		push   %edx
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    



_05f2f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		call   _02f088_func
		mov    0x00006d(%esi),%ah
		test   %ah,%ah
		jne    _05f3c7_jump
		cmpb   $0x000004,0x00006c(%esi)
		jne    _05f3c7_jump
		mov    $0x000001,%dh
		mov    _0cc1f0_data,%ecx
		mov    %dh,_0cee85_data
		mov    _0cc1f4_data,%dx
		xor    %al,%al
		test   %dx,%dx
		jle    _05f3c7_jump

	_05f338_jump:
		cmpw   $0x000026,0x000060(%ecx)
		jne    _05f3b7_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _05f3b7_jump
		mov    0x000081(%ecx),%bl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _01f304_func
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d374_func
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		add    $0x000032,%eax
		movw   $0x00fffe,0x000042(%ecx)
		mov    $0x000003,%edx
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		movw   $0x000001,0x000040(%ecx)
		call   _01db8c_func
		mov    %esi,%eax
		call   _01d364_func
		movw   $0x00fff8,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f3b7_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _05f338_jump

	_05f3c7_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f3cc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x000000,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_05f3e4_func:
		push   %esi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %ebx,0x000004(%esp)
		mov    %ecx,(%esp)
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _05f4ec_jump

	_05f409_jump:
		cmpw   $0x000000,0x000060(%ecx)
		jne    _05f416_jump
		cmp    $0x000001,%dx
		je     _05f42b_jump

	_05f416_jump:
		cmpw   $0x000009,0x000060(%ecx)
		jne    _05f4dc_jump
		cmp    $0x000002,%dx
		jne    _05f4dc_jump

	_05f42b_jump:
		cmpw   $0x000000,0x00003c(%ecx)
		jg     _05f4dc_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _05f4dc_jump
		andb   $0x0000bb,0x000081(%ecx)
		mov    $0x000002,%ebx
		mov    0x000081(%ecx),%dl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		mov    %ebx,%edx
		movw   $0x000000,0x00005e(%ecx)
		call   _01d374_func
		movl   $0x000001,0x000030(%ecx)
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		mov    0x000028(%esi),%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %edx,0x000028(%ecx)
		mov    0x000069(%ecx),%al
		mov    0x00002c(%esi),%esi
		sar    $0x000002,%eax
		sub    %eax,%esi
		mov    %ecx,%eax
		mov    %esi,0x00002c(%ecx)
		call   _01db14_func
		mov    (%esp),%eax
		mov    0x000081(%ecx),%dh
		mov    %ax,0x000042(%ecx)
		test   $0x000008,%dh
		je     _05f4bb_jump
		mov    0x000004(%esp),%eax
		jmp    _05f4c5_jump

	_05f4bb_jump:
		mov    0x000004(%esp),%eax
		mov    %ax,0x000040(%ecx)
		neg    %eax

	_05f4c5_jump:
		mov    %ax,0x000040(%ecx)
		mov    %ecx,%eax
		call   _01db8c_func
		andb   $0x0000ef,0x000081(%ecx)
		add    $0x000008,%esp
		pop    %esi
		ret    

	_05f4dc_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %bx,%ax
		jl     _05f409_jump

	_05f4ec_jump:
		add    $0x000008,%esp
		pop    %esi
		ret    



_05f4f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		call   _02f088_func
		cmpb   $0x000000,_0cdbc2_data
		jne    _05f518_jump
		cmpb   $0x000000,_0cdbc4_data
		je     _05f5f3_jump

	_05f518_jump:
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		mov    %esp,%edx
		mov    %esi,%eax
		call   _0778f0_func
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _05f536_jump
		neg    %eax

	_05f536_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		cmp    %edx,%eax
		jg     _05f5e5_jump
		cmpw   $0x00000f,0x000008(%esp)
		jge    _05f5e5_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _05f55d_jump
		cmpb   $0x000000,0x00006c(%esi)
		je     _05f573_jump

	_05f55d_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _05f569_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _05f573_jump

	_05f569_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _05f60b_jump

	_05f573_jump:
		mov    _0cdb20_data,%eax
		mov    0x000081(%eax),%ah
		shl    $0x000004,%ah
		shr    $0x000007,%ah
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %al,%ah
		je     _05f60b_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		movw   $0x000000,0x000040(%esi)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%esi)
		call   _01d374_func
		andb   $0x0000ef,0x000081(%esi)
		mov    0x000081(%esi),%cl
		mov    $0x000001,%ebx
		test   $0x000008,%cl
		setne  %al
		and    $0x0000ff,%eax
		xor    %edx,%edx
		add    $0x000002,%eax
		mov    %al,%dl
		mov    %esi,%eax
		call   _05efb0_func
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_05f5e5_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _05f60b_jump
		cmpb   $0x000010,0x00006c(%esi)
		jne    _05f60b_jump
		jmp    _05f5ff_jump

	_05f5f3_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _05f60b_jump
		cmpb   $0x000010,0x00006c(%esi)
		jne    _05f60b_jump

	_05f5ff_jump:
		mov    $0x000011,%edx
		mov    %esi,%eax
		call   _01d364_func

	_05f60b_jump:
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f614_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    _0cdb20_data,%eax
		mov    0x000034(%eax),%eax
		mov    0x000034(%ecx),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    $0x00001e,%eax
		cmp    %edx,%eax
		jle    _05f669_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _05f669_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _05f669_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		movw   $0x000001,_0cebd4_data
		mov    _0cec79_data,%dh
		or     $0x000004,%dh
		movb   $0x000002,0x00006e(%ecx)
		mov    %dh,_0cec79_data

	_05f669_jump:
		pop    %ecx
		pop    %ebx
		ret    



_05f66c_func:
		push   %edx
		mov    0x000076(%eax),%dl
		cmp    $0x000002,%dl
		ja     _05f67c_jump
		dec    %dl
		mov    %dl,0x00006b(%eax)
		pop    %edx
		ret    

	_05f67c_jump:
		sub    $0x000003,%dl
		mov    %dl,0x00006b(%eax)
		pop    %edx
		ret    



_05f684_func:
		mov    0x000076(%eax),%dl
		cmp    $0x000002,%dl
		je     _05f691_jump
		cmp    $0x000004,%dl
		jne    _05f694_jump

	_05f691_jump:
		decb   0x000076(%eax)

	_05f694_jump:
		ret    



_05f698_func:
		push   %edx
		mov    %eax,%edx
		call   _02f088_func
		movw   $0x000000,0x000040(%edx)
		movw   $0x000000,0x000042(%edx)
		pop    %edx
		ret    



_05f6b0_func:
		push   %ebx
		mov    %eax,%ebx
		testb  $0x000080,_0cec70_data
		je     _05f6e3_jump
		cmpw   $0x000003,_0ceca4_data
		je     _05f6e3_jump
		mov    0x000032(%ebx),%edx
		mov    $0x0000c2,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		mov    _0cdb20_data,%eax
		mov    0x000034(%ebx),%dx
		mov    %dx,0x00004a(%eax)

	_05f6e3_jump:
		pop    %ebx
		ret    



_05f6e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		call   _0772d8_func
		mov    0x000032(%ebx),%edx
		mov    $0x0000c2,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		mov    _0cec70_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05f734_jump
		call   _056394_func
		mov    _0cec70_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,1)

	_05f734_jump:
		movw   $0x00012c,_095b50_data
		call   _0774e8_func
		mov    %ax,_0cec72_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _05f753_jump
		call   _056394_func

	_05f753_jump:
		mov    0x000081(%ebx),%ch
		mov    0x000032(%ebx),%eax
		and    $0x0000fb,%ch
		sar    $0x000010,%eax
		mov    %ch,0x000081(%ebx)
		call   _071350_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f774_func:
		push   %ebx
		cmp    $0x000004,%dx
		jne    _05f7b3_jump
		cmpb   $0x000005,0x00006c(%eax)
		jne    _05f7b3_jump
		mov    _0cdb20_data,%edx
		mov    0x000040(%edx),%bx
		test   %bx,%bx
		jl     _05f7a9_jump
		jle    _05f799_jump
		mov    $0x000009,%edx
		jmp    _05f7ae_jump

	_05f799_jump:
		testb  $0x000008,0x000081(%edx)
		je     _05f7a9_jump
		mov    $0x000009,%edx
		jmp    _05f7ae_jump

	_05f7a9_jump:
		mov    $0x000006,%edx

	_05f7ae_jump:
		call   _01d364_func

	_05f7b3_jump:
		pop    %ebx
		ret    



_05f7b8_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _0772d8_func
		mov    _0cec70_data,%ah
		mov    0x000081(%edx),%bl
		or     $0x000080,%ah
		and    $0x0000fb,%bl
		mov    %ah,_0cec70_data
		mov    %bl,0x000081(%edx)
		pop    %edx
		pop    %ebx
		ret    

_05f7e4_switch:
		.long   _05f89f_case
		.long   _05f8b5_case
		.long   _05f8a5_case
		.long   _05f8b5_case
		.long   _05f8a5_case
		.long   _05f8b5_case
		.long   _05f8b5_case
		.long   _05f8ab_case
		.long   _05f8b5_case
		.long   _05f8b1_case
		.long   _05f8b5_case
		.long   _05f8b1_case




_05f814_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmpb   $0x000007,0x00006c(%eax)
		jne    _05f868_jump
		testb  $0x000001,_0cec70_data
		jne    _05f836_jump
		mov    _0cdb20_data,%eax
		movb   $0x000008,0x00006e(%eax)
		jmp    _05f8b5_case

	_05f836_jump:
		mov    _0cdb20_data,%ebx
		mov    0x00006e(%ebx),%al
		cmp    $0x000003,%al
		jb     _05f84e_jump
		jbe    _05f85c_jump
		cmp    $0x000005,%al
		je     _05f862_jump
		jmp    _05f8b5_case

	_05f84e_jump:
		cmp    $0x000001,%al
		jne    _05f8b5_case
		movb   $0x000008,0x00006e(%ebx)
		jmp    _05f8b5_case

	_05f85c_jump:
		movb   $0x00000a,0x00006e(%ebx)
		jmp    _05f8b5_case

	_05f862_jump:
		movb   $0x00000c,0x00006e(%ebx)
		jmp    _05f8b5_case

	_05f868_jump:
		cmpb   $0x00000e,0x00006c(%edx)
		jne    _05f8b5_case
		testb  $0x000001,_0cec70_data
		jne    _05f882_jump
		mov    _0cdb20_data,%eax
		movb   $0x000001,0x00006e(%eax)
		jmp    _05f8b5_case

	_05f882_jump:
		mov    _0cdb20_data,%eax
		mov    0x00006e(%eax),%bl
		dec    %bl
		cmp    $0x00000b,%bl
		ja     _05f8b5_case
		and    $0x0000ff,%ebx
		jmp    *%cs:_05f7e4_switch(,%ebx,4)

	_05f89f_case:
		movb   $0x000003,0x00006e(%eax)
		jmp    _05f8b5_case

	_05f8a5_case:
		movb   $0x000005,0x00006e(%eax)
		jmp    _05f8b5_case

	_05f8ab_case:
		movb   $0x00000a,0x00006e(%eax)
		jmp    _05f8b5_case

	_05f8b1_case:
		movb   $0x00000c,0x00006e(%eax)

	_05f8b5_case:
		mov    %edx,%eax
		call   _0772d8_func
		mov    _0cec70_data,%al
		mov    0x000081(%edx),%ch
		or     $0x000001,%al
		and    $0x0000fb,%ch
		mov    %al,_0cec70_data
		mov    _0cdb20_data,%eax
		mov    %ch,0x000081(%edx)
		mov    0x00006e(%eax),%bl
		mov    %bl,0x00006c(%eax)
		mov    %bl,_0cdbc0_data
		mov    0x000032(%edx),%edx
		mov    $0x00000b,%eax
		sar    $0x000010,%edx
		mov    %bl,_0cdf23_data
		call   _06f35c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05f904_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		call   _0772d8_func
		mov    0x000076(%edx),%al
		mov    _0cdb0a_data,%ah
		add    %al,%ah
		mov    _0ce3a3_data,%bl
		mov    %ah,_0cdb0a_data
		cmp    %bl,%ah
		jbe    _05f92e_jump
		mov    %bl,_0cdb0a_data

	_05f92e_jump:
		andb   $0x0000fb,0x000081(%edx)
		mov    0x000032(%edx),%edx
		mov    $0x000008,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		pop    %edx
		pop    %ebx
		ret    



_05f948_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000032(%eax),%edx
		mov    $0x0000d5,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		mov    %ebx,%eax
		call   _0772d8_func
		mov    _0cec70_data,%ah
		mov    0x000081(%ebx),%dl
		or     $0x000008,%ah
		and    $0x0000fb,%dl
		mov    %ah,_0cec70_data
		mov    %dl,0x000081(%ebx)
		pop    %edx
		pop    %ebx
		ret    



_05f984_func:
		push   %edx
		orb    $0x000040,_0cec70_data
		mov    0x000081(%eax),%dh
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dh
		mov    %dh,0x000081(%eax)
		mov    0x000032(%eax),%edx
		mov    $0x00000a,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		pop    %edx
		ret    



_05f9b4_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000032(%eax),%edx
		mov    $0x00000e,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		mov    $0x000017,%edx
		mov    %ebx,%eax
		call   _01d364_func
		cmpw   $0x000000,_0cec4e_data
		je     _05fa14_jump
		mov    _0cee9b_data,%dl
		dec    %dl
		mov    %dl,_0cee9b_data
		mov    _0cee9a_data,%dh
		inc    %dh
		mov    %dh,_0cee9a_data
		mov    %dh,_0ce3a0_data
		test   %dl,%dl
		jne    _05fa1a_jump
		movw   $0x00ffe0,_0cec58_data
		call   _03b8a8_func
		jmp    _05fa1a_jump

	_05fa14_jump:
		incb   _0ce3a0_data

	_05fa1a_jump:
		cmpb   $0x000063,_0ce3a0_data
		jbe    _05fa6a_jump
		mov    %ebx,%eax
		call   _0772d8_func
		cmpw   $0x000000,_0cec4e_data
		je     _05fa3f_jump
		movw   $0x00ffff,_0cec72_data
		jmp    _05fa4a_jump

	_05fa3f_jump:
		call   _0774e8_func
		mov    %ax,_0cec72_data

	_05fa4a_jump:
		mov    _0cec70_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05fa5c_jump
		call   _056394_func

	_05fa5c_jump:
		movb   $0x000001,_0ceede_data
		subb   $0x000064,_0ce3a0_data

	_05fa6a_jump:
		mov    0x000038(%ebx),%ax
		add    $0x00000a,%eax
		movswl %ax,%edx
		mov    0x000036(%ebx),%ax
		add    $0x00000a,%eax
		cwtl   
		call   _0779d0_func
		pop    %edx
		pop    %ebx
		ret    



_05fa88_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _0772d8_func
		mov    _0cec88_data,%ebx
		sar    $0x000010,%ebx
		cmp    $0xffffffff,%ebx
		je     _05fac5_jump
		mov    $0x000004,%ah
		mov    %ah,_0cdb0a_data
		mov    %ah,_0ce3a3_data
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%ebx
		andb   $0x0000fb,0x000081(%ebx,%eax,1)

	_05fac5_jump:
		movw   $0x00012c,_095b50_data
		call   _0774e8_func
		mov    %ax,_0cec8a_data
		cwtl   
		cmp    $0xffffffff,%eax
		jne    _05faeb_jump
		mov    $0x000004,%al
		mov    %al,_0cdb0a_data
		mov    %al,_0ce3a3_data

	_05faeb_jump:
		andb   $0x0000fb,0x000081(%edx)
		mov    0x000032(%edx),%edx
		mov    $0x00000c,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		mov    _0ceca4_data,%cx
		cmp    $0x000003,%cx
		je     _05fb23_jump
		cmp    $0x000004,%cx
		je     _05fb23_jump
		mov    $0x000004,%bh
		mov    %bh,_0cdb0a_data
		mov    %bh,_0ce3a3_data

	_05fb23_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05fb28_func:
		push   %edx
		mov    0x000081(%eax),%dl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%dl
		mov    %dl,0x000081(%eax)
		call   _02e3c8_func
		pop    %edx
		ret    



_05fb48_func:
		push   %ebx
		push   %edx
		mov    0x000076(%eax),%dl
		cmp    0x000077(%eax),%dl
		jae    _05fb64_jump
		mov    %dl,%bl
		dec    %bl
		mov    %bl,0x000076(%eax)
		cmp    $0x000001,%bl
		jae    _05fb64_jump
		mov    0x000077(%eax),%dl
		mov    %dl,0x000076(%eax)

	_05fb64_jump:
		pop    %edx
		pop    %ebx
		ret    



_05fb68_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0cecca_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05fba1_jump
		mov    0x000076(%edx),%al
		cmp    0x000077(%edx),%al
		jne    _05fba1_jump
		mov    %edx,%eax
		call   _0772d8_func
		movw   $0x000000,0x000040(%edx)
		mov    0x000076(%edx),%bl
		movw   $0x000000,0x000042(%edx)
		dec    %bl
		mov    %bl,0x000076(%edx)
		call   _058efc_func

	_05fba1_jump:
		pop    %edx
		pop    %ebx
		ret    



_05fba4_func:
		call   _05fbb4_func
		xor    %ah,%ah
		mov    %ah,_0ceede_data
		ret    



_05fbb4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000002,_0cdb01_data
		jne    _05fc2d_jump
		cmpb   $0x000008,_0cdb00_data
		setne  %al
		and    $0x0000ff,%eax
		je     _05fc2d_jump
		cmpw   $0x000000,_0cdad4_data
		je     _05fbfc_jump
		cmpw   $0x000000,_0ceca2_data
		jne    _05fbfc_jump
		mov    _0cdad2_data,%eax
		mov    _0cdabc_data,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,_0cdabc_data

	_05fbfc_jump:
		mov    $0x000001,%cl
		mov    _0cdad6_data,%bx
		xor    %eax,%eax
		mov    %cl,_0ceebb_data
		mov    %ax,_0cdad4_data
		mov    %ax,_0ceca2_data
		test   %bx,%bx
		jge    _05ff5a_jump
		mov    %ax,_0cdad6_data
		jmp    _05ff5a_jump

	_05fc2d_jump:
		mov    _0cdb01_data,%dh
		test   %dh,%dh
		je     _05fc40_jump
		cmp    $0x000001,%dh
		jne    _05fdbd_jump

	_05fc40_jump:
		mov    _0cdae8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _05fdbd_jump
		cmpb   $0x000000,_0ceea6_data
		jne    _05fdbd_jump
		call   _06ece0_func
		cmpb   $0x000000,_0ceeb8_data
		je     _05fc82_jump
		mov    $0x000007,%ebx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		jmp    _05fc9e_jump

	_05fc82_jump:
		mov    $0x000017,%ebx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		xor    %bh,%bh
		mov    %bh,_0cdaff_data

	_05fc9e_jump:
		cmpb   $0x000000,_0cdbc2_data
		je     _05fccf_jump
		mov    _0cdb20_data,%eax
		mov    0x000081(%eax),%ch
		xor    %dl,%dl
		and    $0x0000fb,%ch
		mov    %dl,_0cdbc2_data
		mov    %ch,0x000081(%eax)
		call   _0772d8_func
		xor    %eax,%eax
		call   _064654_func

	_05fccf_jump:
		call   _077fb8_func
		cmpb   $0x000001,_0cee99_data
		jne    _05fd0b_jump
		mov    _0cec6e_data,%ax
		xor    %esi,%esi
		mov    %ax,_0cec70_data
		xor    %eax,%eax
		mov    %si,_0ceca2_data
		call   _069c78_func
		mov    $0x000001,%eax
		xor    %bl,%bl
		call   _069c78_func
		mov    %bl,_0cee99_data

	_05fd0b_jump:
		mov    _0cec70_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05fd44_jump
		movw   $0x00ffff,_0cec72_data
		call   _056394_func
		mov    _0cec70_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,4)

	_05fd44_jump:
		mov    _0cec88_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _05fd80_jump
		mov    $0xffffffff,%eax
		mov    $0x000004,%cl
		mov    %ax,_0cec8a_data
		mov    _0cc1f0_data,%eax
		mov    %cl,_0cdb0a_data
		mov    -0x000003(%eax),%dl
		sub    $0x000084,%eax
		and    $0x0000fb,%dl
		mov    %cl,_0ce3a3_data
		mov    %dl,0x000081(%eax)

	_05fd80_jump:
		xor    %edx,%edx
		mov    %dx,_0ceca2_data
		mov    %dx,_0cdad4_data
		cmpb   $0x000000,_0ceeb8_data
		jne    _05fdb3_jump
		cmpb   $0x000000,_0cee99_data
		jne    _05fdb3_jump
		cmpw   $0x000006,_0cecd4_data
		je     _05fdb3_jump
		movb   $0x000002,_0ceea6_data

	_05fdb3_jump:
		call   _01cb68_func
		jmp    _05ff5a_jump

	_05fdbd_jump:
		cmpb   $0x000003,_0cdb01_data
		jne    _05fdcf_jump
		cmpb   $0x000017,_0cdb00_data
		je     _05fde9_jump

	_05fdcf_jump:
		cmpb   $0x000003,_0cdb01_data
		jne    _05fee7_jump
		cmpb   $0x000007,_0cdb00_data
		jne    _05fee7_jump

	_05fde9_jump:
		mov    $_0cda94_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _05fe17_jump
		cmpb   $0x000000,_0ceeb8_data
		je     _05fe0a_jump
		cmpw   $0x000006,_0cecd4_data
		je     _05fe11_jump

	_05fe0a_jump:
		mov    $0x000001,%eax
		jmp    _05fe13_jump

	_05fe11_jump:
		xor    %eax,%eax

	_05fe13_jump:
		test   %eax,%eax
		jne    _05fe4a_jump

	_05fe17_jump:
		cmpb   $0x000000,_0ceeb8_data
		je     _05fe61_jump
		cmpw   $0x000006,_0cecd4_data
		jne    _05fe61_jump
		call   _036910_func
		test   %al,%al
		jne    _05fe4a_jump
		cmpb   $0x000000,_0cee89_data
		je     _05fe61_jump
		mov    $_0cda94_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _05fe61_jump

	_05fe4a_jump:
		call   _03b8d0_func
		xor    %dh,%dh
		call   _077c40_func
		mov    %dh,_0ceea6_data
		jmp    _05ff5a_jump

	_05fe61_jump:
		xor    %eax,%eax
		mov    _0cdadc_data,%edx
		mov    %ax,_0cdad4_data
		mov    %ax,_0cdad6_data
		mov    %ax,_0ceca2_data
		sar    $0x000010,%edx
		mov    %ax,_0cecbe_data
		cmp    $0xffffffff,%edx
		je     _05ff5a_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    _0cdadc_data,%ebx
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		sar    $0x000010,%ebx
		movw   $0x000000,0x000042(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cdadc_data,%ebx
		sar    $0x000010,%ebx
		movw   $0x000000,0x000040(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cdadc_data,%ebx
		sar    $0x000010,%ebx
		movb   $0x000000,0x000071(%edx,%eax,4)
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		movb   $0x000000,0x000072(%edx,%eax,4)
		jmp    _05ff5a_jump

	_05fee7_jump:
		cmpb   $0x000006,_0cdb01_data
		jne    _05ff5a_jump
		cmpb   $0x00000e,_0cdb00_data
		je     _05ff15_jump
		mov    $0x00000e,%edx
		mov    $_0cda94_data,%eax
		xor    %bl,%bl
		call   _01d364_func
		mov    %bl,_0cdaff_data
		call   _01cb68_func

	_05ff15_jump:
		mov    $0x000002,%bh
		mov    _0cdb00_data,%cl
		xor    %edx,%edx
		mov    %bh,_0ceea6_data
		mov    %dx,_0ceca2_data
		mov    %dx,_0cdad4_data
		mov    %dx,_0cdad6_data
		cmp    $0x00000e,%cl
		jne    _05ff5a_jump
		mov    $_0cda94_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _05ff5a_jump
		xor    %ch,%ch
		call   _077c40_func
		mov    %ch,_0ceea6_data

	_05ff5a_jump:
		cmpb   $0x000000,_0ceea6_data
		je     _05ff8b_jump
		xor    %esi,%esi
		mov    _0cecf4_data,%ax
		mov    %si,_0cecf6_data
		mov    %ax,_0ced00_data
		mov    _0cecf0_data,%ax
		mov    %si,_0cecf8_data
		mov    %ax,_0cecea_data

	_05ff8b_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_05ff90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpw   $0x000000,_0cec4e_data
		je     _05ffd3_jump
		mov    _0ccd00_data,%al
		xor    %edx,%edx
		xor    %edi,%edi
		mov    %al,_0ce3a0_data
		mov    %edx,_0ccd00_data
		mov    $_0cda94_data,%eax
		mov    %di,_0cece4_data
		call   _076124_func
		call   _06ece0_func
		call   _03b8d0_func
		jmp    _060045_jump

	_05ffd3_jump:
		cmpb   $0x000002,_0cdb01_data
		jne    _05ffe5_jump
		cmpb   $0x000008,_0cdb00_data
		je     _060045_jump

	_05ffe5_jump:
		cmpb   $0x0000ff,_0cdb0a_data
		je     _060045_jump
		cmpb   $0x000000,_0ceea6_data
		jne    _060045_jump
		call   _06ece0_func
		call   _03b8d0_func
		mov    $_0cdf2c_data,%eax
		mov    $0x000001,%ebx
		call   _070ea4_func
		mov    %bx,_0cecda_data
		cmpb   $0x000000,_0ceede_data
		je     _060045_jump
		decw   _0ce39a_data
		mov    _0ce398_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06003d_jump
		xor    %esi,%esi
		mov    %si,_0ce39a_data

	_06003d_jump:
		xor    %cl,%cl
		mov    %cl,_0ceede_data

	_060045_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06004c_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0600a2_jump
		cmpb   $0x000004,0x00006c(%eax)
		jne    _0600a2_jump
		call   _01cbd0_func
		test   %al,%al
		je     _0600a2_jump
		mov    _0cec79_data,%bl
		test   $0x000008,%bl
		jne    _0600a2_jump
		mov    _0cecdc_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		mov    $0x000001,%cl
		shl    $0x000005,%eax
		mov    %bl,%bh
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		or     $0x000008,%bh
		add    %edx,%eax
		mov    %bh,_0cec79_data
		call   _077e54_func
		mov    %cl,_0cee85_data

	_0600a2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0600a8_func:
		push   %edx
		cmpb   $0x000001,0x00006c(%eax)
		jne    _0600b9_jump
		mov    $0x000005,%edx
		call   _01d364_func

	_0600b9_jump:
		pop    %edx
		ret    



_0600bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		cmpb   $0x000000,0x000070(%eax)
		jne    _0600d5_jump
		andb   $0x0000f7,0x000081(%esi)
		jmp    _0600e2_jump

	_0600d5_jump:
		cmpb   $0x000001,0x000070(%esi)
		jne    _0600e2_jump
		orb    $0x000008,0x000081(%esi)

	_0600e2_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _060184_jump
		cmpb   $0x00000b,0x00006c(%esi)
		jne    _060184_jump
		cmpb   $0x000005,0x00006b(%esi)
		jb     _06016d_jump
		cmpb   $0x000000,0x00007f(%esi)
		jne    _06016d_jump
		mov    0x00007f(%esi),%dh
		mov    0x00007d(%esi),%bl
		inc    %dh
		inc    %bl
		mov    %dh,0x00007f(%esi)
		mov    %bl,0x00007d(%esi)
		cmp    $0x000002,%bl
		jbe    _06011b_jump
		movb   $0x000001,0x00007d(%esi)

	_06011b_jump:
		cmpb   $0x000001,0x000076(%esi)
		je     _06013c_jump
		mov    $0xffffffff,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    %esi,%eax
		mov    0x00007d(%esi),%dl
		call   _05f3e4_func
		jmp    _0602ae_jump

	_06013c_jump:
		mov    $0xfffffffe,%ecx
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _05f3e4_func
		mov    $0xffffffff,%ecx
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _05f3e4_func
		jmp    _0602ae_jump

	_06016d_jump:
		cmpb   $0x000002,0x00006b(%esi)
		jae    _0602ae_jump
		movb   $0x000000,0x00007f(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060184_jump:
		mov    0x00006d(%esi),%ch
		test   %ch,%ch
		jne    _06021c_jump
		cmpb   $0x000015,0x00006c(%esi)
		jne    _06021c_jump
		cmpb   $0x000005,0x00006b(%esi)
		jb     _060205_jump
		cmpb   $0x000000,0x00007f(%esi)
		jne    _060205_jump
		mov    %ch,(%esp)
		mov    0x00007f(%esi),%ch
		inc    %ch
		mov    $0xfffffffc,%edi
		mov    %ch,0x00007f(%esi)

	_0601b5_jump:
		xor    %edx,%edx
		mov    (%esp),%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		inc    %edx
		xor    %dh,%dh
		mov    $0x000003,%eax
		mov    %edx,%ebx
		sub    %edx,%eax
		neg    %ebx
		movswl %ax,%edx
		movswl %bx,%ecx
		mov    %esi,%eax
		movswl %di,%ebx
		inc    %edi
		call   _05f3e4_func
		movswl %di,%edx
		cmp    $0xfffffffe,%edx
		jne    _0601f2_jump
		mov    $0x000003,%edi

	_0601f2_jump:
		mov    (%esp),%ch
		inc    %ch
		mov    %ch,(%esp)
		cmp    $0x000004,%ch
		jae    _0602ae_jump
		jmp    _0601b5_jump

	_060205_jump:
		cmpb   $0x000002,0x00006b(%esi)
		jae    _0602ae_jump
		movb   $0x000000,0x00007f(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06021c_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _060279_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x000003,%dl
		jne    _060279_jump
		mov    0x00007f(%esi),%cl
		inc    %cl
		mov    %cl,0x00007f(%esi)
		cmp    0x00007d(%esi),%dl
		je     _060246_jump
		cmp    $0x0000fd,%cl
		jb     _060246_jump
		mov    %esi,%eax
		call   _076d10_func
		mov    %dl,0x00007d(%esi)

	_060246_jump:
		movw   $0x000000,0x000040(%esi)
		mov    0x00006b(%esi),%ah
		movw   $0x000000,0x000042(%esi)
		cmp    $0x00000c,%ah
		jbe    _060267_jump
		movb   $0x000003,0x00006b(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060267_jump:
		cmp    $0x000001,%ah
		ja     _0602ae_jump
		movb   $0x000000,0x00007f(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060279_jump:
		cmpb   $0x000001,0x00006d(%esi)
		jne    _0602ae_jump
		cmpw   $0x000000,0x000052(%esi)
		je     _060289_jump
		incb   0x00007f(%esi)

	_060289_jump:
		cmpb   $0x0000fe,0x00007f(%esi)
		jb     _0602a0_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _05efb0_func

	_0602a0_jump:
		mov    %esi,%eax
		call   _053c34_func
		mov    %esi,%eax
		call   _0252c0_func

	_0602ae_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0602b8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		test   %dx,%dx
		jne    _060307_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0602cd_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _0602d4_jump

	_0602cd_jump:
		mov    $0x000001,%eax
		jmp    _0602d6_jump

	_0602d4_jump:
		xor    %eax,%eax

	_0602d6_jump:
		test   %eax,%eax
		je     _060307_jump
		mov    $0x000001,%dh
		mov    %ecx,%eax
		mov    %dh,_0cdbc3_data
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _0602fb_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _060311_jump

	_0602fb_jump:
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		jmp    _060311_jump

	_060307_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_060311_jump:
		mov    %ecx,%eax
		call   _05efb0_func
		pop    %ecx
		pop    %ebx
		ret    



_06031c_func:
		movw   $0x000001,0x000052(%eax)
		ret    



_060324_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		testb  $0x000001,0x000007(%edx,%eax,8)
		je     _060389_jump
		mov    %ecx,%eax
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _060367_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		jmp    _060370_jump

	_060367_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_060370_jump:
		call   _01d374_func
		testb  $0x000008,0x000081(%ecx)
		jne    _060385_jump
		movb   $0x000000,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_060385_jump:
		movb   $0x000001,0x000070(%ecx)

	_060389_jump:
		pop    %ecx
		pop    %ebx
		ret    



_06038c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0603e8_jump
		mov    0x00006c(%ecx),%dl
		test   %dl,%dl
		je     _0603a3_jump
		cmp    $0x000002,%dl
		jne    _0603e8_jump

	_0603a3_jump:
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		call   _01d374_func
		mov    0x000081(%ecx),%bl
		and    $0x0000ef,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _01db14_func
		testb  $0x000008,0x000081(%ecx)
		je     _0603e4_jump
		movb   $0x000001,0x000070(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0603e4_jump:
		movb   $0x000000,0x000070(%ecx)

	_0603e8_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06043c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x0000ff,%dx
		je     _060466_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ecx),%dl
		testb  $0x000001,0x000007(%eax,%edx,8)
		je     _060532_jump

	_060466_jump:
		mov    %ecx,%eax
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _0604ad_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		mov    0x00002c(%ecx),%ebx
		mov    0x000081(%ecx),%dh
		sub    $0x000002,%ebx
		and    $0x0000ef,%dh
		mov    %ebx,0x00002c(%ecx)
		mov    %dh,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_0604ad_jump:
		mov    _0cdb20_data,%eax
		testb  $0x000008,0x000081(%eax)
		je     _0604d6_jump
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jle    _0604d2_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _0604f8_jump

	_0604d2_jump:
		jge    _0604ff_jump
		jmp    _0604ee_jump

	_0604d6_jump:
		mov    0x000040(%eax),%dx
		cmp    $0x000001,%dx
		jle    _0604ec_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _0604f8_jump

	_0604ec_jump:
		jge    _0604ff_jump

	_0604ee_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_0604f8_jump:
		mov    %ecx,%eax
		call   _05efb0_func

	_0604ff_jump:
		mov    $0x000002,%ebx
		mov    0x00002c(%ecx),%edx
		movw   $0x000000,0x000040(%ecx)
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    %ebx,%edx
		movw   $0x00fffc,0x000042(%ecx)
		call   _01d374_func
		mov    0x000032(%ecx),%edx
		mov    $0x00001c,%eax
		sar    $0x000010,%edx
		call   _06f35c_func

	_060532_jump:
		pop    %ecx
		pop    %ebx
		ret    



_060538_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000001,0x00006d(%eax)
		jne    _060559_jump
		cmpb   $0x00000b,0x00006c(%ecx)
		jne    _060559_jump
		mov    $0x00000e,%edx
		mov    %ecx,%eax
		call   _01d364_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060559_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _060565_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _060571_jump

	_060565_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _0605b2_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _0605b2_jump

	_060571_jump:
		mov    $0x00000b,%ebx
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d374_func
		mov    0x000081(%ecx),%ah
		and    $0x0000ef,%ah
		mov    $0x000001,%ebx
		mov    %ah,0x000081(%ecx)
		test   $0x000008,%ah
		setne  %dl
		and    $0x0000ff,%edx
		add    $0x000002,%edx
		and    $0x0000ff,%edx
		mov    %ecx,%eax
		call   _05efb0_func

	_0605b2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0605b8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		mov    _0cdb20_data,%ebx
		mov    0x000040(%ebx),%dx
		test   %dx,%dx
		jle    _0605dc_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _0605e8_jump

	_0605dc_jump:
		jge    _0605ef_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_0605e8_jump:
		mov    %ecx,%eax
		call   _05efb0_func

	_0605ef_jump:
		mov    0x00002c(%ecx),%edx
		movw   $0x000000,0x000040(%ecx)
		sub    $0x000002,%edx
		mov    0x000076(%ecx),%ah
		mov    %edx,0x00002c(%ecx)
		test   %ah,%ah
		je     _06065b_jump
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%ecx),%edx
		add    %ebx,%edx
		movw   $0x00fffc,0x000042(%ecx)
		xor    %ebx,%ebx
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%bl
		testb  $0x000040,0x000007(%edx,%ebx,8)
		je     _060631_jump
		mov    $0x00000a,%ebx
		jmp    _060636_jump

	_060631_jump:
		mov    $0x000002,%ebx

	_060636_jump:
		mov    $0x000002,%edx
		and    $0x0000ff,%ebx
		mov    %ecx,%eax
		call   _01d374_func
		mov    0x000032(%ecx),%edx
		mov    $0x00001c,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		pop    %ecx
		pop    %ebx
		ret    

	_06065b_jump:
		xor    %edx,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		movw   $0x00fff8,0x000042(%ecx)
		lea    0x000000(,%edx,8),%eax
		mov    (%ebx),%edx
		testb  $0x000040,0x000007(%edx,%eax,1)
		je     _06068a_jump
		mov    $0x000006,%ebx
		jmp    _06068f_jump

	_06068a_jump:
		mov    $0x000003,%ebx

	_06068f_jump:
		and    $0x0000ff,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    



_0606a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000081(%eax),%ah
		shl    $0x000004,%ah
		shr    $0x000007,%ah
		mov    _0cdb15_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %ah,%al
		je     _060732_jump
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _0606d4_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _0606e0_jump

	_0606d4_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _060732_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _060732_jump

	_0606e0_jump:
		cmpb   $0x000000,_0cdb01_data
		jne    _060732_jump
		cmpb   $0x000012,_0cdb00_data
		jne    _060732_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		call   _01d374_func
		testb  $0x000008,0x000081(%ecx)
		je     _060721_jump
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		jmp    _06072b_jump

	_060721_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx

	_06072b_jump:
		mov    %ecx,%eax
		call   _05efb0_func

	_060732_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060738_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000070(%eax),%al
		cmp    $0x000002,%al
		jb     _0607a4_jump
		jbe    _06074e_jump
		cmp    $0x00001e,%al
		jne    _0607c6_jump

	_06074e_jump:
		mov    %edx,%eax
		call   _053c34_func
		mov    %edx,%eax
		call   _0252c0_func
		cmpb   $0x000000,0x00006d(%edx)
		jne    _0607c6_jump
		cmpb   $0x000002,0x00006c(%edx)
		jne    _0607c6_jump
		mov    0x000081(%edx),%al
		shl    $0x000004,%al
		mov    0x000076(%edx),%bh
		shr    $0x000007,%al
		cmp    %bh,%al
		je     _0607c6_jump
		lea    0x000081(%edx),%eax
		test   $0x000001,%bh
		setne  %dl
		and    $0x0000ff,%edx
		mov    (%eax),%ch
		and    $0x000001,%dl
		and    $0x0000f7,%ch
		shl    $0x000003,%dl
		mov    %ch,%dh
		mov    %ch,(%eax)
		or     %dl,%dh
		mov    %dh,(%eax)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0607a4_jump:
		test   %al,%al
		jne    _0607b1_jump
		andb   $0x0000f7,0x000081(%edx)
		jmp    _0607b8_jump

	_0607b1_jump:
		orb    $0x000008,0x000081(%edx)

	_0607b8_jump:
		mov    %edx,%eax
		call   _053c34_func
		mov    %edx,%eax
		call   _0252c0_func

	_0607c6_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0607cc_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0607dc_jump
		cmpb   $0x000002,0x00006c(%ecx)
		je     _060825_jump

	_0607dc_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _01d374_func
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		jne    _060809_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		or     $0x000008,%bh
		mov    $0x000003,%edx
		mov    %bh,0x000081(%ecx)
		jmp    _06081b_jump

	_060809_jump:
		mov    %dh,%bl
		mov    %ecx,%eax
		and    $0x0000f7,%bl
		mov    $0x000002,%edx
		mov    %bl,0x000081(%ecx)

	_06081b_jump:
		mov    $0x000001,%ebx
		call   _05efb0_func

	_060825_jump:
		pop    %ecx
		pop    %ebx
		ret    



_060828_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _06086d_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _06086d_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		testb  $0x000008,0x000081(%ecx)
		je     _06085c_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		jmp    _060866_jump

	_06085c_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx

	_060866_jump:
		mov    %ecx,%eax
		call   _05efb0_func

	_06086d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060874_func:
		push   %ebx
		push   %edx
		cmpb   $0x000004,0x00006c(%eax)
		jne    _06088b_jump
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		call   _05efb0_func

	_06088b_jump:
		pop    %edx
		pop    %ebx
		ret    



_060890_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02f088_func
		cmpw   $0x000000,_0cebd4_data
		je     _060922_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0608c2_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _0608c2_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _05efb0_func

	_0608c2_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _0608f5_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _0608f5_jump
		mov    0x000004(%ecx),%eax
		mov    0x000016(%eax),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jl     _0608f5_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05efb0_func

	_0608f5_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _060930_jump
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _060930_jump
		mov    0x000004(%ecx),%eax
		mov    0x000022(%eax),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jl     _060930_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		jmp    _06092b_jump

	_060922_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_06092b_jump:
		call   _05efb0_func

	_060930_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060934_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpw   $0x000003,_0cecc0_data
		jne    _060973_jump
		mov    _0cecca_data,%ax
		xor    %ebx,%ebx
		mov    %ax,_0cecb6_data
		mov    %ax,_0cecac_data
		mov    %ax,_0cecea_data
		mov    %bx,_0cecb8_data
		mov    %bx,_0cecaa_data
		mov    %bx,_0ced00_data

	_060973_jump:
		cmpw   $0x000000,_0cebcc_data
		je     _0609eb_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _060996_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _060996_jump
		movw   $0x000001,_0cebc6_data

	_060996_jump:
		mov    0x00006d(%ecx),%dh
		test   %dh,%dh
		jne    _0609eb_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _0609eb_jump
		cmpw   $0x000000,_0cebc6_data
		je     _0609c8_jump
		mov    _0cec79_data,%bh
		xor    %esi,%esi
		mov    %dh,0x00007f(%ecx)
		or     $0x000002,%bh
		mov    %si,_0cebc6_data
		mov    %bh,_0cec79_data

	_0609c8_jump:
		mov    0x00007f(%ecx),%al
		inc    %al
		mov    %al,0x00007f(%ecx)
		cmp    $0x000064,%al
		jne    _0609db_jump
		call   _034db0_func
		jmp    _0609eb_jump

	_0609db_jump:
		cmp    $0x000065,%al
		jne    _0609eb_jump
		call   _077c40_func
		orb    $0x000004,_0cec71_data

	_0609eb_jump:
		cmpw   $0x000008,_0cecc0_data
		jne    _060a28_jump
		cmpw   $0x000000,_0cebd4_data
		je     _060a21_jump
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _060a28_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _060a28_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060a21_jump:
		andb   $0x0000fb,0x000081(%ecx)

	_060a28_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060a30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _060a72_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _060a72_jump
		cmpw   $0x000000,_0cebcc_data
		jne    _060a72_jump
		mov    $0x000002,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %bx,_0cebc6_data
		mov    $0x000001,%ebx
		mov    $0x000001,%esi
		call   _05efb0_func
		mov    %si,_0cebcc_data

	_060a72_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _060a8f_jump
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _060a8f_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _05efb0_func

	_060a8f_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060a94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		add    %ebx,%eax
		sub    $0x00000c,%eax
		cwtl   
		call   _077d9c_func
		mov    0x000054(%edx),%ebx
		cwtl   
		sar    $0x000010,%ebx
		sub    $0x00002b,%eax
		add    %ebx,%eax
		mov    0x000034(%edx),%cx
		mov    %eax,0x00002c(%edx)
		cmp    _0cdade_data,%cx
		jne    _060ad2_jump
		movw   $0x00000d,0x000050(%edx)
		jmp    _060ad8_jump

	_060ad2_jump:
		movw   $0x000000,0x000050(%edx)

	_060ad8_jump:
		mov    0x000056(%edx),%ax
		mov    0x000050(%edx),%si
		cmp    %si,%ax
		jge    _060af1_jump
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,0x000056(%edx)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060af1_jump:
		jle    _060af8_jump
		dec    %eax
		mov    %ax,0x000056(%edx)

	_060af8_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060b00_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		call   _02f088_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		cmpb   $0x000004,0x00006a(%esi)
		jne    _060b54_jump
		cmpb   $0x00000a,0x00006b(%esi)
		jne    _060b54_jump
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _060b54_jump
		mov    0x000032(%esi),%edx
		mov    $0x000028,%eax
		sar    $0x000010,%edx
		call   _06f35c_func

	_060b54_jump:
		mov    0x00006c(%esi),%bl
		cmp    $0x000001,%bl
		jne    _060b72_jump
		mov    0x00007f(%esi),%dh
		add    %bl,%dh
		mov    %dh,0x00007f(%esi)
		jne    _060c99_jump
		mov    %bl,0x00007f(%esi)
		jmp    _060c99_jump

	_060b72_jump:
		cmpb   $0x000000,0x00007f(%esi)
		je     _060bba_jump
		mov    $0x000001,%ecx
		mov    $0x000001,%ebx
		mov    $_0cdcd0_data,%edx
		xor    %edi,%edi
		mov    %cx,_0ceb8a_data
		mov    %di,_0ceb88_data
		mov    %ebx,_0cdab8_data
		call   _05852c_func
		mov    %esi,%eax
		call   _070c6c_func
		mov    %ebx,%eax
		call   _057410_func
		movb   $0x000000,0x00007f(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060bba_jump:
		testb  $0x000002,_0cec71_data
		jne    _060c99_jump
		testb  $0x000001,0x000081(%esi)
		jne    _060c99_jump
		mov    %esi,%eax
		call   _01db50_func
		test   %ax,%ax
		je     _060c99_jump
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _060c99_jump
		cmpw   $0x000000,_0ceca2_data
		jne    _060c99_jump
		cmpb   $0x000000,_0cdb01_data
		jne    _060c99_jump
		cmpb   $0x000000,_0cdb00_data
		jne    _060c99_jump
		mov    _0cecb8_data,%edx
		sar    $0x000010,%edx
		push   %edx
		mov    _0cec9e_data,%edx
		mov    $0x00000f,%ecx
		sar    $0x000010,%edx
		mov    0x000028(%esi),%ax
		push   %edx
		mov    _0cec9c_data,%edx
		mov    0x00002c(%esi),%bx
		sar    $0x000010,%edx
		add    $0x00002a,%eax
		push   %edx
		mov    _0cec9a_data,%edx
		add    $0x000030,%ebx
		sar    $0x000010,%edx
		cwtl   
		push   %edx
		movswl %bx,%edx
		mov    $0x000005,%ebx
		call   _02ae60_func
		test   %ax,%ax
		je     _060c99_jump
		mov    %esi,%eax
		mov    0x000081(%esi),%dl
		xor    %ebx,%ebx
		or     $0x000001,%dl
		mov    %bx,_0cdad4_data
		mov    %dl,0x000081(%esi)
		xor    %edx,%edx
		mov    $0x000001,%ebx
		mov    %edx,_0cdab8_data
		call   _05efb0_func

	_060c99_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060ca0_func:
		jmp    _06ecd0_jump



_060ca8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    0x000073(%eax),%eax
		sar    $0x000018,%eax
		cmp    $0x000000,%eax
		je     _060cc5_jump
		mov    $0x000001,%eax
		jg     _060cc5_jump
		neg    %eax

	_060cc5_jump:
		mov    %ax,0x000004(%esp)
		mov    0x000034(%esi),%dx
		cmp    _0cdade_data,%dx
		je     _060cff_jump
		cmpb   $0x000000,_0cee47_data
		jne    _060d92_jump
		mov    0x000076(%esi),%bl
		test   %bl,%bl
		je     _060d92_jump
		mov    0x000004(%esp),%al
		mov    %bl,%bh
		sub    %al,%bh
		mov    %bh,0x000076(%esi)
		jmp    _060d92_jump

	_060cff_jump:
		cmpb   $0x000000,_0cee45_data
		jne    _060d92_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		xor    %eax,%eax
		mov    0x00000c(%esp),%ebx
		mov    0x000074(%esi),%al
		xor    %edx,%edx
		add    %eax,%ebx
		mov    _0cdafc_data,%dl
		mov    %ebx,0x00000c(%esp)
		add    _0cdabc_data,%edx
		mov    0x00000e(%esp),%ebx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    %ebx
		add    %ebx,%eax
		sub    %eax,%edx
		mov    $0x000003,%cl
		mov    %edx,%eax
		mov    %edx,(%esp)
		test   %ax,%ax
		js     _060d6a_jump
		sar    %cl,%ax
		jmp    _060d73_jump

	_060d6a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_060d73_jump:
		sub    %al,0x000076(%esi)
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _060d82_jump
		neg    %eax

	_060d82_jump:
		cmp    $0x000010,%eax
		jl     _060d92_jump
		mov    0x000004(%esp),%al
		mov    $0x00000f,%ah
		mul    %ah
		mov    %al,0x000076(%esi)

	_060d92_jump:
		add    $0x000014,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_060da0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,%edi
		call   _01d380_func
		mov    %eax,%edx
		mov    %eax,%esi
		mov    %edi,%eax
		call   _01d4b0_func
		movswl %dx,%edx
		mov    %eax,%ecx
		movswl %ax,%ebx
		mov    %edi,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _060e96_jump
		mov    0x00006c(%edi),%ah
		cmp    $0x00000d,%ah
		je     _060df0_jump
		cmp    $0x00001c,%ah
		je     _060df0_jump
		cmp    $0x00000e,%ah
		je     _060df0_jump
		cmp    $0x00001d,%ah
		je     _060df0_jump
		mov    $0x000001,%edx
		jmp    _060df2_jump

	_060df0_jump:
		xor    %edx,%edx

	_060df2_jump:
		test   %edx,%edx
		je     _060e96_jump
		mov    0x000042(%edi),%dx
		test   %dx,%dx
		jle    _060e39_jump
		mov    %edx,%eax
		dec    %eax
		mov    0x000060(%edi),%dx
		mov    %ax,0x000042(%edi)
		cmp    $0x0000ae,%dx
		je     _060e1c_jump
		cmp    $0x0000e1,%dx
		jne    _060e24_jump

	_060e1c_jump:
		movw   $0x00ffdc,0x000040(%edi)
		jmp    _060e2a_jump

	_060e24_jump:
		movw   $0x000024,0x000040(%edi)

	_060e2a_jump:
		movswl %cx,%ebx
		movswl %si,%edx
		mov    %edi,%eax
		call   _02ec10_func
		jmp    _060e96_jump

	_060e39_jump:
		movswl %cx,%ebx
		movswl %si,%edx
		mov    %edi,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _060e96_jump
		mov    0x000060(%edi),%bx
		movw   $0x00ffff,0x000042(%edi)
		cmp    $0x0000ae,%bx
		je     _060e63_jump
		cmp    $0x0000e1,%bx
		jne    _060e6b_jump

	_060e63_jump:
		movw   $0x00fff0,0x000040(%edi)
		jmp    _060e71_jump

	_060e6b_jump:
		movw   $0x000010,0x000040(%edi)

	_060e71_jump:
		mov    0x00006c(%edi),%bh
		cmp    $0x000006,%bh
		jne    _060e80_jump
		mov    $0x000007,%ebx
		jmp    _060e8a_jump

	_060e80_jump:
		cmp    $0x000015,%bh
		jne    _060e96_jump
		mov    $0x000016,%ebx

	_060e8a_jump:
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _01d374_func

	_060e96_jump:
		mov    0x00006c(%edi),%ch
		cmp    $0x00000d,%ch
		je     _060ea7_jump
		cmp    $0x00001c,%ch
		jne    _060fe0_jump

	_060ea7_jump:
		cmpb   $0x000006,0x00006b(%edi)
		jne    _060fe0_jump
		cmpb   $0x000000,_0cee3f_data
		je     _060fe0_jump
		mov    _0cc1f0_data,%esi
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _061066_jump

	_060ed6_jump:
		cmpw   $0x0000ba,0x000060(%esi)
		jne    _060fc7_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _060fc7_jump
		lea    0x000004(%esp),%edx
		lea    0x00000c(%esp),%ecx
		push   %edx
		lea    0x00000c(%esp),%edx
		lea    0x000004(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d710_func
		testb  $0x000008,0x000081(%edi)
		je     _060f4a_jump
		mov    -0x000002(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sar    %edx
		add    %ebx,%edx
		movw   $0x00000d,0x000040(%esi)
		add    $0x00000d,%edx
		mov    0x000081(%esi),%bh
		mov    %edx,0x000028(%esi)
		or     $0x000008,%bh
		mov    %dx,0x00003c(%esi)
		mov    %bh,0x000081(%esi)
		jmp    _060f73_jump

	_060f4a_jump:
		mov    -0x000002(%esp),%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000068(%esi),%dl
		sub    %edx,%ebx
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		sar    %edx
		add    %ebx,%edx
		movw   $0x00fff3,0x000040(%esi)
		sub    $0x00000d,%edx
		mov    %edx,0x000028(%esi)
		mov    %dx,0x00003c(%esi)

	_060f73_jump:
		mov    0x00000a(%esp),%ebx
		mov    0x000081(%esi),%cl
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000069(%esi),%dl
		or     $0x000004,%cl
		sub    %edx,%ebx
		mov    0x000002(%esp),%edx
		movw   $0x000002,0x000042(%esi)
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%esi)
		add    %ebx,%edx
		mov    %cl,0x000081(%esi)
		add    $0x000002,%edx
		mov    %edx,0x00002c(%esi)
		mov    %esi,%eax
		mov    %dx,0x00003e(%esi)
		call   _01f304_func
		andb   $0x0000ef,0x000081(%esi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060fc7_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _060ed6_jump
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_060fe0_jump:
		mov    0x00006c(%edi),%dh
		cmp    $0x00000e,%dh
		je     _060fed_jump
		cmp    $0x00001d,%dh
		jne    _061011_jump

	_060fed_jump:
		movw   $0x00fff8,0x000042(%edi)
		mov    0x000081(%edi),%dh
		movw   $0x000000,0x000040(%edi)
		and    $0x0000ef,%dh
		mov    %dh,0x000081(%edi)
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061011_jump:
		mov    0x000040(%edi),%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _061066_jump
		mov    0x00006c(%edi),%bh
		cmp    $0x000006,%bh
		jne    _06102b_jump
		mov    $0x000007,%ebx
		jmp    _06105a_jump

	_06102b_jump:
		cmp    $0x000015,%bh
		jne    _061037_jump
		mov    $0x000016,%ebx
		jmp    _06105a_jump

	_061037_jump:
		cmp    $0x00000b,%bh
		jne    _061049_jump
		cmpb   $0x000036,0x00006b(%edi)
		jne    _061049_jump
		mov    $0x000002,%ebx
		jmp    _06105a_jump

	_061049_jump:
		cmpb   $0x00001a,0x00006c(%edi)
		jne    _061066_jump
		cmpb   $0x000036,0x00006b(%edi)
		jne    _061066_jump
		mov    $0x000013,%ebx

	_06105a_jump:
		mov    $0x000001,%edx
		mov    %edi,%eax
		call   _01d374_func

	_061066_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061070_func:
		push   %ebx
		push   %ecx
		mov    0x00006c(%eax),%dl
		test   %dl,%dl
		je     _06107e_jump
		cmp    $0x000001,%dl
		jne    _06109c_jump

	_06107e_jump:
		mov    0x000076(%eax),%bl
		dec    %bl
		mov    %bl,0x000076(%eax)
		jne    _061092_jump
		mov    $0x00000d,%ebx
		jmp    _0611a0_jump

	_061092_jump:
		mov    $0x00000a,%ebx
		jmp    _0611a0_jump

	_06109c_jump:
		cmp    $0x000007,%dl
		je     _0610b0_jump
		cmp    $0x000002,%dl
		je     _0610b0_jump
		cmp    $0x000003,%dl
		je     _0610b0_jump
		cmp    $0x000004,%dl
		jne    _0610d8_jump

	_0610b0_jump:
		mov    0x000076(%eax),%dl
		dec    %dl
		mov    %dl,0x000076(%eax)
		jne    _0610c9_jump
		mov    $0x00000d,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_0610c9_jump:
		mov    $0x00000c,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_0610d8_jump:
		cmp    $0x000005,%dl
		je     _0610e2_jump
		cmp    $0x000006,%dl
		jne    _06110a_jump

	_0610e2_jump:
		mov    0x000076(%eax),%cl
		dec    %cl
		mov    %cl,0x000076(%eax)
		jne    _0610fb_jump
		mov    $0x00000d,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_0610fb_jump:
		mov    $0x00000b,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_06110a_jump:
		cmp    $0x00000f,%dl
		je     _061114_jump
		cmp    $0x000010,%dl
		jne    _06113c_jump

	_061114_jump:
		mov    0x000076(%eax),%bl
		dec    %bl
		mov    %bl,0x000076(%eax)
		jne    _06112d_jump
		mov    $0x00001c,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_06112d_jump:
		mov    $0x000019,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_06113c_jump:
		cmp    $0x000016,%dl
		je     _061150_jump
		cmp    $0x000011,%dl
		je     _061150_jump
		cmp    $0x000012,%dl
		je     _061150_jump
		cmp    $0x000013,%dl
		jne    _061178_jump

	_061150_jump:
		mov    0x000076(%eax),%dl
		dec    %dl
		mov    %dl,0x000076(%eax)
		jne    _061169_jump
		mov    $0x00001c,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_061169_jump:
		mov    $0x00001b,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_061178_jump:
		cmp    $0x000014,%dl
		je     _061182_jump
		cmp    $0x000015,%dl
		jne    _0611a7_jump

	_061182_jump:
		mov    0x000076(%eax),%cl
		dec    %cl
		mov    %cl,0x000076(%eax)
		jne    _06119b_jump
		mov    $0x00001c,%ebx
		xor    %edx,%edx
		call   _01d374_func
		pop    %ecx
		pop    %ebx
		ret    

	_06119b_jump:
		mov    $0x00001a,%ebx

	_0611a0_jump:
		xor    %edx,%edx
		call   _01d374_func

	_0611a7_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0611ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _061258_jump
		mov    0x00006c(%ecx),%dl
		test   %dl,%dl
		je     _0611d7_jump
		cmp    $0x000001,%dl
		je     _0611d7_jump
		cmp    $0x00000f,%dl
		je     _0611d7_jump
		cmp    $0x000010,%dl
		jne    _061258_jump

	_0611d7_jump:
		mov    0x00006c(%ecx),%al
		test   %al,%al
		je     _0611e2_jump
		cmp    $0x000001,%al
		jne    _0611e9_jump

	_0611e2_jump:
		mov    $0x000005,%ebx
		jmp    _0611f6_jump

	_0611e9_jump:
		cmp    $0x00000f,%al
		je     _0611f1_jump
		cmp    $0x000010,%al
		jne    _061202_jump

	_0611f1_jump:
		mov    $0x000014,%ebx

	_0611f6_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d374_func

	_061202_jump:
		mov    0x000060(%ecx),%dx
		cmp    $0x0000ae,%dx
		je     _061214_jump
		cmp    $0x0000b8,%dx
		jne    _061235_jump

	_061214_jump:
		mov    0x000060(%ecx),%di
		movw   $0x000003,0x000042(%ecx)
		cmp    $0x0000ae,%di
		jne    _06122d_jump
		movw   $0x00ffe8,0x000040(%ecx)
		jmp    _061258_jump

	_06122d_jump:
		movw   $0x000018,0x000040(%ecx)
		jmp    _061258_jump

	_061235_jump:
		mov    0x000060(%ecx),%si
		movw   $0x000002,0x000042(%ecx)
		cmp    $0x0000e1,%si
		jne    _061252_jump
		movw   $0x00ffdc,0x000040(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061252_jump:
		movw   $0x000024,0x000040(%ecx)

	_061258_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061260_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%esi
		testb  $0x000002,_0cec71_data
		je     _06127b_jump
		mov    $0x000100,%edx
		jmp    _061280_jump

	_06127b_jump:
		mov    $0x000200,%edx

	_061280_jump:
		mov    _0ceca0_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		test   %eax,%eax
		jge    _061291_jump
		neg    %eax

	_061291_jump:
		cmp    %edx,%eax
		setg   %cl
		mov    0x000060(%esi),%ax
		cmp    $0x000022,%ax
		jb     _0612f7_jump
		cmp    $0x000022,%ax
		jbe    _06132d_jump
		cmp    $0x000098,%ax
		jb     _0612d8_jump
		jbe    _06132d_jump
		cmp    $0x0000ed,%ax
		jb     _0612c9_jump
		jbe    _06132d_jump
		cmp    $0x0000f3,%ax
		je     _06132d_jump
		jmp    _061e0f_jump

	_0612c9_jump:
		cmp    $0x0000be,%ax
		je     _061540_jump
		jmp    _061e0f_jump

	_0612d8_jump:
		cmp    $0x000044,%ax
		jb     _061e0f_jump
		jbe    _06183c_jump
		cmp    $0x000073,%ax
		je     _061d00_jump
		jmp    _061e0f_jump

	_0612f7_jump:
		cmp    $0x00001b,%ax
		jb     _061318_jump
		jbe    _061a31_jump
		cmp    $0x00001c,%ax
		jbe    _061c2f_jump
		cmp    $0x00001d,%ax
		je     _06132d_jump
		jmp    _061e0f_jump

	_061318_jump:
		cmp    $0x000019,%ax
		jb     _061e0f_jump
		jbe    _0614ad_jump
		jmp    _061646_jump

	_06132d_jump:
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _06149b_jump
		mov    0x000056(%esi),%di
		test   %di,%di
		je     _06134d_jump
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x000056(%esi)

	_06134d_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _061e0f_jump
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0cdb00_data,%al
		mov    $0x000001,%cl
		add    %edx,%eax
		mov    %cl,_0ceec3_data
		cmp    $0x00000b,%eax
		jb     _061384_jump
		cmp    $0x00000c,%eax
		ja     _061384_jump
		call   _0641cc_func

	_061384_jump:
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		call   _069ec0_func
		movw   $0x002710,0x000054(%esi)
		mov    $0x00000c,%ebx
		mov    _0cdad6_data,%cx
		mov    0x000060(%esi),%di
		sub    $0x000003,%ecx
		mov    %bx,_0cece8_data
		mov    %cx,_0cdad6_data
		cmp    $0x0000f3,%di
		jne    _0613d5_jump
		mov    $0x000011,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _061433_jump

	_0613d5_jump:
		cmp    $0x000098,%di
		jne    _061408_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0613e8_jump
		cmpb   $0x000002,0x00006c(%esi)
		je     _0613f8_jump

	_0613e8_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _061433_jump

	_0613f8_jump:
		mov    $0x000003,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _061433_jump

	_061408_jump:
		cmp    $0x0000ed,%di
		jne    _061433_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _061433_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _061433_jump
		mov    $_0cda94_data,%eax
		mov    $0x000001,%ebx
		call   _077f04_func
		mov    %ebx,%edx
		mov    %esi,%eax
		call   _05efb0_func

	_061433_jump:
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		mov    0x000006(%esp),%eax
		xor    %edx,%edx
		mov    _0cdabc_data,%ecx
		mov    _0cdafc_data,%dl
		sar    $0x000010,%eax
		add    %ecx,%edx
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		cmp    %eax,%edx
		jge    _061488_jump
		movw   $0x00fe00,_0ceca2_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061488_jump:
		movw   $0x000200,_0ceca2_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06149b_jump:
		mov    0x00004a(%esi),%ax
		mov    %ax,0x000056(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0614ad_jump:
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _06149b_jump
		mov    0x000056(%esi),%cx
		test   %cx,%cx
		je     _0614c9_jump
		mov    %ecx,%edi
		dec    %edi
		mov    %di,0x000056(%esi)

	_0614c9_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _061e0f_jump
		lea    0x00000c(%esp),%eax
		mov    %esp,%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		xor    %edx,%edx
		xor    %eax,%eax
		call   _02d60c_func
		xor    %eax,%eax
		mov    _0cdabc_data,%edx
		mov    _0cdafc_data,%al
		add    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		cmp    %eax,%edx
		jge    _06152f_jump
		orb    $0x000008,_0cdb15_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06152f_jump:
		andb   $0x0000f7,_0cdb15_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061540_jump:
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _06149b_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06149b_jump
		cmpb   $0x000009,0x00006c(%esi)
		jne    _06149b_jump
		mov    0x000056(%esi),%bx
		test   %bx,%bx
		je     _061574_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,0x000056(%esi)

	_061574_jump:
		cmpw   $0x000000,0x000056(%esi)
		jne    _061e0f_jump
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0cdb00_data,%al
		mov    $0x000001,%bl
		add    %edx,%eax
		mov    %bl,_0ceec3_data
		cmp    $0x00000b,%eax
		jb     _0615ab_jump
		cmp    $0x00000c,%eax
		ja     _0615ab_jump
		call   _0641cc_func

	_0615ab_jump:
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		call   _069ec0_func
		mov    $0x00000c,%eax
		movw   $0x002710,0x000054(%esi)
		mov    $0x00000a,%ebx
		mov    _0cdad6_data,%dx
		mov    %ax,_0cece8_data
		sub    $0x000004,%edx
		mov    %esi,%eax
		mov    %dx,_0cdad6_data
		xor    %edx,%edx
		mov    %esp,%ecx
		call   _01d374_func
		lea    0x00000c(%esp),%eax
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		xor    %eax,%eax
		mov    _0cdabc_data,%edx
		mov    _0cdafc_data,%al
		add    %eax,%edx
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		cmp    %eax,%edx
		jge    _061488_jump
		movw   $0x00fe00,_0ceca2_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061646_jump:
		mov    0x000052(%esi),%di
		test   %di,%di
		je     _06168b_jump
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		je     _061665_jump
		cmp    $0x000014,%di
		je     _061e0f_jump

	_061665_jump:
		mov    0x000052(%esi),%ax
		dec    %ax
		mov    %ax,0x000052(%esi)
		jne    _061e0f_jump
		mov    $0x00000b,%edx
		mov    %esi,%eax
		call   _01d364_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06168b_jump:
		mov    0x000050(%esi),%ax
		test   %ax,%ax
		je     _06172c_jump
		mov    %eax,%edi
		dec    %edi
		mov    _0cecd4_data,%ax
		mov    %di,0x000050(%esi)
		cmp    $0x000001,%ax
		jne    _0616be_jump
		cmpb   $0x000000,_0cee3f_data
		je     _0616ba_jump
		movb   $0x000000,0x00007e(%esi)
		jmp    _0616be_jump

	_0616ba_jump:
		movb   $0x000004,0x00007e(%esi)

	_0616be_jump:
		mov    0x000050(%esi),%ax
		cmp    0x000056(%esi),%ax
		jg     _061e0f_jump
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _06171b_jump
		mov    $0xffffffff,%edi
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		mov    %di,_0cdade_data
		call   _01d374_func
		xor    %eax,%eax
		mov    %cl,%al
		call   _069c78_func
		xor    %eax,%eax
		mov    %ax,_0cdae6_data
		movw   $0x002710,0x000054(%esi)
		mov    %ax,_0cece8_data
		mov    %ax,_0cdad6_data

	_06171b_jump:
		andb   $0x0000df,0x000081(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06172c_jump:
		cmpw   $0x000001,_0cecd4_data
		je     _0617be_jump
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _06178b_jump
		mov    $0xffffffff,%eax
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ax,_0cdade_data
		mov    $_0cda94_data,%eax
		call   _01d374_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %edx,%edx
		call   _069c78_func
		mov    %dx,_0cece8_data
		mov    %dx,_0cdae6_data
		mov    %dx,_0cdad6_data
		movw   $0x002710,0x000054(%esi)

	_06178b_jump:
		cmpb   $0x000006,0x00006c(%esi)
		jne    _0617a3_jump
		mov    %esi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _0617a3_jump
		mov    %esi,%eax
		call   _05c74c_func

	_0617a3_jump:
		cmpb   $0x000014,0x00006c(%esi)
		jne    _061e0f_jump
		orb    $0x000020,0x000081(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0617be_jump:
		movl   $0x000000,0x000024(%esi)
		movl   $0x000004,0x000030(%esi)
		mov    0x000081(%esi),%bh
		movb   $0x000004,0x00007e(%esi)
		or     $0x000020,%bh
		mov    %bh,0x000081(%esi)
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _061e0f_jump
		mov    $0xffffffff,%edi
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		mov    %di,_0cdade_data
		call   _01d374_func
		xor    %eax,%eax
		mov    %cl,%al
		call   _069c78_func
		xor    %eax,%eax
		mov    %ax,_0cece8_data
		mov    %ax,_0cdae6_data
		mov    %ax,_0cdad6_data
		movw   $0x002710,0x000054(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06183c_jump:
		mov    _0cdade_data,%ax
		mov    0x000034(%esi),%dx
		xor    %cl,%cl
		cmp    %dx,%ax
		jne    _0618ab_jump
		cmpb   $0x000002,0x00006d(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _061898_jump
		cmpw   $0x000000,0x00004a(%esi)
		je     _061898_jump
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movw   $0x000000,0x000052(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00004a(%esi),%ax
		movb   $0x000000,0x000072(%esi)
		inc    %eax
		movw   $0x000000,0x00004a(%esi)
		mov    %ax,0x000056(%esi)
		mov    $0x000001,%cl
		mov    %ax,0x000042(%esi)
		jmp    _0618ab_jump

	_061898_jump:
		mov    0x000048(%esi),%eax
		mov    0x000054(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		jne    _0618ab_jump
		mov    $0x000001,%cl

	_0618ab_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _061e0f_jump
		mov    0x000054(%esi),%edx
		mov    0x000040(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		neg    %edx
		cmp    %edx,%eax
		jge    _061972_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000056(%esi)
		mov    0x00003c(%esi),%eax
		movw   $0x000000,0x000042(%esi)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000034(%esi),%dx
		cmp    _0cdade_data,%dx
		jne    _061e0f_jump
		mov    0x00003c(%esi),%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%eax
		mov    _0cdac0_data,%ebx
		sub    %edx,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0cdb00_data,%al
		add    %edx,%eax
		mov    %ebx,_0cdac0_data
		cmp    $0x00000b,%eax
		jb     _06193c_jump
		cmp    $0x00000c,%eax
		ja     _06193c_jump
		call   _0641cc_func

	_06193c_jump:
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x000001,_0ceec3_data
		call   _069ec0_func
		mov    $0x00000c,%ebx
		movw   $0x002710,0x000054(%esi)
		mov    %bx,_0cece8_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061972_jump:
		test   %cl,%cl
		jne    _061e0f_jump
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _061e0f_jump
		xor    %edx,%edx
		mov    _0ceec3_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _061e0f_jump
		call   *_0c4c68_data
		test   %ax,%ax
		je     _061e0f_jump
		call   _069ec0_func
		cmpb   $0x000002,_0cdb01_data
		jne    _0619ca_jump
		movw   $0x002710,0x000054(%esi)

	_0619ca_jump:
		mov    $0x000002,%ecx
		mov    0x000040(%esi),%eax
		mov    $0xfffffffe,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _0619e9_jump
		cmp    %ecx,%eax
		jg     _0619e9_jump
		mov    $0x000001,%eax
		jmp    _0619eb_jump

	_0619e9_jump:
		xor    %eax,%eax

	_0619eb_jump:
		test   %eax,%eax
		je     _061a01_jump
		subw   $0x000002,_0cdad6_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061a01_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _061e0f_jump
		mov    0x000042(%esi),%ax
		mov    _0cdad6_data,%si
		sub    $0x000002,%eax
		add    %eax,%esi
		mov    %si,_0cdad6_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061a31_jump:
		mov    _0cdade_data,%ax
		mov    0x000034(%esi),%dx
		xor    %cl,%cl
		cmp    %dx,%ax
		jne    _061aa0_jump
		cmpb   $0x000002,0x00006d(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _061a8d_jump
		cmpw   $0x000000,0x00004a(%esi)
		je     _061a8d_jump
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movw   $0x000000,0x000052(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00004a(%esi),%ax
		movb   $0x000000,0x000072(%esi)
		inc    %eax
		movw   $0x000000,0x00004a(%esi)
		mov    %ax,0x000056(%esi)
		mov    $0x000001,%cl
		mov    %ax,0x000042(%esi)
		jmp    _061aa0_jump

	_061a8d_jump:
		mov    0x000048(%esi),%eax
		mov    0x000054(%esi),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		inc    %eax
		cmp    %eax,%edx
		jne    _061aa0_jump
		mov    $0x000001,%cl

	_061aa0_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _061e0f_jump
		mov    0x000054(%esi),%edx
		mov    0x000040(%esi),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		neg    %edx
		cmp    %edx,%eax
		jge    _061b62_jump
		mov    $0x000018,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000056(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    0x000034(%esi),%dx
		cmp    _0cdade_data,%dx
		jne    _061b4f_jump
		mov    0x00003c(%esi),%eax
		mov    0x00002c(%esi),%edi
		sar    $0x000010,%eax
		mov    _0cdac0_data,%ebp
		sub    %edi,%eax
		add    %eax,%ebp
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cdb01_data,%al
		mov    _0cdb00_data,%dl
		shl    $0x000008,%eax
		add    %edx,%eax
		mov    %ebp,_0cdac0_data
		cmp    $0x00000b,%eax
		jb     _061b23_jump
		cmp    $0x00000c,%eax
		ja     _061b23_jump
		call   _0641cc_func

	_061b23_jump:
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x000001,_0ceec3_data
		call   _069ec0_func
		mov    $0x00000c,%ebx
		movw   $0x002710,0x000054(%esi)
		mov    %bx,_0cece8_data

	_061b4f_jump:
		mov    0x00003c(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061b62_jump:
		test   %cl,%cl
		jne    _061e0f_jump
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _061e0f_jump
		xor    %edx,%edx
		mov    _0ceec3_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _061e0f_jump
		call   *_0c4c68_data
		test   %ax,%ax
		je     _061e0f_jump
		call   _069ec0_func
		cmpb   $0x000002,_0cdb01_data
		jne    _061bba_jump
		movw   $0x002710,0x000054(%esi)

	_061bba_jump:
		mov    $0x000002,%ecx
		mov    0x000040(%esi),%eax
		mov    $0xfffffffe,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _061bd9_jump
		cmp    %ecx,%eax
		jg     _061bd9_jump
		mov    $0x000001,%eax
		jmp    _061bdb_jump

	_061bd9_jump:
		xor    %eax,%eax

	_061bdb_jump:
		test   %eax,%eax
		je     _061bf1_jump
		subw   $0x000002,_0cdad6_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061bf1_jump:
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jge    _061e0f_jump
		mov    0x000042(%esi),%ax
		add    %ax,_0cdad6_data
		mov    _0cdad4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff9,%eax
		jge    _061e0f_jump
		movw   $0x00fff9,_0cdad6_data
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061c2f_jump:
		cmpb   $0x000014,0x00006c(%esi)
		jne    _061c7a_jump
		mov    0x000056(%esi),%di
		test   %di,%di
		jne    _061c73_jump
		mov    0x00004a(%esi),%ax
		mov    _0cecd4_data,%dx
		mov    %ax,0x000056(%esi)
		cmp    $0x000001,%dx
		je     _061c61_jump
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d364_func
		jmp    _061c7a_jump

	_061c61_jump:
		cmpb   $0x000000,0x00007e(%esi)
		je     _061c6d_jump
		movb   $0x000000,0x00007e(%esi)
		jmp    _061c7a_jump

	_061c6d_jump:
		movb   $0x000003,0x00007e(%esi)
		jmp    _061c7a_jump

	_061c73_jump:
		mov    %edi,%eax
		dec    %eax
		mov    %ax,0x000056(%esi)

	_061c7a_jump:
		cmpw   $0x000001,_0cecd4_data
		jne    _061c8a_jump
		cmpb   $0x000000,0x00007e(%esi)
		je     _061caa_jump

	_061c8a_jump:
		cmpw   $0x000001,_0cecd4_data
		je     _061e0f_jump
		cmpb   $0x000014,0x00006c(%esi)
		setne  %al
		and    $0x0000ff,%eax
		je     _061e0f_jump

	_061caa_jump:
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _061cf0_jump
		movw   $0x00ffff,_0cdade_data
		mov    $0x000002,%ebx
		mov    $_0cda94_data,%eax
		mov    %ebx,%edx
		call   _01d374_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %ecx,%ecx
		call   _069c78_func
		mov    %cx,_0cece8_data
		mov    %cx,_0cdae6_data
		mov    %cx,_0cdad6_data

	_061cf0_jump:
		movw   $0x0003e8,0x000054(%esi)
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061d00_jump:
		mov    0x00006c(%esi),%bh
		cmp    $0x000007,%bh
		jne    _061dc2_jump
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _061d74_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    %bh,%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _061d74_jump
		mov    0x000081(%esi),%al
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%al
		mov    %al,0x000081(%esi)

	_061d74_jump:
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		jne    _061dbc_jump
		mov    $0xffffffff,%eax
		mov    $0x000002,%ebx
		mov    %ax,_0cdade_data
		mov    %ebx,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		xor    %eax,%eax
		mov    %cl,%al
		xor    %edx,%edx
		call   _069c78_func
		mov    %dx,_0cece8_data
		mov    %dx,_0cdae6_data
		mov    %dx,_0cdad6_data

	_061dbc_jump:
		movw   $0x0003e8,0x000054(%esi)

	_061dc2_jump:
		cmpb   $0x000014,0x00006c(%esi)
		jne    _061e0f_jump
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		je     _061dde_jump
		mov    0x000052(%esi),%ax
		cmp    0x000050(%esi),%ax
		je     _061de2_jump

	_061dde_jump:
		decw   0x000052(%esi)

	_061de2_jump:
		mov    0x000056(%esi),%cx
		test   %cx,%cx
		je     _061df2_jump
		cmpw   $0x000000,0x000052(%esi)
		jne    _061e08_jump

	_061df2_jump:
		mov    $0x000007,%edx
		mov    %esi,%eax
		call   _01d364_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061e08_jump:
		mov    %ecx,%eax
		dec    %eax
		mov    %ax,0x000056(%esi)

	_061e0f_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061e1c_func:
		push   %ebx
		xor    %ebx,%ebx
		mov    0x000079(%eax),%bl
		cmp    %bx,%dx
		jne    _061e49_jump
		mov    _0cdb20_data,%edx
		mov    0x000040(%edx),%bx
		test   %bx,%bx
		jle    _061e3d_jump
		mov    $0x000019,%edx
		jmp    _061e44_jump

	_061e3d_jump:
		jge    _061e49_jump
		mov    $0x00001a,%edx

	_061e44_jump:
		call   _01d364_func

	_061e49_jump:
		pop    %ebx
		ret    



_061e50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cec4e_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _061e8d_jump
		push   $0xffffffa2
		mov    %eax,%edx
		shl    $0x000005,%eax
		mov    $0xffffff5b,%ecx
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		mov    $0x000006,%ebx
		add    %eax,%edx
		mov    %esi,%eax
		call   _01cd60_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_061e8d_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061ea0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cc1f0_data,%edx
		mov    _0cc1f4_data,%si
		xor    %bl,%bl
		xor    %ecx,%ecx
		test   %si,%si
		jle    _061f58_jump

	_061ebf_jump:
		cmp    $0x000005,%bl
		jae    _061f58_jump
		cmpw   $0x0000be,0x000060(%edx)
		jne    _061f48_jump
		xor    %eax,%eax
		mov    %bl,%al
		imul   $0x000014,%eax,%eax
		xor    %edi,%edi
		mov    %di,_0e3cdc_data(%eax)
		xor    %bh,%bh
		mov    %di,_0e3cde_data(%eax)
		mov    %bh,_0e3cec_data(%eax)
		mov    %bh,_0e3ced_data(%eax)
		mov    %cx,_0e3cea_data(%eax)
		mov    $0x000001,%edi
		mov    %di,_0e3ce0_data(%eax)
		mov    $0x000005,%bh
		mov    %di,_0e3ce2_data(%eax)
		mov    %bh,_0e3cee_data(%eax)
		movw   $0x00000f,_0e3ce4_data(%eax)
		xor    %edi,%edi
		mov    %di,_0e3ce6_data(%eax)
		mov    %di,_0e3ce8_data(%eax)
		andb   $0x0000fb,0x000081(%edx)
		xor    %eax,%eax
		movl   $0x000000,0x000024(%edx)
		mov    %bl,%al
		inc    %bl
		mov    %ax,0x000050(%edx)

	_061f48_jump:
		inc    %ecx
		add    $0x000084,%edx
		cmp    %si,%cx
		jl     _061ebf_jump

	_061f58_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_061f60_func:
		push   %edx
		xor    %al,%al

	_061f63_jump:
		xor    %edx,%edx
		mov    %al,%dl
		imul   $0x000014,%edx,%edx
		xor    %ah,%ah
		mov    %ah,_0e3ced_data(%edx)
		inc    %al
		cmp    $0x000005,%al
		jb     _061f63_jump
		pop    %edx
		ret    



_061f7c_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		xor    %al,%al

	_061f82_jump:
		xor    %edx,%edx
		mov    %al,%dl
		imul   $0x000014,%edx,%edx
		mov    _0e3ced_data(%edx),%bl
		cmp    $0x000001,%bl
		jne    _061f96_jump
		add    %bl,%ah

	_061f96_jump:
		inc    %al
		cmp    $0x000005,%al
		jb     _061f82_jump
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    _0e3d4a_data,%dl
		mov    _0e3d47_data,%bl
		mov    _096e76_data(%ebx,%edx,2),%dl
		and    $0x0000ff,%edx
		cmp    _096e70_data(%edx),%ah
		sete   %al
		pop    %edx
		pop    %ebx
		ret    



_061fc8_func:
		mov    0x000050(%eax),%al
		cmp    $0x000005,%al
		jb     _061fd1_jump
		mov    $0x0000ff,%al

	_061fd1_jump:
		ret    



_061fd4_func:
		push   %ebx
		push   %ecx
		mov    %al,%bl
		test   %dl,%dl
		jne    _061fe3_jump
		xor    %dh,%dh
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_061fe3_jump:
		xor    %ecx,%ecx
		mov    $0x0000f0,%eax
		mov    %dl,%cl
		mov    %eax,%edx
		add    %ecx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		and    $0x0000ff,%ebx
		add    %ebx,%ebx
		inc    %ebx
		imul   %ebx,%eax
		mov    _0cec52_data,%ebx
		sar    $0x000010,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc1f0_data,%ebx
		testb  $0x000008,0x000081(%ebx,%eax,4)
		je     _062026_jump
		add    $0x000050,%edx

	_062026_jump:
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_06202c_func:
		test   %dx,%dx
		jne    _062037_jump
		mov    $0x00002c,%eax
		ret    

	_062037_jump:
		shl    $0x000004,%eax
		add    $0x00002c,%eax
		ret    



_062040_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%ebx
		movswl %dx,%edx
		cwtl   
		sar    $0x000004,%edx
		sar    $0x000004,%eax
		movswl %dx,%edx

	_062054_jump:
		cwtl   
		call   _01e0e4_func
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _06207c_jump
		add    $0x000010,%ebx
		movswl %bx,%eax
		sar    $0x000004,%eax
		movswl %ax,%edx
		movswl %cx,%eax
		sar    $0x000004,%eax
		jmp    _062054_jump

	_06207c_jump:
		xor    %ch,%ch
		and    $0x0000f0,%bl
		and    $0x00000f,%cl
		mov    %ebx,%esi
		movswl %cx,%edx
		xor    %ebx,%ebx
		call   _02494c_func
		mov    %esi,%ebx
		add    %ebx,%eax
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_062098_switch:
		.long   _062139_case
		.long   _062139_case
		.long   _062139_case
		.long   _062181_case
		.long   _062181_case
		.long   _062139_case




_0620b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000084,%esp
		call   _061fc8_func
		mov    %al,%bl
		cmp    $0x0000ff,%al
		je     _06221f_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000000(,%edx,4),%ebp
		add    %edx,%ebp
		shl    $0x000002,%ebp
		mov    _0e3ce8_data(%ebp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0x000021,%ecx
		add    %edx,%eax
		mov    _0cc1f0_data,%esi
		shl    $0x000002,%eax
		mov    %esp,%edi
		add    %eax,%esi
		xor    %eax,%eax
		rep movsl %ds:(%esi),%es:(%edi)
		mov    0x000068(%esp),%al
		mov    0x000028(%esp),%esi
		add    %eax,%esi
		xor    %eax,%eax
		mov    0x00002c(%esp),%ecx
		mov    0x000069(%esp),%al
		add    %eax,%ecx
		xor    %ah,%ah
		mov    %ah,_0e3ced_data(%ebp)
		mov    _0e3d49_data,%al
		cmp    $0x000005,%al
		ja     _06221f_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_062098_switch(,%eax,4)

	_062139_case:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    %si,_0e3cdc_data(,%eax,4)
		mov    $0x000002,%bl
		mov    %cx,_0e3cde_data(,%eax,4)
		mov    $0x000001,%edi
		mov    %bl,_0e3cee_data(,%eax,4)
		mov    %di,_0e3ce0_data(,%eax,4)
		mov    %di,_0e3ce2_data(,%eax,4)
		add    $0x000084,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062181_case:
		cmpb   $0x000003,_0e3d49_data
		jne    _06218e_jump
		mov    $0x000004,%al
		jmp    _062190_jump

	_06218e_jump:
		xor    %al,%al

	_062190_jump:
		cmp    $0x000001,%bl
		je     _06219b_jump
		mov    $0x000004,%ah
		sub    %al,%ah
		mov    %ah,%al

	_06219b_jump:
		mov    $0x000006,%edx
		and    $0x0000ff,%eax
		xor    %ecx,%ecx
		call   _061fd4_func
		mov    %bl,%cl
		mov    %eax,%edx
		lea    0x000000(,%ecx,4),%eax
		add    %ecx,%eax
		mov    %dx,_0e3cdc_data(,%eax,4)
		xor    %eax,%eax
		mov    $0x000009,%edx
		mov    %bl,%al
		sub    %eax,%edx
		movswl %dx,%eax
		mov    $0x000001,%edx
		call   _06202c_func
		xor    %edx,%edx
		mov    %bl,%dl
		mov    %eax,%ecx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		add    $0x000008,%ecx
		shl    $0x000002,%eax
		xor    %dh,%dh
		mov    %cx,_0e3cde_data(%eax)
		mov    %dh,_0e3cee_data(%eax)
		test   %bl,%bl
		movw   $0x000032,_0e3ce0_data(%eax)
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		movw   $0x000046,_0e3ce2_data(,%eax,4)

	_06221f_jump:
		add    $0x000084,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06222c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %al,%cl
		cmp    _0e3d45_data,%al
		jae    _0624d4_jump
		cmp    $0x000005,%al
		jae    _0624d4_jump
		movzbl %al,%ebp
		lea    0x000000(,%ebp,4),%edi
		add    %ebp,%edi
		shl    $0x000002,%edi
		mov    _0e3ce8_data(%edi),%eax
		sar    $0x000010,%eax
		mov    %eax,%esi
		shl    $0x000005,%esi
		add    %eax,%esi
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%esi
		add    %eax,%esi
		cmpl   $0x000000,0x000024(%esi)
		jne    _0624d4_jump
		movb   $0x000000,0x00007e(%esi)
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f304_func
		xor    %dh,%dh
		mov    _0e3d49_data,%bl
		mov    %dh,_0e3ced_data(%edi)
		test   %bl,%bl
		je     _0622bf_jump
		cmp    $0x000003,%bl
		je     _0622bf_jump
		cmp    $0x000004,%bl
		jne    _06234a_jump

	_0622bf_jump:
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		mov    0x00000c(%esi),%eax
		mov    0x000008(%eax),%eax
		mov    0x000052(%eax),%al
		mov    %al,0x00006a(%esi)
		xor    %eax,%eax
		mov    %cl,%al
		mov    %eax,%edx
		lea    0x000000(,%eax,4),%ebp
		mov    $0x000004,%bl
		add    %eax,%ebp
		xor    %eax,%edx
		shl    $0x000002,%ebp
		mov    _0e3d45_data,%dl
		mov    %bl,_0e3cee_data(%ebp)
		call   _061fd4_func
		mov    %ax,_0e3cdc_data(%ebp)
		mov    _0cec52_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0cc1f0_data,%eax
		xor    %edx,%edx
		mov    0x000069(%eax,%edi,4),%dl
		mov    0x000038(%eax,%edi,4),%cx
		xor    %eax,%eax
		add    %ecx,%edx
		mov    0x000069(%esi),%al
		mov    $0x000001,%edi
		sub    %eax,%edx
		mov    %di,_0e3ce0_data(%ebp)
		mov    %dx,_0e3cde_data(%ebp)
		jmp    _062443_jump

	_06234a_jump:
		mov    $0x00000b,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		mov    0x00000c(%esi),%eax
		mov    0x000008(%eax),%eax
		mov    0x00005a(%eax),%al
		mov    %al,0x00006a(%esi)
		cmpb   $0x000005,_0e3d49_data
		jne    _0623b0_jump
		xor    %edx,%edx
		mov    %ebp,%eax
		mov    _0e3d45_data,%dl
		call   _061fd4_func
		xor    %edx,%edx
		mov    %ax,_0e3cdc_data(%edi)
		xor    %eax,%eax
		call   _06202c_func
		mov    $0x000001,%dh
		mov    %ax,_0e3cde_data(%edi)
		mov    _0e3d40_data,%ax
		mov    %dh,_0e3cee_data(%edi)
		mov    %ax,_0e3ce0_data(%edi)
		jmp    _062443_jump

	_0623b0_jump:
		xor    %edx,%edx
		mov    _0e3d45_data,%al
		mov    _0e3d48_data,%dl
		inc    %al
		cmp    _096e7e_data(%edx),%cl
		jb     _0623d6_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %cl,%al
		inc    %al
		and    $0x0000ff,%eax
		jmp    _0623dc_jump

	_0623d6_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ebp,%eax

	_0623dc_jump:
		call   _061fd4_func
		mov    %ax,_0e3cdc_data(%edi)
		xor    %eax,%eax
		mov    %cl,%al
		lea    0x000000(,%eax,4),%edi
		add    %eax,%edi
		xor    %eax,%eax
		shl    $0x000002,%edi
		mov    %cl,%al
		mov    _0e3cdc_data(%edi),%dx
		shl    $0x000002,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    %dx,_0e3cdc_data(%edi)
		xor    %edx,%edx
		call   _06202c_func
		mov    $0x000003,%dl
		mov    %ax,_0e3cde_data(%edi)
		mov    %dl,_0e3cee_data(%edi)
		test   %cl,%cl
		jne    _06243a_jump
		mov    _0e3d40_data,%ax
		mov    %ax,_0e3ce0_data(%edi)
		jmp    _062443_jump

	_06243a_jump:
		movw   $0x000001,_0e3ce0_data(%edi)

	_062443_jump:
		lea    0x000004(%esp),%eax
		push   %eax
		lea    0x00000c(%esp),%eax
		push   %eax
		mov    _0cec52_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		lea    0x000014(%esp),%ecx
		shl    $0x000005,%edi
		lea    0x000008(%esp),%ebx
		add    %eax,%edi
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edi
		mov    $0x000006,%edx
		add    %edi,%eax
		movb   $0x000000,0x00006b(%esi)
		call   _01d710_func
		mov    _0cec52_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		mov    _0cc1f0_data,%eax
		testb  $0x000008,0x000081(%eax,%edi,4)
		je     _0624a2_jump
		mov    0x000008(%esp),%eax
		add    %ax,(%esp)

	_0624a2_jump:
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		xor    %eax,%eax
		mov    0x00000a(%esp),%edx
		mov    0x000069(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000028(%esi),%ax
		mov    %edx,0x00002c(%esi)
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)

	_0624d4_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0624e0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		test   %ax,%ax
		jne    _0624fb_jump
		test   %dx,%dx
		jl     _0624f3_jump
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_0624f3_jump:
		mov    $0x000008,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_0624fb_jump:
		test   %dx,%dx
		jne    _06251c_jump
		test   %ax,%ax
		jne    _06250a_jump
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_06250a_jump:
		jle    _062514_jump
		mov    $0x000004,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_062514_jump:
		mov    $0x00000c,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_06251c_jump:
		cwtl   
		test   %eax,%eax
		jge    _062523_jump
		neg    %eax

	_062523_jump:
		mov    %eax,%ecx
		movswl %dx,%eax
		test   %eax,%eax
		jge    _06252e_jump
		neg    %eax

	_06252e_jump:
		sub    %ax,%cx
		jne    _06253a_jump
		mov    $0x000006,%eax
		jmp    _06254b_jump

	_06253a_jump:
		test   %cx,%cx
		jl     _062546_jump
		mov    $0x000005,%eax
		jmp    _06254b_jump

	_062546_jump:
		mov    $0x000007,%eax

	_06254b_jump:
		test   %bx,%bx
		jle    _06255e_jump
		test   %dx,%dx
		jle    _06256e_jump
		mov    $0x000008,%ah
		sub    %al,%ah
		mov    %ah,%al
		pop    %ecx
		pop    %ebx
		ret    

	_06255e_jump:
		test   %dx,%dx
		jge    _06256c_jump
		mov    $0x000010,%ah
		sub    %al,%ah
		mov    %ah,%al
		pop    %ecx
		pop    %ebx
		ret    

	_06256c_jump:
		add    $0x000008,%al

	_06256e_jump:
		pop    %ecx
		pop    %ebx
		ret    



_062574_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    0x000040(%eax),%edx
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _0624e0_func
		mov    %al,0x00006b(%ebx)
		pop    %edx
		pop    %ebx
		ret    

_062590_switch:
		.long   _062638_case
		.long   _062673_case
		.long   _062673_case
		.long   _062673_case
		.long   _0626a8_case
		.long   _0626e7_case
		.long   _0626e7_case
		.long   _0626e7_case
		.long   _0627f8_case
		.long   _06270d_case
		.long   _06270d_case
		.long   _06270d_case
		.long   _062728_case
		.long   _062761_case
		.long   _062761_case
		.long   _062761_case




_0625d0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    %ecx,%edi
		lea    0x000004(%esp),%ebx
		push   %ebx
		lea    0x000010(%esp),%ebx
		lea    0x00000c(%esp),%ecx
		push   %ebx
		xor    %edx,%edx
		lea    0x000018(%esp),%ebx
		call   _01d710_func
		mov    0x000024(%esp),%eax
		movw   $0x000006,(%edi)
		movw   $0x000006,(%eax)
		cmpb   $0x000002,0x00006d(%esi)
		jne    _0627c6_jump
		mov    0x00006c(%esi),%dl
		cmp    $0x00000a,%dl
		je     _062621_jump
		cmp    $0x00000b,%dl
		jne    _0627c6_jump

	_062621_jump:
		mov    0x00006b(%esi),%al
		cmp    $0x00000f,%al
		ja     _062789_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		jmp    *%cs:_062590_switch(,%ebx,4)

	_062638_case:
		mov    0x00000a(%esp),%ebx
		movswl (%edi),%ecx
		sar    $0x000010,%ebx
		sub    %ecx,%ebx
		mov    0x00000e(%esp),%ecx
		sar    %ebx
		sar    $0x000010,%ecx
		add    %ecx,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000008(%esp),%ebx
		add    0x000004(%esp),%ebx
		mov    0x000024(%esp),%eax
		mov    (%eax),%ax
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_062673_case:
		mov    0x000010(%esp),%ebx
		mov    0x00000c(%esp),%esi
		mov    (%edi),%ax
		add    %esi,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000024(%esp),%eax
		mov    0x000008(%esp),%ebx
		mov    0x000004(%esp),%edi
		mov    (%eax),%ax
		add    %edi,%ebx
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0626a8_case:
		mov    0x00000c(%esp),%eax
		mov    %ax,(%edi)
		mov    0x000010(%esp),%ebx
		add    %eax,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000002(%esp),%ecx
		mov    0x000024(%esp),%ebx
		sar    $0x000010,%ecx
		movswl (%ebx),%ebx
		sub    %ebx,%ecx
		mov    %ecx,%ebx
		mov    0x000006(%esp),%ecx
		sar    %ebx
		sar    $0x000010,%ecx
		mov    (%esp),%eax
		add    %ecx,%ebx
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0626e7_case:
		mov    0x000010(%esp),%ebx
		mov    0x00000c(%esp),%edx
		mov    (%edi),%ax
		add    %edx,%ebx
		sub    %eax,%ebx
		mov    %bx,0x000000(%ebp)
		mov    (%esp),%ebx
		mov    0x000008(%esp),%eax
		mov    %ax,(%ebx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_06270d_case:
		mov    0x000010(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    (%esp),%ebx
		mov    0x000008(%esp),%eax
		mov    %ax,(%ebx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_062728_case:
		mov    0x00000c(%esp),%eax
		mov    %ax,(%edi)
		mov    0x000010(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000024(%esp),%ebx
		mov    0x000002(%esp),%ecx
		movswl (%ebx),%ebx
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x000006(%esp),%ebx
		sar    %ecx
		sar    $0x000010,%ebx
		mov    (%esp),%eax
		add    %ecx,%ebx
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_062761_case:
		mov    0x000010(%esp),%eax
		mov    %ax,0x000000(%ebp)
		mov    0x000008(%esp),%ebx
		add    0x000004(%esp),%ebx
		mov    0x000024(%esp),%eax
		mov    (%eax),%ax
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_062789_jump:
		mov    0x00000a(%esp),%ecx
		movswl (%edi),%ebx
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    %ecx
		sar    $0x000010,%ebx
		add    %ecx,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000024(%esp),%eax
		mov    0x000008(%esp),%ebx
		mov    0x000004(%esp),%edi
		mov    (%eax),%ax
		add    %edi,%ebx
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0627c6_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _062826_jump
		cmpb   $0x00000e,0x00006c(%esi)
		jne    _062826_jump
		xor    %ebx,%ebx
		mov    0x00006d(%esi),%bl
		mov    0x00000c(%esi),%ecx
		shl    $0x000002,%ebx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    0x00006c(%esi),%bl
		testb  $0x00000f,0x000005(%ecx,%ebx,8)
		jne    _062826_jump
		mov    0x000024(%esp),%ebx
		mov    0x000004(%esp),%eax
		mov    %ax,(%ebx)

	_0627f8_case:
		mov    0x00000a(%esp),%ecx
		movswl (%edi),%ebx
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    %ecx
		sar    $0x000010,%ebx
		add    %ecx,%ebx
		mov    %bx,0x000000(%ebp)
		mov    (%esp),%ebx
		mov    0x000008(%esp),%eax
		mov    %ax,(%ebx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_062826_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _062832_jump
		cmpb   $0x00000d,0x00006c(%esi)
		je     _06285a_jump

	_062832_jump:
		mov    0x00006d(%esi),%dh
		cmp    $0x000002,%dh
		jne    _06288e_jump
		cmpb   $0x00000e,0x00006c(%esi)
		jne    _06288e_jump
		xor    %ebx,%ebx
		mov    %dh,%bl
		mov    0x00000c(%esi),%ecx
		shl    $0x000002,%ebx
		add    %ebx,%ecx
		xor    %ebx,%ebx
		mov    (%ecx),%ecx
		mov    0x00006c(%esi),%bl
		testb  $0x00000f,0x000005(%ecx,%ebx,8)
		je     _06288e_jump

	_06285a_jump:
		mov    0x000028(%esi),%ecx
		movswl (%edi),%ebx
		add    $0x000080,%ecx
		sar    %ebx
		sub    %ebx,%ecx
		mov    %cx,0x000000(%ebp)
		mov    0x000024(%esp),%ebx
		mov    0x00002c(%esi),%ecx
		movswl (%ebx),%ebx
		add    $0x000060,%ecx
		sar    %ebx
		mov    (%esp),%eax
		sub    %ebx,%ecx
		mov    %cx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_06288e_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _0628d7_jump
		cmpb   $0x00000c,0x00006c(%esi)
		jne    _0628d7_jump
		mov    0x00000a(%esp),%ecx
		movswl (%edi),%ebx
		sar    $0x000010,%ecx
		sub    %ebx,%ecx
		mov    0x00000e(%esp),%ebx
		sar    %ecx
		sar    $0x000010,%ebx
		add    %ecx,%ebx
		mov    %bx,0x000000(%ebp)
		mov    0x000024(%esp),%eax
		mov    0x000008(%esp),%ebx
		mov    0x000004(%esp),%esi
		mov    (%eax),%ax
		add    %esi,%ebx
		sub    %eax,%ebx
		mov    (%esp),%eax
		mov    %bx,(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004

	_0628d7_jump:
		mov    (%edi),%ax
		mov    %eax,%edx
		mov    %ax,0x000000(%ebp)
		neg    %edx
		mov    0x000024(%esp),%eax
		mov    %dx,0x000000(%ebp)
		mov    (%eax),%ax
		mov    (%esp),%ebx
		mov    %eax,%ecx
		mov    %ax,(%ebx)
		neg    %ecx
		mov    %cx,(%ebx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_062904_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e3d42_data,%si
		mov    _0e3d40_data,%di
		mov    _0e3d49_data,%ah
		cmp    $0x000001,%ah
		je     _062927_jump
		cmp    $0x000002,%ah
		jne    _062942_jump

	_062927_jump:
		mov    _0e3d48_data,%dh
		inc    %dh
		mov    %dh,_0e3d48_data
		cmp    $0x000005,%dh
		jb     _062942_jump
		xor    %bh,%bh
		mov    %bh,_0e3d48_data

	_062942_jump:
		mov    _0e3d4a_data,%al
		mov    _0e3d44_data,%cl
		mov    %edi,%edx
		mov    %esi,%ebx
		sub    $0x00000a,%edx
		sub    $0x00000a,%ebx
		inc    %al
		test   %cl,%cl
		jne    _062987_jump
		mov    _0e3d47_data,%ah
		inc    %ah
		mov    %ah,_0e3d47_data
		cmp    $0x000002,%ah
		jne    _0629a2_jump
		mov    %cl,_0e3d47_data
		mov    %al,_0e3d4a_data
		cmp    $0x000004,%al
		jne    _0629a2_jump
		mov    %cl,_0e3d4a_data
		jmp    _06299e_jump

	_062987_jump:
		xor    %ch,%ch
		mov    %al,_0e3d4a_data
		mov    %ch,_0e3d47_data
		cmp    $0x000004,%al
		jne    _0629a2_jump
		mov    %ch,_0e3d4a_data

	_06299e_jump:
		mov    %ebx,%esi
		mov    %edx,%edi

	_0629a2_jump:
		cmp    $0x000064,%si
		jge    _0629ad_jump
		mov    $0x000064,%esi

	_0629ad_jump:
		cmp    $0x000032,%di
		jge    _0629b8_jump
		mov    $0x000032,%edi

	_0629b8_jump:
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ah,_0e3d46_data
		xor    %eax,%eax
		mov    _0e3d4a_data,%dl
		mov    _0e3d47_data,%al
		mov    _096e76_data(%eax,%edx,2),%al
		mov    %al,_0e3d49_data
		xor    %eax,%eax
		mov    _0e3d49_data,%al
		xor    %dl,%dl
		mov    _096e70_data(%eax),%al
		mov    %dl,_0e3d44_data
		mov    %al,_0e3d45_data
		xor    %al,%al

	_0629f7_jump:
		xor    %ebx,%ebx
		mov    %al,%bl
		imul   $0x000014,%ebx,%ebx
		mov    _0e3ce8_data(%ebx),%ecx
		sar    $0x000010,%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0cc1f0_data,%edx
		movl   $0x000000,0x000024(%ecx,%edx,1)
		mov    _0e3ce8_data(%ebx),%ebx
		sar    $0x000010,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    0x000081(%edx,%ebx,1),%cl
		and    $0x0000fb,%cl
		inc    %al
		mov    %cl,0x000081(%edx,%ebx,1)
		cmp    $0x000005,%al
		jb     _0629f7_jump
		mov    %di,_0e3d40_data
		mov    %si,_0e3d42_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062a58_func:
		push   %ecx
		mov    $0x000004,%cl
		cwtl   
		shl    %cl,%eax
		pop    %ecx
		ret    



_062a60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		call   _061fc8_func
		cmp    $0x0000ff,%al
		je     _062b77_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    _0ced00_data,%dx
		add    _0e3cdc_data(%eax),%dx
		xor    %ecx,%ecx
		mov    0x000028(%ebx),%si
		mov    0x000068(%ebx),%cl
		mov    _0e3cde_data(%eax),%di
		add    %esi,%ecx
		mov    _0cecea_data,%si
		sub    %ecx,%edx
		xor    %ecx,%ecx
		add    %edi,%esi
		mov    0x000069(%ebx),%cl
		add    0x00002c(%ebx),%cx
		sub    %ecx,%esi
		cmpw   $0x000000,_0e3ce0_data(%eax)
		je     _062b55_jump
		xor    %edi,%edi
		mov    %di,_0e3ce0_data(%eax)
		test   %dx,%dx
		jne    _062af1_jump
		xor    %eax,%eax
		call   _062a58_func
		mov    %ax,0x000040(%ebx)
		mov    $0xffffffff,%eax
		call   _062a58_func
		mov    %ax,0x000042(%ebx)
		jmp    _062b44_jump

	_062af1_jump:
		jl     _062afa_jump
		mov    $0x000002,%eax
		jmp    _062aff_jump

	_062afa_jump:
		mov    $0xfffffffe,%eax

	_062aff_jump:
		movswl %si,%esi
		movswl %ax,%ecx
		shl    $0x000004,%esi
		imul   %ecx,%esi
		movswl %dx,%eax
		lea    0x000000(,%eax,8),%edx
		imul   %eax,%edx
		imul   %ecx,%eax
		shl    $0x000003,%esi
		add    %esi,%edx
		neg    %edx
		lea    0x000000(,%eax,8),%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		mov    %ecx,%eax
		call   _062a58_func
		sub    $0x00000a,%eax
		mov    %dx,0x000042(%ebx)
		mov    %ax,0x000040(%ebx)

	_062b44_jump:
		mov    %ebx,%eax
		call   _062574_func
		movb   $0x000003,0x00007e(%ebx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062b55_jump:
		mov    0x00003e(%ebx),%ecx
		movswl %dx,%eax
		sar    $0x000010,%ecx
		imul   %ecx,%eax
		addw   $0x000004,0x000042(%ebx)
		test   %eax,%eax
		jge    _062b70_jump
		movw   $0x000000,0x000040(%ebx)

	_062b70_jump:
		mov    %ebx,%eax
		call   _062574_func

	_062b77_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062b80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		call   _061fc8_func
		mov    %al,%bl
		cmp    $0x0000ff,%al
		je     _062d40_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		mov    _0ced00_data,%di
		shl    $0x000002,%edx
		xor    %eax,%eax
		mov    _0e3cdc_data(%edx),%cx
		mov    0x000068(%esi),%al
		add    %ecx,%edi
		add    0x000028(%esi),%ax
		sub    %eax,%edi
		mov    _0cecea_data,%ax
		mov    %di,(%esp)
		mov    _0e3cde_data(%edx),%di
		add    %eax,%edi
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		sub    %eax,%edi
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _062bf1_jump
		neg    %eax

	_062bf1_jump:
		cmp    $0x000004,%eax
		jge    _062c08_jump
		movswl %di,%eax
		test   %eax,%eax
		jge    _062bff_jump
		neg    %eax

	_062bff_jump:
		cmp    $0x000004,%eax
		jl     _062c98_jump

	_062c08_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %bl,%dl
		mov    %dl,_0e3ced_data(,%eax,4)
		movswl %di,%eax
		test   %eax,%eax
		jge    _062c27_jump
		neg    %eax

	_062c27_jump:
		mov    %eax,%ebx
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _062c38_jump
		neg    %eax

	_062c38_jump:
		cmp    %ebx,%eax
		jge    _062c3e_jump
		mov    %ebx,%eax

	_062c3e_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    (%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		mov    $0x000004,%cl
		call   _062a58_func
		mov    %ax,0x000040(%esi)
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _062a58_func
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _062574_func
		movb   $0x000003,0x00007e(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062c98_jump:
		mov    $0x000001,%ah
		mov    %ah,_0e3ced_data(%edx)
		mov    _0e3d49_data,%dl
		cmp    %ah,%dl
		je     _062cc5_jump
		cmp    $0x000002,%dl
		je     _062cc5_jump
		cmpb   $0x000002,0x00006d(%esi)
		jne    _062cbb_jump
		cmpb   $0x00000d,0x00006c(%esi)
		je     _062cd4_jump

	_062cbb_jump:
		movb   $0x000002,0x00006d(%esi)
		movb   $0x00000d,0x00006c(%esi)
		jmp    _062cd4_jump

	_062cc5_jump:
		mov    $0x000001,%edx
		xor    %eax,%eax
		call   _0624e0_func
		mov    %al,0x00006b(%esi)

	_062cd4_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,4),%eax
		movw   $0x000000,0x000040(%esi)
		add    %edx,%eax
		movw   $0x000000,0x000042(%esi)
		mov    _0e3cda_data(,%eax,4),%ebx
		mov    _0cecfe_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    0x000068(%esi),%bl
		sub    %ebx,%edx
		mov    %edx,0x000028(%esi)
		mov    _0e3cdc_data(,%eax,4),%eax
		mov    _0cece8_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %edx,%eax
		xor    %edx,%edx
		mov    0x000069(%esi),%dl
		sub    %edx,%eax
		mov    %eax,0x00002c(%esi)
		call   _061f7c_func
		test   %al,%al
		je     _062d40_jump
		movb   $0x000003,_0e3d46_data
		call   _061f60_func

	_062d40_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_062d4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		call   _061fc8_func
		mov    %al,%dl
		cmp    $0x0000ff,%al
		je     _062f3d_jump
		test   %al,%al
		je     _062d8f_jump
		je     _062f3d_jump
		and    $0x0000ff,%eax
		lea    -0x000001(%eax),%ebx
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		cmpw   $0x000000,_0e3ce2_data(,%eax,4)
		jne    _062f3d_jump

	_062d8f_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		lea    0x000000(,%ebx,4),%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		mov    _0e3ce2_data(%eax),%cx
		test   %cx,%cx
		jne    _062f33_jump
		mov    %cx,(%esp)
		mov    _0e3cee_data(%eax),%dh
		xor    %edi,%edi
		cmp    $0x000002,%dh
		je     _062dfa_jump
		mov    _0ced00_data,%di
		xor    %ebx,%ebx
		mov    _0e3cdc_data(%eax),%cx
		mov    0x000068(%esi),%bl
		add    %ecx,%edi
		add    0x000028(%esi),%bx
		mov    _0e3cde_data(%eax),%cx
		sub    %ebx,%edi
		xor    %eax,%eax
		mov    _0cecea_data,%bx
		mov    0x000069(%esi),%al
		add    %ecx,%ebx
		add    0x00002c(%esi),%ax
		sub    %eax,%ebx
		mov    %bx,(%esp)

	_062dfa_jump:
		movswl %di,%eax
		test   %eax,%eax
		jge    _062e03_jump
		neg    %eax

	_062e03_jump:
		cmp    $0x000002,%eax
		jge    _062e1e_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _062e15_jump
		neg    %eax

	_062e15_jump:
		cmp    $0x000002,%eax
		jl     _062ea1_jump

	_062e1e_jump:
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %ch,%ch
		mov    %ch,_0e3ced_data(,%eax,4)
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _062e43_jump
		neg    %eax

	_062e43_jump:
		mov    %eax,%ebx
		movswl %di,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _062e50_jump
		neg    %eax

	_062e50_jump:
		cmp    %ebx,%eax
		jge    _062e56_jump
		mov    %ebx,%eax

	_062e56_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    %edi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		mov    $0x000004,%cl
		call   _062a58_func
		mov    %ax,0x000040(%esi)
		mov    (%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _062a58_func
		mov    %ax,0x000042(%esi)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062ea1_jump:
		and    $0x0000ff,%edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		mov    $0x000001,%bl
		shl    $0x000002,%edx
		xor    %eax,%eax
		mov    %bl,_0e3ced_data(%edx)
		call   _062a58_func
		mov    %ax,0x000040(%esi)
		xor    %eax,%eax
		call   _062a58_func
		mov    %ax,0x000042(%esi)
		cmpb   $0x000002,_0e3cee_data(%edx)
		je     _062f15_jump
		mov    _0e3cda_data(%edx),%eax
		mov    _0cecfe_data,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		mov    _0cece8_data,%eax
		mov    _0e3cdc_data(%edx),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x00002c(%esi)

	_062f15_jump:
		call   _061f7c_func
		test   %al,%al
		je     _062f3d_jump
		movb   $0x000003,_0e3d46_data
		call   _061f60_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_062f33_jump:
		mov    %ecx,%esi
		dec    %esi
		mov    %si,_0e3ce2_data(%eax)

	_062f3d_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_062f48_switch:
		.long   _06323b_case
		.long   _063193_case
		.long   _063277_case
		.long   _063213_case




_062f58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%esi
		call   _061fc8_func
		mov    %al,0x000010(%esp)
		cmp    $0x0000ff,%al
		je     _063552_jump
		test   %al,%al
		je     _062f9e_jump
		je     _063552_jump
		and    $0x0000ff,%eax
		lea    -0x000001(%eax),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		cmpw   $0x000000,_0e3ce0_data(,%eax,4)
		jne    _063552_jump

	_062f9e_jump:
		movzbl 0x000010(%esp),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		shl    $0x000002,%eax
		mov    _0e3ce0_data(%eax),%di
		test   %di,%di
		jne    _0630e3_jump
		cmpb   $0x000000,_0e3ced_data(%eax)
		jne    _063552_jump
		mov    _0e3ce8_data(%eax),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		xor    %ebx,%ebx
		mov    0x000068(%eax),%bl
		xor    %edx,%edx
		mov    0x000028(%eax),%cx
		mov    0x000069(%eax),%dl
		add    %ecx,%ebx
		mov    0x00002c(%eax),%cx
		movswl %bx,%eax
		add    %edx,%ecx
		cmp    $0xffffffec,%eax
		jl     _063036_jump
		mov    _0cecd6_data,%edx
		sar    $0x000010,%edx
		add    $0x000154,%edx
		cmp    %edx,%eax
		jg     _063036_jump
		movswl %cx,%eax
		cmp    $0xffffffec,%eax
		jl     _063036_jump
		mov    _0cecc8_data,%edx
		sar    $0x000010,%edx
		add    $0x0000dc,%edx
		cmp    %edx,%eax
		jle    _063552_jump

	_063036_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		shl    $0x000002,%edx
		movb   $0x000001,_0e3ced_data(%edx)
		mov    _0e3ce8_data(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc1f0_data,%ebx
		movl   $0x000000,0x000024(%ebx,%eax,4)
		mov    _0e3ce8_data(%edx),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		andb   $0x0000fb,0x000081(%ebx,%eax,4)
		call   _061f7c_func
		test   %al,%al
		je     _063552_jump
		mov    _0cec52_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		mov    $0x000004,%ch
		mov    0x000076(%edx,%eax,4),%bl
		mov    %ch,_0e3d46_data
		test   %bl,%bl
		jne    _063552_jump
		mov    $0x000001,%bh
		mov    _0cec78_data,%cl
		mov    %bh,_0ceeb8_data
		or     $0x000010,%cl
		mov    %bh,_0ceeba_data
		mov    %cl,_0cec78_data
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0630e3_jump:
		cmp    $0x000001,%di
		jne    _063521_jump
		mov    _0e3ce4_data(%eax),%di
		cmp    $0x00000f,%di
		jne    _063432_jump
		movzbw _0cdafc_data,%di
		mov    %edi,(%esp)
		mov    _0cdabc_data,%di
		add    (%esp),%edi
		mov    %di,_0e3cdc_data(%eax)
		movzbw _0cdafd_data,%di
		mov    %edi,(%esp)
		mov    _0cdac0_data,%di
		add    (%esp),%edi
		mov    %di,_0e3cde_data(%eax)
		movzbw 0x000068(%esi),%di
		mov    %edi,(%esp)
		mov    0x000028(%esi),%di
		add    (%esp),%edi
		mov    %edi,(%esp)
		mov    _0e3cdc_data(%eax),%di
		sub    (%esp),%edi
		mov    %di,0x00000c(%esp)
		movzbw 0x000069(%esi),%di
		mov    %edi,(%esp)
		mov    0x00002c(%esi),%di
		add    (%esp),%edi
		mov    %edi,(%esp)
		mov    _0e3cde_data(%eax),%di
		sub    (%esp),%edi
		mov    _0e3cee_data(%eax),%al
		mov    %di,0x000008(%esp)
		cmp    $0x000003,%al
		ja     _0632a7_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_062f48_switch(,%eax,4)

	_063193_case:
		mov    0x000006(%esp),%eax
		mov    $0x00000b,%ebx
		sar    $0x000010,%eax
		mov    %bx,0x000004(%esp)
		test   %eax,%eax
		jge    _0631aa_jump
		neg    %eax

	_0631aa_jump:
		mov    %eax,%ebx
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000004,%cl
		test   %eax,%eax
		jge    _0631bb_jump
		neg    %eax

	_0631bb_jump:
		cmp    %ebx,%eax
		jge    _0631c1_jump
		mov    %ebx,%eax

	_0631c1_jump:
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		shl    $0x000002,%edx
		sbb    %edx,%eax
		sar    $0x000002,%eax
		mov    $0x000004,%cl
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		cwtl   
		mov    $0x000004,%cl
		call   _062a58_func
		mov    %eax,%edi
		mov    %eax,%ebx
		mov    0x000008(%esp),%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		cwtl   
		call   _062a58_func
		mov    %eax,%ecx
		movswl %ax,%edx
		movswl %di,%eax
		jmp    _0632a0_jump

	_063213_case:
		movw   $0x00000b,0x000004(%esp)
		xor    %eax,%eax
		call   _062a58_func
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    $0x000003,%eax
		call   _062a58_func
		mov    %eax,%ecx
		movswl %ax,%edi
		movswl %dx,%eax
		mov    %edi,%edx
		jmp    _0632a0_jump

	_06323b_case:
		mov    $0x00000b,%ecx
		mov    0x00000c(%esp),%edi
		mov    %cx,0x000004(%esp)
		test   %di,%di
		jl     _063255_jump
		mov    $0x000003,%eax
		jmp    _06325a_jump

	_063255_jump:
		mov    $0xfffffffd,%eax

	_06325a_jump:
		cwtl   
		call   _062a58_func
		mov    %eax,%edx
		mov    %eax,%ebx
		xor    %eax,%eax
		call   _062a58_func
		mov    %eax,%ecx
		cwtl   
		movswl %dx,%edi
		mov    %eax,%edx
		mov    %edi,%eax
		jmp    _0632a0_jump

	_063277_case:
		mov    $0xffffffff,%eax
		mov    $0x00000e,%edx
		call   _062a58_func
		mov    %dx,0x000004(%esp)
		mov    %eax,%ebx
		mov    $0x000005,%eax
		mov    $0x000001,%edx
		call   _062a58_func
		mov    %eax,%ecx
		xor    %eax,%eax

	_0632a0_jump:
		call   _0624e0_func
		mov    %al,%dl

	_0632a7_jump:
		movzbl 0x000010(%esp),%edi
		lea    0x000000(,%edi,4),%eax
		add    %edi,%eax
		shl    $0x000002,%eax
		mov    _0e3cee_data(%eax),%dh
		cmp    $0x000002,%dh
		jne    _063383_jump
		mov    0x000004(%esp),%dh
		movzbl 0x00006d(%esi),%edi
		mov    0x00000c(%esi),%ebp
		shl    $0x000002,%edi
		mov    %dh,0x00006c(%esi)
		mov    %dl,0x00006b(%esi)
		add    %ebp,%edi
		movzbl 0x00006c(%esi),%ebp
		mov    (%edi),%edi
		shl    $0x000003,%ebp
		add    %ebp,%edi
		andb   $0x0000f0,0x000005(%edi)
		mov    %dl,_0e3cec_data(%eax)
		mov    %bx,_0e3ce6_data(%eax)
		mov    _0e3ce4_data(%eax),%di
		mov    %cx,_0e3ce8_data(%eax)
		dec    %edi
		mov    _0e3ce6_data(%eax),%dx
		mov    %di,_0e3ce4_data(%eax)
		mov    %dx,0x000040(%esi)
		mov    _0e3ce8_data(%eax),%dx
		xor    %ebx,%ebx
		mov    %dx,0x000042(%esi)
		mov    $0x00000f,%edx
		mov    %bx,_0e3ce0_data(%eax)
		xor    %bl,%bl
		mov    %dx,_0e3ce4_data(%eax)
		xor    %edx,%edx
		mov    %bl,_0e3ced_data(%eax)
		mov    0x00006d(%esi),%dl
		mov    0x00000c(%esi),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%cl
		and    $0x0000f0,%cl
		mov    %cl,0x000005(%ebx,%eax,1)
		mov    %cl,%ch
		or     $0x000002,%ch
		mov    %ch,0x000005(%ebx,%eax,1)
		movb   $0x000000,0x000071(%esi)
		movb   $0x000008,0x000072(%esi)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063383_jump:
		cmp    $0x000003,%dh
		jne    _0633f2_jump
		mov    0x000004(%esp),%dh
		mov    %dh,0x00006c(%esi)
		mov    %dl,0x00006b(%esi)
		mov    %dl,_0e3cec_data(%eax)
		mov    %bx,_0e3ce6_data(%eax)
		mov    _0e3ce4_data(%eax),%bx
		mov    %cx,_0e3ce8_data(%eax)
		dec    %ebx
		mov    _0e3ce6_data(%eax),%dx
		mov    %bx,_0e3ce4_data(%eax)
		mov    %dx,0x000040(%esi)
		mov    _0e3ce8_data(%eax),%dx
		mov    $0x00000f,%ecx
		mov    %dx,0x000042(%esi)
		xor    %bl,%bl
		mov    %cx,_0e3ce4_data(%eax)
		xor    %esi,%esi
		mov    %bl,_0e3ced_data(%eax)
		mov    %si,_0e3ce0_data(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0633f2_jump:
		cmp    0x00006b(%esi),%dl
		jne    _063552_jump
		mov    0x000004(%esp),%dh
		mov    %dh,0x00006c(%esi)
		mov    %dl,0x00006b(%esi)
		mov    %dl,_0e3cec_data(%eax)
		mov    %bx,_0e3ce6_data(%eax)
		mov    _0e3ce4_data(%eax),%dx
		mov    %cx,_0e3ce8_data(%eax)
		dec    %edx
		mov    %dx,_0e3ce4_data(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063432_jump:
		test   %di,%di
		jne    _0634c7_jump
		mov    _0e3ce6_data(%eax),%dx
		mov    %dx,0x000040(%esi)
		mov    _0e3ce8_data(%eax),%dx
		mov    %dx,0x000042(%esi)
		cmpb   $0x000002,_0e3cee_data(%eax)
		jne    _06348e_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%esi),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x0000f0,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x000002,%bh
		mov    %bh,0x000005(%edx,%eax,8)
		movb   $0x000000,0x000071(%esi)
		movb   $0x000008,0x000072(%esi)

	_06348e_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x00000f,%esi
		xor    %edi,%edi
		mov    %si,_0e3ce4_data(,%eax,4)
		xor    %cl,%cl
		mov    %di,_0e3ce0_data(,%eax,4)
		mov    %cl,_0e3ced_data(,%eax,4)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0634c7_jump:
		movw   $0x000000,0x000040(%esi)
		movw   $0x000000,0x000042(%esi)
		mov    _0e3cec_data(%eax),%dl
		mov    %dl,0x00006b(%esi)
		testb  $0x000001,_0e3ce4_data(%eax)
		je     _0634eb_jump
		addl   $0x000002,0x00002c(%esi)
		jmp    _0634ef_jump

	_0634eb_jump:
		subl   $0x000002,0x00002c(%esi)

	_0634ef_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		mov    _0e3ce4_data(%eax),%bx
		test   %bx,%bx
		jle    _063552_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0e3ce4_data(%eax)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063521_jump:
		jle    _06352d_jump
		mov    %edi,%ebx
		dec    %ebx
		mov    %bx,_0e3ce0_data(%eax)

	_06352d_jump:
		xor    %edx,%edx
		mov    0x000010(%esp),%dl
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		cmpw   $0x000001,_0e3ce0_data(%eax)
		jne    _063552_jump
		movw   $0x00000f,_0e3ce4_data(%eax)

	_063552_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06355c_switch:
		.long   _063634_case
		.long   _06364d_case
		.long   _0636f8_case
		.long   _0636d0_case
		.long   _063678_case




_063570_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x00006d(%eax),%al
		test   %al,%al
		jbe    _06358a_jump
		cmp    $0x000002,%al
		je     _063613_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06358a_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000009,%al
		jne    _06375b_jump
		mov    0x000081(%esi),%bl
		mov    $0x000001,%cl
		or     $0x000020,%bl
		mov    0x000040(%esi),%ax
		mov    %bl,0x000081(%esi)
		test   %ax,%ax
		js     _0635b4_jump
		sar    %cl,%ax
		jmp    _0635bd_jump

	_0635b4_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0635bd_jump:
		mov    %ax,0x000040(%esi)
		mov    %esi,%eax
		call   _0252c0_func
		cmpw   $0x000001,_0cec96_data
		je     _0635df_jump
		cmpb   $0x000002,_0e3d46_data
		jne    _06375b_jump

	_0635df_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cec96_data
		cmpb   $0x000002,_0e3d46_data
		je     _0635fd_jump
		movb   $0x000002,_0e3d46_data
		call   _061f60_func

	_0635fd_jump:
		mov    $0x00000c,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063613_jump:
		andb   $0x0000df,0x000081(%esi)
		mov    0x00006c(%esi),%al
		sub    $0x00000a,%al
		cmp    $0x000004,%al
		ja     _06375b_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_06355c_switch(,%eax,4)

	_063634_case:
		cmpb   $0x000000,_0e3d46_data
		jne    _06375b_jump
		mov    %esi,%eax
		call   _062a60_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06364d_case:
		mov    _0e3d46_data,%ah
		cmp    $0x000003,%ah
		jne    _063664_jump
		mov    %esi,%eax
		call   _062f58_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063664_jump:
		test   %ah,%ah
		jne    _06375b_jump
		mov    %esi,%eax
		call   _062b80_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063678_case:
		mov    _0e3d46_data,%dl
		cmp    $0x000003,%dl
		jne    _06368c_jump
		mov    %esi,%eax
		call   _062f58_func
		jmp    _063697_jump

	_06368c_jump:
		test   %dl,%dl
		jne    _063697_jump
		mov    %esi,%eax
		call   _062b80_func

	_063697_jump:
		cmpw   $0x000000,0x000042(%esi)
		jl     _06375b_jump
		mov    $0xffffffff,%edx
		xor    %eax,%eax
		call   _0624e0_func
		cmp    0x00006b(%esi),%al
		jne    _06375b_jump
		xor    %eax,%eax
		mov    0x00000c(%esi),%edx
		mov    0x00006d(%esi),%al
		movzbl 0x00006c(%esi),%esi
		mov    (%edx,%eax,4),%eax
		andb   $0x0000f0,0x000005(%eax,%esi,8)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0636d0_case:
		mov    _0e3d46_data,%cl
		cmp    $0x000002,%cl
		jne    _0636e7_jump
		mov    %esi,%eax
		call   _062d4c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0636e7_jump:
		cmp    $0x000003,%cl
		jne    _06375b_jump
		mov    %esi,%eax
		call   _062f58_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0636f8_case:
		xor    %eax,%eax
		call   _062a58_func
		mov    %ax,0x000040(%esi)
		mov    $0xffffffff,%eax
		call   _062a58_func
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _06375b_jump
		xor    %eax,%eax
		call   _062a58_func
		mov    %ax,0x000042(%esi)
		cmpb   $0x000002,_0e3d46_data
		jne    _06374d_jump
		mov    $0x00000d,%ebx
		mov    %esi,%eax
		mov    $0x000002,%edx
		call   _0620b0_func
		mov    %esi,%eax
		call   _01d374_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06374d_jump:
		mov    $0x000009,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func

	_06375b_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063760_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000068(%eax),%dl
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    _0cdabc_data,%cx
		mov    _0cdafc_data,%bl
		add    %ecx,%ebx
		sub    %dx,%bx
		mov    %ebx,%edx
		je     _0637aa_jump
		add    $0x000081,%eax
		test   %bx,%bx
		setg   %dl
		and    $0x0000ff,%edx
		and    $0x000001,%dl
		mov    (%eax),%dh
		and    $0x0000f7,%dh
		mov    %dh,(%eax)
		shl    $0x000003,%dl
		mov    %dh,%bl
		or     %dl,%bl
		mov    %bl,(%eax)

	_0637aa_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0637b0_switch:
		.long   _0638df_case
		.long   _06389d_case
		.long   _063bc9_case
		.long   _063bc9_case
		.long   _063916_case
		.long   _06384f_case
		.long   _0639a7_case

_0637cc_switch:
		.long   _063ac3_case
		.long   _063adc_case
		.long   _063afc_case
		.long   _063b60_case
		.long   _063bb0_case
		.long   _063a95_case
		.long   _063bc9_case
		.long   _063aca_case
		.long   _063a32_case




_0637f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    $0x000001,%ah
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %ah,_0ceead_data
		mov    0x00006d(%ecx),%bl
		mov    _0cecca_data,%ax
		mov    0x00006c(%ecx),%dl
		mov    %ax,_0cecb6_data
		mov    %ax,_0cecac_data
		mov    %ax,_0cecea_data
		mov    %edx,%eax
		dec    %eax
		test   %bx,%bx
		jbe    _063838_jump
		cmp    $0x000002,%bx
		je     _063a1b_jump
		jmp    _063bc9_case

	_063838_jump:
		cmp    $0x000006,%ax
		ja     _063bc9_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0637b0_switch(,%eax,4)

	_06384f_case:
		movw   $0x000001,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _0252c0_func
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %edx,%eax
		mov    _0cecfe_data,%edx
		sar    $0x000010,%edx
		add    $0x000100,%edx
		cmp    %edx,%eax
		jle    _063bc9_case
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		movw   $0x000000,0x000040(%ecx)
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06389d_case:
		mov    %ecx,%eax
		call   _063760_func
		mov    %ecx,%eax
		call   _0252c0_func
		cmpb   $0x000004,_0e3d46_data
		jne    _0638be_jump
		call   _061f60_func
		call   _062904_func

	_0638be_jump:
		cmpb   $0x000000,_0e3d46_data
		jne    _063bc9_case
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0638df_case:
		mov    %ecx,%eax
		call   _0252c0_func
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _063bc9_case
		mov    _0e3d46_data,%al
		test   %al,%al
		jne    _063bc9_case
		mov    $0x000005,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063916_case:
		mov    %ecx,%eax
		call   _0252c0_func
		cmpb   $0x000023,0x00006b(%ecx)
		jne    _063981_jump
		movswl %bx,%eax
		shl    $0x000002,%eax
		mov    0x00000c(%ecx),%ebx
		add    %eax,%ebx
		movswl %dx,%eax
		mov    (%ebx),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _063981_jump
		mov    0x000032(%ecx),%edx
		mov    $0x000099,%eax
		sar    $0x000010,%edx
		xor    %ebx,%ebx
		call   _06f35c_func
		jmp    _063965_jump

	_06395b_jump:
		xor    %eax,%eax
		mov    %bl,%al
		call   _06222c_func
		inc    %ebx

	_063965_jump:
		xor    %eax,%eax
		mov    _0e3d45_data,%al
		cmp    %ax,%bx
		jge    _063bc9_case
		cmp    $0x000005,%bx
		jl     _06395b_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063981_jump:
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _063bc9_case
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0639a7_case:
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x00fffe,0x000042(%ecx)
		call   _01cbd0_func
		test   %al,%al
		je     _063bc9_case
		mov    $0x000001,%edx
		mov    0x000081(%ecx),%al
		movl   $0x000000,0x000024(%ecx)
		and    $0x0000fb,%al
		xor    %ebx,%ebx
		mov    %al,0x000081(%ecx)

	_0639de_jump:
		movswl %bx,%eax
		imul   $0x000014,%eax,%eax
		movb   $0x000002,_0e3cee_data(%eax)
		mov    %dx,_0e3ce0_data(%eax)
		xor    %ch,%ch
		mov    %ch,_0e3ced_data(%eax)
		mov    $0x00000f,%ecx
		add    %edx,%ebx
		mov    %cx,_0e3ce4_data(%eax)
		cmp    $0x000005,%bx
		jl     _0639de_jump
		movb   $0x000002,_0e3d46_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063a1b_jump:
		cmp    $0x000008,%ax
		ja     _063bc9_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0637cc_switch(,%eax,4)

	_063a32_case:
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		call   _01cbd0_func
		test   %al,%al
		jne    _063a58_jump
		cmpb   $0x000001,0x000076(%ecx)
		jne    _063bc9_case
		cmpw   $0x000000,0x000042(%ecx)
		jl     _063bc9_case

	_063a58_jump:
		mov    $0x000001,%dh
		mov    0x000076(%ecx),%bl
		mov    %dh,_0e3d44_data
		sub    %dh,%bl
		mov    %bl,0x000076(%ecx)
		jne    _063a7e_jump
		mov    $0x000007,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063a7e_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063a95_case:
		andb   $0x0000f7,0x000081(%ecx)
		mov    0x00006b(%ecx),%ah
		movw   $0x000000,0x000040(%ecx)
		cmp    $0x000006,%ah
		jae    _063ab7_jump
		mov    %ecx,%eax
		call   _061e50_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063ab7_jump:
		movw   $0x00fffe,0x000042(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063ac3_case:
		mov    %ecx,%eax
		call   _063760_func

	_063aca_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063adc_case:
		mov    0x00006b(%ecx),%bh
		movw   $0x00fffe,0x000042(%ecx)
		cmp    $0x00000f,%bh
		jb     _063af0_jump
		movw   $0x000000,0x000042(%ecx)

	_063af0_jump:
		movw   $0x000000,0x000050(%ecx)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063afc_case:
		movw   $0x000000,0x000042(%ecx)
		call   _061f7c_func
		test   %al,%al
		je     _063bc9_case
		cmpb   $0x000000,_0e3d46_data
		jne    _063b1f_jump
		movb   $0x000001,_0e3d46_data

	_063b1f_jump:
		mov    0x000050(%ecx),%si
		inc    %esi
		mov    _0e3d42_data,%di
		mov    %si,0x000050(%ecx)
		cmp    %di,%si
		je     _063b41_jump
		cmpb   $0x000005,_0e3d49_data
		jne    _063bc9_case

	_063b41_jump:
		mov    $0x000004,%ebx
		mov    $0x000002,%edx
		movb   $0x000000,0x000071(%ecx)
		mov    %ecx,%eax
		movb   $0x000003,0x000072(%ecx)
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063b60_case:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%bx
		mov    0x000069(%ecx),%al
		mov    _0ced00_data,%dx
		add    %ebx,%eax
		add    $0x0000a0,%edx
		movswl %ax,%ebx
		movswl %dx,%eax
		mov    %ebx,%edx
		call   _062040_func
		cwtl   
		sub    %ebx,%eax
		cmp    $0x000005,%eax
		jge    _063bc9_case
		mov    $0x000005,%ebx
		mov    $0x000002,%edx
		movw   $0x000001,0x000042(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000050(%ecx)
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063bb0_case:
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _063bc9_case
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func

	_063bc9_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063bd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _061ea0_func
		mov    $0x000096,%edx
		mov    $0x000046,%ebx
		movb   $0x000006,0x000076(%ecx)
		xor    %ah,%ah
		movb   $0x000006,0x000077(%ecx)
		mov    %ah,_0e3d4a_data
		mov    %ah,_0e3d47_data
		mov    %ah,_0e3d46_data
		mov    %ah,_0e3d48_data
		mov    _096e76_data,%al
		mov    %dx,_0e3d42_data
		mov    %al,_0e3d49_data
		xor    %eax,%eax
		mov    %bx,_0e3d40_data
		mov    _0e3d49_data,%al
		mov    $0x000002,%edx
		xor    %bh,%bh
		mov    _096e70_data(%eax),%al
		mov    %bh,_0e3d44_data
		mov    %al,_0e3d45_data
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000f7,%al
		mov    $0x000006,%ebx
		mov    %al,0x000081(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _01d374_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000008(%eax),%eax
		mov    0x000032(%eax),%al
		mov    %al,0x00006a(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063c78_func:
		call   _063bd0_func
		mov    _0ced00_data,%ax
		mov    %ax,_0cecb8_data
		mov    %ax,_0cecaa_data
		mov    _0cecea_data,%ax
		mov    %ax,_0cecb6_data
		mov    %ax,_0cecac_data
		ret    



_063ca4_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmp    $0x000005,%dx
		jne    _063ce8_jump
		cmpb   $0x000000,_0e3d44_data
		jne    _063ce8_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _063ce8_jump
		cmpb   $0x000003,0x00006c(%ecx)
		jne    _063ce8_jump
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d374_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fffe,0x000042(%ecx)
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000008,0x000072(%ecx)

	_063ce8_jump:
		pop    %ecx
		pop    %ebx
		ret    



_063cec_func:
		push   %edx
		mov    $0x000028,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0cdaea_data
		pop    %edx
		ret    



_063d00_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _063d4e_jump
		cmpb   $0x00000a,0x00006c(%ecx)
		jne    _063d4e_jump
		mov    %ecx,%eax
		call   _0255d0_func
		mov    0x00004e(%ecx),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x000001,%bl
		xor    %edx,%edx
		mov    %bl,_0e3ced_data(,%eax,4)
		mov    $0x000009,%ebx
		mov    %ecx,%eax
		call   _01d374_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063d4e_jump:
		mov    0x00006d(%ecx),%dh
		cmp    $0x000002,%dh
		jne    _063db9_jump
		cmpb   $0x00000b,0x00006c(%ecx)
		jne    _063db9_jump
		mov    _0e3d49_data,%al
		cmp    $0x000001,%al
		je     _063d6d_jump
		cmp    %dh,%al
		jne    _063e09_jump

	_063d6d_jump:
		mov    0x00004e(%ecx),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x000001,%dl
		mov    %dl,_0e3ced_data(,%eax,4)
		call   _061f7c_func
		test   %al,%al
		je     _063d94_jump
		mov    %dl,_0e3d46_data

	_063d94_jump:
		mov    %ecx,%eax
		mov    $0x000009,%ebx
		call   _0255d0_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d374_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063db9_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _063e09_jump
		cmpb   $0x00000e,0x00006c(%ecx)
		jne    _063e09_jump
		mov    0x000072(%ecx),%al
		mov    0x000042(%ecx),%dx
		mov    0x000071(%ecx),%ah
		neg    %edx
		sub    %ah,%al
		mov    %dx,0x000042(%ecx)
		xor    %edx,%edx
		mov    %al,0x000071(%ecx)
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x0000f0,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x000002,%bh
		mov    %bh,0x000005(%edx,%eax,8)
		mov    %ecx,%eax
		call   _0255d0_func

	_063e09_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063e10_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _063e49_jump
		cmpb   $0x000007,0x00006c(%ecx)
		jne    _063e49_jump
		mov    $0x000008,%ebx
		mov    $0x000002,%edx
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _0255d0_func
		mov    %ecx,%eax
		call   _01d374_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_063e49_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _063eb6_jump
		cmpb   $0x000005,0x00006c(%ecx)
		jne    _063eb6_jump
		movw   $0x000000,0x000040(%ecx)
		mov    _0cec96_data,%dx
		movw   $0x000000,0x000042(%ecx)
		test   %dx,%dx
		jne    _063ea1_jump
		cmpw   $0x000000,0x000050(%ecx)
		jne    _063e98_jump
		mov    %ecx,%eax
		call   _0255d0_func
		mov    %ecx,%eax
		call   _053ac8_func
		mov    0x000032(%ecx),%edx
		mov    $0x00003e,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		movw   $0x000001,0x000050(%ecx)

	_063e98_jump:
		movw   $0x000001,_0cec96_data

	_063ea1_jump:
		cmpb   $0x000001,_0e3d46_data
		jne    _063eb6_jump
		movb   $0x000002,_0e3d46_data
		call   _061f60_func

	_063eb6_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_063ec0_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ecx
		movl   $0x000100,_0e3d4c_data
		xor    %edx,%edx
		mov    %ax,%dx
		add    $0x00000f,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000004,%edx
		sbb    %edx,%eax
		sar    $0x000004,%eax
		mov    $_0e3d4c_data,%ebx
		mov    %eax,_0e3d50_data
		mov    %ebx,%edx
		mov    $0x000031,%eax
		call   _07cf52_func
		testb  $0x000001,_0e3d64_data
		je     _063f0d_jump
		movl   $0x000000,(%ecx)
		xor    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_063f0d_jump:
		xor    %edx,%edx
		mov    _0e3d4c_data,%dx
		shl    $0x000010,%edx
		mov    %edx,(%ecx)
		mov    _0e3d58_data,%ax
		pop    %ecx
		pop    %ebx
		ret    



_063f24_func:
		push   %ebx
		push   %edx
		mov    $0x000101,%edx
		mov    $_0e3d4c_data,%ebx
		mov    %ax,_0e3d58_data
		mov    $0x000031,%eax
		mov    %dx,_0e3d4c_data
		mov    %ebx,%edx
		call   _07cf52_func
		testb  $0x000001,_0e3d64_data
		setne  %al
		pop    %edx
		pop    %ebx
		ret    



_063f58_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %al,%cl
		mov    %edx,%esi
		mov    $0x00001c,%ebx
		mov    $_0e3d4c_data,%eax
		xor    %edx,%edx
		call   _07c050_func
		mov    $0x00000c,%ebx
		mov    $_0e3d9c_data,%eax
		xor    %edx,%edx
		call   _07c050_func
		mov    $0x000034,%ebx
		mov    $_0e3d68_data,%eax
		xor    %edx,%edx
		call   _07c050_func
		xor    %eax,%eax
		mov    (%esi),%ax
		mov    %eax,_0e3d84_data
		xor    %eax,%eax
		mov    0x000002(%esi),%ax
		mov    %eax,_0e3d78_data
		xor    %eax,%eax
		mov    0x000004(%esi),%ax
		mov    %eax,_0e3d80_data
		xor    %eax,%eax
		mov    0x000006(%esi),%ax
		mov    %eax,_0e3d7c_data
		xor    %eax,%eax
		mov    0x000008(%esi),%ax
		mov    %eax,_0e3d6c_data
		xor    %eax,%eax
		mov    0x00000a(%esi),%ax
		mov    $0x000300,%edx
		mov    %eax,_0e3d68_data
		mov    0x00000c(%esi),%ax
		mov    %cl,_0e3d50_data
		mov    %ax,_0e3d88_data
		mov    0x00000e(%esi),%ax
		xor    %ebx,%ebx
		mov    %ax,_0e3d94_data
		mov    0x000010(%esi),%ax
		mov    $_0e3d9c_data,%ecx
		mov    %ax,_0e3d8c_data
		mov    0x000012(%esi),%ax
		mov    %dx,_0e3d4c_data
		mov    %ax,_0e3d8a_data
		mov    0x000014(%esi),%ax
		mov    %bx,_0e3d54_data
		mov    %ax,_0e3d98_data
		xor    %ah,%ah
		mov    %ds,%edx
		mov    %ah,_0e3d51_data
		mov    $_0e3d68_data,%eax
		mov    $_0e3d4c_data,%ebx
		mov    %dx,_0e3d9c_data
		mov    $_0e3d68_data,%edx
		mov    $0x000031,%eax
		mov    %edx,_0e3d60_data
		mov    %ebx,%edx
		call   _081583_func
		mov    _0e3d84_data,%ax
		mov    %ax,(%esi)
		mov    _0e3d78_data,%ax
		mov    %ax,0x000002(%esi)
		mov    _0e3d80_data,%ax
		mov    %ax,0x000004(%esi)
		mov    _0e3d7c_data,%ax
		mov    %ax,0x000006(%esi)
		mov    _0e3d6c_data,%ax
		mov    %ax,0x000008(%esi)
		mov    _0e3d68_data,%ax
		mov    %ax,0x00000a(%esi)
		mov    _0e3d88_data,%ax
		mov    %ax,0x00000c(%esi)
		mov    _0e3d94_data,%ax
		mov    %ax,0x00000e(%esi)
		mov    _0e3d8c_data,%ax
		mov    %ax,0x000010(%esi)
		mov    _0e3d8a_data,%ax
		mov    %ax,0x000012(%esi)
		mov    _0e3d98_data,%ax
		mov    %ax,0x000014(%esi)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_0640d0_switch:
		.long   _064121_case
		.long   _06414e_case
		.long   _064128_case
		.long   _06414e_case
		.long   _06412f_case
		.long   _06414e_case
		.long   _06414e_case
		.long   _064136_case
		.long   _06414e_case
		.long   _06413d_case
		.long   _06414e_case
		.long   _064144_case




_064100_func:
		push   %ebx
		push   %edx
		mov    %al,%bl
		mov    _0cdb20_data,%eax
		mov    0x00006c(%eax),%dl
		dec    %dl
		cmp    $0x00000b,%dl
		ja     _06414e_case
		and    $0x0000ff,%edx
		jmp    *%cs:_0640d0_switch(,%edx,4)

	_064121_case:
		mov    $0x000002,%edx
		jmp    _064149_jump

	_064128_case:
		mov    $0x000004,%edx
		jmp    _064149_jump

	_06412f_case:
		mov    $0x000006,%edx
		jmp    _064149_jump

	_064136_case:
		mov    $0x000009,%edx
		jmp    _064149_jump

	_06413d_case:
		mov    $0x00000b,%edx
		jmp    _064149_jump

	_064144_case:
		mov    $0x00000d,%edx

	_064149_jump:
		call   _01d364_func

	_06414e_case:
		test   %bl,%bl
		je     _06415b_jump
		mov    _0cdb20_data,%eax
		movb   $0x000007,0x00006b(%eax)

	_06415b_jump:
		pop    %edx
		pop    %ebx
		ret    



_064160_func:
		push   %ebx
		push   %edx
		mov    _0cdbb4_data,%eax
		mov    _0cece8_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		cwtl   
		sub    %edx,%eax
		mov    _0cdb20_data,%edx
		mov    %ax,0x000038(%edx)
		mov    _0ced00_data,%bx
		mov    0x000028(%edx),%ax
		sub    %ebx,%eax
		add    $0x000008,%eax
		mov    %ax,0x000036(%edx)
		pop    %edx
		pop    %ebx
		ret    

_06419c_switch:
		.long   _0643fa_case
		.long   _064403_case
		.long   _0643e8_case
		.long   _064403_case
		.long   _0643d6_case
		.long   _064403_case
		.long   _064403_case
		.long   _0643f3_case
		.long   _064403_case
		.long   _0643e1_case
		.long   _064403_case
		.long   _0643cf_case




_0641cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000002,_0cdb01_data
		jne    _0641f0_jump
		mov    _0cdb00_data,%dl
		cmp    $0x000019,%dl
		je     _0641e9_jump
		cmp    $0x00001a,%dl
		jne    _0641f0_jump

	_0641e9_jump:
		mov    $0x00001d,%edx
		jmp    _06422f_jump

	_0641f0_jump:
		cmpb   $0x000002,_0cdb01_data
		jne    _064210_jump
		mov    _0cdb00_data,%bh
		cmp    $0x00001b,%bh
		je     _064209_jump
		cmp    $0x00001c,%bh
		jne    _064210_jump

	_064209_jump:
		mov    $0x00001e,%edx
		jmp    _06422f_jump

	_064210_jump:
		cmpb   $0x000002,_0cdb01_data
		jne    _06422a_jump
		mov    _0cdb00_data,%al
		cmp    $0x000011,%al
		je     _064239_jump
		cmp    $0x000012,%al
		je     _064239_jump
		cmp    $0x000013,%al
		je     _064239_jump

	_06422a_jump:
		mov    $0x00000d,%edx

	_06422f_jump:
		mov    $_0cda94_data,%eax
		call   _01d364_func

	_064239_jump:
		cmpb   $0x000000,_0cdb01_data
		jne    _06429d_jump
		testb  $0x000008,_0cdb15_data
		je     _064272_jump
		mov    _0cdbba_data,%edx
		sar    $0x000010,%edx
		shl    $0x00000a,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    %eax,%edx
		mov    _0ceca0_data,%eax
		sar    $0x000010,%eax
		sub    %edx,%eax
		jmp    _064297_jump

	_064272_jump:
		mov    _0cdbba_data,%edx
		sar    $0x000010,%edx
		shl    $0x00000a,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    %eax,%edx
		mov    _0ceca0_data,%eax
		sar    $0x000010,%eax
		add    %edx,%eax

	_064297_jump:
		mov    %ax,_0ceca2_data

	_06429d_jump:
		mov    _0cdb20_data,%eax
		mov    _0cdb15_data,%dl
		xor    %bh,%bh
		and    $0x000008,%dl
		mov    %bh,_0cdbc4_data
		mov    0x000081(%eax),%dh
		mov    %bh,_0cdbc5_data
		and    $0x0000f7,%dh
		mov    %bh,_0cdbc1_data
		mov    %dh,%bl
		mov    %dh,0x000081(%eax)
		or     %dl,%bl
		mov    %bl,0x000081(%eax)
		mov    0x000081(%eax),%bh
		movl   $0x000001,0x000024(%eax)
		or     $0x000004,%bh
		mov    %bh,0x000081(%eax)
		mov    _0cecd0_data,%eax
		mov    $0x000001,%cl
		sar    $0x000010,%eax
		mov    %cl,_0cdbc2_data
		call   _01f334_func
		mov    _0cdb20_data,%eax
		call   _01f304_func
		mov    _0cdb20_data,%eax
		xor    %ch,%ch
		movw   $0x000000,0x000042(%eax)
		xor    %ebx,%ebx
		movw   $0x00ffff,0x00004a(%eax)
		xor    %edx,%edx
		mov    0x00006e(%eax),%bl
		mov    0x00006f(%eax),%dl
		mov    %ch,0x00006b(%eax)
		call   _01d374_func
		mov    _0cdb20_data,%eax
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		mov    0x00000c(%eax),%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    0x00006c(%eax),%dl
		mov    0x000002(%ebx,%edx,8),%dl
		mov    %dl,0x00006a(%eax)
		mov    _0cec9e_data,%edx
		mov    _0cec9a_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		mov    %ebx,0x000028(%eax)
		mov    _0cdb15_data,%cl
		lea    0x000028(%eax),%edx
		test   $0x000008,%cl
		je     _064387_jump
		mov    $0xfffffffb,%eax
		jmp    _06438c_jump

	_064387_jump:
		mov    $0x000005,%eax

	_06438c_jump:
		mov    (%edx),%ebx
		mov    $0x000004,%cl
		add    %eax,%ebx
		mov    _0cdbbc_data,%ax
		mov    %ebx,(%edx)
		test   %ax,%ax
		js     _0643a4_jump
		sar    %cl,%ax
		jmp    _0643ad_jump

	_0643a4_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0643ad_jump:
		inc    %al
		mov    %al,_0cdbc3_data
		mov    _0cdb20_data,%eax
		mov    0x00006e(%eax),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _064403_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06419c_switch(,%eax,4)

	_0643cf_case:
		addb   $0x000002,_0cdbc3_data

	_0643d6_case:
		movw   $0x00000b,_0cdbba_data
		jmp    _064403_case

	_0643e1_case:
		addb   $0x000002,_0cdbc3_data

	_0643e8_case:
		movw   $0x000008,_0cdbba_data
		jmp    _064403_case

	_0643f3_case:
		addb   $0x000002,_0cdbc3_data

	_0643fa_case:
		movw   $0x000005,_0cdbba_data

	_064403_case:
		testb  $0x000008,_0cdb15_data
		je     _064416_jump
		cmpw   $0x000000,_0ceca2_data
		jg     _064429_jump

	_064416_jump:
		testb  $0x000008,_0cdb15_data
		jne    _064449_jump
		cmpw   $0x000000,_0ceca2_data
		jge    _064449_jump

	_064429_jump:
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		xor    %ebx,%ebx
		test   %eax,%eax
		jge    _064439_jump
		neg    %eax

	_064439_jump:
		sub    $0x000005,%eax
		cmp    %ebx,%eax
		jge    _064442_jump
		mov    %ebx,%eax

	_064442_jump:
		add    %ax,_0cdbba_data

	_064449_jump:
		mov    _0cdbb8_data,%eax
		mov    $0x000010,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _06445c_jump
		mov    %ebx,%eax

	_06445c_jump:
		mov    %eax,%edx
		mov    %ax,_0cdbba_data
		mov    _0cdb20_data,%eax
		testb  $0x000008,0x000081(%eax)
		je     _064481_jump
		mov    0x000028(%eax),%esi
		mov    %dx,0x000040(%eax)
		add    $0x00000b,%esi
		mov    %esi,0x000028(%eax)
		jmp    _064490_jump

	_064481_jump:
		mov    0x000028(%eax),%ecx
		neg    %edx
		sub    $0x00000b,%ecx
		mov    %dx,0x000040(%eax)
		mov    %ecx,0x000028(%eax)

	_064490_jump:
		mov    _0cdbba_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000006,%eax
		add    %eax,%edx
		add    %edx,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		shl    $0x000006,%edx
		sbb    %edx,%eax
		sar    $0x000006,%eax
		mov    _0cdbb8_data,%edx
		sar    $0x000010,%edx
		mov    %eax,%ebx
		lea    0x000000(,%edx,4),%eax
		add    $0x000028,%ebx
		sub    %edx,%eax
		mov    $0x000008,%cl
		sub    %eax,%ebx
		mov    _0cdbbc_data,%ax
		mov    %bx,_0cdbbe_data
		cwtl   
		shl    %cl,%eax
		mov    %ax,_0cdbb8_data
		mov    %ax,_0cdbbc_data
		mov    _0cdbb8_data,%edx
		cwtl   
		sar    $0x000010,%edx
		imul   %eax,%edx
		mov    _0cdbbc_data,%ebx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,_0cdbbe_data
		mov    _0cdb20_data,%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%dl
		mov    0x000074(%eax),%bl
		lea    (%edx,%ebx,1),%ecx
		mov    _0cecb8_data,%edx
		mov    _0cec9c_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		sar    %ecx
		add    %ebx,%edx
		sub    %ecx,%edx
		mov    %edx,0x00002c(%eax)
		mov    $0x000004,%cl
		mov    0x00002c(%eax),%ax
		cwtl   
		shl    %cl,%eax
		mov    %eax,_0cdbb4_data
		call   _064160_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064550_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0cdaa0_data,%eax
		lea    (%eax,%edx,1),%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0cdb00_data,%dl
		testb  $0x000002,0x000007(%ebx,%edx,8)
		je     _064628_jump
		cmpb   $0x000002,_0cdb01_data
		jne    _0645f8_jump
		cmpw   $0x000000,_0cdad6_data
		jle    _0645ae_jump
		mov    0x000008(%eax),%eax
		mov    0x00006d(%eax),%bh
		mov    0x000015(%eax),%dl
		and    $0x00000f,%bh
		and    $0x0000f0,%dl
		mov    %bh,%cl
		mov    %bh,0x00006d(%eax)
		or     %dl,%cl
		mov    %cl,0x00006d(%eax)
		jmp    _0645c7_jump

	_0645ae_jump:
		mov    0x000008(%eax),%eax
		mov    0x000005(%eax),%dl
		and    $0x0000f0,%dl
		mov    0x00006d(%eax),%dh
		and    $0x00000f,%dh
		mov    %dh,%bl
		mov    %dh,0x00006d(%eax)
		or     %dl,%bl
		mov    %bl,0x00006d(%eax)

	_0645c7_jump:
		mov    $0x000020,%esi
		mov    $0xffffffff,%edi
		mov    %si,_0cdbbc_data
		call   _0641cc_func
		mov    _0cec70_data,%ch
		mov    %di,_0cecfc_data
		test   $0x000008,%ch
		je     _064628_jump
		xor    %al,%al
		mov    %al,_0ceec3_data
		jmp    _064628_jump

	_0645f8_jump:
		call   _06a8a4_func
		mov    $0x00000b,%edx
		mov    $_0cda94_data,%eax
		mov    $0x000005,%ebx
		call   _01d364_func
		mov    $0x000001,%al
		mov    %bx,_0cdbbc_data
		xor    %edx,%edx
		mov    %al,_0cdbc4_data
		mov    %dx,_0cebba_data

	_064628_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064630_func:
		push   %edx
		mov    _0cdbbc_data,%dx
		inc    %edx
		mov    %dx,_0cdbbc_data
		cmp    $0x000040,%dx
		jl     _06464f_jump
		movw   $0x00003f,_0cdbbc_data

	_06464f_jump:
		pop    %edx
		ret    



_064654_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %al,%dl
		mov    _0cdb20_data,%ebx
		mov    0x000048(%ebx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _0646fb_jump
		mov    %eax,%ecx
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0cc1f0_data,%ecx
		shl    $0x000002,%eax
		add    %ecx,%eax
		movw   $0x000000,0x000040(%eax)
		movw   $0x000000,0x000042(%eax)
		movw   $0x00ffff,0x00004a(%ebx)
		test   %dl,%dl
		jne    _06469f_jump
		testb  $0x000004,0x000081(%ebx)
		jne    _0646e5_jump

	_06469f_jump:
		mov    _0cdabc_data,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _0cdafc_data,%bl
		mov    0x000068(%eax),%cl
		add    %edx,%ebx
		sub    %ecx,%ebx
		xor    %ecx,%ecx
		mov    %ebx,0x000028(%eax)
		xor    %ebx,%ebx
		mov    0x000069(%eax),%cl
		mov    0x000074(%eax),%bl
		lea    (%ebx,%ecx,1),%edx
		mov    _0cecb8_data,%ebx
		mov    _0cec9c_data,%ecx
		sar    $0x000010,%ebx
		sar    $0x000010,%ecx
		sar    %ebx
		add    %ecx,%ebx
		sar    %edx
		sub    $0x000005,%ebx
		sub    %edx,%ebx
		jmp    _0646f8_jump

	_0646e5_jump:
		test   %dl,%dl
		jne    _0646fb_jump
		mov    0x00003a(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,0x000028(%eax)
		mov    0x00003c(%eax),%ebx
		sar    $0x000010,%ebx

	_0646f8_jump:
		mov    %ebx,0x00002c(%eax)

	_0646fb_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064700_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    0x000048(%eax),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc1f0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x000040(%edx),%bx
		mov    %bx,0x000040(%eax)
		mov    0x000042(%edx),%dx
		mov    %dx,0x000042(%eax)
		mov    _0cdae8_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		jne    _064740_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _064747_jump

	_064740_jump:
		xor    %eax,%eax
		call   _064654_func

	_064747_jump:
		pop    %edx
		pop    %ebx
		ret    



_06474c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x00003e(%eax),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06475d_jump
		neg    %eax

	_06475d_jump:
		cmp    $0x00000b,%eax
		jl     _064766_jump
		mov    $0x000002,%al
		jmp    _06478a_jump

	_064766_jump:
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _064772_jump
		neg    %eax

	_064772_jump:
		cmp    $0x000008,%eax
		jl     _06477b_jump
		mov    $0x000001,%al
		jmp    _06478a_jump

	_06477b_jump:
		cmpb   $0x000000,_0cee3f_data
		je     _064788_jump
		mov    $0x000001,%al
		jmp    _06478a_jump

	_064788_jump:
		xor    %al,%al

	_06478a_jump:
		testb  $0x000008,0x000081(%edx)
		je     _0647a3_jump
		mov    0x000040(%edx),%cx
		xor    %ah,%ah
		sub    %eax,%ecx
		mov    %cx,0x000040(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0647a3_jump:
		mov    0x000040(%edx),%bx
		xor    %ah,%ah
		add    %eax,%ebx
		mov    %bx,0x000040(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0647b4_func:
		push   %ebx
		push   %edx
		xor    %ah,%ah
		mov    %ah,_0cdbc2_data
		mov    %ah,_0cdbc5_data
		mov    %ah,_0cdbc1_data
		mov    _0cdb20_data,%eax
		mov    $0x000005,%edx
		movl   $0x000000,0x000024(%eax)
		mov    %dx,_0cdbbc_data
		mov    0x000081(%eax),%bl
		mov    0x00006e(%eax),%dl
		and    $0x0000fb,%bl
		mov    %dl,0x00006c(%eax)
		mov    %bl,0x000081(%eax)
		xor    %eax,%eax
		call   _064654_func
		pop    %edx
		pop    %ebx
		ret    



_064804_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		cmpb   $0x000000,_0cdbc2_data
		je     _064a4e_jump
		cmpw   $0x000000,0x000040(%esi)
		je     _0649eb_jump
		call   _064160_func
		mov    _0cdbb4_data,%eax
		sar    $0x000004,%eax
		mov    _0cdbbc_data,%di
		mov    %eax,0x00002c(%esi)
		test   %di,%di
		jle    _064879_jump
		mov    _0cdbbe_data,%cx
		cmp    %cx,%di
		jge    _064856_jump
		xor    %eax,%eax
		mov    %ax,_0cdbbc_data
		jmp    _06485f_jump

	_064856_jump:
		sub    %ecx,%edi
		mov    %di,_0cdbbc_data

	_06485f_jump:
		cmpw   $0x000000,_0cdbbc_data
		jne    _0649d2_jump
		xor    %eax,%eax
		call   _064100_func
		jmp    _0649d2_jump

	_064879_jump:
		mov    _0cdbc1_data,%cl
		test   %cl,%cl
		jne    _06488f_jump
		mov    %esi,%eax
		call   _06474c_func
		jmp    _0649d2_jump

	_06488f_jump:
		cmp    $0x000001,%cl
		jne    _0649d2_jump
		mov    0x00003e(%esi),%eax
		mov    _0cdbb8_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		test   %eax,%eax
		jge    _0648ad_jump
		neg    %eax

	_0648ad_jump:
		cmp    %edx,%eax
		jge    _0648b8_jump
		mov    %esi,%eax
		call   _06474c_func

	_0648b8_jump:
		mov    _0cec9e_data,%eax
		mov    _0cec9a_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,%eax
		testb  $0x000008,0x000081(%esi)
		je     _0648e4_jump
		add    $0x00000b,%eax
		jmp    _0648e7_jump

	_0648e4_jump:
		sub    $0x00000b,%eax

	_0648e7_jump:
		cmpb   $0x000004,_0cdb01_data
		jne    _064901_jump
		testb  $0x000008,0x000081(%esi)
		je     _0648fe_jump
		add    $0x00000b,%eax
		jmp    _064901_jump

	_0648fe_jump:
		sub    $0x00000b,%eax

	_064901_jump:
		mov    _0cecb8_data,%ecx
		mov    _0cec9c_data,%edi
		xor    %ebx,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ecx
		mov    0x000069(%esi),%bl
		mov    0x000074(%esi),%dl
		sar    $0x000010,%edi
		add    %edx,%ebx
		sar    %ecx
		sar    %ebx
		add    %ecx,%edi
		sub    %ebx,%edi
		mov    0x000081(%esi),%bh
		shl    $0x000004,%edi
		test   $0x000008,%bh
		je     _06493a_jump
		cmp    0x000028(%esi),%eax
		jge    _064948_jump

	_06493a_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _064952_jump
		cmp    0x000028(%esi),%eax
		jg     _064952_jump

	_064948_jump:
		call   _0647b4_func
		jmp    _0649d2_jump

	_064952_jump:
		mov    _0cdbb4_data,%ecx
		mov    %edi,%ebx
		mov    0x000028(%esi),%dx
		sub    %ecx,%ebx
		sub    %dx,%ax
		je     _064973_jump
		movswl %ax,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %eax,%ebx

	_064973_jump:
		mov    0x000040(%esi),%ax
		imul   %eax,%ebx
		mov    _0cdbb4_data,%ebp
		mov    %ebp,%eax
		mov    %bx,0x000042(%esi)
		mov    %edi,%ebx
		mov    0x000040(%esi),%edx
		cmp    %ebx,%eax
		jge    _064991_jump
		mov    %ebx,%eax

	_064991_jump:
		mov    %eax,%ecx
		mov    %edi,%ebx
		mov    _0cdbb4_data,%eax
		sar    $0x000010,%edx
		cmp    %ebx,%eax
		jle    _0649a3_jump
		mov    %ebx,%eax

	_0649a3_jump:
		add    %ebp,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jl     _0649b8_jump
		cmp    %ecx,%eax
		jg     _0649b8_jump
		mov    $0x000001,%eax
		jmp    _0649ba_jump

	_0649b8_jump:
		xor    %eax,%eax

	_0649ba_jump:
		test   %eax,%eax
		je     _0649c5_jump
		sarw   $0x000004,0x000042(%esi)
		jmp    _0649d2_jump

	_0649c5_jump:
		sub    _0cdbb4_data,%edi
		sar    $0x000004,%edi
		mov    %di,0x000042(%esi)

	_0649d2_jump:
		cmpb   $0x000000,_0cdbc5_data
		jne    _064a3c_jump
		cmpb   $0x000000,_0cdbc2_data
		je     _064a3c_jump
		call   _02d02c_func
		jmp    _064a3c_jump

	_0649eb_jump:
		cmpb   $0x000000,_0cdbc5_data
		je     _064a22_jump
		cmpb   $0x000000,_0cdbc1_data
		jne    _064a22_jump
		mov    $0x000001,%eax
		call   _064100_func
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000002(%edx,%eax,8),%al
		mov    %al,0x00006a(%esi)

	_064a22_jump:
		movb   $0x000001,_0cdbc1_data
		testb  $0x000008,0x000081(%esi)
		je     _064a38_jump
		decw   0x000040(%esi)
		jmp    _064a3c_jump

	_064a38_jump:
		incw   0x000040(%esi)

	_064a3c_jump:
		mov    0x000048(%esi),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _064a4e_jump
		mov    %esi,%eax
		call   _064700_func

	_064a4e_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064a58_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000020,%esp
		mov    _0cc1f0_data,%esi
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _064b4f_jump

	_064a77_jump:
		cmpw   $0x00000b,0x000060(%esi)
		jne    _064b3f_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _064b3f_jump
		mov    %esi,%eax
		call   _01f304_func
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%eax
		lea    0x000018(%esp),%ebx
		push   %eax
		xor    %edx,%edx
		mov    _0cdb20_data,%eax
		call   _01d710_func
		lea    0x000018(%esp),%eax
		lea    0x00001c(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		movb   $0x000000,0x00006b(%esi)
		xor    %eax,%eax
		mov    0x000012(%esp),%edx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    _0cdb20_data,%eax
		mov    %edx,0x000028(%esi)
		cmpw   $0x000000,0x000040(%eax)
		jle    _064af5_jump
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		lea    (%edx,%eax,1),%ecx
		mov    %ecx,0x000028(%esi)

	_064af5_jump:
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%dl
		mov    0x000074(%esi),%al
		add    %edx,%eax
		mov    0x000006(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		sar    %eax
		add    %ebx,%edx
		sub    %eax,%edx
		mov    %esi,%eax
		mov    %edx,0x00002c(%esi)
		call   _01db8c_func
		mov    0x000081(%esi),%ah
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%ah
		mov    %ah,0x000081(%esi)
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064b3f_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _064a77_jump

	_064b4f_jump:
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064b60_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02f088_func
		testb  $0x000008,0x000081(%ecx)
		jne    _064bb7_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _064bb7_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		test   %ax,%ax
		jne    _064c0c_jump

	_064bb7_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _064c47_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _064c47_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _064c47_jump

	_064c0c_jump:
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		je     _064c2b_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		and    $0x0000f7,%bh
		mov    $0x000007,%edx
		mov    %bh,0x000081(%ecx)
		jmp    _064c3d_jump

	_064c2b_jump:
		mov    %dh,%bl
		mov    %ecx,%eax
		or     $0x000008,%bl
		mov    $0x000008,%edx
		mov    %bl,0x000081(%ecx)

	_064c3d_jump:
		mov    $0x000001,%ebx
		call   _05efb0_func

	_064c47_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _02e850_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064c58_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _02f088_func
		testb  $0x000008,0x000081(%ecx)
		jne    _064caf_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _064caf_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		test   %ax,%ax
		jne    _064d04_jump

	_064caf_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _064d48_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _064d48_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    $0x000003,%eax
		movswl %ax,%ebx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		add    $0x000014,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _064d48_jump

	_064d04_jump:
		mov    0x000081(%ecx),%dh
		test   $0x000008,%dh
		je     _064d23_jump
		mov    %dh,%bh
		mov    %ecx,%eax
		and    $0x0000f7,%bh
		mov    $0x00000d,%edx
		mov    %bh,0x000081(%ecx)
		jmp    _064d35_jump

	_064d23_jump:
		mov    %dh,%bl
		mov    %ecx,%eax
		or     $0x000008,%bl
		mov    $0x00000e,%edx
		mov    %bl,0x000081(%ecx)

	_064d35_jump:
		mov    $0x000001,%ebx
		call   _05efb0_func
		mov    0x00003c(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%ecx)

	_064d48_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _064d90_jump
		cmpb   $0x000011,0x00006c(%ecx)
		jne    _064d90_jump
		mov    0x00003c(%ecx),%edx
		mov    0x00002c(%ecx),%ebx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jg     _064d90_jump
		testb  $0x000008,0x000081(%ecx)
		je     _064d76_jump
		mov    $0x000001,%ebx
		mov    $0x00000a,%edx
		jmp    _064d80_jump

	_064d76_jump:
		mov    $0x000001,%ebx
		mov    $0x000009,%edx

	_064d80_jump:
		mov    %ecx,%eax
		call   _05efb0_func
		mov    0x00003c(%ecx),%edx
		sar    $0x000010,%edx
		mov    %edx,0x00002c(%ecx)

	_064d90_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _064dda_jump
		cmpb   $0x000012,0x00006c(%ecx)
		jne    _064dda_jump
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _064dda_jump
		cmpw   $0x000005,0x000042(%ecx)
		jne    _064dbd_jump
		movl   $0x000000,0x000024(%ecx)
		movb   $0x000000,0x00007e(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_064dbd_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000005,0x000042(%ecx)
		call   _05efb0_func

	_064dda_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064de0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _064df0_jump
		cmpb   $0x000012,0x00006c(%ecx)
		je     _064e11_jump

	_064df0_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		movb   $0x000000,0x000076(%ecx)

	_064e11_jump:
		pop    %ecx
		pop    %ebx
		ret    



_064e14_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    $0x000001,%ah
		mov    _0cc1f4_data,%cx
		xor    %edx,%edx
		mov    %ah,(%esp)
		mov    _0cc1f0_data,%eax
		test   %cx,%cx
		jle    _064e64_jump

	_064e35_jump:
		cmpw   $0x00000a,0x000060(%eax)
		jne    _064e59_jump
		mov    0x00003c(%eax),%bx
		cmp    0x00003c(%esi),%bx
		jne    _064e59_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _064e59_jump
		cmpb   $0x000064,0x00007f(%eax)
		jae    _064e59_jump
		xor    %bh,%bh
		mov    %bh,(%esp)
		jmp    _064e64_jump

	_064e59_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %cx,%dx
		jl     _064e35_jump

	_064e64_jump:
		mov    (%esp),%al
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064e70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    0x000032(%eax),%eax
		mov    _0ce324_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,2),%ax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc1f0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x00002c(%edx),%ecx
		cmp    0x00002c(%eax),%ecx
		jne    _064ecb_jump
		mov    _0cece8_data,%ebx
		sar    $0x000010,%ebx
		add    $0x0000c8,%ebx
		mov    %ebx,0x00002c(%eax)
		mov    0x000081(%eax),%bl
		movl   $0x000000,0x000024(%eax)
		and    $0x0000fb,%bl
		mov    %bl,0x000081(%eax)

	_064ecb_jump:
		mov    0x000032(%eax),%eax
		mov    _0ce324_data,%ebx
		sar    $0x000010,%eax
		mov    (%ebx,%eax,2),%ax
		movswl %ax,%ebx
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc1f0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    0x00002c(%edx),%esi
		cmp    0x00002c(%eax),%esi
		jne    _064f20_jump
		movl   $0x000000,0x000024(%eax)
		mov    _0cece8_data,%edx
		mov    0x000081(%eax),%bh
		sar    $0x000010,%edx
		and    $0x0000fb,%bh
		add    $0x0000c8,%edx
		mov    %bh,0x000081(%eax)
		mov    %edx,0x00002c(%eax)

	_064f20_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_064f28_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%edx
		call   _02f088_func
		xor    %al,%al
		cmpb   $0x000000,0x00006d(%edx)
		jne    _06504e_jump
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%ecx
		mov    0x000069(%edx),%bl
		add    %ecx,%ebx
		mov    _0cece8_data,%ecx
		sar    $0x000010,%ecx
		add    $0x000014,%ebx
		add    $0x0000c8,%ecx
		cmp    %ecx,%ebx
		jge    _064f63_jump
		incb   0x00007f(%edx)

	_064f63_jump:
		mov    0x00006c(%edx),%bh
		cmp    $0x000003,%bh
		jne    _064f76_jump
		movw   $0x000000,0x000042(%edx)
		jmp    _06504e_jump

	_064f76_jump:
		cmp    $0x000009,%bh
		jne    _065011_jump
		mov    _0cece8_data,%ecx
		mov    0x00002c(%edx),%edi
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    0x000074(%edx),%bl
		add    $0x0000c8,%ecx
		add    %edi,%ebx
		movw   $0x000006,0x000042(%edx)
		cmp    %ecx,%ebx
		jg     _064fc0_jump
		xor    %ebx,%ebx
		mov    _0cda88_data,%ecx
		mov    0x000069(%edx),%bl
		sar    $0x000010,%ecx
		add    %edi,%ebx
		shl    $0x000004,%ecx
		add    $0x00000e,%ebx
		cmp    %ecx,%ebx
		jle    _06504e_jump

	_064fc0_jump:
		xor    %eax,%eax
		mov    0x00002c(%edx),%ebx
		mov    0x000069(%edx),%al
		add    %ebx,%eax
		mov    _0cda88_data,%ebx
		sar    $0x000010,%ebx
		add    $0x00000e,%eax
		shl    $0x000004,%ebx
		cmp    %ebx,%eax
		jle    _064fe4_jump
		mov    %edx,%eax
		call   _0769d0_func

	_064fe4_jump:
		mov    _0cece8_data,%eax
		sar    $0x000010,%eax
		add    $0x0000c8,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000081(%edx),%al
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%al
		mov    %al,0x000081(%edx)
		mov    %edx,%eax
		movb   $0x000000,0x00007f(%edx)
		jmp    _065049_jump

	_065011_jump:
		mov    _0cece8_data,%ecx
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%esi
		mov    0x000069(%edx),%bl
		sar    $0x000010,%ecx
		add    %esi,%ebx
		cmp    %ecx,%ebx
		jge    _06504e_jump
		add    $0x0000c8,%ecx
		mov    %ecx,0x00002c(%edx)
		mov    0x000081(%edx),%ch
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ch
		mov    %edx,%eax
		mov    %ch,0x000081(%edx)

	_065049_jump:
		call   _064e14_func

	_06504e_jump:
		cmpb   $0x000064,0x00007f(%edx)
		jne    _06505b_jump
		mov    %edx,%eax
		call   _064e14_func

	_06505b_jump:
		test   %al,%al
		je     _065146_jump
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%si
		xor    %eax,%eax
		test   %si,%si
		jle    _065146_jump

	_06507b_jump:
		cmpw   $0x00000a,0x000060(%ecx)
		jne    _065136_jump
		mov    0x00003c(%ecx),%bx
		cmp    0x00003c(%edx),%bx
		jne    _065136_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _065136_jump
		movl   $0x000001,0x000024(%ecx)
		mov    _0cece8_data,%eax
		mov    0x000081(%ecx),%bl
		sar    $0x000010,%eax
		or     $0x000004,%bl
		add    $0x0000c8,%eax
		mov    %bl,0x000081(%ecx)
		mov    %eax,0x00002c(%ecx)
		mov    _0cda88_data,%ebx
		mov    0x00003a(%edx),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		mov    0x00002c(%ecx),%esi
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		shl    $0x000004,%ebx
		mov    0x000069(%ecx),%al
		sub    $0x000010,%ebx
		add    %eax,%esi
		cmp    %ebx,%esi
		jle    _0650f6_jump
		sub    %eax,%ebx
		mov    %ecx,%eax
		mov    %ebx,0x00002c(%ecx)
		call   _0769d0_func

	_0650f6_jump:
		mov    0x00006f(%edx),%al
		mov    %al,0x00006d(%ecx)
		mov    0x00006e(%edx),%al
		mov    %al,0x00006c(%ecx)
		mov    0x000081(%ecx),%bh
		mov    0x000077(%edx),%al
		movb   $0x000000,0x00007f(%ecx)
		or     $0x000010,%bh
		mov    %al,0x000076(%ecx)
		mov    %bh,0x000081(%ecx)
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01db8c_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_065136_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %si,%ax
		jl     _06507b_jump

	_065146_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06514c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		je     _065172_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		movw   $0x000000,0x000040(%ecx)
		xor    %edx,%edx
		movw   $0x000000,0x000042(%ecx)
		jmp    _06517b_jump

	_065172_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx

	_06517b_jump:
		call   _01d374_func
		mov    %ecx,%eax
		call   _064e70_func
		mov    0x000081(%ecx),%dl
		test   $0x000008,%dl
		setne  %al
		mov    %al,0x000070(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_06519c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		cmpb   $0x000002,0x00006d(%eax)
		jne    _0651af_jump
		cmpb   $0x000010,0x00006c(%ecx)
		je     _0651b6_jump

	_0651af_jump:
		mov    $0x000001,%eax
		jmp    _0651b8_jump

	_0651b6_jump:
		xor    %eax,%eax

	_0651b8_jump:
		test   %eax,%eax
		je     _0652ac_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _0651cc_jump
		cmpb   $0x000011,0x00006c(%ecx)
		je     _0651d3_jump

	_0651cc_jump:
		mov    $0x000001,%eax
		jmp    _0651d5_jump

	_0651d3_jump:
		xor    %eax,%eax

	_0651d5_jump:
		test   %eax,%eax
		je     _0652ac_jump
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _0651e9_jump
		cmpb   $0x000012,0x00006c(%ecx)
		je     _0651f0_jump

	_0651e9_jump:
		mov    $0x000001,%eax
		jmp    _0651f2_jump

	_0651f0_jump:
		xor    %eax,%eax

	_0651f2_jump:
		test   %eax,%eax
		je     _0652ac_jump
		xor    %eax,%eax
		mov    _0cdabc_data,%edx
		mov    _0cdafc_data,%al
		mov    0x000028(%ecx),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%ecx),%dl
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _065223_jump
		mov    $0x000001,%eax
		jg     _065223_jump
		neg    %eax

	_065223_jump:
		test   %eax,%eax
		jl     _065230_jump
		testb  $0x000008,0x000081(%ecx)
		jne    _065266_jump

	_065230_jump:
		mov    _0cdabc_data,%esi
		xor    %eax,%eax
		mov    0x000028(%ecx),%edi
		mov    _0cdafc_data,%al
		xor    %edx,%edx
		add    %esi,%eax
		mov    0x000068(%ecx),%dl
		sub    %edi,%eax
		sub    %edx,%eax
		cmp    $0x000000,%eax
		je     _065259_jump
		mov    $0x000001,%eax
		jg     _065259_jump
		neg    %eax

	_065259_jump:
		test   %eax,%eax
		jge    _0652ac_jump
		testb  $0x000008,0x000081(%ecx)
		jne    _0652ac_jump

	_065266_jump:
		testb  $0x000008,0x000081(%ecx)
		je     _065277_jump
		movw   $0x000003,0x000040(%ecx)
		jmp    _06527d_jump

	_065277_jump:
		movw   $0x00fffd,0x000040(%ecx)

	_06527d_jump:
		mov    $0x000002,%edx
		mov    %ecx,%eax
		movw   $0x00fffb,0x000042(%ecx)
		call   _01d36c_func
		mov    $0x000010,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		call   _05efb0_func

	_0652ac_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0653fc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    $_094a44_data,%esi
		xor    %edx,%edx
		mov    $_0ccd1c_data,%edi
		mov    %edx,(%esp)

	_065413_jump:
		testb  $0x000001,0x000008(%esi)
		jne    _065424_jump
		cmpw   $0x000011,(%esp)
		jne    _065568_jump

	_065424_jump:
		mov    0x000034(%edi),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%edi),%al
		add    %edx,%eax
		add    $0x000008,%eax
		cmp    $0xfffffff8,%eax
		jle    _06546c_jump
		mov    _0cc4b0_data,%edx
		add    $0x00000e,%edx
		cmp    %edx,%eax
		jge    _06546c_jump
		mov    0x000036(%edi),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000069(%edi),%al
		add    %edx,%eax
		cmp    $0xfffffff6,%eax
		jle    _06546c_jump
		mov    _0cc4ac_data,%edx
		add    $0x00000c,%edx
		cmp    %edx,%eax
		jge    _06546c_jump
		mov    %edi,%eax
		call   _018ae8_func

	_06546c_jump:
		cmpb   $0x000000,_0cee8c_data
		je     _065568_jump
		cmpw   $0x000011,(%esp)
		je     _065568_jump
		xor    %eax,%eax
		mov    0x000004(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094a4c_data(%eax)
		je     _0654bd_jump
		mov    _094a44_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094a42_data(%eax),%ebx
		mov    _0cee8c_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _01964c_func

	_0654bd_jump:
		xor    %eax,%eax
		mov    0x000005(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094a4c_data(%eax)
		je     _0654f6_jump
		mov    _094a44_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094a42_data(%eax),%ebx
		mov    _0cee8c_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _01964c_func

	_0654f6_jump:
		xor    %eax,%eax
		mov    0x000006(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094a4c_data(%eax)
		je     _06552f_jump
		mov    _094a44_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094a42_data(%eax),%ebx
		mov    _0cee8c_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _01964c_func

	_06552f_jump:
		xor    %eax,%eax
		mov    0x000007(%esi),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000004,_094a4c_data(%eax)
		je     _065568_jump
		mov    _094a44_data(%eax),%ecx
		xor    %edx,%edx
		mov    _094a42_data(%eax),%ebx
		mov    _0cee8c_data,%dl
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		push   %edx
		mov    (%esi),%edx
		movswl (%esi),%eax
		sar    $0x000010,%edx
		call   _01964c_func

	_065568_jump:
		mov    (%esp),%ebx
		add    $0x000014,%esi
		inc    %ebx
		add    $0x000084,%edi
		mov    %ebx,(%esp)
		cmp    $0x000018,%bx
		jl     _065413_jump
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06558c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		xor    %ah,%ah
		mov    _0cee8c_data,%dl
		mov    %ah,(%esp)
		cmp    $0x000080,%dl
		jae    _0655bb_jump
		cmpb   $0x000000,_0cee3f_data
		jne    _0655b5_jump
		cmpb   $0x000000,_0ceea5_data
		je     _0655bb_jump

	_0655b5_jump:
		incb   _0cee8c_data

	_0655bb_jump:
		mov    $_0ccd1c_data,%ebx
		mov    $_094a44_data,%ecx
		xor    %esi,%esi

	_0655c7_jump:
		mov    0x000008(%ecx),%al
		test   $0x000004,%al
		jne    _0655d6_jump
		test   $0x000002,%al
		je     _06575e_jump

	_0655d6_jump:
		mov    %ebx,%eax
		call   _042ed4_func
		cmpb   $0x000080,_0cee8c_data
		jne    _065654_jump
		testb  $0x000004,0x000008(%ecx)
		je     _065654_jump
		xor    %eax,%eax
		mov    0x000006(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094a4c_data(%eax)
		jne    _065634_jump
		xor    %eax,%eax
		mov    0x000007(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094a4c_data(%eax)
		jne    _065634_jump
		xor    %eax,%eax
		mov    0x000004(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094a4c_data(%eax)
		jne    _065634_jump
		xor    %eax,%eax
		mov    0x000005(%ecx),%al
		imul   $0x000014,%eax,%eax
		testb  $0x000002,_094a4c_data(%eax)
		je     _065654_jump

	_065634_jump:
		mov    0x000008(%ecx),%al
		or     $0x000001,%al
		mov    %al,0x000008(%ecx)
		mov    %al,%ah
		and    $0x0000f9,%ah
		mov    $0x00002e,%edx
		mov    %ah,0x000008(%ecx)
		mov    %ebx,%eax
		call   _01d364_func
		movb   $0x000001,(%esp)

	_065654_jump:
		cmp    $0x000011,%si
		jne    _065677_jump
		mov    0x00006c(%ebx),%dh
		cmp    $0x00003b,%dh
		je     _065677_jump
		cmp    $0x00002e,%dh
		je     _065677_jump
		testb  $0x000001,0x000008(%ecx)
		je     _065677_jump
		mov    $0x00003b,%edx
		jmp    _065750_jump

	_065677_jump:
		cmp    $0x000012,%si
		je     _06569b_jump
		cmp    $0x000013,%si
		je     _06569b_jump
		cmp    $0x000014,%si
		je     _06569b_jump
		cmp    $0x000015,%si
		je     _06569b_jump
		cmp    $0x000016,%si
		je     _06569b_jump
		cmp    $0x000017,%si
		jne    _0656b8_jump

	_06569b_jump:
		mov    0x00006c(%ebx),%dl
		cmp    $0x00003a,%dl
		je     _0656b8_jump
		cmp    $0x00002e,%dl
		je     _0656b8_jump
		testb  $0x000001,0x000008(%ecx)
		je     _0656b8_jump
		mov    $0x00003a,%edx
		jmp    _065750_jump

	_0656b8_jump:
		mov    0x000009(%ecx),%dl
		cmp    $0x000005,%dl
		jbe    _0656db_jump
		cmpb   $0x000033,0x00006c(%ebx)
		jne    _0656db_jump
		mov    %ebx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _0656db_jump
		mov    $0x000034,%edx
		jmp    _065750_jump

	_0656db_jump:
		cmp    $0x000004,%dl
		jbe    _0656fb_jump
		cmpb   $0x000032,0x00006c(%ebx)
		jne    _0656fb_jump
		mov    %ebx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _0656fb_jump
		mov    $0x000033,%edx
		jmp    _065750_jump

	_0656fb_jump:
		cmp    $0x000003,%dl
		jbe    _065718_jump
		cmpb   $0x000031,0x00006c(%ebx)
		jne    _065718_jump
		mov    %ebx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _065718_jump
		mov    $0x000032,%edx
		jmp    _065750_jump

	_065718_jump:
		cmp    $0x000002,%dl
		jbe    _065735_jump
		cmpb   $0x000030,0x00006c(%ebx)
		jne    _065735_jump
		mov    %ebx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _065735_jump
		mov    $0x000031,%edx
		jmp    _065750_jump

	_065735_jump:
		cmp    $0x000001,%dl
		jbe    _065757_jump
		cmpb   $0x00002f,0x00006c(%ebx)
		jne    _065757_jump
		mov    %ebx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _065757_jump
		mov    $0x000030,%edx

	_065750_jump:
		mov    %ebx,%eax
		call   _01d364_func

	_065757_jump:
		mov    %ebx,%eax
		call   _0544fc_func

	_06575e_jump:
		add    $0x000084,%ebx
		inc    %esi
		add    $0x000014,%ecx
		cmp    $0x000018,%si
		jl     _0655c7_jump
		cmpb   $0x000000,(%esp)
		je     _0657a6_jump
		mov    $_094a44_data,%eax
		xor    %ch,%ch
		xor    %edx,%edx
		mov    %ch,_0cee8c_data
		mov    $0x000001,%cl
		mov    $0x000002,%bh

	_06578b_jump:
		mov    0x000008(%eax),%bl
		test   %bl,%bh
		jne    _06579c_jump
		and    %cl,%bl
		cmp    $0x000001,%bl
		jne    _06579c_jump
		or     %bh,0x000008(%eax)

	_06579c_jump:
		inc    %edx
		add    $0x000014,%eax
		cmp    $0x000018,%dx
		jl     _06578b_jump

	_0657a6_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0657b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cec80_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		mov    $0x000030,%ecx
		add    %edx,%eax
		mov    $_0cb978_data,%edi
		mov    $0x0000c1,%ebx
		mov    _094a54_data(,%eax,4),%esi
		mov    $0x0001c2,%edx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    $0x000002,%ah
		mov    %dx,_0cba48_data
		mov    %bx,_0cba4a_data
		xor    %dl,%dl
		mov    %ah,_0cba4c_data
		mov    %dl,_0cba4e_data
		mov    %edi,%eax
		mov    %dl,_0cba4d_data
		call   _01ec48_func
		mov    _0cec80_data,%edx
		mov    _0cba42_data,%cx
		mov    _0cba44_data,%si
		mov    _0cba46_data,%di
		sar    $0x000010,%edx
		sub    $0x000006,%ecx
		add    $0x00000a,%esi
		lea    0x000000(,%edx,4),%eax
		add    $0x000006,%edi
		add    %edx,%eax
		mov    %cx,_0cba42_data
		mov    %si,_0cba44_data
		mov    _094a50_data(,%eax,4),%al
		mov    %di,_0cba46_data
		mov    %al,_0cba4f_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_065874_switch:
		.long   _065a87_case
		.long   _065a96_case
		.long   _065aa5_case
		.long   _065ace_case
		.long   _065add_case
		.long   _065aea_case
		.long   _0658e6_case

_065890_switch:
		.long   _065909_case
		.long   _065919_case
		.long   _065993_case
		.long   _065a0d_case




_0658a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $0x00004b,%eax
		call   _07b4e8_func
		mov    _0cec80_data,%esi
		mov    %eax,%edx
		sar    $0x000010,%esi
		mov    %eax,%ebp
		lea    0x000000(,%esi,4),%eax
		add    %eax,%esi
		shl    $0x000002,%esi
		mov    _094a4e_data(%esi),%al
		dec    %al
		cmp    $0x000006,%al
		ja     _065b11_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_065874_switch(,%eax,4)

	_0658e6_case:
		mov    _0cebf8_data,%ax
		mov    _094a50_data(%esi),%bl
		cmp    $0x000003,%ax
		ja     _065b11_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_065890_switch(,%eax,4)

	_065909_case:
		mov    $_0cbb28_data,%edi
		mov    _0c252c_data,%esi
		jmp    _065af7_jump

	_065919_case:
		mov    $_0ccb98_data,%esi
		mov    _0c0c50_data,%ax
		mov    %edx,%edi
		mov    %ax,(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065932_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06594a_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065932_jump

	_06594a_jump:
		pop    %edi
		mov    $_0c0c50_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065959_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065971_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065959_jump

	_065971_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0cbb28_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _065b11_jump

	_065993_case:
		mov    $_0ccb9c_data,%esi
		mov    _0c0c50_data,%ax
		mov    %edx,%edi
		mov    %ax,(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0659ac_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0659c4_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0659ac_jump

	_0659c4_jump:
		pop    %edi
		mov    $_0c0c50_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_0659d3_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0659eb_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0659d3_jump

	_0659eb_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0cbb28_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _065b11_jump

	_065a0d_case:
		mov    $_0ccba0_data,%esi
		mov    _0c0c50_data,%ax
		mov    %edx,%edi
		mov    %ax,(%edx)
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065a26_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065a3e_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065a26_jump

	_065a3e_jump:
		pop    %edi
		mov    $_0c0c50_data,%esi
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_065a4d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065a65_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065a4d_jump

	_065a65_jump:
		pop    %edi
		mov    $0x000030,%ecx
		mov    $_0cbb28_data,%edi
		mov    %edx,%esi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		jmp    _065b11_jump

	_065a87_case:
		mov    $_0cbb28_data,%edi
		mov    _0c2308_data,%esi
		mov    $0x000005,%bl
		jmp    _065af7_jump

	_065a96_case:
		mov    $_0cbb28_data,%edi
		mov    _0c230c_data,%esi
		mov    $0x000003,%bl
		jmp    _065af7_jump

	_065aa5_case:
		mov    $_0cbb28_data,%edi
		mov    _0c2310_data,%esi
		push   %edi

	_065ab1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065ac9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065ab1_jump

	_065ac9_jump:
		pop    %edi
		xor    %bl,%bl
		jmp    _065b11_jump

	_065ace_case:
		mov    $_0cbb28_data,%edi
		mov    _0c2314_data,%esi
		mov    $0x000002,%bl
		jmp    _065af7_jump

	_065add_case:
		mov    $_0cbb28_data,%edi
		mov    _0c2318_data,%esi
		jmp    _065af5_jump

	_065aea_case:
		mov    $_0cbb28_data,%edi
		mov    _0c231c_data,%esi

	_065af5_jump:
		mov    $0x000001,%bl

	_065af7_jump:
		push   %edi

	_065af8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065b10_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065af8_jump

	_065b10_jump:
		pop    %edi

	_065b11_jump:
		mov    $0x000001,%ah
		mov    $0x0001c2,%edx
		mov    $0x00001e,%ecx
		mov    %bl,_0cbbff_data
		mov    %ah,_0cbbfc_data
		mov    %dx,_0cbbf8_data
		mov    %cx,_0cbbfa_data
		xor    %dl,%dl
		mov    $_0cbb28_data,%eax
		mov    %dl,_0cbbfe_data
		mov    %dl,_0cbbfd_data
		call   _01ec48_func
		mov    _0cbbf4_data,%si
		mov    _0cbbf6_data,%di
		mov    %ebp,%eax
		add    $0x00000a,%esi
		add    $0x000002,%edi
		mov    %si,_0cbbf4_data
		mov    %di,_0cbbf6_data
		call   _07b680_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_065b80_func:
		push   %ebx
		push   %edx
		push   %esi
		call   _01eaa8_func
		call   _0657b0_func
		call   _0658a0_func
		mov    $0x0000a0,%edx
		mov    $0x0000fa,%ebx
		mov    $0xffffffce,%esi
		xor    %ah,%ah
		mov    %dx,_0cbb20_data
		mov    %bx,_0cbb22_data
		mov    %ah,_0cbb25_data
		mov    %ah,_0cbb26_data
		mov    %dx,_0cbcd0_data
		mov    %si,_0cbcd2_data
		mov    %ah,_0cbcd5_data
		mov    %ah,_0cbcd6_data
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_065c68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		cmpb   $0x000000,_0cee72_data
		jne    _065d35_jump
		mov    _0cba48_data,%dx
		cmp    $0x0000a0,%dx
		jle    _065ca9_jump
		mov    %edx,%ebx
		mov    _0cba40_data,%cx
		sub    $0x000006,%ebx
		sub    $0x000006,%ecx
		mov    %bx,_0cba48_data
		mov    %cx,_0cba40_data

	_065ca9_jump:
		mov    _0cbbf8_data,%si
		cmp    $0x0000a0,%si
		jle    _065cd2_jump
		mov    %esi,%edi
		mov    _0cbbf0_data,%ax
		sub    $0x000006,%edi
		sub    $0x000006,%eax
		mov    %di,_0cbbf8_data
		mov    %ax,_0cbbf0_data

	_065cd2_jump:
		mov    _0cbb22_data,%dx
		cmp    $0x000125,%dx
		jge    _065cfd_jump
		mov    %edx,%ebx
		mov    _0cbb1a_data,%cx
		add    $0x000002,%ebx
		add    $0x000002,%ecx
		mov    %bx,_0cbb22_data
		mov    %cx,_0cbb1a_data

	_065cfd_jump:
		mov    _0cbcd0_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffba,%eax
		jle    _066121_jump
		mov    _0cbcd2_data,%si
		mov    _0cbcca_data,%di
		sub    $0x000002,%esi
		sub    $0x000002,%edi
		mov    %si,_0cbcd2_data
		mov    %di,_0cbcca_data
		jmp    _066121_jump

	_065d35_jump:
		cmpb   $0x000000,_0cee71_data
		jne    _066121_jump
		mov    $_0cb978_data,%edx
		mov    $_0ce35e_data,%edi
		mov    $0x000001,%ebx
		mov    %edx,%esi
		mov    %edx,0x000004(%esp)
		push   %edi

	_065d58_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065d70_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065d58_jump

	_065d70_jump:
		pop    %edi
		xor    %eax,%eax
		mov    %ebx,0x000010(%esp)
		mov    _0cba4f_data,%al
		mov    $0x000008,%esi
		mov    %eax,_0cc48c_data
		xor    %eax,%eax
		mov    %edx,%edi
		mov    _0cba4c_data,%al
		mov    %esi,0x000018(%esp)
		mov    %eax,_0cc488_data
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    _0cba46_data,%eax
		xor    %esi,%esi
		sar    $0x000010,%eax
		mov    %ecx,_0cc4c8_data
		mov    %eax,(%esp)
		test   %ecx,%ecx
		jle    _065ee7_jump
		mov    %edx,0x000024(%esp)
		xor    %edi,%edi

	_065dc3_jump:
		mov    0x000024(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		call   _01eadc_func
		mov    (%edx),%bl
		cmp    $0x00002f,%bl
		jne    _065e0c_jump
		mov    0x000004(%esp),%edx
		mov    0x00000e(%esp),%ecx
		mov    0x000016(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    0x0000d4(%edx),%al
		sar    $0x000010,%ebx
		push   %eax
		mov    %esi,%edx
		mov    $_0cb978_data,%eax
		call   _01ebec_func
		movswl %ax,%ebp
		mov    (%esp),%eax
		sar    %ebp
		sub    %ebp,%eax
		mov    %eax,%ebp
		jmp    _065e14_jump

	_065e0c_jump:
		cmp    $0x000020,%bl
		jne    _065e16_jump
		add    $0x000008,%ebp

	_065e14_jump:
		xor    %al,%al

	_065e16_jump:
		test   %al,%al
		je     _065ecc_jump
		and    $0x0000ff,%eax
		imul   $0x00000c,%eax,%eax
		mov    _0cdb24_data,%edx
		add    %eax,%edx
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,_0c1c50_data(%edi)
		mov    0x000004(%esp),%eax
		mov    0x0000d0(%eax),%eax
		sar    $0x000010,%eax
		mov    %edi,%ecx
		shl    $0x000004,%eax
		mov    %edx,0x00001c(%esp)
		mov    %eax,_0c1de0_data(%edi)
		xor    %edx,%edx
		mov    %edx,_0c1a20_data(%edi)
		jne    _065e99_jump

	_065e5f_jump:
		mov    _0cc4c8_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %esi,%edx
		sub    %eax,%edx
		shl    $0x000005,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    $0x000020,%eax
		call   _0690e0_func
		sub    $0x000010,%edx
		movswl %ax,%ebx
		add    %ebx,%edx
		mov    %edx,_0c1a20_data(%ecx)
		je     _065e5f_jump

	_065e99_jump:
		mov    $0x000020,%eax
		mov    $0xfffffff0,%edx
		call   _0690e0_func
		cwtl   
		sub    %eax,%edx
		mov    0x00001c(%esp),%eax
		mov    %edx,_0c1988_data(%ecx)
		mov    0x000009(%eax),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x00001c(%esp),%ebx
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%ebx),%al
		add    %edx,%eax
		dec    %eax
		add    %eax,%ebp

	_065ecc_jump:
		mov    0x000024(%esp),%eax
		mov    _0cc4c8_data,%edx
		add    $0x000004,%edi
		inc    %eax
		inc    %esi
		mov    %eax,0x000024(%esp)
		cmp    %edx,%esi
		jl     _065dc3_jump

	_065ee7_jump:
		mov    $_0cbb28_data,%ebx
		mov    $_0ce340_data,%edi
		mov    %ebx,%esi
		mov    %ebx,0x000008(%esp)
		push   %edi

	_065ef8_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _065f10_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _065ef8_jump

	_065f10_jump:
		pop    %edi
		xor    %eax,%eax
		mov    $0x000003,%esi
		mov    _0cbbff_data,%al
		mov    %ebx,%edi
		mov    %eax,_0cc4a8_data
		xor    %eax,%eax
		mov    %esi,0x000010(%esp)
		mov    _0cbbfc_data,%al
		xor    %esi,%esi
		mov    %eax,_0cc494_data
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		mov    $0x00000a,%edi
		mov    _0cbbf6_data,%eax
		mov    %ecx,_0cc4c4_data
		sar    $0x000010,%eax
		mov    %edi,0x000018(%esp)
		mov    %eax,0x000014(%esp)
		test   %ecx,%ecx
		jle    _06608e_jump
		mov    %ebx,0x000020(%esp)
		xor    %edi,%edi

	_065f69_jump:
		mov    0x000020(%esp),%edx
		xor    %eax,%eax
		mov    (%edx),%al
		call   _01eadc_func
		mov    (%edx),%ch
		cmp    $0x00002f,%ch
		jne    _065faf_jump
		mov    0x000008(%esp),%edx
		mov    0x00000e(%esp),%ecx
		mov    0x000016(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    0x0000d4(%edx),%al
		sar    $0x000010,%ebx
		push   %eax
		mov    %esi,%edx
		mov    $_0cbb28_data,%eax
		call   _01ebec_func
		cwtl   
		mov    0x000014(%esp),%ebp
		sar    %eax
		sub    %eax,%ebp
		jmp    _065fb7_jump

	_065faf_jump:
		cmp    $0x000020,%ch
		jne    _065fb9_jump
		add    $0x00000a,%ebp

	_065fb7_jump:
		xor    %al,%al

	_065fb9_jump:
		test   %al,%al
		je     _066073_jump
		and    $0x0000ff,%eax
		add    $0x000029,%eax
		imul   $0x00000c,%eax,%edx
		mov    _0ce210_data,%eax
		add    %edx,%eax
		mov    %eax,0x00000c(%esp)
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,_0c1d18_data(%edi)
		mov    0x000008(%esp),%eax
		mov    0x0000d0(%eax),%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    %edi,%ecx
		mov    %eax,_0c1b88_data(%edi)
		xor    %eax,%eax
		mov    %eax,_0c1b10_data(%edi)
		jne    _06603e_jump

	_066004_jump:
		mov    _0cc4c4_data,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    %esi,%edx
		sub    %eax,%edx
		shl    $0x000005,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		mov    $0x000020,%eax
		call   _0690e0_func
		sub    $0x000010,%edx
		movswl %ax,%ebx
		add    %ebx,%edx
		mov    %edx,_0c1b10_data(%ecx)
		je     _066004_jump

	_06603e_jump:
		mov    $0x000020,%eax
		mov    $0xfffffff0,%edx
		call   _0690e0_func
		cwtl   
		sub    %eax,%edx
		mov    0x00000c(%esp),%eax
		mov    %edx,_0c1a98_data(%ecx)
		mov    0x000009(%eax),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    0x00000c(%esp),%ebx
		mov    %al,%dl
		xor    %eax,%eax
		mov    0x000007(%ebx),%al
		add    %edx,%eax
		sub    $0x000003,%eax
		add    %eax,%ebp

	_066073_jump:
		mov    0x000020(%esp),%edx
		mov    _0cc4c4_data,%ebx
		add    $0x000004,%edi
		inc    %edx
		inc    %esi
		mov    %edx,0x000020(%esp)
		cmp    %ebx,%esi
		jl     _065f69_jump

	_06608e_jump:
		mov    $0x000001,%cl
		mov    $_0cbb28_data,%esi
		mov    $_0cbc00_data,%edi
		mov    $0x00001e,%edx
		mov    $0x0001c2,%ebx
		mov    %cl,_0cee71_data
		push   %edi

	_0660ab_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0660c3_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0660ab_jump

	_0660c3_jump:
		pop    %edi
		mov    $_0cb978_data,%esi
		mov    $_0cba50_data,%edi
		mov    _0cbbff_data,%al
		mov    $0x0000c1,%ecx
		mov    %al,_0cbcd7_data
		mov    $0x0001c2,%eax
		mov    %dx,_0cbbfa_data
		mov    %ax,_0cbbf8_data
		push   %edi

	_0660f0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _066108_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0660f0_jump

	_066108_jump:
		pop    %edi
		mov    _0cba4f_data,%al
		mov    %bx,_0cba48_data
		mov    %cx,_0cba4a_data
		mov    %al,_0cbb27_data

	_066121_jump:
		mov    _0cee71_data,%dl
		cmp    $0x000001,%dl
		jne    _066330_jump
		mov    _0cc4c4_data,%edi
		mov    %dl,%cl
		xor    %ebx,%ebx
		test   %edi,%edi
		jle    _066225_jump
		xor    %edx,%edx

	_066144_jump:
		mov    _0ce340_data(%ebx),%ah
		cmp    $0x00002f,%ah
		je     _066213_jump
		cmp    $0x000020,%ah
		je     _066213_jump
		mov    _0c1a98_data(%edx),%eax
		mov    _0c1b88_data(%edx),%ebp
		add    %eax,%ebp
		mov    %ebp,_0c1b88_data(%edx)
		cmp    $0x000c80,%ebp
		jl     _0661b5_jump
		movl   $0x000c80,_0c1b88_data(%edx)
		test   %eax,%eax
		jge    _066188_jump
		neg    %eax

	_066188_jump:
		cmp    $0x000008,%eax
		jge    _0661a7_jump
		mov    $0x000020,%eax
		mov    $0xffffffc0,%esi
		call   _0690e0_func
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0c1a98_data(%edx)
		jmp    _0661b5_jump

	_0661a7_jump:
		mov    _0c1a98_data(%edx),%eax
		neg    %eax
		mov    %eax,_0c1a98_data(%edx)

	_0661b5_jump:
		mov    _0c1a98_data(%edx),%edi
		mov    _0c1b10_data(%edx),%eax
		mov    _0c1d18_data(%edx),%ebp
		inc    %edi
		add    %eax,%ebp
		mov    _0cee71_data,%al
		mov    %edi,_0c1a98_data(%edx)
		mov    %ebp,_0c1d18_data(%edx)
		cmp    $0x000001,%al
		jne    _0661fb_jump
		test   %ebp,%ebp
		jle    _0661eb_jump
		cmp    $0x001310,%ebp
		jl     _0661fb_jump

	_0661eb_jump:
		mov    _0c1b10_data(%edx),%eax
		neg    %eax
		mov    %eax,_0c1b10_data(%edx)
		jmp    _066213_jump

	_0661fb_jump:
		mov    _0c1d18_data(%edx),%edi
		cmp    $0xfffffec0,%edi
		jle    _066213_jump
		cmp    $0x001400,%edi
		jge    _066213_jump
		xor    %cl,%cl

	_066213_jump:
		mov    _0cc4c4_data,%esi
		inc    %ebx
		add    $0x000004,%edx
		cmp    %esi,%ebx
		jl     _066144_jump

	_066225_jump:
		mov    _0cc4c8_data,%edi
		xor    %ebx,%ebx
		test   %edi,%edi
		jle    _066316_jump
		mov    $0x000c80,%ebp
		xor    %edx,%edx

	_06623c_jump:
		mov    _0ce35e_data(%ebx),%ch
		cmp    $0x00002f,%ch
		je     _066305_jump
		cmp    $0x000020,%ch
		je     _066305_jump
		mov    _0c1988_data(%edx),%eax
		mov    _0c1de0_data(%edx),%esi
		add    %eax,%esi
		mov    %esi,_0c1de0_data(%edx)
		cmp    $0x000c80,%esi
		jl     _0662a9_jump
		mov    %ebp,_0c1de0_data(%edx)
		test   %eax,%eax
		jge    _06627c_jump
		neg    %eax

	_06627c_jump:
		cmp    $0x000008,%eax
		jge    _06629b_jump
		mov    $0x000020,%eax
		mov    $0xffffffc0,%esi
		call   _0690e0_func
		cwtl   
		sub    %eax,%esi
		mov    %esi,_0c1988_data(%edx)
		jmp    _0662a9_jump

	_06629b_jump:
		mov    _0c1988_data(%edx),%eax
		neg    %eax
		mov    %eax,_0c1988_data(%edx)

	_0662a9_jump:
		mov    _0c1988_data(%edx),%eax
		inc    %eax
		mov    _0c1c50_data(%edx),%esi
		mov    %eax,_0c1988_data(%edx)
		add    _0c1a20_data(%edx),%esi
		mov    _0cee71_data,%ah
		mov    %esi,_0c1c50_data(%edx)
		cmp    $0x000001,%ah
		jne    _0662ef_jump
		test   %esi,%esi
		jle    _0662df_jump
		cmp    $0x001360,%esi
		jl     _0662ef_jump

	_0662df_jump:
		mov    _0c1a20_data(%edx),%eax
		neg    %eax
		mov    %eax,_0c1a20_data(%edx)
		jmp    _066305_jump

	_0662ef_jump:
		mov    _0c1c50_data(%edx),%eax
		cmp    $0xfffffec0,%eax
		jle    _066305_jump
		cmp    $0x001400,%eax
		jge    _066305_jump
		xor    %cl,%cl

	_066305_jump:
		mov    _0cc4c8_data,%eax
		inc    %ebx
		add    $0x000004,%edx
		cmp    %eax,%ebx
		jl     _06623c_jump

	_066316_jump:
		test   %cl,%cl
		je     _0665e5_jump
		xor    %ah,%ah
		mov    %ah,_0cee71_data
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066330_jump:
		cmp    $0x000002,%dl
		jne    _0664df_jump
		mov    _0cc4c4_data,%esi
		xor    %ecx,%ecx
		test   %esi,%esi
		jle    _066403_jump
		xor    %ebx,%ebx

	_06634b_jump:
		mov    _0ce340_data(%ecx),%al
		cmp    $0x00002f,%al
		je     _0663f1_jump
		cmp    $0x000020,%al
		je     _0663f1_jump
		mov    _0c1b88_data(%ebx),%eax
		sub    $0x000640,%eax
		test   %eax,%eax
		jge    _066372_jump
		neg    %eax

	_066372_jump:
		mov    %eax,%edx
		mov    _0c1d18_data(%ebx),%eax
		sub    $0x000a00,%eax
		test   %eax,%eax
		jge    _066385_jump
		neg    %eax

	_066385_jump:
		cmp    %eax,%edx
		jle    _066396_jump
		mov    _0c1b88_data(%ebx),%eax
		sub    $0x000640,%eax
		jmp    _0663a1_jump

	_066396_jump:
		mov    _0c1d18_data(%ebx),%eax
		sub    $0x000a00,%eax

	_0663a1_jump:
		test   %eax,%eax
		jge    _0663a7_jump
		neg    %eax

	_0663a7_jump:
		mov    %eax,%esi
		mov    $0x000040,%eax
		call   _0690e0_func
		movswl %ax,%edi
		mov    _0c1d18_data(%ebx),%edx
		add    $0x000020,%edi
		sub    $0x000a00,%edx
		imul   %edi,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0c1b88_data(%ebx),%edx
		sub    $0x000640,%edx
		imul   %edi,%edx
		mov    %eax,_0c1b10_data(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,_0c1a98_data(%ebx)

	_0663f1_jump:
		mov    _0cc4c4_data,%ebp
		inc    %ecx
		add    $0x000004,%ebx
		cmp    %ebp,%ecx
		jl     _06634b_jump

	_066403_jump:
		mov    _0cc4c8_data,%eax
		xor    %ecx,%ecx
		test   %eax,%eax
		jle    _0664ce_jump
		xor    %ebx,%ebx

	_066414_jump:
		mov    _0ce35e_data(%ecx),%dh
		cmp    $0x00002f,%dh
		je     _0664bc_jump
		cmp    $0x000020,%dh
		je     _0664bc_jump
		mov    _0c1de0_data(%ebx),%eax
		sub    $0x000640,%eax
		test   %eax,%eax
		jge    _06643d_jump
		neg    %eax

	_06643d_jump:
		mov    %eax,%edx
		mov    _0c1c50_data(%ebx),%eax
		sub    $0x000a00,%eax
		test   %eax,%eax
		jge    _066450_jump
		neg    %eax

	_066450_jump:
		cmp    %eax,%edx
		jle    _066461_jump
		mov    _0c1de0_data(%ebx),%eax
		sub    $0x000640,%eax
		jmp    _06646c_jump

	_066461_jump:
		mov    _0c1c50_data(%ebx),%eax
		sub    $0x000a00,%eax

	_06646c_jump:
		test   %eax,%eax
		jge    _066472_jump
		neg    %eax

	_066472_jump:
		mov    %eax,%esi
		mov    $0x000040,%eax
		call   _0690e0_func
		movswl %ax,%edi
		mov    _0c1c50_data(%ebx),%edx
		add    $0x000020,%edi
		sub    $0x000a00,%edx
		imul   %edi,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    _0c1de0_data(%ebx),%edx
		sub    $0x000640,%edx
		imul   %edi,%edx
		mov    %eax,_0c1a20_data(%ebx)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,_0c1988_data(%ebx)

	_0664bc_jump:
		mov    _0cc4c8_data,%edx
		inc    %ecx
		add    $0x000004,%ebx
		cmp    %edx,%ecx
		jl     _066414_jump

	_0664ce_jump:
		movb   $0x000003,_0cee71_data
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0664df_jump:
		cmp    $0x000003,%dl
		jne    _0665e5_jump
		mov    $0x000001,%al
		mov    _0cc4c4_data,%ecx
		xor    %ebx,%ebx
		test   %ecx,%ecx
		jle    _066562_jump
		mov    _0cc4c4_data,%ebp
		xor    %edx,%edx

	_066502_jump:
		mov    _0ce340_data(%ebx),%cl
		cmp    $0x00002f,%cl
		je     _06655a_jump
		cmp    $0x000020,%cl
		je     _06655a_jump
		mov    _0c1a98_data(%edx),%ecx
		mov    _0c1b88_data(%edx),%esi
		mov    _0c1d18_data(%edx),%edi
		add    %ecx,%esi
		add    _0c1b10_data(%edx),%edi
		mov    %esi,_0c1b88_data(%edx)
		mov    %edi,_0c1d18_data(%edx)
		cmp    $0xfffffec0,%edi
		jle    _06655a_jump
		cmp    $0x001400,%edi
		jge    _06655a_jump
		cmp    $0xfffffec0,%esi
		jle    _06655a_jump
		cmp    $0x000c80,%esi
		jge    _06655a_jump
		xor    %al,%al

	_06655a_jump:
		inc    %ebx
		add    $0x000004,%edx
		cmp    %ebp,%ebx
		jl     _066502_jump

	_066562_jump:
		mov    _0cc4c8_data,%edx
		xor    %ebx,%ebx
		test   %edx,%edx
		jle    _0665da_jump
		mov    _0cc4c8_data,%ebp
		xor    %edx,%edx

	_06657a_jump:
		mov    _0ce35e_data(%ebx),%ah
		cmp    $0x00002f,%ah
		je     _0665d2_jump
		cmp    $0x000020,%ah
		je     _0665d2_jump
		mov    _0c1988_data(%edx),%ecx
		mov    _0c1de0_data(%edx),%esi
		mov    _0c1c50_data(%edx),%edi
		add    %ecx,%esi
		add    _0c1a20_data(%edx),%edi
		mov    %esi,_0c1de0_data(%edx)
		mov    %edi,_0c1c50_data(%edx)
		cmp    $0xfffffec0,%edi
		jle    _0665d2_jump
		cmp    $0x001400,%edi
		jge    _0665d2_jump
		cmp    $0xfffffec0,%esi
		jle    _0665d2_jump
		cmp    $0x000c80,%esi
		jge    _0665d2_jump
		xor    %al,%al

	_0665d2_jump:
		inc    %ebx
		add    $0x000004,%edx
		cmp    %ebp,%ebx
		jl     _06657a_jump

	_0665da_jump:
		test   %al,%al
		je     _0665e5_jump
		xor    %al,%al
		mov    %al,_0cee71_data

	_0665e5_jump:
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0665f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax

	_0665f5_jump:
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%ebx
		imul   $0x000014,%edx,%edx
		mov    _0c22a8_data(%ebx),%ebx
		inc    %eax
		mov    %ebx,_094a54_data(%edx)
		cmp    $0x000018,%ax
		jl     _0665f5_jump
		mov    $0x000001,%ecx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0cecd4_data
		mov    %dx,_0cecc0_data
		mov    %cx,_0cecda_data
		mov    %cx,_0cecc4_data
		mov    %ah,_0ceea2_data
		mov    %dx,_0cec7c_data
		xor    %al,%al
		mov    $0x000001,%dl
		mov    %ax,_0cec7a_data
		mov    %dl,_0ceea1_data
		mov    %ah,_0cee86_data
		mov    %ah,_0ceec1_data
		xor    %dh,%dh
		call   _066b44_func
		mov    %dh,_0cee7e_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066674_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000084,%ecx
		mov    $_0cda94_data,%esi
		mov    $_0ce2a0_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0cdc4c_data,%eax
		mov    $0x000100,%edx
		mov    %eax,_0cda94_data
		mov    _0cdc54_data,%eax
		mov    %dx,_0cdaee_data
		mov    %eax,_0cda9c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_0666bc_func:
		push   %edx
		mov    _0ce2a0_data,%eax
		mov    %eax,_0cda94_data
		mov    _0ce2a8_data,%eax
		xor    %edx,%edx
		mov    %eax,_0cda9c_data
		mov    _0ce2e4_data,%ax
		mov    %dx,_0cdaee_data
		mov    %ax,_0cdad8_data
		pop    %edx
		ret    



_0666e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000001,%dl
		xor    %ah,%ah
		mov    _0cee79_data,%bl
		mov    %ah,_0cee8b_data
		mov    %dl,_0cee98_data
		mov    %ah,_0ceea6_data
		test   %bl,%bl
		jne    _066721_jump
		xor    %edx,%edx
		mov    _0ceea2_data,%al
		mov    %dx,_0cecda_data
		mov    %ax,_0cec82_data

	_066721_jump:
		mov    _0cec82_data,%al
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %al,_0ceea0_data
		call   _066674_func
		mov    $_0cda94_data,%eax
		call   _01d374_func
		mov    _0cec80_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _094a42_data(,%eax,4),%ebx
		mov    _0cdafc_data,%dl
		sar    $0x000010,%ebx
		xor    %ecx,%ecx
		sub    %edx,%ebx
		xor    %esi,%esi
		add    $0x000004,%ebx
		mov    _094a44_data(,%eax,4),%edx
		mov    %ebx,_0cdabc_data
		sar    $0x000010,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    _0cdafd_data,%al
		mov    %bx,_0cdad4_data
		sub    %eax,%edx
		mov    %bx,_0cdad6_data
		add    $0x000008,%edx
		xor    %eax,%eax
		xor    %bh,%bh
		mov    %edx,_0cdac0_data
		call   _01d1ac_func
		xor    %bl,%cl
		mov    %bh,_0cee8c_data
		mov    %bh,_0ceea3_data
		mov    $_0ccd1c_data,%ebx

	_0667b9_jump:
		xor    %eax,%eax
		mov    %cl,%al
		imul   $0x000014,%eax,%eax
		movw   $0x000036,0x000060(%ebx)
		mov    _094a44_data(%eax),%dx
		sub    $0x00004e,%edx
		mov    %dx,0x00003c(%ebx)
		mov    _094a46_data(%eax),%dx
		sub    $0x000040,%edx
		movb   $0x000005,0x00006f(%ebx)
		mov    %dx,0x00003e(%ebx)
		testb  $0x000004,_094a4c_data(%eax)
		je     _0667f5_jump
		movb   $0x00002e,0x00006e(%ebx)
		jmp    _06682a_jump

	_0667f5_jump:
		mov    _094a4d_data(%eax),%dh
		test   %dh,%dh
		je     _066816_jump
		add    %dh,_0ceea3_data
		cmp    $0x000006,%dh
		jne    _066810_jump
		movb   $0x000034,0x00006e(%ebx)
		jmp    _06682a_jump

	_066810_jump:
		movb   $0x00002f,0x00006e(%ebx)
		jmp    _06682a_jump

	_066816_jump:
		cmp    $0x000011,%si
		jne    _066826_jump
		movb   $0x00003b,0x00006c(%ebx)
		movb   $0x00003b,0x00006e(%ebx)
		jmp    _06682a_jump

	_066826_jump:
		movb   $0x000027,0x00006e(%ebx)

	_06682a_jump:
		movw   $0x000000,0x00005a(%ebx)
		movb   $0x000050,0x000068(%ebx)
		mov    %ebx,%eax
		movb   $0x000040,0x000069(%ebx)
		call   _05c74c_func
		mov    %ebx,%eax
		call   _042ed4_func
		xor    %eax,%eax
		mov    0x00006d(%ebx),%al
		mov    0x00000c(%ebx),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%ebx),%dl
		mov    0x000002(%eax,%edx,8),%al
		and    $0x0000ff,%eax
		imul   $0x00000c,%eax,%edx
		mov    0x000004(%ebx),%eax
		xor    %edi,%edi
		mov    0x00000a(%edx,%eax,1),%di
		movswl %si,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		inc    %cl
		mov    %dl,0x00006b(%ebx)
		cmp    $0x000018,%cl
		jbe    _066886_jump
		mov    $0x000018,%cl

	_066886_jump:
		inc    %esi
		add    $0x000084,%ebx
		cmp    $0x000018,%si
		jl     _0667b9_jump
		mov    _094ba0_data,%al
		test   $0x000001,%al
		jne    _0668b4_jump
		cmpb   $0x000066,_0ceea3_data
		jb     _0668b4_jump
		mov    %al,%dl
		or     $0x000004,%dl
		mov    %dl,_094ba0_data

	_0668b4_jump:
		mov    _0ced00_data,%ax
		mov    %ax,_0cec88_data
		mov    _0cecea_data,%ax
		mov    %ax,_0cec84_data
		mov    _0cec7c_data,%ax
		mov    %ax,_0ced00_data
		mov    _0cec7a_data,%ax
		mov    $0xffffffff,%esi
		mov    %ax,_0cecea_data
		call   _04208c_func
		mov    $0x00001e,%eax
		mov    _0cdb15_data,%dh
		mov    %ax,_0cecec_data
		mov    %ax,_0cecf2_data
		mov    _0ceea1_data,%al
		and    $0x0000f7,%dh
		and    $0x000001,%al
		mov    %dh,%bl
		shl    $0x000003,%al
		mov    %dh,_0cdb15_data
		or     %al,%bl
		mov    %si,_0ced18_data
		mov    %bl,_0cdb15_data
		mov    _0cee8a_data,%bh
		mov    %si,_0ced1a_data
		test   %bh,%bh
		je     _066957_jump
		cmpb   $0x000000,_0cee89_data
		je     _06694f_jump
		xor    %eax,%eax
		mov    _0cebf8_data,%al
		call   _0714e0_func

	_06694f_jump:
		xor    %ch,%ch
		mov    %ch,_0cee8a_data

	_066957_jump:
		call   _066b44_func
		call   _065b80_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066aa4_func:
		ret    



_066aa8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x000001,%eax
		call   _0531e8_func
		call   _042450_func
		mov    _0cecf6_data,%edx
		mov    _0cecf4_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _04283c_func
		call   _042f24_func
		testb  $0x000008,_0cdb15_data
		je     _066b04_jump
		xor    %eax,%eax
		mov    _0cdacc_data,%cx
		mov    _0cdafd_data,%al
		add    %ecx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0cdaca_data,%si
		mov    _0cdafc_data,%al
		add    %esi,%eax
		jmp    _066b27_jump

	_066b04_jump:
		xor    %eax,%eax
		mov    _0cdacc_data,%dx
		mov    _0cdafd_data,%al
		add    %edx,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0cdaca_data,%bx
		mov    _0cdafc_data,%al
		add    %ebx,%eax

	_066b27_jump:
		cwtl   
		call   _01d0bc_func
		mov    $_0cda94_data,%eax
		call   _0544fc_func
		call   _06558c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066b44_func:
		cmpb   $0x000000,_0cee89_data
		je     _066b54_jump
		mov    _0c2500_data,%eax
		jmp    _066b59_jump

	_066b54_jump:
		mov    _0c2508_data,%eax

	_066b59_jump:
		mov    %eax,_094bbc_data
		mov    %eax,_094bd0_data
		mov    %eax,_094be4_data
		mov    %eax,_094bf8_data
		mov    %eax,_094c0c_data
		mov    %eax,_094c20_data
		ret    



_066b9c_func:
		push   %edx
		call   _03b8d0_func
		mov    _0ced00_data,%ax
		mov    %ax,_0cec7c_data
		mov    _0cecea_data,%ax
		mov    %ax,_0cec7a_data
		mov    _0cec88_data,%ax
		mov    %ax,_0ced00_data
		mov    _0cec84_data,%ax
		mov    %ax,_0cecea_data
		mov    _0cdb15_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    %al,_0ceea1_data
		call   _0666bc_func
		call   _066b44_func
		xor    %ah,%ah
		mov    _0cdb0a_data,%dl
		mov    %ah,_0cee8b_data
		cmp    $0x0000ff,%dl
		jne    _066c05_jump
		mov    %ah,_0cdb0a_data

	_066c05_jump:
		pop    %edx
		ret    



_066c08_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cec82_data,%al
		mov    %al,_0ceea2_data
		cmpb   $0x000000,_0cee79_data
		jne    _066c54_jump
		mov    _0cec80_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _094a4f_data(,%eax,4),%dl
		mov    %dx,_0cec74_data
		mov    _094a4e_data(,%eax,4),%al
		xor    %ah,%ah
		mov    %ax,_0cec82_data
		call   _0264d0_func

	_066c54_jump:
		andb   $0x0000fb,_0cec71_data
		cmpw   $0x000005,_0cec82_data
		jne    _066c90_jump
		mov    _0cec74_data,%bx
		cmp    $0x000003,%bx
		jne    _066c90_jump
		testb  $0x000002,_0cec79_data
		je     _066c90_jump
		orb    $0x000004,_0cec71_data
		mov    %ebx,%edx
		inc    %edx
		mov    %dx,_0cec74_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066c90_jump:
		cmpw   $0x000005,_0cec82_data
		jne    _066cc1_jump
		cmpw   $0x000004,_0cec74_data
		jne    _066cc1_jump
		testb  $0x000002,_0cec79_data
		je     _066cc1_jump
		cmpb   $0x000000,_0cee79_data
		je     _066cc1_jump
		orb    $0x000004,_0cec71_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_066cc1_jump:
		cmpw   $0x000006,_0cec82_data
		jne    _066cf3_jump
		testb  $0x000080,_0cec78_data
		je     _066cf3_jump
		mov    $0x000001,%ch
		mov    $0x000001,%eax
		mov    %ch,_0cee86_data
		mov    %ch,_0ceec1_data
		mov    %ax,_0cecda_data
		mov    %ch,_0cee80_data

	_066cf3_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066e38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x001000,%ebx
		mov    $0x000001,%esi
		mov    $0x000003,%edi
		xor    %edx,%edx
		mov    $0x000064,%ecx
		mov    %dx,_0cec24_data
		mov    %bx,_0cec20_data
		mov    %bx,_0cec22_data
		mov    %si,_0cec14_data
		mov    %di,_0cebe0_data
		mov    %esi,%eax
		mov    %si,_0cebfe_data
		mov    %di,_0cebe4_data
		mov    %dx,_0cebf4_data
		mov    %cx,_0cebfa_data
		mov    $0x000006,%edi
		xor    %esi,%eax
		xor    %dl,%dl
		mov    _0cee89_data,%al
		mov    %dl,_0cee8a_data
		mov    %di,_0cebc4_data
		add    %esi,%eax
		xor    %dh,%dh
		mov    $0x00000c,%esi
		mov    %ax,_0cebe2_data
		mov    %dx,_0cebbc_data
		mov    $0x000001,%ah
		mov    _0cee89_data,%dh
		mov    %ah,_0ceec3_data
		mov    $0x000028,%eax
		mov    %si,_0cebd6_data
		mov    %ax,_0cebb4_data
		test   %dh,%dh
		je     _066f08_jump
		xor    %dh,%dh
		jmp    _066efc_jump

	_066eed_jump:
		mov    %dl,%al
		inc    %al
		and    $0x0000ff,%eax
		call   _0714e0_func
		inc    %edx

	_066efc_jump:
		xor    %eax,%eax
		mov    _0cee89_data,%al
		cmp    %ax,%dx
		jl     _066eed_jump

	_066f08_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_066f10_func:
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    $0x000001,%esi
		mov    %dx,_0cebc2_data
		mov    %dx,_0cebbe_data
		mov    %dx,_0cebf8_data
		mov    %dx,_0cec02_data
		mov    %dx,_0cebde_data
		mov    %dx,_0cebca_data
		mov    %dx,_0cebd0_data
		mov    %dx,_0cebc8_data
		mov    %dx,_0cebb8_data
		mov    %si,_0cec00_data
		pop    %esi
		pop    %edx
		ret    



_066f64_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		call   _040784_func
		test   %ax,%ax
		je     _067005_jump
		call   _040864_func
		test   %ax,%ax
		jne    _067005_jump
		call   _0407f4_func
		test   %ax,%ax
		jne    _067005_jump
		cmpw   $0x000000,_0cec02_data
		jne    _067005_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _066fd1_jump
		mov    _0cebf4_data,%ax
		cmp    _0cebd6_data,%ax
		jle    _067005_jump
		mov    _0cebf2_data,%edx
		mov    _0cebc2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _067005_jump

	_066fd1_jump:
		mov    _0cebe4_data,%cx
		cmp    $0x000003,%cx
		jne    _066fe9_jump
		movw   $0x000001,_0cebe4_data
		jmp    _066ff3_jump

	_066fe9_jump:
		mov    %ecx,%esi
		inc    %esi
		mov    %si,_0cebe4_data

	_066ff3_jump:
		xor    %edx,%edx
		mov    $0x000044,%eax
		mov    %edx,_0cc530_data
		call   _06fa30_func

	_067005_jump:
		call   _040714_func
		test   %ax,%ax
		je     _0670a2_jump
		call   _040864_func
		test   %ax,%ax
		jne    _0670a2_jump
		call   _0407f4_func
		test   %ax,%ax
		jne    _0670a2_jump
		cmpw   $0x000000,_0cec02_data
		jne    _0670a2_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _06706e_jump
		mov    _0cebf4_data,%ax
		cmp    _0cebd6_data,%ax
		jle    _0670a2_jump
		mov    _0cebf2_data,%edx
		mov    _0cebc2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _0670a2_jump

	_06706e_jump:
		mov    _0cebe4_data,%bx
		cmp    $0x000001,%bx
		jne    _067086_jump
		movw   $0x000003,_0cebe4_data
		jmp    _067090_jump

	_067086_jump:
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,_0cebe4_data

	_067090_jump:
		xor    %ebx,%ebx
		mov    $0x000044,%eax
		mov    %ebx,_0cc530_data
		call   _06fa30_func

	_0670a2_jump:
		call   _040864_func
		test   %ax,%ax
		je     _067138_jump
		call   _040714_func
		test   %ax,%ax
		jne    _067138_jump
		call   _040784_func
		test   %ax,%ax
		jne    _067138_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _067101_jump
		mov    _0cebf4_data,%ax
		cmp    _0cebd6_data,%ax
		jle    _067138_jump
		mov    _0cebf2_data,%edx
		mov    _0cebc2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _067138_jump

	_067101_jump:
		mov    _0cebfe_data,%ax
		cmp    $0x000001,%ax
		jg     _06711c_jump
		xor    %eax,%eax
		mov    _0cee89_data,%al
		mov    %ax,_0cebfe_data
		jmp    _067126_jump

	_06711c_jump:
		mov    %eax,%edx
		dec    %edx
		mov    %dx,_0cebfe_data

	_067126_jump:
		xor    %ecx,%ecx
		mov    $0x000044,%eax
		mov    %ecx,_0cc530_data
		call   _06fa30_func

	_067138_jump:
		call   _0407f4_func
		test   %ax,%ax
		je     _0671d1_jump
		call   _040714_func
		test   %ax,%ax
		jne    _0671d1_jump
		call   _040784_func
		test   %ax,%ax
		jne    _0671d1_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _067197_jump
		mov    _0cebf4_data,%ax
		cmp    _0cebd6_data,%ax
		jle    _0671d1_jump
		mov    _0cebf2_data,%edx
		mov    _0cebc2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _0671d1_jump

	_067197_jump:
		xor    %eax,%eax
		mov    _0cebfe_data,%cx
		mov    _0cee89_data,%al
		cmp    %cx,%ax
		jne    _0671b5_jump
		movw   $0x000001,_0cebfe_data
		jmp    _0671bf_jump

	_0671b5_jump:
		mov    %ecx,%esi
		inc    %esi
		mov    %si,_0cebfe_data

	_0671bf_jump:
		xor    %esi,%esi
		mov    $0x000044,%eax
		mov    %esi,_0cc530_data
		call   _06fa30_func

	_0671d1_jump:
		call   _040784_func
		test   %ax,%ax
		jne    _067209_jump
		call   _040714_func
		test   %ax,%ax
		jne    _067209_jump
		call   _0407f4_func
		test   %ax,%ax
		jne    _067209_jump
		call   _040864_func
		test   %ax,%ax
		jne    _067209_jump
		mov    $0x000001,%cl
		mov    %ax,_0cebf4_data
		mov    %cl,_0ceec3_data
		jmp    _067211_jump

	_067209_jump:
		xor    %bh,%bh
		mov    %bh,_0ceec3_data

	_067211_jump:
		call   _036910_func
		test   %al,%al
		je     _067234_jump
		cmpb   $0x000000,_0ceec3_data
		je     _067234_jump
		movb   $0x000001,_0cee7e_data
		mov    $0x00004d,%eax
		call   _06fa30_func

	_067234_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06723c_func:
		push   %ebx
		push   %ecx
		push   %edx
		call   _04d4c4_func
		cmpw   $0x000001,_0cebe4_data
		jne    _0672a3_jump
		call   _0367ec_func
		test   %al,%al
		je     _0672a3_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _06728d_jump
		mov    _0cebf4_data,%dx
		cmp    _0cebd6_data,%dx
		jle    _0672a3_jump
		mov    _0cebf2_data,%edx
		mov    _0cebc2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _0672a3_jump

	_06728d_jump:
		mov    $0x000001,%ecx
		mov    $0x000045,%eax
		mov    %cx,_0cebde_data
		call   _06fa30_func

	_0672a3_jump:
		cmpw   $0x000002,_0cebe4_data
		jne    _0672ff_jump
		call   _0367ec_func
		test   %al,%al
		je     _0672ff_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _0672ec_jump
		mov    _0cebf4_data,%dx
		cmp    _0cebd6_data,%dx
		jle    _0672ff_jump
		mov    _0cebf2_data,%edx
		mov    _0cebc2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _0672ff_jump

	_0672ec_jump:
		movw   $0x000002,_0cebde_data
		mov    $0x000045,%eax
		call   _06fa30_func

	_0672ff_jump:
		cmpw   $0x000003,_0cebe4_data
		jne    _067368_jump
		call   _0367ec_func
		test   %al,%al
		je     _067368_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _067348_jump
		mov    _0cebf4_data,%dx
		cmp    _0cebd6_data,%dx
		jle    _067368_jump
		mov    _0cebf2_data,%edx
		mov    _0cebc2_data,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _067368_jump

	_067348_jump:
		mov    $0x000003,%ecx
		mov    $0x000045,%eax
		mov    %cx,_0cebde_data
		call   _06fa30_func
		mov    $0x000014,%eax
		call   _03c904_func

	_067368_jump:
		call   _04d508_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_067374_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    $0x000004,%edx
		mov    $0x000032,%ebx
		mov    $0x000001,%ah
		mov    $0x000015,%ecx
		mov    %dx,_0cebe0_data
		mov    %bx,_0cebb4_data
		mov    %ah,_0ca7bc_data
		mov    %ah,_0ca7be_data
		mov    %cx,_0cebec_data
		mov    $0x000005,%bl
		xor    %dh,%dh
		mov    _0cebee_data,%ax
		mov    %dh,_0ca7bd_data
		mov    %ax,_0ca7ba_data
		mov    _0cebf0_data,%ax
		mov    %bl,_0ca7bf_data
		mov    %ax,_0cebea_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0673d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		call   _04d4c4_func
		cmpw   $0x000000,_0cebf2_data
		jne    _06741c_jump
		cmpw   $0x000001,_0cebde_data
		je     _06741c_jump
		mov    _0cebfc_data,%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%edx
		mov    $0x000001,%ecx
		mov    _0c0c54_data,%eax
		mov    %cx,_0cebf2_data
		mov    %eax,_0ccb94_data(%edx)

	_06741c_jump:
		cmpw   $0x000000,_0cebd0_data
		je     _06742f_jump
		movw   $0x000001,_0cebca_data

	_06742f_jump:
		call   _0367ec_func
		test   %al,%al
		je     _0674f1_jump
		cmpb   $0x000000,_0ceec3_data
		je     _0674f1_jump
		mov    _0cebfc_data,%eax
		mov    _0cebfe_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpb   $0x00007e,_0ccb93_data(%eax)
		jne    _067493_jump
		mov    _0cec00_data,%cx
		cmp    $0x000001,%cx
		je     _0674cb_jump
		mov    %ecx,%esi
		mov    $0x000061,%dh
		dec    %esi
		mov    %dh,_0ccb93_data(%eax)
		mov    $0x000044,%eax
		mov    %si,_0cec00_data
		call   _06fa30_func
		jmp    _0674cb_jump

	_067493_jump:
		mov    _0cec00_data,%ax
		cmp    $0x000003,%ax
		jge    _0674b5_jump
		mov    %eax,%ebx
		inc    %ebx
		mov    $0x000044,%eax
		mov    %bx,_0cec00_data
		call   _06fa30_func
		jmp    _0674cb_jump

	_0674b5_jump:
		mov    $0x000044,%eax
		mov    $0x000001,%edx
		call   _06fa30_func
		mov    %dx,_0cebd0_data

	_0674cb_jump:
		mov    $0x001000,%eax
		xor    %edi,%edi
		mov    $0x000001,%ebx
		mov    %di,_0cec24_data
		mov    %ax,_0cec20_data
		mov    %ax,_0cec22_data
		mov    %bx,_0cec14_data

	_0674f1_jump:
		call   _040864_func
		test   %ax,%ax
		je     _0675c2_jump
		call   _040784_func
		test   %ax,%ax
		jne    _0675c2_jump
		call   _040714_func
		test   %ax,%ax
		jne    _0675c2_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _067541_jump
		mov    _0cebf2_data,%edx
		sar    $0x000010,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _0675c2_jump

	_067541_jump:
		mov    _0cebfc_data,%eax
		mov    _0cebfe_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0ccb93_data(%eax),%bh
		cmp    $0x00007a,%bh
		jne    _06756b_jump
		movb   $0x000020,_0ccb93_data(%eax)
		jmp    _067591_jump

	_06756b_jump:
		cmp    $0x000020,%bh
		jne    _067579_jump
		movb   $0x00007e,_0ccb93_data(%eax)
		jmp    _067591_jump

	_067579_jump:
		cmp    $0x00007e,%bh
		jne    _067587_jump
		movb   $0x000061,_0ccb93_data(%eax)
		jmp    _067591_jump

	_067587_jump:
		mov    %bh,%dl
		inc    %dl
		mov    %dl,_0ccb93_data(%eax)

	_067591_jump:
		mov    $0x001000,%esi
		xor    %ecx,%ecx
		mov    $0x000001,%eax
		mov    %cx,_0cec24_data
		mov    %si,_0cec20_data
		mov    %ax,_0cec14_data
		mov    $0x000044,%eax
		mov    %si,_0cec22_data
		call   _06fa30_func

	_0675c2_jump:
		call   _0407f4_func
		test   %ax,%ax
		je     _067694_jump
		call   _040784_func
		test   %ax,%ax
		jne    _067694_jump
		call   _040714_func
		test   %ax,%ax
		jne    _067694_jump
		cmpb   $0x000000,_0ceec3_data
		jne    _067612_jump
		mov    _0cebf2_data,%edx
		sar    $0x000010,%edx
		mov    $0x000005,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _067694_jump

	_067612_jump:
		mov    _0cebfc_data,%eax
		mov    _0cebfe_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    _0ccb93_data(%eax),%ch
		cmp    $0x000061,%ch
		jne    _06763c_jump
		movb   $0x00007e,_0ccb93_data(%eax)
		jmp    _067662_jump

	_06763c_jump:
		cmp    $0x00007e,%ch
		jne    _06764a_jump
		movb   $0x000020,_0ccb93_data(%eax)
		jmp    _067662_jump

	_06764a_jump:
		cmp    $0x000020,%ch
		jne    _067658_jump
		movb   $0x00007a,_0ccb93_data(%eax)
		jmp    _067662_jump

	_067658_jump:
		mov    %ch,%bl
		dec    %bl
		mov    %bl,_0ccb93_data(%eax)

	_067662_jump:
		mov    $0x001000,%ebx
		mov    $0x000001,%esi
		xor    %edx,%edx
		mov    $0x000044,%eax
		mov    %dx,_0cec24_data
		mov    %bx,_0cec20_data
		mov    %bx,_0cec22_data
		mov    %si,_0cec14_data
		call   _06fa30_func

	_067694_jump:
		call   _040864_func
		test   %ax,%ax
		jne    _0676d9_jump
		call   _0407f4_func
		test   %ax,%ax
		jne    _0676d9_jump
		call   _040784_func
		test   %ax,%ax
		jne    _0676d9_jump
		call   _040714_func
		test   %ax,%ax
		jne    _0676d9_jump
		cmpw   $0x000000,_0cebd0_data
		jne    _0676d9_jump
		cmpw   $0x000000,_0cebca_data
		jne    _0676d9_jump
		movw   $0x000001,_0cebc8_data

	_0676d9_jump:
		call   _036910_func
		test   %al,%al
		je     _0676f3_jump
		movb   $0x000001,_0cee7e_data
		mov    $0x00004d,%eax
		call   _06fa30_func

	_0676f3_jump:
		call   _04d508_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lea    0x000000(%eax),%eax



_067700_func:
		ret    

_067750_switch:
		.long   _0677a9_case
		.long   _0677b5_case
		.long   _0677c1_case
		.long   _0677cd_case

_067760_switch:
		.long   _0677f0_case
		.long   _0677fc_case
		.long   _067808_case
		.long   _067814_case

_067770_switch:
		.long   _067837_case
		.long   _067843_case
		.long   _06784f_case
		.long   _06785b_case

_067780_switch:
		.long   _06787e_case
		.long   _067889_case
		.long   _067894_case
		.long   _06789f_case


	_0677a9_case:
		movl   $_0408d4_func,_0c4c68_data
		jmp    _0677d7_jump

	_0677b5_case:
		movl   $_040960_func,_0c4c68_data
		jmp    _0677d7_jump

	_0677c1_case:
		movl   $_0409ec_func,_0c4c68_data
		jmp    _0677d7_jump

	_0677cd_case:
		movl   $_040a78_func,_0c4c68_data

	_0677d7_jump:
		mov    _0c4c7a_data,%ax
		cmp    $0x000003,%ax
		ja     _06781e_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_067760_switch(,%eax,4)

	_0677f0_case:
		movl   $_0408d4_func,_0c4c6c_data
		jmp    _06781e_jump

	_0677fc_case:
		movl   $_040960_func,_0c4c6c_data
		jmp    _06781e_jump

	_067808_case:
		movl   $_0409ec_func,_0c4c6c_data
		jmp    _06781e_jump

	_067814_case:
		movl   $_040a78_func,_0c4c6c_data

	_06781e_jump:
		mov    _0c4c7c_data,%ax
		cmp    $0x000003,%ax
		ja     _067865_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_067770_switch(,%eax,4)

	_067837_case:
		movl   $_0408d4_func,_0c4c70_data
		jmp    _067865_jump

	_067843_case:
		movl   $_040960_func,_0c4c70_data
		jmp    _067865_jump

	_06784f_case:
		movl   $_0409ec_func,_0c4c70_data
		jmp    _067865_jump

	_06785b_case:
		movl   $_040a78_func,_0c4c70_data

	_067865_jump:
		mov    _0c4c7e_data,%ax
		cmp    $0x000003,%ax
		ja     _0678a9_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_067780_switch(,%eax,4)

	_06787e_case:
		movl   $_0408d4_func,_0c4c74_data
		ret    

	_067889_case:
		movl   $_040960_func,_0c4c74_data
		ret    

	_067894_case:
		movl   $_0409ec_func,_0c4c74_data
		ret    

	_06789f_case:
		movl   $_040a78_func,_0c4c74_data

	_0678a9_jump:
		ret    

_0678ac_switch:
		.long   _0678cf_case
		.long   _0678d8_case
		.long   _0678e1_case
		.long   _0678ea_case


	_0678cf_case:
		push   $0x000002
		mov    $_0c0c58_data,%eax
		jmp    _0678f1_jump

	_0678d8_case:
		push   $0x000001
		mov    $_0c0c5c_data,%eax
		jmp    _0678f1_jump

	_0678e1_case:
		push   $0x000005
		mov    $_0c0c60_data,%eax
		jmp    _0678f1_jump

	_0678ea_case:
		push   $0x000001
		mov    $_0c0c64_data,%eax

	_0678f1_jump:
		and    $0x0000ff,%ecx
		movswl %bx,%ebx
		movswl %dx,%edx
		call   _01a178_func
		ret    $0x000004



_067908_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x00000a,%ebx
		mov    _0ceca4_data,%si
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0cec66_data
		mov    %bx,_0cec68_data
		mov    %ah,_0cee9f_data
		mov    %dx,_0cebf4_data
		mov    %ah,_09267c_data
		mov    %ah,_0cee81_data
		cmp    $0x000004,%si
		je     _067953_jump
		testb  $0x000002,_0cec71_data
		je     _067987_jump

	_067953_jump:
		mov    $0x000021,%ecx
		mov    $_0cda94_data,%edi
		mov    $_0ce21c_data,%esi
		mov    $0x000001,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %bh,_0ceecd_data
		mov    _0cec71_data,%cl
		mov    $0x000001,%edi
		and    $0x0000fd,%cl
		mov    %di,_0ceca4_data
		mov    %cl,_0cec71_data

	_067987_jump:
		mov    $0x000087,%edx
		xor    %eax,%eax
		xor    %ch,%ch
		mov    _0cdafd_data,%al
		mov    %ch,_0cdaff_data
		sub    %eax,%edx
		mov    _0cee88_data,%al
		mov    %edx,_0cdac0_data
		test   %al,%al
		je     _0679d6_jump
		mov    $0x000018,%ebx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		xor    %eax,%eax
		mov    $0x0000e1,%edx
		mov    _0cdafc_data,%al
		sub    %eax,%edx
		mov    %edx,_0cdabc_data
		jmp    _067a21_jump

	_0679d6_jump:
		xor    %eax,%eax
		mov    $0x000050,%edx
		mov    _0cdafc_data,%al
		sub    %eax,%edx
		mov    $_0cda94_data,%eax
		mov    %edx,_0cdabc_data
		mov    $0x000003,%edx
		call   _01d36c_func
		movw   $0x0000ff,_0cec68_data
		cmpb   $0x00000a,_0cee51_data
		jbe    _067a12_jump
		mov    $0x000034,%edx
		jmp    _067a17_jump

	_067a12_jump:
		mov    $0x000033,%edx

	_067a17_jump:
		mov    $_0cda94_data,%eax
		call   _01d364_func

	_067a21_jump:
		mov    $0x000082,%ebx
		mov    _0cdb15_data,%dl
		mov    $0x000078,%ecx
		and    $0x0000f7,%dl
		mov    $0x00006e,%esi
		mov    %dl,_0cdb15_data
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %dx,_0cdad4_data
		mov    %dx,_0cdad6_data
		call   _01d1ac_func
		mov    $0x000050,%edx
		mov    $_0ce18c_data,%eax
		mov    %ebx,_0ce1b8_data
		mov    %edx,_0ce1b4_data
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %edi,%edi
		call   _01d374_func
		mov    $0x000050,%dh
		mov    $0x000040,%bl
		mov    $_0ccd1c_data,%eax
		mov    %cx,_0ccd52_data
		mov    %si,_0ccd54_data
		mov    %dh,_0ccd84_data
		mov    %bl,_0ccd85_data
		xor    %cl,%cl
		mov    _0ccd9d_data,%bh
		mov    $0x000005,%edx
		and    $0x0000fb,%bh
		mov    %cl,_0ccd9b_data
		mov    %bh,_0ccd9d_data
		mov    $0x000014,%ebx
		xor    %ch,%ch
		call   _01d374_func
		mov    _0ced00_data,%ax
		mov    %ch,_0cee8b_data
		mov    %ax,_0cec88_data
		mov    _0cecea_data,%ax
		mov    %di,_0ced00_data
		mov    %ax,_0cec84_data
		mov    %di,_0cecea_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_067af4_switch:
		.long   _067ba8_case
		.long   _067be3_case
		.long   _067c1b_case
		.long   _067c4f_case




_067b04_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _09267c_data,%dl
		movw   $0x000001,_0cebf4_data
		call   _040864_func
		test   %ax,%ax
		je     _067b32_jump
		mov    _09267c_data,%dl
		cmp    $0x000001,%dl
		je     _067b32_jump
		inc    %dl
		jmp    _067b8f_jump

	_067b32_jump:
		call   _0407f4_func
		test   %ax,%ax
		je     _067b4c_jump
		mov    _09267c_data,%dl
		cmp    $0x000003,%dl
		je     _067b4c_jump
		add    $0x000002,%dl
		jmp    _067b8f_jump

	_067b4c_jump:
		call   _040784_func
		test   %ax,%ax
		je     _067b66_jump
		mov    _09267c_data,%dl
		cmp    $0x000007,%dl
		je     _067b66_jump
		add    $0x000004,%dl
		jmp    _067b8f_jump

	_067b66_jump:
		call   _040714_func
		test   %ax,%ax
		je     _067b80_jump
		mov    _09267c_data,%dl
		cmp    $0x00000f,%dl
		je     _067b80_jump
		add    $0x000008,%dl
		jmp    _067b8f_jump

	_067b80_jump:
		xor    %ecx,%ecx
		mov    _09267c_data,%dl
		mov    %cx,_0cebf4_data

	_067b8f_jump:
		mov    _0cee81_data,%al
		cmp    $0x000003,%al
		ja     _067c8b_jump
		xor    %ebx,%ebx
		mov    %al,%bl
		jmp    *%cs:_067af4_switch(,%ebx,4)

	_067ba8_case:
		cmp    $0x000001,%dl
		jne    _067bc2_jump
		cmpb   $0x000003,_0cee88_data
		ja     _067bc2_jump
		add    %dl,%al
		mov    %al,_0cee81_data
		jmp    _067c8b_jump

	_067bc2_jump:
		cmpw   $0x000000,_0cebf4_data
		je     _067c8b_jump
		xor    %al,%al
		xor    %dl,%dl
		mov    %al,_0cee81_data
		mov    %dl,_09267c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067be3_case:
		cmp    $0x000003,%dl
		jne    _067bf9_jump
		inc    %al
		mov    %al,_0cee81_data
		mov    %dl,_09267c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067bf9_jump:
		cmpw   $0x000000,_0cebf4_data
		je     _067c8b_jump
		xor    %cl,%cl
		xor    %dl,%dl
		mov    %cl,_0cee81_data
		mov    %dl,_09267c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067c1b_case:
		cmp    $0x000007,%dl
		jne    _067c31_jump
		inc    %al
		mov    %al,_0cee81_data
		mov    %dl,_09267c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067c31_jump:
		cmpw   $0x000000,_0cebf4_data
		je     _067c8b_jump
		xor    %bh,%bh
		xor    %dl,%dl
		mov    %bh,_0cee81_data
		mov    %dl,_09267c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067c4f_case:
		cmp    $0x00000f,%dl
		jne    _067c77_jump
		orb    $0x000004,_0ccd9d_data
		xor    %dl,%dl
		mov    $0x00000a,%bl
		mov    $0x000080,%dh
		mov    %bl,_0cee88_data
		mov    %dh,_0ccd9b_data
		mov    %dl,_09267c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067c77_jump:
		cmpw   $0x000000,_0cebf4_data
		je     _067c8b_jump
		xor    %ah,%ah
		xor    %dl,%dl
		mov    %ah,_0cee81_data

	_067c8b_jump:
		mov    %dl,_09267c_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_067c98_switch:
		.long   _067da0_case
		.long   _067dd9_case
		.long   _067df4_case
		.long   _067eee_case
		.long   _067e47_case
		.long   _067eb1_case
		.long   _067e29_case




_067cb4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x000001,%eax
		call   _0531e8_func
		call   _0367ec_func
		test   %al,%al
		jne    _067ce1_jump
		call   _036834_func
		test   %al,%al
		jne    _067ce1_jump
		call   _036910_func
		test   %al,%al
		je     _067d67_jump

	_067ce1_jump:
		mov    _0cdb00_data,%ah
		cmp    $0x000019,%ah
		je     _067cf6_jump
		cmp    $0x00001a,%ah
		je     _067cf6_jump
		cmp    $0x00001b,%ah
		jne    _067d67_jump

	_067cf6_jump:
		cmpb   $0x000080,_0ccd9b_data
		je     _067d06_jump
		orb    $0x000004,_0ccd9d_data

	_067d06_jump:
		call   _01cb68_func
		mov    $0x0000d8,%eax
		call   _06fa30_func
		cmpb   $0x00001b,_0cdb00_data
		je     _067d34_jump
		mov    $0x00001f,%ebx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		jmp    _067d4f_jump

	_067d34_jump:
		mov    $0x00001d,%ebx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		orb    $0x000008,_0cdb15_data

	_067d4f_jump:
		mov    $0x000001,%ebx
		xor    %al,%al
		xor    %edx,%edx
		mov    %al,_0cdaff_data
		mov    $_0ce18c_data,%eax
		call   _01d374_func

	_067d67_jump:
		mov    $_0cda94_data,%eax
		call   _053c34_func
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		call   _053bb0_func
		mov    %ax,_0cdad4_data
		mov    _0cdb00_data,%al
		sub    $0x000019,%al
		cmp    $0x000006,%al
		ja     _067f1d_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_067c98_switch(,%eax,4)

	_067da0_case:
		xor    %eax,%eax
		mov    _0cdabc_data,%ecx
		mov    _0cdafc_data,%al
		add    %ecx,%eax
		cmp    $0x000046,%eax
		jge    _067f1d_jump
		mov    $0x00001a,%ebx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		xor    %dl,%dl
		mov    %dl,_0cdaff_data
		jmp    _067f1d_jump

	_067dd9_case:
		cmpb   $0x000006,_0cdaff_data
		jbe    _067f1d_jump
		xor    %ebx,%ebx
		mov    %bx,_0cdad4_data
		jmp    _067f1d_jump

	_067df4_case:
		mov    _0cec66_data,%si
		inc    %esi
		mov    %si,_0cec66_data
		cmp    $0x00003c,%si
		jne    _067f1d_jump
		mov    _0cec68_data,%dx
		xor    %eax,%eax
		dec    %edx
		mov    %ax,_0cec66_data
		mov    %dx,_0cec68_data
		jmp    _067f1d_jump

	_067e29_case:
		mov    $_0cda94_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _067f1d_jump
		orb    $0x000008,_0cdb15_data
		jmp    _067f1d_jump

	_067e47_case:
		mov    _0cdb15_data,%dh
		xor    %eax,%eax
		mov    _0cdabc_data,%ebx
		mov    _0cdafc_data,%al
		or     $0x000008,%dh
		add    %ebx,%eax
		mov    %dh,_0cdb15_data
		cmp    $0x0000b4,%eax
		jle    _067e96_jump
		mov    $_0cda94_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _067e96_jump
		mov    $0x00001c,%edx
		mov    $_0cda94_data,%eax
		xor    %bh,%bh
		call   _01d364_func
		mov    %bh,_0cdaff_data
		jmp    _067f1d_jump

	_067e96_jump:
		cmpb   $0x000040,_0cdaff_data
		jae    _067f1d_jump
		xor    %edx,%edx
		mov    %dx,_0cdad4_data
		jmp    _067f1d_jump

	_067eb1_case:
		xor    %eax,%eax
		mov    _0cdabc_data,%edx
		mov    _0cdafc_data,%al
		add    %edx,%eax
		cmp    $0x0000af,%eax
		jle    _067f1d_jump
		mov    $_0cda94_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _067f1d_jump
		mov    $0x00001c,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func
		xor    %dl,%dl
		mov    %dl,_0cdaff_data
		jmp    _067f1d_jump

	_067eee_case:
		cmpb   $0x000028,_0cdaff_data
		jbe    _067f0b_jump
		mov    $0x000001,%ch
		mov    $0xffffffff,%ebx
		mov    %ch,_0cee9f_data
		mov    %bx,_0cdd16_data

	_067f0b_jump:
		cmpb   $0x000010,_0cdaff_data
		jbe    _067f1d_jump
		xor    %ecx,%ecx
		mov    %cx,_0cdad4_data

	_067f1d_jump:
		cmpb   $0x000000,_0cee3f_data
		jne    _067f2f_jump
		cmpb   $0x000019,_0cdb00_data
		je     _067f59_jump

	_067f2f_jump:
		mov    _0cdad2_data,%eax
		mov    _0cdabc_data,%esi
		sar    $0x000010,%eax
		add    %eax,%esi
		mov    $_0cda94_data,%eax
		mov    %esi,_0cdabc_data
		call   _01db8c_func
		mov    $_0cda94_data,%eax
		call   _0544fc_func

	_067f59_jump:
		mov    $_0ce18c_data,%eax
		call   _01db8c_func
		mov    $_0ce18c_data,%eax
		call   _0544fc_func
		testb  $0x000004,_0ccd9d_data
		je     _067fa4_jump
		mov    $_0ccd1c_data,%eax
		call   _0544fc_func
		mov    $_0ccd1c_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _067fa4_jump
		cmpb   $0x000080,_0ccd9b_data
		je     _067f9d_jump
		decb   _0cee88_data

	_067f9d_jump:
		andb   $0x0000fb,_0ccd9d_data

	_067fa4_jump:
		cmpw   $0x0000ff,_0cec68_data
		je     _067fb9_jump
		call   _067b04_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_067fb9_jump:
		call   _0680b4_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0680b4_func:
		call   _036910_func
		test   %al,%al
		setne  %al
		mov    %al,_0cee8b_data
		mov    $_0cda94_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _0680d8_jump
		movb   $0x000001,_0cee8b_data

	_0680d8_jump:
		cmpb   $0x000000,_0cee8b_data
		je     _0680f1_jump
		movb   $0x000001,_0cee9f_data
		movw   $0x00ffff,_0cdd16_data

	_0680f1_jump:
		ret    

_0680f4_switch:
		.long   _068160_case
		.long   _0683ea_case
		.long   _06823e_case
		.long   _068304_case
		.long   _068319_case




_068108_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000005,%ebx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %dx,_0cec66_data
		mov    %bx,_0cec68_data
		mov    %ah,_0cee9d_data
		call   _01eaa8_func
		cmpb   $0x000000,_0cee86_data
		je     _068142_jump
		call   _06845c_func
		jmp    _068453_jump

	_068142_jump:
		mov    _0cecd4_data,%ax
		dec    %eax
		cmp    $0x000004,%ax
		ja     _0683ea_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0680f4_switch(,%eax,4)

	_068160_case:
		mov    $_0cb978_data,%edi
		mov    _0c2320_data,%esi
		push   %edi

	_06816c_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _068184_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06816c_jump

	_068184_jump:
		pop    %edi
		mov    $_0cba50_data,%edi
		mov    _0c2324_data,%esi
		push   %edi

	_068191_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0681a9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _068191_jump

	_0681a9_jump:
		pop    %edi
		mov    $_0cbb28_data,%edi
		mov    _0c2328_data,%esi
		push   %edi

	_0681b6_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0681ce_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0681b6_jump

	_0681ce_jump:
		pop    %edi
		mov    $_0cbc00_data,%edi
		mov    _0c232c_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_0681e0_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0681f8_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0681e0_jump

	_0681f8_jump:
		pop    %edi
		mov    _0c4c7c_data,%edx
		mov    $_0cba50_data,%eax
		sar    $0x000010,%edx
		call   _01eebc_func
		mov    $0x0000ff,%ebx
		mov    _0c4c7c_data,%edx
		mov    $_0cbb28_data,%eax
		sar    $0x000010,%edx
		call   _01eebc_func
		mov    $0x0000ff,%ebx
		mov    _0c4c7c_data,%edx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01eebc_func
		jmp    _0683ea_case

	_06823e_case:
		mov    $_0cb978_data,%edi
		mov    _0c2330_data,%esi
		push   %edi

	_06824a_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _068262_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06824a_jump

	_068262_jump:
		pop    %edi
		mov    $_0cba50_data,%edi
		mov    _0c2334_data,%esi
		push   %edi

	_06826f_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _068287_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06826f_jump

	_068287_jump:
		pop    %edi
		mov    $_0cbb28_data,%edi
		mov    _0c2338_data,%esi
		push   %edi

	_068294_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0682ac_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _068294_jump

	_0682ac_jump:
		pop    %edi
		mov    $_0cbc00_data,%edi
		mov    _0c233c_data,%esi
		mov    $0x0000ff,%ebx
		push   %edi

	_0682be_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0682d6_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0682be_jump

	_0682d6_jump:
		pop    %edi
		mov    _0c4c76_data,%edx
		mov    $_0cbb28_data,%eax
		sar    $0x000010,%edx
		call   _01eebc_func
		mov    $0x0000ff,%ebx
		mov    _0c4c76_data,%edx
		mov    %edi,%eax
		sar    $0x000010,%edx
		call   _01eebc_func
		jmp    _0683ea_case

	_068304_case:
		call   _01cb68_func
		mov    $_0cb978_data,%edi
		mov    _0c2340_data,%esi
		jmp    _0683d0_jump

	_068319_case:
		cmpw   $0x000003,_0cecc0_data
		jne    _0683bb_jump
		mov    $_0cb978_data,%edi
		mov    _0c2344_data,%esi
		push   %edi

	_068333_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _06834b_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _068333_jump

	_06834b_jump:
		pop    %edi
		mov    $_0cba50_data,%edi
		mov    _0c2348_data,%esi
		push   %edi

	_068358_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _068370_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _068358_jump

	_068370_jump:
		pop    %edi
		mov    $_0cbb28_data,%edi
		mov    _0c234c_data,%esi
		push   %edi

	_06837d_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _068395_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _06837d_jump

	_068395_jump:
		pop    %edi
		mov    $_0cbc00_data,%edi
		mov    _0c2350_data,%esi
		push   %edi

	_0683a2_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0683ba_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0683a2_jump

	_0683ba_jump:
		pop    %edi

	_0683bb_jump:
		cmpw   $0x00000b,_0cecc0_data
		jne    _0683ea_case
		mov    $_0cb978_data,%edi
		mov    _0c2354_data,%esi

	_0683d0_jump:
		push   %edi

	_0683d1_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _0683e9_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _0683d1_jump

	_0683e9_jump:
		pop    %edi

	_0683ea_case:
		mov    $0x0000d8,%edx
		xor    %eax,%eax

	_0683f1_jump:
		cmpb   $0x000000,_0cb978_data(%eax)
		je     _068419_jump
		mov    $0x0000a0,%edi
		mov    $0x0000ad,%ebx
		mov    %di,_0cba48_data(%eax)
		mov    %bx,_0cba4a_data(%eax)
		movb   $0x000002,_0cba4c_data(%eax)

	_068419_jump:
		cmpb   $0x000000,_0cb978_data(%edx)
		je     _068441_jump
		mov    $0x0000a0,%ecx
		mov    $0x0000bc,%edi
		mov    %cx,_0cba48_data(%edx)
		mov    %di,_0cba4a_data(%edx)
		movb   $0x000002,_0cba4c_data(%edx)

	_068441_jump:
		add    $0x0001b0,%eax
		add    $0x0001b0,%edx
		cmp    $0x000870,%eax
		jne    _0683f1_jump

	_068453_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06845c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xffffffff,%ebx
		xor    %ah,%ah
		mov    _0cee5a_data,%dl
		mov    %ah,_0cee98_data
		test   %dl,%dl
		jne    _068484_jump
		xor    %eax,%eax
		mov    _0cebf8_data,%al
		call   _0714e0_func

	_068484_jump:
		xor    %dh,%dh
		mov    %dh,_0cee7b_data
		mov    %dh,_0cee7f_data
		xor    %dl,%dl
		mov    %dx,_0cebb2_data
		mov    %dh,_0cee8b_data
		mov    %dh,_0cee87_data
		mov    %dh,_0cee7c_data

	_0684ad_jump:
		inc    %ebx
		movswl %bx,%edx
		imul   $0x00000c,%edx,%edx
		mov    $_094ebc_data,%esi
		mov    $_0cc540_data,%edi
		mov    $0x00000c,%ecx
		add    %edx,%esi
		add    %edx,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		cmpw   $0x000000,_0cc546_data(%edx)
		je     _0684f7_jump
		mov    _0cc544_data(%edx),%esi
		sar    $0x000010,%esi
		mov    _0c22a8_data(,%esi,4),%esi
		mov    %esi,_0cc540_data(%edx)

	_0684f7_jump:
		movswl %bx,%edx
		imul   $0x00000c,%edx,%edx
		mov    $0x0000dc,%esi
		mov    _0cc549_data(%edx),%cl
		mov    %si,_0cc546_data(%edx)
		cmp    $0x0000ff,%cl
		jne    _0684ad_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06851c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cee7f_data,%cl
		cmpb   $0x000000,_0cee86_data
		je     _068657_jump
		mov    $0x000001,%eax
		call   _0531e8_func
		cmpb   $0x000000,_0cee3f_data
		jne    _068657_jump
		xor    %eax,%eax
		mov    _0cee7b_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0cee7f_data,%cl
		shl    $0x000002,%edx
		jmp    _068578_jump

	_068565_jump:
		mov    _0cc546_data(%edx),%bx
		add    $0x00000c,%edx
		dec    %ebx
		inc    %eax
		mov    %bx,_0cc53a_data(%edx)

	_068578_jump:
		xor    %ebx,%ebx
		mov    %cl,%bl
		cmp    %ebx,%eax
		jle    _068565_jump
		lea    0x000000(,%ebx,4),%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    _0cebb2_data,%bx
		shl    $0x000002,%edx
		inc    %ebx
		mov    _0cc549_data(%edx),%al
		mov    %bx,_0cebb2_data
		test   %ax,%ax
		jne    _0685d5_jump
		mov    _0cc548_data(%edx),%dl
		cmp    $0x000001,%dl
		jb     _0685bc_jump
		jbe    _0685c7_jump
		cmp    $0x000002,%dl
		je     _0685ce_jump
		jmp    _0685f2_jump

	_0685bc_jump:
		test   %dl,%dl
		jne    _0685f2_jump
		mov    $0x000024,%esi
		jmp    _0685f2_jump

	_0685c7_jump:
		mov    $0x000017,%esi
		jmp    _0685f2_jump

	_0685ce_jump:
		mov    $0x00000f,%esi
		jmp    _0685f2_jump

	_0685d5_jump:
		cmp    $0x0000ff,%ax
		jne    _0685e2_jump
		mov    $0x0000a0,%esi
		jmp    _0685f2_jump

	_0685e2_jump:
		cmp    $0x000064,%ax
		jle    _0685ef_jump
		mov    %eax,%esi
		sub    $0x000055,%esi
		jmp    _0685f2_jump

	_0685ef_jump:
		imul   $0x00000f,%eax,%esi

	_0685f2_jump:
		cmp    _0cebb2_data,%si
		jg     _068627_jump
		xor    %edx,%edx
		mov    %dx,_0cebb2_data
		cmp    $0x0000ff,%ax
		je     _068620_jump
		inc    %cl
		xor    %edx,%edx
		mov    %cl,%dl
		mov    $0x00000f,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		jne    _068627_jump

	_068620_jump:
		movb   $0x000001,_0cee8b_data

	_068627_jump:
		xor    %edx,%edx
		mov    _0cee7b_data,%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cc544_data(,%eax,4),%eax
		sar    $0x000010,%eax
		mov    %cl,_0cee7f_data
		cmp    $0xfffffffc,%eax
		jge    _068657_jump
		mov    %dl,%bh
		inc    %bh
		mov    %bh,_0cee7b_data

	_068657_jump:
		mov    _0cee7f_data,%cl
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0686a4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   $0x000000
		xor    %ebx,%ebx
		mov    _0cdacc_data,%dx
		mov    _0cdb08_data,%bl
		mov    $0x000002,%ecx
		add    %edx,%ebx
		mov    $_0c0c68_data,%eax
		sub    $0x00003c,%ebx
		mov    $0x0000a0,%edx
		movswl %bx,%ebx
		call   _01a178_func
		push   $0x000000
		xor    %ebx,%ebx
		mov    _0cdacc_data,%cx
		mov    _0cdb08_data,%bl
		mov    $0x0000a0,%edx
		add    %ecx,%ebx
		mov    $_0c0c80_data,%eax
		sub    $0x00001e,%ebx
		mov    $0x000002,%ecx
		movswl %bx,%ebx
		call   _01a178_func
		cmpb   $0x000080,_0cdaff_data
		jbe    _068711_jump
		movb   $0x000001,_0cee8b_data

	_068711_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068718_func:
		push   %ebx
		push   %edx
		mov    $0x0000c8,%ah
		mov    $0x0000f0,%dl
		mov    $0xffffffb8,%ebx
		mov    %ah,_0cdc30_data
		mov    %dl,_0cdc31_data
		mov    %bx,_0cdc00_data
		mov    $0x000078,%edx
		mov    $0x000001,%bl
		mov    %dx,_0cdbfe_data
		mov    %bl,_0cdc35_data
		mov    _0cdc49_data,%dh
		xor    %bh,%bh
		and    $0x0000f7,%dh
		mov    %bh,_0cdc34_data
		mov    %bh,_0cdc38_data
		mov    %dh,_0cdc49_data
		pop    %edx
		pop    %ebx
		ret    

_06876c_switch:
		.long   _068859_case
		.long   _0688bc_case
		.long   _06892f_case
		.long   _06895e_case
		.long   _0689c4_case
		.long   _068a31_case




_068784_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %edx,%edx
		mov    _0cdc35_data,%dl
		mov    _0cdbd4_data,%ebx
		shl    $0x000002,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0cdc34_data,%dl
		mov    0x000005(%ebx,%edx,8),%al
		xor    %edx,%edx
		and    $0x00000f,%al
		mov    %dx,_0cdc08_data
		test   %al,%al
		je     _0687ce_jump
		xor    %edx,%edx
		mov    %al,%dl
		cmpb   $0x000000,_0cee3d_data(%edx)
		jne    _0687ce_jump
		mov    $_0cdbc8_data,%eax
		call   _053c34_func

	_0687ce_jump:
		mov    _0cdc08_data,%ax
		mov    _0cdbfe_data,%bx
		add    %eax,%ebx
		mov    _0cee8b_data,%dl
		mov    %bx,_0cdbfe_data
		cmp    $0x000001,%dl
		jne    _068840_jump
		mov    $0x000005,%dh
		mov    $0x000002,%ebx
		mov    $_0cdbc8_data,%eax
		mov    %dh,_0cdc38_data
		xor    %edx,%edx
		xor    %cl,%cl
		call   _01d374_func
		mov    $0x000002,%bl
		mov    $0x0000a0,%edx
		xor    %eax,%eax
		mov    %cl,_0cee8b_data
		mov    _0cdc30_data,%al
		mov    %bl,_0cdc47_data
		sub    %eax,%edx
		mov    _0cdc49_data,%bh
		mov    %edx,%eax
		and    $0x0000f7,%bh
		sub    $0x000010,%eax
		mov    %bh,_0cdc49_data
		mov    %ax,_0cdbfe_data

	_068840_jump:
		mov    _0cdc38_data,%al
		cmp    $0x000005,%al
		ja     _068a6c_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_06876c_switch(,%edx,4)

	_068859_case:
		xor    %ebx,%ebx
		mov    _0cdbfc_data,%edx
		mov    _0cdc30_data,%bl
		sar    $0x000010,%edx
		add    %ebx,%edx
		cmp    $0xffffff9c,%edx
		jge    _068a6c_jump
		inc    %al
		mov    $0x000001,%ebx
		mov    %al,_0cdc38_data
		mov    %ebx,%edx
		mov    $_0cdbc8_data,%eax
		call   _01d374_func
		xor    %eax,%eax
		mov    _0cdc30_data,%al
		mov    _0cdc49_data,%bl
		neg    %eax
		or     $0x000008,%bl
		sub    $0x00003c,%eax
		mov    %bl,_0cdc49_data
		mov    %ax,_0cdbfe_data
		mov    $_0cdbc8_data,%eax
		call   _0544fc_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0688bc_case:
		xor    %edx,%edx
		mov    _0cdbfc_data,%ebx
		mov    _0cdc30_data,%dl
		sar    $0x000010,%ebx
		add    %ebx,%edx
		cmp    $0x000190,%edx
		jle    _068a6c_jump
		mov    $0x000002,%ebx
		inc    %al
		mov    $0x000001,%edx
		mov    %al,_0cdc38_data
		mov    $_0cdbc8_data,%eax
		call   _01d374_func
		xor    %eax,%eax
		xor    %dl,%dl
		mov    _0cdc30_data,%al
		mov    %dl,_0cdc33_data
		neg    %eax
		mov    _0cdc49_data,%dh
		add    $0x00015e,%eax
		and    $0x0000f7,%dh
		mov    %ax,_0cdbfe_data
		mov    %dh,_0cdc49_data
		mov    $_0cdbc8_data,%eax
		call   _0544fc_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06892f_case:
		cmpb   $0x000000,_0cdc35_data
		jne    _068a6c_jump
		cmpb   $0x000000,_0cdc34_data
		jne    _068a6c_jump
		inc    %al
		mov    %al,_0cdc38_data
		mov    $_0cdbc8_data,%eax
		call   _0544fc_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06895e_case:
		mov    $_0cdbc8_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _068a6c_jump
		mov    _0cdc38_data,%bh
		mov    $0x000001,%edx
		inc    %bh
		mov    $_0cdbc8_data,%eax
		mov    %bh,_0cdc38_data
		mov    $0x000003,%ebx
		call   _01d374_func
		mov    $0xffffffc4,%edx
		xor    %eax,%eax
		mov    _0cdc49_data,%cl
		mov    _0cdc30_data,%al
		or     $0x000008,%cl
		sub    %eax,%edx
		mov    %cl,_0cdc49_data
		mov    %dx,_0cdbfe_data
		mov    $_0cdbc8_data,%eax
		call   _0544fc_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0689c4_case:
		xor    %edx,%edx
		mov    _0cdbfc_data,%ebx
		mov    _0cdc30_data,%dl
		sar    $0x000010,%ebx
		add    %ebx,%edx
		cmp    $0x000190,%edx
		jle    _068a6c_jump
		mov    $0x000001,%ebx
		inc    %al
		xor    %edx,%edx
		mov    %al,_0cdc38_data
		mov    $_0cdbc8_data,%eax
		call   _01d374_func
		xor    %eax,%eax
		mov    $0x0000a0,%edx
		mov    _0cdc30_data,%al
		sub    %eax,%edx
		mov    _0cdc49_data,%bl
		mov    %edx,%eax
		and    $0x0000f7,%bl
		sub    $0x000010,%eax
		mov    %bl,_0cdc49_data
		mov    %ax,_0cdbfe_data
		mov    $_0cdbc8_data,%eax
		call   _0544fc_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068a31_case:
		cmpb   $0x000000,_0cdc35_data
		jne    _068a6c_jump
		cmpb   $0x000002,_0cdc34_data
		jne    _068a6c_jump
		mov    _0cdc47_data,%ah
		test   %ah,%ah
		jne    _068a62_jump
		movb   $0x000001,_0cee8b_data
		mov    $_0cdbc8_data,%eax
		call   _0544fc_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_068a62_jump:
		mov    %ah,%dl
		dec    %dl
		mov    %dl,_0cdc47_data

	_068a6c_jump:
		mov    $_0cdbc8_data,%eax
		call   _0544fc_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068a7c_func:
		push   %edx
		xor    %ah,%ah
		mov    _0cee99_data,%dl
		mov    %ah,_0ceecf_data
		cmp    $0x000001,%dl
		jne    _068aa4_jump
		mov    _0cec6e_data,%ax
		xor    %dh,%dh
		mov    %ax,_0cec70_data
		mov    %dh,_0cee99_data

	_068aa4_jump:
		pop    %edx
		ret    

_068aa8_switch:
		.long   _068ae8_case
		.long   _068b68_case
		.long   _068b87_case
		.long   _068b9e_case
		.long   _068bbf_case




_068abc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cecc0_data,%bx
		mov    _0cecd4_data,%ax
		dec    %eax
		xor    %edx,%edx
		cmp    $0x000004,%ax
		ja     _068bde_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_068aa8_switch(,%eax,4)

	_068ae8_case:
		cmp    $0x000010,%bx
		jne    _068b07_jump
		cmpw   $0x000001,_0cecc4_data
		je     _068b02_jump
		cmpw   $0x000001,_0cecda_data
		jne    _068b07_jump

	_068b02_jump:
		mov    $_096ef4_data,%edx

	_068b07_jump:
		cmp    $0x000007,%bx
		jne    _068b32_jump
		cmpw   $0x000001,_0cecc4_data
		je     _068b21_jump
		cmpw   $0x000001,_0cecda_data
		jne    _068b32_jump

	_068b21_jump:
		xor    %al,%al
		mov    $_096eb0_data,%edx
		mov    %al,_0cee84_data
		jmp    _068bde_jump

	_068b32_jump:
		cmp    $0x000007,%bx
		jne    _068bde_jump
		cmpb   $0x000000,_0cee84_data
		jne    _068bde_jump
		mov    _0ceec1_data,%cl
		mov    $_096e9e_data,%edx
		test   %cl,%cl
		jne    _068bde_jump
		movb   $0x000001,_0cee84_data
		jmp    _068bde_jump

	_068b68_case:
		cmp    $0x000010,%bx
		jne    _068bde_jump
		cmpw   $0x000001,_0cecda_data
		jne    _068bde_jump
		mov    $_096ec2_data,%edx
		jmp    _068bde_jump

	_068b87_case:
		cmp    $0x00000a,%bx
		jne    _068bde_jump
		cmpw   $0x000001,_0cecc4_data
		jne    _068bde_jump
		mov    $_096ec2_data,%edx
		jmp    _068bde_jump

	_068b9e_case:
		cmp    $0x00000b,%bx
		jne    _068bde_jump
		cmpw   $0x000001,_0cecc4_data
		je     _068bb8_jump
		cmpw   $0x000001,_0cecda_data
		jne    _068bde_jump

	_068bb8_jump:
		mov    $_096e84_data,%edx
		jmp    _068bde_jump

	_068bbf_case:
		cmp    $0x00000b,%bx
		jne    _068bde_jump
		cmpw   $0x000001,_0cecc4_data
		je     _068bd9_jump
		cmpw   $0x000001,_0cecda_data
		jne    _068bde_jump

	_068bd9_jump:
		mov    $_096edc_data,%edx

	_068bde_jump:
		mov    %edx,_0e3da8_data
		xor    %ah,%ah
		mov    %bx,_0cecc0_data
		mov    %ah,_0cee8b_data
		test   %edx,%edx
		je     _068c00_jump
		cmpb   $0x000000,_0ceec1_data
		je     _068c09_jump

	_068c00_jump:
		movb   $0x000001,_0cee8b_data
		jmp    _068c59_jump

	_068c09_jump:
		mov    $0x000084,%ecx
		mov    $_0cda94_data,%esi
		mov    $_0ce2a0_data,%edi
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %eax,%eax
		xor    %ch,%ch
		mov    _0cdafd_data,%al
		mov    %ch,_0cdb04_data
		mov    $0x0000a8,%ecx
		sub    %eax,%ecx
		xor    %edi,%edi
		mov    %cx,_0cdacc_data
		mov    $_068c68_func,%ecx
		mov    %di,_0cdad4_data
		mov    %ecx,_0cc53c_data

	_068c59_jump:
		mov    _0e3da8_data,%edx
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068c68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $_0cda94_data,%edi
		mov    _0cdaa0_data,%ecx

	_068c78_jump:
		xor    %ebx,%ebx
		mov    _0cdb04_data,%bl
		mov    _0e3da8_data,%edx
		add    %ebx,%ebx
		add    %edx,%ebx
		mov    (%ebx),%ax
		movzbw _0cdb04_data,%si
		cmp    $0x000011,%ax
		jb     _068cca_jump
		jbe    _068e4b_jump
		cmp    $0x000013,%ax
		jb     _068e6b_jump
		jbe    _068e01_jump
		cmp    $0x000014,%ax
		jbe    _068ead_jump
		cmp    $0x000015,%ax
		je     _068dd6_jump
		jmp    _068ee3_jump

	_068cca_jump:
		cmp    $0x000001,%ax
		jb     _068ced_jump
		jbe    _068cf7_jump
		cmp    $0x000008,%ax
		jb     _068ee3_jump
		jbe    _068d39_jump
		cmp    $0x00000e,%ax
		je     _068ed1_jump
		jmp    _068ee3_jump

	_068ced_jump:
		test   %ax,%ax
		je     _068d17_jump
		jmp    _068ee3_jump

	_068cf7_jump:
		mov    _0cdb15_data,%bh
		mov    _0cdb04_data,%al
		or     $0x000008,%bh
		inc    %al
		mov    %bh,_0cdb15_data
		mov    %al,_0cdb04_data
		jmp    _068ee3_jump

	_068d17_jump:
		mov    _0cdb15_data,%ah
		mov    _0cdb04_data,%dl
		and    $0x0000f7,%ah
		inc    %dl
		mov    %ah,_0cdb15_data
		mov    %dl,_0cdb04_data
		jmp    _068ee3_jump

	_068d39_jump:
		mov    _0cdb04_data,%ah
		xor    %ebx,%ebx
		inc    %ah
		mov    %ah,%bl
		mov    %ah,_0cdb04_data
		mov    (%edx,%ebx,2),%dl
		and    $0x0000ff,%edx
		mov    %edi,%eax
		call   _01d36c_func
		incb   _0cdb04_data
		xor    %edx,%edx
		mov    _0e3da8_data,%ebx
		mov    _0cdb04_data,%dl
		mov    (%ebx,%edx,2),%dl
		and    $0x0000ff,%edx
		mov    %edi,%eax
		call   _01d364_func
		testb  $0x000008,_0cdb15_data
		je     _068da7_jump
		xor    %edx,%edx
		mov    _0cdb01_data,%dl
		shl    $0x000002,%edx
		lea    (%ecx,%edx,1),%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0cdb00_data,%dl
		movsbw (%ebx,%edx,8),%ax
		jmp    _068dc5_jump

	_068da7_jump:
		xor    %edx,%edx
		mov    _0cdb01_data,%dl
		shl    $0x000002,%edx
		lea    (%ecx,%edx,1),%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0cdb00_data,%dl
		movsbw 0x000001(%ebx,%edx,8),%ax

	_068dc5_jump:
		mov    %ax,_0cdad4_data
		incb   _0cdb04_data
		jmp    _068ee3_jump

	_068dd6_jump:
		mov    _0cdb04_data,%ah
		xor    %ebx,%ebx
		inc    %ah
		mov    %ah,%bl
		mov    %ah,_0cdb04_data
		mov    (%edx,%ebx,2),%ax
		mov    %bl,%dl
		inc    %dl
		mov    %ax,_0cdaca_data
		mov    %dl,_0cdb04_data
		jmp    _068ee3_jump

	_068e01_jump:
		mov    %edi,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _068ee3_jump
		xor    %edx,%edx
		mov    _0cdb01_data,%dl
		lea    0x000000(,%edx,4),%ebx
		mov    _0cdaa0_data,%edx
		add    %edx,%ebx
		xor    %edx,%edx
		mov    (%ebx),%ebx
		mov    _0cdb00_data,%dl
		mov    _0cdafe_data,%al
		cmp    0x000002(%ebx,%edx,8),%al
		jne    _068ee3_jump
		incb   _0cdb04_data
		jmp    _068ee3_jump

	_068e4b_jump:
		xor    %eax,%eax
		mov    0x000002(%ebx),%dx
		mov    _0cdaff_data,%al
		cmp    %dx,%ax
		jne    _068ee3_jump
		addb   $0x000002,_0cdb04_data
		jmp    _068ee3_jump

	_068e6b_jump:
		mov    _0cdaca_data,%ax
		cmp    0x000002(%ebx),%ax
		jl     _068e80_jump
		testb  $0x000008,_0cdb15_data
		jne    _068ea4_jump

	_068e80_jump:
		xor    %edx,%edx
		mov    _0e3da8_data,%ebx
		mov    _0cdb04_data,%dl
		mov    _0cdaca_data,%ax
		cmp    0x000002(%ebx,%edx,2),%ax
		jg     _068ee3_jump
		testb  $0x000008,_0cdb15_data
		jne    _068ee3_jump

	_068ea4_jump:
		addb   $0x000002,_0cdb04_data
		jmp    _068ee3_jump

	_068ead_jump:
		incb   _0cdb04_data
		xor    %ebx,%ebx
		mov    _0cdb04_data,%bl
		mov    (%edx,%ebx,2),%ax
		mov    %bl,%bh
		inc    %bh
		mov    %ax,_0cdad4_data
		mov    %bh,_0cdb04_data
		jmp    _068ee3_jump

	_068ed1_jump:
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d36c_func
		mov    %edi,%eax
		xor    %edx,%edx
		call   _01d364_func

	_068ee3_jump:
		xor    %eax,%eax
		mov    _0cdb04_data,%al
		cmp    %ax,%si
		jne    _068c78_jump
		xor    %eax,%eax
		mov    _0cdafe_data,%al
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    _0cda98_data,%eax
		mov    0x000008(%eax,%edx,4),%ax
		xor    %al,%al
		and    $0x0000c0,%ah
		and    $0x00ffff,%eax
		sar    $0x00000e,%eax
		inc    %eax
		mov    %al,%dl
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		call   _053bb0_func
		and    $0x0000ff,%edx
		cmpb   $0x000000,_0cee3d_data(%edx)
		jne    _068f40_jump
		add    %ax,_0cdaca_data

	_068f40_jump:
		cmpb   $0x000000,_0cdb01_data
		jne    _068f59_jump
		cmpb   $0x000000,_0cdb00_data
		jne    _068f59_jump
		movb   $0x000001,_0cee8b_data

	_068f59_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_068f60_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x000084,%ecx
		mov    $_0ce2a0_data,%esi
		xor    %ah,%ah
		mov    $_0cda94_data,%edi
		mov    %ah,_0cee8b_data
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		call   _03b8d0_func
		call   _03b880_func
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_068fe0_func:
		push   %edx
		cmpb   $0x000000,_0cee6d_data
		je     _069014_jump
		call   _028e30_func
		add    $0x000041,%al
		mov    %al,_0cee6b_data
		mov    _0ced3e_data,%al
		cmp    _0cee6b_data,%al
		jne    _06900c_jump
		movb   $0x000001,_0cee6e_data
		pop    %edx
		ret    

	_06900c_jump:
		xor    %dh,%dh
		mov    %dh,_0cee6e_data

	_069014_jump:
		pop    %edx
		ret    



_069018_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    $0x000014,%eax
		call   _07b4e8_func
		mov    %eax,%ecx
		movb   $0x000052,(%eax)
		mov    %eax,%edi
		movb   $0x000041,0x000001(%eax)
		cmpb   $0x000000,_0cee70_data
		jne    _0690c6_jump
		call   _01cb80_func
		mov    $0x000032,%eax
		call   _07b4e8_func
		mov    %eax,%esi
		mov    %eax,%ebp
		xor    %eax,%eax
		mov    _0cee6b_data,%al
		push   %eax
		push   $_0c0ca0_data
		lea    0x000008(%esp),%ebx
		movb   $0x000059,0x000002(%ecx)
		push   %esi
		mov    $0x000008,%edx
		movb   $0x00004d,0x000003(%ecx)
		call   _07c07b_func
		add    $0x00000c,%esp
		movb   $0x000041,0x000004(%ecx)
		mov    %esi,%eax
		movb   $0x00004e,0x000005(%ecx)
		call   _08159c_func
		movb   $0x000056,0x000006(%ecx)
		movb   $0x00004f,0x000007(%ecx)
		movb   $0x00002e,0x000008(%ecx)
		movb   $0x00004c,0x000009(%ecx)
		lea    0x00001e(%esp),%eax
		movb   $0x000000,0x00000a(%ecx)
		mov    %ecx,%edx
		movb   $0x000000,0x000006(%ecx)
		call   _07b7f6_func
		call   _07b850_func
		test   %eax,%eax
		je     _0690bf_jump
		movb   $0x000001,_0cee70_data

	_0690bf_jump:
		mov    %ebp,%eax
		call   _07b680_func

	_0690c6_jump:
		mov    %edi,%eax
		call   _07b680_func
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0690e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0e3dac_data,%ebx
		inc    %ebx
		cmp    $0x000100,%ebx
		jl     _0690f4_jump
		xor    %ebx,%ebx

	_0690f4_jump:
		mov    _096f36_data(,%ebx,2),%edx
		cwtl   
		sar    $0x000010,%edx
		lea    0x000001(%eax),%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    %edx,%eax
		mov    %ebx,_0e3dac_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069118_func:
		push   %edx
		test   %eax,%eax
		je     _069129_jump
		xor    %eax,%eax
		call   _08161e_func
		call   _07cf42_func

	_069129_jump:
		xor    %edx,%edx

	_06912b_jump:
		add    $0x000002,%edx
		call   _07cf1e_func
		mov    %ax,_096f36_data(%edx)
		cmp    $0x000200,%edx
		jne    _06912b_jump
		xor    %edx,%edx
		mov    %edx,_0e3dac_data
		pop    %edx
		ret    



_069150_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0ceebb_data
		jne    _06917f_jump
		mov    $_0cda94_data,%eax
		call   _076f4c_func
		mov    %eax,%ecx
		test   %eax,%eax
		je     _06917f_jump
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _01d374_func
		mov    %ecx,%eax
		call   _01db8c_func

	_06917f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069184_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x00000c,_0ceec2_data
		jne    _0691a2_jump
		xor    %eax,%eax
		mov    _0cdabc_data,%cx
		mov    _0cdafc_data,%al
		add    %ecx,%eax
		jmp    _0691ee_jump

	_0691a2_jump:
		mov    _0ceec5_data,%dh
		cmp    $0x00000c,%dh
		jne    _0691c8_jump
		xor    %eax,%eax
		mov    _0cdabc_data,%bx
		mov    _0cdafc_data,%al
		add    %ebx,%eax
		sub    $0x00000f,%eax
		mov    %dh,_0ceec2_data
		jmp    _0691ee_jump

	_0691c8_jump:
		mov    _0ceec6_data,%bl
		cmp    $0x00000c,%bl
		jne    _0691f0_jump
		xor    %eax,%eax
		mov    _0cdabc_data,%dx
		mov    _0cdafc_data,%al
		add    %edx,%eax
		add    $0x00000f,%eax
		mov    %bl,_0ceec2_data

	_0691ee_jump:
		and    $0x0000f0,%al

	_0691f0_jump:
		xor    %edx,%edx
		cwtl   
		mov    _0cdafc_data,%dl
		add    $0x000008,%eax
		sub    %edx,%eax
		mov    %eax,_0cdabc_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069208_func:
		push   %ebx
		push   %ecx
		push   %edx
		xor    %eax,%eax
		mov    _0cdabc_data,%cx
		mov    _0cdafc_data,%al
		add    %eax,%ecx
		mov    _0cdb08_data,%al
		add    $0x000016,%al
		mov    _0cdad6_data,%ah
		mov    _0cec71_data,%dl
		add    %ah,%al
		test   $0x000002,%dl
		je     _06924e_jump
		mov    $0x000050,%ebx
		and    $0x0000ff,%eax
		sub    %eax,%ebx
		mov    %ebx,%eax
		mov    $0x000050,%ebx
		sar    %eax
		sub    %eax,%ebx
		mov    %ebx,%eax

	_06924e_jump:
		mov    _0cdac0_data,%dx
		xor    %ah,%ah
		add    %edx,%eax
		cwtl   
		sar    $0x000004,%eax
		movswl %cx,%ecx
		movswl %ax,%ebx
		mov    %ecx,%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e0e4_func
		mov    %al,_0ceec2_data
		cmp    $0x00000c,%al
		je     _0692a3_jump
		lea    -0x000008(%ecx),%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e0e4_func
		mov    %al,_0ceec5_data
		lea    0x000008(%ecx),%eax
		sar    $0x000004,%eax
		mov    %ebx,%edx
		cwtl   
		call   _01e0e4_func
		mov    %al,_0ceec6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0692a3_jump:
		mov    $0x00000f,%dh
		mov    %dh,_0ceec6_data
		mov    %dh,_0ceec5_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0692b8_func:
		push   %ebx
		push   %edx
		push   %esi
		cmpb   $0x000002,_0cdb01_data
		jne    _0692d2_jump
		mov    _0cdb13_data,%dl
		test   %dl,%dl
		jne    _069392_jump

	_0692d2_jump:
		cmpw   $0x00000a,_0cece8_data
		jle    _06939e_jump
		xor    %ebx,%ebx
		mov    _0cdad6_data,%dx
		mov    %bx,_0cdad6_data
		call   _069208_func
		mov    _0ceec2_data,%bl
		mov    %dx,_0cdad6_data
		cmp    $0x00000c,%bl
		je     _069319_jump
		cmpb   $0x00000c,_0ceec5_data
		je     _069319_jump
		cmpb   $0x00000c,_0ceec6_data
		jne    _069387_jump

	_069319_jump:
		testb  $0x000018,_0cec71_data
		jne    _069387_jump
		cmpb   $0x000002,_0cdb01_data
		jne    _06933d_jump
		cmpb   $0x000008,_0cdb00_data
		jne    _06933d_jump
		movw   $0x00005a,_0cdaea_data

	_06933d_jump:
		call   _069184_func
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		xor    %esi,%esi
		mov    $0xffffffff,%edx
		mov    $0x000009,%eax
		mov    %si,_0cdad4_data
		mov    %si,_0cdad6_data
		mov    %si,_0cdae6_data
		mov    %si,_0ceca2_data
		call   _06f35c_func
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_069387_jump:
		mov    %dx,_0cdad6_data
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_069392_jump:
		je     _06939e_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0cdb13_data

	_06939e_jump:
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_0693a4_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,%edi
		testb  $0x000002,_0cec71_data
		je     _0693c2_jump
		movw   $0x000008,0x000010(%esp)
		jmp    _0693c9_jump

	_0693c2_jump:
		movw   $0x000004,0x000010(%esp)

	_0693c9_jump:
		mov    _0ce3a2_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		mov    $0xffffffff,%ecx
		add    %edx,%eax
		mov    _0cc1f0_data,%esi
		shl    $0x000002,%eax
		mov    %cx,_0cdade_data
		add    %eax,%esi
		mov    _0ce46c_data,%ax
		xor    %ecx,%ecx
		test   %ax,%ax
		jle    _069ba7_jump

	_069401_jump:
		testb  $0x000020,0x000081(%esi)
		je     _069b7b_jump
		cmp    0x000034(%esi),%di
		je     _069b7b_jump
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000020,_092265_data(,%eax,4)
		je     _069437_jump
		mov    0x000040(%esi),%eax
		sar    $0x000010,%eax
		call   _053bb0_func
		mov    %eax,%ebx
		jmp    _06943b_jump

	_069437_jump:
		mov    0x000042(%esi),%bx

	_06943b_jump:
		mov    _0cdad6_data,%dx
		mov    0x00004c(%esi),%ax
		sub    %edx,%eax
		add    %eax,%ebx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _069453_jump
		neg    %eax

	_069453_jump:
		mov    %eax,%ebx
		mov    0x00000e(%esp),%eax
		add    $0x000002,%ebx
		sar    $0x000010,%eax
		movswl %bx,%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		cmp    %ebx,%eax
		jge    _06946c_jump
		mov    %ebx,%eax

	_06946c_jump:
		mov    %eax,%ebx
		mov    0x000060(%esi),%ax
		cmp    $0x00006d,%ax
		je     _069484_jump
		cmp    $0x0000f1,%ax
		je     _069484_jump
		cmp    $0x0000b3,%ax
		jne    _069487_jump

	_069484_jump:
		add    $0x000008,%ebx

	_069487_jump:
		mov    0x000052(%esi),%eax
		sar    $0x000010,%eax
		movswl %bx,%edx
		test   %eax,%eax
		jge    _069496_jump
		neg    %eax

	_069496_jump:
		cmp    %edx,%eax
		jge    _069b7b_jump
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		jne    _069b7b_jump
		movswl %cx,%eax
		mov    _0ce3a4_data(,%eax,2),%ax
		mov    _0ccd18_data,%edx
		mov    %ax,_0cdade_data
		cmp    $0xfffffffe,%edx
		jne    _0694f6_jump
		mov    _0ccd14_data,%eax
		mov    %eax,%edx
		mov    $0x000002,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		test   %edx,%edx
		je     _0694f6_jump
		incl   _0ccd14_data

	_0694f6_jump:
		mov    $0xffffffff,%edx
		mov    $0x000001,%bh
		mov    _0cdb01_data,%cl
		mov    %dx,_0cdae4_data
		mov    %bh,_0ceebe_data
		cmp    $0x000002,%cl
		jne    _06966b_jump
		mov    0x000060(%esi),%ax
		cmp    $0x000054,%ax
		jb     _06958c_jump
		jbe    _06966b_jump
		cmp    $0x0000a0,%ax
		jb     _069569_jump
		jbe    _0695dc_jump
		cmp    $0x0000ed,%ax
		jb     _069550_jump
		jbe    _069644_jump
		cmp    $0x0000f3,%ax
		je     _069650_jump
		jmp    _06965c_jump

	_069550_jump:
		cmp    $0x0000b2,%ax
		jb     _06965c_jump
		cmp    $0x0000b3,%ax
		jbe    _06966b_jump
		jmp    _06965c_jump

	_069569_jump:
		cmp    $0x000056,%ax
		jb     _06965c_jump
		cmp    $0x000058,%ax
		jbe    _06966b_jump
		cmp    $0x00009f,%ax
		je     _06966b_jump
		jmp    _06965c_jump

	_06958c_jump:
		cmp    $0x000016,%ax
		jb     _0695bb_jump
		jbe    _06962e_jump
		cmp    $0x00001a,%ax
		jb     _06965c_jump
		cmp    $0x00001c,%ax
		jbe    _06962e_jump
		cmp    $0x00003f,%ax
		je     _06962e_jump
		jmp    _06965c_jump

	_0695bb_jump:
		cmp    $0x000001,%ax
		jb     _06965c_jump
		jbe    _0695ec_jump
		cmp    $0x000010,%ax
		jb     _06965c_jump
		cmp    $0x000011,%ax
		jbe    _06960f_jump
		jmp    _06965c_jump

	_0695dc_jump:
		mov    0x000032(%esi),%edx
		mov    $0x00006e,%eax
		sar    $0x000010,%edx
		jmp    _069666_jump

	_0695ec_jump:
		mov    _0cecd4_data,%dx
		cmp    $0x000001,%dx
		je     _06965c_jump
		cmp    $0x000004,%dx
		je     _06965c_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _069666_jump

	_06960f_jump:
		mov    _0cecd4_data,%cx
		cmp    $0x000004,%cx
		je     _06965c_jump
		cmp    $0x000005,%cx
		je     _06965c_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _069666_jump

	_06962e_jump:
		cmpw   $0x000004,_0cecd4_data
		je     _06965c_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _069666_jump

	_069644_jump:
		mov    $0xffffffff,%edx
		mov    $0x0000f8,%eax
		jmp    _069666_jump

	_069650_jump:
		mov    $0xffffffff,%edx
		mov    $0x000034,%eax
		jmp    _069666_jump

	_06965c_jump:
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax

	_069666_jump:
		call   _06f35c_func

	_06966b_jump:
		mov    0x000060(%esi),%ax
		cmp    $0x000057,%ax
		jb     _069709_jump
		jbe    _0697fd_jump
		cmp    $0x00009a,%ax
		jb     _0696cf_jump
		jbe    _0698d9_jump
		cmp    $0x0000a7,%ax
		jb     _0696b6_jump
		jbe    _06978c_jump
		cmp    $0x0000a9,%ax
		jb     _069a33_jump
		jbe    _069892_jump
		cmp    $0x0000cf,%ax
		je     _06998a_jump
		jmp    _069a33_jump

	_0696b6_jump:
		cmp    $0x00009b,%ax
		jbe    _069900_jump
		cmp    $0x0000a2,%ax
		je     _069971_jump
		jmp    _069a33_jump

	_0696cf_jump:
		cmp    $0x000083,%ax
		jb     _0696fa_jump
		jbe    _0697b3_jump
		cmp    $0x000086,%ax
		jb     _069a33_jump
		jbe    _06978c_jump
		cmp    $0x00008a,%ax
		je     _0698b2_jump
		jmp    _069a33_jump

	_0696fa_jump:
		cmp    $0x000058,%ax
		je     _069868_jump
		jmp    _069a33_jump

	_069709_jump:
		cmp    $0x00003f,%ax
		jb     _06974b_jump
		jbe    _06994e_jump
		cmp    $0x000044,%ax
		jb     _06973c_jump
		jbe    _069a16_jump
		cmp    $0x000051,%ax
		jb     _069a33_jump
		jbe    _069781_jump
		cmp    $0x000056,%ax
		je     _0697d0_jump
		jmp    _069a33_jump

	_06973c_jump:
		cmp    $0x000043,%ax
		je     _0699fc_jump
		jmp    _069a33_jump

	_06974b_jump:
		cmp    $0x000010,%ax
		jb     _069776_jump
		cmp    $0x000011,%ax
		jbe    _0697bd_jump
		cmp    $0x00001b,%ax
		jb     _069a33_jump
		jbe    _069a16_jump
		cmp    $0x000031,%ax
		je     _069927_jump
		jmp    _069a33_jump

	_069776_jump:
		cmp    $0x000008,%ax
		je     _06978c_jump
		jmp    _069a33_jump

	_069781_jump:
		movw   $0x000000,0x000052(%esi)
		jmp    _069a33_jump

	_06978c_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _069a33_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _069a33_jump
		mov    $0x00000f,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _069a33_jump

	_0697b3_jump:
		cmpb   $0x000003,0x00006c(%esi)
		jne    _069a33_jump

	_0697bd_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		jmp    _069a33_jump

	_0697d0_jump:
		cmpb   $0x000004,0x00006c(%esi)
		jne    _069a33_jump
		cmpb   $0x000000,0x000076(%esi)
		jne    _0697f1_jump
		mov    $0x000005,%edx
		mov    %esi,%eax
		call   _01d364_func
		jmp    _069a33_jump

	_0697f1_jump:
		mov    %esi,%eax
		call   _077040_func
		jmp    _069a33_jump

	_0697fd_jump:
		mov    0x00006d(%esi),%cl
		movb   $0x000010,0x00007d(%esi)
		test   %cl,%cl
		jne    _069831_jump
		cmpb   $0x000007,0x00006c(%esi)
		jne    _069831_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		mov    0x000032(%esi),%edx
		mov    $0x00006e,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		jmp    _069a33_jump

	_069831_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _069a33_jump
		cmpb   $0x000009,0x00006c(%esi)
		jne    _069a33_jump
		mov    $0x000002,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _01d374_func
		mov    0x000032(%esi),%edx
		mov    $0x000070,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		jmp    _069a33_jump

	_069868_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		movb   $0x000010,0x00007d(%esi)
		call   _01d374_func
		mov    0x000032(%esi),%edx
		mov    $0x00006f,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		jmp    _069a33_jump

	_069892_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _069a33_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _069a33_jump
		mov    %esi,%eax
		call   _077bd0_func
		jmp    _069a33_jump

	_0698b2_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _069a33_jump
		cmpb   $0x00000a,0x00006c(%esi)
		jne    _069a33_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		jmp    _069a33_jump

	_0698d9_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _069a33_jump
		cmpb   $0x00000d,0x00006c(%esi)
		jne    _069a33_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		jmp    _069a33_jump

	_069900_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _069a33_jump
		cmpb   $0x00000f,0x00006c(%esi)
		jne    _069a33_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		jmp    _069a33_jump

	_069927_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _069a33_jump
		cmpb   $0x000000,0x00006c(%esi)
		jne    _069a33_jump
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		jmp    _069a33_jump

	_06994e_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06995e_jump
		cmpb   $0x00000a,0x00006c(%esi)
		je     _069a33_jump

	_06995e_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _05efb0_func
		jmp    _069a33_jump

	_069971_jump:
		testb  $0x000004,_0cec79_data
		je     _069a33_jump
		mov    %esi,%eax
		call   _07a8e0_func
		jmp    _069a33_jump

	_06998a_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _06999a_jump
		cmpb   $0x000001,0x00006c(%esi)
		je     _069a33_jump

	_06999a_jump:
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0xffffffff,%ecx
		call   _01d374_func
		mov    0x000081(%esi),%ah
		mov    $0x000001,%dl
		and    $0x0000df,%ah
		mov    $0x000002,%ebx
		mov    %ah,0x000081(%esi)
		mov    $0x000001,%eax
		mov    %dl,_0cee99_data
		mov    %ax,_0cdad4_data
		mov    _0cec70_data,%ax
		xor    %edx,%edx
		mov    %ax,_0cec6e_data
		mov    $_0cec70_data,%eax
		mov    %cx,_0cdade_data
		call   _07c050_func
		orb    $0x000001,_0cec70_data
		jmp    _069a33_jump

	_0699fc_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _069a33_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _069a33_jump
		mov    $0x000009,%edx
		mov    %esi,%eax
		call   _01d364_func
		jmp    _069a33_jump

	_069a16_jump:
		cmpw   $0x000001,_0cdad6_data
		jle    _069a2a_jump
		mov    _0cdad4_data,%eax
		sar    $0x000010,%eax
		jmp    _069a2f_jump

	_069a2a_jump:
		mov    $0x000002,%eax

	_069a2f_jump:
		mov    %ax,0x00004a(%esi)

	_069a33_jump:
		cmpb   $0x000002,_0cdb01_data
		jne    _069ac3_jump
		mov    _0cdaa0_data,%eax
		mov    0x000004(%eax),%eax
		mov    $0x000004,%cl
		movsbw 0x000018(%eax),%ax
		test   %ax,%ax
		js     _069a59_jump
		sar    %cl,%ax
		jmp    _069a62_jump

	_069a59_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_069a62_jump:
		movswl %ax,%edx
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _069a73_jump
		neg    %eax

	_069a73_jump:
		cmp    %edx,%eax
		jl     _069a98_jump
		mov    _0cec71_data,%al
		and    $0x000001,%al
		cmp    $0x000001,%al
		jne    _069a98_jump
		mov    $0x000003,%ebx
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		jmp    _069ac3_jump

	_069a98_jump:
		mov    $_0cda94_data,%eax
		xor    %edx,%edx
		call   _01d36c_func
		mov    $0x000008,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func
		cmpw   $0x0000c8,_0cdae6_data
		jle    _069ac3_jump
		call   _069150_func

	_069ac3_jump:
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		mov    0x00000c(%esp),%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000074(%esi),%al
		mov    _0cdafd_data,%dl
		add    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    _0cdac0_data,%ax
		sub    %eax,%edx
		mov    0x000060(%esi),%ax
		mov    %dx,_0cdad6_data
		cmp    $0x0000fe,%ax
		jne    _069b62_jump
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		xor    %ebx,%ebx
		mov    _0cdabc_data,%ecx
		mov    _0cdafc_data,%bl
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %ecx,%ebx
		add    %edx,%eax
		sub    %eax,%ebx
		mov    %ebx,(%esp)
		movsbw 0x000076(%esi),%ax
		imul   %ebx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _069b4a_jump
		sar    %cl,%ax
		jmp    _069b53_jump

	_069b4a_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_069b53_jump:
		sub    %ax,_0cdad6_data
		xor    %bh,%bh
		mov    %bh,_0ceebe_data

	_069b62_jump:
		mov    $0xffffffff,%ecx
		movb   $0x000000,0x000000(%ebp)
		mov    %cx,_0cdae6_data
		mov    %cx,_0cecfc_data
		jmp    _069ba7_jump

	_069b7b_jump:
		inc    %ecx
		movswl %cx,%eax
		mov    _0ce3a2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%esi
		mov    _0ce46c_data,%dx
		add    %eax,%esi
		cmp    %dx,%cx
		jl     _069401_jump

	_069ba7_jump:
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     _069bc5_jump
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _069bc5_jump
		mov    %di,_0cdade_data
		jmp    _069be7_jump

	_069bc5_jump:
		mov    _0cdadc_data,%edx
		sar    $0x000010,%edx
		cmp    $0xffffffff,%edx
		je     _069be7_jump
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		movw   $0x000000,0x000054(%edx,%eax,4)

	_069be7_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_069bf0_func:
		push   %esi
		push   %edi
		and    $0x0000ff,%eax
		lea    0x000000(,%eax,4),%esi
		mov    _0cdaa0_data,%eax
		add    %eax,%esi
		xor    %eax,%eax
		mov    %dl,%al
		shl    $0x000003,%eax
		mov    (%esi),%edx
		add    %eax,%edx
		movswl %bx,%eax
		test   %eax,%eax
		jge    _069c19_jump
		neg    %eax

	_069c19_jump:
		sar    $0x000004,%eax
		mov    $0x000070,%ebx
		movsbl %al,%eax
		lea    0x000001(%edx),%esi
		cmp    %ebx,%eax
		jle    _069c2d_jump
		mov    %ebx,%eax

	_069c2d_jump:
		mov    %al,%bl
		mov    _0cdad4_data,%di
		neg    %bl
		test   %di,%di
		jle    _069c52_jump
		movsbl %al,%ebx
		xor    %eax,%eax
		mov    %cl,%al
		movb   $0x0000f0,(%esi)
		cmp    %ebx,%eax
		jge    _069c4d_jump
		mov    %ebx,%eax

	_069c4d_jump:
		mov    %al,(%edx)
		pop    %edi
		pop    %esi
		ret    

	_069c52_jump:
		jge    _069c6b_jump
		xor    %eax,%eax
		mov    %cl,%al
		movsbl %bl,%ebx
		neg    %eax
		cmp    %ebx,%eax
		jle    _069c63_jump
		mov    %ebx,%eax

	_069c63_jump:
		mov    %al,(%esi)
		movb   $0x000010,(%edx)
		pop    %edi
		pop    %esi
		ret    

	_069c6b_jump:
		mov    %cl,%ah
		mov    %cl,(%esi)
		neg    %ah
		mov    %ah,(%esi)
		mov    %cl,(%edx)
		pop    %edi
		pop    %esi
		ret    



_069c78_func:
		push   %ebx
		push   %ecx
		push   %edx
		test   %al,%al
		je     _069d40_jump
		mov    $0x000030,%ecx
		mov    $0x000011,%edx
		mov    _0ceca0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069bf0_func
		mov    $0x000030,%ecx
		mov    $0x000012,%edx
		mov    _0ceca0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069bf0_func
		mov    $0x000030,%ecx
		mov    $0x000013,%edx
		mov    _0ceca0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069bf0_func
		mov    $0x000030,%ecx
		mov    $0x000003,%edx
		mov    _0ceca0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069bf0_func
		mov    $0x000030,%ecx
		mov    $0x000005,%edx
		mov    _0ceca0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069bf0_func
		mov    $0x000030,%ecx
		mov    $0x000004,%edx
		mov    _0ceca0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069bf0_func
		mov    $0x000030,%ecx
		mov    $0x000020,%edx
		jmp    _069e49_jump

	_069d40_jump:
		mov    $0x000020,%ecx
		mov    $0x000002,%eax
		mov    _0ceca0_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		call   _069bf0_func
		mov    $0x000020,%ecx
		mov    $0x000001,%edx
		mov    _0ceca0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069bf0_func
		mov    $0x000020,%ecx
		mov    _0ceca0_data,%ebx
		mov    $0x000002,%edx
		sar    $0x000010,%ebx
		mov    %edx,%eax
		call   _069bf0_func
		mov    $0x000020,%ecx
		mov    $0x000018,%edx
		mov    _0ceca0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069bf0_func
		mov    $0x000020,%ecx
		mov    $0x00000b,%edx
		mov    _0ceca0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069bf0_func
		mov    $0x000020,%ecx
		mov    $0x00000c,%edx
		mov    _0ceca0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069bf0_func
		mov    $0x000020,%ecx
		mov    $0x00000d,%edx
		mov    _0ceca0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069bf0_func
		mov    $0x000020,%ecx
		mov    $0x000003,%edx
		mov    _0ceca0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069bf0_func
		mov    $0x000020,%ecx
		mov    $0x000005,%edx
		mov    _0ceca0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069bf0_func
		mov    $0x000020,%ecx
		mov    $0x000004,%edx

	_069e49_jump:
		mov    _0ceca0_data,%ebx
		mov    $0x000002,%eax
		sar    $0x000010,%ebx
		call   _069bf0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_069e60_func:
		push   %edx
		mov    _0cecc8_data,%dx
		test   %dx,%dx
		je     _069e78_jump
		movw   $0x000001,_0cdadc_data
		pop    %edx
		ret    

	_069e78_jump:
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _069eb4_jump
		mov    _0ceebe_data,%al
		test   %al,%al
		jbe    _069e94_jump
		cmp    $0x000001,%al
		jne    _069ebb_jump
		jmp    _069eb4_jump

	_069e94_jump:
		mov    _0ceca0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _069ea2_jump
		neg    %eax

	_069ea2_jump:
		cmp    $0x000100,%eax
		jle    _069eb4_jump
		movw   $0x000001,_0cdadc_data
		pop    %edx
		ret    

	_069eb4_jump:
		mov    %dx,_0cdadc_data

	_069ebb_jump:
		pop    %edx
		ret    



_069ec0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    _0cdaa0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0cdb00_data,%dl
		testb  $0x000001,0x000007(%eax,%edx,8)
		je     _06a17f_jump
		xor    %edx,%edx
		mov    _0ceec3_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _06a17f_jump
		mov    _0cdb01_data,%bh
		cmp    $0x000007,%bh
		jne    _069f38_jump
		mov    _0cdad4_data,%ax
		mov    %bh,%cl
		cwtl   
		shl    %cl,%eax
		mov    _0cdad6_data,%cx
		sub    $0x000002,%ecx
		mov    %ax,_0ceca2_data
		mov    %cx,_0cdad6_data
		jmp    _069f51_jump

	_069f38_jump:
		cmp    $0x000004,%bh
		jne    _069f48_jump
		movw   $0x00fffd,_0cdad6_data
		jmp    _069f51_jump

	_069f48_jump:
		movw   $0x00fffb,_0cdad6_data

	_069f51_jump:
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		mov    _0cdad6_data,%cx
		cmp    $0xffffffff,%eax
		je     _069f89_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		mov    0x00004a(%edx,%eax,4),%ebx
		sar    $0x000010,%ebx
		movswl %cx,%eax
		cmp    %ebx,%eax
		jle    _069f82_jump
		mov    %ebx,%eax

	_069f82_jump:
		mov    %eax,%ecx
		jmp    _06a03f_jump

	_069f89_jump:
		mov    _0cdaf6_data,%al
		cmp    $0x00000c,%al
		jb     _069fbd_jump
		jbe    _06a03f_jump
		cmp    $0x000014,%al
		jb     _069fb1_jump
		cmp    $0x000015,%al
		jbe    _069fff_jump
		cmp    $0x000018,%al
		jb     _06a012_jump
		jmp    _06a03f_jump

	_069fb1_jump:
		cmp    $0x000012,%al
		jb     _06a03f_jump
		jbe    _069fd8_jump
		jmp    _069fe9_jump

	_069fbd_jump:
		cmp    $0x000004,%al
		jb     _069fce_jump
		cmp    $0x000005,%al
		jbe    _069fff_jump
		cmp    $0x000008,%al
		jb     _06a012_jump
		jmp    _06a03f_jump

	_069fce_jump:
		cmp    $0x000002,%al
		jb     _06a03f_jump
		ja     _069fe9_jump

	_069fd8_jump:
		mov    _0cdad4_data,%di
		cmp    $0x000005,%di
		jle    _06a03f_jump
		mov    %edi,%ecx
		jmp    _06a03c_jump

	_069fe9_jump:
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffb,%eax
		jge    _06a03f_jump
		mov    _0cdad4_data,%cx
		jmp    _06a03e_jump

	_069fff_jump:
		mov    _0cdad4_data,%si
		cmp    $0x00000a,%si
		jle    _06a03f_jump
		mov    $0x000001,%cl
		mov    %esi,%eax
		jmp    _06a027_jump

	_06a012_jump:
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff6,%eax
		jge    _06a03f_jump
		mov    $0x000001,%cl
		mov    _0cdad4_data,%ax

	_06a027_jump:
		test   %ax,%ax
		js     _06a031_jump
		sar    %cl,%ax
		jmp    _06a03a_jump

	_06a031_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06a03a_jump:
		mov    %eax,%ecx

	_06a03c_jump:
		neg    %ecx

	_06a03e_jump:
		dec    %ecx

	_06a03f_jump:
		mov    %cx,_0cdad6_data
		call   _069e60_func
		testb  $0x000002,_0cec71_data
		je     _06a05b_jump
		mov    $0x000100,%edx
		jmp    _06a060_jump

	_06a05b_jump:
		mov    $0x000200,%edx

	_06a060_jump:
		cmpb   $0x000000,_0cee99_data
		je     _06a0a4_jump
		xor    %eax,%eax
		call   _069c78_func
		cmpb   $0x000000,_0cdb01_data
		jne    _06a093_jump
		cmpb   $0x000028,_0cdb00_data
		jne    _06a093_jump
		mov    $0x000019,%ebx
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		jmp    _06a0e6_jump

	_06a093_jump:
		mov    $0x00001b,%ebx
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		jmp    _06a0e6_jump

	_06a0a4_jump:
		mov    _0ceca0_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		test   %eax,%eax
		jge    _06a0b5_jump
		neg    %eax

	_06a0b5_jump:
		cmp    %edx,%eax
		setg   %al
		mov    %al,%dl
		xor    %eax,%eax
		mov    %dl,%al
		call   _069c78_func
		test   %dl,%dl
		je     _06a0da_jump
		mov    $0x000011,%ebx
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		jmp    _06a0e6_jump

	_06a0da_jump:
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx

	_06a0e6_jump:
		call   _01d374_func
		mov    $0xffffffff,%ebx
		mov    $0xffffffff,%ecx
		xor    %eax,%eax
		xor    %dh,%dh
		mov    %ax,_0cebba_data
		mov    %dh,_0ceece_data
		mov    %bx,_0cecfc_data
		mov    %cx,_0cdade_data
		mov    _0cdabc_data,%ax
		xor    %dl,%dl
		xor    %bl,%bl
		xor    %cl,%cl
		mov    %dx,_0cece8_data
		mov    %bl,_0cdb05_data
		mov    %cl,_0ceec3_data
		mov    %ax,_0cece2_data
		mov    _0cdac0_data,%ax
		xor    %bh,%bh
		xor    %ch,%ch
		mov    %bh,_0cdb06_data
		mov    %ax,_0cece0_data
		mov    _0cec71_data,%al
		mov    %ch,_0cdbc4_data
		test   $0x000002,%al
		je     _06a17f_jump
		mov    $0x000001,%cl
		mov    _0cdad6_data,%ax
		test   %ax,%ax
		js     _06a16f_jump
		sar    %cl,%ax
		jmp    _06a178_jump

	_06a16f_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06a178_jump:
		dec    %eax
		mov    %ax,_0cdad6_data

	_06a17f_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06a188_switch:
		.long   _06a248_case
		.long   _06a248_case
		.long   _06a252_case
		.long   _06a248_case
		.long   _06a25a_case
		.long   _06a248_case




_06a1a0_func:
		push   %esi
		push   %edi
		sub    $0x000018,%esp
		mov    %al,0x000014(%esp)
		mov    %ebx,%edi
		mov    %ecx,%esi
		test   %al,%al
		jne    _06a1bf_jump
		mov    %bx,_0ceca2_data
		xor    %ebx,%ebx
		jmp    _06a352_jump

	_06a1bf_jump:
		xor    %eax,%eax
		movswl %bx,%ebx
		mov    0x000014(%esp),%al
		imul   %ebx,%eax
		mov    $0x000008,%cl
		test   %eax,%eax
		je     _06a1d5_jump
		sar    %cl,%eax
		jmp    _06a1db_jump

	_06a1d5_jump:
		neg    %eax
		sar    %cl,%eax
		neg    %eax

	_06a1db_jump:
		mov    %eax,0x000008(%esp)
		xor    %eax,%eax
		mov    $0x000003,%cl
		mov    0x000014(%esp),%al
		test   %ax,%ax
		js     _06a1f1_jump
		sar    %cl,%ax
		jmp    _06a1fa_jump

	_06a1f1_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06a1fa_jump:
		test   %ax,%ax
		je     _06a204_jump
		movswl %ax,%ebx
		jmp    _06a209_jump

	_06a204_jump:
		mov    $0x000001,%ebx

	_06a209_jump:
		mov    $0x000002,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,(%esp)
		mov    (%esp),%eax
		mov    $0x000003,%cl
		mov    %eax,0x000004(%esp)
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    0x000008(%esp),%ecx
		add    (%esp),%ecx
		add    %eax,%ecx
		mov    _0cecd4_data,%ax
		dec    %eax
		mov    %ecx,0x000010(%esp)
		cmp    $0x000005,%ax
		ja     _06a25a_case
		and    $0x00ffff,%eax
		jmp    *%cs:_06a188_switch(,%eax,4)

	_06a248_case:
		movl   $0x000006,0x00000c(%esp)
		jmp    _06a25a_case

	_06a252_case:
		movl   $0x000003,0x00000c(%esp)

	_06a25a_case:
		mov    0x000010(%esp),%ecx
		test   %cx,%cx
		jle    _06a2ae_jump
		cmpw   $0x000000,0x000004(%esp)
		jle    _06a282_jump
		mov    0x00000c(%esp),%eax
		mov    $0x000008,%cl
		add    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		jmp    _06a284_jump

	_06a282_jump:
		xor    %eax,%eax

	_06a284_jump:
		cmpw   $0x000000,0x000008(%esp)
		jle    _06a291_jump
		movswl %di,%edx
		jmp    _06a293_jump

	_06a291_jump:
		xor    %edx,%edx

	_06a293_jump:
		mov    $0x000008,%cl
		add    %eax,%edx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    _0ceca2_data,%cx
		add    %edx,%eax
		cmp    %cx,%ax
		jge    _06a301_jump
		mov    %ecx,%eax
		jmp    _06a301_jump

	_06a2ae_jump:
		jge    _06a2fb_jump
		cmpw   $0x000000,0x000004(%esp)
		jge    _06a2cf_jump
		sub    0x00000c(%esp),%edx
		mov    $0x000008,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %bx,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		jmp    _06a2d1_jump

	_06a2cf_jump:
		xor    %eax,%eax

	_06a2d1_jump:
		cmpw   $0x000000,0x000008(%esp)
		jge    _06a2de_jump
		movswl %di,%edx
		jmp    _06a2e0_jump

	_06a2de_jump:
		xor    %edx,%edx

	_06a2e0_jump:
		mov    $0x000008,%cl
		add    %eax,%edx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    _0ceca2_data,%cx
		add    %edx,%eax
		cmp    %cx,%ax
		jle    _06a301_jump
		mov    %ecx,%eax
		jmp    _06a301_jump

	_06a2fb_jump:
		mov    _0ceca2_data,%ax

	_06a301_jump:
		mov    0x000010(%esp),%esi
		test   %si,%si
		je     _06a352_jump
		mov    _0ceca2_data,%dx
		add    %esi,%edx
		test   %ax,%ax
		jle    _06a333_jump
		cmp    _0ceca2_data,%ax
		jle    _06a328_jump
		mov    %dx,_0ceca2_data

	_06a328_jump:
		cmp    _0ceca2_data,%ax
		jge    _06a352_jump
		jmp    _06a34c_jump

	_06a333_jump:
		cmp    _0ceca2_data,%ax
		jge    _06a343_jump
		mov    %dx,_0ceca2_data

	_06a343_jump:
		cmp    _0ceca2_data,%ax
		jle    _06a352_jump

	_06a34c_jump:
		mov    %ax,_0ceca2_data

	_06a352_jump:
		mov    _0ceca2_data,%cx
		test   %cx,%cx
		je     _06a3bd_jump
		mov    %ecx,%eax
		mov    $0x000004,%cl
		test   %ax,%ax
		js     _06a36c_jump
		sar    %cl,%ax
		jmp    _06a375_jump

	_06a36c_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06a375_jump:
		cwtl   
		xor    %edx,%edx
		call   _053bb0_func
		mov    %ax,_0cdad4_data
		mov    $_0cda94_data,%eax
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _06a3c4_jump
		cmpb   $0x000002,_0cdb01_data
		je     _06a3c4_jump
		xor    %edi,%edi
		mov    %di,_0cdad4_data
		mov    %di,_0ceca2_data
		mov    %di,_0cdadc_data
		jmp    _06a3c4_jump

	_06a3bd_jump:
		mov    %cx,_0cdad4_data

	_06a3c4_jump:
		mov    _0cdb01_data,%cl
		test   %cl,%cl
		je     _06a3d8_jump
		cmp    $0x000001,%cl
		je     _06a3d8_jump
		cmp    $0x000003,%cl
		jne    _06a3ef_jump

	_06a3d8_jump:
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06a3ef_jump
		mov    $_0cda94_data,%eax
		call   _0252c0_func

	_06a3ef_jump:
		cmpb   $0x000002,_0cdb01_data
		jne    _06a404_jump
		cmpb   $0x00000f,_0cdb00_data
		jne    _06a404_jump
		add    $0x000002,%ebx

	_06a404_jump:
		mov    _0ceca2_data,%cx
		cmp    %cx,%bx
		jg     _06a41c_jump
		mov    %ecx,%eax
		sub    %ebx,%eax
		mov    %ax,_0ceca2_data
		jmp    _06a448_jump

	_06a41c_jump:
		movswl %bx,%eax
		mov    _0ceca0_data,%edx
		neg    %eax
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jg     _06a43f_jump
		mov    %ecx,%edi
		add    %ebx,%edi
		mov    %di,_0ceca2_data
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		ret    

	_06a43f_jump:
		xor    %esi,%esi
		mov    %si,_0ceca2_data

	_06a448_jump:
		add    $0x000018,%esp
		pop    %edi
		pop    %esi
		ret    

_06a450_switch:
		.long   _06a7e1_case
		.long   _06a7ea_case
		.long   _06a7ab_case
		.long   _06a7ab_case
		.long   _06a7b7_case
		.long   _06a7b7_case




_06a468_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0cecd4_data,%ax
		xor    %esi,%esi
		cmp    $0x000003,%ax
		jne    _06a482_jump
		mov    $0x000020,%bh
		jmp    _06a484_jump

	_06a482_jump:
		mov    $0x000010,%bh

	_06a484_jump:
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06a5e9_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		testb  $0x000020,0x000081(%ecx)
		jne    _06a4b9_jump
		movw   $0x00ffff,_0cdade_data

	_06a4b9_jump:
		mov    0x000052(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06a4c5_jump
		neg    %eax

	_06a4c5_jump:
		cmp    $0x000008,%eax
		jg     _06a4e2_jump
		cmpw   $0x000000,0x000054(%ecx)
		jl     _06a4e2_jump
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06a5e9_jump

	_06a4e2_jump:
		mov    _0cdadc_data,%edx
		mov    %esp,%eax
		sar    $0x000010,%edx
		call   _0693a4_func
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06a5e9_jump
		mov    0x000052(%ecx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06a50f_jump
		neg    %eax

	_06a50f_jump:
		cmp    $0x000008,%eax
		jle    _06a5e9_jump
		mov    $0xffffffff,%eax
		mov    0x000060(%ecx),%dx
		mov    %ax,_0cdade_data
		cmp    $0x0000fe,%dx
		jne    _06a537_jump
		movw   $0x000001,_0cdadc_data

	_06a537_jump:
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		mov    _0cdb01_data,%cl
		call   _01d36c_func
		cmpb   $0x000000,_0cee99_data
		je     _06a573_jump
		test   %cl,%cl
		jne    _06a56c_jump
		cmpb   $0x000028,_0cdb00_data
		jne    _06a56c_jump
		mov    $0x00001a,%edx
		jmp    _06a5cf_jump

	_06a56c_jump:
		mov    $0x00001c,%edx
		jmp    _06a5cf_jump

	_06a573_jump:
		cmp    $0x000001,%cl
		jne    _06a5ae_jump
		mov    _0cdb00_data,%dh
		cmp    $0x000009,%dh
		je     _06a588_jump
		cmp    $0x00000b,%dh
		jne    _06a5ae_jump

	_06a588_jump:
		mov    _0cdb15_data,%ah
		test   $0x000008,%ah
		sete   %al
		and    $0x000001,%al
		mov    %ah,%dl
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,_0cdb15_data
		mov    %dl,%dh
		or     %al,%dh
		mov    %dh,_0cdb15_data

	_06a5ae_jump:
		cmp    $0x000001,%cl
		jne    _06a5ca_jump
		cmpb   $0x000003,_0cdb00_data
		jne    _06a5c3_jump
		mov    $0x000020,%edx
		jmp    _06a5cf_jump

	_06a5c3_jump:
		mov    $0x000018,%edx
		jmp    _06a5cf_jump

	_06a5ca_jump:
		mov    $0x000001,%edx

	_06a5cf_jump:
		mov    $_0cda94_data,%eax
		call   _01d364_func
		xor    %edi,%edi
		mov    %di,_0cdae6_data
		mov    %di,_0cece8_data

	_06a5e9_jump:
		cmpb   $0x000000,_0ceeb9_data
		jne    _06a5fc_jump
		mov    $_0cda94_data,%eax
		call   _053c34_func

	_06a5fc_jump:
		cmpb   $0x000001,_0cdb01_data
		jne    _06a621_jump
		mov    _0cdb00_data,%dl
		cmp    $0x000009,%dl
		je     _06a61a_jump
		cmp    $0x000030,%dl
		je     _06a61a_jump
		cmp    $0x00000b,%dl
		jne    _06a621_jump

	_06a61a_jump:
		negw   _0cdad4_data

	_06a621_jump:
		mov    $0x000004,%cl
		mov    _0cdad4_data,%ax
		cwtl   
		shl    %cl,%eax
		mov    _0cdad4_data,%cx
		mov    %eax,%edi
		test   %cx,%cx
		je     _06a670_jump
		cwtl   
		test   %eax,%eax
		jge    _06a641_jump
		neg    %eax

	_06a641_jump:
		cmp    $0x000100,%eax
		jg     _06a64c_jump
		mov    $0x0000ff,%al
		jmp    _06a64e_jump

	_06a64c_jump:
		xor    %al,%al

	_06a64e_jump:
		mov    _0cecc8_data,%dx
		test   %dx,%dx
		jle    _06a664_jump
		addw   $0x00000a,_0cdad4_data
		jmp    _06a672_jump

	_06a664_jump:
		jge    _06a672_jump
		subw   $0x00000a,_0cdad4_data
		jmp    _06a672_jump

	_06a670_jump:
		xor    %al,%al

	_06a672_jump:
		mov    _0cdb01_data,%ch
		cmp    $0x000002,%ch
		jne    _06a6cb_jump
		cmpb   $0x00000f,_0cdb00_data
		je     _06a690_jump
		cmpw   $0x000000,_0cdadc_data
		je     _06a6c4_jump

	_06a690_jump:
		testb  $0x000008,_0cdb15_data
		je     _06a6a3_jump
		cmpw   $0x000000,_0ceca2_data
		jg     _06a6b6_jump

	_06a6a3_jump:
		testb  $0x000008,_0cdb15_data
		jne    _06a6bd_jump
		cmpw   $0x000000,_0ceca2_data
		jge    _06a6bd_jump

	_06a6b6_jump:
		mov    $0x00000c,%bl
		jmp    _06a840_jump

	_06a6bd_jump:
		mov    $0x000008,%bl
		jmp    _06a840_jump

	_06a6c4_jump:
		mov    %al,%bl
		jmp    _06a840_jump

	_06a6cb_jump:
		test   %ch,%ch
		je     _06a6dd_jump
		cmp    $0x000001,%ch
		je     _06a6dd_jump
		cmp    $0x000003,%ch
		jne    _06a842_jump

	_06a6dd_jump:
		mov    _0cdadc_data,%esi
		sar    $0x000010,%esi
		cmp    $0xffffffff,%esi
		je     _06a74c_jump
		mov    %esi,%eax
		shl    $0x000005,%eax
		add    %esi,%eax
		mov    _0cc1f0_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		cmpw   $0x0000fe,0x000060(%esi)
		jne    _06a745_jump
		mov    0x000073(%esi),%eax
		sar    $0x000018,%eax
		test   %eax,%eax
		jge    _06a711_jump
		neg    %eax

	_06a711_jump:
		lea    0x000001(%eax),%ecx
		mov    $0x0000ff,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    $0x000001,%cl
		mov    %al,%bl
		movsbw 0x000076(%esi),%ax
		test   %ax,%ax
		js     _06a733_jump
		sar    %cl,%ax
		jmp    _06a73c_jump

	_06a733_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06a73c_jump:
		mov    %eax,%esi
		neg    %esi
		jmp    _06a842_jump

	_06a745_jump:
		xor    %bl,%bl
		jmp    _06a840_jump

	_06a74c_jump:
		mov    _0cdaf6_data,%bl
		cmp    $0x00000f,%bl
		jb     _06a781_jump
		jbe    _06a7c3_jump
		cmp    $0x000014,%bl
		jb     _06a771_jump
		cmp    $0x000015,%bl
		jbe    _06a7ab_case
		cmp    $0x000018,%bl
		jb     _06a7b7_case
		jmp    _06a7f3_jump

	_06a771_jump:
		cmp    $0x000012,%bl
		jb     _06a7f3_jump
		jbe    _06a7e1_case
		jmp    _06a7ea_case

	_06a781_jump:
		cmp    $0x000008,%bl
		jb     _06a7a1_jump
		cmp    $0x000009,%bl
		jbe    _06a7f3_jump
		cmp    $0x00000c,%bl
		jb     _06a7f3_jump
		jbe    _06a83e_jump
		cmp    $0x00000e,%bl
		je     _06a83e_jump
		jmp    _06a7f3_jump

	_06a7a1_jump:
		cmp    $0x000001,%bl
		jbe    _06a7f3_jump
		jmp    _06a83e_jump

	_06a7ab_case:
		mov    $0xfffffffc,%esi
		mov    %bh,%bl
		jmp    _06a842_jump

	_06a7b7_case:
		mov    $0x000004,%esi
		mov    %bh,%bl
		jmp    _06a842_jump

	_06a7c3_jump:
		mov    _0cdaf9_data,%ah
		sub    $0x000012,%ah
		cmp    $0x000005,%ah
		ja     _06a83e_jump
		xor    %edx,%edx
		mov    %ah,%dl
		jmp    *%cs:_06a450_switch(,%edx,4)

	_06a7e1_case:
		mov    $0xfffffffa,%esi
		mov    %bh,%bl
		jmp    _06a842_jump

	_06a7ea_case:
		mov    $0x000006,%esi
		mov    %bh,%bl
		jmp    _06a842_jump

	_06a7f3_jump:
		xor    %edx,%edx
		mov    _0cdaf6_data,%dl
		testb  $0x000001,_092224_data(%edx)
		jne    _06a81c_jump
		xor    %edx,%edx
		mov    _0cdafa_data,%dl
		mov    _092224_data(%edx),%cl
		test   $0x000008,%cl
		jne    _06a81c_jump
		test   $0x000002,%cl
		jne    _06a83e_jump

	_06a81c_jump:
		cmpw   $0x000000,_0cdad4_data
		jne    _06a83a_jump
		cmpw   $0x000000,_0ceca2_data
		jne    _06a83a_jump
		cmpw   $0x000000,_0cecc8_data
		je     _06a83e_jump

	_06a83a_jump:
		mov    %bh,%bl
		jmp    _06a840_jump

	_06a83e_jump:
		mov    %al,%bl

	_06a840_jump:
		xor    %esi,%esi

	_06a842_jump:
		cmpb   $0x000001,_0cee99_data
		jne    _06a84d_jump
		shr    %bl

	_06a84d_jump:
		mov    _0cecc6_data,%ecx
		movswl %di,%edx
		movswl %si,%esi
		xor    %eax,%eax
		sar    $0x000010,%ecx
		mov    %bl,%al
		mov    %edx,%ebx
		mov    %esi,%edx
		call   _06a1a0_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06a874_switch:
		.long   _06a8fb_case
		.long   _06a909_case
		.long   _06a909_case
		.long   _06a8fb_case
		.long   _06a8fb_case
		.long   _06a8fb_case
		.long   _06a909_case
		.long   _06a8fb_case
		.long   _06a8e3_case
		.long   _06a8ef_case
		.long   _06a8e3_case
		.long   _06a8ef_case




_06a8a4_func:
		push   %ebx
		push   %edx
		cmpb   $0x000001,_0cdb01_data
		je     _06a8bc_jump
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06a926_jump

	_06a8bc_jump:
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    %eax,%edx
		xor    %eax,%eax
		shl    $0x000008,%edx
		mov    _0cdb00_data,%al
		add    %edx,%eax
		sub    $0x000100,%eax
		cmp    $0x00000b,%eax
		ja     _06a909_case
		jmp    *%cs:_06a874_switch(,%eax,4)

	_06a8e3_case:
		mov    $0x00002f,%ebx
		mov    $_0cda94_data,%eax
		jmp    _06a902_jump

	_06a8ef_case:
		mov    $0x000030,%ebx
		mov    $_0cda94_data,%eax
		jmp    _06a902_jump

	_06a8fb_case:
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx

	_06a902_jump:
		xor    %edx,%edx
		call   _01d374_func

	_06a909_case:
		mov    _0ceca2_data,%bx
		test   %bx,%bx
		jne    _06a94e_jump
		mov    %bx,_0cdad6_data
		mov    %bx,_0cdad4_data
		pop    %edx
		pop    %ebx
		ret    

	_06a926_jump:
		cmpb   $0x000004,_0cdb01_data
		jne    _06a94e_jump
		mov    _0cdbc4_data,%dh
		test   %dh,%dh
		jne    _06a94e_jump
		xor    %dl,%dl
		mov    $_0cda94_data,%eax
		mov    %dx,_0cdad6_data
		xor    %edx,%edx
		call   _01d364_func

	_06a94e_jump:
		pop    %edx
		pop    %ebx
		ret    



_06a954_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    _0cdaa0_data,%ebx
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdb00_data,%al
		testb  $0x000004,0x000007(%edx,%eax,8)
		je     _06aa82_jump
		cmpb   $0x000001,_0ceec3_data
		jne    _06aa82_jump
		call   *_0c4c68_data
		test   %ax,%ax
		je     _06aa82_jump
		testb  $0x000008,_0cec70_data
		je     _06aa39_jump
		testb  $0x000018,_0cec71_data
		jne    _06aa39_jump
		mov    $0x000002,%al
		mov    $0x00000e,%edx
		mov    %al,_0ceec3_data
		mov    $_0cda94_data,%eax
		call   _01d364_func
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cdb01_data,%al
		mov    _0cdb00_data,%dl
		mov    (%ebx,%eax,4),%eax
		mov    0x000005(%eax,%edx,8),%cl
		and    $0x00000f,%cl
		mov    %cl,0x000005(%eax,%edx,8)
		mov    %cl,%ch
		or     $0x000030,%ch
		mov    %ch,0x000005(%eax,%edx,8)
		mov    0x000008(%ebx),%eax
		mov    $0xffffffff,%esi
		mov    0x00007d(%eax),%dl
		mov    %si,_0cecfc_data
		and    $0x00000f,%dl
		xor    %cl,%cl
		mov    %dl,0x00007d(%eax)
		mov    %dl,%dh
		mov    %cl,_0ceeb7_data
		or     $0x000020,%dh
		mov    %cl,_0ceeab_data
		mov    %dh,0x00007d(%eax)
		xor    %al,%al
		mov    %si,_0cdae6_data
		xor    %ah,%ah
		mov    %cl,_0cdb13_data
		mov    %ax,_0cec9a_data
		jmp    _06aa82_jump

	_06aa39_jump:
		testb  $0x000004,_0cec70_data
		je     _06aa82_jump
		testb  $0x000018,_0cec71_data
		jne    _06aa82_jump
		mov    $0x000002,%cl
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		mov    %cl,_0ceec3_data
		call   _01d364_func
		xor    %ch,%ch
		mov    $0x000032,%edx
		mov    %ch,_0cdaff_data
		mov    $0xffffffff,%ecx
		mov    %dx,_0cecfc_data
		mov    %cx,_0cdae6_data

	_06aa82_jump:
		cmpb   $0x00000f,_0cdb00_data
		jne    _06aacd_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    _0cdb00_data,%dl
		mov    _0cdb01_data,%al
		shl    $0x000003,%edx
		mov    (%ebx,%eax,4),%eax
		add    %edx,%eax
		mov    0x000005(%eax),%dl
		and    $0x0000f0,%dl
		cmp    $0x000020,%dl
		jne    _06aacd_jump
		mov    0x000005(%eax),%dl
		and    $0x00000f,%dl
		mov    %dl,0x000005(%eax)
		mov    %dl,%dh
		or     $0x0000a0,%dh
		xor    %cl,%cl
		mov    %dh,0x000005(%eax)
		mov    %cl,_0cdb05_data
		movb   $0x000014,_0cdb06_data

	_06aacd_jump:
		cmpb   $0x000003,_0ceec3_data
		jne    _06aae1_jump
		call   *_0c4c68_data
		test   %ax,%ax
		jne    _06aaef_jump

	_06aae1_jump:
		cmpw   $0x000000,_0cecfc_data
		jne    _06ac96_jump

	_06aaef_jump:
		testb  $0x000008,_0cec70_data
		je     _06ac6a_jump
		testb  $0x000018,_0cec71_data
		jne    _06ac6a_jump
		mov    _0cdb00_data,%cl
		cmp    $0x00000f,%cl
		jne    _06ac96_jump
		cmpw   $0x000000,_0cecfc_data
		je     _06ac96_jump
		movb   $0x000002,_0ceec3_data
		movb   $0x000001,_0ceeb7_data
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%edx
		xor    %ch,%ch
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %cl,%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %ch,_0cdb05_data
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x0000a0,%bh
		mov    $0x000014,%cl
		mov    %bh,0x000005(%edx,%eax,8)
		mov    %cl,_0cdb06_data
		mov    _0ceeab_data,%ch
		mov    $0xffffffff,%edi
		inc    %ch
		mov    %di,_0cdad6_data
		mov    %ch,_0ceeab_data
		cmp    $0x000002,%ch
		jb     _06ac5b_jump
		cmpw   $0x000000,_0cec8c_data
		jl     _06ac41_jump
		testb  $0x000008,_0cdb15_data
		jne    _06abc7_jump
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffe,%eax
		jg     _06abc7_jump
		call   _040714_func
		test   %ax,%ax
		je     _06abc7_jump
		movw   $0x00ffd0,_0cdad4_data
		jmp    _06ac02_jump

	_06abc7_jump:
		testb  $0x000008,_0cdb15_data
		je     _06abef_jump
		cmpw   $0x000002,_0cdad4_data
		jl     _06abef_jump
		call   _040784_func
		test   %ax,%ax
		je     _06abef_jump
		movw   $0x000030,_0cdad4_data
		jmp    _06ac02_jump

	_06abef_jump:
		cmpw   $0x000000,_0cdad4_data
		jne    _06ac02_jump
		movw   $0x00fffe,_0cdad6_data

	_06ac02_jump:
		mov    $0x000046,%ebx
		mov    $0x000004,%cl
		mov    _0cdad4_data,%ax
		mov    %bx,_0cecfc_data
		xor    %bl,%bl
		xor    %edx,%edx
		mov    %bl,_0ceeab_data
		mov    _0cecc6_data,%ebx
		cwtl   
		shl    %cl,%eax
		sar    $0x000010,%ebx
		cwtl   
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    $0x0000ff,%eax
		call   _06a1a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ac41_jump:
		mov    $0x000001,%ah
		mov    $0x000014,%ebx
		mov    %ah,_0ceeab_data
		mov    %bx,_0cec8c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ac5b_jump:
		movw   $0x000014,_0cec8c_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ac6a_jump:
		mov    $0x000004,%dh
		mov    $_0cda94_data,%eax
		mov    $0xffffffff,%ebx
		mov    %dh,_0ceec3_data
		mov    $0x000005,%edx
		xor    %ecx,%ecx
		call   _01d364_func
		mov    %bx,_0cecfc_data
		mov    %cx,_0cdae6_data

	_06ac96_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06ac9c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %edx,%ecx
		cmpb   $0x000002,_0cdb01_data
		jne    _06acbf_jump
		cmpb   $0x000008,_0cdb00_data
		jne    _06acbf_jump
		movw   $0x00005a,_0cdaea_data

	_06acbf_jump:
		mov    $0x000005,%edx
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		mov    _0cdaec_data,%eax
		mov    $0x000020,%edx
		sar    $0x000010,%eax
		call   _01d10c_func
		testb  $0x000002,_0cec71_data
		je     _06acf2_jump
		mov    $0x000003,%edx
		jmp    _06acf7_jump

	_06acf2_jump:
		mov    $0x000007,%edx

	_06acf7_jump:
		testb  $0x000008,_0cdb15_data
		je     _06ad11_jump
		mov    $0x000010,%ebx
		and    $0x0000ff,%edx
		sub    %edx,%ebx
		mov    %ebx,%edx
		jmp    _06ad17_jump

	_06ad11_jump:
		and    $0x0000ff,%edx

	_06ad17_jump:
		mov    %edx,%ebx
		testb  $0x000002,_0cec71_data
		je     _06ad27_jump
		add    $0x000025,%eax

	_06ad27_jump:
		movswl %cx,%edx
		sar    $0x000004,%edx
		cwtl   
		shl    $0x000004,%edx
		mov    $0xffffffff,%edi
		sub    %eax,%edx
		mov    %di,_0cdade_data
		mov    %edx,_0cdac0_data
		movswl %si,%edx
		xor    %eax,%eax
		sar    $0x000004,%edx
		mov    _0cdafc_data,%al
		shl    $0x000004,%edx
		xor    %ecx,%ecx
		sub    %eax,%edx
		movswl %bx,%eax
		dec    %edx
		mov    %cx,_0ceca2_data
		add    %eax,%edx
		xor    %ebx,%ebx
		mov    %edx,_0cdabc_data
		mov    %bx,_0cdad6_data
		mov    %bx,_0cdad4_data
		mov    %bx,_0cdae6_data
		xor    %dh,%dh
		xor    %bl,%bl
		mov    %dh,_0cdb05_data
		xor    %dl,%dl
		mov    %bl,_0cdb06_data
		mov    %dx,_0cece8_data
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06ada4_func:
		push   %edx
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cda90_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		sete   %al
		xor    %ah,%ah
		pop    %edx
		ret    



_06adcc_func:
		push   %edx
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cda90_data,%eax
		mov    0x000002(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    _092224_data(%eax),%al
		shl    $0x000006,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		pop    %edx
		ret    



_06adf8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		testb  $0x000002,_0cec70_data
		je     _06b09e_jump
		testb  $0x000018,_0cec71_data
		jne    _06b09e_jump
		xor    %eax,%eax
		mov    _0cdabc_data,%dx
		mov    _0cdafc_data,%al
		add    %eax,%edx
		mov    %dx,0x000018(%esp)
		mov    0x000016(%esp),%esi
		sar    $0x000010,%esi
		mov    %esi,%eax
		mov    $0x000001,%ebx
		sar    $0x000004,%eax
		mov    _0cda86_data,%ecx
		mov    %ax,0x000010(%esp)
		sar    $0x000010,%ecx
		mov    0x00000e(%esp),%eax
		sub    $0x000002,%ecx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _06ae68_jump
		cmp    %ecx,%eax
		jg     _06ae68_jump
		mov    $0x000001,%eax
		jmp    _06ae6a_jump

	_06ae68_jump:
		xor    %eax,%eax

	_06ae6a_jump:
		test   %eax,%eax
		je     _06b09e_jump
		xor    %eax,%eax
		mov    _0cdac0_data,%dx
		mov    _0cdb08_data,%al
		add    %edx,%eax
		add    $0x000020,%eax
		mov    _0cdaee_data,%bx
		mov    %ax,0x000014(%esp)
		test   %bx,%bx
		je     _06aec4_jump
		xor    %eax,%eax
		mov    _0cdafd_data,%al
		add    %edx,%eax
		movswl %ax,%edx
		mov    %esi,%eax
		call   _01d0bc_func
		mov    0x000012(%esp),%edx
		mov    _0cdaec_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _01d170_func
		mov    %ax,0x000014(%esp)

	_06aec4_jump:
		testb  $0x000008,_0cdb15_data
		je     _06aed4_jump
		mov    $0x000001,%eax
		jmp    _06aed9_jump

	_06aed4_jump:
		mov    $0xffffffff,%eax

	_06aed9_jump:
		mov    %ax,0x00000c(%esp)
		mov    0x000012(%esp),%eax
		mov    _0cda86_data,%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%ebx
		add    %eax,%ebx
		mov    0x00000a(%esp),%eax
		mov    %ebx,%ecx
		sar    $0x000010,%eax
		sub    %edx,%ecx
		add    %eax,%ecx
		mov    %ecx,0x000008(%esp)
		test   %ecx,%ecx
		jl     _06b09e_jump
		lea    (%ebx,%edx,1),%esi
		lea    (%esi,%edx,1),%ecx
		lea    (%ecx,%edx,1),%ebp
		lea    (%ecx,%eax,1),%edx
		lea    (%ebx,%eax,1),%edi
		mov    %edx,0x000004(%esp)
		lea    (%esi,%eax,1),%edx
		mov    _0cdaee_data,%ax
		mov    %edx,(%esp)
		test   %ax,%ax
		je     _06af3c_jump
		mov    %ecx,%ebp

	_06af3c_jump:
		mov    %edi,%eax
		call   _06adcc_func
		test   %ax,%ax
		jne    _06af67_jump
		mov    (%esp),%eax
		call   _06adcc_func
		test   %ax,%ax
		jne    _06af67_jump
		mov    0x000004(%esp),%eax
		call   _06adcc_func
		test   %ax,%ax
		je     _06b09e_jump

	_06af67_jump:
		cmpb   $0x000002,_0cdb01_data
		jne    _06b09e_jump
		cmpw   $0x000008,_0cece8_data
		jle    _06b09e_jump
		mov    %ebx,%eax
		call   _06ada4_func
		test   %ax,%ax
		je     _06afdf_jump
		mov    %ecx,%eax
		call   _06ada4_func
		test   %ax,%ax
		je     _06afdf_jump
		mov    %esi,%eax
		call   _06ada4_func
		test   %ax,%ax
		je     _06afdf_jump
		mov    0x000008(%esp),%eax
		call   _06ada4_func
		test   %ax,%ax
		je     _06afdf_jump
		mov    %ebp,%eax
		call   _06ada4_func
		test   %ax,%ax
		je     _06afdf_jump
		mov    %edi,%eax
		call   _06adcc_func
		test   %ax,%ax
		je     _06afdf_jump
		mov    0x000012(%esp),%edx
		mov    0x000016(%esp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		jmp    _06b099_jump

	_06afdf_jump:
		cmpw   $0x000000,_0cdaee_data
		jne    _06b09e_jump
		cmpw   $0x000002,0x000010(%esp)
		jge    _06b002_jump
		testb  $0x000008,_0cdb15_data
		jne    _06b09e_jump

	_06b002_jump:
		mov    _0cda86_data,%eax
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sub    $0x000003,%eax
		cmp    %eax,%edx
		jle    _06b025_jump
		testb  $0x000008,_0cdb15_data
		je     _06b09e_jump

	_06b025_jump:
		mov    0x00000a(%esp),%edx
		mov    %ebx,%eax
		sar    $0x000010,%edx
		sub    %edx,%eax
		call   _06ada4_func
		test   %ax,%ax
		je     _06b09e_jump
		mov    %ecx,%eax
		sub    %edx,%eax
		call   _06ada4_func
		test   %ax,%ax
		je     _06b09e_jump
		mov    %esi,%eax
		sub    %edx,%eax
		call   _06ada4_func
		test   %ax,%ax
		je     _06b09e_jump
		mov    0x000008(%esp),%eax
		sub    %edx,%eax
		call   _06ada4_func
		test   %ax,%ax
		je     _06b09e_jump
		mov    %ebp,%eax
		sub    %edx,%eax
		call   _06ada4_func
		test   %ax,%ax
		je     _06b09e_jump
		mov    %edi,%eax
		sub    %edx,%eax
		call   _06adcc_func
		test   %ax,%ax
		je     _06b09e_jump
		mov    0x00000c(%esp),%eax
		mov    0x000018(%esp),%ebx
		shl    $0x000004,%eax
		mov    0x000012(%esp),%edx
		sub    %eax,%ebx
		sar    $0x000010,%edx
		movswl %bx,%eax

	_06b099_jump:
		call   _06ac9c_func

	_06b09e_jump:
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06b0a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0cee99_data
		je     _06b0da_jump
		cmpb   $0x000000,_0cdb01_data
		jne    _06b0d0_jump
		cmpb   $0x000028,_0cdb00_data
		jne    _06b0d0_jump
		mov    $0x00001a,%ebx
		jmp    _06b143_jump

	_06b0d0_jump:
		mov    $0x00001c,%ebx
		jmp    _06b143_jump

	_06b0da_jump:
		mov    _0cdb01_data,%dl
		cmp    $0x000001,%dl
		jne    _06b114_jump
		cmpb   $0x00000b,_0cdb00_data
		jne    _06b114_jump
		mov    _0cdb15_data,%bl
		test   $0x000008,%bl
		sete   %al
		mov    %bl,%bh
		and    %dl,%al
		and    $0x0000f7,%bh
		shl    $0x000003,%al
		mov    %bh,%cl
		mov    %bh,_0cdb15_data
		or     %al,%cl
		mov    %cl,_0cdb15_data

	_06b114_jump:
		cmpb   $0x000005,_0cdb01_data
		jne    _06b124_jump
		mov    $0x000001,%ebx
		jmp    _06b143_jump

	_06b124_jump:
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06b132_jump
		neg    %eax

	_06b132_jump:
		cmp    $0x000002,%eax
		jg     _06b13e_jump
		mov    $0x000018,%ebx
		jmp    _06b143_jump

	_06b13e_jump:
		mov    $0x000020,%ebx

	_06b143_jump:
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		xor    %edx,%edx
		mov    $0xffffffff,%ebx
		mov    %dx,_0cece8_data
		mov    %bx,_0cecfc_data
		xor    %dl,%dl
		mov    %bx,_0cdade_data
		mov    %dl,_0cdb05_data
		mov    %dl,_0cdb06_data
		mov    %dl,_0ceec3_data
		mov    %dl,_0cdbc4_data
		call   _069e60_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06b194_switch:
		.long   _06b265_case
		.long   _06b3e6_case
		.long   _06b4cb_case
		.long   _06b4cb_case
		.long   _06b1cf_case
		.long   _06b481_case
		.long   _06b493_case




_06b1b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cdb01_data,%al
		cmp    $0x000006,%al
		ja     _06b4cb_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06b194_switch(,%eax,4)

	_06b1cf_case:
		mov    _0cdb00_data,%dh
		cmp    $0x00000b,%dh
		setne  %al
		and    $0x0000ff,%eax
		je     _06b256_jump
		cmp    $0x00000c,%dh
		setne  %al
		and    $0x0000ff,%eax
		je     _06b256_jump
		mov    $0x000001,%edi
		mov    _0cdaee_data,%ax
		mov    %di,_0cdad6_data
		test   %ax,%ax
		je     _06b21d_jump
		cmpb   $0x000000,_0cee3f_data
		je     _06b21d_jump
		mov    $_0cda94_data,%eax
		call   _0544fc_func

	_06b21d_jump:
		call   _069208_func
		cmpb   $0x00000c,_0ceec2_data
		je     _06b235_jump
		call   _06b0a8_func
		jmp    _06b4cb_case

	_06b235_jump:
		cmpb   $0x000003,_0cdb00_data
		je     _06b4cb_case
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func
		jmp    _06b4cb_case

	_06b256_jump:
		xor    %esi,%esi
		mov    %si,_0cdad6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b265_case:
		mov    _0cdb00_data,%ah
		test   %ah,%ah
		je     _06b2e6_jump
		cmp    $0x000001,%ah
		je     _06b2e6_jump
		cmp    $0x000002,%ah
		je     _06b2e6_jump
		cmp    $0x000003,%ah
		je     _06b2e6_jump
		cmp    $0x000031,%ah
		je     _06b2e6_jump
		cmp    $0x000008,%ah
		je     _06b2e6_jump
		cmp    $0x00002b,%ah
		je     _06b2e6_jump
		cmp    $0x000024,%ah
		je     _06b2e6_jump
		cmp    $0x000025,%ah
		je     _06b2e6_jump
		cmp    $0x000026,%ah
		je     _06b2e6_jump
		cmp    $0x000027,%ah
		je     _06b2e6_jump
		cmp    $0x000028,%ah
		je     _06b2e6_jump
		cmp    $0x000029,%ah
		je     _06b2e6_jump
		cmp    $0x00002a,%ah
		je     _06b2e6_jump
		cmp    $0x00000d,%ah
		je     _06b2e6_jump
		cmp    $0x00003b,%ah
		je     _06b2e6_jump
		cmp    $0x00003e,%ah
		je     _06b2e6_jump
		cmp    $0x00003f,%ah
		je     _06b2e6_jump
		cmp    $0x000040,%ah
		je     _06b2e6_jump
		cmp    $0x000041,%ah
		jne    _06b2f5_jump

	_06b2e6_jump:
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		jmp    _06b3d1_jump

	_06b2f5_jump:
		cmp    $0x000014,%ah
		jne    _06b37b_jump
		mov    $_0cda94_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _06b37b_jump
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    _0cdaa0_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdb00_data,%al
		mov    (%ebx),%ebx
		shl    $0x000003,%eax
		add    %eax,%ebx
		mov    0x000007(%ebx),%dh
		lea    0x000007(%ebx),%eax
		test   $0x000010,%dh
		sete   %dl
		mov    (%eax),%cl
		and    $0x000001,%dl
		and    $0x0000ef,%cl
		shl    $0x000004,%dl
		mov    %cl,(%eax)
		mov    %cl,%ch
		or     %dl,%ch
		mov    $0x000001,%edx
		mov    %ch,(%eax)
		mov    $_0cda94_data,%eax
		call   _054484_func
		mov    0x000007(%ebx),%dh
		lea    0x000007(%ebx),%eax
		test   $0x000010,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000ef,%bl
		shl    $0x000004,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)
		jmp    _06b3db_jump

	_06b37b_jump:
		call   *_0c4c68_data
		test   %ax,%ax
		je     _06b3db_jump
		cmpb   $0x000000,_0cee99_data
		jne    _06b3db_jump
		cmpb   $0x000000,_0cdbc2_data
		jne    _06b3c7_jump
		mov    _0cdb00_data,%al
		cmp    $0x00000b,%al
		je     _06b3a5_jump
		cmp    $0x00000c,%al
		jne    _06b3c7_jump

	_06b3a5_jump:
		xor    %dl,%dl
		mov    $0x000006,%ebx
		mov    %dl,_0cdbc4_data
		xor    %dh,%dh
		mov    $_0cda94_data,%eax
		mov    %dx,_0cdbbc_data
		mov    $0x000003,%edx
		jmp    _06b3d6_jump

	_06b3c7_jump:
		mov    $0x000008,%ebx
		mov    $0x000001,%edx

	_06b3d1_jump:
		mov    $_0cda94_data,%eax

	_06b3d6_jump:
		call   _01d374_func

	_06b3db_jump:
		call   _06a468_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b3e6_case:
		cmpb   $0x000000,_0cdb00_data
		jne    _06b41c_jump
		call   *_0c4c68_data
		test   %ax,%ax
		je     _06b41c_jump
		cmpb   $0x000000,_0cee99_data
		jne    _06b41c_jump
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		jmp    _06b476_jump

	_06b41c_jump:
		mov    _0cdb00_data,%dl
		cmp    $0x000008,%dl
		je     _06b436_jump
		cmp    $0x00000a,%dl
		je     _06b436_jump
		cmp    $0x000009,%dl
		je     _06b436_jump
		cmp    $0x00000b,%dl
		jne    _06b468_jump

	_06b436_jump:
		call   *_0c4c68_data
		test   %ax,%ax
		je     _06b44a_jump
		cmpb   $0x000000,_0cee99_data
		je     _06b476_jump

	_06b44a_jump:
		call   _040714_func
		test   %ax,%ax
		je     _06b468_jump
		call   *_0c4c68_data
		test   %ax,%ax
		je     _06b468_jump
		cmpb   $0x000000,_0cee99_data
		je     _06b476_jump

	_06b468_jump:
		testb  $0x000018,_0cec71_data
		jne    _06b476_jump
		call   _06a8a4_func

	_06b476_jump:
		call   _06a468_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b481_case:
		addl   $0x00000e,_0cdac0_data
		call   _06b0a8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b493_case:
		mov    _0cdb15_data,%ah
		mov    _0cdad6_data,%bx
		xor    %edx,%edx
		or     $0x000008,%ah
		mov    %dx,_0ceca2_data
		mov    %ah,_0cdb15_data
		cmp    $0x000003,%bx
		jge    _06b4cb_case
		cmpb   $0x000000,_0cdb05_data
		jne    _06b4cb_case
		mov    %ebx,%ecx
		inc    %ecx
		mov    %cx,_0cdad6_data

	_06b4cb_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06b4d4_switch:
		.long   _06b5ed_case
		.long   _06b5c8_case
		.long   _06b6a7_case
		.long   _06b6a7_case
		.long   _06b50e_case
		.long   _06b5df_case
		.long   _06b67a_case




_06b4f0_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cdb01_data,%al
		cmp    $0x000006,%al
		ja     _06b6a7_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06b4d4_switch(,%eax,4)

	_06b50e_case:
		mov    _0cdb00_data,%dh
		cmp    $0x00000b,%dh
		setne  %al
		and    $0x0000ff,%eax
		je     _06b5ba_jump
		cmp    $0x00000c,%dh
		setne  %al
		and    $0x0000ff,%eax
		je     _06b5ba_jump
		call   _069208_func
		mov    _0ceec2_data,%bh
		test   %bh,%bh
		jne    _06b55f_jump
		call   _06b0a8_func
		mov    $0x00000a,%al
		mov    $0x000001,%ebx
		mov    %al,_0cdb13_data
		mov    %bx,_0cdad6_data
		jmp    _06b599_jump

	_06b55f_jump:
		cmp    $0x00000c,%bh
		je     _06b56f_jump
		xor    %edx,%edx
		mov    %dx,_0cdad6_data
		jmp    _06b599_jump

	_06b56f_jump:
		mov    $0xffffffff,%edi
		mov    _0cdaee_data,%ax
		mov    %di,_0cdad6_data
		test   %ax,%ax
		je     _06b599_jump
		cmpb   $0x000000,_0cee3f_data
		je     _06b599_jump
		mov    $_0cda94_data,%eax
		call   _0544fc_func

	_06b599_jump:
		cmpb   $0x000002,_0cdb00_data
		je     _06b6a7_case
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06b5ba_jump:
		xor    %esi,%esi
		mov    %si,_0cdad6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06b5c8_case:
		testb  $0x000018,_0cec71_data
		jne    _06b6a7_case
		call   _06a8a4_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06b5df_case:
		movw   $0x0000ff,_0cecf8_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06b5ed_case:
		cmpb   $0x000025,_0cdb00_data
		jne    _06b61a_jump
		mov    _0ceca0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06b604_jump
		neg    %eax

	_06b604_jump:
		cmp    $0x000080,%eax
		jg     _06b61a_jump
		mov    $0x000026,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func

	_06b61a_jump:
		call   _06a468_func
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06b635_jump
		movw   $0x0000ff,_0cecf8_data

	_06b635_jump:
		cmpb   $0x000000,_0cdb01_data
		jne    _06b6a7_case
		cmpb   $0x00000f,_0cdb00_data
		jne    _06b6a7_case
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		jne    _06b6a7_case
		mov    $0x00003c,%ebx
		mov    $_0cda94_data,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_06b67a_case:
		orb    $0x000008,_0cdb15_data
		mov    _0cdad4_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    %dx,_0ceca2_data
		cmp    $0xfffffffd,%eax
		jle    _06b6a7_case
		cmpb   $0x000000,_0cdb05_data
		jne    _06b6a7_case
		decw   _0cdad6_data

	_06b6a7_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

_06b6ac_switch:
		.long   _06b86d_case
		.long   _06b6e8_case
		.long   _06ba3e_case
		.long   _06bc9b_case
		.long   _06baa8_case
		.long   _06bc18_case
		.long   _06bc40_case




_06b6c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0cdb01_data,%al
		cmp    $0x000006,%al
		ja     _06bc9b_case
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_06b6ac_switch(,%edx,4)

	_06b6e8_case:
		mov    _09267c_data,%bh
		inc    %bh
		mov    _0cdb00_data,%al
		mov    %bh,_09267c_data
		cmp    $0x000008,%al
		je     _06b703_jump
		cmp    $0x00000a,%al
		jne    _06b73f_jump

	_06b703_jump:
		call   *_0c4c68_data
		test   %ax,%ax
		je     _06b721_jump
		cmpb   $0x000000,_0cee99_data
		jne    _06b721_jump
		call   _0407f4_func
		test   %ax,%ax
		jne    _06b728_jump

	_06b721_jump:
		mov    $0x000001,%edx
		jmp    _06b72a_jump

	_06b728_jump:
		xor    %edx,%edx

	_06b72a_jump:
		test   %edx,%edx
		je     _06b73f_jump
		mov    $0x00002f,%ebx
		mov    $_0cda94_data,%eax
		xor    %edx,%edx
		jmp    _06b7be_jump

	_06b73f_jump:
		mov    _0cdb00_data,%dh
		cmp    $0x000009,%dh
		je     _06b74f_jump
		cmp    $0x00000b,%dh
		jne    _06b788_jump

	_06b74f_jump:
		call   _0407f4_func
		test   %ax,%ax
		je     _06b76d_jump
		call   *_0c4c68_data
		test   %ax,%ax
		je     _06b76d_jump
		cmpb   $0x000000,_0cee99_data
		je     _06b774_jump

	_06b76d_jump:
		mov    $0x000001,%edx
		jmp    _06b776_jump

	_06b774_jump:
		xor    %edx,%edx

	_06b776_jump:
		test   %edx,%edx
		je     _06b788_jump
		mov    $0x000030,%ebx
		mov    $_0cda94_data,%eax
		xor    %edx,%edx
		jmp    _06b7be_jump

	_06b788_jump:
		call   _0407f4_func
		test   %ax,%ax
		je     _06b7c3_jump
		call   *_0c4c68_data
		test   %ax,%ax
		je     _06b7c3_jump
		cmpb   $0x000000,_0cee99_data
		jne    _06b7c3_jump
		cmpb   $0x000000,_0cdb00_data
		jne    _06b7c3_jump
		mov    $0x000006,%ebx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax

	_06b7be_jump:
		call   _01d374_func

	_06b7c3_jump:
		mov    _0cdb15_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _06b823_jump
		mov    _0cdb00_data,%bl
		cmp    $0x000008,%bl
		je     _06b7e2_jump
		cmp    $0x00000a,%bl
		jne    _06b7f5_jump

	_06b7e2_jump:
		mov    $0x000032,%ebx
		mov    $_0cda94_data,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _06b842_jump

	_06b7f5_jump:
		cmp    $0x00000b,%bl
		je     _06b842_jump
		cmp    $0x000032,%bl
		je     _06b842_jump
		cmp    $0x000033,%bl
		je     _06b842_jump
		cmpb   $0x000001,_0ceebe_data
		je     _06b842_jump
		mov    $0x000004,%ebx
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		jmp    _06b842_jump

	_06b823_jump:
		mov    _0cdb00_data,%dl
		cmp    $0x000009,%dl
		je     _06b833_jump
		cmp    $0x00000b,%dl
		jne    _06b842_jump

	_06b833_jump:
		mov    $0x00000a,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func

	_06b842_jump:
		mov    _0cdb15_data,%bl
		mov    %cl,%al
		and    $0x0000f7,%bl
		and    $0x000001,%al
		mov    %bl,_0cdb15_data
		shl    $0x000003,%al
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,_0cdb15_data
		call   _06a468_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b86d_case:
		incb   _09267c_data
		mov    _0cdb00_data,%ah
		cmp    $0x00000f,%ah
		je     _06b88c_jump
		cmp    $0x00002f,%ah
		je     _06b88c_jump
		cmp    $0x000030,%ah
		jne    _06b908_jump

	_06b88c_jump:
		call   *_0c4c68_data
		test   %ax,%ax
		je     _06b908_jump
		cmpb   $0x000000,_0cee99_data
		jne    _06b908_jump
		call   _0407f4_func
		test   %ax,%ax
		je     _06b908_jump
		mov    _0cdb15_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		jne    _06b8d2_jump
		mov    $0x000008,%ebx
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		jmp    _06ba33_jump

	_06b8d2_jump:
		mov    %cl,%al
		and    $0x000001,%al
		mov    _0cdb15_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0cdb15_data
		shl    $0x000003,%al
		mov    %ah,%dl
		mov    $0x000033,%ebx
		or     %al,%dl
		mov    $_0cda94_data,%eax
		mov    %dl,_0cdb15_data
		xor    %edx,%edx
		call   _01d374_func
		jmp    _06ba33_jump

	_06b908_jump:
		cmpb   $0x00000f,_0cdb00_data
		jne    _06b953_jump
		call   _0407f4_func
		test   %ax,%ax
		jne    _06b953_jump
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		call   _024a00_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000010,_092224_data(%edx)
		jne    _06b953_jump
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		call   _06a468_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06b953_jump:
		mov    _0cdb00_data,%ah
		cmp    $0x00000c,%ah
		je     _06ba33_jump
		cmp    $0x00000b,%ah
		je     _06ba33_jump
		cmp    $0x000012,%ah
		je     _06ba33_jump
		cmp    $0x000014,%ah
		je     _06ba33_jump
		cmp    $0x00000f,%ah
		je     _06ba33_jump
		cmp    $0x00002f,%ah
		je     _06ba33_jump
		cmp    $0x000030,%ah
		je     _06ba33_jump
		cmp    $0x000032,%ah
		je     _06ba33_jump
		cmp    $0x000033,%ah
		je     _06ba33_jump
		cmp    $0x00003d,%ah
		je     _06ba33_jump
		mov    _0cdb15_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _06ba18_jump
		cmpb   $0x000001,_0ceebe_data
		je     _06b9dc_jump
		mov    $0x000004,%ebx
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		jmp    _06b9e8_jump

	_06b9dc_jump:
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx

	_06b9e8_jump:
		call   _01d374_func
		mov    %cl,%al
		mov    _0cdb15_data,%cl
		and    $0x000001,%al
		and    $0x0000f7,%cl
		shl    $0x000003,%al
		mov    %cl,_0cdb15_data
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,_0cdb15_data
		call   _06a468_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ba18_jump:
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		call   _01d36c_func
		mov    $_0cda94_data,%eax
		xor    %edx,%edx
		call   _01d364_func

	_06ba33_jump:
		call   _06a468_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06ba3e_case:
		mov    _09267c_data,%bh
		mov    _0cdb00_data,%ah
		inc    %bh
		xor    %edx,%edx
		mov    %bh,_09267c_data
		cmp    $0x00000f,%ah
		setne  %dl
		test   %edx,%edx
		je     _06ba6f_jump
		mov    _0cdadc_data,%ax
		test   %ax,%ax
		jne    _06ba6f_jump
		mov    %ax,_0ceca2_data

	_06ba6f_jump:
		call   _06a468_func
		cmpb   $0x000000,_0cee99_data
		jne    _06ba9d_jump
		mov    %cl,%al
		mov    _0cdb15_data,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0cdb15_data
		or     %al,%bl
		mov    %bl,_0cdb15_data

	_06ba9d_jump:
		call   _06adf8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06baa8_case:
		mov    _09267c_data,%bh
		inc    %bh
		mov    _0cdb00_data,%al
		mov    %bh,_09267c_data
		cmp    $0x000002,%al
		jne    _06bac9_jump
		call   _040864_func
		test   %ax,%ax
		jne    _06badc_jump

	_06bac9_jump:
		cmpb   $0x000003,_0cdb00_data
		jne    _06bb1d_jump
		call   _0407f4_func
		test   %ax,%ax
		je     _06bb1d_jump

	_06badc_jump:
		call   _069208_func
		mov    _0ceec2_data,%bl
		test   %bl,%bl
		jne    _06bb16_jump
		cmpb   $0x000002,_0cdb00_data
		jne    _06bb0f_jump
		call   _06b0a8_func
		mov    $0x00000a,%ah
		mov    $0x000001,%esi
		mov    %ah,_0cdb13_data
		mov    %si,_0cdad6_data
		jmp    _06bb32_jump

	_06bb0f_jump:
		call   _06b0a8_func
		jmp    _06bb32_jump

	_06bb16_jump:
		cmp    $0x00000c,%bl
		je     _06bb32_jump
		jmp    _06bb2d_jump

	_06bb1d_jump:
		mov    _0cdb00_data,%dl
		cmp    $0x000002,%dl
		je     _06bb2d_jump
		cmp    $0x000003,%dl
		jne    _06bb32_jump

	_06bb2d_jump:
		call   _06a8a4_func

	_06bb32_jump:
		call   *_0c4c68_data
		test   %ax,%ax
		je     _06bba3_jump
		xor    %edx,%edx
		mov    _0ceec3_data,%dl
		mov    $0x000002,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cmp    $0x000001,%edx
		jne    _06bba3_jump
		cmpb   $0x00000b,_0cdb00_data
		setne  %al
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _06bba3_jump
		cmpb   $0x00000c,_0cdb00_data
		setne  %al
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _06bba3_jump
		mov    _0cdb00_data,%bl
		xor    %edx,%edx
		cmp    $0x00000d,%bl
		setne  %dl
		test   %edx,%edx
		je     _06bba3_jump
		mov    $0x000100,%edi
		call   _069ec0_func
		mov    %di,_0ceca2_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06bba3_jump:
		cmpb   $0x00000d,_0cdb00_data
		jne    _06bbca_jump
		mov    _0cdb15_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		cmp    %cl,%al
		je     _06bbca_jump
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func

	_06bbca_jump:
		mov    _0cdb00_data,%ah
		xor    %edx,%edx
		cmp    $0x00000b,%ah
		setne  %dl
		test   %edx,%edx
		je     _06bc9b_case
		cmp    $0x00000c,%ah
		setne  %al
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _06bc9b_case
		mov    %cl,%al
		mov    _0cdb15_data,%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,_0cdb15_data
		or     %al,%bl
		mov    %bl,_0cdb15_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06bc18_case:
		mov    _0cdb15_data,%al
		mov    _09267c_data,%bl
		shl    $0x000004,%al
		inc    %bl
		shr    $0x000007,%al
		mov    %bl,_09267c_data
		cmp    %cl,%al
		je     _06bc9b_case
		call   _06b0a8_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06bc40_case:
		xor    %edx,%edx
		mov    _0cdb15_data,%ah
		mov    %dx,_0ceca2_data
		mov    _09267c_data,%dl
		or     $0x000008,%ah
		inc    %dl
		mov    %ah,_0cdb15_data
		mov    %dl,_09267c_data
		test   %cx,%cx
		je     _06bc70_jump
		movswl %cx,%edx
		jmp    _06bc75_jump

	_06bc70_jump:
		mov    $0xffffffff,%edx

	_06bc75_jump:
		mov    _0cdad2_data,%ebx
		mov    %edx,%ecx
		sar    $0x000010,%ebx
		movswl %dx,%edx
		imul   %ebx,%edx
		cmp    $0x000003,%edx
		jge    _06bc9b_case
		cmpb   $0x000000,_0cdb05_data
		jne    _06bc9b_case
		add    %cx,_0cdad4_data

	_06bc9b_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_06bca4_switch:
		.long   _06bd86_case
		.long   _06bcdf_case
		.long   _06c13d_case
		.long   _06c224_case
		.long   _06c10e_case
		.long   _06c224_case
		.long   _06c1a9_case




_06bcc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cdb01_data,%al
		cmp    $0x000006,%al
		ja     _06c224_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06bca4_switch(,%eax,4)

	_06bcdf_case:
		mov    _0cdb00_data,%al
		cmp    $0x000004,%al
		je     _06bd7b_jump
		cmp    $0x000005,%al
		je     _06bd7b_jump
		testb  $0x000018,_0cec71_data
		jne    _06bd7b_jump
		mov    $_0cda94_data,%eax
		xor    %edx,%edx
		call   _01d36c_func
		mov    _0cdb00_data,%dh
		cmp    $0x000008,%dh
		je     _06bd1d_jump
		cmp    $0x00000a,%dh
		jne    _06bd29_jump

	_06bd1d_jump:
		mov    $0x00002f,%edx
		mov    $_0cda94_data,%eax
		jmp    _06bd76_jump

	_06bd29_jump:
		cmp    $0x000009,%dh
		je     _06bd33_jump
		cmp    $0x00000b,%dh
		jne    _06bd4c_jump

	_06bd33_jump:
		mov    $0x000030,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func
		call   _06a468_func
		jmp    _06c224_case

	_06bd4c_jump:
		cmp    $0x000003,%dh
		je     _06bd56_jump
		cmp    $0x000007,%dh
		jne    _06bd6f_jump

	_06bd56_jump:
		mov    $0x000024,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func
		call   _06a468_func
		jmp    _06c224_case

	_06bd6f_jump:
		mov    $_0cda94_data,%eax
		xor    %edx,%edx

	_06bd76_jump:
		call   _01d364_func

	_06bd7b_jump:
		call   _06a468_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06bd86_case:
		mov    _0cdae2_data,%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		mov    %cx,_0cdad4_data
		cmp    $0xffffffff,%eax
		je     _06bdc5_jump
		cmpb   $0x000000,_0cdb00_data
		jne    _06bdc5_jump
		cmpw   $0x000001,_0cdae4_data
		jne    _06bdb6_jump
		mov    $0x000031,%edx
		jmp    _06bdbb_jump

	_06bdb6_jump:
		mov    $0x000003,%edx

	_06bdbb_jump:
		mov    $_0cda94_data,%eax
		call   _01d364_func

	_06bdc5_jump:
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    _0cdaa0_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    _0cdb00_data,%al
		testb  $0x000040,0x000007(%ebx,%eax,8)
		je     _06bebd_jump
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		jne    _06be34_jump
		cmpb   $0x000000,_0cdb01_data
		jne    _06be1e_jump
		cmpb   $0x00003c,_0cdb00_data
		je     _06c103_jump

	_06be1e_jump:
		mov    $0x00003c,%ebx
		mov    $_0cda94_data,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _06c103_jump

	_06be34_jump:
		cmpb   $0x000000,_0cdb01_data
		jne    _06be46_jump
		cmpb   $0x00000f,_0cdb00_data
		je     _06be4d_jump

	_06be46_jump:
		mov    $0x000001,%eax
		jmp    _06be4f_jump

	_06be4d_jump:
		xor    %eax,%eax

	_06be4f_jump:
		test   %eax,%eax
		je     _06c103_jump
		cmpb   $0x000000,_0cdb01_data
		jne    _06be69_jump
		cmpb   $0x00003d,_0cdb00_data
		je     _06be70_jump

	_06be69_jump:
		mov    $0x000001,%eax
		jmp    _06be72_jump

	_06be70_jump:
		xor    %eax,%eax

	_06be72_jump:
		test   %eax,%eax
		je     _06c103_jump
		xor    %ebx,%ebx
		mov    _0cdafe_data,%bl
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		mov    _0cda98_data,%ebx
		shl    $0x000002,%eax
		lea    (%ebx,%eax,1),%ecx
		xor    %edx,%edx
		mov    $0x00000f,%ebx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		mov    0x00000a(%ecx),%al
		dec    %al
		mov    %al,_0cdaff_data
		call   _06a468_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06bebd_jump:
		cmp    $0x000025,%al
		jne    _06bef0_jump
		mov    _0ceca0_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06becf_jump
		neg    %eax

	_06becf_jump:
		cmp    $0x000080,%eax
		jg     _06bef0_jump
		mov    $0x000026,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func
		call   _06a468_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06bef0_jump:
		cmpb   $0x000014,_0cdb00_data
		jne    _06bfa7_jump
		mov    $_0cda94_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _06bfa7_jump
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _06c103_jump
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    _0cdaa0_data,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    _0cdb00_data,%bl
		mov    (%eax),%eax
		shl    $0x000003,%ebx
		add    %eax,%ebx
		mov    0x000007(%ebx),%ch
		lea    0x000007(%ebx),%eax
		test   $0x000010,%ch
		sete   %cl
		mov    (%eax),%dl
		and    $0x000001,%cl
		and    $0x0000ef,%dl
		shl    $0x000004,%cl
		mov    %dl,(%eax)
		mov    %dl,%dh
		or     %cl,%dh
		mov    %dh,(%eax)
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		call   _054484_func
		lea    0x000007(%ebx),%eax
		testb  $0x000010,0x000007(%ebx)
		sete   %bl
		mov    (%eax),%ch
		and    $0x000001,%bl
		and    $0x0000ef,%ch
		shl    $0x000004,%bl
		mov    %ch,%dl
		mov    %ch,(%eax)
		or     %bl,%dl
		mov    %dl,(%eax)
		call   _06a468_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06bfa7_jump:
		mov    _0cdb00_data,%bh
		cmp    $0x00003b,%bh
		je     _06bfc6_jump
		cmp    $0x00003e,%bh
		je     _06bfc6_jump
		cmp    $0x00003f,%bh
		je     _06bfc6_jump
		cmp    $0x000040,%bh
		je     _06bfc6_jump
		cmp    $0x000041,%bh
		jne    _06bff7_jump

	_06bfc6_jump:
		mov    $_0cda94_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _06c103_jump
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %ax,_0cebba_data
		mov    $_0cda94_data,%eax
		call   _01d364_func
		call   _06a468_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06bff7_jump:
		test   %bh,%bh
		je     _06c009_jump
		cmp    $0x000001,%bh
		je     _06c009_jump
		cmp    $0x000002,%bh
		jne    _06c103_jump

	_06c009_jump:
		mov    _0cebba_data,%di
		inc    %edi
		mov    %di,_0cebba_data
		cmp    $0x0001f4,%di
		jl     _06c103_jump
		mov    %edi,%edx
		sub    $0x000064,%edx
		mov    _0cebda_data,%bx
		mov    %dx,_0cebba_data
		test   %bx,%bx
		jne    _06c061_jump
		mov    $0x00003b,%edx
		mov    $_0cda94_data,%eax
		mov    $0x000001,%edi
		call   _01d364_func
		mov    %di,_0cebda_data
		call   _06a468_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c061_jump:
		cmp    $0x000001,%bx
		jne    _06c08d_jump
		mov    $0x000040,%edx
		mov    $_0cda94_data,%eax
		mov    $0x000002,%esi
		call   _01d364_func
		mov    %si,_0cebda_data
		call   _06a468_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c08d_jump:
		cmp    $0x000002,%bx
		jne    _06c0b9_jump
		mov    $0x00003e,%edx
		mov    $_0cda94_data,%eax
		mov    $0x000003,%ecx
		call   _01d364_func
		mov    %cx,_0cebda_data
		call   _06a468_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c0b9_jump:
		cmp    $0x000003,%bx
		jne    _06c0e5_jump
		mov    $0x00003f,%edx
		mov    $_0cda94_data,%eax
		mov    $0x000004,%ebx
		call   _01d364_func
		mov    %bx,_0cebda_data
		call   _06a468_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c0e5_jump:
		cmp    $0x000004,%bx
		jne    _06c103_jump
		mov    $0x000041,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func
		xor    %edx,%edx
		mov    %dx,_0cebda_data

	_06c103_jump:
		call   _06a468_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c10e_case:
		mov    _0cdb00_data,%bl
		cmp    $0x000002,%bl
		je     _06c122_jump
		cmp    $0x000003,%bl
		jne    _06c224_case

	_06c122_jump:
		mov    $_0cda94_data,%eax
		xor    %edx,%edx
		xor    %esi,%esi
		call   _01d364_func
		mov    %si,_0cdad6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c13d_case:
		xor    %edi,%edi
		mov    _0cdb00_data,%cl
		mov    %di,_0cebba_data
		mov    %di,_0cebda_data
		cmp    $0x000008,%cl
		je     _06c15f_jump
		mov    %di,_0cdad4_data

	_06c15f_jump:
		cmpb   $0x00000f,_0cdb00_data
		je     _06c172_jump
		cmpw   $0x000000,_0cdadc_data
		je     _06c18f_jump

	_06c172_jump:
		mov    $0x000008,%eax
		mov    _0cecc6_data,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ecx
		call   _06a1a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c18f_jump:
		mov    _0cecc6_data,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		xor    %eax,%eax
		sar    $0x000010,%ecx
		call   _06a1a0_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c1a9_case:
		xor    %edx,%edx
		mov    %dx,_0ceca2_data
		mov    _09267c_data,%dl
		mov    _0cdb15_data,%ah
		inc    %dl
		or     $0x000008,%ah
		mov    %dl,_09267c_data
		mov    _0cdb05_data,%dh
		mov    %ah,_0cdb15_data
		test   %dh,%dh
		jne    _06c224_case
		mov    _0cdad4_data,%bx
		test   %bx,%bx
		jle    _06c1f1_jump
		mov    %ebx,%edi
		dec    %edi
		mov    %di,_0cdad4_data
		jmp    _06c1fd_jump

	_06c1f1_jump:
		jge    _06c1fd_jump
		mov    %ebx,%esi
		inc    %esi
		mov    %si,_0cdad4_data

	_06c1fd_jump:
		mov    _0cdad6_data,%ax
		test   %ax,%ax
		jle    _06c218_jump
		mov    %eax,%ecx
		dec    %ecx
		mov    %cx,_0cdad6_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c218_jump:
		jge    _06c224_case
		mov    %eax,%ebx
		inc    %ebx
		mov    %bx,_0cdad6_data

	_06c224_case:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lea    0x000000(%eax),%eax
		ret    



_06c230_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cdb01_data,%ah
		cmp    $0x000002,%ah
		je     _06c344_jump
		cmp    $0x000001,%ah
		je     _06c319_jump
		call   _06a8a4_func
		cmpb   $0x000000,_0cdb01_data
		jne    _06c344_jump
		mov    _0cdb00_data,%bl
		test   %bl,%bl
		je     _06c28e_jump
		cmp    $0x000001,%bl
		je     _06c28e_jump
		cmp    $0x000002,%bl
		je     _06c28e_jump
		cmp    $0x00003f,%bl
		je     _06c28e_jump
		cmp    $0x00003e,%bl
		je     _06c28e_jump
		cmp    $0x00003b,%bl
		je     _06c28e_jump
		cmp    $0x000003,%bl
		je     _06c28e_jump
		cmp    $0x000008,%bl
		jne    _06c344_jump

	_06c28e_jump:
		testb  $0x000040,_0cec70_data
		je     _06c2d0_jump
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06c344_jump
		mov    $0x000010,%ebx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		xor    %edx,%edx
		mov    %dx,_0cdad4_data
		mov    %dx,_0cdad6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c2d0_jump:
		cmpb   $0x000000,_0cee99_data
		jne    _06c344_jump
		mov    _0cdb00_data,%cl
		cmp    $0x000012,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06c344_jump
		mov    _0cec71_data,%ch
		test   $0x000018,%ch
		jne    _06c344_jump
		test   $0x000001,%ch
		jne    _06c344_jump
		cmp    $0x000008,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06c344_jump
		test   $0x000080,%ch
		jne    _06c344_jump
		mov    $0x000012,%edx
		jmp    _06c33a_jump

	_06c319_jump:
		cmp    %ah,%ah
		jne    _06c344_jump
		mov    _0cec71_data,%bl
		test   $0x000018,%bl
		jne    _06c344_jump
		test   %ah,%bl
		je     _06c344_jump
		cmpb   $0x000000,_0cdb00_data
		jne    _06c344_jump
		mov    $0x000003,%edx

	_06c33a_jump:
		mov    $_0cda94_data,%eax
		call   _01d364_func

	_06c344_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx

	_06c347_jump:
		ret    



_06c348_func:
		cmpb   $0x000000,_0cdbc2_data
		jne    _06c347_jump
		testb  $0x000001,_0cec70_data
		je     _06c347_jump
		testb  $0x000018,_0cec71_data
		jne    _06c347_jump
		jmp    _064550_jump

_06c368_switch:
		.long   _06c3bb_case
		.long   _06c3a8_case
		.long   _06c3bb_case
		.long   _06c3ca_case
		.long   _06c3ca_case
		.long   _06c3bb_case
		.long   _06c3ca_case
		.long   _06c3bb_case




_06c388_func:
		push   %edx
		cmpb   $0x000000,_0ceeb8_data
		jne    _06c3ca_case
		mov    _0cdb01_data,%al
		cmp    $0x000007,%al
		ja     _06c3ca_case
		and    $0x0000ff,%eax
		jmp    *%cs:_06c368_switch(,%eax,4)

	_06c3a8_case:
		call   _0407f4_func
		test   %ax,%ax
		je     _06c3bb_case
		cmpb   $0x000003,_0cdb00_data
		jne    _06c3c2_jump

	_06c3bb_case:
		call   _069ec0_func
		pop    %edx
		ret    

	_06c3c2_jump:
		xor    %dh,%dh
		mov    %dh,_0ceec3_data

	_06c3ca_case:
		pop    %edx
		ret    



_06c3cc_func:
		push   %edx
		test   %ax,%ax
		jne    _06c3d7_jump
		mov    $0x000001,%eax

	_06c3d7_jump:
		cwtl   
		dec    %eax
		sar    $0x000003,%eax
		cmp    $0x00001f,%ax
		jg     _06c3f9_jump
		testb  $0x000008,_0cdb15_data
		jne    _06c3f2_jump
		add    $0x00001f,%eax
		pop    %edx
		ret    

	_06c3f2_jump:
		mov    $0x000020,%edx
		jmp    _06c40c_jump

	_06c3f9_jump:
		testb  $0x000008,_0cdb15_data
		jne    _06c407_jump
		sub    $0x00001f,%eax
		pop    %edx
		ret    

	_06c407_jump:
		mov    $0x00005f,%edx

	_06c40c_jump:
		cwtl   
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _06c417_jump
		neg    %eax

	_06c417_jump:
		pop    %edx
		ret    



_06c41c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		cmpb   $0x000002,_0cdb01_data
		jne    _06c43c_jump
		cmpb   $0x000008,_0cdb00_data
		jne    _06c43c_jump
		movw   $0x00005a,_0cdaea_data

	_06c43c_jump:
		mov    $0x000007,%edx
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx
		mov    $0xffffffff,%esi
		call   _01d374_func
		xor    %ecx,%ecx
		xor    %edi,%edi
		mov    $0xffffffff,%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		call   _06f35c_func
		mov    %bx,_0cdae6_data
		mov    %bx,_0cebba_data
		mov    %si,_0cdade_data
		mov    %di,_0ceca2_data
		mov    %cx,_0cdad6_data
		xor    %bl,%bl
		xor    %dh,%dh
		mov    %bl,_0cdb06_data
		mov    $0x000001,%bh
		mov    %dh,_0cdb05_data
		mov    %bh,_0ceec3_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06c4a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		xor    %eax,%eax
		mov    _0cdabc_data,%dx
		mov    _0cdafc_data,%al
		mov    0x000028(%esi),%bx
		mov    %eax,%ecx
		xor    %eax,%eax
		add    %edx,%ecx
		mov    0x000068(%esi),%al
		sub    %ebx,%ecx
		sub    %eax,%ecx
		xor    %eax,%eax
		mov    _0cdac0_data,%di
		mov    _0cdafd_data,%al
		mov    0x00002c(%esi),%dx
		add    %eax,%edi
		sub    %edx,%edi
		movswl %cx,%edx
		imul   %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%al
		sub    %eax,%edi
		movswl %di,%eax
		imul   %eax,%eax
		add    %eax,%edx
		mov    _0cdb00_data,%ah
		test   %ah,%ah
		jne    _06c676_jump
		cmp    $0x0011a0,%edx
		jbe    _06c5ec_jump
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func
		movb   $0x000000,0x00007f(%esi)
		xor    %eax,%eax
		mov    %ax,_0cdad6_data
		mov    %ax,_0cdad4_data
		mov    %ax,_0ceca2_data
		mov    %esi,%eax
		call   _077120_func
		mov    %eax,%edx
		mov    %ax,0x00004e(%esi)
		cmp    $0x000100,%ax
		jg     _06c55b_jump
		jne    _06c563_jump
		testb  $0x000008,_0cdb15_data
		jne    _06c563_jump

	_06c55b_jump:
		movw   $0x00ffff,0x000052(%esi)
		jmp    _06c569_jump

	_06c563_jump:
		movw   $0x000001,0x000052(%esi)

	_06c569_jump:
		test   %cx,%cx
		jge    _06c570_jump
		neg    %ecx

	_06c570_jump:
		test   %di,%di
		jge    _06c577_jump
		neg    %edi

	_06c577_jump:
		mov    %edx,%eax
		lea    0x000004(%esp),%ebx
		add    $0x000080,%eax
		mov    %esp,%edx
		cwtl   
		call   _05bebc_func
		cmpw   $0x000002,(%esp)
		jle    _06c5cb_jump
		cmpw   $0x000002,0x000004(%esp)
		jle    _06c5cb_jump
		movswl %cx,%eax
		mov    $0x000009,%cl
		shl    %cl,%eax
		mov    0x000002(%esp),%ebx
		mov    %eax,%edx
		sar    $0x000010,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    $0x000009,%cl
		mov    %eax,%ebx
		movswl %di,%eax
		shl    %cl,%eax
		mov    -0x000002(%esp),%ecx
		mov    %eax,%edx
		sar    $0x000010,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %ebx,%eax
		sar    %eax
		jmp    _06c5df_jump

	_06c5cb_jump:
		cmpw   $0x000002,(%esp)
		jg     _06c5dd_jump
		mov    %ecx,%eax
		mov    %ax,0x00004c(%esi)
		jmp    _06c676_jump

	_06c5dd_jump:
		mov    %edi,%eax

	_06c5df_jump:
		mov    %ax,0x00004c(%esi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c5ec_jump:
		ja     _06c63e_jump
		mov    _0cdb05_data,%dh
		xor    %al,%al
		inc    %dh
		mov    %ax,_0cdad4_data
		mov    %dh,_0cdb05_data
		mov    0x000042(%esi),%ax
		mov    _0cdad6_data,%dx
		sub    %eax,%edx
		mov    _0cdb05_data,%bl
		mov    %dx,_0cdad6_data
		cmp    $0x000003,%bl
		jb     _06c676_jump
		xor    %bh,%bh
		mov    %bh,_0cdb05_data
		mov    %edx,%ebx
		inc    %ebx
		mov    %bx,_0cdad6_data
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06c63e_jump:
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func
		xor    %ebx,%ebx
		mov    $0x000001,%dl
		mov    %bx,_0cdad6_data
		mov    %bx,_0cdad4_data
		mov    %bx,_0ceca2_data
		movb   $0x000000,0x00007f(%esi)
		mov    %dl,_0ceec3_data
		movw   $0x00005f,0x00004c(%esi)

	_06c676_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06c680_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0cdaa0_data,%eax
		mov    %eax,(%esp)
		mov    _0cec84_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		mov    $0x000080,%edi
		add    %eax,%ecx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%ecx
		mov    $0x000180,%edx
		add    %eax,%ecx
		mov    %edx,0x000008(%esp)
		mov    _0cdb00_data,%ah
		mov    0x00004e(%ecx),%si
		test   %ah,%ah
		jne    _06c6d2_jump
		mov    %ecx,%eax
		call   _06c4a8_func
		jmp    _06c7ff_jump

	_06c6d2_jump:
		cmp    $0x000001,%ah
		jne    _06c7ff_jump
		mov    0x00007f(%ecx),%dh
		test   %dh,%dh
		jne    _06c7e1_jump
		mov    0x00004c(%ecx),%dx
		cmp    $0x000064,%dx
		jle    _06c6f9_jump
		sub    $0x000002,%edx
		mov    %dx,0x00004c(%ecx)
		jmp    _06c706_jump

	_06c6f9_jump:
		cmp    $0x00005f,%dx
		jge    _06c706_jump
		mov    %edx,%eax
		inc    %eax
		mov    %ax,0x00004c(%ecx)

	_06c706_jump:
		mov    %esi,%eax
		lea    0x000010(%esp),%ebx
		add    $0x000080,%eax
		lea    0x00000c(%esp),%edx
		cwtl   
		call   _05bdcc_func
		cmp    0x000008(%esp),%si
		jl     _06c735_jump
		cmpw   $0x000000,0x000052(%ecx)
		jle    _06c72d_jump
		movb   $0x000005,0x00007f(%ecx)

	_06c72d_jump:
		movw   $0x00ffff,0x000052(%ecx)
		jmp    _06c74b_jump

	_06c735_jump:
		cmp    %di,%si
		jg     _06c74b_jump
		cmpw   $0x000000,0x000052(%ecx)
		jge    _06c745_jump
		movb   $0x000005,0x00007f(%ecx)

	_06c745_jump:
		movw   $0x000001,0x000052(%ecx)

	_06c74b_jump:
		movswl %si,%eax
		call   _05be9c_func
		cwtl   
		sar    $0x000007,%eax
		mov    0x000052(%ecx),%dx
		inc    %eax
		test   %dx,%dx
		jge    _06c763_jump
		neg    %eax

	_06c763_jump:
		add    %ax,0x00004e(%ecx)
		mov    0x000028(%ecx),%edx
		mov    _0cdac0_data,%ax
		xor    %ebx,%ebx
		mov    %eax,0x000004(%esp)
		mov    0x000068(%ecx),%bl
		mov    0x00004a(%ecx),%eax
		add    %edx,%ebx
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		imul   %eax,%edx
		sar    $0x000009,%edx
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    _0cdafc_data,%bl
		sub    %ebx,%edx
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    0x00002c(%ecx),%ebp
		mov    0x000069(%ecx),%dl
		add    %edx,%ebp
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		imul   %eax,%edx
		sar    $0x000009,%edx
		mov    %ebp,%eax
		sub    %edx,%eax
		mov    _0cdabc_data,%di
		mov    %eax,%edx
		xor    %eax,%eax
		sub    %edi,%ebx
		mov    _0cdafd_data,%al
		mov    0x000004(%esp),%edi
		sub    %eax,%edx
		mov    %bx,_0cdad4_data
		sub    %edi,%edx
		mov    %dx,_0cdad6_data
		jmp    _06c7ff_jump

	_06c7e1_jump:
		mov    %dh,%bl
		sub    %ah,%bl
		mov    %bl,0x00007f(%ecx)
		xor    %ebx,%ebx
		mov    %bx,_0cdad4_data
		mov    %bx,_0cdad6_data
		mov    %bx,_0ceca2_data

	_06c7ff_jump:
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    (%esp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdb00_data,%al
		mov    0x000002(%edx,%eax,8),%al
		mov    %al,_0cdafe_data
		movswl %si,%eax
		call   _06c3cc_func
		mov    _0cdad4_data,%dx
		mov    %al,_0cdaff_data
		mov    0x000040(%ecx),%ax
		mov    _0cdad6_data,%bx
		add    %eax,%edx
		add    0x000042(%ecx),%bx
		xor    %eax,%eax
		mov    _0cdaf6_data,%al
		mov    %bx,_0cdad6_data
		mov    _092224_data(%eax),%bh
		mov    %dx,_0cdad4_data
		test   $0x000002,%bh
		je     _06c91e_jump
		testb  $0x000008,_0cdb15_data
		jne    _06c882_jump
		xor    %eax,%eax
		mov    _0cdaf7_data,%al
		testb  $0x000002,_092224_data(%eax)
		jne    _06c8a3_jump

	_06c882_jump:
		testb  $0x000008,_0cdb15_data
		je     _06c91e_jump
		xor    %eax,%eax
		mov    _0cdaf8_data,%al
		testb  $0x000002,_092224_data(%eax)
		je     _06c91e_jump

	_06c8a3_jump:
		cmpw   $0x000000,_0cdad6_data
		jg     _06c8b4_jump
		cmpw   $0x000000,0x000042(%ecx)
		jle    _06c91e_jump

	_06c8b4_jump:
		mov    $_0cda94_data,%eax
		mov    $0xffffffff,%edx
		call   _0255d0_func
		xor    %ch,%ch
		mov    _0cdad4_data,%eax
		mov    _0cdac0_data,%ebx
		sar    $0x000010,%eax
		mov    %dx,_0cecfc_data
		add    %eax,%ebx
		xor    %edx,%edx
		mov    %ebx,_0cdac0_data
		xor    %eax,%eax
		mov    $0x000008,%ebx
		mov    %ax,_0cdad6_data
		mov    $_0cda94_data,%eax
		mov    %ch,_0cdb13_data
		call   _01d374_func
		mov    $0xffffffff,%ebx
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax
		mov    %bx,_0cdae6_data
		call   _06f35c_func
		jmp    _06c943_jump

	_06c91e_jump:
		xor    %eax,%eax
		mov    _0cdaf8_data,%al
		testb  $0x000010,_092224_data(%eax)
		jne    _06c93e_jump
		xor    %eax,%eax
		mov    _0cdaf7_data,%al
		testb  $0x000010,_092224_data(%eax)
		je     _06c943_jump

	_06c93e_jump:
		call   _06c950_func

	_06c943_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06c950_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cec84_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		cmpw   $0x000100,0x00004e(%edx,%eax,4)
		setl   %al
		and    $0x0000ff,%eax
		and    $0x000001,%al
		mov    _0cdb15_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0cdb15_data
		shl    $0x000003,%al
		mov    $0x000002,%ebx
		mov    %ah,%dl
		mov    $0xffffffff,%esi
		or     %al,%dl
		mov    $_0cda94_data,%eax
		mov    %dl,_0cdb15_data
		mov    %ebx,%edx
		xor    %ecx,%ecx
		call   _01d374_func
		mov    _0cdad2_data,%eax
		xor    %dh,%dh
		mov    %cx,_0cdad6_data
		mov    %dh,_0cdb05_data
		mov    %dh,_0cdb06_data
		sar    $0x000010,%eax
		mov    _0cdabc_data,%edx
		mov    %si,_0cecfc_data
		sub    %eax,%edx
		mov    %si,_0cdae6_data
		mov    %edx,_0cdabc_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06c9f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cdabc_data,%dx
		mov    _0cdac0_data,%bx
		mov    _0ceca2_data,%di
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0cdafc_data,%al
		mov    _0cdb08_data,%cl
		add    %edx,%eax
		add    %ebx,%ecx
		mov    %al,%bl
		mov    %eax,%esi
		and    $0x00000f,%bl
		test   %di,%di
		jg     _06ca34_jump
		jne    _06ca42_jump
		testb  $0x000008,_0cdb15_data
		je     _06ca42_jump

	_06ca34_jump:
		mov    $0x000010,%edx
		cmp    $0x00000d,%bl
		jbe    _06ca4f_jump
		add    %edx,%eax
		jmp    _06ca4f_jump

	_06ca42_jump:
		mov    $0xfffffff0,%edx
		cmp    $0x000004,%bl
		jae    _06ca4f_jump
		sub    $0x000010,%eax

	_06ca4f_jump:
		mov    _0ceca2_data,%bx
		add    %edx,%eax
		test   %bx,%bx
		je     _06cab0_jump
		mov    %ecx,%edx
		movswl %ax,%ebx
		add    $0x000010,%edx
		mov    %ebx,%eax
		movswl %dx,%edx
		call   _024930_func
		test   %ax,%ax
		jne    _06caa0_jump
		mov    %ecx,%eax
		add    $0x000020,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _024930_func
		test   %ax,%ax
		jne    _06caa0_jump
		mov    %ecx,%eax
		add    $0x000030,%eax
		movswl %ax,%edx
		mov    %ebx,%eax
		call   _024930_func
		test   %ax,%ax
		je     _06cab0_jump

	_06caa0_jump:
		xor    %edi,%edi
		mov    %di,_0cdad4_data
		mov    %di,_0ceca2_data

	_06cab0_jump:
		cmpw   $0x000000,_0cdad6_data
		jge    _06cad6_jump
		add    $0x000010,%ecx
		movswl %si,%eax
		movswl %cx,%edx
		call   _024930_func
		test   %ax,%ax
		je     _06cad6_jump
		xor    %ebx,%ebx
		mov    %bx,_0cdad6_data

	_06cad6_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06cadc_func:
		push   %ebx
		push   %edx
		mov    _0cdabc_data,%ax
		sub    _0ceca6_data,%ax
		cmp    $0x000001,%ax
		jle    _06cb12_jump
		mov    _0cdb15_data,%dl
		and    $0x0000f7,%dl
		mov    $_0cda94_data,%eax
		mov    %dl,_0cdb15_data
		mov    $0x000015,%edx
		call   _01d364_func
		pop    %edx
		pop    %ebx
		ret    

	_06cb12_jump:
		cwtl   
		cmp    $0xffffffff,%eax
		jge    _06cb39_jump
		mov    _0cdb15_data,%ah
		or     $0x000008,%ah
		mov    $0x000015,%edx
		mov    %ah,_0cdb15_data
		mov    $_0cda94_data,%eax
		call   _01d364_func
		pop    %edx
		pop    %ebx
		ret    

	_06cb39_jump:
		mov    $0x000014,%edx
		xor    %ebx,%ebx
		mov    $_0cda94_data,%eax
		mov    %bx,_0cdad4_data
		call   _01d364_func
		mov    _0cdabc_data,%ax
		mov    %ax,_0ceca6_data
		pop    %edx
		pop    %ebx
		ret    



_06cb60_func:
		push   %ecx
		push   %edx
		cmpw   $0x000003,_0ceca4_data
		je     _06cbc0_jump
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _06cbc0_jump
		mov    _0cdb00_data,%dh
		cmp    $0x000007,%dh
		je     _06cbc0_jump
		cmp    $0x000009,%dh
		je     _06cbc0_jump
		cmpw   $0x000000,_0cdad6_data
		jg     _06cbc0_jump
		cmp    $0x000008,%dh
		je     _06cbb0_jump
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		xor    %cl,%cl
		call   _01d364_func
		mov    %cl,_0ceec3_data

	_06cbb0_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cdae6_data
		mov    %cx,_0cdad6_data

	_06cbc0_jump:
		pop    %edx
		pop    %ecx
		ret    



_06cbc4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0cecc8_data,%dx
		mov    _0cdaa0_data,%esi
		test   %dx,%dx
		je     _06cbe7_jump
		movw   $0x000001,_0cdadc_data

	_06cbe7_jump:
		mov    $0x000012,%ebx
		mov    $_0cda0c_data,%edx
		mov    $_0cda0e_data,%eax
		call   _08164d_func
		mov    _0cdabc_data,%ax
		mov    %ax,_0cda0c_data
		cmpb   $0x000007,_0cdb00_data
		jne    _06cc19_jump
		movw   $0x00ffff,_0cdade_data

	_06cc19_jump:
		mov    _0cecfa_data,%eax
		mov    $0x000001,%dl
		sar    $0x000010,%eax
		mov    %dl,(%esp)
		cmp    $0xffffffff,%eax
		je     _06cc32_jump
		decw   _0cecfc_data

	_06cc32_jump:
		mov    _0cec8a_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06cc46_jump
		decw   _0cec8c_data

	_06cc46_jump:
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    _0cdaa0_data,%edx
		shl    $0x000002,%eax
		mov    _0cece8_data,%bx
		add    %eax,%edx
		inc    %ebx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdb00_data,%al
		mov    %bx,_0cece8_data
		mov    0x000005(%edx,%eax,8),%al
		xor    %ebx,%ebx
		shr    $0x000004,%al
		mov    %al,%bl
		cmp    $0x00000b,%bx
		je     _06ccba_jump
		cmp    $0x00000a,%bx
		je     _06ccba_jump
		mov    _0cdb05_data,%dh
		inc    %dh
		mov    %dh,_0cdb05_data
		cmp    $0x000003,%dh
		jb     _06cca2_jump
		xor    %ch,%ch
		mov    %ch,_0cdb05_data

	_06cca2_jump:
		mov    _0cdb06_data,%al
		inc    %al
		mov    %al,_0cdb06_data
		cmp    $0x000004,%al
		jb     _06ccba_jump
		xor    %dl,%dl
		mov    %dl,_0cdb06_data

	_06ccba_jump:
		cmpw   $0x000017,_0cece8_data
		jne    _06cccb_jump
		incw   _0cdad6_data

	_06cccb_jump:
		call   *_0c4c68_data
		test   %ax,%ax
		je     _06ccfb_jump
		cmpw   $0x00000c,_0cece8_data
		jg     _06ccfb_jump
		cmpb   $0x000000,_0ceece_data
		jne    _06ccfb_jump
		cmpb   $0x000000,_0cdb13_data
		jne    _06ccfb_jump
		cmpb   $0x000002,_0cdb00_data
		jne    _06cd2e_jump

	_06ccfb_jump:
		mov    $_0cda94_data,%eax
		xor    %edx,%edx
		call   _054320_func
		mov    _0ceec3_data,%dl
		mov    $0x000002,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		jne    _06cd2e_jump
		call   *_0c4c68_data
		test   %ax,%ax
		jne    _06cd2e_jump
		incb   _0ceec3_data

	_06cd2e_jump:
		cmpw   $0x000006,_0cece8_data
		jne    _06cd63_jump
		mov    _0cdb00_data,%ah
		cmp    $0x000018,%ah
		je     _06cd48_jump
		cmp    $0x000021,%ah
		jne    _06cd4f_jump

	_06cd48_jump:
		mov    $0x000002,%edx
		jmp    _06cd59_jump

	_06cd4f_jump:
		cmp    $0x000020,%ah
		jne    _06cd63_jump
		mov    $0x000011,%edx

	_06cd59_jump:
		mov    $_0cda94_data,%eax
		call   _01d364_func

	_06cd63_jump:
		mov    _0cdae4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06cd7d_jump
		mov    _0cdad6_data,%ax
		add    %ax,_0cdae6_data

	_06cd7d_jump:
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		call   _024a00_func
		mov    _0cdb00_data,%cl
		mov    %al,%dl
		cmp    $0x000008,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06cdc1_jump
		cmp    $0x00001f,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06cdc1_jump
		call   _06a954_func
		cmpb   $0x00000f,_0cdb00_data
		jne    _06cdc1_jump
		call   _06c9f0_func

	_06cdc1_jump:
		xor    %eax,%eax
		mov    %dl,%al
		call   _06cb60_func
		mov    _0cdad4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jge    _06ce1e_jump
		cmpb   $0x00000f,_0cdb00_data
		jne    _06ce1e_jump
		cmp    $0x00000b,%bx
		jne    _06ce1e_jump
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		shl    $0x000002,%eax
		lea    (%esi,%eax,1),%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdb00_data,%al
		mov    0x000005(%edx,%eax,8),%bl
		and    $0x00000f,%bl
		mov    %bl,0x000005(%edx,%eax,8)
		mov    %bl,%bh
		or     $0x000010,%bh
		xor    %cl,%cl
		mov    %bh,0x000005(%edx,%eax,8)
		mov    %cl,_0cdb05_data
		mov    %cl,_0cdb06_data

	_06ce1e_jump:
		cmpw   $0x000000,_0cdad6_data
		jl     _06ce6a_jump
		mov    _0cdb00_data,%al
		test   %al,%al
		jne    _06ce4a_jump
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func
		xor    %eax,%eax
		mov    %ax,_0cdae6_data
		jmp    _06ce6a_jump

	_06ce4a_jump:
		cmp    $0x000011,%al
		je     _06ce52_jump
		cmp    $0x000012,%al
		jne    _06ce6a_jump

	_06ce52_jump:
		mov    $0x000013,%edx
		mov    $_0cda94_data,%eax
		xor    %edi,%edi
		call   _01d364_func
		mov    %di,_0cdae6_data

	_06ce6a_jump:
		mov    _0cdb00_data,%dh
		cmp    $0x000011,%dh
		je     _06d14e_jump
		test   %dh,%dh
		je     _06d14e_jump
		cmp    $0x000009,%dh
		je     _06d14e_jump
		cmp    $0x00001f,%dh
		je     _06d14e_jump
		cmp    $0x00000d,%dh
		jne    _06cea6_jump
		cmpw   $0x000000,_0cdad6_data
		jl     _06d14e_jump

	_06cea6_jump:
		cmpw   $0x000003,_0cece8_data
		jl     _06d14e_jump
		cmpw   $0x000003,_0ceca4_data
		je     _06d14e_jump
		xor    %eax,%eax
		mov    _0cdaf6_data,%al
		mov    _092224_data(%eax),%dl
		test   $0x000002,%dl
		je     _06d0ff_jump
		test   $0x000040,%dl
		je     _06cf02_jump
		mov    _0cdad6_data,%dx
		mov    _092224_data(%eax),%bl
		shl    $0x000004,%edx
		test   $0x000080,%bl
		je     _06cefb_jump
		add    %dx,_0ceca2_data
		jmp    _06cf02_jump

	_06cefb_jump:
		sub    %dx,_0ceca2_data

	_06cf02_jump:
		mov    $_0cda94_data,%eax
		call   _0255d0_func
		xor    %ecx,%ecx
		xor    %bh,%bh
		mov    _0cdad4_data,%eax
		mov    _0cdac0_data,%edx
		mov    %bh,_0cdb13_data
		mov    %bh,_0ceece_data
		sar    $0x000010,%eax
		mov    %cx,_0cdad6_data
		add    %eax,%edx
		mov    $_0cda94_data,%eax
		mov    %edx,_0cdac0_data
		call   _025174_func
		test   %al,%al
		jne    _06cf76_jump
		cmpw   $0x000006,_0cecd4_data
		jne    _06cf67_jump
		cmpw   $0x000001,_0cecc0_data
		jne    _06cf67_jump
		mov    $0xffffffff,%edx
		mov    $0x0000f2,%eax
		jmp    _06cf71_jump

	_06cf67_jump:
		mov    $0xffffffff,%edx
		mov    $0x000013,%eax

	_06cf71_jump:
		call   _06f35c_func

	_06cf76_jump:
		cmpw   $0x000000,_0cdadc_data
		jne    _06cffe_jump
		mov    $0x000001,%al

	_06cf86_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    _0cda0a_data(,%edx,2),%bx
		cmp    _0cda0c_data(,%edx,2),%bx
		jne    _06cfa2_jump
		inc    %al
		cmp    $0x00000a,%al
		jb     _06cf86_jump

	_06cfa2_jump:
		cmp    $0x00000a,%al
		je     _06cff5_jump
		and    $0x0000ff,%eax
		mov    _0cda0a_data(,%eax,2),%dx
		cmp    _0cda0c_data(,%eax,2),%dx
		jge    _06cfd9_jump
		mov    _0ceca0_data,%ebx
		mov    $0xffffff00,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jle    _06cfd1_jump
		mov    %ebx,%eax

	_06cfd1_jump:
		mov    %ax,_0ceca2_data
		jmp    _06cffe_jump

	_06cfd9_jump:
		mov    _0ceca0_data,%ebx
		mov    $0x000100,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jge    _06cfed_jump
		mov    %ebx,%eax

	_06cfed_jump:
		mov    %ax,_0ceca2_data
		jmp    _06cffe_jump

	_06cff5_jump:
		xor    %esi,%esi
		mov    %si,_0ceca2_data

	_06cffe_jump:
		mov    $0xffffffff,%eax
		mov    _0cdb00_data,%ch
		mov    %ax,_0cecfc_data
		cmp    $0x000003,%ch
		jne    _06d026_jump
		cmpb   $0x000000,_0cdaff_data
		jne    _06d044_jump
		movb   $0x000001,_0ceec3_data
		jmp    _06d044_jump

	_06d026_jump:
		cmp    $0x000008,%ch
		jne    _06d044_jump
		mov    _0cdae8_data,%eax
		mov    $0x00005a,%ebx
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _06d03e_jump
		mov    %ebx,%eax

	_06d03e_jump:
		mov    %ax,_0cdaea_data

	_06d044_jump:
		mov    _0cdb00_data,%dh
		cmp    $0x000011,%dh
		je     _06d059_jump
		cmp    $0x000012,%dh
		je     _06d059_jump
		cmp    $0x000013,%dh
		jne    _06d0b1_jump

	_06d059_jump:
		testb  $0x000001,_0cec71_data
		je     _06d0aa_jump
		mov    _0cdaa0_data,%eax
		mov    0x000004(%eax),%eax
		mov    $0x000004,%cl
		movsbw 0x000018(%eax),%ax
		test   %ax,%ax
		js     _06d07b_jump
		sar    %cl,%ax
		jmp    _06d084_jump

	_06d07b_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_06d084_jump:
		movswl %ax,%edx
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06d095_jump
		neg    %eax

	_06d095_jump:
		cmp    %edx,%eax
		jl     _06d0aa_jump
		mov    $0x000007,%ebx
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		jmp    _06d0df_jump

	_06d0aa_jump:
		mov    $0x00002b,%ebx
		jmp    _06d0d8_jump

	_06d0b1_jump:
		cmp    $0x000019,%dh
		je     _06d0bb_jump
		cmp    $0x00001a,%dh
		jne    _06d0c2_jump

	_06d0bb_jump:
		mov    $0x000034,%ebx
		jmp    _06d0d8_jump

	_06d0c2_jump:
		cmp    $0x00001b,%dh
		je     _06d0cc_jump
		cmp    $0x00001c,%dh
		jne    _06d0d3_jump

	_06d0cc_jump:
		mov    $0x000035,%ebx
		jmp    _06d0d8_jump

	_06d0d3_jump:
		mov    $0x000008,%ebx

	_06d0d8_jump:
		mov    $_0cda94_data,%eax
		xor    %edx,%edx

	_06d0df_jump:
		call   _01d374_func
		cmpw   $0x0000c8,_0cdae6_data
		jl     _06d0f4_jump
		call   _069150_func

	_06d0f4_jump:
		movw   $0x00ffff,_0cdae6_data
		jmp    _06d14e_jump

	_06d0ff_jump:
		mov    _0cdb00_data,%dh
		cmp    $0x000007,%dh
		je     _06d14e_jump
		cmp    $0x000008,%dh
		jne    _06d142_jump
		cmpw   $0x000000,_0cdad6_data
		jl     _06d125_jump
		mov    $0xffffffff,%edx
		mov    %esp,%eax
		call   _0693a4_func

	_06d125_jump:
		cmpb   $0x000002,_0cdb01_data
		jne    _06d137_jump
		cmpb   $0x000008,_0cdb00_data
		je     _06d14e_jump

	_06d137_jump:
		movw   $0x00005a,_0cdaea_data
		jmp    _06d14e_jump

	_06d142_jump:
		mov    $0xffffffff,%edx
		mov    %esp,%eax
		call   _0693a4_func

	_06d14e_jump:
		cmpw   $0x000003,_0ceca4_data
		je     _06d17c_jump
		cmpb   $0x000002,_0cdb01_data
		jne    _06d17c_jump
		cmpb   $0x00001f,_0cdb00_data
		setne  %al
		and    $0x0000ff,%eax
		je     _06d17c_jump
		call   _0692b8_func
		call   _06adf8_func

	_06d17c_jump:
		cmpb   $0x000001,(%esp)
		jne    _06d1ab_jump
		cmpw   $0x000004,_0cdad6_data
		jle    _06d195_jump
		movw   $0x000004,_0cdad6_data

	_06d195_jump:
		mov    _0cdad4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xfffffff6,%eax
		jge    _06d1ab_jump
		movw   $0x00fff6,_0cdad6_data

	_06d1ab_jump:
		cmpw   $0x000002,_0cecd4_data
		jne    _06d202_jump
		cmpw   $0x00000f,_0cecc0_data
		jne    _06d202_jump
		mov    _0cdabc_data,%edx
		mov    _0cecd6_data,%eax
		add    $0x000096,%edx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _06d202_jump
		mov    _0cda88_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    _0cdac0_data,%ebx
		sub    $0x000064,%eax
		cmp    %ebx,%eax
		jge    _06d202_jump
		cmpb   $0x0000ff,_0cdb0a_data
		je     _06d202_jump
		call   _077c40_func
		call   _03b8d0_func

	_06d202_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_06d20a_jump:
		ret    



_06d20c_func:
		cmpb   $0x000000,_0cdbc2_data
		je     _06d20a_jump
		mov    _0cdb20_data,%eax
		call   _0772d8_func
		jmp    _0647b4_func



_06d224_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		andb   $0x0000f7,_0cec70_data
		mov    _0ce39a_data,%bx
		dec    %ebx
		xor    %ah,%ah
		mov    %bx,_0ce39a_data
		mov    _0ceebc_data,%bh
		mov    %ah,_0ce3a0_data
		test   %bh,%bh
		jne    _06d284_jump
		cmpb   $0x000003,_0cdb01_data
		jne    _06d262_jump
		cmpb   $0x000020,_0cdb00_data
		je     _06d269_jump

	_06d262_jump:
		mov    $0x000001,%eax
		jmp    _06d26b_jump

	_06d269_jump:
		xor    %eax,%eax

	_06d26b_jump:
		test   %eax,%eax
		je     _06d284_jump
		movb   $0x000005,_0ceeaa_data
		mov    $0x000001,%ah
		mov    %edx,_0cda04_data
		mov    %ah,_0ceebd_data

	_06d284_jump:
		call   _06d20c_func
		pop    %edx
		pop    %ebx
		ret    



_06d28c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000016,%ebx
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		xor    %ecx,%ecx
		call   _01d374_func
		mov    %cx,_0ceca2_data
		xor    %ah,%ah
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %ah,_0cdaff_data
		mov    %dx,_0cdad6_data
		mov    _0cee99_data,%dl
		mov    %bx,_0cdad4_data
		test   %dl,%dl
		je     _06d2e8_jump
		mov    _0cecf4_data,%eax
		mov    _0cdabc_data,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,_0cdabc_data

	_06d2e8_jump:
		mov    $0x000001,%dh
		mov    $0x000078,%edi
		xor    %esi,%esi
		mov    $_0cda94_data,%eax
		mov    %si,_0cecf6_data
		mov    %dh,_0ceec4_data
		mov    %di,_0cdaea_data
		mov    %dh,_0ceebc_data
		call   _0769d0_func
		call   _06d20c_func
		call   _01cb6c_func
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06d328_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0ceb9c_data,%eax
		sar    $0x000010,%eax
		mov    _0cdabc_data,%edx
		sub    $0x00000a,%eax
		cmp    %edx,%eax
		jg     _06d37a_jump
		xor    %eax,%eax
		mov    _0cdaca_data,%edx
		mov    _0cdafd_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		cmp    $0xffffffec,%eax
		jge    _06d365_jump
		mov    _0ced18_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06d37a_jump

	_06d365_jump:
		mov    _0ceb9e_data,%eax
		sar    $0x000010,%eax
		mov    _0cdabc_data,%ebx
		add    $0x00000a,%eax
		cmp    %ebx,%eax
		jge    _06d393_jump

	_06d37a_jump:
		mov    $0x000001,%eax
		xor    %cl,%cl
		xor    %edx,%edx
		mov    %cl,_0cdb0a_data
		call   _02d60c_func
		jmp    _06d555_jump

	_06d393_jump:
		cmpw   $0x0000b4,_0cdacc_data
		jle    _06d3b7_jump
		mov    $0x000001,%eax
		xor    %bh,%bh
		xor    %edx,%edx
		mov    %bh,_0cdb0a_data
		call   _02d60c_func
		jmp    _06d555_jump

	_06d3b7_jump:
		cmpb   $0x000002,_0cdb01_data
		jne    _06d3c9_jump
		cmpb   $0x000009,_0cdb00_data
		je     _06d3d0_jump

	_06d3c9_jump:
		mov    $0x000001,%eax
		jmp    _06d3d2_jump

	_06d3d0_jump:
		xor    %eax,%eax

	_06d3d2_jump:
		test   %eax,%eax
		je     _06d478_jump
		cmpb   $0x000003,_0cdb01_data
		jne    _06d3ec_jump
		cmpb   $0x000016,_0cdb00_data
		je     _06d3f3_jump

	_06d3ec_jump:
		mov    $0x000001,%eax
		jmp    _06d3f5_jump

	_06d3f3_jump:
		xor    %eax,%eax

	_06d3f5_jump:
		test   %eax,%eax
		je     _06d478_jump
		testb  $0x000004,_0cdb15_data
		je     _06d478_jump
		cmpb   $0x00000a,_0cdaf6_data
		jne    _06d430_jump
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06d430_jump
		cmpb   $0x000006,_0cdb01_data
		je     _06d430_jump
		call   _06d28c_func
		jmp    _06d478_jump

	_06d430_jump:
		xor    %eax,%eax
		mov    _0cdac0_data,%edx
		mov    _0cdafd_data,%al
		add    %eax,%edx
		mov    _0cda88_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		add    $0x000010,%eax
		cmp    %eax,%edx
		jle    _06d478_jump
		mov    $0x000009,%ebx
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		cmpw   $0x000000,_0cdad6_data
		jge    _06d478_jump
		xor    %ecx,%ecx
		mov    %cx,_0cdad6_data

	_06d478_jump:
		cmpb   $0x000002,_0cdb01_data
		jne    _06d48a_jump
		cmpb   $0x000009,_0cdb00_data
		je     _06d4bd_jump

	_06d48a_jump:
		cmpb   $0x000003,_0cdb01_data
		jne    _06d555_jump
		mov    _0cdb00_data,%dh
		cmp    $0x000016,%dh
		je     _06d4ab_jump
		cmp    $0x000020,%dh
		jne    _06d555_jump

	_06d4ab_jump:
		mov    $_0cda94_data,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _06d555_jump

	_06d4bd_jump:
		mov    _0ceec4_data,%bh
		dec    %bh
		mov    %bh,_0ceec4_data
		jne    _06d54c_jump
		cmpb   $0x000000,_0ceec1_data
		jne    _06d54c_jump
		mov    $0x000002,%al
		mov    _0cdab8_data,%ecx
		mov    %al,_0cdb0a_data
		test   %ecx,%ecx
		je     _06d534_jump
		mov    $0x000040,%dl
		mov    _0cdb15_data,%ah
		xor    %esi,%esi
		and    $0x0000fb,%ah
		mov    %esi,_0cdab8_data
		mov    %ah,_0cdb15_data
		mov    $_0cda94_data,%eax
		mov    %dl,_0ceec4_data
		call   _06d224_func
		cmpw   $0x000000,_0ce39a_data
		jge    _06d534_jump
		mov    $0x000001,%dh
		mov    %bh,_0cdb0a_data
		xor    %eax,%eax
		mov    %dh,_0ceec1_data
		mov    %ax,_0ce39a_data

	_06d534_jump:
		mov    _0cdb0a_data,%al
		mov    $0x00005a,%edx
		mov    %al,_0ce3a3_data
		mov    %dx,_0cdaea_data
		jmp    _06d555_jump

	_06d54c_jump:
		movw   $0x00ffff,_0cdade_data

	_06d555_jump:
		cmpl   $0x000000,_0cdab8_data
		je     _06d581_jump
		testb  $0x000004,_0cdb15_data
		je     _06d581_jump
		mov    _0ceca4_data,%bx
		cmp    $0x000003,%bx
		je     _06d581_jump
		cmp    $0x000004,%bx
		je     _06d581_jump
		mov    $0x000001,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_06d581_jump:
		xor    %al,%al
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06d588_func:
		push   %edx
		push   %esi
		call   _077fb8_func
		mov    _0cdb0a_data,%dl
		mov    _0cdae8_data,%eax
		dec    %dl
		sar    $0x000010,%eax
		mov    %dl,_0cdb0a_data
		cmp    $0xffffffff,%eax
		jne    _06d5fd_jump
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    _0cdaa0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdb00_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		je     _06d5f4_jump
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		call   _024a00_func
		and    $0x0000ff,%eax
		testb  $0x000010,_092224_data(%eax)
		je     _06d5f4_jump
		movw   $0x00003c,_0cdaea_data
		jmp    _06d5fd_jump

	_06d5f4_jump:
		movw   $0x000078,_0cdaea_data

	_06d5fd_jump:
		cmpb   $0x0000ff,_0cdb0a_data
		jne    _06d62c_jump
		cmpw   $0x000002,_0ceca4_data
		sete   %al
		xor    %ah,%ah
		add    $0x000003,%eax
		xor    %esi,%esi
		mov    %ax,_0ceca4_data
		call   _01cb6c_func
		mov    %si,_0cece8_data

	_06d62c_jump:
		pop    %esi
		pop    %edx
		ret    



_06d630_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %ebp
		mov    _0cecd4_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ecx
		shl    $0x000005,%ecx
		add    %eax,%ecx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%ecx
		add    %eax,%ecx
		cmpl   $0x000000,0x000024(%ecx)
		je     _06d70f_jump
		mov    0x000028(%ecx),%eax
		mov    _0cdabc_data,%ebx
		sub    $0x000052,%eax
		cmp    %ebx,%eax
		jge    _06d6f4_jump
		mov    0x000028(%ecx),%eax
		add    $0x000096,%eax
		cmp    %ebx,%eax
		jle    _06d6f4_jump
		mov    0x00002c(%ecx),%eax
		mov    _0cdac0_data,%edi
		add    $0x000060,%eax
		cmp    %edi,%eax
		jle    _06d6f4_jump
		mov    %eax,_0cdac0_data
		cmpb   $0x000002,_0cdb01_data
		je     _06d6ea_jump
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		mov    0x000040(%ecx),%eax
		mov    $0xffffffff,%ebx
		sar    $0x000010,%eax
		xor    %edx,%edx
		call   _053bb0_func
		mov    %ax,_0cdad6_data
		mov    %dx,_0cece8_data
		xor    %dl,%dl
		mov    %bx,_0cecfc_data
		mov    %dl,_0cdb05_data
		mov    %dl,_0cdb06_data
		mov    %dl,_0ceec3_data
		jmp    _06d6f4_jump

	_06d6ea_jump:
		mov    0x000042(%ecx),%ax
		mov    %ax,_0cdad6_data

	_06d6f4_jump:
		mov    _0cece8_data,%eax
		sar    $0x000010,%eax
		mov    0x00002c(%ecx),%ebp
		add    $0x0000a8,%eax
		cmp    %ebp,%eax
		jge    _06d70f_jump
		andb   $0x0000fb,0x000081(%ecx)

	_06d70f_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06d718_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		xor    %edx,%edx
		mov    _0cdad4_data,%bx
		mov    %edx,0x000004(%esp)
		test   %bx,%bx
		je     _06da0e_jump
		jle    _06d742_jump
		mov    _0cec9e_data,%eax
		sar    $0x000010,%eax
		jmp    _06d744_jump

	_06d742_jump:
		xor    %eax,%eax

	_06d744_jump:
		mov    _0cec9a_data,%edx
		sar    $0x000010,%edx
		add    %edx,%eax
		mov    %ax,0x000028(%esp)
		mov    _0cecb8_data,%eax
		sar    $0x000010,%eax
		mov    _0ce3a2_data,%edx
		sar    $0x000002,%eax
		sar    $0x000010,%edx
		mov    %eax,0x000020(%esp)
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    _0ce46c_data,%ax
		xor    %edi,%edi
		test   %ax,%ax
		jle    _06da0e_jump

	_06d78f_jump:
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000004,_092266_data(,%eax,4)
		je     _06d9e2_jump
		lea    0x000018(%esp),%eax
		lea    0x000008(%esp),%ecx
		lea    0x00001c(%esp),%ebx
		push   %eax
		lea    0x000014(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    0x00000e(%esp),%edx
		mov    %eax,%ebx
		sar    $0x000010,%edx
		sar    $0x000003,%ebx
		add    %ebx,%edx
		mov    %dx,0x000010(%esp)
		mov    %eax,%edx
		sar    $0x000002,%edx
		sub    %edx,%eax
		mov    %ax,0x000008(%esp)
		testb  $0x000020,0x000081(%esi)
		je     _06d82e_jump
		lea    0x000014(%esp),%eax
		lea    0x00000c(%esp),%ecx
		mov    %esp,%ebx
		push   %eax
		lea    0x000028(%esp),%eax
		xor    %edx,%edx
		push   %eax
		mov    0x000075(%esi),%dl
		mov    %esi,%eax
		call   _01d710_func
		mov    _0cdade_data,%ax
		cmp    0x000034(%esi),%ax
		sete   %al
		xor    %ebx,%ebx
		mov    0x00000a(%esp),%edx
		mov    %al,%bl
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000074(%esi),%al
		add    %edx,%eax
		add    %ebx,%eax
		mov    %ax,0x00001c(%esp)
		jmp    _06d83e_jump

	_06d82e_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%dx
		mov    0x000074(%esi),%al
		add    %eax,%edx
		mov    %dx,0x00001c(%esp)

	_06d83e_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%cx
		mov    0x000069(%esi),%al
		mov    0x00001c(%esp),%edx
		add    %ecx,%eax
		sub    %edx,%eax
		mov    %eax,0x000018(%esp)
		xor    %eax,%eax
		mov    0x000060(%esi),%ax
		testb  $0x000010,_092267_data(,%eax,4)
		je     _06d885_jump
		mov    0x000010(%esp),%ecx
		mov    %edx,%ebx
		mov    0x000008(%esp),%esi
		add    $0x000002,%ebx
		add    $0x000006,%ecx
		sub    $0x00000c,%esi
		mov    %bx,0x00001c(%esp)
		mov    %cx,0x000010(%esp)
		mov    %si,0x000008(%esp)

	_06d885_jump:
		mov    0x000010(%esp),%esi
		mov    0x000008(%esp),%eax
		mov    _0cdad4_data,%dx
		add    %eax,%esi
		test   %dx,%dx
		jle    _06d8cd_jump
		mov    _0cdad2_data,%eax
		mov    0x00000e(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		lea    (%edx,%eax,1),%ecx
		mov    %edx,%ebx
		sub    %eax,%ebx
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _06d8c7_jump
		cmp    %ecx,%eax
		jg     _06d8c7_jump
		mov    $0x000001,%eax
		jmp    _06d8c9_jump

	_06d8c7_jump:
		xor    %eax,%eax

	_06d8c9_jump:
		test   %eax,%eax
		jne    _06d8ff_jump

	_06d8cd_jump:
		mov    _0cdad2_data,%eax
		movswl %si,%edx
		sar    $0x000010,%eax
		mov    %edx,%ecx
		sub    %eax,%ecx
		lea    (%edx,%eax,1),%ebx
		mov    0x000026(%esp),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _06d8f5_jump
		cmp    %ecx,%eax
		jg     _06d8f5_jump
		mov    $0x000001,%eax
		jmp    _06d8f7_jump

	_06d8f5_jump:
		xor    %eax,%eax

	_06d8f7_jump:
		test   %eax,%eax
		je     _06d9e2_jump

	_06d8ff_jump:
		mov    0x00001c(%esp),%eax
		mov    0x000018(%esp),%ebx
		mov    _0cec9e_data,%si
		add    %ebx,%eax
		mov    0x00001a(%esp),%ebx
		movswl %ax,%edx
		sar    $0x000010,%ebx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _06d92e_jump
		cmp    %ecx,%eax
		jg     _06d92e_jump
		mov    $0x000001,%eax
		jmp    _06d930_jump

	_06d92e_jump:
		xor    %eax,%eax

	_06d930_jump:
		test   %eax,%eax
		jne    _06d9d8_jump
		mov    0x000020(%esp),%ecx
		mov    0x00001a(%esp),%ebx
		add    %ecx,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _06d959_jump
		cmp    %ecx,%eax
		jg     _06d959_jump
		mov    $0x000001,%eax
		jmp    _06d95b_jump

	_06d959_jump:
		xor    %eax,%eax

	_06d95b_jump:
		test   %eax,%eax
		jne    _06d9d8_jump
		mov    0x000020(%esp),%eax
		mov    0x00001a(%esp),%ebx
		mov    %edx,%ecx
		add    %eax,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		cmp    %ebx,%eax
		jl     _06d984_jump
		cmp    %ecx,%eax
		jg     _06d984_jump
		mov    $0x000001,%eax
		jmp    _06d986_jump

	_06d984_jump:
		xor    %eax,%eax

	_06d986_jump:
		test   %eax,%eax
		jne    _06d9d8_jump
		mov    0x000020(%esp),%ebx
		mov    %edx,%ecx
		add    %ebx,%esi
		mov    0x00001a(%esp),%ebx
		movswl %si,%eax
		sar    $0x000010,%ebx
		cmp    %ebx,%eax
		jl     _06d9ab_jump
		cmp    %ecx,%eax
		jg     _06d9ab_jump
		mov    $0x000001,%eax
		jmp    _06d9ad_jump

	_06d9ab_jump:
		xor    %eax,%eax

	_06d9ad_jump:
		test   %eax,%eax
		jne    _06d9d8_jump
		mov    0x000020(%esp),%ecx
		mov    0x00001a(%esp),%ebx
		add    %ecx,%esi
		sar    $0x000010,%ebx
		movswl %si,%eax
		mov    %edx,%ecx
		cmp    %ebx,%eax
		jl     _06d9d2_jump
		cmp    %ecx,%eax
		jg     _06d9d2_jump
		mov    $0x000001,%eax
		jmp    _06d9d4_jump

	_06d9d2_jump:
		xor    %eax,%eax

	_06d9d4_jump:
		test   %eax,%eax
		je     _06d9e2_jump

	_06d9d8_jump:
		movl   $0x000001,0x000004(%esp)
		jmp    _06da0e_jump

	_06d9e2_jump:
		inc    %edi
		movswl %di,%eax
		mov    _0ce3a2_data(,%eax,2),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%eax
		mov    _0cc1f0_data,%esi
		mov    _0ce46c_data,%dx
		add    %eax,%esi
		cmp    %dx,%di
		jl     _06d78f_jump

	_06da0e_jump:
		mov    0x000004(%esp),%eax
		add    $0x00002c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06da1c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ceed8_data,%bl
		xor    %edx,%edx
		mov    %bl,%dl
		lea    0x000000(,%edx,8),%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $_0ce46e_data,%eax
		mov    _0cdabc_data,%dx
		mov    %dx,(%eax)
		mov    _0cdac0_data,%dx
		mov    %dx,0x000002(%eax)
		mov    _0cdb01_data,%dl
		mov    %dl,0x000008(%eax)
		mov    _0cdb00_data,%dl
		mov    %dl,0x000009(%eax)
		mov    _0cdafe_data,%dl
		mov    %dl,0x00000a(%eax)
		mov    _0cdaff_data,%dl
		mov    %dl,0x00000b(%eax)
		mov    _0cdb15_data,%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    %dl,0x00000c(%eax)
		mov    _0cdaee_data,%dl
		mov    %dl,0x000011(%eax)
		mov    _0cdbc2_data,%dl
		mov    %dl,0x000010(%eax)
		test   %dl,%dl
		je     _06dac8_jump
		mov    _0cdb20_data,%edx
		mov    0x000028(%edx),%cx
		mov    %cx,0x000004(%eax)
		mov    0x00002c(%edx),%cx
		mov    %cx,0x000006(%eax)
		mov    0x00006a(%edx),%cl
		mov    %cl,0x00000d(%eax)
		mov    0x00006b(%edx),%cl
		mov    %cl,0x00000e(%eax)
		mov    0x000081(%edx),%dl
		shl    $0x000004,%dl
		shr    $0x000007,%dl
		mov    %dl,0x00000f(%eax)

	_06dac8_jump:
		inc    %bl
		cmp    $0x000064,%bl
		jbe    _06dad9_jump
		mov    $0x000001,%ah
		xor    %bl,%bl
		mov    %ah,_0ceed2_data

	_06dad9_jump:
		mov    %bl,_0ceed8_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06dae4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06db1f_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		mov    0x000060(%eax),%dx
		cmp    $0x0000a0,%dx
		je     _06dc06_jump
		cmp    $0x00009f,%dx
		je     _06dc06_jump

	_06db1f_jump:
		cmpb   $0x000000,_0cdb01_data
		jne    _06dc06_jump
		mov    _0cdb00_data,%dl
		cmp    $0x00000d,%dl
		je     _06dc06_jump
		cmp    $0x00000b,%dl
		je     _06dc06_jump
		cmp    $0x00000c,%dl
		je     _06dc06_jump
		cmp    $0x000012,%dl
		je     _06dc06_jump
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06db64_jump
		neg    %eax

	_06db64_jump:
		cmp    $0x000003,%eax
		jle    _06dbb5_jump
		mov    _0cdb00_data,%cl
		cmp    $0x000028,%cl
		setne  %al
		and    $0x0000ff,%eax
		je     _06dbb5_jump
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    _0cdaa0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    %cl,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		jne    _06dc06_jump
		cmp    $0x000008,%cl
		je     _06dc06_jump
		cmp    $0x000034,%cl
		je     _06dc06_jump
		cmp    $0x000035,%cl
		je     _06dc06_jump
		mov    $0x000029,%ebx
		jmp    _06dbfa_jump

	_06dbb5_jump:
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _06dbc3_jump
		neg    %eax

	_06dbc3_jump:
		cmp    $0x000002,%eax
		jg     _06dc06_jump
		mov    _0cdb00_data,%ch
		cmp    $0x000028,%ch
		jne    _06dc06_jump
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		lea    0x000000(,%eax,4),%edx
		mov    _0cdaa0_data,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %ch,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _06dc06_jump
		mov    $0x00002a,%ebx

	_06dbfa_jump:
		mov    $_0cda94_data,%eax
		xor    %edx,%edx
		call   _01d374_func

	_06dc06_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06dc0c_func:
		push   %edx
		cmpb   $0x000000,_0cdb01_data
		jne    _06dc63_jump
		cmpb   $0x000028,_0cdb00_data
		jne    _06dc63_jump
		testb  $0x000008,_0cdb15_data
		je     _06dc2f_jump
		mov    $0x000001,%eax
		jmp    _06dc34_jump

	_06dc2f_jump:
		mov    $0xffffffff,%eax

	_06dc34_jump:
		mov    %eax,%edx
		mov    _0cdad2_data,%eax
		sar    $0x000010,%eax
		movswl %dx,%edx
		cmp    $0x000000,%eax
		je     _06dc4f_jump
		mov    $0x000001,%eax
		jg     _06dc4f_jump
		neg    %eax

	_06dc4f_jump:
		cmp    %edx,%eax
		jne    _06dc5c_jump
		movb   $0x00004f,_0cdafe_data
		pop    %edx
		ret    

	_06dc5c_jump:
		movb   $0x000050,_0cdafe_data

	_06dc63_jump:
		pop    %edx
		ret    



_06dc68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0xffffffff,%edx
		mov    $_0cda94_data,%eax
		xor    %ebx,%ebx
		mov    %dx,_0cdaea_data
		mov    %bx,_0cecf8_data
		mov    %bx,_0cecf6_data
		call   _01db8c_func
		mov    $_0cda94_data,%eax
		call   _01e2ec_func
		call   _06cbc4_func
		call   _06a468_func
		call   _057a68_func
		mov    _0cdad6_data,%si
		test   %si,%si
		jle    _06dcbe_jump
		call   _056c18_func
		jmp    _06dcc5_jump

	_06dcbe_jump:
		jge    _06dcc5_jump
		call   _056b38_func

	_06dcc5_jump:
		mov    _0cdad4_data,%ax
		test   %ax,%ax
		jge    _06dcd7_jump
		call   _0571ec_func
		jmp    _06dcde_jump

	_06dcd7_jump:
		jle    _06dcde_jump
		call   _057168_func

	_06dcde_jump:
		xor    %eax,%eax
		call   _064654_func
		cmpb   $0x000001,_0cee99_data
		jne    _06dd02_jump
		mov    _0cec6e_data,%ax
		xor    %dl,%dl
		mov    %ax,_0cec70_data
		mov    %dl,_0cee99_data

	_06dd02_jump:
		mov    $_0cda94_data,%eax
		call   _01cbd0_func
		test   %al,%al
		jne    _06dd2f_jump
		cmpb   $0x000002,_0cdb01_data
		jne    _06dd22_jump
		cmpb   $0x000008,_0cdb00_data
		je     _06dd29_jump

	_06dd22_jump:
		mov    $0x000001,%eax
		jmp    _06dd2b_jump

	_06dd29_jump:
		xor    %eax,%eax

	_06dd2b_jump:
		test   %eax,%eax
		je     _06dd8c_jump

	_06dd2f_jump:
		mov    $_0cda94_data,%eax
		mov    $0x000080,%cl
		call   _06d224_func
		mov    _0cdb15_data,%bh
		mov    %cl,_0ceec4_data
		and    $0x0000fb,%bh
		mov    $0x000001,%ch
		mov    %bh,_0cdb15_data
		mov    _0ce39a_data,%bx
		mov    %ch,_0ceebd_data
		test   %bx,%bx
		jl     _06dd74_jump
		mov    $0x000002,%dl
		mov    %dl,_0cdb0a_data
		mov    %dl,_0ce3a3_data
		jmp    _06dd8c_jump

	_06dd74_jump:
		xor    %al,%al
		xor    %ecx,%ecx
		mov    %al,_0cdb0a_data
		mov    $0x000001,%ah
		mov    %cx,_0ce39a_data
		mov    %ah,_0ceec1_data

	_06dd8c_jump:
		mov    $_0cda94_data,%eax
		call   _0544fc_func
		call   _06da1c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06dda0_func:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    $_0cda94_data,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _06ddc8_jump
		xor    %edx,%edx
		mov    %dx,_0cdad4_data

	_06ddc8_jump:
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    _0cdaa0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    _0cdb00_data,%dl
		testb  $0x000040,0x000007(%eax,%edx,8)
		je     _06ddef_jump
		xor    %al,%al
		jmp    _06ddf1_jump

	_06ddef_jump:
		mov    $0x000002,%al

	_06ddf1_jump:
		cmpw   $0x000000,_0cdad6_data
		jle    _06de53_jump
		mov    _0cdad4_data,%eax
		mov    _0cdac0_data,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		xor    %eax,%eax
		mov    _0cdafd_data,%al
		add    %edx,%eax
		sar    $0x000004,%eax
		mov    %edx,_0cdac0_data
		movswl %ax,%edx
		xor    %eax,%eax
		mov    _0cdabc_data,%ecx
		mov    _0cdafc_data,%al
		add    %ecx,%eax
		sar    $0x000004,%eax
		cwtl   
		call   _01e0e4_func
		mov    _0cdad4_data,%edx
		mov    _0cdac0_data,%esi
		sar    $0x000010,%edx
		add    %edx,%esi
		xor    %ah,%ah
		mov    %esi,_0cdac0_data
		jmp    _06de63_jump

	_06de53_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    $_0cda94_data,%eax
		call   _024a00_func
		xor    %ah,%ah

	_06de63_jump:
		cwtl   
		testb  $0x000002,_092224_data(%eax)
		je     _06ded1_jump
		mov    _0cdad4_data,%eax
		mov    _0cdac0_data,%edi
		sar    $0x000010,%eax
		sub    %eax,%edi
		xor    %eax,%eax
		mov    _0cdafa_data,%al
		mov    _092224_data(%eax),%cl
		mov    %edi,_0cdac0_data
		test   $0x000002,%cl
		jne    _06deb3_jump
		cmpw   $0x000000,_0cdad6_data
		jge    _06deb3_jump
		xor    %esi,%esi
		lea    0x000004(%edi),%ebp
		mov    %si,_0cdad6_data
		mov    %ebp,_0cdac0_data
		jmp    _06debd_jump

	_06deb3_jump:
		mov    $_0cda94_data,%eax
		call   _0255d0_func

	_06debd_jump:
		xor    %edi,%edi
		mov    $0xffffffff,%eax
		mov    %di,_0cdad4_data
		mov    %ax,_0cdade_data

	_06ded1_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		ret    



_06ded8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000010,_092265_data(,%eax,4)
		je     _06df16_jump
		mov    0x00003e(%edx),%eax
		sar    $0x000010,%eax
		call   _053bb0_func
		mov    %eax,%ebx
		jmp    _06df1a_jump

	_06df16_jump:
		mov    0x000040(%edx),%bx

	_06df1a_jump:
		xor    %eax,%eax
		mov    0x000060(%edx),%ax
		testb  $0x000020,_092265_data(,%eax,4)
		je     _06df37_jump
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		call   _053bb0_func
		jmp    _06df3b_jump

	_06df37_jump:
		mov    0x000042(%edx),%ax

	_06df3b_jump:
		mov    _0cdad4_data,%cx
		add    %ebx,%ecx
		mov    %ecx,%esi
		mov    0x00004e(%edx),%bx
		mov    _0cdad6_data,%di
		add    %ebx,%esi
		add    0x00004c(%edx),%di
		mov    %cx,_0cdad4_data
		mov    %edi,%ebx
		mov    %di,_0cdad6_data
		add    %eax,%ebx
		mov    %si,_0cdad4_data
		mov    %bx,_0cdad6_data
		call   _06dda0_func
		cmpl   $0x000000,0x000024(%edx)
		jne    _06df8b_jump
		movw   $0x00ffff,_0cdade_data

	_06df8b_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06df94_func:
		push   %ecx
		push   %edx
		cmpb   $0x000001,_0cee99_data
		jne    _06e03e_jump
		cmpw   $0x000000,_0ceca2_data
		jne    _06dfe6_jump
		cmpw   $0x000000,_0cdad6_data
		jne    _06dfe6_jump
		call   _040784_func
		test   %ax,%ax
		je     _06dfd1_jump
		testb  $0x000008,_0cdb15_data
		jne    _06dfd1_jump
		mov    $0x000001,%eax
		jmp    _06e015_jump

	_06dfd1_jump:
		call   _040714_func
		test   %ax,%ax
		je     _06e01a_jump
		testb  $0x000008,_0cdb15_data
		je     _06e01a_jump
		jmp    _06e013_jump

	_06dfe6_jump:
		cmpw   $0x000000,_0ceca2_data
		jle    _06e000_jump
		testb  $0x000008,_0cdb15_data
		jne    _06e000_jump
		mov    $0x000001,%eax
		jmp    _06e015_jump

	_06e000_jump:
		cmpw   $0x000000,_0ceca2_data
		jge    _06e01a_jump
		testb  $0x000008,_0cdb15_data
		je     _06e01a_jump

	_06e013_jump:
		xor    %eax,%eax

	_06e015_jump:
		call   _06b6c8_func

	_06e01a_jump:
		cmpb   $0x000000,_09267c_data
		jne    _06e02b_jump
		call   _06bcc0_func
		pop    %edx
		pop    %ecx
		ret    

	_06e02b_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cebba_data
		mov    %cx,_0cebda_data
		pop    %edx
		pop    %ecx
		ret    

	_06e03e_jump:
		testb  $0x000060,_0cec71_data
		jne    _06e0f2_jump
		call   _040784_func
		test   %ax,%ax
		jne    _06e05e_jump
		testb  $0x000018,_0cec71_data
		je     _06e068_jump

	_06e05e_jump:
		mov    $0x000001,%eax
		call   _06b6c8_func

	_06e068_jump:
		call   _040714_func
		test   %ax,%ax
		je     _06e082_jump
		testb  $0x000018,_0cec71_data
		jne    _06e082_jump
		xor    %eax,%eax
		call   _06b6c8_func

	_06e082_jump:
		call   _0407f4_func
		test   %ax,%ax
		je     _06e0a9_jump
		cmpb   $0x000000,_09267c_data
		jne    _06e0a9_jump
		testb  $0x000018,_0cec71_data
		jne    _06e0a9_jump
		call   _06b1b0_func
		incb   _09267c_data

	_06e0a9_jump:
		call   _040864_func
		test   %ax,%ax
		je     _06e0d0_jump
		cmpb   $0x000000,_09267c_data
		jne    _06e0d0_jump
		testb  $0x000018,_0cec71_data
		jne    _06e0d0_jump
		call   _06b4f0_func
		incb   _09267c_data

	_06e0d0_jump:
		cmpb   $0x000000,_09267c_data
		jne    _06e02b_jump
		testb  $0x000018,_0cec71_data
		jne    _06e02b_jump
		call   _06bcc0_func
		pop    %edx
		pop    %ecx
		ret    

	_06e0f2_jump:
		call   _040784_func
		test   %ax,%ax
		je     _06e103_jump
		xor    %eax,%eax
		call   _06b6c8_func

	_06e103_jump:
		call   _040714_func
		test   %ax,%ax
		je     _06e117_jump
		mov    $0x000001,%eax
		call   _06b6c8_func

	_06e117_jump:
		call   _0407f4_func
		test   %ax,%ax
		je     _06e135_jump
		cmpb   $0x000000,_09267c_data
		jne    _06e135_jump
		call   _06b1b0_func
		incb   _09267c_data

	_06e135_jump:
		call   _040864_func
		test   %ax,%ax
		je     _06e153_jump
		cmpb   $0x000000,_09267c_data
		jne    _06e153_jump
		call   _06b4f0_func
		incb   _09267c_data

	_06e153_jump:
		cmpb   $0x000000,_09267c_data
		jne    _06e164_jump
		call   _06bcc0_func
		pop    %edx
		pop    %ecx
		ret    

	_06e164_jump:
		xor    %edx,%edx
		mov    %dx,_0cebba_data
		mov    %dx,_0cebda_data
		pop    %edx
		pop    %ecx
		ret    



_06e178_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		xor    %edx,%edx
		mov    %dx,_0cecf8_data
		mov    %dx,_0cecf6_data
		call   _06d328_func
		test   %al,%al
		je     _06e4b4_jump
		mov    _0cdb05_data,%ah
		inc    %ah
		mov    %ah,_0cdb05_data
		cmp    $0x000003,%ah
		jbe    _06e1b4_jump
		xor    %dh,%dh
		mov    %dh,_0cdb05_data

	_06e1b4_jump:
		xor    %eax,%eax
		mov    _0cdabc_data,%bx
		mov    _0cdafc_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdac0_data,%cx
		mov    _0cdafd_data,%al
		add    %ecx,%eax
		cwtl   
		mov    %eax,%edx
		mov    _0cda86_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		mov    _0cdac8_data,%edx
		mov    %ax,_0cdae8_data
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _0cdafc_data,%al
		add    %edx,%eax
		add    $0x00001e,%eax
		test   %eax,%eax
		jl     _06e23b_jump
		xor    %eax,%eax
		mov    _0cdaca_data,%edx
		mov    _0cdafd_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		add    $0x000014,%eax
		test   %eax,%eax
		jl     _06e23b_jump
		cmpw   $0x000122,_0cdaca_data
		jg     _06e23b_jump
		cmpw   $0x0000c8,_0cdacc_data
		jle    _06e248_jump

	_06e23b_jump:
		xor    %bl,%bl
		mov    %bl,_0cdb0a_data
		call   _06d588_func

	_06e248_jump:
		mov    _0cdae8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06e28d_jump
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    _0cdaa0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdb00_data,%al
		testb  $0x000008,0x000007(%edx,%eax,8)
		je     _06e28d_jump
		call   _02d344_func
		test   %ax,%ax
		je     _06e28d_jump
		mov    $0x000001,%eax
		xor    %edx,%edx
		call   _02d60c_func

	_06e28d_jump:
		xor    %cl,%cl
		mov    $_0cda94_data,%eax
		mov    %cl,_09267c_data
		call   _01db8c_func
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06e2b6_jump
		mov    $_0cda94_data,%eax
		call   _01e2ec_func

	_06e2b6_jump:
		mov    _0cdb01_data,%ch
		cmp    $0x000003,%ch
		je     _06e437_jump
		cmp    $0x000006,%ch
		jne    _06e2d3_jump
		cmpb   $0x00000e,_0cdb00_data
		je     _06e2da_jump

	_06e2d3_jump:
		mov    $0x000001,%eax
		jmp    _06e2dc_jump

	_06e2da_jump:
		xor    %eax,%eax

	_06e2dc_jump:
		test   %eax,%eax
		je     _06e437_jump
		call   *_0c4c6c_data
		test   %ax,%ax
		je     _06e313_jump
		mov    _0cdb00_data,%dl
		cmp    $0x000004,%dl
		je     _06e313_jump
		cmp    $0x000002,%dl
		je     _06e313_jump
		cmp    $0x000008,%dl
		je     _06e313_jump
		cmp    $0x000005,%dl
		je     _06e313_jump
		cmp    $0x000003,%dl
		je     _06e313_jump
		call   _06c348_func

	_06e313_jump:
		call   *_0c4c74_data
		test   %ax,%ax
		je     _06e323_jump
		call   _06c230_func

	_06e323_jump:
		call   *_0c4c70_data
		test   %ax,%ax
		cmpb   $0x000000,_0cdbc4_data
		je     _06e353_jump
		cmpb   $0x00000c,_0cdb00_data
		jne    _06e343_jump
		call   _064630_func

	_06e343_jump:
		call   *_0c4c6c_data
		test   %ax,%ax
		jne    _06e353_jump
		call   _0641cc_func

	_06e353_jump:
		call   _040784_func
		test   %ax,%ax
		je     _06e367_jump
		mov    $0x000001,%eax
		call   _06b6c8_func

	_06e367_jump:
		call   _040714_func
		test   %ax,%ax
		je     _06e378_jump
		xor    %eax,%eax
		call   _06b6c8_func

	_06e378_jump:
		call   _0407f4_func
		test   %ax,%ax
		je     _06e38d_jump
		call   _06b1b0_func
		incb   _09267c_data

	_06e38d_jump:
		call   _040864_func
		test   %ax,%ax
		je     _06e3a2_jump
		call   _06b4f0_func
		incb   _09267c_data

	_06e3a2_jump:
		cmpb   $0x000000,_09267c_data
		jne    _06e3b0_jump
		call   _06bcc0_func

	_06e3b0_jump:
		mov    _0cdac8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffec,%eax
		jge    _06e3d0_jump
		cmpw   $0x000000,_0cdad4_data
		jge    _06e3d0_jump
		xor    %edx,%edx
		mov    %dx,_0cdad4_data

	_06e3d0_jump:
		cmpw   $0x0000d2,_0cdaca_data
		jle    _06e3ee_jump
		cmpw   $0x000000,_0cdad4_data
		jle    _06e3ee_jump
		xor    %esi,%esi
		mov    %si,_0cdad4_data

	_06e3ee_jump:
		cmpw   $0x000003,_0cdacc_data
		jge    _06e40b_jump
		cmpw   $0x000000,_0cdad6_data
		jge    _06e40b_jump
		xor    %edx,%edx
		mov    %dx,_0cdad6_data

	_06e40b_jump:
		xor    %edx,%edx
		mov    _0cdaca_data,%eax
		mov    _0cdafd_data,%dl
		sar    $0x000010,%eax
		add    %edx,%eax
		cmp    $0x0000be,%eax
		jle    _06e437_jump
		cmpw   $0x000000,_0cdad6_data
		jle    _06e437_jump
		xor    %ecx,%ecx
		mov    %cx,_0cdad6_data

	_06e437_jump:
		mov    _0cdad6_data,%si
		test   %si,%si
		jle    _06e44a_jump
		call   _056c18_func
		jmp    _06e451_jump

	_06e44a_jump:
		jge    _06e451_jump
		call   _056b38_func

	_06e451_jump:
		mov    _0cdad4_data,%ax
		test   %ax,%ax
		jge    _06e463_jump
		call   _0571ec_func
		jmp    _06e46a_jump

	_06e463_jump:
		jle    _06e46a_jump
		call   _057168_func

	_06e46a_jump:
		testb  $0x000004,_0cdb15_data
		je     _06e47d_jump
		mov    $_0cda94_data,%eax
		call   _0544fc_func

	_06e47d_jump:
		cmpw   $0x000000,_0cecda_data
		jne    _06e4b4_jump
		cmpw   $0x000000,_0cecc4_data
		jne    _06e4b4_jump
		push   $_0cecba_data
		mov    $_0ceca0_data,%ecx
		mov    $_0cec9e_data,%ebx
		mov    $_0cec9c_data,%edx
		mov    $_0cda94_data,%eax
		call   _01d858_func
		call   _02e518_func

	_06e4b4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06e4bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000010,%esp
		xor    %edx,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0cecf8_data
		mov    %dx,_0cecf6_data
		xor    %edx,%edx
		call   _06faec_func
		call   _06d328_func
		test   %al,%al
		je     _06ea8a_jump
		xor    %eax,%eax
		mov    _0cdabc_data,%bx
		mov    _0cdafc_data,%al
		add    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdac0_data,%cx
		mov    _0cdafd_data,%al
		add    %ecx,%eax
		cwtl   
		mov    %eax,%edx
		mov    _0cda86_data,%eax
		sar    $0x000004,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		movswl %bx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		mov    %ax,_0cdae8_data
		call   _02d4c8_func
		mov    _0ced18_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06e55c_jump
		xor    %eax,%eax
		mov    _0cdaca_data,%edx
		mov    _0cdafd_data,%al
		sar    $0x000010,%edx
		add    %edx,%eax
		test   %eax,%eax
		jge    _06e55c_jump
		xor    %esi,%esi
		mov    %si,_0cdad6_data

	_06e55c_jump:
		mov    _0cdae8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06e5a1_jump
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    _0cdaa0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdb00_data,%al
		testb  $0x000008,0x000007(%edx,%eax,8)
		je     _06e5a1_jump
		call   _02d344_func
		test   %ax,%ax
		je     _06e5a1_jump
		mov    $0x000001,%eax
		xor    %edx,%edx
		call   _02d60c_func

	_06e5a1_jump:
		testb  $0x000080,_0cec71_data
		je     _06e5c6_jump
		mov    _0cdae8_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06e5c6_jump
		cmpw   $0x000000,_0cdaee_data
		jne    _06e5c6_jump
		call   _059120_func

	_06e5c6_jump:
		xor    %cl,%cl
		mov    $_0cda94_data,%eax
		mov    %cl,_09267c_data
		call   _01db8c_func
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		jne    _06e5f1_jump
		mov    $_0cda94_data,%eax
		call   _01e2ec_func
		jmp    _06e5ff_jump

	_06e5f1_jump:
		xor    %eax,%eax
		mov    %ax,_0cdad6_data
		mov    %ax,_0cdad4_data

	_06e5ff_jump:
		mov    _0ceca4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffff8300,%eax
		je     _06e6e3_jump
		xor    %eax,%eax
		mov    _0cdb01_data,%al
		mov    _0cdaa0_data,%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    _0cdb00_data,%al
		testb  $0x000040,0x000007(%edx,%eax,8)
		jne    _06e6e3_jump
		cmpb   $0x000000,_0cdb01_data
		jne    _06e672_jump
		mov    _0cdb00_data,%ah
		cmp    $0x000004,%ah
		je     _06e66c_jump
		cmp    $0x000005,%ah
		je     _06e66c_jump
		cmp    $0x000006,%ah
		je     _06e66c_jump
		cmp    $0x000007,%ah
		je     _06e66c_jump
		cmp    $0x000009,%ah
		je     _06e66c_jump
		cmp    $0x00000a,%ah
		je     _06e66c_jump
		mov    $0x000001,%eax
		jmp    _06e66e_jump

	_06e66c_jump:
		xor    %eax,%eax

	_06e66e_jump:
		test   %eax,%eax
		jne    _06e6be_jump

	_06e672_jump:
		mov    _0cdb01_data,%ch
		cmp    $0x000001,%ch
		jne    _06e68d_jump
		cmp    _0cdb00_data,%ch
		setne  %al
		and    $0x0000ff,%eax
		jne    _06e6be_jump

	_06e68d_jump:
		mov    _0cdb01_data,%dl
		cmp    $0x000003,%dl
		jne    _06e6e3_jump
		mov    _0cdb00_data,%dh
		cmp    $0x000001,%dh
		je     _06e6b8_jump
		cmp    %dl,%dh
		je     _06e6b8_jump
		cmp    $0x000002,%dh
		je     _06e6b8_jump
		cmp    $0x000004,%dh
		je     _06e6b8_jump
		mov    $0x000001,%eax
		jmp    _06e6ba_jump

	_06e6b8_jump:
		xor    %eax,%eax

	_06e6ba_jump:
		test   %eax,%eax
		je     _06e6e3_jump

	_06e6be_jump:
		cmpw   $0x000000,_0ceca6_data
		je     _06e6cf_jump
		mov    $0x000015,%ebx
		jmp    _06e6d4_jump

	_06e6cf_jump:
		mov    $0x000014,%ebx

	_06e6d4_jump:
		mov    $0x000003,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func

	_06e6e3_jump:
		cmpb   $0x000002,_0cdb01_data
		jne    _06e6f5_jump
		cmpb   $0x000008,_0cdb00_data
		je     _06e707_jump

	_06e6f5_jump:
		cmpb   $0x000002,_0cdb01_data
		jne    _06e711_jump
		cmpb   $0x00001f,_0cdb00_data
		jne    _06e711_jump

	_06e707_jump:
		call   _06cbc4_func
		jmp    _06e85a_jump

	_06e711_jump:
		cmpb   $0x000003,_0cdb01_data
		jne    _06e7a3_jump
		mov    _0cdb00_data,%dl
		cmp    $0x000010,%dl
		jne    _06e751_jump
		call   _076e50_func
		mov    _0cecc4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06e760_jump
		mov    %eax,%edx
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		movw   $0x000001,0x000056(%edx,%eax,4)
		jmp    _06e760_jump

	_06e751_jump:
		cmp    $0x000015,%dl
		je     _06e75b_jump
		cmp    $0x000014,%dl
		jne    _06e760_jump

	_06e75b_jump:
		call   _06cadc_func

	_06e760_jump:
		mov    _0cdb00_data,%bh
		cmp    $0x000016,%bh
		setne  %al
		and    $0x0000ff,%eax
		je     _06e85a_jump
		cmp    $0x000017,%bh
		setne  %al
		and    $0x0000ff,%eax
		je     _06e85a_jump
		cmp    $0x000020,%bh
		setne  %al
		and    $0x0000ff,%eax
		je     _06e85a_jump
		call   _06a468_func
		jmp    _06e85a_jump

	_06e7a3_jump:
		call   *_0c4c68_data
		test   %ax,%ax
		je     _06e7b3_jump
		call   _06c388_func

	_06e7b3_jump:
		call   *_0c4c6c_data
		test   %ax,%ax
		je     _06e7c3_jump
		call   _06c348_func

	_06e7c3_jump:
		call   *_0c4c74_data
		test   %ax,%ax
		je     _06e7d3_jump
		call   _06c230_func

	_06e7d3_jump:
		call   *_0c4c70_data
		test   %ax,%ax
		cmpb   $0x000000,_0ca315_data
		je     _06e7fe_jump
		call   _040b3c_func
		test   %ax,%ax
		je     _06e7fe_jump
		call   _040b04_func
		test   %ax,%ax
		je     _06e7fe_jump
		call   _077c40_func

	_06e7fe_jump:
		cmpb   $0x000000,_0cdbc4_data
		je     _06e825_jump
		cmpb   $0x00000c,_0cdb00_data
		jne    _06e815_jump
		call   _064630_func

	_06e815_jump:
		call   *_0c4c6c_data
		test   %ax,%ax
		jne    _06e825_jump
		call   _0641cc_func

	_06e825_jump:
		mov    _0cdb01_data,%ch
		cmp    $0x000007,%ch
		jne    _06e837_jump
		call   _06c680_func
		jmp    _06e855_jump

	_06e837_jump:
		cmp    $0x000002,%ch
		jne    _06e843_jump
		call   _06cbc4_func
		jmp    _06e855_jump

	_06e843_jump:
		call   *_0c4c68_data
		test   %ax,%ax
		jne    _06e855_jump
		movb   $0x000001,_0ceec3_data

	_06e855_jump:
		call   _06df94_func

	_06e85a_jump:
		mov    _0cec71_data,%al
		test   $0x000060,%al
		je     _06e8eb_jump
		mov    %esp,%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		mov    $0x000005,%edx
		mov    $_0cda94_data,%eax
		call   _01d710_func
		mov    0x000002(%esp),%eax
		mov    0x000006(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		lea    (%edx,%eax,1),%ebx
		mov    _0cdb18_data,%eax
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		sub    %edx,%ebx
		mov    _0cdb1c_data,%edx
		mov    %ebx,0x000028(%eax)
		mov    %ebx,0x000028(%edx)
		xor    %ecx,%ecx
		mov    0x00000a(%esp),%ebx
		mov    0x000074(%eax),%cl
		sar    $0x000010,%ebx
		sub    %ecx,%ebx
		mov    %ebx,0x00002c(%eax)
		mov    %ebx,0x00002c(%edx)
		cmpl   $0x000000,0x000024(%edx)
		jne    _06e8d2_jump
		mov    %edx,%eax
		call   _01f304_func

	_06e8d2_jump:
		mov    _0cdb18_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _06e9a0_jump
		call   _01f304_func
		jmp    _06e9a0_jump

	_06e8eb_jump:
		test   $0x000018,%al
		je     _06e9a0_jump
		and    $0x000018,%al
		cmp    $0x000008,%al
		jne    _06e936_jump
		mov    _0cec71_data,%ah
		and    $0x0000e6,%ah
		mov    $0x000003,%ebx
		mov    %ah,%dl
		mov    %ah,_0cec71_data
		or     $0x000011,%dl
		mov    $_0cda94_data,%eax
		mov    %dl,_0cec71_data
		call   _0772d8_func
		mov    $0x000001,%edx
		mov    $_0cda94_data,%eax
		call   _01d374_func
		jmp    _06e9a0_jump

	_06e936_jump:
		cmpb   $0x000001,_0cdb01_data
		jne    _06e94f_jump
		mov    _0cdb00_data,%dh
		cmp    $0x000003,%dh
		je     _06e97d_jump
		cmp    $0x000007,%dh
		je     _06e97d_jump

	_06e94f_jump:
		cmpb   $0x000002,_0cdb01_data
		je     _06e97d_jump
		mov    $0x000003,%ebx
		mov    _0cec71_data,%cl
		mov    $0x000001,%edx
		or     $0x000001,%cl
		mov    $_0cda94_data,%eax
		mov    %cl,_0cec71_data
		call   _01d374_func
		jmp    _06e9a0_jump

	_06e97d_jump:
		mov    _0cec71_data,%al
		and    $0x000018,%al
		cmp    $0x000018,%al
		jne    _06e9a0_jump
		cmpb   $0x000002,_0cdb01_data
		setne  %al
		and    $0x0000ff,%eax
		je     _06e9a0_jump
		andb   $0x0000e7,_0cec71_data

	_06e9a0_jump:
		mov    _0cdadc_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06e9b2_jump
		call   _06ded8_func

	_06e9b2_jump:
		call   _06d718_func
		test   %ax,%ax
		je     _06e9e1_jump
		cmpb   $0x000007,_0cdb01_data
		jne    _06e9ca_jump
		call   _06c950_func

	_06e9ca_jump:
		xor    %ecx,%ecx
		mov    %cx,_0cdad4_data
		mov    %cx,_0ceca2_data
		mov    %cx,_0cdadc_data

	_06e9e1_jump:
		mov    _0cecd4_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06e9f3_jump
		call   _06d630_func

	_06e9f3_jump:
		call   _06dae4_func
		call   _057a68_func
		mov    _0cdad6_data,%ax
		test   %ax,%ax
		jle    _06ea0f_jump
		call   _056c18_func
		jmp    _06ea16_jump

	_06ea0f_jump:
		jge    _06ea16_jump
		call   _056b38_func

	_06ea16_jump:
		mov    _0cdad4_data,%bx
		test   %bx,%bx
		jge    _06ea29_jump
		call   _0571ec_func
		jmp    _06ea30_jump

	_06ea29_jump:
		jle    _06ea30_jump
		call   _057168_func

	_06ea30_jump:
		testb  $0x000004,_0cdb15_data
		je     _06ea59_jump
		cmpb   $0x000007,_0cdb01_data
		setne  %al
		and    $0x0000ff,%eax
		je     _06ea59_jump
		mov    $_0cda94_data,%eax
		call   _0544fc_func
		call   _06dc0c_func

	_06ea59_jump:
		push   $_0cecba_data
		mov    $_0ceca0_data,%ecx
		mov    $_0cec9e_data,%ebx
		mov    $_0cec9c_data,%edx
		mov    $_0cda94_data,%eax
		call   _01d858_func
		call   _02e518_func
		cmpb   $0x000000,_0ceeb8_data
		je     _06ea8a_jump
		call   _05fbb4_func

	_06ea8a_jump:
		call   _06da1c_func
		add    $0x000010,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06eaa0_func:
		push   %edx
		mov    $0x01f400,%edx
		mov    $_0cccf0_data,%eax
		call   _07b3e0_func
		pop    %edx
		ret    



_06eab4_func:
		mov    $_0cccf0_data,%eax
		jmp    _07b6ec_func



_06eac0_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,0x000004(%esp)
		mov    %dx,0x000008(%esp)
		mov    %bx,(%esp)
		xor    %eax,%eax
		mov    _0cee8f_data,%al
		mov    $_0c6488_data,%edx
		call   _03c7cc_func
		call   _03a2a0_func
		mov    $0x000002,%eax
		mov    $0x00fa00,%ecx
		call   _03b340_func
		call   _016de7_func
		mov    _0ccc34_data,%esi
		mov    _0cc534_data,%edi
		xor    %ebx,%ebx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		mov    _0ccba8_data,%edi
		mov    _0cc534_data,%esi
		mov    $_0c6d88_data,%ecx
		call   _014a16_func
		mov    $_0c6488_data,%esi

	_06eb36_jump:
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06eb6d_jump
		call   _016df7_func
		call   _016de7_func
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _03b3c0_func
		inc    %ebx
		mov    0x000004(%esp),%edx
		cmp    %dx,%bx
		jne    _06eb36_jump
		mov    0x000008(%esp),%edi
		dec    %edi
		xor    %edx,%ebx
		mov    %di,0x000008(%esp)
		jmp    _06eb36_jump

	_06eb6d_jump:
		call   _040b64_func
		xor    %ebx,%ebx
		mov    $_0c6488_data,%esi
		mov    $0x000039,%edi
		xor    %ecx,%ecx

	_06eb80_jump:
		mov    %edi,%eax
		call   _0406e0_func
		test   %al,%al
		jne    _06ebda_jump
		call   _0408d4_func
		test   %ax,%ax
		jne    _06ebda_jump
		call   _040960_func
		test   %ax,%ax
		jne    _06ebda_jump
		mov    -0x000002(%esp),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06ebda_jump
		call   _016df7_func
		call   _016de7_func
		mov    $_0c6d88_data,%edx
		mov    %esi,%eax
		call   _03b3c0_func
		call   _040b64_func
		inc    %ebx
		cmp    0x000004(%esp),%bx
		jne    _06eb80_jump
		mov    (%esp),%edx
		dec    %edx
		mov    %ecx,%ebx
		mov    %dx,(%esp)
		jmp    _06eb80_jump

	_06ebda_jump:
		mov    $_0c6488_data,%edx
		mov    $0x000002,%eax
		call   _03b4b0_func
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_06ebf0_func:
		push   %edx
	_06ebf3_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		mov    $0x000005,%edx
		mov    $_0cccf0_data,%eax
		call   _046014_func
		pop    %edx
		ret    



_06ec04_func:
		push   %ebx
		push   %edx
		call   _06eaa0_func
		call   _01cb30_func
		mov    $0x000008,%ebx
		xor    %ah,%ah
		mov    $0xffffffff,%edx
		mov    %ah,_0ceec7_data
		call   _06ebf0_func
		call   _01cb40_func
		call   _03b880_func
		mov    $0x00003c,%eax
		call   _06eac0_func
		call   _06eab4_func
		call   _01cb80_func
		pop    %edx
		pop    %ebx
		ret    

.data

_06ec50_data:
		.ascii   "(.37<@CFHJMPSVY[]_`behkmoqsuxz|}"
		.ascii  "\x7f\x81\x83\x85\x87\x89\x8a\x8c"
		.ascii  "\x8e\x90\x91\x93\x95\x96\x98\x99"
		.ascii  "\x9b\x9c\x9e\xa0\xa1\xa3\xa4\xa6"
		.ascii  "\xa7\xa8\xaa\xab\xad\xae\xb0\xb1"
		.ascii  "\xb2\xb4\xb5\xb6\xb8\xb9\xba\xbb"
		.ascii  "\xbd\xbe\xbf\xc1\xc2\xc3\xc4\xc6"
		.ascii  "\xc7\xc8\xc9\xca\xcb\xcd"

.text

	_06ecd0_jump:
		ret    



_06ecd4_func:
		mov    %ax,_097b58_data
		mov    %eax,%eax
		ret    



_06ece0_func:
		push   %ebx

	_06ece1_jump:
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
	_06ece8_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		cmpb   $0x000000,_0cee62_data
	_06eced_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		je     _06ed08_jump
		xor    %esi,%esi
		xor    %edi,%edi

	_06ecf2_jump:
		push   %edi
		movswl %si,%eax
		mov    %edi,%ecx
		mov    %edi,%ebx
		mov    %edi,%edx
		inc    %esi
		call   _03d914_func
		cmp    $0x000020,%si
		jle    _06ecf2_jump

	_06ed08_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06ed78_func:
		push   %edx
		xor    %edx,%edx
		mov    0x000068(%eax),%dl
		mov    0x000036(%eax),%ax
		add    %edx,%eax
		movswl %ax,%edx
		cmp    $0xffffffa0,%edx
		jge    _06ed90_jump
		xor    %eax,%eax
		jmp    _06edae_jump

	_06ed90_jump:
		cmp    $0x0001a0,%ax
		jle    _06eda8_jump
		mov    $0x00007f,%eax
		cmp    $0x00007f,%ax
		jle    _06edb9_jump
		mov    $0x00007f,%eax
		pop    %edx
		ret    

	_06eda8_jump:
		lea    0x000060(%edx),%eax
		sar    $0x000002,%eax

	_06edae_jump:
		cmp    $0x00007f,%ax
		jle    _06edb9_jump
		mov    $0x00007f,%eax

	_06edb9_jump:
		pop    %edx
		ret    



_06edbc_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000010,%esp
		lea    0x000008(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x000010(%esp),%ebx
		lea    0x000008(%esp),%edx
		call   _01d294_func
		xor    %edx,%edx
		mov    _0cdabc_data,%ebx
		mov    _0cdafc_data,%dl
		add    %ebx,%edx
		mov    -0x000002(%esp),%ebx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    %ebx
		add    %ebx,%eax
		sub    %edx,%eax
		cltd   
		xor    %edx,%eax
		sub    %edx,%eax
		mov    0x000006(%esp),%ecx
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdac0_data,%edx
		mov    _0cdafd_data,%al
		sar    $0x000010,%ecx
		add    %eax,%edx
		mov    0x00000a(%esp),%eax
		sar    %ecx
		sar    $0x000010,%eax
		add    %eax,%ecx
		lea    -0x000028(%edx),%eax
		sub    %eax,%ecx
		mov    %ecx,%eax
		cltd   
		xor    %edx,%eax
		sub    %edx,%eax
		movswl %bx,%edx
		cwtl   
		add    %edx,%eax
		mov    $0x00007f,%edx
		sar    $0x000002,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		test   %dx,%dx
		jge    _06ee47_jump
		xor    %edx,%eax

	_06ee47_jump:
		add    $0x000010,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06ee50_func:
		push   %ebx
		push   %edx
		movswl %ax,%edx
		mov    %edx,%eax
		shl    $0x000007,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x000014,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _06ecd4_func
		pop    %edx
		pop    %ebx



_06ee70_func:
		ret    



_06ee74_func:
		test   %ax,%ax
		ret    



_06ee78_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0cee62_data
		je     _06ef0d_jump
		mov    $0xfffffffe,%ebx
		xor    %eax,%eax

	_06ee8e_jump:
		add    $0x000002,%eax
		xor    %edx,%edx
		mov    %bx,_0e3dae_data(%eax)
		mov    %dx,_0e3dd6_data(%eax)
		cmp    $0x000028,%eax
		jne    _06ee8e_jump
		mov    $0x000002,%eax
		mov    %dx,_0e4076_data
		mov    %dx,_0e407a_data
		mov    %dx,_0e4070_data
		mov    $0xfffffffe,%edx
		mov    %ax,_0e4074_data
		xor    %eax,%eax

	_06eecd_jump:
		add    $0x00000c,%eax
		mov    %dx,_0e3ee4_data(%eax)
		cmp    $0x000180,%eax
		jne    _06eecd_jump
		xor    %edx,%edx
		mov    _0c4c82_data,%dx
		mov    %edx,%eax
		shl    $0x000007,%eax
		sub    %edx,%eax
		mov    %eax,%edx
		mov    $0x000014,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		call   _06ecd4_func
		mov    _0c4c82_data,%eax
		sar    $0x000010,%eax
		call   _06ee74_func

	_06ef0d_jump:
		pop    %edx
		pop    %ebx
		nop
		ret    



_06ef14_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		xor    %eax,%eax

	_06ef1a_jump:
		movswl %ax,%edx
		cmp    _0e3db0_data(,%edx,2),%bx
		je     _06ef2e_jump
		inc    %eax
		cmp    $0x000014,%ax
		jne    _06ef1a_jump

	_06ef2e_jump:
		cmp    $0x000014,%ax
		jne    _06ef52_jump

	_06ef34_jump:
		dec    %eax
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _06ef48_jump
		cmpw   $0x000000,_0e3dd8_data(,%edx,2)
		jne    _06ef34_jump

	_06ef48_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _06ef52_jump
		xor    %eax,%eax

	_06ef52_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _06ef62_jump
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

	_06ef62_jump:
		mov    _0e3dd8_data(,%edx,2),%ax
		pop    %edx
		pop    %ebx
		ret    



_06ef70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e4076_data,%cx
		mov    %eax,%ebx
		mov    $0xffffffff,%eax
		test   %cx,%cx
		je     _06efb7_jump
		mov    $_0e3e00_data,%edx
		mov    _0e3e00_data,%si
		xor    %eax,%eax
		cmp    %si,%bx
		je     _06efad_jump

	_06ef9b_jump:
		cmp    %cx,%ax
		jge    _06efad_jump
		inc    %eax
		mov    0x000018(%edx),%di
		add    $0x000018,%edx
		cmp    %di,%bx
		jne    _06ef9b_jump

	_06efad_jump:
		cmp    %cx,%ax
		jne    _06efb7_jump
		mov    $0xffffffff,%eax

	_06efb7_jump:
		mov    %cx,_0e4076_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06efc4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    $_0e3ef0_data,%edx
		mov    _0e3ef0_data,%cx
		xor    %eax,%eax
		cmp    %cx,%bx
		je     _06eff0_jump

	_06efdd_jump:
		cmp    $0x000020,%ax
		jge    _06eff0_jump
		inc    %eax
		mov    0x00000c(%edx),%si
		add    $0x00000c,%edx
		cmp    %si,%bx
		jne    _06efdd_jump

	_06eff0_jump:
		cmp    $0x000020,%ax
		jne    _06effb_jump
		mov    $0xffffffff,%eax

	_06effb_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f03c_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $_0e3ef6_data,%ebx
		mov    $_0e3ef0_data,%edx
		xor    %eax,%eax
		cmp    $0x000030,%cx
		jne    _06f06e_jump

	_06f055_jump:
		cmp    (%ebx),%cx
		jne    _06f05f_jump
		cmp    (%edx),%si
		je     _06f087_jump

	_06f05f_jump:
		cmp    $0x000020,%ax
		jge    _06f087_jump
		inc    %eax
		add    $0x00000c,%ebx
		add    $0x00000c,%edx
		jmp    _06f055_jump

	_06f06e_jump:
		cmp    (%ebx),%cx
		je     _06f087_jump
		cmp    (%edx),%si
		je     _06f087_jump
		cmp    $0x000020,%ax
		jge    _06f087_jump
		inc    %eax
		add    $0x00000c,%ebx
		add    $0x00000c,%edx
		jmp    _06f06e_jump

	_06f087_jump:
		cmp    $0x000020,%ax
		jne    _06f092_jump
		mov    $0xffffffff,%eax

	_06f092_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06f098_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0e4076_data,%si
		cwtl   
		call   _06ef70_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _06f17b_jump
		mov    _0e4076_data,%si
		mov    %eax,%ebx
		cmp    %si,%ax
		jge    _06f167_jump

	_06f0c7_jump:
		movswl %bx,%eax
		lea    0x000001(%eax),%edx
		imul   $0x000018,%edx,%edx
		imul   $0x000018,%eax,%eax
		mov    _0e3e00_data(%edx),%cx
		mov    %cx,_0e3e00_data(%eax)
		mov    _0e3e02_data(%edx),%cx
		mov    %cx,_0e3e02_data(%eax)
		mov    _0e3e04_data(%edx),%cx
		mov    %cx,_0e3e04_data(%eax)
		mov    _0e3e06_data(%edx),%cx
		mov    %cx,_0e3e06_data(%eax)
		mov    _0e3e08_data(%edx),%cx
		mov    %cx,_0e3e08_data(%eax)
		mov    _0e3e0a_data(%edx),%cx
		mov    %cx,_0e3e0a_data(%eax)
		mov    _0e3e0c_data(%edx),%cx
		mov    %cx,_0e3e0c_data(%eax)
		mov    _0e3e0e_data(%edx),%cx
		mov    %cx,_0e3e0e_data(%eax)
		mov    _0e3e10_data(%edx),%ecx
		mov    %ecx,_0e3e10_data(%eax)
		mov    _0e3e14_data(%edx),%dx
		inc    %ebx
		mov    %dx,_0e3e14_data(%eax)
		cmp    %si,%bx
		jl     _06f0c7_jump

	_06f167_jump:
		mov    %si,_0e4076_data
		test   %si,%si
		jle    _06f17b_jump
		dec    %esi
		mov    %si,_0e4076_data

	_06f17b_jump:
		mov    _0e4076_data,%si
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f188_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0e4076_data,%si
		mov    _0ccd14_data,%ebp
		xor    %ebx,%ebx
		test   %si,%si
		jle    _06f27f_jump

	_06f1a6_jump:
		movswl %bx,%eax
		imul   $0x000018,%eax,%eax
		mov    _0e3e10_data(%eax),%edx
		cmp    %ebp,%edx
		jae    _06f275_jump
		test   %edx,%edx
		je     _06f275_jump
		mov    %ebx,%ecx
		cmp    %si,%bx
		jge    _06f26d_jump

	_06f1cd_jump:
		movswl %cx,%eax
		lea    0x000001(%eax),%edx
		imul   $0x000018,%edx,%edx
		imul   $0x000018,%eax,%eax
		mov    _0e3e00_data(%edx),%di
		mov    %di,_0e3e00_data(%eax)
		mov    _0e3e02_data(%edx),%di
		mov    %di,_0e3e02_data(%eax)
		mov    _0e3e04_data(%edx),%di
		mov    %di,_0e3e04_data(%eax)
		mov    _0e3e06_data(%edx),%di
		mov    %di,_0e3e06_data(%eax)
		mov    _0e3e08_data(%edx),%di
		mov    %di,_0e3e08_data(%eax)
		mov    _0e3e0a_data(%edx),%di
		mov    %di,_0e3e0a_data(%eax)
		mov    _0e3e0c_data(%edx),%di
		mov    %di,_0e3e0c_data(%eax)
		mov    _0e3e0e_data(%edx),%di
		mov    %di,_0e3e0e_data(%eax)
		mov    _0e3e10_data(%edx),%edi
		mov    %edi,_0e3e10_data(%eax)
		mov    _0e3e14_data(%edx),%dx
		inc    %ecx
		mov    %dx,_0e3e14_data(%eax)
		cmp    %si,%cx
		jl     _06f1cd_jump

	_06f26d_jump:
		test   %si,%si
		jle    _06f276_jump
		dec    %esi
		jmp    _06f276_jump

	_06f275_jump:
		inc    %ebx

	_06f276_jump:
		cmp    %si,%bx
		jl     _06f1a6_jump

	_06f27f_jump:
		mov    %ebp,_0ccd14_data
		mov    %si,_0e4076_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f294_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    $_0e3ef0_data,%edx
		mov    _0e3ef0_data,%cx
		xor    %eax,%eax
		cmp    %cx,%bx
		je     _06f2c0_jump

	_06f2ad_jump:
		cmp    $0x000020,%ax
		jge    _06f2c0_jump
		inc    %eax
		mov    0x00000c(%edx),%si
		add    $0x00000c,%edx
		cmp    %si,%bx
		jne    _06f2ad_jump

	_06f2c0_jump:
		cmp    $0x000020,%ax
		je     _06f2cb_jump
		movw   $0x00fffe,(%edx)

	_06f2cb_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06f324_func:
		movswl %dx,%edx
		mov    _06ec50_data(%edx),%dl
		and    $0x0000ff,%edx
		cwtl   
		imul   %edx,%eax
		sar    $0x000008,%eax
		ret    



_06f33c_func:
		push   %ebx
		mov    $0x00007f,%ebx
		movswl %dx,%edx
		sub    %edx,%ebx
		mov    _06ec50_data(%ebx),%dl
		and    $0x0000ff,%edx
		cwtl   
		imul   %edx,%eax
		sar    $0x000008,%eax
		pop    %ebx
		ret    



_06f35c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00002c,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		cmpb   $0x000000,_0cee62_data
		je     _06fa27_jump
		cmpw   $0x000000,_0cdaee_data
		je     _06f388_jump
		cmp    _0ceccc_data,%si
		je     _06f391_jump

	_06f388_jump:
		cmp    _0cecdc_data,%si
		jne    _06f396_jump

	_06f391_jump:
		mov    $0xffffffff,%esi

	_06f396_jump:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		jne    _06f3ac_jump
		cmp    $0x00000f,%di
		je     _06f3ac_jump
		xor    %eax,%eax
		mov    %ax,_0e4070_data

	_06f3ac_jump:
		movswl %si,%ebx
		mov    %ebx,%eax
		call   _06ef14_func
		mov    %eax,0x00001c(%esp)
		cmp    %ax,%di
		je     _06f451_jump
		movswl %ax,%edx
		testb  $0x000008,_097138_data(%edx)
		je     _06f451_jump
		mov    %ebx,%eax
		call   _06f098_func
		mov    %ebx,%eax
		call   _06f03c_func
		test   %ax,%ax
		jl     _06f451_jump
		movswl %ax,%ebp
		lea    0x000000(,%ebp,4),%edx
		sub    %ebp,%edx
		xor    %ebx,%ebx
		shl    $0x000002,%edx
		xor    %ecx,%ecx
		mov    _0e3ef4_data(%edx),%eax
		mov    %edx,0x000008(%esp)
		sar    $0x000010,%eax
		xor    %edx,%edx
		mov    _097638_data(,%eax,4),%bl
		mov    _09763a_data(,%eax,4),%cl
		push   %ebx
		xor    %ebx,%ebx
		mov    _097a38_data(%eax),%dl
		mov    _097639_data(,%eax,4),%bl
		mov    %ebp,%eax
		call   _03d914_func
		mov    0x000008(%esp),%eax
		mov    $0xfffffffe,%edx
		mov    $0xffffffff,%ebx
		mov    %dx,_0e3ef0_data(%eax)
		xor    %ch,%ch
		mov    %bx,_0e3ef6_data(%eax)
		mov    %ch,_097b38_data(%ebp)

	_06f451_jump:
		cmpb   $0x000000,_0cee98_data
		jne    _06f9b4_jump
		test   %di,%di
		je     _06f9b4_jump
		mov    0x00001c(%esp),%ecx
		cmp    %cx,%di
		jne    _06f480_jump
		movswl %cx,%eax
		testb  $0x000004,_097138_data(%eax)
		je     _06f9b4_jump

	_06f480_jump:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _06f49e_jump
		cmp    _0cecdc_data,%si
		jne    _06f4b4_jump
		mov    _0cecda_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06f4b4_jump

	_06f49e_jump:
		mov    $_0cda94_data,%eax
		mov    $0x00007f,%cl
		call   _06ed78_func
		mov    %al,0x000028(%esp)
		mov    %cl,0x000024(%esp)
		jmp    _06f4f4_jump

	_06f4b4_jump:
		movswl %si,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		call   _06ed78_func
		mov    %al,0x000028(%esp)
		movswl %di,%eax
		testb  $0x000001,_097138_data(%eax)
		jne    _06f4e4_jump
		movb   $0x00007f,0x000024(%esp)
		jmp    _06f4f4_jump

	_06f4e4_jump:
		mov    _0cc1f0_data,%eax
		add    %edx,%eax
		call   _06edbc_func
		mov    %al,0x000024(%esp)

	_06f4f4_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    _097639_data,%bl
		mov    _09763a_data,%cl
		cmp    $0x000035,%di
		jb     _06f55b_jump
		jbe    _06f591_jump
		cmp    $0x000050,%di
		jb     _06f53c_jump
		jbe    _06f672_jump
		cmp    $0x000067,%di
		jb     _06f730_jump
		jbe    _06f729_jump
		cmp    $0x0000f5,%di
		je     _06f710_jump
		jmp    _06f730_jump

	_06f53c_jump:
		cmp    $0x000037,%di
		jb     _06f730_jump
		jbe    _06f729_jump
		cmp    $0x000039,%di
		je     _06f729_jump
		jmp    _06f730_jump

	_06f55b_jump:
		cmp    $0x00000f,%di
		jb     _06f582_jump
		jbe    _06f629_jump
		cmp    $0x000013,%di
		jb     _06f730_jump
		jbe    _06f6f7_jump
		cmp    $0x00002f,%di
		je     _06f5d1_jump
		jmp    _06f730_jump

	_06f582_jump:
		cmp    $0x00000e,%di
		je     _06f6b1_jump
		jmp    _06f730_jump

	_06f591_jump:
		movswl %si,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		cmpw   $0x0000ee,0x000060(%eax,%edx,4)
		je     _06f5c5_jump
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _09770d_data,%bl
		mov    _09770c_data,%al
		mov    _09770e_data,%cl
		jmp    _06f74e_jump

	_06f5c5_jump:
		xor    %eax,%eax
		mov    _097638_data,%al
		jmp    _06f74e_jump

	_06f5d1_jump:
		cmpw   $0x000005,_0cecd4_data
		je     _06f602_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0976f4_data,%al
		mov    _0976f5_data,%bl
		mov    %ax,0x000020(%esp)
		mov    $0x00007f,%ah
		mov    _0976f6_data,%cl
		mov    %ah,0x000024(%esp)
		jmp    _06f753_jump

	_06f602_jump:
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _0978e0_data,%al
		mov    _0978e1_data,%bl
		mov    %ax,0x000020(%esp)
		mov    $0x00007f,%al
		mov    _0978e2_data,%cl
		mov    %al,0x000024(%esp)
		jmp    _06f753_jump

	_06f629_jump:
		mov    _0e4070_data,%ax
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0e4070_data
		cmp    $0x000002,%ax
		jle    _06f663_jump
		xor    %ebx,%ebx
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    _097674_data,%al
		mov    _097675_data,%bl
		mov    %ax,0x000020(%esp)
		xor    %eax,%eax
		mov    _097676_data,%cl
		mov    %ax,_0e4070_data

	_06f663_jump:
		mov    $0xffffffff,%eax
		call   _06f098_func
		jmp    _06f753_jump

	_06f672_jump:
		mov    _0e4074_data,%ax
		mov    %eax,%edx
		inc    %edx
		mov    %dx,_0e4074_data
		cmp    $0x000001,%ax
		jle    _06f753_jump
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _097779_data,%bl
		mov    _09777a_data,%cl
		mov    _097778_data,%al
		mov    %dx,_0e4074_data
		jmp    _06f74e_jump

	_06f6b1_jump:
		movswl %si,%eax
		mov    %eax,%edx
		xor    %ebx,%ebx
		shl    $0x000005,%edx
		xor    %ecx,%ecx
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		mov    _097671_data,%bl
		mov    _097672_data,%cl
		mov    0x00006c(%eax,%edx,4),%al
		and    $0x0000ff,%eax
		mov    _097b4a_data(%eax),%al
		xor    %ah,%ah
		mov    %eax,0x000018(%esp)
		mov    0x000018(%esp),%edx
		mov    _097670_data,%al
		add    %eax,%edx
		mov    %dx,0x000020(%esp)
		jmp    _06f753_jump

	_06f6f7_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097685_data,%bl
		mov    _097684_data,%al
		mov    _097686_data,%cl
		jmp    _06f74e_jump

	_06f710_jump:
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097a0d_data,%bl
		mov    _097a0c_data,%al
		mov    _097a0e_data,%cl
		jmp    _06f74e_jump

	_06f729_jump:
		mov    $0xffffffff,%ebx
		jmp    _06f753_jump

	_06f730_jump:
		movswl %di,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		xor    %eax,%eax
		mov    _097639_data(,%edx,4),%bl
		mov    _097638_data(,%edx,4),%al
		mov    _09763a_data(,%edx,4),%cl

	_06f74e_jump:
		mov    %ax,0x000020(%esp)

	_06f753_jump:
		movswl %bx,%eax
		mov    %eax,0x00000c(%esp)
		cmp    $0xffffffff,%eax
		je     _06f97c_jump
		cmp    $0x0000ff,%bx
		je     _06f97c_jump
		movswl %si,%ebp
		mov    %ebp,%eax
		call   _06f098_func
		xor    %eax,%eax
		mov    0x000028(%esp),%al
		mov    %eax,0x000004(%esp)
		movswl %di,%eax
		mov    %eax,0x000014(%esp)
		shl    $0x000002,%eax
		mov    %eax,0x000010(%esp)
		mov    0x000010(%esp),%edx
		xor    %eax,%eax
		mov    _09763b_data(%edx),%al
		mov    %eax,0x000008(%esp)
		xor    %edx,%edx
		mov    _097b56_data,%eax
		mov    0x000024(%esp),%dl
		sar    $0x000010,%eax
		imul   %edx,%eax
		mov    %edx,(%esp)
		imul   0x000008(%esp),%eax
		sar    $0x00000e,%eax
		mov    0x000004(%esp),%edx
		cwtl   
		call   _06f33c_func
		mov    0x000010(%esp),%edx
		xor    %eax,%eax
		mov    _09763b_data(%edx),%al
		mov    %eax,0x000008(%esp)
		mov    _097b56_data,%eax
		mov    (%esp),%edx
		sar    $0x000010,%eax
		imul   %edx,%eax
		imul   0x000008(%esp),%eax
		sar    $0x00000e,%eax
		mov    0x000004(%esp),%edx
		cwtl   
		call   _06f324_func
		mov    0x000014(%esp),%eax
		cmpb   $0x000000,_097238_data(%eax)
		jne    _06f8b6_jump
		mov    0x000004(%esp),%eax
		mov    0x000010(%esp),%edx
		push   %eax
		xor    %eax,%eax
		mov    _09763b_data(%edx),%al
		mov    _097b56_data,%edx
		mov    0x000004(%esp),%ebx
		sar    $0x000010,%edx
		imul   %ebx,%edx
		imul   %edx,%eax
		movswl %cx,%ebx
		sar    $0x00000e,%eax
		mov    0x000018(%esp),%ecx
		cwtl   
		mov    0x000022(%esp),%edx
		push   %eax
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    _097a38_data(%ecx),%al
		mov    %edx,%ecx
		mov    0x000014(%esp),%edx
		call   _03d7c4_func
		movswl %ax,%ebx
		cmp    $0xffffffff,%ebx
		je     _06f97c_jump
		mov    %ebp,%eax
		call   _06f294_func
		lea    0x000000(,%ebx,4),%edx
		xor    %eax,%eax
		sub    %ebx,%edx
		mov    0x000024(%esp),%al
		mov    %ax,_0e3ef2_data(,%edx,4)
		xor    %eax,%eax
		mov    %si,_0e3ef0_data(,%edx,4)
		mov    0x000028(%esp),%al
		mov    %ax,_0e3ef4_data(,%edx,4)
		mov    0x000014(%esp),%eax
		mov    %di,_0e3ef6_data(,%edx,4)
		testb  $0x000010,_097138_data(%eax)
		je     _06f97c_jump
		movb   $0x000001,_097b38_data(%ebx)
		jmp    _06f97c_jump

	_06f8b6_jump:
		call   _06f188_func
		mov    %ebp,%eax
		call   _06f098_func
		mov    _0e4074_data,%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%edx
		sub    %eax,%edx
		mov    0x000020(%esp),%eax
		mov    %bx,_0e3e04_data(,%edx,8)
		mov    0x000010(%esp),%ebx
		mov    %ax,_0e3e08_data(,%edx,8)
		xor    %eax,%eax
		mov    _09763b_data(%ebx),%al
		mov    %ax,_0e3e0a_data(,%edx,8)
		xor    %eax,%eax
		mov    0x000024(%esp),%al
		mov    %ax,_0e3e0c_data(,%edx,8)
		xor    %eax,%eax
		mov    0x000028(%esp),%al
		mov    0x000014(%esp),%ebx
		mov    %ax,_0e3e0e_data(,%edx,8)
		xor    %eax,%eax
		mov    _097238_data(%ebx),%al
		mov    _0ccd14_data,%ebx
		mov    %si,_0e3e00_data(,%edx,8)
		add    %ebx,%eax
		mov    %eax,_0e3e10_data(,%edx,8)
		mov    0x000014(%esp),%eax
		mov    %di,_0e3e02_data(,%edx,8)
		mov    _097438_data(,%eax,2),%bx
		mov    %cx,_0e3e06_data(,%edx,8)
		test   %bx,%bx
		setne  %al
		xor    %ah,%ah
		mov    _0e4076_data,%cx
		mov    %ax,_0e3e14_data(,%edx,8)
		cmp    $0x000009,%cx
		jge    _06f97c_jump
		mov    %ecx,%eax
		inc    %eax
		mov    %ax,_0e4076_data

	_06f97c_jump:
		cmp    $0x0000cb,%di
		je     _06f99f_jump
		cmp    $0x0000ed,%di
		je     _06f99f_jump
		cmp    $0x0000d1,%di
		je     _06f99f_jump
		cmp    $0x0000e1,%di
		je     _06f99f_jump
		cmp    $0x0000ec,%di
		jne    _06f9b4_jump

	_06f99f_jump:
		mov    _0ceec4_data,%ch
		cmp    $0x000040,%ch
		je     _06f9af_jump
		cmp    $0x000080,%ch
		jne    _06f9b4_jump

	_06f9af_jump:
		call   _01cb68_func

	_06f9b4_jump:
		xor    %eax,%eax

	_06f9b6_jump:
		movswl %ax,%edx
		add    %edx,%edx
		cmp    _0e3db0_data(%edx),%si
		je     _06f9d9_jump
		mov    _0e3dae_data(%edx),%edx
		sar    $0x000010,%edx
		cmp    $0xfffffffe,%edx
		je     _06f9d9_jump
		inc    %eax
		cmp    $0x000014,%ax
		jne    _06f9b6_jump

	_06f9d9_jump:
		cmp    $0x000014,%ax
		jne    _06fa14_jump
		test   %di,%di
		je     _06fa27_jump
		mov    _0cc1f0_data,%ebx

	_06f9ea_jump:
		dec    %eax
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _06fa0a_jump
		mov    _0e3dae_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		cmpl   $0x000000,0x000024(%edx,%ebx,1)
		jne    _06f9ea_jump

	_06fa0a_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		jne    _06fa14_jump
		xor    %eax,%eax

	_06fa14_jump:
		movswl %ax,%edx
		mov    %si,_0e3db0_data(,%edx,2)
		mov    %di,_0e3dd8_data(,%edx,2)

	_06fa27_jump:
		add    $0x00002c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06fa30_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cee62_data
		je     _06fae4_jump
		movswl %ax,%esi
		lea    0x000000(,%esi,4),%eax
		xor    %edx,%edx
		mov    _097639_data(%eax),%dl
		cmp    $0xffffffff,%edx
		je     _06fae4_jump
		cmp    $0x0000ff,%dl
		je     _06fae4_jump
		mov    _097b56_data,%ecx
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    _09763b_data(%eax),%bl
		imul   %ecx,%ebx
		sar    $0x000007,%ebx
		push   $0x000040
		movswl %bx,%ebx
		xor    %ecx,%ecx
		push   %ebx
		xor    %ebx,%ebx
		mov    _097638_data(%eax),%cl
		mov    _09763a_data(%eax),%bl
		xor    %eax,%eax
		mov    _097a38_data(%esi),%al
		call   _03d7c4_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _06fae4_jump
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    $0xfffffffe,%ebx
		mov    $0x000040,%ecx
		mov    %bx,_0e3ef0_data(,%eax,4)
		mov    %cx,_0e3ef2_data(,%eax,4)
		mov    _097138_data(%esi),%bh
		mov    %cx,_0e3ef4_data(,%eax,4)
		test   $0x000010,%bh
		je     _06fae4_jump
		movb   $0x000001,_097b38_data(%edx)

	_06fae4_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_06faec_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		cmpb   $0x000000,_0cee62_data
		je     _06ff3a_jump
		cmpw   $0x000000,_0cdaee_data
		je     _06fb15_jump
		cmp    _0ceccc_data,%si
		je     _06fb1e_jump

	_06fb15_jump:
		cmp    _0cecdc_data,%si
		jne    _06fb23_jump

	_06fb1e_jump:
		mov    $0xffffffff,%esi

	_06fb23_jump:
		movswl %si,%edx
		mov    %edx,%eax
		call   _06ef70_func
		mov    %ax,0x000004(%esp)
		cwtl   
		cmp    $0xffffffff,%eax
		je     _06fe51_jump
		cmp    $0xffffffff,%edx
		je     _06fb57_jump
		cmp    _0cecdc_data,%si
		jne    _06fb5b_jump
		mov    _0cecda_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06fb5b_jump

	_06fb57_jump:
		mov    $0x00007f,%al
		jmp    _06fba3_jump

	_06fb5b_jump:
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0e3e00_data(,%eax,8),%eax
		sar    $0x000010,%eax
		mov    _097138_data(%eax),%dl
		test   $0x000001,%dl
		je     _06fb85_jump
		test   $0x000002,%dl
		jne    _06fb89_jump

	_06fb85_jump:
		mov    $0x00007f,%al
		jmp    _06fba3_jump

	_06fb89_jump:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		call   _06edbc_func

	_06fba3_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %edx,0x000008(%esp)
		mov    0x000002(%esp),%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%edi
		sub    %edx,%edi
		shl    $0x000003,%edi
		mov    0x000008(%esp),%edx
		mov    %dx,_0e3e0c_data(%edi)
		mov    _0ccd14_data,%edx
		mov    %edx,(%esp)
		mov    (%esp),%ebx
		cmp    _0e3e10_data(%edi),%ebx
		jne    _06fe51_jump
		mov    _0e3e0c_data(%edi),%edx
		sar    $0x000010,%edx
		mov    _0e3e08_data(%edi),%ebx
		push   %edx
		mov    _097b56_data,%edx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		and    $0x0000ff,%eax
		imul   %edx,%eax
		imul   %ebx,%eax
		mov    _0e3e06_data(%edi),%ecx
		sar    $0x000010,%ecx
		sar    $0x00000e,%eax
		mov    _0e3e02_data(%edi),%edx
		cwtl   
		sar    $0x000010,%edx
		push   %eax
		mov    _0e3e00_data(%edi),%eax
		mov    _0e3e04_data(%edi),%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		mov    _097a38_data(%eax),%al
		and    $0x0000ff,%eax
		call   _03d7c4_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _06fca5_jump
		movswl %si,%eax
		call   _06f294_func
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000008(%esp),%ebx
		mov    %si,_0e3ef0_data(,%eax,4)
		mov    %bx,_0e3ef2_data(,%eax,4)
		mov    _0e3e0e_data(%edi),%bx
		mov    %bx,_0e3ef4_data(,%eax,4)
		mov    _0e3e02_data(%edi),%bx
		mov    %bx,_0e3ef6_data(,%eax,4)
		mov    _0e3e00_data(%edi),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_097138_data(%eax)
		je     _06fca5_jump
		movb   $0x000001,_097b38_data(%edx)

	_06fca5_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,4),%ebx
		sub    %eax,%ebx
		shl    $0x000003,%ebx
		cmpw   $0x000000,_0e3e14_data(%ebx)
		je     _06fd84_jump
		mov    _0e3e00_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _097338_data(%eax),%al
		mov    (%esp),%ecx
		and    $0x0000ff,%eax
		add    %ecx,%eax
		mov    %eax,_0e3e10_data(%ebx)
		mov    _0e3e00_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _097438_data(,%eax,2),%ax
		mov    %ax,_0e3e02_data(%ebx)
		mov    _0e3e00_data(%ebx),%eax
		sar    $0x000010,%eax
		mov    _097639_data(,%eax,4),%al
		xor    %ah,%ah
		mov    %ax,_0e3e04_data(%ebx)
		mov    _0e4074_data,%edx
		mov    _0e3e00_data(%ebx),%eax
		xor    %ecx,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		mov    _09763a_data(,%eax,4),%cl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %cx,_0e3e06_data(,%eax,8)
		mov    _0e3e00_data(%ebx),%edx
		sar    $0x000010,%edx
		mov    _097638_data(,%edx,4),%dl
		xor    %dh,%dh
		mov    %dx,_0e3e08_data(,%eax,8)
		mov    _0e3e00_data(%ebx),%edx
		sar    $0x000010,%edx
		mov    _09763b_data(,%edx,4),%dl
		xor    %dh,%dh
		xor    %ecx,%ecx
		mov    %dx,_0e3e0a_data(,%eax,8)
		mov    %cx,_0e3e14_data(%ebx)
		jmp    _06fe51_jump

	_06fd84_jump:
		mov    0x000004(%esp),%ebx
		cmp    _0e4076_data,%bx
		jge    _06fe3c_jump
		mov    _0e4076_data,%di

	_06fd9c_jump:
		movswl %bx,%eax
		lea    0x000001(%eax),%edx
		imul   $0x000018,%edx,%edx
		imul   $0x000018,%eax,%eax
		mov    _0e3e00_data(%edx),%cx
		mov    %cx,_0e3e00_data(%eax)
		mov    _0e3e02_data(%edx),%cx
		mov    %cx,_0e3e02_data(%eax)
		mov    _0e3e04_data(%edx),%cx
		mov    %cx,_0e3e04_data(%eax)
		mov    _0e3e06_data(%edx),%cx
		mov    %cx,_0e3e06_data(%eax)
		mov    _0e3e08_data(%edx),%cx
		mov    %cx,_0e3e08_data(%eax)
		mov    _0e3e0a_data(%edx),%cx
		mov    %cx,_0e3e0a_data(%eax)
		mov    _0e3e0c_data(%edx),%cx
		mov    %cx,_0e3e0c_data(%eax)
		mov    _0e3e0e_data(%edx),%cx
		mov    %cx,_0e3e0e_data(%eax)
		mov    _0e3e10_data(%edx),%ecx
		mov    %ecx,_0e3e10_data(%eax)
		mov    _0e3e14_data(%edx),%dx
		inc    %ebx
		mov    %dx,_0e3e14_data(%eax)
		cmp    %di,%bx
		jl     _06fd9c_jump

	_06fe3c_jump:
		mov    _0e4076_data,%ax
		test   %ax,%ax
		jle    _06fe51_jump
		mov    %eax,%edx
		dec    %edx
		mov    %dx,_0e4076_data

	_06fe51_jump:
		movswl %si,%edx
		mov    %edx,%eax
		call   _06efc4_func
		mov    %eax,%ebx
		cwtl   
		cmp    $0xffffffff,%eax
		je     _06ff3a_jump
		cmp    $0xffffffff,%edx
		je     _06fe82_jump
		cmp    _0cecdc_data,%si
		jne    _06fe86_jump
		mov    _0cecda_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _06fe86_jump

	_06fe82_jump:
		mov    $0x00007f,%dl
		jmp    _06fed9_jump

	_06fe86_jump:
		movswl %bx,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		cmpw   $0x0000cc,_0e3ef6_data(%eax)
		je     _06feb9_jump
		mov    _0e3ef4_data(%eax),%eax
		sar    $0x000010,%eax
		mov    _097138_data(%eax),%cl
		test   $0x000001,%cl
		je     _06feb9_jump
		test   $0x000002,%cl
		jne    _06febd_jump

	_06feb9_jump:
		mov    $0x00007f,%dl
		jmp    _06fed9_jump

	_06febd_jump:
		movswl %si,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		call   _06edbc_func
		mov    %al,%dl

	_06fed9_jump:
		movswl %bx,%ecx
		mov    %ecx,%ebx
		lea    0x000000(,%ecx,4),%eax
		sub    %ecx,%eax
		xor    %ecx,%ebx
		shl    $0x000002,%eax
		mov    %dl,%bl
		mov    _0e3ef4_data(%eax),%si
		mov    _097b38_data(%ecx),%dh
		mov    %bx,_0e3ef2_data(%eax)
		test   %dh,%dh
		je     _06ff3a_jump
		mov    _0e3ef4_data(%eax),%eax
		mov    _097b56_data,%edi
		sar    $0x000010,%eax
		movswl %si,%ebx
		movzbl _09763b_data(,%eax,4),%esi
		xor    %eax,%eax
		sar    $0x000010,%edi
		mov    %dl,%al
		imul   %edi,%eax
		imul   %esi,%eax
		sar    $0x00000e,%eax
		movswl %ax,%edx
		mov    %ecx,%eax
		call   _03d924_func

	_06ff3a_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_06ff44_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000000,_0cee62_data
		je     _070002_jump
		cmpw   $0x000000,_0cdaee_data
		je     _06ff6f_jump
		cmp    _0ceccc_data,%bx
		jne    _06ff6f_jump
		mov    $0xffffffff,%ebx

	_06ff6f_jump:
		movswl %bx,%edx
		mov    %edx,%eax
		call   _06efc4_func
		mov    %eax,%esi
		movswl %ax,%edi
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		shl    $0x000002,%eax
		cmp    $0xffffffff,%edi
		je     _06ffc3_jump
		cmp    $0xffffffff,%edx
		jne    _06ff99_jump
		mov    $_0cda94_data,%eax
		jmp    _06ffa1_jump

	_06ff99_jump:
		mov    _0cc1f0_data,%edx
		add    %edx,%eax

	_06ffa1_jump:
		call   _06ed78_func
		xor    %ebx,%ebx
		movswl %si,%edx
		mov    %al,%bl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    %bx,_0e3ef4_data(,%eax,4)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_06ffc3_jump:
		cmp    %edi,%edx
		jne    _06ffce_jump
		mov    $_0cda94_data,%eax
		jmp    _06ffd6_jump

	_06ffce_jump:
		mov    _0cc1f0_data,%edx
		add    %edx,%eax

	_06ffd6_jump:
		call   _06ed78_func
		mov    %al,%cl
		movswl %bx,%eax
		call   _06ef70_func
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _070002_jump
		lea    0x000000(,%edx,4),%eax
		xor    %ebx,%ebx
		sub    %edx,%eax
		mov    %cl,%bl
		mov    %bx,_0e3e0e_data(,%eax,8)

	_070002_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_070008_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		cmpb   $0x000000,_0cee62_data
		je     _0701a0_jump
		mov    $_0e3ef6_data,%ebp
		xor    %edi,%edi
		mov    $_0e3ef0_data,%esi
		mov    %edi,0x000004(%esp)

	_07002e_jump:
		mov    (%esi),%dx
		test   %dx,%dx
		jl     _07004b_jump
		movswl %dx,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc1f0_data,%eax
		cmpl   $0x000000,0x000024(%edx,%eax,1)
		je     _07006c_jump

	_07004b_jump:
		movswl (%esi),%eax
		cmp    $0xfffffffe,%eax
		jne    _07005c_jump
		movswl 0x000000(%ebp),%eax
		cmp    $0xffffffff,%eax
		jne    _07006c_jump

	_07005c_jump:
		mov    _0cc1f4_data,%bx
		cmp    (%esi),%bx
		jg     _0700fc_jump

	_07006c_jump:
		mov    0x000004(%esp),%eax
		mov    _0e3ef4_data(%eax),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_097138_data(%eax)
		je     _0700f1_jump
		movswl 0x000000(%ebp),%edx
		xor    %ecx,%ecx
		mov    _097638_data(,%edx,4),%cl
		push   %ecx
		xor    %ecx,%ecx
		mov    _097639_data(,%edx,4),%al
		mov    _09763a_data(,%edx,4),%cl
		and    $0x0000ff,%eax
		mov    _097a38_data(%edx),%dl
		mov    %eax,0x000004(%esp)
		mov    0x000004(%esp),%ebx
		and    $0x0000ff,%edx
		movswl %di,%eax
		call   _03d914_func
		xor    %dh,%dh
		xor    %eax,%eax
		mov    %dh,_097b38_data(%edi)
		xor    %edx,%edx

	_0700cd_jump:
		mov    _0e3db0_data(%eax),%bx
		cmp    (%esi),%bx
		je     _0700e2_jump
		add    $0x000002,%eax
		inc    %edx
		cmp    $0x000028,%eax
		jne    _0700cd_jump

	_0700e2_jump:
		cmp    $0x000014,%edx
		jge    _0700f1_jump
		movw   $0x00ffff,_0e3dd8_data(,%edx,2)

	_0700f1_jump:
		movw   $0x00fffe,(%esi)
		movw   $0x00ffff,0x000000(%ebp)

	_0700fc_jump:
		mov    (%esi),%dx
		test   %dx,%dx
		jl     _07012b_jump
		movswl %dx,%eax
		imul   $0x000084,%eax,%edx
		mov    _0cc1f0_data,%ecx
		cmpl   $0x000000,0x000024(%ecx,%edx,1)
		je     _07012b_jump
		xor    %edx,%edx
		call   _06faec_func
		movswl (%esi),%eax
		xor    %edx,%edx
		call   _06ff44_func

	_07012b_jump:
		mov    0x000004(%esp),%ecx
		inc    %edi
		add    $0x00000c,%ebp
		add    $0x00000c,%ecx
		add    $0x00000c,%esi
		mov    %ecx,0x000004(%esp)
		cmp    $0x000020,%edi
		jl     _07002e_jump
		xor    %edi,%edi
		xor    %esi,%esi
		xor    %ebp,%ebp
		jmp    _070194_jump

	_07014e_jump:
		mov    _0cc1f4_data,%bx
		cmp    _0e3e00_data(%esi),%bx
		jle    _070190_jump
		mov    _0e3dfe_data(%esi),%eax
		sar    $0x000010,%eax
		imul   $0x000084,%eax,%edx
		mov    _0cc1f0_data,%ecx
		cmp    0x000024(%ecx,%edx,1),%ebp
		je     _070190_jump
		mov    %ebp,%edx
		call   _06faec_func
		mov    _0e3dfe_data(%esi),%eax
		mov    %ebp,%edx
		sar    $0x000010,%eax
		call   _06ff44_func

	_070190_jump:
		add    $0x000018,%esi
		inc    %edi

	_070194_jump:
		mov    _0e4074_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edi
		jl     _07014e_jump

	_0701a0_jump:
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0701ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cee62_data
		je     _070202_jump
		xor    %ecx,%ecx
		xor    %esi,%esi

	_0701bd_jump:
		movswl %cx,%eax
		imul   $0x00000c,%eax,%eax
		mov    _0e3ef6_data(%eax),%dx
		cmp    $0x000006,%dx
		je     _0701ef_jump
		cmp    $0x0000f5,%dx
		je     _0701ef_jump
		cmp    $0x000002,%dx
		je     _0701ef_jump
		mov    _0e3ef4_data(%eax),%eax
		sar    $0x000010,%eax
		testb  $0x000010,_097138_data(%eax)
		je     _0701fb_jump

	_0701ef_jump:
		movswl %cx,%eax
		mov    %esi,%ebx
		mov    %esi,%edx
		call   _03d924_func

	_0701fb_jump:
		inc    %ecx
		cmp    $0x000020,%cx
		jl     _0701bd_jump

	_070202_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070208_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		cmpb   $0x000000,_0cee62_data
		je     _07022c_jump
		xor    %ecx,%ecx
		xor    %esi,%esi

	_070219_jump:
		movswl %cx,%eax
		mov    %esi,%ebx
		mov    %esi,%edx
		inc    %ecx
		call   _03d924_func
		cmp    $0x000020,%cx
		jl     _070219_jump

	_07022c_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070234_func:
		push   %edx
		mov    $0x000001,%edx
		call   _070208_func
		mov    %dx,_097b6a_data
		pop    %edx
		ret    



_070248_func:
		push   %edx
		xor    %edx,%edx
		mov    %dx,_097b6a_data
		pop    %edx
		ret    

_070254_switch:
		.long   _070296_case
		.long   _0702c8_case
		.long   _07029d_case
		.long   _0702a4_case
		.long   _0702ab_case
		.long   _0702c3_case


	_07026c_jump:
		push   %edx
		cmpb   $0x000000,_0cee62_data
		je     _0702d6_jump
		test   %eax,%eax
		jne    _0702c8_case
		mov    _0cec82_data,%dx
		dec    %edx
		cmp    $0x000005,%dx
		ja     _0702c8_case
		and    $0x00ffff,%edx
		jmp    *%cs:_070254_switch(,%edx,4)

	_070296_case:
		mov    $0x000001,%eax
		jmp    _0702c8_case

	_07029d_case:
		mov    $0x000002,%eax
		jmp    _0702c8_case

	_0702a4_case:
		mov    $0x000004,%eax
		jmp    _0702c8_case

	_0702ab_case:
		cmpw   $0x000003,_0cec74_data
		jne    _0702bc_jump
		mov    $0x000003,%eax
		jmp    _0702c8_case

	_0702bc_jump:
		mov    $0x000009,%eax
		jmp    _0702c8_case

	_0702c3_case:
		mov    $0x000007,%eax

	_0702c8_case:
		mov    _097b56_data,%edx
		sar    $0x000010,%edx
		call   _03d9cc_func

	_0702d6_jump:
		pop    %edx
		ret    



_0702d8_func:
		push   %ebx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cccfc_data,%edx
		test   %edx,%edx
		jne    _07033d_jump
		mov    $_0ccca4_data,%esi
		call   _012748_func
		mov    _0cecd2_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    (%eax,%eax,1),%edx
		mov    _0cecbe_data,%eax
		sar    $0x000010,%eax
		mov    _094c23_data(%edx,%eax,1),%al
		and    $0x0000ff,%eax
		call   _02a164_func
		xor    %bh,%bh
		mov    $0x000001,%eax
		mov    %bh,_097b6d_data
		mov    %eax,_0cccfc_data
		jmp    _07044f_jump

	_07033d_jump:
		cmp    $0xffffffff,%edx
		je     _07044f_jump
		mov    $_0cccb8_data,%esi
		call   _012748_func
		mov    _0cccb8_data,%edx
		sub    _0ccca4_data,%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		mov    $0x0000b6,%ebx
		add    %eax,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %eax,_0cccfc_data
		mov    _0cecd2_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,8),%edx
		mov    _0cecbe_data,%eax
		sar    $0x000010,%eax
		shl    $0x000002,%eax
		mov    _0cccfc_data,%esi
		add    %eax,%edx
		add    $0x000002,%esi
		mov    _094ca4_data(%edx),%edi
		mov    %esi,_0cccfc_data
		cmp    %edi,%esi
		jb     _07044f_jump
		mov    _097b6c_data,%al
		inc    %al
		mov    _097b6c_data,%ah
		test   %ah,%ah
		jne    _0703e0_jump
		mov    %al,_097b6c_data
		call   _02a118_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_0703e0_jump:
		cmp    $0x000004,%ah
		jae    _0703f0_jump
		mov    %al,_097b6c_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_0703f0_jump:
		mov    $_0ccca4_data,%esi
		call   _012748_func
		mov    _0cecd2_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		mov    _0cecbe_data,%edx
		sar    $0x000010,%edx
		mov    _094c23_data(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		mov    $0x000001,%ebp
		call   _02a0a8_func
		xor    %bl,%bl
		mov    _097b6d_data,%dh
		mov    %bl,_097b6c_data
		test   %dh,%dh
		sete   %al
		mov    %ebp,_0cccfc_data
		mov    %al,_097b6d_data

	_07044f_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_070458_func:
		xor    %ah,%ah
		mov    %ah,_0cee6d_data
		call   _029210_func
		test   %al,%al
		je     _070497_jump
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _029dcc_func
		test   %al,%al
		je     _070497_jump
		movb   $0x000001,_0cee6d_data
		call   _02a110_func
		call   _028e30_func
		and    $0x0000ff,%eax
		jmp    _029e1c_jump

	_070497_jump:
		mov    %al,_0cee97_data
		ret    



_0704a0_func:
		call   _02a110_func
		call   _028e30_func
		and    $0x0000ff,%eax
		call   _029df0_func
		jmp    _0291e8_jump



_0704c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0e4080_data,%ebp
		movw   $0x000000,0x000000(%ebp)
		test   %ax,%ax
		jl     _0704ec_jump
		movswl %ax,%ebx
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _0704e8_jump
		mov    %ebx,%eax

	_0704e8_jump:
		neg    %eax
		jmp    _0704fc_jump

	_0704ec_jump:
		movswl %ax,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _0704fc_jump
		mov    %ebx,%eax

	_0704fc_jump:
		mov    %ax,0x000002(%ebp)
		test   %ax,%ax
		jle    _070509_jump
		xor    %eax,%eax
		jmp    _07050e_jump

	_070509_jump:
		mov    $0x000003,%eax

	_07050e_jump:
		mov    %al,0x000018(%ebp)
		mov    0x00001c(%ebp),%ax
		mov    %eax,%ebx
		mov    %ax,0x000008(%esp)
		neg    %ebx
		movb   $0x000000,0x000019(%ebp)
		mov    %bx,0x000008(%esp)
		jmp    _07057e_jump

	_070529_jump:
		xor    %eax,%eax
		mov    0x00001c(%ebp),%ax
		call   _07b8ff_func
		mov    %eax,%esi
		mov    %edx,%edi
		mov    0x000006(%esp),%eax
		mov    %esi,%ebx
		sar    $0x000010,%eax
		mov    %edi,%ecx
		call   _07b8f2_func
		call   _07c468_func
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _0816ac_func
		call   _07baef_func
		call   _07c13c_func
		mov    0x000004(%esp),%edx
		add    (%esp),%edx
		mov    0x000008(%esp),%ecx
		lea    0x000000(,%edx,4),%esi
		inc    %ecx
		mov    0x000024(%ebp),%edx
		mov    %cx,0x000008(%esp)
		mov    %eax,(%edx,%esi,1)

	_07057e_jump:
		xor    %eax,%eax
		mov    0x00001c(%ebp),%ax
		mov    %eax,0x000004(%esp)
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    0x000004(%esp),%edx
		mov    %eax,(%esp)
		cmp    %edx,%eax
		jl     _070529_jump
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx

	_0705a3_jump:
		ret    

	_0705a4_case:
		mov    _0e4080_data,%eax
		test   %eax,%eax
		je     _0705a3_jump
		cmpl   $0x000000,0x000024(%eax)
		je     _0705bb_jump
		add    $0x000024,%eax
		call   _07b7dc_func

	_0705bb_jump:
		cmpl   $0x000000,_0e4080_data
		je     _0705a3_jump
		mov    $_0e4080_data,%eax
		jmp    _07b7dc_func



_0705d0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %dx,0x000004(%esp)
		mov    %ebx,%esi
		mov    %ecx,(%esp)
		xor    %ah,%ah
		mov    %ah,0x000008(%esp)
		test   %ebx,%ebx
		je     _0706ce_jump
		test   %ecx,%ecx
		je     _0706ce_jump
		mov    $0x000030,%eax
		call   _07b7c4_func
		mov    %eax,%ebp
		mov    %eax,_0e4080_data
		test   %eax,%eax
		je     _0706ce_jump
		xor    %eax,%eax
		mov    $0x000028,%ebx
		mov    %di,%ax
		cmp    %ebx,%eax
		jle    _070621_jump
		mov    %ebx,%eax

	_070621_jump:
		mov    %eax,%ebx
		mov    $0x000008,%eax
		cmp    %ebx,%eax
		jge    _07062e_jump
		mov    %ebx,%eax

	_07062e_jump:
		mov    %ax,0x00001c(%ebp)
		add    %eax,%eax
		mov    %ax,0x00001e(%ebp)
		xor    %eax,%eax
		mov    $0x400921fb,%ecx
		mov    0x00001c(%ebp),%ax
		mov    $0x54442eea,%ebx
		call   _07b8ff_func
		call   _07baef_func
		call   _07c140_func
		mov    %ax,0x000020(%ebp)
		xor    %eax,%eax
		mov    $0x54442eea,%ebx
		mov    0x00001c(%ebp),%ax
		mov    $0x400921fb,%ecx
		call   _07b8ff_func
		call   _07baef_func
		mov    $0x3fe00000,%ecx
		xor    %ebx,%ebx
		call   _07baef_func
		call   _07c140_func
		mov    $0x00fa00,%ecx
		mov    _0cc528_data,%edi
		mov    %ax,0x000022(%ebp)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07069f_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07069f_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    _0cc528_data,%eax
		mov    %eax,0x000028(%ebp)
		mov    (%esp),%eax
		mov    %eax,0x00002c(%ebp)
		xor    %eax,%eax
		mov    0x00001e(%ebp),%ax
		shl    $0x000002,%eax
		call   _07b7c4_func
		mov    %eax,0x000024(%ebp)
		test   %eax,%eax
		je     _0706ce_jump
		movb   $0x000001,0x000008(%esp)

	_0706ce_jump:
		cmpb   $0x000000,0x000008(%esp)
		je     _0706e3_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		call   _0704c0_func
		jmp    _0706e8_jump

	_0706e3_jump:
		call   _0705a4_case

	_0706e8_jump:
		mov    0x000008(%esp),%al
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_0706f4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0e4080_data,%esi
		mov    0x000018(%esi),%al
		cmp    $0x000001,%al
		jb     _07071d_jump
		jbe    _0707b3_jump
		cmp    $0x000002,%al
		je     _070873_jump
		jmp    _0708d4_jump

	_07071d_jump:
		test   %al,%al
		jne    _0708d4_jump
		cmpb   $0x000000,0x000019(%esi)
		jne    _070762_jump
		cmpw   $0x000000,0x000002(%esi)
		jle    _070751_jump
		movl   $0x00013f,0x000004(%esi)
		mov    0x000004(%esi),%eax
		mov    %eax,0x000014(%esi)
		xor    %eax,%eax
		mov    $0x00013f,%edx
		mov    0x000022(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x000008(%esi)
		jmp    _07075e_jump

	_070751_jump:
		mov    0x000014(%esi),%eax
		movl   $0x00013f,0x000004(%esi)
		mov    %eax,0x000008(%esi)

	_07075e_jump:
		movb   $0x000001,0x000019(%esi)

	_070762_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		call   _07b8f2_func
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %edx,%ebx
		call   _07b8ff_func
		mov    %eax,%ebp
		mov    %edx,%edi
		mov    %ecx,%eax
		mov    %ebx,%edx
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _07c468_func
		mov    %ebp,%ebx
		mov    %edi,%ecx
		call   _07c3fa_func
		call   _07baef_func
		call   _07c13c_func
		xor    %edx,%edx
		mov    %eax,0x00000c(%esi)
		mov    0x000022(%esi),%dx
		mov    0x000014(%esi),%eax
		sub    %edx,%eax
		jmp    _0708d1_jump

	_0707b3_jump:
		cmpb   $0x000000,0x000019(%esi)
		jne    _0707eb_jump
		cmpw   $0x000000,0x000002(%esi)
		jle    _0707d1_jump
		mov    0x000014(%esi),%eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,0x000008(%esi)
		jmp    _0707e7_jump

	_0707d1_jump:
		mov    0x000014(%esi),%eax
		mov    %eax,0x000008(%esi)
		xor    %eax,%eax
		mov    $0x00013f,%edx
		mov    0x000022(%esi),%ax
		sub    %eax,%edx
		mov    %edx,0x000004(%esi)

	_0707e7_jump:
		movb   $0x000001,0x000019(%esi)

	_0707eb_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		call   _07b8f2_func
		mov    %eax,(%esp)
		xor    %eax,%eax
		mov    0x000020(%esi),%ax
		mov    %edx,0x000004(%esp)
		call   _07b8ff_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		call   _081734_func
		jg     _070851_jump
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		call   _07b8ff_func
		mov    %eax,%edi
		mov    %edx,%ebp
		mov    (%esp),%eax
		mov    0x000004(%esp),%edx
		mov    %edi,%ebx
		mov    %ebp,%ecx
		call   _07c468_func
		mov    %edi,%ebx
		mov    %ebp,%ecx
		call   _07c421_func
		call   _07baef_func
		call   _07c13c_func
		mov    %eax,0x00000c(%esi)
		jmp    _070861_jump

	_070851_jump:
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,%ebp
		mov    %eax,0x00000c(%esi)
		neg    %ebp
		mov    %ebp,0x00000c(%esi)

	_070861_jump:
		mov    0x000004(%esi),%eax
		sub    0x000014(%esi),%eax
		mov    $0x00013f,%edx
		sub    %eax,%edx
		mov    %edx,0x000010(%esi)
		jmp    _0708d4_jump

	_070873_jump:
		cmpb   $0x000000,0x000019(%esi)
		jne    _0708b9_jump
		cmpw   $0x000000,0x000002(%esi)
		jle    _070898_jump
		mov    0x000014(%esi),%eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,%ebx
		mov    %eax,0x000008(%esi)
		neg    %ebx
		mov    %ebx,0x000008(%esi)
		jmp    _0708b5_jump

	_070898_jump:
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		dec    %eax
		mov    %eax,0x000004(%esi)
		xor    %eax,%eax
		mov    0x00001c(%esi),%ax
		mov    %eax,%edx
		mov    %eax,0x000014(%esi)
		neg    %edx
		mov    %edx,0x000014(%esi)
		mov    %edx,0x000008(%esi)

	_0708b5_jump:
		movb   $0x000001,0x000019(%esi)

	_0708b9_jump:
		mov    0x000014(%esi),%eax
		xor    %edx,%edx
		mov    %eax,0x00000c(%esi)
		mov    %eax,%ecx
		mov    0x000022(%esi),%dx
		mov    0x000014(%esi),%eax
		neg    %ecx
		add    %edx,%eax
		mov    %ecx,0x00000c(%esi)

	_0708d1_jump:
		mov    %eax,0x000010(%esi)

	_0708d4_jump:
		mov    (%esi),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _0708df_jump
		neg    %eax

	_0708df_jump:
		mov    (%esi),%di
		add    %eax,%edi
		mov    0x000002(%esi),%ax
		mov    %di,(%esi)
		test   %ax,%ax
		jle    _0708f8_jump
		cmpb   $0x000004,0x000018(%esi)
		jne    _070908_jump
		jmp    _070903_jump

	_0708f8_jump:
		mov    0x000015(%esi),%eax
		sar    $0x000018,%eax
		cmp    $0xffffffff,%eax
		jne    _070908_jump

	_070903_jump:
		movw   $0x000000,(%esi)

	_070908_jump:
		mov    (%esi),%ax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070918_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    _0e4080_data,%edx
		cmpb   $0x000003,0x000018(%edx)
		jne    _070959_jump
		mov    $0x003e80,%ecx
		mov    0x00002c(%edx),%edi
		cld    
		xor    %eax,%eax
		rep stos %eax,%es:(%edi)
		cmpw   $0x000000,0x000002(%edx)
		jle    _070948_jump
		mov    0x000018(%edx),%al
		inc    %al
		jmp    _07094d_jump

	_070948_jump:
		mov    0x000018(%edx),%al
		dec    %al

	_07094d_jump:
		movb   $0x000000,0x000019(%edx)
		mov    %al,0x000018(%edx)
		jmp    _070c50_jump

	_070959_jump:
		mov    0x000028(%edx),%eax
		mov    %eax,0x000010(%esp)
		mov    0x000018(%edx),%al
		mov    0x00002c(%edx),%ebp
		cmp    $0x000001,%al
		jb     _07097d_jump
		jbe    _070a68_jump
		cmp    $0x000002,%al
		je     _070b67_jump
		jmp    _070c0e_jump

	_07097d_jump:
		test   %al,%al
		jne    _070c0e_jump
		cmpw   $0x000000,0x000002(%edx)
		jle    _0709a4_jump
		cmpb   $0x000001,0x000019(%edx)
		jne    _0709a4_jump
		mov    $0x003e80,%ecx
		mov    0x000010(%esp),%esi
		mov    %ebp,%edi
		cld    
		rep movsl %ds:(%esi),%es:(%edi)
		movb   $0x000002,0x000019(%edx)

	_0709a4_jump:
		xor    %esi,%esi
		mov    %esi,0x000008(%esp)
		mov    $0x000140,%edi

	_0709af_jump:
		mov    0x00000c(%edx),%esi
		xor    %ecx,%ecx
		test   %esi,%esi
		jle    _0709e5_jump

	_0709b8_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		sub    %ecx,%eax
		mov    0x000024(%edx),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    0x000010(%edx),%eax
		mov    0x000014(%edx),%ebx
		add    (%esi),%eax
		mov    0x000010(%esp),%esi
		add    %ecx,%ebx
		add    %eax,%esi
		lea    (%ebx,%ebp,1),%eax
		mov    (%esi),%bl
		mov    %bl,(%eax)
		inc    %ecx
		cmp    0x00000c(%edx),%ecx
		jl     _0709b8_jump

	_0709e5_jump:
		cmpw   $0x000000,0x000002(%edx)
		jle    _070a16_jump
		mov    0x00000c(%edx),%ecx
		jmp    _070a02_jump

	_0709f1_jump:
		mov    0x000014(%edx),%eax
		add    %ecx,%eax
		cmp    $0x000140,%eax
		jge    _070a01_jump
		movb   $0x000000,(%eax,%ebp,1)

	_070a01_jump:
		inc    %ecx

	_070a02_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _070a0d_jump
		neg    %eax

	_070a0d_jump:
		add    0x00000c(%edx),%eax
		cmp    %eax,%ecx
		jge    _070a3f_jump
		jmp    _0709f1_jump

	_070a16_jump:
		mov    $0xffffffff,%ecx
		mov    0x000010(%esp),%ebx
		jmp    _070a2f_jump

	_070a21_jump:
		mov    0x000014(%edx),%eax
		sub    %ecx,%eax
		lea    (%eax,%ebp,1),%esi
		mov    (%ebx,%eax,1),%al
		inc    %ecx
		mov    %al,(%esi)

	_070a2f_jump:
		mov    (%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _070a3a_jump
		neg    %eax

	_070a3a_jump:
		dec    %eax
		cmp    %eax,%ecx
		jl     _070a21_jump

	_070a3f_jump:
		mov    0x000010(%esp),%esi
		mov    0x000008(%esp),%eax
		add    $0x000140,%ebp
		add    %edi,%esi
		inc    %eax
		mov    %esi,0x000010(%esp)
		mov    %eax,0x000008(%esp)
		cmp    $0x0000c8,%eax
		jge    _070c0e_jump
		jmp    _0709af_jump

	_070a68_jump:
		xor    %ecx,%ecx
		mov    %ecx,0x000004(%esp)
		mov    0x00000c(%edx),%ecx
		jmp    _070ac9_jump

	_070a73_jump:
		add    %ecx,%eax
		mov    0x000024(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x000010(%edx),%eax
		mov    (%ebx),%edi
		lea    (%eax,%edi,1),%ebx
		mov    0x000014(%edx),%esi
		mov    $0x00013f,%eax
		mov    0x000010(%esp),%edi
		cmp    %ebx,%eax
		jle    _070a97_jump
		mov    %ebx,%eax

	_070a97_jump:
		add    %eax,%edi
		mov    (%edi),%bl
		add    %ecx,%esi
		test   %bl,%bl
		jne    _070abf_jump
		test   %ecx,%ecx
		jg     _070aa9_jump
		mov    %esi,%eax
		jmp    _070abf_jump

	_070aa9_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		add    %ecx,%eax
		mov    0x000024(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		mov    0x000010(%edx),%eax
		sub    (%ebx),%eax
		dec    %eax

	_070abf_jump:
		add    0x000010(%esp),%eax
		mov    (%eax),%al
		inc    %ecx
		mov    %al,(%esi,%ebp,1)

	_070ac9_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		cmp    %eax,%ecx
		jl     _070a73_jump
		cmpw   $0x000000,0x000002(%edx)
		jle    _070b01_jump
		mov    %eax,%ecx
		jmp    _070ae8_jump

	_070ade_jump:
		mov    0x000014(%edx),%eax
		add    %ecx,%eax
		inc    %ecx
		movb   $0x000000,(%eax,%ebp,1)

	_070ae8_jump:
		mov    (%edx),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x00001c(%edx),%bx
		test   %eax,%eax
		jge    _070af9_jump
		neg    %eax

	_070af9_jump:
		add    %ebx,%eax
		cmp    %eax,%ecx
		jge    _070b37_jump
		jmp    _070ade_jump

	_070b01_jump:
		cmp    0x000014(%edx),%eax
		jge    _070b37_jump
		mov    %eax,%ebx
		mov    (%edx),%eax
		sar    $0x000010,%eax
		neg    %ebx
		test   %eax,%eax
		jge    _070b15_jump
		neg    %eax

	_070b15_jump:
		sub    %eax,%ebx
		mov    0x00000c(%edx),%esi
		mov    %ebx,%eax
		cmp    %esi,%ebx
		jge    _070b37_jump

	_070b20_jump:
		mov    0x000014(%edx),%ebx
		add    %eax,%ebx
		mov    0x000010(%esp),%ecx
		lea    (%ebx,%ebp,1),%esi
		mov    (%ecx,%ebx,1),%bl
		mov    %bl,(%esi)
		inc    %eax
		cmp    0x00000c(%edx),%eax
		jl     _070b20_jump

	_070b37_jump:
		mov    0x000010(%esp),%edi
		mov    0x000004(%esp),%eax
		add    $0x000140,%ebp
		add    $0x000140,%edi
		inc    %eax
		mov    %edi,0x000010(%esp)
		mov    %eax,0x000004(%esp)
		cmp    $0x0000c8,%eax
		jge    _070c0e_jump
		mov    0x00000c(%edx),%ecx
		jmp    _070ac9_jump

	_070b67_jump:
		xor    %ebx,%ebx
		mov    %ebx,(%esp)

	_070b6c_jump:
		mov    0x00000c(%edx),%ecx
		jmp    _070bb2_jump

	_070b71_jump:
		add    %ecx,%eax
		mov    0x000024(%edx),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    0x000014(%edx),%ebx
		mov    0x000010(%edx),%eax
		mov    (%esi),%edi
		add    %ecx,%ebx
		add    %edi,%eax
		mov    0x000010(%esp),%edi
		mov    %ebx,0x00000c(%esp)
		cmpb   $0x000000,(%edi,%eax,1)
		jne    _070ba4_jump
		test   %ecx,%ecx
		jge    _070b9f_jump
		mov    0x00000c(%esp),%eax
		jmp    _070ba4_jump

	_070b9f_jump:
		mov    0x000010(%edx),%eax
		sub    (%esi),%eax

	_070ba4_jump:
		add    0x000010(%esp),%eax
		mov    0x00000c(%esp),%ebx
		mov    (%eax),%al
		inc    %ecx
		mov    %al,(%ebx,%ebp,1)

	_070bb2_jump:
		xor    %eax,%eax
		mov    0x00001c(%edx),%ax
		cmp    %eax,%ecx
		jl     _070b71_jump
		cmpw   $0x000000,0x000002(%edx)
		jle    _070be8_jump
		mov    %eax,%ecx
		jmp    _070bd1_jump

	_070bc7_jump:
		mov    0x000014(%edx),%eax
		add    %ecx,%eax
		inc    %ecx
		movb   $0x000000,(%eax,%ebp,1)

	_070bd1_jump:
		mov    (%edx),%eax
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x00001c(%edx),%bx
		test   %eax,%eax
		jge    _070be2_jump
		neg    %eax

	_070be2_jump:
		add    %ebx,%eax
		cmp    %eax,%ecx
		jl     _070bc7_jump

	_070be8_jump:
		mov    0x000010(%esp),%edi
		mov    (%esp),%eax
		add    $0x000140,%ebp
		add    $0x000140,%edi
		inc    %eax
		mov    %edi,0x000010(%esp)
		mov    %eax,(%esp)
		cmp    $0x0000c8,%eax
		jl     _070b6c_jump

	_070c0e_jump:
		mov    (%edx),%eax
		mov    0x000014(%edx),%ecx
		sar    $0x000010,%eax
		sub    %eax,%ecx
		mov    0x000002(%edx),%bx
		mov    %ecx,0x000014(%edx)
		test   %bx,%bx
		jle    _070c3f_jump
		cmp    0x000008(%edx),%ecx
		jge    _070c50_jump
		mov    0x000018(%edx),%cl
		movb   $0x000000,0x000019(%edx)
		inc    %cl
		mov    %cl,0x000018(%edx)
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_070c3f_jump:
		cmp    0x000004(%edx),%ecx
		jle    _070c50_jump
		mov    0x000018(%edx),%bh
		movb   $0x000000,0x000019(%edx)
		dec    %bh
		mov    %bh,0x000018(%edx)

	_070c50_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_070c60_func:
		xor    %ah,%ah
		mov    %ah,_0cdf29_data
		ret    



_070c6c_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    _0ce3a0_data,%al
		mov    %al,0x00025a(%edx)
		mov    _0ced00_data,%ax
		mov    %ax,0x000034(%edx)
		mov    _0cecea_data,%ax
		mov    %ax,0x000036(%edx)
		mov    _0cdabc_data,%ax
		mov    %ax,0x000038(%edx)
		mov    _0cdac0_data,%ax
		mov    %ax,0x00003a(%edx)
		mov    _0cdaca_data,%ax
		mov    %ax,0x00003c(%edx)
		mov    _0cdacc_data,%ax
		mov    %ax,0x00003e(%edx)
		mov    _0cdb15_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		xor    %ah,%ah
		mov    %ax,0x000040(%edx)
		mov    _0cec71_data,%al
		add    %al,%al
		shr    $0x000006,%al
		mov    %al,0x000254(%edx)
		mov    _0cec70_data,%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    %al,0x000255(%edx)
		mov    _0cec70_data,%al
		and    $0x000001,%al
		mov    %al,0x000256(%edx)
		test   %ecx,%ecx
		je     _070d30_jump
		mov    0x000034(%ecx),%ax
		mov    %ax,0x000046(%edx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x000042(%edx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x000044(%edx)
		mov    0x00007b(%ecx),%al
		mov    %al,0x000248(%edx)
		mov    0x000081(%ecx),%al
		and    $0x000001,%al
		mov    %al,0x000249(%edx)
		jmp    _070d36_jump

	_070d30_jump:
		movw   $0x00ffff,0x000046(%edx)

	_070d36_jump:
		mov    _0cc1f2_data,%ecx
		mov    _0ce324_data,%esi
		sar    $0x000010,%ecx
		lea    0x000048(%edx),%edi
		add    %ecx,%ecx
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		xor    %al,%al

	_070d5c_jump:
		xor    %ecx,%ecx
		mov    %al,%cl
		mov    _0cdaf6_data(%ecx),%ah
		mov    %ah,0x00024a(%ecx,%edx,1)
		inc    %al
		cmp    $0x000005,%al
		jb     _070d5c_jump
		mov    _0cdafe_data,%al
		mov    %al,0x00024f(%edx)
		mov    _0cdaff_data,%al
		mov    %al,0x000250(%edx)
		mov    _0cdb01_data,%al
		mov    %al,0x000251(%edx)
		mov    _0cdb00_data,%al
		mov    %al,0x000252(%edx)
		xor    %al,%al

	_070da1_jump:
		xor    %ecx,%ecx
		mov    %al,%cl
		mov    _0ca358_data(,%ecx,2),%bx
		inc    %al
		mov    %bx,0x000020(%edx,%ecx,2)
		cmp    $0x000008,%al
		jb     _070da1_jump
		mov    _0cec6c_data,%ax
		mov    _0cc1f4_data,%cx
		mov    %ax,0x000030(%edx)
		mov    _0cec6a_data,%ax
		xor    %ebx,%ebx
		mov    %ax,0x000032(%edx)
		mov    _0cdbc0_data,%al
		mov    %ecx,(%esp)
		mov    %al,0x000253(%edx)
		mov    _0cc1f0_data,%eax
		test   %cx,%cx
		jle    _070e4d_jump

	_070ded_jump:
		mov    0x000060(%eax),%di
		cmp    $0x00008d,%di
		je     _070e0d_jump
		cmp    $0x0000a4,%di
		je     _070e0d_jump
		cmp    $0x0000b3,%di
		je     _070e0d_jump
		cmp    $0x0000f2,%di
		jne    _070e3f_jump

	_070e0d_jump:
		mov    %ebx,%ecx
		xor    %bh,%ch
		and    $0x00001f,%cl
		mov    $0x000001,%esi
		movswl %cx,%ecx
		movswl %bx,%edi
		shl    %cl,%esi
		mov    0x000081(%eax),%cl
		sar    $0x000005,%edi
		test   $0x000004,%cl
		je     _070e37_jump
		movswl %di,%ecx
		or     %esi,(%edx,%ecx,4)
		jmp    _070e3f_jump

	_070e37_jump:
		movswl %di,%ecx
		not    %esi
		and    %esi,(%edx,%ecx,4)

	_070e3f_jump:
		mov    (%esp),%esi
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jl     _070ded_jump

	_070e4d_jump:
		mov    _0ceec4_data,%al
		movb   $0x000001,0x000259(%edx)
		mov    %al,0x000258(%edx)
		mov    _0ceec7_data,%al
		mov    %al,0x000257(%edx)
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_070e74_switch:
		.long   _071100_case
		.long   _071107_case
		.long   _071100_case
		.long   _071107_case
		.long   _0710f7_case
		.long   _071107_case
		.long   _071107_case
		.long   _071100_case
		.long   _071107_case
		.long   _071100_case
		.long   _071107_case
		.long   _0710f7_case




_070ea4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%edx
		cmpb   $0x000000,0x000259(%eax)
		je     _07129f_jump
		mov    _0cec71_data,%bl
		test   $0x000002,%bl
		je     _070ee2_jump
		mov    $0x000021,%ecx
		mov    $_0cda94_data,%edi
		mov    %bl,%bh
		mov    $_0ce21c_data,%esi
		and    $0x0000fd,%bh
		rep movsl %ds:(%esi),%es:(%edi)
		mov    %bh,_0cec71_data

	_070ee2_jump:
		mov    0x00025a(%edx),%al
		mov    %al,_0ce3a0_data
		mov    0x000034(%edx),%ax
		mov    %ax,_0ced00_data
		mov    0x000036(%edx),%ax
		mov    %ax,_0cecea_data
		mov    0x000036(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,_0cdabc_data
		mov    0x000038(%edx),%eax
		sar    $0x000010,%eax
		mov    %eax,_0cdac0_data
		mov    0x00003c(%edx),%ax
		mov    _0cdb15_data,%cl
		mov    %ax,_0cdaca_data
		mov    0x00003e(%edx),%ax
		and    $0x0000f7,%cl
		mov    %ax,_0cdacc_data
		mov    0x000040(%edx),%al
		mov    %cl,_0cdb15_data
		and    $0x000001,%al
		mov    %cl,%ch
		shl    $0x000003,%al
		or     %al,%ch
		mov    0x000255(%edx),%al
		and    $0x000001,%al
		mov    _0cec70_data,%ah
		and    $0x0000f7,%ah
		mov    %ah,_0cec70_data
		shl    $0x000003,%al
		mov    %ah,%bl
		or     %al,%bl
		mov    %bl,_0cec70_data
		mov    _0cecd4_data,%bx
		mov    %ch,_0cdb15_data
		cmp    $0x000006,%bx
		jne    _070fcc_jump
		cmpw   $0x000003,_0cecc0_data
		jne    _070fcc_jump
		mov    _0cec70_data,%bh
		mov    0x000256(%edx),%al
		and    $0x0000fe,%bh
		and    $0x000001,%al
		mov    %bh,%cl
		mov    %bh,_0cec70_data
		or     %al,%cl
		mov    %cl,_0cec70_data
		mov    0x000254(%edx),%al
		mov    _0cec71_data,%ch
		and    $0x000003,%al
		and    $0x00009f,%ch
		shl    $0x000005,%al
		mov    %ch,%ah
		mov    %ch,_0cec71_data
		or     %al,%ah
		mov    %ah,_0cec71_data

	_070fcc_jump:
		mov    0x000044(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _071025_jump
		mov    %eax,%ebx
		shl    $0x000005,%eax
		add    %eax,%ebx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000040(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,0x000028(%eax)
		mov    0x000042(%edx),%ebx
		sar    $0x000010,%ebx
		mov    %ebx,0x00002c(%eax)
		mov    0x000248(%edx),%bl
		mov    %bl,0x00007b(%eax)
		mov    0x000249(%edx),%bl
		and    $0x000001,%bl
		mov    0x000081(%eax),%bh
		and    $0x0000fe,%bh
		mov    %bh,%cl
		mov    %bh,0x000081(%eax)
		or     %bl,%cl
		mov    %cl,0x000081(%eax)

	_071025_jump:
		cmp    $_0cdcd0_data,%edx
		jne    _07108d_jump
		mov    _0cc1f4_data,%si
		xor    %eax,%eax
		test   %si,%si
		jle    _07108d_jump

	_07103b_jump:
		movswl %ax,%ebx
		lea    0x000000(,%ebx,2),%ecx
		imul   $0x000084,%ebx,%ebx
		mov    _0ce324_data,%esi
		lea    (%edx,%ecx,1),%edi
		add    %esi,%ecx
		mov    0x000048(%edi),%si
		mov    %si,(%ecx)
		cmp    %ax,%si
		je     _071072_jump
		mov    _0cc1f0_data,%ecx
		movl   $0x000001,0x000020(%ecx,%ebx,1)
		jmp    _071080_jump

	_071072_jump:
		mov    _0cc1f0_data,%ecx
		movl   $0x000000,0x000020(%ecx,%ebx,1)

	_071080_jump:
		mov    _0cc1f4_data,%di
		inc    %eax
		cmp    %di,%ax
		jl     _07103b_jump

	_07108d_jump:
		xor    %eax,%eax
		jmp    _0710a2_jump

	_071091_jump:
		movswl %ax,%ecx
		mov    0x00024a(%ecx,%edx,1),%bl
		inc    %eax
		mov    %bl,_0cdaf6_data(%ecx)

	_0710a2_jump:
		movswl %ax,%ebx
		cmp    $0x000005,%ebx
		jb     _071091_jump
		mov    0x00024f(%edx),%al
		mov    %al,_0cdafe_data
		mov    0x000250(%edx),%al
		mov    %al,_0cdaff_data
		mov    0x000251(%edx),%al
		mov    %al,_0cdb01_data
		mov    0x000252(%edx),%al
		mov    %al,_0cdb00_data
		cmp    $_0cdcd0_data,%edx
		jne    _071107_case
		mov    0x000253(%edx),%al
		dec    %al
		cmp    $0x00000b,%al
		ja     _071107_case
		and    $0x0000ff,%eax
		jmp    *%cs:_070e74_switch(,%eax,4)

	_0710f7_case:
		movb   $0x000003,0x000253(%edx)
		jmp    _071107_case

	_071100_case:
		movb   $0x000001,0x000253(%edx)

	_071107_case:
		mov    _0cdb20_data,%ebx
		mov    0x000253(%edx),%al
		mov    %al,0x00006e(%ebx)
		mov    %al,_0cdbc0_data
		mov    0x000258(%edx),%al
		mov    %al,_0ceec4_data
		xor    %eax,%eax
		mov    %ax,_0ceca2_data
		mov    %ax,_0cecc8_data

	_071134_jump:
		movswl %ax,%ebx
		mov    0x000020(%edx,%ebx,2),%cx
		inc    %eax
		mov    %cx,_0ca358_data(,%ebx,2)
		cmp    $0x000008,%ax
		jl     _071134_jump
		mov    $0xffffffff,%edi
		mov    $0x000001,%ebx
		mov    0x000030(%edx),%ax
		xor    %ecx,%ecx
		mov    %ax,_0cec6c_data
		mov    %cx,_0cdad4_data
		mov    %cx,_0cdad6_data
		mov    %di,_0cdaea_data
		mov    %ebx,_0cdab8_data
		mov    _0cdb15_data,%ch
		mov    0x000032(%edx),%ax
		xor    %ebx,%ebx
		or     $0x000004,%ch
		mov    %ax,_0cec6a_data
		mov    %ch,_0cdb15_data
		xor    %eax,%eax
		mov    _0cc1f4_data,%cx
		mov    %ax,_0cecf6_data
		mov    %ax,_0cecf8_data
		mov    _0cc1f0_data,%eax
		mov    %ecx,(%esp)
		test   %cx,%cx
		jle    _07127e_jump

	_0711bd_jump:
		mov    0x000060(%eax),%di
		cmp    $0x000003,%di
		je     _071265_jump
		cmp    $0x00000d,%di
		je     _071265_jump
		cmp    $0x00000f,%di
		je     _071265_jump
		cmp    $0x00003b,%di
		je     _071265_jump
		cmp    $0x000024,%di
		je     _071265_jump
		cmp    $0x000042,%di
		je     _071265_jump
		cmp    $0x00003e,%di
		je     _071265_jump
		cmp    $0x000063,%di
		je     _071265_jump
		cmp    $0x00008d,%di
		je     _07123b_jump
		cmp    $0x0000a4,%di
		je     _07123b_jump
		cmp    $0x0000b3,%di
		je     _071229_jump
		cmp    $0x0000f2,%di
		jne    _071235_jump

	_071229_jump:
		movl   $0x000001,0x00001c(%eax)
		mov    0x00001c(%eax),%ecx
		jmp    _071237_jump

	_071235_jump:
		xor    %ecx,%ecx

	_071237_jump:
		test   %ecx,%ecx
		je     _07126c_jump

	_07123b_jump:
		movswl %bx,%ecx
		sar    $0x000005,%ecx
		mov    %ecx,%edi
		mov    %ebx,%ecx
		xor    %bh,%ch
		and    $0x00001f,%cl
		mov    $0x000001,%esi
		movswl %cx,%ecx
		shl    %cl,%esi
		movswl %di,%ecx
		test   %esi,(%edx,%ecx,4)
		je     _071265_jump
		orb    $0x000004,0x000081(%eax)
		jmp    _07126c_jump

	_071265_jump:
		andb   $0x0000fb,0x000081(%eax)

	_07126c_jump:
		mov    (%esp),%esi
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jl     _0711bd_jump

	_07127e_jump:
		xor    %al,%al
		mov    %al,_0ceebd_data
		mov    0x000257(%edx),%al
		inc    %al
		mov    %al,_0ceec7_data
		xor    %eax,%eax
		mov    0x000257(%edx),%al
		call   _03b4ec_func

	_07129f_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0712a8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    _0cecd4_data,%si
		mov    _0cecc0_data,%di
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		xor    %edx,%edx
		cmp    %ax,%si
		jle    _0712e3_jump

	_0712cd_jump:
		movswl %ax,%ebx
		mov    _09475c_data(%ebx),%bl
		xor    %bh,%bh
		shl    $0x000005,%ebx
		inc    %eax
		add    %ebx,%edx
		cmp    %si,%ax
		jl     _0712cd_jump

	_0712e3_jump:
		mov    $0x000001,%eax
		cmp    %ax,%di
		jle    _0712f6_jump

	_0712ed_jump:
		inc    %eax
		add    $0x000020,%edx
		cmp    %di,%ax
		jl     _0712ed_jump

	_0712f6_jump:
		mov    $0x000003,%cl
		mov    (%esp),%eax
		mov    %si,_0cecd4_data
		mov    %di,_0cecc0_data
		test   %ax,%ax
		js     _071313_jump
		sar    %cl,%ax
		jmp    _07131c_jump

	_071313_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07131c_jump:
		mov    _0cecd4_data,%si
		add    %edx,%eax
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071350_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cwtl   
		call   _0712a8_func
		mov    %dl,%cl
		movswl %ax,%ebx
		and    $0x000007,%cl
		mov    $0x000080,%eax
		test   %ax,%ax
		js     _071372_jump
		sar    %cl,%ax
		jmp    _07137b_jump

	_071372_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07137b_jump:
		or     %al,_0caf58_data(%ebx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071388_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cwtl   
		call   _0712a8_func
		mov    %dl,%cl
		movswl %ax,%ebx
		and    $0x000007,%cl
		mov    $0x000080,%eax
		test   %ax,%ax
		js     _0713aa_jump
		sar    %cl,%ax
		jmp    _0713b3_jump

	_0713aa_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_0713b3_jump:
		and    _0caf58_data(%ebx),%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0714e0_func:
		xor    %al,%al
		ret    



_0714f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000000,_0ceead_data
		jne    _0715b5_jump
		mov    _0cecb0_data,%ecx
		mov    _0cecf4_data,%ebx
		mov    _0cecae_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sub    %ebx,%eax
		add    %ebx,%ecx
		mov    %eax,%ebx
		mov    _0cecfe_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _071537_jump
		cmp    %ecx,%eax
		jg     _071537_jump
		mov    $0x000001,%eax
		jmp    _071539_jump

	_071537_jump:
		xor    %eax,%eax

	_071539_jump:
		test   %eax,%eax
		je     _07157e_jump
		mov    _0cecb2_data,%ecx
		mov    _0cecf6_data,%ebx
		mov    _0cecac_data,%eax
		sar    $0x000010,%ebx
		sar    $0x000010,%eax
		sar    $0x000010,%ecx
		sub    %ebx,%eax
		add    %ebx,%ecx
		mov    %eax,%ebx
		mov    _0cece8_data,%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jl     _071574_jump
		cmp    %ecx,%eax
		jg     _071574_jump
		mov    $0x000001,%eax
		jmp    _071576_jump

	_071574_jump:
		xor    %eax,%eax

	_071576_jump:
		test   %eax,%eax
		je     _07157e_jump
		mov    $0x000001,%al
		jmp    _071580_jump

	_07157e_jump:
		xor    %al,%al

	_071580_jump:
		mov    %al,_0ceead_data
		test   %al,%al
		je     _0715ce_jump
		mov    _0ced00_data,%ax
		mov    %ax,_0cecb8_data
		mov    %ax,_0cecaa_data
		mov    _0cecae_data,%ax
		mov    %ax,_0cecac_data
		mov    _0cecb4_data,%ax
		mov    %ax,_0cecb6_data
		jmp    _0715ce_jump

	_0715b5_jump:
		mov    _0cecac_data,%ax
		mov    _0cecea_data,%dx
		cmp    %dx,%ax
		jge    _0715ce_jump
		mov    %dx,_0cecac_data

	_0715ce_jump:
		mov    _0ceead_data,%al
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0715d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		xor    %ebx,%ebx
		mov    0x000069(%eax),%bl
		call   _0188d0_func
		cwtl   
		sub    %ebx,%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		call   _01db8c_func
		movl   $0x000000,0x000024(%edx)
		movw   $0x000000,0x000040(%edx)
		xor    %bl,%bl
		movw   $0x000000,0x000042(%edx)
		mov    %bl,_0ceed6_data
		mov    0x000081(%edx),%ah
		mov    0x000060(%edx),%cx
		xor    %bh,%bh
		or     $0x000004,%ah
		mov    %bl,_0ceedb_data
		mov    %bx,_0e409a_data
		mov    %ah,0x000081(%edx)
		cmp    $0x00004a,%cx
		jne    _071647_jump
		mov    _0e4095_data,%al
		mov    %al,0x000076(%edx)
		mov    %edx,%eax
		call   _018a8c_func

	_071647_jump:
		xor    %cl,%cl
		xor    %esi,%esi
		mov    %cl,_0e4094_data
		mov    %si,_0e409e_data
		mov    %si,_0e4098_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071664_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ebx
		cmpw   $0x000000,0x000056(%eax)
		jle    _071769_jump
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _071769_jump

	_07168e_jump:
		cmpw   $0x00005c,0x000060(%ecx)
		jne    _071759_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _071759_jump
		movw   $0x000000,0x000042(%ecx)
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%ecx)
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sar    %eax
		test   %bx,%bx
		je     _0716cc_jump
		neg    %eax

	_0716cc_jump:
		movswl %ax,%edx
		mov    0x000028(%esi),%eax
		add    %edx,%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		add    $0x000002,%bl
		mov    %eax,0x00002c(%ecx)
		mov    %bl,0x00006c(%ecx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    $0x000001,%ebx
		mov    0x00002c(%ecx),%ax
		mov    %ebx,%edx
		mov    %ax,0x00003e(%ecx)
		mov    %ecx,%eax
		movb   $0x000000,0x00006d(%ecx)
		call   _05efb0_func
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000081(%ecx),%dl
		or     $0x000004,%dl
		mov    %dl,0x000081(%ecx)
		mov    %dl,%dh
		movl   $0x000001,0x000024(%ecx)
		and    $0x0000bf,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f304_func
		movb   $0x000000,0x000071(%ecx)
		mov    0x000056(%esi),%ax
		dec    %eax
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		call   _01db8c_func
		mov    %ecx,%eax
		movw   $0x00000a,0x000050(%ecx)
		call   _076f4c_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_071759_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _07168e_jump

	_071769_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_071770_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		movw   $0x000000,0x000040(%eax)
		mov    $0x000001,%ebx
		movw   $0x000000,0x000042(%eax)
		call   _01db8c_func
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d374_func
		mov    0x000032(%ecx),%edx
		mov    $0x0000f6,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		mov    %ecx,%eax
		call   _076f4c_func
		movw   $0x00000a,0x000050(%ecx)
		movw   $0x000003,0x000056(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0717bc_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    0x000060(%eax),%ax
		cmp    $0x00005d,%ax
		jb     _0717de_jump
		jbe    _071928_jump
		cmp    $0x0000b6,%ax
		je     _0717ed_jump
		jmp    _0719b8_jump

	_0717de_jump:
		cmp    $0x00005c,%ax
		je     _07189a_jump
		jmp    _0719b8_jump

	_0717ed_jump:
		cmpw   $0x000000,0x000040(%esi)
		jne    _0719b8_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%esi),%al
		mov    _0e408c_data,%cx
		add    %ebx,%eax
		sub    %ecx,%eax
		cmp    $0x000014,%ax
		jge    _07183b_jump
		mov    $0x000002,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		mov    0x000081(%esi),%ah
		movw   $0x000003,0x000040(%esi)
		or     $0x000008,%ah
		mov    %ah,0x000081(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07183b_jump:
		cmp    $0x0000c8,%ax
		jge    _0719b8_jump
		movswl %ax,%edx
		sar    $0x000003,%edx
		sub    $0x000002,%edx
		cmp    $0x000002,%dl
		jae    _071855_jump
		mov    $0x000002,%dl

	_071855_jump:
		cmp    $0x000032,%ax
		setl   %al
		and    $0x0000ff,%eax
		inc    %eax
		mov    %al,%dh
		xor    %eax,%eax
		mov    %dl,%al
		xor    %ebx,%ebx
		mov    _0cee3d_data(%eax),%bl
		sar    %eax
		cmp    %eax,%ebx
		jge    _07188b_jump
		mov    0x00003a(%esi),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    %dh,%al
		add    %eax,%ebx
		mov    %ebx,0x000028(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07188b_jump:
		mov    0x00003a(%esi),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07189a_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0719b8_jump
		mov    0x000050(%esi),%cx
		dec    %cx
		mov    %cx,0x000050(%esi)
		jne    _0719b8_jump
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%al
		jb     _0718c7_jump
		jbe    _0718db_jump
		cmp    $0x000003,%al
		je     _071900_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0718c7_jump:
		cmp    $0x000001,%al
		jne    _0719b8_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _071664_func

	_0718db_jump:
		mov    %esi,%eax
		xor    %edx,%edx
		call   _071664_func
		mov    0x000081(%esi),%ch
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%ch
		mov    %ch,0x000081(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071900_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _071664_func
		mov    0x000081(%esi),%cl
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%cl
		mov    %cl,0x000081(%esi)
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071928_jump:
		push   $0x00008c
		mov    _0e408c_data,%eax
		push   $0x000014
		sar    $0x000010,%eax
		push   %eax
		mov    _0e408a_data,%eax
		sar    $0x000010,%eax
		push   %eax
		xor    %eax,%eax
		mov    0x00002c(%esi),%di
		mov    0x000069(%esi),%al
		add    %edi,%eax
		sub    $0x000018,%eax
		movswl %ax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%bx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		mov    $0x000010,%ecx
		sub    $0x000008,%eax
		mov    %ecx,%ebx
		cwtl   
		call   _02ae60_func
		test   %ax,%ax
		je     _0719b8_jump
		cmpb   $0x000000,_0e4094_data
		jne    _071982_jump
		movb   $0x000001,_0e4094_data

	_071982_jump:
		mov    0x00002c(%esi),%edx
		movl   $0x000000,0x000024(%esi)
		add    $0x00001e,%edx
		mov    %edx,0x00002c(%esi)
		mov    $0x0000f3,%eax
		mov    0x000081(%esi),%bl
		mov    0x000032(%esi),%edx
		and    $0x0000fb,%bl
		sar    $0x000010,%edx
		mov    %bl,0x000081(%esi)
		call   _06f35c_func
		mov    %esi,%eax
		call   _076f4c_func

	_0719b8_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0719c0_switch:
		.long   _071ab0_case
		.long   _071abe_case
		.long   _071acc_case
		.long   _071ada_case




_0719d0_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    0x000060(%eax),%dx
		mov    %eax,%ecx
		cmp    $0x000066,%dx
		jne    _0719fa_jump

	_0719e1_jump:
		cmpl   $0x000000,0x000024(%ecx)
		je     _0719fa_jump
		mov    0x0000e4(%ecx),%di
		add    $0x000084,%ecx
		cmp    $0x000066,%di
		je     _0719e1_jump

	_0719fa_jump:
		cmpw   $0x000066,0x000060(%ecx)
		jne    _071b33_jump
		cmp    $0x000004,%bx
		jge    _071a6c_jump
		movswl %bx,%edx
		mov    $0x000002,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x000081(%ecx),%al
		and    $0x000001,%dl
		and    $0x0000f7,%al
		shl    $0x000003,%dl
		mov    %al,0x000081(%ecx)
		mov    %al,%ah
		or     %dl,%ah
		mov    %ah,0x000081(%ecx)
		cmp    $0x000002,%bx
		jge    _071a45_jump
		mov    $0xffffffff,%edx
		jmp    _071a4a_jump

	_071a45_jump:
		mov    $0x000001,%edx

	_071a4a_jump:
		mov    %dx,0x000042(%ecx)
		testb  $0x000008,0x000081(%ecx)
		je     _071a5e_jump
		mov    $0x000001,%edx
		jmp    _071a63_jump

	_071a5e_jump:
		mov    $0xffffffff,%edx

	_071a63_jump:
		mov    %dx,0x000040(%ecx)
		jmp    _071ae6_jump

	_071a6c_jump:
		movswl %bx,%edx
		mov    $0x000002,%edi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x000081(%ecx),%ah
		and    $0x000001,%dl
		and    $0x0000f7,%ah
		shl    $0x000003,%dl
		mov    %ah,%dh
		mov    %ah,0x000081(%ecx)
		or     %dl,%dh
		sub    $0x000004,%ebx
		mov    %dh,0x000081(%ecx)
		cmp    $0x000003,%bx
		ja     _071ae6_jump
		xor    %edx,%edx
		mov    %bx,%dx
		jmp    *%cs:_0719c0_switch(,%edx,4)

	_071ab0_case:
		movw   $0x000000,0x000042(%ecx)
		movw   $0x00fffe,0x000040(%ecx)
		jmp    _071ae6_jump

	_071abe_case:
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)
		jmp    _071ae6_jump

	_071acc_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fffe,0x000042(%ecx)
		jmp    _071ae6_jump

	_071ada_case:
		movw   $0x000000,0x000040(%ecx)
		movw   $0x000002,0x000042(%ecx)

	_071ae6_jump:
		mov    0x000028(%esi),%edx
		mov    %edx,0x000028(%ecx)
		mov    $0x000001,%ebx
		mov    0x00002c(%esi),%edx
		movb   $0x000002,0x00006d(%ecx)
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    %ebx,%edx
		movb   $0x000005,0x00006c(%ecx)
		call   _05efb0_func
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f304_func
		mov    %ecx,%eax
		call   _01db8c_func

	_071b33_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_071b38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _071c41_jump

	_071b56_jump:
		cmpw   $0x000066,0x000060(%ecx)
		jne    _071c31_jump
		mov    0x000024(%ecx),%ebx
		test   %ebx,%ebx
		jne    _071c31_jump
		mov    0x000032(%esi),%edx
		mov    $0x0000f4,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		mov    %esi,%eax
		call   _076f4c_func
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _0719d0_func
		mov    $0x000001,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _0719d0_func
		mov    $0x000002,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _0719d0_func
		mov    $0x000003,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _0719d0_func
		mov    $0x000004,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _0719d0_func
		mov    $0x000005,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _0719d0_func
		mov    $0x000006,%ebx
		add    $0x000084,%ecx
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _0719d0_func
		mov    $0x000007,%ebx
		lea    0x000084(%ecx),%eax
		mov    %esi,%edx
		call   _0719d0_func
		mov    0x000081(%esi),%ah
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%esi)
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071c31_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _071b56_jump

	_071c41_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071c48_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _071d74_jump

	_071c66_jump:
		cmpw   $0x00005d,0x000060(%ecx)
		jne    _071d64_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _071d64_jump
		cmpw   $0x000000,0x000040(%esi)
		jne    _071ca9_jump
		movw   $0x00ffff,0x000040(%ecx)
		movw   $0x00fffc,0x000042(%ecx)
		movb   $0x00000a,0x000072(%ecx)
		mov    0x000081(%ecx),%dh
		movw   $0x000002,0x000050(%ecx)
		and    $0x0000f7,%dh
		mov    %dh,0x000081(%ecx)
		jmp    _071cea_jump

	_071ca9_jump:
		mov    _0cdb20_data,%eax
		cmpw   $0x000000,0x000040(%eax)
		jge    _071cbc_jump
		mov    $0xfffffffc,%eax
		jmp    _071cc1_jump

	_071cbc_jump:
		mov    $0x000004,%eax

	_071cc1_jump:
		mov    %ax,0x000040(%ecx)
		test   %ax,%ax
		jge    _071cd3_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _071cda_jump

	_071cd3_jump:
		orb    $0x000008,0x000081(%ecx)

	_071cda_jump:
		movb   $0x0000ff,0x000072(%ecx)
		movw   $0x000001,0x000050(%ecx)
		movw   $0x00ffff,0x000042(%ecx)

	_071cea_jump:
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		movb   $0x000002,0x00006d(%ecx)
		mov    %eax,0x00002c(%ecx)
		mov    $0x000001,%ebx
		mov    0x000028(%ecx),%ax
		mov    %ebx,%edx
		mov    %ax,0x00003c(%ecx)
		mov    %ecx,%eax
		movb   $0x000003,0x00006c(%ecx)
		call   _05efb0_func
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000081(%ecx),%bl
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%bl
		mov    %ecx,%eax
		mov    %bl,0x000081(%ecx)
		call   _01f304_func
		movb   $0x000000,0x000071(%ecx)
		movw   $0x0000c8,0x000056(%ecx)
		mov    0x000081(%esi),%bh
		movl   $0x000000,0x000024(%esi)
		and    $0x0000fb,%bh
		mov    %ecx,%eax
		mov    %bh,0x000081(%esi)
		call   _01db8c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071d64_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _071c66_jump

	_071d74_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071d7c_func:
		push   %ebx
		mov    0x000060(%eax),%dx
		cmp    $0x00005b,%dx
		jb     _071d9a_jump
		jbe    _071da7_jump
		cmp    $0x00005d,%dx
		jb     _071dd2_jump
		jbe    _071dae_jump
		cmp    $0x0000b6,%dx
		je     _071da0_jump
		pop    %ebx
		ret    

	_071d9a_jump:
		cmp    $0x00005a,%dx
		jne    _071dd2_jump

	_071da0_jump:
		call   _071c48_func
		pop    %ebx
		ret    

	_071da7_jump:
		call   _071b38_func
		pop    %ebx
		ret    

	_071dae_jump:
		mov    _0cdb20_data,%edx
		mov    0x000040(%edx),%dx
		movw   $0x00ffff,0x000042(%eax)
		movb   $0x0000ff,0x000072(%eax)
		mov    0x000040(%eax),%bx
		movw   $0x000001,0x000050(%eax)
		add    %edx,%ebx
		mov    %bx,0x000040(%eax)

	_071dd2_jump:
		pop    %ebx
		ret    



_071dd4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000060(%eax),%ax
		cmp    $0x00005c,%ax
		jb     _071df5_jump
		jbe    _071dff_jump
		cmp    $0x00005d,%ax
		jbe    _071e0a_jump
		cmp    $0x0000b6,%ax
		je     _071e0a_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071df5_jump:
		cmp    $0x00005a,%ax
		je     _071e0a_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071dff_jump:
		mov    %edx,%eax
		call   _071770_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071e0a_jump:
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _071e16_jump
		neg    %eax

	_071e16_jump:
		mov    %eax,%ebx
		mov    %ax,0x000042(%edx)
		neg    %ebx
		mov    %bx,0x000042(%edx)
		mov    0x000040(%edx),%eax
		sar    $0x000010,%eax
		cmp    $0xfffffffd,%eax
		jle    _071e34_jump
		mov    %ebx,%ecx
		dec    %ecx
		mov    %cx,0x000042(%edx)

	_071e34_jump:
		mov    $0x00000a,%al
		mov    0x000071(%edx),%ah
		sub    %ah,%al
		mov    %al,0x000071(%edx)
		mov    %edx,%eax
		call   _01db8c_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071e4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		cmpb   $0x000006,_0e40a0_data
		jbe    _071e64_jump
		movb   $0x000006,_0e40a0_data

	_071e64_jump:
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%di
		xor    %eax,%eax
		test   %di,%di
		jle    _071fdb_jump

	_071e7c_jump:
		xor    %edx,%edx
		mov    _0e40a0_data,%dl
		imul   $0x00000a,%edx,%edx
		xor    %ebx,%ebx
		xor    %esi,%esi
		mov    _097b70_data(%edx),%bl
		mov    0x000060(%ecx),%si
		add    $0x00005a,%ebx
		cmp    %ebx,%esi
		jne    _071fcb_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _071fcb_jump
		mov    0x000081(%ecx),%bl
		mov    0x000081(%ebp),%al
		and    $0x0000f7,%bl
		and    $0x000008,%al
		mov    %bl,0x000081(%ecx)
		mov    %bl,%bh
		or     %al,%bh
		mov    %bh,0x000081(%ecx)
		mov    _097b74_data(%edx),%ax
		mov    %ax,0x000042(%ecx)
		testb  $0x000008,0x000081(%ecx)
		je     _071efd_jump
		mov    _097b72_data(%edx),%ax
		mov    _0e408e_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%bl
		add    $0x000017,%edx
		mov    %ax,0x000040(%ecx)
		jmp    _071f21_jump

	_071efd_jump:
		mov    _097b72_data(%edx),%ax
		mov    %eax,%edx
		mov    %ax,0x000040(%ecx)
		neg    %edx
		mov    %dx,0x000040(%ecx)
		mov    _0e408e_data,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%ecx),%bl
		add    $0x000009,%edx

	_071f21_jump:
		sub    %ebx,%edx
		mov    %edx,0x000028(%ecx)
		mov    _0e4090_data,%ebx
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x000069(%ecx),%dl
		sub    %edx,%ebx
		add    $0x000019,%ebx
		mov    %ebx,0x00002c(%ecx)
		xor    %ebx,%ebx
		mov    _0e40a0_data,%bl
		lea    0x000000(,%ebx,4),%edx
		add    %ebx,%edx
		movb   $0x000002,0x00006d(%ecx)
		mov    $0x000001,%ebx
		mov    _097b70_data(,%edx,2),%al
		mov    %ebx,%edx
		mov    %al,0x00006c(%ecx)
		mov    %ecx,%eax
		call   _05efb0_func
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000081(%ecx),%ah
		xor    %ebx,%ebx
		or     $0x000004,%ah
		movl   $0x000001,0x000024(%ecx)
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		and    $0x0000bf,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f304_func
		mov    _0e40a0_data,%bl
		lea    0x000000(,%ebx,4),%edx
		movb   $0x000000,0x000071(%ecx)
		add    %ebx,%edx
		movb   $0x00000a,0x000072(%ecx)
		mov    _097b76_data(,%edx,2),%ax
		mov    %ax,0x000056(%ecx)
		mov    %ecx,%eax
		call   _01db8c_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_071fcb_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %di,%ax
		jl     _071e7c_jump

	_071fdb_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_071fe4_func:
		push   %ebx
		push   %edx
		mov    _0e409c_data,%bx
		mov    _0e4098_data,%edx
		sar    $0x000010,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		sub    %edx,%eax
		lea    0x000000(,%eax,4),%edx
		movswl %bx,%eax
		mov    _097bb6_data(%edx,%eax,4),%eax
		mov    %eax,_0e4084_data
		cmpw   $0x000000,_0e4086_data
		je     _072028_jump
		xor    %ebx,%ebx
		jmp    _072029_jump

	_072028_jump:
		inc    %ebx

	_072029_jump:
		mov    _0e4084_data,%al
		mov    %bx,_0e409c_data
		pop    %edx
		pop    %ebx
		ret    



_072038_func:
		push   %edx
		cmpw   $0x00004a,0x000060(%eax)
		jne    _07205d_jump
		call   _071e4c_func
		mov    _0e4085_data,%al
		inc    %al
		mov    %al,_0ceed9_data
		call   _071fe4_func
		mov    %al,_0e40a0_data
		pop    %edx
		ret    

	_07205d_jump:
		xor    %dl,%dl
		mov    %dl,_0e40a0_data
		call   _071e4c_func
		pop    %edx
		ret    



_07206c_func:
		push   %ebx
		push   %ecx
		push   %edx
		cmpb   $0x000064,_0ceed6_data
		je     _0720fb_jump
		mov    0x000076(%eax),%dh
		dec    %dh
		mov    %dh,0x000076(%eax)
		test   %dh,%dh
		jbe    _0720f3_jump
		mov    0x00006d(%eax),%cl
		cmp    $0x000002,%cl
		je     _0720b5_jump
		mov    $0x000003,%ebx
		mov    0x00006c(%eax),%dl
		mov    %cl,_0e4096_data
		mov    %dl,_0e4097_data
		xor    %edx,%edx
		mov    $0x000002,%ch
		call   _01d374_func
		mov    %ch,_0e4094_data
		jmp    _0720bc_jump

	_0720b5_jump:
		xor    %al,%al
		mov    %al,_0e4094_data

	_0720bc_jump:
		mov    _0e409a_data,%dx
		inc    %edx
		mov    %dx,_0e409a_data
		cmp    $0x000003,%dx
		jle    _0720dc_jump
		movw   $0x000003,_0e409a_data
		jmp    _0720e5_jump

	_0720dc_jump:
		xor    %ecx,%ecx
		mov    %cx,_0e409c_data

	_0720e5_jump:
		call   _071fe4_func
		mov    %al,_0e40a0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0720f3_jump:
		xor    %bh,%bh
		mov    %bh,_0e4094_data

	_0720fb_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072100_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0ceed6_data,%al
		cmp    $0x000002,%al
		jb     _072118_jump
		jbe    _07215f_jump
		cmp    $0x000003,%al
		je     _07216e_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_072118_jump:
		cmp    $0x000001,%al
		jne    _07219a_jump
		mov    0x000076(%ecx),%al
		dec    %al
		xor    %edx,%edx
		mov    %al,0x000076(%ecx)
		xor    %eax,%eax
		mov    0x000076(%ecx),%dl
		mov    0x000077(%ecx),%al
		sub    %edx,%eax
		cmp    $0x000003,%eax
		jl     _072140_jump
		movb   $0x000002,_0ceed6_data

	_072140_jump:
		xor    %dl,%dl
		mov    %ecx,%eax
		mov    %dl,_0ceed5_data
		mov    $0x000003,%edx
		call   _01d364_func
		movb   $0x000002,_0e4094_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07215f_jump:
		xor    %bl,%bl
		mov    %bl,_0e4094_data
		decb   0x000076(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07216e_jump:
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000076(%ecx),%dl
		movw   $0x000000,0x000040(%ecx)
		dec    %dl
		xor    %ah,%ah
		mov    %dl,0x000076(%ecx)
		mov    $0x000002,%dh
		mov    %ah,_0ceed5_data
		mov    %dh,_0e4094_data

	_07219a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0721a0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %esp,%eax
		mov    $_0e4092_data,%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		mov    $_0e4090_data,%ebx
		push   %eax
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d710_func
		testb  $0x000008,0x000081(%esi)
		je     _0721e7_jump
		mov    0x000004(%esp),%esi
		mov    _0e4090_data,%dx
		sub    $0x000020,%esi
		add    %esi,%edx
		mov    %dx,_0e4090_data

	_0721e7_jump:
		mov    _0e4090_data,%bx
		mov    _0e4092_data,%cx
		add    $0x00000c,%ebx
		add    $0x00000c,%ecx
		mov    %bx,_0e4090_data
		mov    %cx,_0e4092_data
		add    $0x000008,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072214_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000020,%esp
		mov    %eax,%esi
		lea    0x000018(%esp),%ebx
		push   %ebx
		lea    0x000020(%esp),%ebx
		lea    0x000010(%esp),%ecx
		push   %ebx
		mov    $0x000002,%edx
		lea    0x000018(%esp),%ebx
		call   _01d710_func
		lea    0x000004(%esp),%ebx
		lea    0x000008(%esp),%ecx
		push   %ebx
		lea    0x000018(%esp),%ebx
		mov    $0x000005,%edx
		push   %ebx
		mov    %esi,%eax
		lea    0x000008(%esp),%ebx
		call   _01d710_func
		mov    0x00001a(%esp),%ebx
		mov    0x000008(%esp),%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%esp),%ecx
		sub    $0x000014,%ebx
		sar    $0x000010,%ecx
		sar    %ebx
		add    $0x000014,%eax
		add    %ecx,%ebx
		mov    %ax,_0e408e_data
		mov    %bx,_0e408c_data
		add    $0x000020,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_07228c_switch:
		.long   _07266b_case
		.long   _07252d_case
		.long   _0725af_case
		.long   _072595_case

_07229c_switch:
		.long   _0725e3_case
		.long   _0725e3_case
		.long   _0725e3_case
		.long   _0725e3_case
		.long   _0725e3_case
		.long   _0725e3_case
		.long   _0725e3_case
		.long   _0725f4_case
		.long   _07261b_case
		.long   _072642_case




_0722c4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		call   _0714f0_func
		mov    %esi,%eax
		call   _0721a0_func
		mov    %esi,%eax
		call   _072214_func
		cmpb   $0x000001,0x000076(%esi)
		jae    _072390_jump
		cmpb   $0x000064,_0ceed6_data
		je     _072390_jump
		xor    %dh,%dh
		xor    %eax,%eax
		mov    %dh,_0e4094_data
		mov    0x000069(%esi),%al
		add    0x00002c(%esi),%eax
		mov    _0cda86_data,%edx
		sar    $0x000004,%eax
		sar    $0x000010,%edx
		imul   %eax,%edx
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		sar    $0x000004,%eax
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		je     _072390_jump
		mov    $0x000004,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		movb   $0x0000ff,0x00006b(%esi)
		call   _01d374_func
		mov    $0x000001,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000001,%cl
		call   _05efb0_func
		mov    $0x000064,%bh
		mov    $0x0001a4,%edx
		movw   $0x000000,0x000040(%esi)
		mov    %cl,_0ceeba_data
		movw   $0x000000,0x000042(%esi)
		mov    %bh,_0ceed6_data
		mov    %dx,_0e4098_data

	_072390_jump:
		cmpb   $0x000001,_0e4094_data
		jne    _0723aa_jump
		mov    %esi,%eax
		xor    %cl,%cl
		call   _07206c_func
		mov    %cl,_0ceed5_data
		jmp    _072410_jump

	_0723aa_jump:
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _072408_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0cee3d_data(%eax),%dl
		test   %dl,%dl
		jne    _072408_jump
		mov    $0x000001,%bl
		mov    %dl,_0ceed1_data
		mov    %bl,_0ceed5_data
		jmp    _072410_jump

	_072408_jump:
		xor    %dh,%dh
		mov    %dh,_0ceed5_data

	_072410_jump:
		mov    _0ceed6_data,%al
		mov    0x000028(%esi),%dx
		cmp    $0x000002,%al
		jb     _07243e_jump
		jbe    _072693_jump
		cmp    $0x000004,%al
		jb     _072868_jump
		jbe    _072a5d_jump
		cmp    $0x000064,%al
		je     _072d69_jump
		jmp    _072d9e_jump

	_07243e_jump:
		test   %al,%al
		ja     _0724da_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _072456_jump
		cmpb   $0x000000,0x00006c(%esi)
		je     _072d9e_jump

	_072456_jump:
		movswl %dx,%eax
		mov    _0cdabc_data,%ebx
		lea    0x0000dc(%eax),%edx
		cmp    %ebx,%edx
		jle    _072479_jump
		lea    0x00006e(%ebx),%edx
		cmp    %eax,%edx
		jle    _072479_jump
		movb   $0x000001,_0ceed1_data
		jmp    _072487_jump

	_072479_jump:
		mov    $0x000002,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func

	_072487_jump:
		cmpb   $0x000000,_0ceed1_data
		je     _072d9e_jump
		cmpb   $0x000000,_0ceed5_data
		je     _072d9e_jump
		mov    $0x000001,%ah
		mov    $0x000001,%ebx
		mov    %ah,_0ceed6_data
		mov    %ah,_0ceed4_data
		xor    %eax,%eax
		xor    %edx,%edx
		mov    %ax,_0e409c_data
		mov    %ax,_0e409a_data
		call   _071fe4_func
		mov    %al,_0e40a0_data
		mov    %esi,%eax
		call   _01d374_func
		jmp    _072d9e_jump

	_0724da_jump:
		mov    %esi,%eax
		mov    0x000081(%esi),%dl
		call   _01db14_func
		mov    0x000081(%esi),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _072516_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		xor    %bl,%bl
		movw   $0x000000,0x000040(%esi)
		mov    %bl,_0ceed5_data

	_072516_jump:
		mov    0x00006c(%esi),%al
		cmp    $0x000003,%al
		ja     _072d9e_jump
		xor    %edx,%edx
		mov    %al,%dl
		jmp    *%cs:_07228c_switch(,%edx,4)

	_07252d_case:
		xor    %edx,%edx
		mov    0x00006d(%esi),%dl
		lea    0x000000(,%edx,4),%ebx
		mov    0x00000c(%esi),%edx
		and    $0x0000ff,%eax
		mov    (%edx,%ebx,1),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _072d9e_jump
		mov    0x00006b(%esi),%cl
		cmp    $0x000018,%cl
		je     _072589_jump
		cmp    $0x00001c,%cl
		jne    _072572_jump
		cmpb   $0x000000,_0ceed9_data
		je     _072589_jump

	_072572_jump:
		cmpb   $0x000020,0x00006b(%esi)
		jne    _072d9e_jump
		cmpb   $0x000000,_0ceed9_data
		jne    _072d9e_jump

	_072589_jump:
		mov    %esi,%eax
		call   _072038_func
		jmp    _072d9e_jump

	_072595_case:
		cmpb   $0x000000,_0ceed5_data
		je     _072d9e_jump
		xor    %cl,%cl
		mov    %cl,_0e4094_data
		jmp    _072d9e_jump

	_0725af_case:
		cmpb   $0x000000,_0ceed5_data
		je     _072d9e_jump
		mov    _0ceed9_data,%al
		cmp    $0x000001,%al
		ja     _07265c_jump
		mov    _0e4084_data,%al
		cmp    $0x000009,%al
		ja     _072d9e_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_07229c_switch(,%eax,4)

	_0725e3_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d364_func
		jmp    _072d9e_jump

	_0725f4_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000003,%edi
		call   _01d374_func
		mov    $0x000002,%bl
		mov    %di,_0e4098_data
		mov    %bl,_0ceed6_data
		jmp    _072d9e_jump

	_07261b_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		mov    $0x000002,%ecx
		call   _01d374_func
		mov    $0x000003,%dh
		mov    %cx,_0e4098_data
		mov    %dh,_0ceed6_data
		jmp    _072d9e_jump

	_072642_case:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movb   $0x000004,_0ceed6_data
		jmp    _072d9e_jump

	_07265c_jump:
		mov    %al,%ah
		dec    %ah
		mov    %ah,_0ceed9_data
		jmp    _072d9e_jump

	_07266b_case:
		cmpb   $0x000000,_0ceed5_data
		je     _072d9e_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d364_func
		call   _071fe4_func
		mov    %al,_0e40a0_data
		jmp    _072d9e_jump

	_072693_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _0726cd_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0726cd_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _0726cd_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0e4097_data,%bl
		mov    _0e4096_data,%dl
		xor    %cl,%cl
		call   _01d374_func
		mov    %cl,_0e4094_data
		mov    %cl,_0ceed5_data

	_0726cd_jump:
		mov    0x00006d(%esi),%al
		test   %al,%al
		jne    _0727cc_jump
		testb  $0x000008,0x000081(%esi)
		jne    _0726ef_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edi
		mov    0x000068(%esi),%al
		add    %edi,%eax
		test   %eax,%eax
		jl     _072713_jump

	_0726ef_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072719_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    _0cecd6_data,%eax
		sar    $0x000010,%eax
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _072719_jump

	_072713_jump:
		movw   $0x000000,0x000040(%esi)

	_072719_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _072d9e_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _072d9e_jump
		jbe    _07273c_jump
		cmp    $0x00000b,%al
		je     _072773_jump
		jmp    _072d9e_jump

	_07273c_jump:
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ebp
		movw   $0x00fffa,0x000042(%esi)
		sub    $0x000006,%ebp
		mov    0x000081(%esi),%dh
		mov    %ebp,0x00002c(%esi)
		test   $0x000008,%dh
		je     _072765_jump
		mov    $0x000001,%eax
		jmp    _07276a_jump

	_072765_jump:
		mov    $0xffffffff,%eax

	_07276a_jump:
		mov    %ax,0x000040(%esi)
		jmp    _072d9e_jump

	_072773_jump:
		mov    _0e4098_data,%dx
		dec    %edx
		mov    %dx,_0e4098_data
		test   %dx,%dx
		jle    _0727a0_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%esi)
		jmp    _072d9e_jump

	_0727a0_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _0727be_jump
		mov    $0x000002,%eax
		jmp    _0727c3_jump

	_0727be_jump:
		mov    $0xfffffffe,%eax

	_0727c3_jump:
		mov    %ax,0x000040(%esi)
		jmp    _072d9e_jump

	_0727cc_jump:
		cmp    $0x000001,%al
		jne    _072d9e_jump
		testb  $0x000008,0x000081(%esi)
		jne    _0727e7_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _072812_jump

	_0727e7_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072d9e_jump
		mov    _0cecd6_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _072d9e_jump

	_072812_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%bl
		sub    %eax,%edx
		and    $0x0000f7,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%esi)
		and    $0x000001,%al
		mov    %bl,%bh
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%bh
		mov    %esi,%eax
		mov    %bh,0x000081(%esi)
		xor    %ebx,%ebx
		mov    $0x000001,%cl
		call   _01d374_func
		mov    %cl,_0ceed6_data
		movw   $0x000000,0x000040(%esi)
		jmp    _072d9e_jump

	_072868_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _0728a2_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _0728a2_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _0728a2_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0e4097_data,%bl
		mov    _0e4096_data,%dl
		call   _01d374_func
		xor    %bh,%bh
		mov    %bh,_0e4094_data
		mov    %bh,_0ceed5_data

	_0728a2_jump:
		mov    0x00006d(%esi),%ch
		test   %ch,%ch
		jne    _072987_jump
		testb  $0x000008,0x000081(%esi)
		jne    _0728c4_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ebx
		mov    0x000068(%esi),%al
		add    %ebx,%eax
		test   %eax,%eax
		jl     _0728e8_jump

	_0728c4_jump:
		testb  $0x000008,0x000081(%esi)
		je     _0728ee_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    _0cecd6_data,%eax
		sar    $0x000010,%eax
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _0728ee_jump

	_0728e8_jump:
		movw   $0x000000,0x000040(%esi)

	_0728ee_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _072d9e_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _072d9e_jump
		jbe    _072911_jump
		cmp    $0x00000b,%al
		je     _072948_jump
		jmp    _072d9e_jump

	_072911_jump:
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		mov    0x00002c(%esi),%ecx
		movw   $0x00fffa,0x000042(%esi)
		sub    $0x000006,%ecx
		mov    0x000081(%esi),%dl
		mov    %ecx,0x00002c(%esi)
		test   $0x000008,%dl
		je     _07293a_jump
		mov    $0x000001,%eax
		jmp    _07293f_jump

	_07293a_jump:
		mov    $0xffffffff,%eax

	_07293f_jump:
		mov    %ax,0x000040(%esi)
		jmp    _072d9e_jump

	_072948_jump:
		mov    _0e4098_data,%ax
		mov    $0x000001,%edx
		dec    %eax
		xor    %ebx,%ebx
		mov    %ax,_0e4098_data
		mov    %esi,%eax
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _072973_jump
		mov    $0x000002,%eax
		jmp    _072978_jump

	_072973_jump:
		mov    $0xfffffffe,%eax

	_072978_jump:
		movw   $0x00001e,0x000056(%esi)
		mov    %ax,0x000040(%esi)
		jmp    _072d9e_jump

	_072987_jump:
		cmp    $0x000001,%ch
		jne    _072d9e_jump
		mov    _0e4098_data,%bx
		cmp    $0x000001,%bx
		jne    _0729c9_jump
		mov    0x000056(%esi),%cx
		sub    %ebx,%ecx
		mov    %cx,0x000056(%esi)
		cmp    %bx,%cx
		jge    _072d9e_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%esi)
		jmp    _072d9e_jump

	_0729c9_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _0729dc_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _072a07_jump

	_0729dc_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072d9e_jump
		mov    _0cecd6_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _072d9e_jump

	_072a07_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dh
		and    $0x000001,%al
		and    $0x0000f7,%dh
		shl    $0x000003,%al
		mov    %dh,%bl
		mov    %dh,0x000081(%esi)
		or     %al,%bl
		xor    %edx,%edx
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		xor    %ebx,%ebx
		call   _01d374_func
		mov    $0x000001,%bh
		movw   $0x000000,0x000040(%esi)
		mov    %bh,_0ceed6_data
		jmp    _072d9e_jump

	_072a5d_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _072a97_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _072a97_jump
		cmpb   $0x000003,0x00006c(%esi)
		jne    _072a97_jump
		mov    %esi,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0e4097_data,%bl
		mov    _0e4096_data,%dl
		call   _01d374_func
		xor    %bl,%bl
		mov    %bl,_0e4094_data
		mov    %bl,_0ceed5_data

	_072a97_jump:
		mov    0x00006d(%esi),%cl
		test   %cl,%cl
		jne    _072ccf_jump
		testb  $0x000008,0x000081(%esi)
		jne    _072ab9_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%ecx
		mov    0x000068(%esi),%al
		add    %ecx,%eax
		test   %eax,%eax
		jl     _072add_jump

	_072ab9_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072ae3_jump
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		mov    _0cecd6_data,%eax
		sar    $0x000010,%eax
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _072ae3_jump

	_072add_jump:
		movw   $0x000000,0x000040(%esi)

	_072ae3_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _072d9e_jump
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _072d9e_jump
		jbe    _072b0a_jump
		cmp    $0x00000b,%al
		je     _072bd2_jump
		jmp    _072d9e_jump

	_072b0a_jump:
		mov    0x000028(%esi),%ax
		mov    _0cdabc_data,%dx
		add    $0x000030,%eax
		movb   $0x000005,0x000072(%esi)
		sub    %edx,%eax
		movb   $0x000000,0x000071(%esi)
		test   %ax,%ax
		jge    _072b2b_jump
		neg    %eax

	_072b2b_jump:
		cmp    $0x000064,%ax
		jle    _072b75_jump
		movswl %ax,%edx
		mov    $0x000014,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		cmp    $0x000009,%ax
		jle    _072b52_jump
		movw   $0x000009,0x000042(%esi)
		jmp    _072b5e_jump

	_072b52_jump:
		cmp    $0x000004,%ax
		jge    _072b5e_jump
		movw   $0x000004,0x000042(%esi)

	_072b5e_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072b6e_jump
		mov    $0x000002,%eax
		jmp    _072bb7_jump

	_072b6e_jump:
		mov    $0xfffffffe,%eax
		jmp    _072bb7_jump

	_072b75_jump:
		movswl %ax,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %ax,0x000042(%esi)
		cmp    $0x000009,%ax
		jle    _072b96_jump
		movw   $0x000009,0x000042(%esi)
		jmp    _072ba2_jump

	_072b96_jump:
		cmp    $0x000004,%ax
		jge    _072ba2_jump
		movw   $0x000004,0x000042(%esi)

	_072ba2_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072bb2_jump
		mov    $0x000001,%eax
		jmp    _072bb7_jump

	_072bb2_jump:
		mov    $0xffffffff,%eax

	_072bb7_jump:
		mov    %ax,0x000040(%esi)
		mov    0x000040(%esi),%eax
		mov    0x00002c(%esi),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x00002c(%esi)
		negw   0x000042(%esi)
		jmp    _072d9e_jump

	_072bd2_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072beb_jump
		mov    0x000028(%esi),%eax
		mov    _0cdabc_data,%edi
		add    $0x000030,%eax
		cmp    %edi,%eax
		jl     _072c04_jump

	_072beb_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _072c17_jump
		mov    0x000028(%esi),%eax
		mov    _0cdabc_data,%ebp
		add    $0x000030,%eax
		cmp    %ebp,%eax
		jle    _072c17_jump

	_072c04_jump:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _072d9e_jump

	_072c17_jump:
		testb  $0x000008,0x000081(%esi)
		jne    _072c2a_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _072c4d_jump

	_072c2a_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072ca3_jump
		mov    _0cecd6_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _072ca3_jump

	_072c4d_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%esi),%bh
		sub    %eax,%edx
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,%cl
		mov    %bh,0x000081(%esi)
		and    $0x000001,%al
		xor    %ebx,%ebx
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%cl
		mov    %esi,%eax
		mov    %cl,0x000081(%esi)
		call   _01d374_func
		mov    $0x000001,%ch
		movw   $0x000000,0x000040(%esi)
		mov    %ch,_0ceed6_data
		jmp    _072d9e_jump

	_072ca3_jump:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		testb  $0x000008,0x000081(%esi)
		je     _072cc1_jump
		mov    $0x000002,%eax
		jmp    _072cc6_jump

	_072cc1_jump:
		mov    $0xfffffffe,%eax

	_072cc6_jump:
		mov    %ax,0x000040(%esi)
		jmp    _072d9e_jump

	_072ccf_jump:
		cmp    $0x000001,%cl
		jne    _072d9e_jump
		testb  $0x000008,0x000081(%esi)
		jne    _072ceb_jump
		mov    0x000028(%esi),%eax
		add    $0x000040,%eax
		test   %eax,%eax
		jl     _072d16_jump

	_072ceb_jump:
		testb  $0x000008,0x000081(%esi)
		je     _072d9e_jump
		mov    _0cecd6_data,%eax
		mov    0x000028(%esi),%edx
		sar    $0x000010,%eax
		add    $0x0000c0,%edx
		add    $0x000140,%eax
		cmp    %eax,%edx
		jle    _072d9e_jump

	_072d16_jump:
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		mov    0x000081(%esi),%dl
		and    $0x000001,%al
		and    $0x0000f7,%dl
		shl    $0x000003,%al
		mov    %dl,0x000081(%esi)
		mov    %dl,%dh
		xor    %ebx,%ebx
		or     %al,%dh
		mov    %esi,%eax
		mov    %dh,0x000081(%esi)
		xor    %edx,%edx
		call   _01d374_func
		mov    $0x000001,%bl
		movw   $0x000000,0x000040(%esi)
		mov    %bl,_0ceed6_data
		jmp    _072d9e_jump

	_072d69_jump:
		mov    _0e4098_data,%bx
		dec    %ebx
		mov    %bx,_0e4098_data
		cmp    $0x000001,%bx
		jge    _072d9e_jump
		mov    $0x0003e7,%edi
		mov    $0x000001,%ch
		mov    _0cec78_data,%al
		mov    %di,_0e4098_data
		or     $0x000004,%al
		mov    %ch,_0ceeb8_data
		mov    %al,_0cec78_data

	_072d9e_jump:
		mov    _0cecd6_data,%ecx
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		xor    %ebx,%ebx
		add    %eax,%edx
		mov    0x00003e(%esi),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		add    $0x00012f,%ecx
		add    %edx,%eax
		cmp    %ebx,%eax
		jl     _072dd0_jump
		cmp    %ecx,%eax
		jg     _072dd0_jump
		mov    $0x000001,%eax
		jmp    _072dd2_jump

	_072dd0_jump:
		xor    %eax,%eax

	_072dd2_jump:
		test   %eax,%eax
		jne    _072ddc_jump
		movw   $0x000000,0x000040(%esi)

	_072ddc_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_072de4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpw   $0x000000,0x000042(%eax)
		jle    _072e22_jump
		call   _0252c0_func
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    %bx,_0cec96_data
		mov    $0x00000b,%ebx
		call   _01d374_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _053ac8_func

	_072e22_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_072e28_switch:
		.long   _072f65_case
		.long   _072fd6_case
		.long   _0730b4_case
		.long   _0731ad_case

_072e38_switch:
		.long   _0731ec_case
		.long   _073308_case
		.long   _0731ec_case
		.long   _0731ec_case
		.long   _073308_case
		.long   _073308_case
		.long   _073308_case
		.long   _073308_case
		.long   _073308_case
		.long   _073308_case
		.long   _073211_case
		.long   _0731ec_case




_072e68_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		movb   $0x000001,_0ceead_data
		mov    %esi,%eax
		call   _0721a0_func
		mov    0x000028(%esi),%ax
		mov    %ax,_0e4088_data
		mov    0x00002c(%esi),%ax
		mov    %ax,_0e408a_data
		mov    %esi,%eax
		call   _072214_func
		cmpb   $0x000001,_0e4094_data
		jne    _072ea9_jump
		mov    %esi,%eax
		call   _072100_func

	_072ea9_jump:
		xor    %edx,%edx
		mov    0x00006a(%esi),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%esi),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%esi),%dl
		cmp    %eax,%edx
		jne    _072f07_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0cee3d_data(%eax),%dh
		test   %dh,%dh
		jne    _072f07_jump
		mov    $0x000001,%bh
		mov    %dh,_0ceed1_data
		mov    %bh,_0ceed5_data
		jmp    _072f0f_jump

	_072f07_jump:
		xor    %bl,%bl
		mov    %bl,_0ceed5_data

	_072f0f_jump:
		mov    _0cdabc_data,%ebx
		mov    _0cecd6_data,%eax
		add    $0x000096,%ebx
		sar    $0x000010,%eax
		mov    0x000028(%esi),%dx
		cmp    %eax,%ebx
		jle    _072f4b_jump
		mov    _0cda88_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		mov    _0cdac0_data,%ebx
		sub    $0x00006e,%eax
		cmp    %ebx,%eax
		jge    _072f4b_jump
		mov    0x000076(%esi),%al
		mov    %al,_0e4095_data

	_072f4b_jump:
		mov    _0ceed6_data,%al
		cmp    $0x000003,%al
		ja     _073308_case
		and    $0x0000ff,%eax
		jmp    *%cs:_072e28_switch(,%eax,4)

	_072f65_case:
		mov    %esi,%eax
		call   _0252c0_func
		movswl %dx,%eax
		mov    _0cdabc_data,%ebx
		add    $0x0000dc,%eax
		cmp    %ebx,%eax
		jle    _072f92_jump
		lea    0x0000dc(%ebx),%eax
		movswl %dx,%edx
		cmp    %edx,%eax
		jle    _072f92_jump
		movb   $0x000001,_0ceed1_data

	_072f92_jump:
		cmpb   $0x000000,_0ceed1_data
		je     _073308_case
		cmpb   $0x000000,_0ceed5_data
		je     _073308_case
		mov    $0x000001,%cl
		mov    $0x000001,%ebx
		xor    %al,%al
		xor    %edx,%edx
		mov    %cl,_0ceed6_data
		mov    %al,_0ceed4_data
		mov    $0x000002,%ch
		mov    %esi,%eax
		mov    %ch,_0ceed9_data
		call   _01d374_func
		jmp    _073308_case

	_072fd6_case:
		mov    0x00006c(%esi),%al
		cmp    $0x000002,%al
		jb     _072ff0_jump
		jbe    _073063_jump
		cmp    $0x000003,%al
		je     _07309b_jump
		jmp    _073308_case

	_072ff0_jump:
		cmp    $0x000001,%al
		jne    _073308_case
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _073308_case
		mov    0x00006b(%esi),%bh
		cmp    $0x000018,%bh
		je     _073051_jump
		cmp    $0x00001c,%bh
		jne    _07303a_jump
		cmpb   $0x000001,_0ceed4_data
		ja     _073051_jump

	_07303a_jump:
		cmpb   $0x000020,0x00006b(%esi)
		jne    _073308_case
		cmpb   $0x000003,_0ceed4_data
		jbe    _073308_case

	_073051_jump:
		mov    %esi,%eax
		call   _072038_func
		incb   _0ceed4_data
		jmp    _073308_case

	_073063_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _073308_case
		mov    _0ceed9_data,%dl
		cmp    $0x000001,%dl
		ja     _07308c_jump
		mov    $0x000001,%edx
		mov    %esi,%eax
		call   _01d364_func
		jmp    _073308_case

	_07308c_jump:
		mov    %dl,%dh
		dec    %dh
		mov    %dh,_0ceed9_data
		jmp    _073308_case

	_07309b_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _073308_case
		xor    %al,%al
		mov    %al,_0e4094_data
		jmp    _073308_case

	_0730b4_case:
		mov    0x00006c(%esi),%al
		cmp    $0x00000a,%al
		jb     _0730c6_jump
		jbe    _0730f6_jump
		cmp    $0x00000b,%al
		je     _073131_jump
		jmp    _073308_case

	_0730c6_jump:
		cmp    $0x000003,%al
		jne    _073308_case
		cmpb   $0x000000,_0ceed5_data
		je     _073308_case
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %cl,%cl
		xor    %edx,%edx
		mov    %cl,_0e4094_data
		call   _01d374_func
		jmp    _073308_case

	_0730f6_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _073308_case
		movb   $0x000005,0x000072(%esi)
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fffa,0x000042(%esi)
		mov    $0x000002,%ebx
		mov    0x00002c(%esi),%eax
		movw   $0x00ffff,0x000040(%esi)
		sub    $0x000006,%eax
		mov    %bx,_0e4098_data
		mov    %eax,0x00002c(%esi)
		jmp    _073308_case

	_073131_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _073308_case
		mov    _0cdabc_data,%eax
		mov    0x000028(%esi),%ebp
		sub    $0x000032,%eax
		cmp    %ebp,%eax
		jle    _07319a_jump
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		and    $0x000001,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,0x000081(%esi)
		shl    $0x000003,%al
		mov    %ah,%dl
		or     %al,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		xor    %edx,%edx
		call   _01d364_func
		movb   $0x000003,_0ceed6_data
		jmp    _073308_case

	_07319a_jump:
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		jmp    _073308_case

	_0731ad_case:
		mov    0x00006d(%esi),%al
		cmp    $0x000001,%al
		jb     _0731bf_jump
		jbe    _07324a_jump
		jmp    _073308_case

	_0731bf_jump:
		test   %al,%al
		jne    _073308_case
		cmpb   $0x000000,_0ceed5_data
		je     _073308_case
		mov    0x00006c(%esi),%al
		cmp    $0x00000b,%al
		ja     _073308_case
		and    $0x0000ff,%eax
		jmp    *%cs:_072e38_switch(,%eax,4)

	_0731ec_case:
		mov    $0x000001,%edx
		mov    %esi,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		xor    %cl,%cl
		mov    _0e4098_data,%ax
		mov    %cl,_0e4094_data
		mov    %ax,0x000040(%esi)
		jmp    _073308_case

	_073211_case:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %esi,%eax
		call   _01d374_func
		movb   $0x000000,0x000071(%esi)
		movw   $0x00fff9,0x000042(%esi)
		movw   $0x000002,0x000040(%esi)
		mov    0x000072(%esi),%al
		mov    0x00002c(%esi),%edi
		movb   $0x000005,0x000072(%esi)
		sub    $0x000007,%edi
		mov    %al,0x00006b(%esi)
		mov    %edi,0x00002c(%esi)
		jmp    _073308_case

	_07324a_jump:
		xor    %eax,%eax
		mov    0x00002c(%esi),%ecx
		mov    0x000069(%esi),%al
		add    %ecx,%eax
		mov    _0cda86_data,%edx
		add    $0x000008,%eax
		sar    $0x000010,%edx
		sar    $0x000004,%eax
		imul   %edx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%bl
		add    $0x000032,%edx
		add    %ebx,%edx
		sar    $0x000004,%edx
		add    %edx,%eax
		movswl %ax,%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		mov    0x000002(%edx,%eax,2),%al
		and    $0x0000ff,%eax
		testb  $0x000002,_092224_data(%eax)
		jne    _0732b2_jump
		mov    $0x00000a,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000000,0x000040(%esi)
		jmp    _073308_case

	_0732b2_jump:
		mov    0x000028(%esi),%edx
		mov    _0cecfe_data,%eax
		add    $0x000096,%edx
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _073302_jump
		cmpw   $0x000002,_0e4098_data
		jne    _0732ee_jump
		cmpb   $0x000000,_0cee3f_data
		je     _073302_jump
		movw   $0x000001,0x000040(%esi)
		cmpb   $0x000002,_0cee41_data
		jae    _073308_case
		decb   0x00006b(%esi)
		jmp    _073308_case

	_0732ee_jump:
		movw   $0x000001,0x000040(%esi)
		cmpb   $0x000000,_0cee3f_data
		je     _073308_case
		decb   0x00006b(%esi)
		jmp    _073308_case

	_073302_jump:
		movw   $0x000002,0x000040(%esi)

	_073308_case:
		mov    _0cecd6_data,%ecx
		mov    0x000028(%esi),%edi
		mov    0x00003e(%esi),%edx
		xor    %eax,%eax
		xor    %ebx,%ebx
		sar    $0x000010,%ecx
		mov    0x000068(%esi),%al
		sar    $0x000010,%edx
		add    %edi,%eax
		add    $0x00012f,%ecx
		add    %edx,%eax
		cmp    %ebx,%eax
		jl     _07333a_jump
		cmp    %ecx,%eax
		jg     _07333a_jump
		mov    $0x000001,%eax
		jmp    _07333c_jump

	_07333a_jump:
		xor    %eax,%eax

	_07333c_jump:
		test   %eax,%eax
		jne    _073346_jump
		movw   $0x000000,0x000040(%esi)

	_073346_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073350_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0ceed6_data,%al
		cmp    $0x000002,%al
		jb     _07339d_jump
		cmp    $0x000003,%al
		ja     _07339d_jump
		cmpw   $0x000000,0x000042(%ecx)
		jle    _07339d_jump
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _0252c0_func
		xor    %edx,%edx
		mov    %bx,_0cec90_data
		mov    %ecx,%eax
		mov    $0x00000b,%ebx
		call   _01d374_func
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		movw   $0x000000,0x000042(%ecx)
		call   _053ac8_func

	_07339d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0733a4_func:
		mov    0x000076(%eax),%al
		xor    %ah,%ah
		inc    %eax
		mov    %ax,_0e4098_data
		ret    



_0733b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _0721a0_func
		mov    0x000028(%ecx),%ax
		mov    %ax,_0e4088_data
		mov    0x00002c(%ecx),%ax
		mov    %ax,_0e408a_data
		mov    %ecx,%eax
		call   _072214_func
		cmpb   $0x000002,_0ceed6_data
		jne    _0733f5_jump
		mov    0x00006d(%ecx),%dl
		test   %dl,%dl
		jne    _0733f5_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _0733f5_jump
		mov    %dl,_0ceed6_data

	_0733f5_jump:
		xor    %edx,%edx
		mov    0x00006a(%ecx),%dl
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    0x000004(%ecx),%edx
		mov    0x00000a(%edx,%eax,4),%ax
		and    $0x00ffff,%eax
		xor    %edx,%edx
		dec    %eax
		mov    0x00006b(%ecx),%dl
		cmp    %eax,%edx
		jne    _073453_jump
		xor    %eax,%edx
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		mov    _0cee3d_data(%eax),%bh
		test   %bh,%bh
		jne    _073453_jump
		mov    $0x000001,%ah
		mov    %bh,_0ceed1_data
		mov    %ah,_0ceed5_data
		jmp    _07345a_jump

	_073453_jump:
		xor    %al,%al
		mov    %al,_0ceed5_data

	_07345a_jump:
		mov    _0ceed6_data,%al
		cmp    $0x000001,%al
		jb     _07354f_jump
		jbe    _073475_jump
		cmp    $0x000002,%al
		je     _07352c_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_073475_jump:
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%al
		jb     _07354f_jump
		jbe    _07348e_jump
		cmp    $0x000003,%al
		je     _073517_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07348e_jump:
		cmpb   $0x000018,0x00006b(%ecx)
		jne    _0734bf_jump
		xor    %edx,%edx
		mov    0x00000c(%ecx),%ebx
		mov    0x00006d(%ecx),%dl
		and    $0x0000ff,%eax
		mov    (%ebx,%edx,4),%edx
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _0734bf_jump
		mov    %ecx,%eax
		call   _072038_func

	_0734bf_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _07354f_jump
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%edx
		and    $0x0000ff,%eax
		mov    0x000081(%ecx),%bl
		sub    %eax,%edx
		and    $0x0000f7,%bl
		mov    %edx,%eax
		mov    %bl,0x000081(%ecx)
		and    $0x000001,%al
		mov    %bl,%bh
		shl    $0x000003,%al
		xor    %edx,%edx
		or     %al,%bh
		mov    %ecx,%eax
		mov    %bh,0x000081(%ecx)
		call   _01d364_func
		incb   _0ceed6_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_073517_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _07354f_jump
		xor    %cl,%cl
		mov    %cl,_0e4094_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07352c_jump:
		cmpb   $0x000000,_0ceed5_data
		je     _07354f_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _07354f_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		movw   $0x000002,0x000040(%ecx)
		call   _01d374_func

	_07354f_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_073554_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0ceed6_data
		jne    _073579_jump
		mov    $0x000001,%dh
		mov    $0x000001,%ebx
		mov    %dh,_0ceed6_data
		mov    %dh,_0ceed9_data
		xor    %edx,%edx
		call   _01d374_func

	_073579_jump:
		pop    %edx
		pop    %ebx
		ret    



_07357c_func:
		cmpb   $0x000002,_0ceed6_data
		jae    _07358b_jump
		mov    $0xffffffff,%eax
		ret    

	_07358b_jump:
		mov    $0x000001,%eax
		ret    



_0735a0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %edx,0x00000c(%esp)
		mov    %ecx,0x000008(%esp)
		xor    %ah,%ah
		mov    %ax,_0e5d6c_data
		cmp    $0x0000c8,%bx
		jbe    _0735e8_jump
		mov    _0cda88_data,%eax
		sar    $0x000010,%eax
		xor    %esi,%esi
		shl    $0x000004,%eax
		mov    %bx,%si
		lea    -0x0000c8(%eax),%edx
		sub    $0x0000c8,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %ax,_0e5d64_data
		jmp    _0735f1_jump

	_0735e8_jump:
		movw   $0x000001,_0e5d64_data

	_0735f1_jump:
		mov    _0e5d64_data,%cx
		test   %cx,%cx
		jne    _073608_jump
		movw   $0x000002,_0e5d64_data
		jmp    _073612_jump

	_073608_jump:
		mov    %ecx,%esi
		inc    %esi
		mov    %si,_0e5d64_data

	_073612_jump:
		mov    _0cda88_data,%eax
		sar    $0x000010,%eax
		shl    $0x000004,%eax
		xor    %esi,%esi
		lea    -0x0000c8(%eax),%edx
		mov    _0e5d64_data,%si
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		xor    %eax,%eax
		mov    %bx,%ax
		lea    -0x0000c8(%eax),%esi
		sub    %edx,%esi
		lea    -0x000001(%esi),%edx
		mov    %dx,_0e5d68_data
		cmpw   $0x000005,_0cecd4_data
		jne    _07367d_jump
		cmpw   $0x00000a,_0cecc0_data
		jne    _07367d_jump
		mov    0x000020(%esp),%ecx
		xor    %esi,%esi
		mov    0x000008(%esp),%ebx
		mov    0x00000c(%esp),%si
		mov    %eax,%edx
		mov    %esi,%eax
		call   _0748c4_func
		jmp    _073844_jump

	_07367d_jump:
		mov    _0cecd2_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %edx,%eax
		xor    %edx,%edx
		mov    _0e5d6c_data,%dx
		mov    _097cb4_data(%edx,%eax,2),%al
		xor    %ah,%ah
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    %ax,_0e5d6a_data
		jmp    _07379e_jump

	_0736b2_jump:
		imul   $0x000018,%esi,%eax
		mov    _0cecd2_data,%edi
		sar    $0x000010,%edi
		dec    %edi
		imul   $0x005dc0,%edi,%ebp
		mov    %ebp,(%esp)
		movzwl _0e5d6c_data,%ebp
		imul   $0x000960,%ebp,%ecx
		mov    %ecx,0x000004(%esp)
		mov    (%esp),%ecx
		shl    $0x000003,%esi
		add    0x000004(%esp),%ecx
		add    %ecx,%esi
		mov    _097cf0_data(%esi),%cx
		mov    %cx,_0e4144_data(%eax)
		mov    _097cf2_data(%esi),%cl
		mov    %cl,_0e414c_data(%eax)
		mov    _097cf4_data(%esi),%cl
		mov    %cl,_0e414d_data(%eax)
		mov    _097cf6_data(%esi),%cl
		imul   $0x00000a,%edi,%esi
		mov    %cl,_0e4148_data(%eax)
		xor    %ecx,%ecx
		mov    %cx,_0e414a_data(%eax)
		add    %ebp,%esi
		mov    %cx,_0e4158_data(%eax)
		mov    _097c78_data(%esi),%cl
		mov    %bx,_0e4146_data(%eax)
		test   %cl,%cl
		je     _073742_jump
		cmp    $0x000002,%cl
		jne    _073773_jump

	_073742_jump:
		xor    %esi,%esi
		movswl %bx,%eax
		mov    0x00000c(%esp),%si
		imul   %eax,%esi
		imul   $0x000140,%eax,%eax
		mov    0x000008(%esp),%edi
		add    %esi,%edi
		movswl %dx,%esi
		imul   $0x000018,%esi,%esi
		add    0x000020(%esp),%eax
		mov    %edi,_0e4150_data(%esi)
		mov    %eax,_0e4154_data(%esi)
		jmp    _07378e_jump

	_073773_jump:
		mov    0x000008(%esp),%edi
		movswl %bx,%esi
		add    %esi,%edi
		mov    %edi,_0e4150_data(%eax)
		mov    0x000020(%esp),%edi
		add    %edi,%esi
		mov    %esi,_0e4154_data(%eax)

	_07378e_jump:
		movswl %dx,%eax
		imul   $0x000018,%eax,%eax
		mov    _0e4144_data(%eax),%di
		inc    %edx
		add    %edi,%ebx

	_07379e_jump:
		xor    %eax,%eax
		movswl %dx,%esi
		mov    _0e5d6a_data,%ax
		cmp    %eax,%esi
		jl     _0736b2_jump
		mov    _0cecd2_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e5d6c_data,%ax
		mov    _0baf70_data(%edx,%eax,1),%al
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ax,_0e5d66_data
		jmp    _073834_jump

	_0737e2_jump:
		mov    _0cecd2_data,%esi
		sar    $0x000010,%esi
		dec    %esi
		imul   $0x000640,%esi,%edi
		xor    %esi,%esi
		mov    _0e5d6c_data,%si
		imul   $0x0000a0,%esi,%esi
		add    %edi,%esi
		mov    _0bafac_data(%esi,%eax,8),%bx
		mov    %bx,_0e40a4_data(,%eax,8)
		mov    _0bafae_data(%esi,%eax,8),%bx
		mov    %bx,_0e40a6_data(,%eax,8)
		mov    _0bafb0_data(%esi,%eax,8),%bx
		inc    %edx
		mov    %bx,_0e40a8_data(,%eax,8)

	_073834_jump:
		xor    %esi,%esi
		movswl %dx,%eax
		mov    _0e5d66_data,%si
		cmp    %esi,%eax
		jl     _0737e2_jump

	_073844_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000004



_073850_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000064,%esp
		mov    %eax,0x000034(%esp)
		mov    %edx,0x000054(%esp)
		mov    %ebx,0x000060(%esp)
		mov    %ecx,0x000028(%esp)
		mov    _0cecd2_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e5d6c_data,%ax
		add    %edx,%eax
		mov    _097c78_data(%eax),%dl
		test   %dl,%dl
		je     _073898_jump
		cmp    $0x000002,%dl
		jne    _073d3c_jump

	_073898_jump:
		mov    0x000074(%esp),%eax
		mov    0x000060(%esp),%ecx
		mov    0x000054(%esp),%ebx
		mov    _0cecd4_data,%si
		sub    %ecx,%eax
		sub    $0x0000c8,%ebx
		mov    %ax,0x00003c(%esp)
		cmp    $0x000004,%si
		jne    _073953_jump
		mov    _0cecc0_data,%di
		cmp    %si,%di
		je     _0738d8_jump
		cmp    $0x00000b,%di
		jne    _073953_jump

	_0738d8_jump:
		mov    _0ced10_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpl   $0x000000,0x000024(%eax)
		je     _073953_jump
		xor    %edx,%edx
		mov    $0x0000c8,%esi
		mov    0x000078(%esp),%dx
		sub    %edx,%esi
		mov    0x00002c(%eax),%ecx
		mov    %esi,%edx
		sub    $0x00006e,%ecx
		xor    %esi,%edx
		sub    %esi,%ecx
		mov    0x000028(%esp),%dx
		cmp    %ecx,%edx
		jge    _07393f_jump
		mov    $0x0000c8,%edx
		mov    0x00002c(%eax),%ax
		mov    0x000078(%esp),%ecx
		sub    $0x00006e,%eax
		sub    %ecx,%edx
		sub    %edx,%eax
		mov    %eax,0x000028(%esp)
		test   %ax,%ax
		jge    _07393f_jump
		xor    %edi,%edi
		mov    %edi,0x000028(%esp)

	_07393f_jump:
		mov    0x000028(%esp),%eax
		mov    0x000078(%esp),%edx
		cmp    %dx,%ax
		jb     _073953_jump
		mov    %edx,%eax
		dec    %eax
		mov    %eax,0x000028(%esp)

	_073953_jump:
		mov    _0cecd2_data,%eax
		sar    $0x000010,%eax
		lea    -0x000001(%eax),%edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e5d6c_data,%ax
		cmpb   $0x000000,_097c78_data(%edx,%eax,1)
		jne    _0739de_jump
		cmpw   $0x000003,_0cecd4_data
		jne    _0739b3_jump
		cmpw   $0x00000a,_0cecc0_data
		jne    _0739b3_jump
		mov    $0x0000c8,%ecx
		mov    _0cece8_data,%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000078(%esp),%dx
		sar    %eax
		sub    %edx,%ecx
		add    $0x00000b,%eax
		add    %ecx,%eax
		mov    %ax,0x000020(%esp)
		jmp    _0739f2_jump

	_0739b3_jump:
		mov    _0cece8_data,%edx
		xor    %ecx,%ecx
		sar    $0x000010,%edx
		mov    _0e5d64_data,%cx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		xor    %edx,%edx
		mov    _0e5d68_data,%dx
		add    %edx,%eax
		mov    %ax,0x000020(%esp)
		jmp    _0739f2_jump

	_0739de_jump:
		mov    $0x0000c8,%eax
		mov    0x000078(%esp),%ecx
		mov    %ebx,%edx
		sub    %ecx,%eax
		add    %eax,%edx
		mov    %dx,0x000020(%esp)

	_0739f2_jump:
		xor    %eax,%eax
		mov    $0x0000c8,%edx
		mov    0x000078(%esp),%ax
		sub    %eax,%edx
		mov    %edx,%eax
		movswl %bx,%edx
		add    %edx,%eax
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%edx
		cmp    %eax,%edx
		jle    _073a22_jump
		mov    $0x0000c8,%eax
		sub    0x000078(%esp),%eax
		add    %eax,%ebx
		mov    %bx,0x000020(%esp)

	_073a22_jump:
		xor    %ebx,%ebx
		mov    _0e5d6a_data,%cx
		mov    %ebx,0x000050(%esp)
		test   %cx,%cx
		jbe    _073bb3_jump
		mov    0x000078(%esp),%eax
		mov    0x000028(%esp),%ebx
		sub    %ebx,%eax
		mov    %eax,0x00002c(%esp)

	_073a46_jump:
		xor    %eax,%eax
		mov    0x000050(%esp),%ax
		imul   $0x000018,%eax,%eax
		xor    %edx,%edx
		mov    0x000060(%esp),%dx
		movzwl _0e414a_data(%eax),%ebp
		mov    _0e4150_data(%eax),%ebx
		mov    _0e4154_data(%eax),%edi
		add    %ebx,%ebp
		add    %edx,%edi
		add    %edx,%ebp
		mov    0x00001e(%esp),%edx
		sar    $0x000010,%edx
		mov    0x000020(%esp),%ecx
		mov    %edx,%ebx
		mov    _0e4144_data(%eax),%si
		shl    $0x000008,%ebx
		shl    $0x000006,%edx
		mov    _0e4146_data(%eax),%ax
		add    %ebx,%edx
		sub    %ecx,%eax
		sub    %edx,%edi
		mov    %eax,%edx
		add    %esi,%edx
		test   %ax,%ax
		jge    _073acb_jump
		test   %dx,%dx
		jle    _073acb_jump
		test   %si,%si
		je     _073acb_jump
		cwtl   
		neg    %eax
		mov    %eax,%ecx
		mov    %eax,%ebx
		shl    $0x000008,%ecx
		shl    $0x000006,%ebx
		add    %ecx,%ebx
		add    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x000034(%esp),%bx
		imul   %ebx,%eax
		mov    %edx,%esi
		add    %eax,%ebp
		xor    %eax,%eax

	_073acb_jump:
		movswl %dx,%ebx
		mov    %ebx,0x00000c(%esp)
		xor    %ebx,%ebx
		mov    0x00000c(%esp),%ecx
		mov    0x000028(%esp),%bx
		cmp    %ecx,%ebx
		jge    _073b9a_jump
		movswl %ax,%ecx
		mov    %ecx,0x000008(%esp)
		xor    %ecx,%ecx
		mov    0x000078(%esp),%cx
		mov    %ecx,(%esp)
		mov    0x000008(%esp),%ecx
		cmp    (%esp),%ecx
		jge    _073b9a_jump
		cmp    %ecx,%ebx
		jle    _073b34_jump
		mov    0x00000c(%esp),%ecx
		cmp    (%esp),%ecx
		jle    _073b34_jump
		xor    %eax,%eax
		mov    0x000008(%esp),%esi
		mov    0x000034(%esp),%ax
		sub    %esi,%ebx
		imul   %ebx,%eax
		add    %eax,%ebp
		mov    %ebx,%eax
		shl    $0x000008,%eax
		shl    $0x000006,%ebx
		add    %ebx,%eax
		mov    0x00002c(%esp),%esi
		add    %eax,%edi
		jmp    _073b7a_jump

	_073b34_jump:
		xor    %ecx,%ecx
		mov    0x000028(%esp),%cx
		movswl %ax,%ebx
		cmp    %ecx,%ebx
		jge    _073b68_jump
		mov    %ecx,%edx
		sub    %ebx,%edx
		mov    %edx,%ebx
		xor    %edx,%edx
		mov    0x000034(%esp),%dx
		imul   %ebx,%edx
		add    %edx,%ebp
		mov    %ebx,%edx
		shl    $0x000008,%edx
		shl    $0x000006,%ebx
		add    %edx,%ebx
		mov    %ecx,%edx
		sub    %eax,%edx
		add    %ebx,%edi
		sub    %edx,%esi
		jmp    _073b7a_jump

	_073b68_jump:
		movswl %dx,%ebx
		xor    %edx,%edx
		mov    0x000078(%esp),%dx
		cmp    %edx,%ebx
		jle    _073b7a_jump
		mov    %edx,%esi
		sub    %eax,%esi

	_073b7a_jump:
		mov    0x00003a(%esp),%ecx
		mov    _0cc52c_data,%eax
		xor    %edx,%edx
		movswl %si,%ebx
		mov    0x000034(%esp),%dx
		mov    %ebp,%esi
		sar    $0x000010,%ecx
		sub    %eax,%esi
		call   *_0cc514_data

	_073b9a_jump:
		mov    0x000050(%esp),%ebx
		inc    %ebx
		mov    _0e5d6a_data,%cx
		mov    %ebx,0x000050(%esp)
		cmp    %cx,%bx
		jb     _073a46_jump

	_073bb3_jump:
		mov    0x000034(%esp),%esi
		mov    $0x000001,%eax
		mov    _0e5d66_data,%dx
		xor    %edi,%edi
		shr    %si
		mov    %edi,0x000024(%esp)
		mov    %eax,0x000048(%esp)
		mov    %esi,0x000034(%esp)
		test   %dx,%dx
		jbe    _07414c_jump

	_073bdd_jump:
		xor    %eax,%eax
		mov    0x000024(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0e40a8_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		cmpw   $0x000000,_0e4144_data(%edx)
		je     _073d15_jump
		xor    %ebx,%ebx
		mov    0x000048(%esp),%bx
		imul   $0x00000c,%ebx,%ebp
		mov    _0e40a4_data(%eax),%ax
		mov    _0e414a_data(%edx),%cx
		mov    _0ce188_data,%ebx
		sub    %ecx,%eax
		mov    (%ebx),%ebx
		mov    %ax,0x000040(%esp)
		add    %ebx,%ebp
		cmp    $0x000140,%ax
		jle    _073c39_jump
		mov    0x000034(%esp),%eax
		sub    %ax,0x000040(%esp)

	_073c39_jump:
		mov    0x00003e(%esp),%eax
		xor    %edx,%edx
		xor    %ebx,%ebx
		sar    $0x000010,%eax
		mov    0x000005(%ebp),%dl
		mov    0x000060(%esp),%bx
		add    %eax,%edx
		cmp    %ebx,%edx
		jle    _073ca6_jump
		xor    %edx,%edx
		mov    0x000024(%esp),%dx
		mov    0x000020(%esp),%ecx
		mov    _0e40a6_data(,%edx,8),%bx
		sub    %ecx,%ebx
		movswl %bx,%ebx
		mov    %ebx,0x000004(%esp)
		xor    %bh,%bh
		mov    0x000006(%ebp),%bl
		mov    %ebx,%ecx
		mov    _0ccba4_data,%edi
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%bl
		mov    _0ce188_data,%esi
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    0x000008(%esi),%esi
		mov    %bx,%cx
		mov    0x000000(%ebp),%ebx
		mov    _0c193c_data(,%edx,4),%edx
		add    %ebx,%esi
		mov    0x000004(%esp),%ebx
		call   _016d6a_func

	_073ca6_jump:
		mov    0x000034(%esp),%eax
		add    %ax,0x000040(%esp)
		xor    %edx,%edx
		mov    0x00003e(%esp),%eax
		mov    0x000074(%esp),%dx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _073d15_jump
		xor    %edx,%edx
		mov    0x000024(%esp),%dx
		mov    0x000020(%esp),%edi
		mov    _0e40a6_data(,%edx,8),%bx
		sub    %edi,%ebx
		movswl %bx,%ebx
		mov    _0ce188_data,%esi
		mov    %ebx,0x000004(%esp)
		xor    %bh,%bh
		xor    %ch,%ch
		mov    0x000006(%ebp),%bl
		mov    0x000005(%ebp),%cl
		shl    $0x000008,%ebx
		mov    0x000008(%esi),%esi
		add    %ecx,%ebx
		xor    %ecx,%ecx
		mov    _0c193c_data(,%edx,4),%edx
		mov    %bx,%cx
		mov    0x000000(%ebp),%ebx
		mov    _0ccba4_data,%edi
		add    %ebx,%esi
		mov    0x000004(%esp),%ebx
		call   _016d6a_func

	_073d15_jump:
		mov    0x000024(%esp),%esi
		mov    0x000048(%esp),%edi
		mov    _0e5d66_data,%dx
		inc    %esi
		inc    %edi
		mov    %esi,0x000024(%esp)
		mov    %edi,0x000048(%esp)
		cmp    %dx,%si
		jae    _07414c_jump
		jmp    _073bdd_jump

	_073d3c_jump:
		xor    %edx,%edx
		mov    _0e5d6a_data,%bx
		mov    %edx,0x000018(%esp)
		test   %bx,%bx
		jbe    _073fda_jump
		mov    0x000078(%esp),%eax
		sub    %ecx,%eax
		mov    0x000060(%esp),%esi
		mov    %eax,0x000058(%esp)
		mov    0x000074(%esp),%eax
		sub    %esi,%eax
		mov    %eax,0x000014(%esp)

	_073d6a_jump:
		xor    %edi,%edi
		mov    0x000018(%esp),%di
		imul   $0x000018,%edi,%edi
		xor    %eax,%eax
		xor    %edx,%edx
		mov    0x000034(%esp),%ax
		mov    _0e414a_data(%edi),%dx
		imul   %eax,%edx
		mov    _0e4150_data(%edi),%esi
		add    %edx,%esi
		xor    %edx,%edx
		mov    0x000028(%esp),%dx
		imul   %edx,%eax
		add    %eax,%esi
		imul   $0x000140,%edx,%eax
		mov    _0e4154_data(%edi),%ebx
		mov    _0e4144_data(%edi),%dx
		add    %ebx,%eax
		mov    %dx,0x000030(%esp)
		mov    _0e414a_data(%edi),%bx
		mov    0x000054(%esp),%edx
		mov    0x000028(%esp),%ecx
		sub    %ebx,%edx
		sub    %ecx,%edx
		xor    %ebx,%ebx
		mov    %dx,0x000038(%esp)
		mov    _0e4146_data(%edi),%dx
		mov    0x000030(%esp),%edi
		mov    %dx,0x00005c(%esp)
		add    %edi,%edx
		mov    0x000060(%esp),%bx
		movswl %dx,%ebp
		cmp    %ebx,%ebp
		jle    _073fc1_jump
		xor    %ecx,%ecx
		mov    0x00005a(%esp),%edi
		mov    0x000074(%esp),%cx
		sar    $0x000010,%edi
		mov    %ecx,0x000010(%esp)
		cmp    %ecx,%edi
		jge    _073fc1_jump
		cmpw   $0x000000,0x000030(%esp)
		je     _073fc1_jump
		cmp    %ebx,%edi
		jge    _073e32_jump
		cmp    0x000010(%esp),%ebp
		jle    _073e32_jump
		mov    0x000014(%esp),%edx
		sub    %edi,%ebx
		mov    %dx,0x000030(%esp)
		add    %ebx,%esi
		add    %ebx,%eax
		jmp    _073e76_jump

	_073e32_jump:
		xor    %ecx,%ecx
		mov    0x00005a(%esp),%ebx
		mov    0x000060(%esp),%cx
		sar    $0x000010,%ebx
		cmp    %ecx,%ebx
		jge    _073e61_jump
		mov    %ecx,%edx
		sub    %ebx,%edx
		add    %edx,%esi
		add    %edx,%eax
		mov    %ecx,%edx
		mov    0x00005c(%esp),%ecx
		mov    0x000030(%esp),%edi
		sub    %ecx,%edx
		sub    %edx,%edi
		mov    %di,0x000030(%esp)
		jmp    _073e76_jump

	_073e61_jump:
		xor    %ebx,%ebx
		movswl %dx,%ecx
		mov    0x000074(%esp),%bx
		cmp    %ebx,%ecx
		jle    _073e76_jump
		sub    %ebx,%edx
		sub    %dx,0x000030(%esp)

	_073e76_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000078(%esp),%dx
		mov    0x000028(%esp),%bx
		sub    %ebx,%edx
		mov    0x000036(%esp),%ebx
		sar    $0x000010,%ebx
		cmp    %edx,%ebx
		jle    _073e9a_jump
		mov    0x000058(%esp),%edx
		mov    %dx,0x000038(%esp)

	_073e9a_jump:
		cmpw   $0x000000,0x000038(%esp)
		jle    _073f0a_jump
		mov    0x00002e(%esp),%ecx
		mov    0x000036(%esp),%ebx
		xor    %edx,%edx
		mov    _0cc52c_data,%edi
		mov    0x000034(%esp),%dx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		add    %eax,%edi
		call   *_0cc514_data
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		imul   $0x000018,%eax,%eax
		mov    0x000036(%esp),%edx
		sar    $0x000010,%edx
		imul   $0x000140,%edx,%edx
		mov    _0e4150_data(%eax),%esi
		mov    _0e4154_data(%eax),%edi
		xor    %eax,%eax
		mov    0x000028(%esp),%ax
		imul   $0x000140,%eax,%eax
		add    %edi,%edx
		mov    0x000038(%esp),%ebx
		add    %edx,%eax
		mov    0x000058(%esp),%edx
		sub    %ebx,%edx
		mov    %dx,0x000038(%esp)
		jmp    _073f5a_jump

	_073f0a_jump:
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		imul   $0x000018,%eax,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000054(%esp),%bx
		mov    _0e414a_data(%eax),%dx
		sub    %edx,%ebx
		xor    %edx,%edx
		mov    0x000028(%esp),%dx
		mov    %edx,%ecx
		imul   $0x000140,%edx,%edx
		sub    %ebx,%ecx
		xor    %ebx,%ebx
		mov    0x000034(%esp),%bx
		imul   %ecx,%ebx
		mov    _0e4150_data(%eax),%esi
		mov    _0e4154_data(%eax),%eax
		add    %edx,%eax
		mov    0x000058(%esp),%edx
		mov    %dx,0x000038(%esp)
		add    %ebx,%esi

	_073f5a_jump:
		xor    %ebx,%ebx
		mov    0x00005a(%esp),%edx
		mov    0x000060(%esp),%bx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jge    _073f72_jump
		sub    %edx,%ebx
		add    %ebx,%esi
		add    %ebx,%eax

	_073f72_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x000078(%esp),%bx
		mov    0x000028(%esp),%dx
		sub    %edx,%ebx
		mov    0x000036(%esp),%edx
		sar    $0x000010,%edx
		cmp    %ebx,%edx
		jle    _073f96_jump
		mov    0x000058(%esp),%edx
		mov    %dx,0x000038(%esp)

	_073f96_jump:
		cmpw   $0x000000,0x000038(%esp)
		jle    _073fc1_jump
		mov    0x00002e(%esp),%ecx
		mov    0x000036(%esp),%ebx
		xor    %edx,%edx
		mov    _0cc52c_data,%edi
		mov    0x000034(%esp),%dx
		sar    $0x000010,%ecx
		sar    $0x000010,%ebx
		add    %eax,%edi
		call   *_0cc514_data

	_073fc1_jump:
		mov    0x000018(%esp),%esi
		inc    %esi
		mov    _0e5d6a_data,%di
		mov    %esi,0x000018(%esp)
		cmp    %di,%si
		jb     _073d6a_jump

	_073fda_jump:
		mov    $0x000001,%edx
		xor    %eax,%eax
		mov    _0e5d66_data,%bx
		mov    %eax,0x00001c(%esp)
		mov    %edx,0x00004c(%esp)
		test   %bx,%bx
		jbe    _07414c_jump

	_073ff9_jump:
		xor    %eax,%eax
		mov    0x00001c(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0e40a8_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		cmpw   $0x000000,_0e4144_data(%edx)
		je     _07412a_jump
		xor    %ebx,%ebx
		mov    0x00004c(%esp),%bx
		imul   $0x00000c,%ebx,%ebp
		mov    _0e40a6_data(%eax),%ax
		mov    _0e414a_data(%edx),%cx
		mov    _0ce188_data,%ebx
		sub    %ecx,%eax
		mov    (%ebx),%ebx
		mov    %ax,0x000044(%esp)
		add    %ebx,%ebp
		cmp    $0x0000c8,%ax
		jle    _074055_jump
		mov    0x000054(%esp),%eax
		sub    %ax,0x000044(%esp)

	_074055_jump:
		mov    0x000042(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000006(%ebp),%al
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    0x000028(%esp),%ax
		cmp    %eax,%edx
		jle    _0740bc_jump
		xor    %eax,%eax
		mov    0x00001c(%esp),%ax
		mov    _0e40a2_data(,%eax,8),%edx
		sar    $0x000010,%edx
		mov    %edx,0x000004(%esp)
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0ce188_data,%edx
		mov    0x000008(%edx),%esi
		mov    0x000000(%ebp),%edx
		mov    _0ccba4_data,%edi
		add    %edx,%esi
		mov    _0c193c_data(,%eax,4),%edx
		mov    0x000004(%esp),%eax
		call   _016d6a_func

	_0740bc_jump:
		mov    0x000054(%esp),%eax
		add    %ax,0x000044(%esp)
		xor    %eax,%eax
		mov    0x000042(%esp),%ebx
		mov    0x000078(%esp),%ax
		sar    $0x000010,%ebx
		cmp    %eax,%ebx
		jge    _07412a_jump
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%esi
		shl    $0x000008,%esi
		mov    0x000005(%ebp),%dl
		xor    %eax,%eax
		add    %esi,%edx
		xor    %esi,%esi
		mov    0x00001c(%esp),%ax
		mov    %dx,%si
		mov    _0ccba4_data,%edx
		mov    _0e40a2_data(,%eax,8),%ecx
		mov    %edx,0x000004(%esp)
		mov    _0ce188_data,%edx
		sar    $0x000010,%ecx
		mov    0x000000(%ebp),%ebp
		mov    0x000008(%edx),%edx
		mov    0x000004(%esp),%edi
		add    %edx,%ebp
		mov    _0c193c_data(,%eax,4),%edx
		mov    %ecx,%eax
		mov    %esi,%ecx
		mov    %ebp,%esi
		call   _016d6a_func

	_07412a_jump:
		mov    0x00001c(%esp),%esi
		mov    0x00004c(%esp),%edi
		mov    _0e5d66_data,%dx
		inc    %esi
		inc    %edi
		mov    %esi,0x00001c(%esp)
		mov    %edi,0x00004c(%esp)
		cmp    %dx,%si
		jb     _073ff9_jump

	_07414c_jump:
		add    $0x000064,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_074158_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000030,%esp
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000028(%esp)
		mov    %ebx,0x000008(%esp)
		mov    %ecx,0x000018(%esp)
		mov    _0cecd2_data,%edx
		sar    $0x000010,%edx
		dec    %edx
		lea    0x000000(,%edx,4),%eax
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e5d6c_data,%ax
		add    %edx,%eax
		mov    _097c78_data(%eax),%dl
		test   %dl,%dl
		je     _0741a0_jump
		cmp    $0x000002,%dl
		jne    _074327_jump

	_0741a0_jump:
		mov    0x000004(%esp),%esi
		mov    _0cecca_data,%dx
		mov    _0cecea_data,%ax
		xor    %edi,%edi
		shr    %si
		add    %edx,%edx
		add    %eax,%eax
		mov    %edi,0x000024(%esp)
		sub    %eax,%edx
		mov    %esi,0x000004(%esp)
		add    $0x0000c8,%edx
		mov    $0x000001,%eax
		mov    %edx,0x00002c(%esp)
		mov    _0e5d66_data,%dx
		mov    %eax,0x000010(%esp)
		test   %dx,%dx
		jbe    _07448f_jump

	_0741e7_jump:
		xor    %eax,%eax
		mov    0x000024(%esp),%ax
		shl    $0x000003,%eax
		xor    %edx,%edx
		mov    _0e40a8_data(%eax),%dx
		imul   $0x000018,%edx,%edx
		cmpw   $0x000000,_0e4144_data(%edx)
		jne    _074300_jump
		movzwl 0x000010(%esp),%ebp
		imul   $0x00000c,%ebp,%ebp
		mov    _0e40a4_data(%eax),%ax
		mov    _0e414a_data(%edx),%cx
		mov    _0ce188_data,%ebx
		sub    %ecx,%eax
		mov    (%ebx),%ebx
		mov    %ax,0x000020(%esp)
		add    %ebx,%ebp
		cmp    $0x000140,%ax
		jle    _074241_jump
		mov    0x000004(%esp),%eax
		sub    %ax,0x000020(%esp)

	_074241_jump:
		mov    0x00001e(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000005(%ebp),%dl
		lea    (%eax,%edx,1),%ebx
		xor    %edx,%edx
		mov    0x000008(%esp),%dx
		cmp    %edx,%ebx
		jle    _0742a1_jump
		xor    %edx,%edx
		mov    0x00002c(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		xor    %dh,%dh
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    %dx,%cx
		mov    _0ce188_data,%edx
		mov    0x000008(%edx),%esi
		add    0x000000(%ebp),%esi
		xor    %edx,%edx
		mov    0x000024(%esp),%dx
		mov    _0ccba4_data,%edi
		shl    $0x000002,%edx
		movswl %bx,%ebx
		mov    _0c193c_data(%edx),%edx
		call   _016d6a_func

	_0742a1_jump:
		mov    0x000004(%esp),%eax
		add    %ax,0x000020(%esp)
		xor    %edx,%edx
		mov    0x00001e(%esp),%eax
		mov    0x000040(%esp),%dx
		sar    $0x000010,%eax
		cmp    %edx,%eax
		jge    _074300_jump
		xor    %edx,%edx
		mov    0x00002c(%esp),%ebx
		mov    0x000006(%ebp),%dl
		sub    %edx,%ebx
		xor    %dh,%dh
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		mov    _0ce188_data,%esi
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000008(%esi),%esi
		mov    %dx,%cx
		add    0x000000(%ebp),%esi
		xor    %edx,%edx
		mov    _0ccba4_data,%edi
		mov    0x000024(%esp),%dx
		movswl %bx,%ebx
		mov    _0c193c_data(,%edx,4),%edx
		call   _016d6a_func

	_074300_jump:
		mov    0x000024(%esp),%edi
		mov    0x000010(%esp),%eax
		mov    _0e5d66_data,%dx
		inc    %edi
		inc    %eax
		mov    %edi,0x000024(%esp)
		mov    %eax,0x000010(%esp)
		cmp    %dx,%di
		jae    _07448f_jump
		jmp    _0741e7_jump

	_074327_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    _0e5d66_data,%cx
		mov    %edx,0x000014(%esp)
		mov    %ebx,0x00000c(%esp)
		test   %cx,%cx
		jbe    _07448f_jump

	_074346_jump:
		xor    %eax,%eax
		mov    0x000014(%esp),%ax
		shl    $0x000003,%eax
		xor    %ebx,%ebx
		mov    _0e40a8_data(%eax),%bx
		imul   $0x000018,%ebx,%ebx
		cmpw   $0x000000,_0e4144_data(%ebx)
		jne    _07446d_jump
		xor    %edx,%edx
		mov    0x00000c(%esp),%dx
		imul   $0x00000c,%edx,%ebp
		mov    _0ce188_data,%edx
		mov    (%edx),%edx
		mov    _0e40a6_data(%eax),%ax
		add    %edx,%ebp
		mov    _0e414a_data(%ebx),%dx
		sub    %edx,%eax
		mov    %ax,0x00001c(%esp)
		cmp    $0x0000c8,%ax
		jle    _0743a2_jump
		mov    0x000028(%esp),%eax
		sub    %ax,0x00001c(%esp)

	_0743a2_jump:
		mov    0x00001a(%esp),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x000006(%ebp),%al
		lea    (%ebx,%eax,1),%edx
		xor    %eax,%eax
		mov    0x000018(%esp),%ax
		cmp    %eax,%edx
		jle    _074407_jump
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		mov    _0ccba4_data,%edi
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		xor    %eax,%eax
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000014(%esp),%ax
		mov    %dx,%cx
		mov    _0ce188_data,%edx
		mov    0x000000(%ebp),%esi
		mov    %eax,(%esp)
		mov    0x000008(%edx),%edx
		mov    _0e40a2_data(,%eax,8),%eax
		add    %edx,%esi
		mov    (%esp),%edx
		sar    $0x000010,%eax
		mov    _0c193c_data(,%edx,4),%edx
		call   _016d6a_func

	_074407_jump:
		mov    0x000028(%esp),%eax
		add    %ax,0x00001c(%esp)
		xor    %eax,%eax
		mov    0x00001a(%esp),%ebx
		mov    0x000044(%esp),%ax
		sar    $0x000010,%ebx
		cmp    %eax,%ebx
		jge    _07446d_jump
		xor    %eax,%eax
		mov    0x000014(%esp),%ax
		mov    _0e40a2_data(,%eax,8),%edx
		sar    $0x000010,%edx
		mov    %edx,(%esp)
		xor    %dh,%dh
		mov    0x000006(%ebp),%dl
		mov    %edx,%ecx
		shl    $0x000008,%ecx
		mov    0x000005(%ebp),%dl
		mov    _0ce188_data,%esi
		add    %ecx,%edx
		xor    %ecx,%ecx
		mov    0x000008(%esi),%esi
		mov    %dx,%cx
		mov    0x000000(%ebp),%edx
		mov    _0ccba4_data,%edi
		add    %edx,%esi
		mov    _0c193c_data(,%eax,4),%edx
		mov    (%esp),%eax
		call   _016d6a_func

	_07446d_jump:
		mov    0x000014(%esp),%ebx
		mov    0x00000c(%esp),%ecx
		mov    _0e5d66_data,%si
		inc    %ebx
		inc    %ecx
		mov    %ebx,0x000014(%esp)
		mov    %ecx,0x00000c(%esp)
		cmp    %si,%bx
		jb     _074346_jump

	_07448f_jump:
		add    $0x000030,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    $0x000008



_074498_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %ax,0x00000c(%esp)
		mov    %edx,%esi
		mov    %ebx,%edi
		mov    _0cecd2_data,%eax
		sar    $0x000010,%eax
		dec    %eax
		lea    0x000000(,%eax,4),%edx
		add    %eax,%edx
		xor    %eax,%eax
		add    %edx,%edx
		mov    _0e5d6c_data,%ax
		add    %edx,%eax
		mov    _097c78_data(%eax),%dl
		test   %dl,%dl
		jne    _0746d7_jump
		mov    _0e5d6a_data,%bx
		shr    %si
		xor    %ecx,%ecx
		test   %bx,%bx
		jbe    _0746a4_jump
		mov    %esi,%eax
		shl    $0x000004,%eax
		mov    %eax,0x000008(%esp)

	_0744f2_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		cmpw   $0x000000,_0e4144_data(%ebx)
		jne    _07451c_jump
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx
		add    %edx,%edx
		movzwl %si,%ebp
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		jmp    _07468d_jump

	_07451c_jump:
		mov    _0e4148_data(%ebx),%dh
		test   %dh,%dh
		jne    _074559_jump
		xor    %eax,%eax
		mov    %si,%ax
		movzbl _0e414c_data(%ebx),%ebp
		mov    %eax,%edx
		imul   %ebp,%edx
		mov    %eax,(%esp)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		mov    (%esp),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		jmp    _07468d_jump

	_074559_jump:
		cmp    $0x000001,%dh
		je     _074563_jump
		cmp    $0x000004,%dh
		jne    _0745cf_jump

	_074563_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %edx,%edx
		mov    _0e4158_data(%ebx),%dx
		movzbl _0e414d_data(%ebx),%ebp
		add    %ebp,%edx
		movzwl %si,%ebp
		mov    %ebp,%eax
		shl    $0x000004,%eax
		mov    %eax,(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    _0e4148_data(%ebx),%ah
		mov    %dx,_0e4158_data(%ebx)
		cmp    $0x000001,%ah
		jne    _0745b3_jump
		xor    %edx,%edx
		mov    _0e4158_data(%ebx),%dx
		sar    $0x000004,%edx
		jmp    _07468d_jump

	_0745b3_jump:
		xor    %eax,%eax
		mov    _0e414c_data(%ebx),%al
		mov    %eax,%edx
		imul   %ebp,%edx
		mov    %eax,(%esp)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		jmp    _074649_jump

	_0745cf_jump:
		cmp    $0x000002,%dh
		je     _0745dd_jump
		cmp    $0x000005,%dh
		jne    _074694_jump

	_0745dd_jump:
		xor    %edx,%edx
		mov    %cx,%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		mov    _0e414d_data(%edx),%bl
		movzwl _0e4158_data(%edx),%ebp
		cmp    %ebp,%ebx
		jle    _074603_jump
		mov    0x000008(%esp),%eax
		add    %ax,_0e4158_data(%edx)

	_074603_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %dh,%dh
		mov    _0e414d_data(%ebx),%dl
		sub    %dx,_0e4158_data(%ebx)
		cmpb   $0x000002,_0e4148_data(%ebx)
		jne    _074631_jump
		xor    %edx,%edx
		mov    _0e4158_data(%ebx),%dx
		sar    $0x000004,%edx
		jmp    _07468d_jump

	_074631_jump:
		xor    %eax,%eax
		mov    _0e414c_data(%ebx),%al
		movzwl %si,%ebp
		mov    %eax,(%esp)
		imul   %ebp,%eax
		mov    0x00000a(%esp),%edx
		sar    $0x000010,%edx

	_074649_jump:
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  (%esp)
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %dx,_0e414a_data(%ebx)
		xor    %edx,%edx
		mov    _0e4158_data(%ebx),%dx
		mov    %edx,%ebp
		xor    %edx,%edx
		sar    $0x000004,%ebp
		mov    _0e414a_data(%ebx),%dx
		add    %ebp,%edx
		mov    %dx,_0e414a_data(%ebx)
		mov    _0e414a_data(%ebx),%ax
		xor    %edx,%edx
		div    %si

	_07468d_jump:
		mov    %dx,_0e414a_data(%ebx)

	_074694_jump:
		mov    _0e5d6a_data,%ax
		inc    %ecx
		cmp    %ax,%cx
		jb     _0744f2_jump

	_0746a4_jump:
		cmpw   $0x000005,_0cecd4_data
		jne    _0748bb_jump
		cmpw   $0x00000a,_0cecc0_data
		jne    _0748bb_jump
		xor    %edx,%edx
		xor    %eax,%eax
		mov    %di,%dx
		mov    %si,%ax
		call   _074958_func
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0746d7_jump:
		cmp    $0x000001,%dl
		jne    _0748bb_jump
		mov    _0e5d6a_data,%dx
		xor    %ecx,%ecx
		test   %dx,%dx
		jbe    _0748bb_jump
		mov    %ebx,%eax
		shl    $0x000004,%eax
		mov    %eax,0x000004(%esp)

	_0746fb_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		cmpw   $0x000000,_0e4144_data(%ebx)
		jne    _074729_jump
		mov    _0cece8_data,%edx
		sar    $0x000010,%edx
		xor    %esi,%esi
		add    %edx,%edx
		mov    %di,%si
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		jmp    _0748a3_jump

	_074729_jump:
		mov    _0e4148_data(%ebx),%al
		test   %al,%al
		jne    _074761_jump
		xor    %esi,%esi
		mov    %di,%si
		movzbl _0e414c_data(%ebx),%ebp
		mov    %esi,%edx
		imul   %ebp,%edx
		mov    _0cece8_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		jmp    _0748a3_jump

	_074761_jump:
		cmp    $0x000001,%al
		je     _074769_jump
		cmp    $0x000004,%al
		jne    _0747df_jump

	_074769_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %edx,%edx
		mov    _0e4158_data(%ebx),%dx
		movzbl _0e414d_data(%ebx),%esi
		add    %esi,%edx
		xor    %esi,%esi
		mov    %di,%si
		mov    %edx,%eax
		mov    %esi,%ebp
		sar    $0x00001f,%edx
		shl    $0x000004,%ebp
		idiv   %ebp
		mov    %dx,_0e4158_data(%ebx)
		cmpb   $0x000001,_0e4148_data(%ebx)
		jne    _0747b5_jump
		xor    %edx,%edx
		mov    _0e4158_data(%ebx),%dx
		sar    $0x000004,%edx
		jmp    _0748a3_jump

	_0747b5_jump:
		mov    %esi,%eax
		movzbl _0e414c_data(%ebx),%ebp
		imul   %ebp,%eax
		mov    _0cece8_data,%edx
		sar    $0x000010,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %esi
		jmp    _074870_jump

	_0747df_jump:
		cmp    $0x000002,%al
		je     _0747eb_jump
		cmp    $0x000005,%al
		jne    _0748aa_jump

	_0747eb_jump:
		xor    %edx,%edx
		mov    %cx,%dx
		imul   $0x000018,%edx,%edx
		xor    %ebx,%ebx
		movzbl _0e414d_data(%edx),%esi
		mov    _0e4158_data(%edx),%bx
		cmp    %ebx,%esi
		jle    _074814_jump
		mov    0x000004(%esp),%eax
		add    %eax,%ebx
		mov    %bx,_0e4158_data(%edx)

	_074814_jump:
		xor    %ebx,%ebx
		mov    %cx,%bx
		imul   $0x000018,%ebx,%ebx
		xor    %dh,%dh
		mov    _0e414d_data(%ebx),%dl
		mov    _0e4158_data(%ebx),%si
		sub    %edx,%esi
		mov    _0e4148_data(%ebx),%ah
		mov    %si,_0e4158_data(%ebx)
		cmp    $0x000002,%ah
		jne    _074849_jump
		xor    %edx,%edx
		mov    %si,%dx
		sar    $0x000004,%edx
		jmp    _0748a3_jump

	_074849_jump:
		movzwl %di,%ebp
		movzbl _0e414c_data(%ebx),%esi
		mov    %ebp,%edx
		imul   %esi,%edx
		mov    _0cece8_data,%eax
		sar    $0x000010,%eax
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp

	_074870_jump:
		mov    %dx,_0e414a_data(%ebx)
		xor    %edx,%edx
		mov    _0e4158_data(%ebx),%dx
		mov    %edx,%esi
		xor    %edx,%edx
		sar    $0x000004,%esi
		mov    _0e414a_data(%ebx),%dx
		add    %esi,%edx
		mov    %dx,_0e414a_data(%ebx)
		mov    _0e414a_data(%ebx),%ax
		xor    %edx,%edx
		div    %di

	_0748a3_jump:
		mov    %dx,_0e414a_data(%ebx)

	_0748aa_jump:
		mov    _0e5d6a_data,%si
		inc    %ecx
		cmp    %si,%cx
		jb     _0746fb_jump

	_0748bb_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0748c4_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %ebx,(%esp)
		mov    %ecx,%edi
		mov    (%esp),%ebp
		mov    %dx,_0e5d6a_data
		xor    %ebx,%ebx
		jmp    _074936_jump

	_0748df_jump:
		imul   $0x000018,%edx,%eax
		movw   $0x000001,_0e4144_data(%eax)
		movb   $0x000002,_0e414c_data(%eax)
		xor    %ch,%ch
		mov    %ch,_0e414d_data(%eax)
		xor    %cl,%cl
		mov    %ch,_0e4148_data(%eax)
		mov    %cx,_0e414a_data(%eax)
		mov    %cx,_0e4158_data(%eax)
		xor    %ecx,%ecx
		mov    %si,%cx
		imul   %edx,%ecx
		imul   $0x000140,%edx,%edx
		mov    %bx,_0e4146_data(%eax)
		add    %ebp,%ecx
		mov    %ecx,_0e4150_data(%eax)
		add    %edi,%edx
		inc    %ebx
		mov    %edx,_0e4154_data(%eax)

	_074936_jump:
		xor    %eax,%eax
		movswl %bx,%edx
		mov    _0e5d6a_data,%ax
		cmp    %eax,%edx
		jl     _0748df_jump
		xor    %esi,%esi
		mov    %si,_0e5d66_data
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_074958_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,(%esp)
		mov    %edx,0x000004(%esp)
		mov    %edx,%eax
		mov    _0cece8_data,%edx
		sar    $0x000010,%edx
		sub    $0x0000c9,%eax
		sar    $0x000002,%edx
		cmp    %ax,%dx
		jle    _074981_jump
		mov    %eax,%edx

	_074981_jump:
		call   _075fe8_func
		sub    _0cecea_data,%ax
		add    %edx,%eax
		sub    $0x000014,%eax
		mov    %ax,0x000008(%esp)
		cmpb   $0x000000,_0ceea6_data
		jne    _0749a6_jump
		incb   _0bd53c_data

	_0749a6_jump:
		cmpb   $0x000010,_0bd53c_data
		jne    _0749b7_jump
		xor    %bl,%bl
		mov    %bl,_0bd53c_data

	_0749b7_jump:
		mov    0x000008(%esp),%ecx
		mov    _0bd53c_data,%al
		mov    $0x00005a,%ebx
		mov    %al,0x00000c(%esp)
		jmp    _074a38_jump

	_0749cb_jump:
		dec    %ebx
		cmp    $0x000010,%bx
		jge    _0749d7_jump
		mov    $0x000010,%ebx

	_0749d7_jump:
		test   %cx,%cx
		jle    _074a23_jump
		xor    %edx,%edx
		mov    0x00000c(%esp),%dl
		mov    _0bd52c_data(%edx),%dl
		and    $0x0000ff,%edx
		shl    $0x000004,%edx
		movswl %bx,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %cx,%edi
		imul   $0x000018,%edi,%edi
		xor    %esi,%esi
		xor    %edx,%edx
		mov    (%esp),%si
		mov    _0e414a_data(%edi),%dx
		cwtl   
		add    %esi,%edx
		add    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    %dx,_0e414a_data(%edi)

	_074a23_jump:
		mov    0x00000c(%esp),%al
		inc    %al
		mov    %al,0x00000c(%esp)
		cmp    $0x000010,%al
		jne    _074a37_jump
		xor    %dl,%dl
		mov    %dl,0x00000c(%esp)

	_074a37_jump:
		inc    %ecx

	_074a38_jump:
		mov    0x000006(%esp),%edx
		sar    $0x000010,%edx
		movswl %cx,%eax
		add    $0x00005a,%edx
		cmp    %edx,%eax
		jge    _074a58_jump
		xor    %edx,%edx
		mov    0x000004(%esp),%dx
		cmp    %edx,%eax
		jl     _0749cb_jump

	_074a58_jump:
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_074a60_func:
		push   %ebx
		push   %ecx
		mov    _0cc200_data(%edx),%bl
		mov    _0cc200_data(%eax),%cl
		mov    %bl,_0cc200_data(%eax)
		mov    %cl,_0cc200_data(%edx)
		pop    %ecx
		pop    %ebx
		ret    



_074a80_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0x000001,%edx
		mov    _0cc1f2_data,%esi
		xor    %ebx,%ebx
		xor    %ah,%ah
		mov    %dx,_0ced3c_data
		mov    %ah,_0ceeda_data
		sar    $0x000010,%esi
		mov    _0cc1f0_data,%eax
		xor    %edx,%edx
		test   %esi,%esi
		jle    _074afd_jump

	_074aaf_jump:
		mov    0x000060(%eax),%cx
		cmp    $0x0000bc,%cx
		jne    _074ac6_jump
		inc    %ebx
		mov    0x000034(%eax),%cl
		mov    %cl,_0cc1ff_data(%ebx)
		jmp    _074af3_jump

	_074ac6_jump:
		cmp    $0x0000f8,%cx
		jne    _074ad6_jump
		mov    %dx,_0ced2a_data
		jmp    _074af3_jump

	_074ad6_jump:
		cmp    $0x0000ea,%cx
		jne    _074af3_jump
		xor    %ecx,%ecx
		mov    _0ceeda_data,%cl
		mov    %dl,_0ce328_data(%ecx)
		inc    %cl
		mov    %cl,_0ceeda_data

	_074af3_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %esi,%edx
		jl     _074aaf_jump

	_074afd_jump:
		mov    $0x000001,%edi

	_074b02_jump:
		xor    %esi,%esi
		xor    %ebx,%ebx

	_074b06_jump:
		xor    %eax,%eax
		mov    _0cc201_data(%ebx),%al
		imul   $0x000084,%eax,%edx
		xor    %ecx,%ecx
		mov    _0cc200_data(%ebx),%cl
		imul   $0x000084,%ecx,%ecx
		mov    _0cc1f0_data,%eax
		add    %eax,%edx
		mov    0x000028(%ecx,%eax,1),%eax
		cmp    0x000028(%edx),%eax
		jle    _074b3e_jump
		lea    0x000001(%ebx),%edx
		mov    %ebx,%eax
		mov    %edi,%esi
		call   _074a60_func

	_074b3e_jump:
		inc    %ebx
		cmp    $0x000007,%ebx
		jl     _074b06_jump
		test   %esi,%esi
		jne    _074b02_jump
		cmpb   $0x000000,_0cee79_data
		jne    _074b5a_jump
		cmpb   $0x000000,_0ca314_data
		je     _074b63_jump

	_074b5a_jump:
		movb   $0x000008,_0ceed3_data
		jmp    _074b85_jump

	_074b63_jump:
		mov    $0x0000b1,%eax
		call   _0690e0_func
		movswl %ax,%edx
		mov    $0x000003,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		shl    $0x000003,%edx
		mov    %dl,_0ceed3_data

	_074b85_jump:
		xor    %eax,%eax
		mov    _0ceed3_data,%al
		mov    _09220c_data(%eax),%al
		and    $0x0000ff,%eax
		mov    _0cc200_data(%eax),%al
		mov    $0x000020,%esi
		mov    $0x000138,%edi
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ax,_0cec4c_data
		mov    %ah,_0ceed0_data
		mov    %si,_0cda8a_data
		mov    %di,_0cecb6_data
		mov    %di,_0cecca_data
		mov    %edx,_0e5d70_data
		xor    %eax,%eax
		jmp    _074c30_jump

	_074bd6_jump:
		xor    %edx,%edx
		mov    _0ce328_data(%eax),%dl
		imul   $0x000084,%edx,%ebx
		mov    _0cda8a_data,%cx
		shl    $0x000004,%ecx
		mov    _0cc1f0_data,%edx
		sub    $0x00003c,%ecx
		mov    %cx,0x00003e(%edx,%ebx,1)
		xor    %ebx,%ebx
		mov    _0ce328_data(%eax),%bl
		imul   $0x000084,%ebx,%ebx
		mov    0x00003c(%edx,%ebx,1),%ecx
		sar    $0x000010,%ecx
		mov    %ecx,0x00002c(%edx,%ebx,1)
		xor    %ebx,%ebx
		mov    _0ce328_data(%eax),%bl
		imul   $0x000084,%ebx,%ebx
		mov    0x00003e(%edx,%ebx,1),%dx
		inc    %eax
		mov    %dx,_0e5d74_data

	_074c30_jump:
		xor    %edx,%edx
		mov    _0ceeda_data,%dl
		cmp    %edx,%eax
		jl     _074bd6_jump
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074c44_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %ax,(%esp)
		mov    %edx,%esi
		mov    _0cc1f0_data,%ebx
		mov    _0cc1f4_data,%cx
		xor    %edx,%edx
		xor    %eax,%eax

	_074c61_jump:
		cmpw   $0x0000aa,0x000060(%ebx)
		jne    _074c74_jump
		cmpl   $0x000000,0x000024(%ebx)
		jne    _074c74_jump
		mov    $0x000001,%edx

	_074c74_jump:
		add    $0x000084,%ebx
		inc    %eax
		test   %dx,%dx
		jne    _074c85_jump
		cmp    %cx,%ax
		jl     _074c61_jump

	_074c85_jump:
		sub    $0x000084,%ebx
		test   %dx,%dx
		je     _074ce5_jump
		orb    $0x000004,0x000081(%ebx)
		mov    %ebx,%eax
		movl   $0x000001,0x000024(%ebx)
		call   _01f304_func
		mov    -0x000002(%esp),%eax
		mov    0x000081(%ebx),%dl
		movw   $0x000000,0x000040(%ebx)
		and    $0x0000bf,%dl
		sar    $0x000010,%eax
		mov    %dl,0x000081(%ebx)
		mov    %eax,0x000028(%ebx)
		movswl %si,%eax
		mov    $0x000003,%edx
		mov    %eax,0x00002c(%ebx)
		mov    %ebx,%eax
		movw   $0x000000,0x000042(%ebx)
		call   _01d36c_func
		mov    %ebx,%eax
		xor    %edx,%edx
		call   _01d364_func

	_074ce5_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_074cec_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    %edx,%ecx
		call   _07721c_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _074d30_jump
		movswl %di,%eax
		add    $0x000040,%eax
		mov    %eax,0x000028(%edx)
		movswl %cx,%eax
		add    $0x000040,%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f304_func
		movb   $0x000001,0x00007e(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000050(%edx)
		call   _01db8c_func

	_074d30_jump:
		mov    %ecx,%eax
		add    $0x000020,%eax
		movswl %ax,%edx
		mov    %edi,%eax
		add    $0x00008c,%eax
		cwtl   
		call   _0779d0_func
		mov    $0x0000aa,%eax
		xor    %ebx,%ebx
		call   _01d020_func
		lea    0x000528(%eax),%edx

	_074d59_jump:
		cmpl   $0x000000,0x000024(%edx)
		jne    _074d66_jump
		mov    %edx,%eax
		call   _01f304_func

	_074d66_jump:
		mov    0x000081(%edx),%ah
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%edx)
		movswl %di,%eax
		movb   $0x000003,0x00006d(%edx)
		add    $0x000008,%eax
		mov    %eax,0x000028(%edx)
		movswl %cx,%eax
		mov    %eax,0x00002c(%edx)
		movswl %bx,%eax
		movb   $0x000002,0x00006c(%edx)
		mov    _0bd540_data(,%eax,2),%si
		mov    %si,0x000040(%edx)
		add    $0x000084,%edx
		mov    _0bd550_data(,%eax,2),%ax
		movb   $0x000002,-0x000019(%edx)
		inc    %ebx
		mov    %ax,-0x000042(%edx)
		cmp    $0x000008,%bx
		jl     _074d59_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_074dc4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		cmpw   $0x000000,_0ced36_data
		je     _074f55_jump
		mov    $0x000003,%ebx
		mov    _0cec4a_data,%edx
		mov    _0cc1f0_data,%ecx
		sar    $0x000010,%edx
		mov    _0ced36_data,%si
		mov    %edx,%eax
		mov    _0ced34_data,%di
		shl    $0x000005,%eax
		mov    %bx,_0ced2c_data
		add    %edx,%eax
		dec    %esi
		shl    $0x000002,%eax
		mov    _0ced26_data,%bx
		add    %eax,%ecx
		mov    _0ced32_data,%ax
		mov    %si,_0ced36_data
		sub    %eax,%ebx
		mov    _0ced28_data,%si
		movswl %bx,%eax
		sub    %edi,%esi
		test   %eax,%eax
		jge    _074e36_jump
		neg    %eax

	_074e36_jump:
		mov    %eax,%edx
		movswl %si,%eax
		mov    %edx,%edi
		test   %eax,%eax
		jge    _074e43_jump
		neg    %eax

	_074e43_jump:
		add    %eax,%edi
		cmp    $0x000008,%di
		jge    _074e63_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d36c_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d364_func

	_074e63_jump:
		test   %di,%di
		jle    _074e93_jump
		mov    _0ced2c_data,%cl
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %di,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    _0ced2c_data,%cl
		mov    %eax,%ebx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%esi

	_074e93_jump:
		cmpb   $0x000000,_0cee41_data
		jne    _074ead_jump
		cmpw   $0x000032,_0ced36_data
		jge    _074ead_jump
		mov    $0x000001,%eax
		jmp    _074eaf_jump

	_074ead_jump:
		xor    %eax,%eax

	_074eaf_jump:
		test   %ax,%ax
		je     _074f04_jump
		mov    _0ced2c_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _074ed1_jump
		mov    $0x000001,%eax
		jg     _074ed1_jump
		neg    %eax

	_074ed1_jump:
		mov    _0ced2e_data,%edx
		mov    _0ced2e_data,%bx
		sar    $0x000010,%edx
		add    %eax,%ebx
		movswl %si,%eax
		sub    %edx,%eax
		mov    %bx,_0ced2e_data
		cmp    $0x000000,%eax
		je     _074efd_jump
		mov    $0x000001,%eax
		jg     _074efd_jump
		neg    %eax

	_074efd_jump:
		add    %ax,_0ced30_data

	_074f04_jump:
		mov    _0ced2e_data,%ax
		mov    _0ced32_data,%si
		mov    _0ced34_data,%dx
		add    %eax,%esi
		mov    _0ced30_data,%ax
		add    %eax,%edx
		mov    %dx,_0ced34_data
		mov    _0cee40_data,%dl
		mov    %si,_0ced32_data
		test   %dl,%dl
		jne    _074f55_jump
		test   %di,%di
		je     _074f55_jump
		mov    _0ced32_data,%edx
		mov    _0ced30_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _074c44_func

	_074f55_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_074f5c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0ced36_data,%dx
		test   %dx,%dx
		je     _075177_jump
		mov    %edx,%ebx
		dec    %ebx
		mov    _0cdbc2_data,%ah
		mov    %bx,_0ced36_data
		test   %ah,%ah
		je     _074fcc_jump
		mov    $0x000003,%eax
		mov    _0cdb20_data,%edx
		mov    %ax,_0ced2c_data
		xor    %eax,%eax
		mov    0x000028(%edx),%bx
		mov    0x000068(%edx),%al
		add    %ebx,%eax
		sub    $0x000068,%eax
		mov    %ax,_0ced26_data
		xor    %eax,%eax
		mov    0x00002c(%edx),%cx
		mov    0x000074(%edx),%al
		add    %ecx,%eax
		sub    $0x000078,%eax
		mov    _0cee3f_data,%dh
		mov    %ax,_0ced28_data
		test   %dh,%dh
		jmp    _075011_jump

	_074fcc_jump:
		mov    _0cdafc_data,%al
		add    _0cdabc_data,%ax
		sub    $0x000078,%eax
		mov    %ax,_0ced26_data
		xor    %eax,%eax
		mov    _0cdac0_data,%di
		mov    _0cdafd_data,%al
		mov    $0x000003,%ecx
		add    %edi,%eax
		mov    _0cee45_data,%dl
		sub    $0x00008c,%eax
		mov    %cx,_0ced2c_data
		mov    %ax,_0ced28_data
		test   %dl,%dl

	_075011_jump:
		sete   %al
		xor    %ah,%ah
		mov    %eax,(%esp)
		mov    _0ced26_data,%bx
		mov    _0ced32_data,%ax
		mov    _0ced28_data,%si
		sub    %eax,%ebx
		mov    _0ced34_data,%di
		movswl %bx,%eax
		sub    %edi,%esi
		test   %eax,%eax
		jge    _075041_jump
		neg    %eax

	_075041_jump:
		mov    %eax,%edx
		movswl %si,%eax
		mov    %edx,%edi
		test   %eax,%eax
		jge    _07504e_jump
		neg    %eax

	_07504e_jump:
		add    %eax,%edi
		test   %di,%di
		jle    _075080_jump
		mov    _0ced2c_data,%cl
		mov    %ebx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		movswl %di,%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    _0ced2c_data,%cl
		mov    %eax,%ebx
		mov    %esi,%eax
		cwtl   
		shl    %cl,%eax
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %eax,%esi

	_075080_jump:
		cmpw   $0x000000,(%esp)
		je     _0750d7_jump
		mov    _0ced2c_data,%eax
		movswl %bx,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		cmp    $0x000000,%eax
		je     _0750a4_jump
		mov    $0x000001,%eax
		jg     _0750a4_jump
		neg    %eax

	_0750a4_jump:
		mov    _0ced2e_data,%edx
		mov    _0ced2e_data,%bx
		sar    $0x000010,%edx
		add    %eax,%ebx
		movswl %si,%eax
		sub    %edx,%eax
		mov    %bx,_0ced2e_data
		cmp    $0x000000,%eax
		je     _0750d0_jump
		mov    $0x000001,%eax
		jg     _0750d0_jump
		neg    %eax

	_0750d0_jump:
		add    %ax,_0ced30_data

	_0750d7_jump:
		mov    _0ced2e_data,%ax
		mov    _0ced32_data,%si
		mov    _0ced34_data,%dx
		add    %eax,%esi
		mov    _0ced30_data,%ax
		mov    %si,_0ced32_data
		add    %eax,%edx
		mov    _0ced30_data,%eax
		sar    $0x000010,%eax
		mov    %dx,_0ced34_data
		cmp    $0xffffff6a,%eax
		jge    _075138_jump
		mov    _0ced2e_data,%bx
		mov    %esi,%ecx
		neg    %ebx
		add    %ebx,%ecx
		mov    %ecx,%esi
		mov    %cx,_0ced32_data
		add    %ebx,%esi
		mov    %bx,_0ced2e_data
		mov    %si,_0ced32_data

	_075138_jump:
		cmpb   $0x000000,_0cee40_data
		jne    _07515c_jump
		test   %di,%di
		je     _07515c_jump
		mov    _0ced32_data,%edx
		mov    _0ced30_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _074c44_func

	_07515c_jump:
		cmpw   $0x000000,_0ced36_data
		jne    _075177_jump
		mov    $0xffff8300,%eax
		mov    %ax,_0ced32_data
		mov    %ax,_0ced34_data

	_075177_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075184_func:
		push   %ebx
		push   %ecx
		push   %edi
		mov    %eax,%ebx
		mov    %edx,%ecx
		incb   _0ceed3_data
		xor    %eax,%eax
		mov    _0ceed3_data,%al
		mov    _09220c_data(%eax),%al
		and    $0x0000ff,%eax
		xor    %edx,%edx
		mov    _0cc200_data(%eax),%dl
		mov    %dx,_0cec4c_data
		xor    %edx,%edx
		mov    _0cc200_data(%eax),%dl
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		cmpw   $0x0000ff,_0ced36_data
		je     _0751df_jump
		movw   $0x00003c,_0ced36_data

	_0751df_jump:
		sub    $0x000050,%ebx
		mov    $0x000004,%edx
		mov    %bx,_0ced32_data
		mov    %dx,_0ced30_data
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000068(%eax),%dl
		add    %ebx,%edx
		sub    $0x000078,%edx
		mov    %dx,_0ced26_data
		xor    %edx,%edx
		mov    $0xfffffffc,%edi
		mov    0x000074(%eax),%dl
		mov    0x00002c(%eax),%ax
		sub    $0x00000a,%ecx
		add    %edx,%eax
		mov    %cx,_0ced34_data
		sub    $0x000078,%eax
		mov    _0ced32_data,%edx
		mov    %ax,_0ced28_data
		mov    _0ced30_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %di,_0ced2e_data
		call   _074c44_func
		pop    %edi
		pop    %ecx
		pop    %ebx
		ret    



_075250_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		cmpb   $0x000000,_0cdbc2_data
		je     _075266_jump
		mov    _0cdb20_data,%eax
		jmp    _07526b_jump

	_075266_jump:
		mov    $_0cda94_data,%eax

	_07526b_jump:
		sub    $0x000050,%ebx
		sub    $0x00000a,%edx
		mov    %bx,_0ced32_data
		mov    %dx,_0ced34_data
		xor    %edx,%edx
		mov    0x000028(%eax),%bx
		mov    0x000068(%eax),%dl
		mov    $0x000078,%ecx
		add    %ebx,%edx
		sub    %ecx,%edx
		mov    $0xfffffffc,%esi
		mov    %dx,_0ced26_data
		xor    %edx,%edx
		mov    $0x000002,%edi
		mov    0x000074(%eax),%dl
		mov    0x00002c(%eax),%ax
		mov    %cx,_0ced36_data
		add    %edx,%eax
		mov    %si,_0ced2e_data
		sub    %ecx,%eax
		mov    _0ced32_data,%edx
		mov    %ax,_0ced28_data
		mov    _0ced30_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %di,_0ced30_data
		call   _074c44_func
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0752e8_func:
		push   %ebx
		push   %edx
		mov    _0ced28_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc1f0_data,%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		orb    $0x000004,0x000081(%edx)
		mov    0x000028(%eax),%ebx
		mov    %ebx,0x000028(%edx)
		mov    0x00002c(%eax),%eax
		movw   $0x00ff80,0x000040(%edx)
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movw   $0x000000,0x000042(%edx)
		call   _01db8c_func
		mov    %edx,%eax
		call   _01f304_func
		pop    %edx
		pop    %ebx
		ret    



_075338_func:
		push   %edx
		mov    $0x000028,%edx
		mov    $0xffffffff,%eax
		mov    %dx,_0cdaea_data
		pop    %edx
		ret    



_07534c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    _0cecca_data,%si
		mov    _0e5d74_data,%di
		mov    _0e5d70_data,%ebp
		cmpw   $0x000003,_0ceca4_data
		je     _07539b_jump
		cmpb   $0x000002,_0cdb01_data
		jne    _075382_jump
		cmpb   $0x000009,_0cdb00_data
		je     _07539b_jump

	_075382_jump:
		cmpb   $0x000003,_0cdb01_data
		jne    _0753ab_jump
		mov    _0cdb00_data,%bl
		cmp    $0x000017,%bl
		je     _07539b_jump
		cmp    $0x000007,%bl
		jne    _0753ab_jump

	_07539b_jump:
		xor    %cl,%cl
		xor    %edx,%edx
		mov    %cl,_0ceed0_data
		mov    %edx,_0ce33c_data

	_0753ab_jump:
		test   %ebp,%ebp
		je     _0753cd_jump
		mov    _0cee41_data,%ch
		dec    %ebp
		cmp    $0x000002,%ch
		jb     _0753c5_jump
		addw   $0x000002,_0ced00_data
		jmp    _0753cd_jump

	_0753c5_jump:
		subw   $0x000002,_0ced00_data

	_0753cd_jump:
		cmpl   $0x000060,_0ce33c_data
		jge    _0753df_jump
		cmpb   $0x000001,_0ceed0_data
		je     _0753fc_jump

	_0753df_jump:
		cmpl   $0x0000c4,_0ce33c_data
		jge    _075547_jump
		cmpb   $0x000002,_0ceed0_data
		jne    _075547_jump

	_0753fc_jump:
		cmpb   $0x000001,_0ceed0_data
		jne    _07540e_jump
		cmpb   $0x000000,_0cee3f_data
		je     _075428_jump

	_07540e_jump:
		cmpb   $0x000002,_0ceed0_data
		jne    _075547_jump
		cmpb   $0x000000,_0cee41_data
		jne    _075547_jump

	_075428_jump:
		cmpb   $0x000002,_0cee41_data
		jb     _07543b_jump
		addw   $0x000003,_0ced00_data
		jmp    _075443_jump

	_07543b_jump:
		subw   $0x000003,_0ced00_data

	_075443_jump:
		mov    _0cecb6_data,%ax
		mov    _0cecac_data,%bx
		dec    %esi
		cmp    %bx,%ax
		jle    _075460_jump
		mov    %eax,%ecx
		dec    %ecx
		mov    %cx,_0cecb6_data

	_075460_jump:
		incl   _0ce33c_data
		testb  $0x00000f,_0ce33c_data
		jne    _075476_jump
		decw   _0cda8a_data

	_075476_jump:
		xor    %eax,%eax
		jmp    _075536_jump

	_07547d_jump:
		movswl %ax,%ebx
		xor    %edx,%edx
		mov    _0ce328_data(%ebx),%dl
		imul   $0x000084,%edx,%ecx
		mov    _0cc1f0_data,%edx
		decl   0x00002c(%ecx,%edx,1)
		xor    %ecx,%ecx
		mov    _0ce328_data(%ebx),%cl
		imul   $0x000084,%ecx,%ecx
		decw   0x00003e(%ecx,%edx,1)
		cmpb   $0x000001,_0ceed0_data
		jne    _0754e6_jump
		cmpb   $0x000000,_0cee47_data
		jne    _0754e6_jump
		xor    %ecx,%ecx
		mov    _0ce328_data(%ebx),%cl
		imul   $0x000084,%ecx,%ecx
		decl   0x00002c(%ecx,%edx,1)
		mov    _0ce328_data(%ebx),%bl
		and    $0x0000ff,%ebx
		imul   $0x000084,%ebx,%ebx
		decw   0x00003e(%edx,%ebx,1)

	_0754e6_jump:
		movswl %ax,%ebx
		mov    _0ce328_data(%ebx),%bl
		and    $0x0000ff,%ebx
		imul   $0x000084,%ebx,%ebx
		mov    _0cc1f0_data,%edx
		add    %edx,%ebx
		movswl %si,%edx
		mov    0x00002c(%ebx),%ecx
		add    $0x000078,%edx
		cmp    %ecx,%edx
		jle    _075513_jump
		mov    %edx,0x00002c(%ebx)

	_075513_jump:
		movswl %ax,%edx
		mov    _0ce328_data(%edx),%dl
		and    $0x0000ff,%edx
		imul   $0x000084,%edx,%ebx
		mov    _0cc1f0_data,%edx
		mov    0x00002c(%edx,%ebx,1),%dx
		inc    %eax
		mov    %edx,%edi

	_075536_jump:
		xor    %edx,%edx
		mov    _0ceeda_data,%dl
		cmp    %dx,%ax
		jl     _07547d_jump

	_075547_jump:
		cmpl   $0x000060,_0ce33c_data
		jne    _07556e_jump
		cmpb   $0x000001,_0ceed0_data
		jne    _07556e_jump
		mov    $0x00003c,%ebp
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %edx,_0ce33c_data
		mov    %ah,_0ceed0_data

	_07556e_jump:
		cmpl   $0x0000c4,_0ce33c_data
		jne    _075598_jump
		cmpb   $0x000002,_0ceed0_data
		jne    _075598_jump
		mov    $0x00003c,%ebp
		xor    %ecx,%ecx
		xor    %dh,%dh
		mov    %ecx,_0ce33c_data
		mov    %dh,_0ceed0_data

	_075598_jump:
		mov    %ebp,_0e5d70_data
		mov    %di,_0e5d74_data
		mov    %si,_0cecca_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0755b4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    _0cec4a_data,%ebx
		movzbw 0x00006d(%eax),%si
		xor    %edx,%edx
		sar    $0x000010,%ebx
		mov    0x00006c(%eax),%dl
		mov    %ebx,%eax
		shl    $0x000005,%eax
		add    %ebx,%eax
		mov    _0cc1f0_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		test   %si,%si
		jne    _075739_jump
		cmp    $0x000002,%dx
		jb     _075739_jump
		cmp    $0x000003,%dx
		jbe    _0756eb_jump
		cmp    $0x000004,%dx
		jne    _075739_jump
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _075739_jump
		cmpw   $0x000000,_0cec96_data
		jne    _075739_jump
		mov    $0x000001,%esi
		mov    _0cec56_data,%di
		mov    0x00006c(%ebx),%dl
		add    %esi,%edi
		mov    %si,_0cec96_data
		mov    %di,_0cec56_data
		cmp    $0x000007,%dl
		jne    _075686_jump
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d36c_func
		mov    $0x000002,%edx
		mov    %ebx,%eax
		call   _01d364_func
		mov    _0ceed3_data,%dh
		xor    %eax,%eax
		inc    %dh
		mov    %dh,%al
		mov    %dh,_0ceed3_data
		mov    _09220c_data(%eax),%al
		and    $0x0000ff,%eax
		mov    _0cc200_data(%eax),%al
		xor    %ah,%ah
		mov    %ax,_0cec4c_data

	_075686_jump:
		cmpw   $0x000004,_0cec56_data
		jne    _0756a1_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _05efb0_func

	_0756a1_jump:
		cmpw   $0x000005,_0cec56_data
		jne    _075739_jump
		mov    $0x000005,%edx
		mov    _0cec5e_data,%di
		xor    %ebx,%ebx
		mov    %ecx,%eax
		mov    %bx,_0cec56_data
		mov    %bx,_0cec52_data
		inc    %edi
		mov    $0x000001,%ebx
		mov    %di,_0cec5e_data
		call   _05efb0_func
		decb   _0ceed3_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0756eb_jump:
		cmpw   $0x000004,_0ced24_data
		jne    _075713_jump
		mov    $0x000008,%edx
		mov    %ecx,%eax
		mov    $0x000008,%ebx
		call   _01d364_func
		mov    %bx,_0ced24_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075713_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		movw   $0x000004,_0ced24_data

	_075739_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075740_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %edx,%edx
		mov    0x00006d(%eax),%dl
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		test   %dx,%dx
		jne    _075805_jump
		cmp    $0x000004,%ax
		jb     _075805_jump
		ja     _075805_jump
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _075805_jump
		cmpw   $0x000000,_0cec96_data
		jne    _075805_jump
		mov    $0x000001,%ebx
		mov    _0cec56_data,%si
		mov    _0cdb01_data,%dl
		add    %ebx,%esi
		mov    %bx,_0cec96_data
		mov    %si,_0cec56_data
		cmp    $0x000005,%dl
		jne    _0757c6_jump
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		call   _01d36c_func
		mov    $0x000002,%edx
		mov    $_0cda94_data,%eax
		call   _01d364_func

	_0757c6_jump:
		cmpw   $0x000003,_0cec56_data
		jne    _075805_jump
		mov    $0x000001,%ebx
		mov    _0cec5e_data,%dx
		xor    %eax,%eax
		inc    %edx
		mov    %ax,_0ced36_data
		mov    %dx,_0cec5e_data
		mov    %ecx,%eax
		mov    $0x000006,%edx
		call   _05efb0_func
		xor    %ebx,%ebx
		movb   $0x000000,0x00006b(%ecx)
		mov    %bx,_0cec56_data

	_075805_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07580c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006d(%eax),%bl
		mov    0x00006c(%eax),%dl
		call   _074dc4_func
		test   %bx,%bx
		jne    _075921_jump
		cmp    $0x000004,%dx
		jb     _075841_jump
		jbe    _07584d_jump
		cmp    $0x000007,%dx
		je     _0758b6_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075841_jump:
		cmp    $0x000002,%dx
		jb     _075940_jump
		jmp    _0758a5_jump

	_07584d_jump:
		mov    _0cec56_data,%dx
		mov    %edx,%eax
		inc    %eax
		test   %dx,%dx
		jbe    _075867_jump
		cmp    $0x000001,%dx
		je     _075884_jump
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075867_jump:
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _075940_jump
		mov    $0x000001,%bl
		mov    %ax,_0cec56_data
		mov    %bl,_0ceed0_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075884_jump:
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _075940_jump
		mov    $0x000001,%ebx
		mov    %ax,_0cec56_data
		mov    %bx,_0cec96_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0758a5_jump:
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d364_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0758b6_jump:
		cmpb   $0x000009,0x00006b(%ecx)
		jne    _075940_jump
		cmpw   $0x000000,_0ced36_data
		jne    _075940_jump
		mov    0x00002a(%ecx),%edx
		mov    0x000026(%ecx),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _075184_func
		mov    _0cec56_data,%si
		inc    %esi
		mov    %si,_0cec56_data
		cmp    $0x000005,%si
		jne    _075940_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		mov    _0cec5e_data,%dx
		xor    %eax,%eax
		inc    %edx
		mov    %ax,_0cec56_data
		mov    %dx,_0cec5e_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075921_jump:
		cmp    $0x000001,%bx
		jne    _075940_jump
		cmp    $0x00000f,%dx
		jne    _075940_jump
		mov    _0cec52_data,%dx
		cmp    0x000048(%ecx),%dx
		jne    _075940_jump
		movw   $0x000000,0x000048(%ecx)

	_075940_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075948_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    0x00006d(%eax),%bl
		mov    0x00006c(%eax),%dl
		call   _074dc4_func
		test   %bx,%bx
		jne    _0759f3_jump
		cmp    $0x000002,%dx
		jb     _0759f3_jump
		mov    _0cec56_data,%ax
		inc    %eax
		cmp    $0x000002,%dx
		jbe    _0759a8_jump
		cmp    $0x000004,%dx
		jne    _0759f3_jump
		cmpb   $0x00001b,0x00006b(%ecx)
		jne    _0759f3_jump
		cmpw   $0x000001,_0cec56_data
		jne    _0759f3_jump
		mov    $0x000002,%dh
		mov    %ax,_0cec56_data
		mov    %dh,_0ceed0_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0759a8_jump:
		mov    _0cec56_data,%bx
		test   %bx,%bx
		jne    _0759cf_jump
		mov    $0x000001,%ebx
		mov    $0x00000b,%edx
		mov    %ax,_0cec56_data
		mov    %ecx,%eax
		call   _05efb0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0759cf_jump:
		cmp    $0x000002,%bx
		jne    _0759f3_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d36c_func
		mov    $0x00000f,%edx
		mov    %ecx,%eax
		call   _01d364_func
		movw   $0x000003,0x000040(%ecx)

	_0759f3_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0759f8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _075ac2_jump
		mov    0x00006c(%ecx),%dl
		cmp    $0x000008,%dl
		jne    _075a41_jump
		cmpb   $0x000041,0x00006b(%ecx)
		jne    _075ac2_jump
		mov    %ecx,%eax
		mov    $0x000009,%edx
		call   _0752e8_func
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    $0x000009,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075a41_jump:
		cmp    $0x000009,%dl
		jne    _075a80_jump
		mov    _0ced28_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		addw   $0x000002,0x000040(%edx,%eax,4)
		mov    0x00003e(%edx,%eax,4),%eax
		sar    $0x000010,%eax
		neg    %eax
		cmp    $0xffffff92,%eax
		jne    _075ac2_jump
		mov    $0x00000a,%edx
		mov    %ecx,%eax
		call   _01d364_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075a80_jump:
		cmp    $0x00000a,%dl
		jne    _075ac2_jump
		cmpb   $0x000007,0x00006b(%ecx)
		jne    _075ac2_jump
		mov    _0ced28_data,%ecx
		sar    $0x000010,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		mov    _0cc1f0_data,%edx
		add    %ecx,%eax
		movl   $0xffff8300,0x000028(%edx,%eax,4)
		mov    0x000081(%edx,%eax,4),%cl
		movl   $0xffff8300,0x00002c(%edx,%eax,4)
		and    $0x0000fb,%cl
		mov    %cl,0x000081(%edx,%eax,4)

	_075ac2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075ac8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    $0x000010,%ebx
		mov    $0xffffffff,%edx
		mov    _0ced34_data,%ax
		mov    _0ced32_data,%di
		add    $0x000078,%eax
		add    $0x000078,%edi
		mov    %ax,(%esp)
		mov    0x00006d(%esi),%ah
		mov    %ebx,%ecx
		test   %ah,%ah
		jne    _075b04_jump
		cmpb   $0x00000b,0x00006c(%esi)
		je     _075b0b_jump

	_075b04_jump:
		mov    $0x000001,%eax
		jmp    _075b0d_jump

	_075b0b_jump:
		xor    %eax,%eax

	_075b0d_jump:
		test   %eax,%eax
		je     _075b48_jump
		cmpb   $0x000000,0x00006d(%esi)
		jne    _075b1d_jump
		cmpb   $0x00000c,0x00006c(%esi)
		je     _075b24_jump

	_075b1d_jump:
		mov    $0x000001,%eax
		jmp    _075b26_jump

	_075b24_jump:
		xor    %eax,%eax

	_075b26_jump:
		test   %eax,%eax
		je     _075b48_jump
		push   %esi
		movswl %cx,%eax
		movswl %di,%edx
		push   %eax
		movswl %bx,%ecx
		mov    0x000006(%esp),%ebx
		mov    $0x000096,%eax
		sar    $0x000010,%ebx
		call   _02c0a0_func
		mov    %eax,%edx

	_075b48_jump:
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _075bca_jump
		mov    $0x00000b,%edx
		mov    %esi,%eax
		call   _01d364_func
		mov    _0ced32_data,%edx
		mov    _0ced30_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		xor    %ecx,%ecx
		call   _074cec_func
		mov    $0xffff8300,%edx
		mov    %cx,_0ced36_data
		mov    0x000076(%esi),%ah
		mov    %dx,_0ced32_data
		dec    %ah
		mov    %dx,_0ced34_data
		mov    %ah,0x000076(%esi)
		cmp    $0x000001,%ah
		jne    _075bb0_jump
		mov    $0x000001,%ebx
		mov    $0x00000d,%edx
		mov    %esi,%eax
		call   _05efb0_func

	_075bb0_jump:
		cmpb   $0x000000,0x000076(%esi)
		jne    _075bca_jump
		mov    $0x00000c,%edx
		mov    %esi,%eax
		mov    $0x000001,%bl
		call   _01d364_func
		mov    %bl,_0ceeba_data

	_075bca_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075bd4_func:
		push   %ecx
		orb    $0x000040,_0cec78_data
		cmpb   $0x000000,0x00006d(%eax)
		jne    _075bff_jump
		cmpb   $0x00000c,0x00006c(%eax)
		jne    _075bff_jump
		cmpb   $0x00007f,0x00006b(%eax)
		jb     _075bff_jump
		mov    $0x000001,%cl
		movb   $0x000081,0x00006b(%eax)
		mov    %cl,_0ceeb8_data
		call   _05fbb4_func

	_075bff_jump:
		pop    %ecx
		ret    

_075c04_switch:
		.long   _075cf2_case
		.long   _075d02_case
		.long   _075d12_case
		.long   _075d22_case




_075c14_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		movzbw 0x00006c(%ecx),%si
		mov    %eax,(%esp)
		test   %ax,%ax
		jne    _075c78_jump
		cmp    $0x000001,%si
		jne    _075c78_jump
		cmpb   $0x000000,0x00006b(%ecx)
		jne    _075c4c_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000ac,%eax
		sar    $0x000010,%edx
		call   _06f35c_func

	_075c4c_jump:
		cmpb   $0x000032,0x00006b(%ecx)
		jne    _075c62_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000ad,%eax
		sar    $0x000010,%edx
		call   _06f35c_func

	_075c62_jump:
		cmpb   $0x000064,0x00006b(%ecx)
		jne    _075c78_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000b1,%eax
		sar    $0x000010,%edx
		call   _06f35c_func

	_075c78_jump:
		mov    _0cecc0_data,%bx
		cmp    $0x00000a,%bx
		jne    _075d32_jump
		mov    %ecx,%eax
		call   _02f088_func
		cmpw   $0x000000,_0ced3c_data
		jne    _075c9f_jump
		call   _074a80_func

	_075c9f_jump:
		mov    %ecx,%eax
		call   _0759f8_func
		call   _07534c_func
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		mov    _0cdabc_data,%ebx
		add    %edx,%eax
		cmp    %ebx,%eax
		jge    _075cd5_jump
		cmpw   $0x000003,_0ceca4_data
		je     _075cd5_jump
		mov    $0x000001,%eax
		mov    %ecx,%edx
		call   _02d60c_func

	_075cd5_jump:
		mov    _0cec5e_data,%ax
		cmp    $0x000003,%ax
		ja     _075e82_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_075c04_switch(,%eax,4)

	_075cf2_case:
		mov    %ecx,%eax
		call   _0755b4_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075d02_case:
		mov    %ecx,%eax
		call   _075740_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075d12_case:
		mov    %ecx,%eax
		call   _07580c_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075d22_case:
		mov    %ecx,%eax
		call   _075948_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075d32_jump:
		cmp    $0x00000b,%bx
		jne    _075e82_jump
		cmpw   $0x000000,_0ced3c_data
		jne    _075dc5_jump
		mov    $0x000001,%bl
		mov    _0cc1f0_data,%edx
		mov    0x000077(%ecx),%al
		mov    %bl,_0ceead_data
		mov    %al,0x000076(%ecx)
		mov    _0cc1f4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _075d88_jump

	_075d6c_jump:
		cmpw   $0x0000f8,0x000060(%edx)
		jne    _075d7c_jump
		mov    %ax,_0ced2a_data
		jmp    _075d88_jump

	_075d7c_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _075d6c_jump

	_075d88_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d36c_func
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d364_func
		mov    $0x000001,%eax
		mov    $0x000004,%edx
		mov    %ax,_0ced3c_data
		mov    %dx,_0cec5e_data

	_075dc5_jump:
		mov    %ecx,%eax
		call   _02f088_func
		call   _074f5c_func
		mov    %ecx,%eax
		call   _0759f8_func
		mov    %ecx,%eax
		call   _075ac8_func
		mov    %ecx,%eax
		mov    (%esp),%ebx
		call   _075bd4_func
		test   %bx,%bx
		jne    _075e82_jump
		cmp    $0x000002,%si
		jb     _075e82_jump
		cmp    $0x000003,%si
		jbe    _075e42_jump
		cmp    $0x000007,%si
		jne    _075e82_jump
		cmpb   $0x000009,0x00006b(%ecx)
		jne    _075e82_jump
		cmpw   $0x000000,_0ced36_data
		jne    _075e82_jump
		mov    $0x0000ff,%edi
		mov    0x00002a(%ecx),%edx
		mov    0x000026(%ecx),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		mov    %di,_0ced36_data
		call   _075250_func
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075e42_jump:
		cmpw   $0x000005,_0ced24_data
		jne    _075e6d_jump
		mov    $0x000008,%edx
		mov    %ecx,%eax
		mov    $0x000008,%ebx
		call   _01d364_func
		mov    %bx,_0ced24_data
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075e6d_jump:
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d364_func
		movw   $0x000005,_0ced24_data

	_075e82_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075e8c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		xor    %eax,%eax
		mov    _0cec5e_data,%dx
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%dx
		jae    _075f0e_jump
		test   %dx,%dx
		jne    _075f0e_jump
		test   %bx,%bx
		jne    _075f0e_jump
		test   %ax,%ax
		jbe    _075ec7_jump
		cmp    $0x000002,%ax
		jb     _075f0e_jump
		cmp    $0x000003,%ax
		jbe    _075ef1_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075ec7_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		xor    %edx,%edx
		mov    %dx,_0cec56_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_075ef1_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05efb0_func

	_075f0e_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_075f14_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		xor    %ebx,%ebx
		mov    0x00006d(%eax),%bl
		xor    %eax,%eax
		mov    _0cec5e_data,%dx
		mov    0x00006c(%ecx),%al
		cmp    $0x000001,%dx
		jb     _075f38_jump
		jbe    _075fc2_jump
		pop    %ecx
		pop    %ebx
		ret    

	_075f38_jump:
		test   %dx,%dx
		jne    _075fe2_jump
		test   %bx,%bx
		jne    _075fe2_jump
		cmp    $0x000001,%ax
		jb     _075f5b_jump
		jbe    _075f95_jump
		cmp    $0x000003,%ax
		jbe    _075fa2_jump
		pop    %ecx
		pop    %ebx
		ret    

	_075f5b_jump:
		test   %ax,%ax
		jne    _075fe2_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		movb   $0x000000,0x000073(%ecx)
		xor    %ebx,%ebx
		movb   $0x000051,0x00006b(%ecx)
		mov    %bx,_0cec56_data
		pop    %ecx
		pop    %ebx
		ret    

	_075f95_jump:
		cmpb   $0x000051,0x00006b(%ecx)
		jae    _075fe2_jump
		movb   $0x000051,0x00006b(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_075fa2_jump:
		mov    $0x000004,%edx
		mov    %ecx,%eax
		mov    $0x000001,%ebx
		call   _01d364_func
		mov    $0x000003,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		pop    %ecx
		pop    %ebx
		ret    

	_075fc2_jump:
		test   %bx,%bx
		jne    _075fe2_jump
		addl   $0x000002,0x000028(%ecx)
		incw   _0cec52_data
		cmp    $0x000002,%ax
		jb     _075fe2_jump
		cmp    $0x000003,%ax
		ja     _075fe2_jump
		mov    %bx,0x000048(%ecx)

	_075fe2_jump:
		pop    %ecx
		pop    %ebx
		ret    



_075fe8_func:
		mov    _0e5d74_data,%ax
		ret    



_075ff0_func:
		push   %edx
		mov    _0cdabc_data,%ax
		mov    %ax,_0cecee_data
		mov    _0cdac0_data,%ax
		mov    %ax,_0cece6_data
		mov    _0ced00_data,%ax
		mov    $0x000001,%edx
		mov    %ax,_0cecfa_data
		mov    _0cecea_data,%ax
		mov    %dx,_0cece4_data
		mov    %ax,_0cecfe_data
		pop    %edx
		ret    

_076030_switch:
		.long   _07616b_case
		.long   _076211_case
		.long   _076285_case
		.long   _0762e7_case
		.long   _076318_case
		.long   _07632d_case

_076048_switch:
		.long   _076367_case
		.long   _076543_case
		.long   _076676_case
		.long   _07678c_case
		.long   _0768a1_case
		.long   _076961_case

_076060_switch:
		.long   _076563_case
		.long   _07698a_case
		.long   _076581_case
		.long   _07698a_case
		.long   _07698a_case
		.long   _0765bb_case
		.long   _07698a_case
		.long   _0765dc_case
		.long   _07698a_case
		.long   _07661b_case
		.long   _07698a_case
		.long   _07698a_case
		.long   _0764f3_case
		.long   _07664a_case
		.long   _076660_case

_07609c_switch:
		.long   _076696_case
		.long   _07698a_case
		.long   _0766bf_case
		.long   _0766dd_case
		.long   _07698a_case
		.long   _07698a_case
		.long   _07698a_case
		.long   _076717_case
		.long   _07698a_case
		.long   _076738_case
		.long   _076761_case
		.long   _076776_case

_0760cc_switch:
		.long   _0767ac_case
		.long   _0767cd_case
		.long   _07698a_case
		.long   _07698a_case
		.long   _0767f7_case
		.long   _07698a_case
		.long   _076822_case
		.long   _07698a_case
		.long   _076843_case
		.long   _076875_case
		.long   _07688b_case

_0760f8_switch:
		.long   _0768c1_case
		.long   _07698a_case
		.long   _07698a_case
		.long   _07698a_case
		.long   _07698a_case
		.long   _07698a_case
		.long   _076915_case
		.long   _07698a_case
		.long   _07698a_case
		.long   _07693e_case
		.long   _07694e_case




_076124_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ebx
		mov    _0cece4_data,%cx
		xor    %edx,%edx
		test   %cx,%cx
		je     _076349_jump
		call   _075ff0_func
		cmpw   $0x000005,0x000060(%ebx)
		je     _076349_jump
		mov    _0cecd4_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _076349_jump
		and    $0x00ffff,%eax
		jmp    *%cs:_076030_switch(,%eax,4)

	_07616b_case:
		cmpw   $0x000002,_0cecc0_data
		jne    _076185_jump
		testb  $0x000001,_0cec70_data
		je     _076185_jump
		incw   _0cec74_data

	_076185_jump:
		cmpw   $0x000005,_0cecc0_data
		jne    _07619f_jump
		testb  $0x000001,_0cec78_data
		je     _07619f_jump
		incw   _0cec74_data

	_07619f_jump:
		cmpw   $0x000007,_0cecc0_data
		jne    _0761bb_jump
		testb  $0x000002,_0cec70_data
		je     _0761bb_jump
		movw   $0x000008,_0cecc0_data

	_0761bb_jump:
		cmpw   $0x00000d,_0cecc0_data
		jne    _0761d5_jump
		testb  $0x000002,_0cec78_data
		je     _0761d5_jump
		incw   _0cec74_data

	_0761d5_jump:
		cmpw   $0x00000f,_0cecc0_data
		jne    _0761f1_jump
		testb  $0x000002,_0cec78_data
		je     _0761f1_jump
		movw   $0x000001,_0cecda_data

	_0761f1_jump:
		cmpw   $0x000010,_0cecc0_data
		jne    _076349_jump
		testb  $0x000080,_0cec70_data
		je     _076349_jump
		jmp    _076340_jump

	_076211_case:
		cmpw   $0x000005,_0cecc0_data
		jne    _07622d_jump
		testb  $0x000001,_0cec79_data
		je     _07622d_jump
		movw   $0x000001,_0cecda_data

	_07622d_jump:
		cmpw   $0x000009,_0cecc0_data
		jne    _076249_jump
		testb  $0x000004,_0cec78_data
		je     _076249_jump
		movw   $0x000001,_0cecda_data

	_076249_jump:
		cmpw   $0x00000a,_0cecc0_data
		jne    _076265_jump
		testb  $0x000004,_0cec70_data
		je     _076265_jump
		movw   $0x00000b,_0cecc0_data

	_076265_jump:
		cmpw   $0x00000e,_0cecc0_data
		jne    _076349_jump
		testb  $0x000004,_0cec78_data
		je     _076349_jump
		jmp    _076340_jump

	_076285_case:
		mov    _0cecc0_data,%di
		cmp    $0x000001,%di
		jne    _0762a2_jump
		testb  $0x000008,_0cec78_data
		je     _0762a2_jump
		mov    %di,_0cecda_data

	_0762a2_jump:
		cmpw   $0x000009,_0cecc0_data
		jne    _0762be_jump
		testb  $0x000008,_0cec78_data
		je     _0762be_jump
		movw   $0x000001,_0cecda_data

	_0762be_jump:
		cmpw   $0x00000a,_0cecc0_data
		jne    _076349_jump
		testb  $0x000001,_0cec71_data
		je     _076349_jump
		movw   $0x00000b,_0cecc0_data
		jmp    _076349_jump

	_0762e7_case:
		cmpw   $0x000003,_0cecc0_data
		jne    _076303_jump
		testb  $0x000010,_0cec78_data
		je     _076303_jump
		movw   $0x000001,_0cecda_data

	_076303_jump:
		cmpw   $0x00000a,_0cecc0_data
		jne    _076349_jump
		testb  $0x000020,_0cec78_data
		je     _076349_jump
		jmp    _076340_jump

	_076318_case:
		cmpw   $0x000009,_0cecc0_data
		jne    _076349_jump
		testb  $0x000040,_0cec78_data
		je     _076349_jump
		jmp    _076340_jump

	_07632d_case:
		cmpw   $0x000003,_0cecc0_data
		jne    _076349_jump
		testb  $0x000080,_0cec78_data
		je     _076349_jump

	_076340_jump:
		movw   $0x000001,_0cecda_data

	_076349_jump:
		mov    _0cecd4_data,%ax
		dec    %eax
		cmp    $0x000005,%ax
		ja     _07698a_case
		and    $0x00ffff,%eax
		jmp    *%cs:_076048_switch(,%eax,4)

	_076367_case:
		mov    _0cecc0_data,%ax
		cmp    $0x00000c,%ax
		jb     _0763b3_jump
		jbe    _0764d2_jump
		cmp    $0x000013,%ax
		jb     _07639e_jump
		jbe    _0767b7_jump
		cmp    $0x000014,%ax
		jbe    _076517_jump
		cmp    $0x000015,%ax
		je     _07652d_jump
		jmp    _07698a_case

	_07639e_jump:
		cmp    $0x000011,%ax
		jb     _07698a_case
		jbe    _0764f3_case
		jmp    _076501_jump

	_0763b3_jump:
		cmp    $0x000004,%ax
		jb     _0763da_jump
		jbe    _076402_jump
		cmp    $0x000008,%ax
		jb     _07698a_case
		jbe    _07644f_jump
		cmp    $0x00000b,%ax
		je     _076490_jump
		jmp    _07698a_case

	_0763da_jump:
		cmp    $0x000002,%ax
		jne    _07698a_case
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07698a_case
		movw   $0x000015,_0cec74_data
		mov    $0x000001,%edx
		jmp    _07698a_case

	_076402_jump:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07641f_jump
		mov    $0x000014,%edi
		mov    $0x000001,%edx
		mov    %di,_0cec74_data
		jmp    _07698a_case

	_07641f_jump:
		mov    $0x000001,%esi
		mov    _094a60_data,%ch
		mov    %si,_0cecda_data
		test   $0x000001,%ch
		jne    _07698a_case
		mov    %ch,%al
		or     $0x000004,%al
		mov    %al,_094a60_data
		orb    $0x000004,_094bb4_data
		jmp    _07698a_case

	_07644f_jump:
		mov    $0x000001,%ebx
		mov    _094a74_data,%ah
		mov    %bx,_0cecda_data
		test   $0x000001,%ah
		jne    _076471_jump
		mov    %ah,%bl
		or     $0x000004,%bl
		mov    %bl,_094a74_data

	_076471_jump:
		mov    _094a9c_data,%bh
		test   $0x000001,%bh
		jne    _07698a_case
		mov    %bh,%cl
		or     $0x000004,%cl
		mov    %cl,_094a9c_data
		jmp    _07698a_case

	_076490_jump:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _0764aa_jump
		movw   $0x000012,_0cec74_data
		mov    $0x000001,%edx
		jmp    _07698a_case

	_0764aa_jump:
		mov    $0x000001,%eax
		mov    _094a88_data,%ch
		mov    %ax,_0cecda_data
		test   $0x000001,%ch
		jne    _07698a_case
		mov    %ch,%al
		or     $0x000004,%al
		mov    %al,_094a88_data
		jmp    _07698a_case

	_0764d2_jump:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07698a_case
		mov    $0x000013,%esi
		mov    $0x000001,%edx
		mov    %si,_0cec74_data
		jmp    _07698a_case

	_0764f3_case:
		movw   $0x000001,_0cecda_data
		jmp    _07698a_case

	_076501_jump:
		mov    $0x00000b,%edi
		mov    $0x000001,%edx
		mov    %di,_0cec74_data
		jmp    _07698a_case

	_076517_jump:
		mov    $0x000004,%ecx
		mov    $0x000001,%edx
		mov    %cx,_0cec74_data
		jmp    _07698a_case

	_07652d_jump:
		mov    $0x000002,%ebx
		mov    $0x000001,%edx
		mov    %bx,_0cec74_data
		jmp    _07698a_case

	_076543_case:
		mov    _0cecc0_data,%ax
		sub    $0x000004,%eax
		cmp    $0x00000e,%ax
		ja     _07698a_case
		and    $0x00ffff,%eax
		jmp    *%cs:_076060_switch(,%eax,4)

	_076563_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07698a_case
		movw   $0x000011,_0cec74_data
		mov    $0x000001,%edx
		jmp    _07698a_case

	_076581_case:
		mov    $0x000001,%edi
		mov    _094ab0_data,%bl
		mov    %di,_0cecda_data
		test   $0x000001,%bl
		jne    _07698a_case
		mov    %bl,%bh
		mov    _094bc8_data,%cl
		or     $0x000004,%bh
		or     $0x000004,%cl
		mov    %bh,_094ab0_data
		mov    %cl,_094bc8_data
		jmp    _07698a_case

	_0765bb_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07698a_case
		mov    $0x000012,%esi
		mov    $0x000001,%edx
		mov    %si,_0cec74_data
		jmp    _07698a_case

	_0765dc_case:
		mov    $0x000001,%ebx
		mov    _094ac4_data,%cl
		mov    %bx,_0cecda_data
		test   $0x000001,%cl
		jne    _0765fe_jump
		mov    %cl,%ch
		or     $0x000004,%ch
		mov    %ch,_094ac4_data

	_0765fe_jump:
		mov    _094aec_data,%al
		test   $0x000001,%al
		jne    _07698a_case
		mov    %al,%ah
		or     $0x000004,%ah
		mov    %ah,_094aec_data
		jmp    _07698a_case

	_07661b_case:
		movw   $0x000001,_0cecda_data
		mov    _094ad8_data,%ah
		test   $0x000001,%ah
		jne    _07698a_case
		mov    %ah,%bl
		or     $0x000004,%bl
		mov    %bl,_094ad8_data
		orb    $0x000004,_094bdc_data
		jmp    _07698a_case

	_07664a_case:
		mov    $0x000004,%esi
		mov    $0x000001,%edx
		mov    %si,_0cec74_data
		jmp    _07698a_case

	_076660_case:
		mov    $0x000009,%ecx
		mov    $0x000001,%edx
		mov    %cx,_0cec74_data
		jmp    _07698a_case

	_076676_case:
		mov    _0cecc0_data,%ax
		sub    $0x000002,%eax
		cmp    $0x00000b,%ax
		ja     _07698a_case
		and    $0x00ffff,%eax
		jmp    *%cs:_07609c_switch(,%eax,4)

	_076696_case:
		mov    $0x000001,%ebx
		mov    _094b00_data,%ch
		mov    %bx,_0cecda_data
		test   $0x000001,%ch
		jne    _07698a_case
		mov    %ch,%al
		or     $0x000004,%al
		mov    %al,_094b00_data
		jmp    _07698a_case

	_0766bf_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07698a_case
		movw   $0x00000c,_0cec74_data
		mov    $0x000001,%edx
		jmp    _07698a_case

	_0766dd_case:
		mov    $0x000001,%edi
		mov    _094b14_data,%bl
		mov    %di,_0cecda_data
		test   $0x000001,%bl
		jne    _07698a_case
		mov    %bl,%bh
		mov    _094bf0_data,%cl
		or     $0x000004,%bh
		or     $0x000004,%cl
		mov    %bh,_094b14_data
		mov    %cl,_094bf0_data
		jmp    _07698a_case

	_076717_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07698a_case
		mov    $0x00000d,%esi
		mov    $0x000001,%edx
		mov    %si,_0cec74_data
		jmp    _07698a_case

	_076738_case:
		mov    $0x000001,%ebx
		mov    _094b28_data,%al
		mov    %bx,_0cecda_data
		test   $0x000001,%al
		jne    _07698a_case
		mov    %al,%ah
		or     $0x000004,%ah
		mov    %ah,_094b28_data
		jmp    _07698a_case

	_076761_case:
		mov    $0x000004,%eax
		mov    $0x000001,%edx
		mov    %ax,_0cec74_data
		jmp    _07698a_case

	_076776_case:
		mov    $0x000009,%edi
		mov    $0x000001,%edx
		mov    %di,_0cec74_data
		jmp    _07698a_case

	_07678c_case:
		mov    _0cecc0_data,%ax
		sub    $0x000003,%eax
		cmp    $0x00000a,%ax
		ja     _07698a_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0760cc_switch(,%eax,4)

	_0767ac_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07698a_case

	_0767b7_jump:
		mov    $0x00000c,%esi
		mov    $0x000001,%edx
		mov    %si,_0cec74_data
		jmp    _07698a_case

	_0767cd_case:
		mov    $0x000001,%eax
		mov    _094b3c_data,%cl
		mov    %ax,_0cecda_data
		test   $0x000001,%cl
		jne    _07698a_case
		mov    %cl,%ch
		or     $0x000004,%ch
		mov    %ch,_094b3c_data
		jmp    _07698a_case

	_0767f7_case:
		mov    $0x000001,%edi
		mov    _094b50_data,%bl
		mov    %di,_0cecda_data
		test   $0x000001,%bl
		jne    _07698a_case
		mov    %bl,%bh
		or     $0x000004,%bh
		mov    %bh,_094b50_data
		jmp    _07698a_case

	_076822_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _07698a_case
		mov    $0x00000d,%esi
		mov    $0x000001,%edx
		mov    %si,_0cec74_data
		jmp    _07698a_case

	_076843_case:
		mov    $0x000001,%eax
		mov    _094b64_data,%ch
		mov    %ax,_0cecda_data
		test   $0x000001,%ch
		jne    _07698a_case
		call   _034db0_func
		orb    $0x000004,_094b64_data
		orb    $0x000004,_094c04_data
		jmp    _07698a_case

	_076875_case:
		mov    $0x000003,%edi
		mov    $0x000001,%edx
		mov    %di,_0cec74_data
		jmp    _07698a_case

	_07688b_case:
		mov    $0x000009,%esi
		mov    $0x000001,%edx
		mov    %si,_0cec74_data
		jmp    _07698a_case

	_0768a1_case:
		mov    _0cecc0_data,%ax
		sub    $0x000002,%eax
		cmp    $0x00000a,%ax
		ja     _07698a_case
		and    $0x00ffff,%eax
		jmp    *%cs:_0760f8_switch(,%eax,4)

	_0768c1_case:
		cmpw   $0x000005,0x000060(%ebx)
		jne    _0768de_jump
		mov    $0x00000c,%ecx
		mov    $0x000001,%edx
		mov    %cx,_0cec74_data
		jmp    _07698a_case

	_0768de_jump:
		movw   $0x000001,_0cecda_data
		mov    _094b78_data,%bl
		test   $0x000001,%bl
		jne    _07698a_case
		mov    %bl,%bh
		mov    _094c04_data,%cl
		or     $0x000004,%bh
		or     $0x000004,%cl
		mov    %bh,_094b78_data
		mov    %cl,_094c04_data
		jmp    _07698a_case

	_076915_case:
		mov    $0x000001,%edi
		mov    _094b8c_data,%ch
		mov    %di,_0cecda_data
		test   $0x000001,%ch
		jne    _07698a_case
		mov    %ch,%al
		or     $0x000004,%al
		mov    %al,_094b8c_data
		orb    $0x000004,_094c18_data
		jmp    _07698a_case

	_07693e_case:
		movw   $0x000001,_0cecda_data
		call   _034db0_func
		jmp    _07698a_case

	_07694e_case:
		mov    $0x000002,%ecx
		mov    $0x000001,%edx
		mov    %cx,_0cec74_data
		jmp    _07698a_case

	_076961_case:
		mov    _0cecc0_data,%ax
		cmp    $0x000004,%ax
		jne    _07698a_case
		movw   $0x000001,_0cecda_data
		mov    $0x000001,%bl
		mov    %bl,_0cee86_data
		mov    %bl,_0cee80_data
		mov    %bl,_0ceec1_data

	_07698a_case:
		mov    _094ba0_data,%bl
		test   $0x000001,%bl
		jne    _0769a9_jump
		cmpb   $0x000066,_0ceea3_data
		jb     _0769a9_jump
		mov    %bl,%cl
		or     $0x000004,%cl
		mov    %cl,_094ba0_data

	_0769a9_jump:
		cmpw   $0x000000,_0cecda_data
		jne    _0769bf_jump
		test   %dx,%dx
		jne    _0769bf_jump
		incw   _0cec74_data

	_0769bf_jump:
		movw   $0x000001,_0cecc4_data
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0769d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		mov    %eax,%esi
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _076ac5_jump

	_0769ef_jump:
		cmpw   $0x000013,0x000060(%ecx)
		jne    _076ab5_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _076ab5_jump
		mov    0x000081(%ecx),%ah
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		call   _053d0c_func
		cmpl   $0x000000,0x000024(%ecx)
		je     _076a29_jump
		mov    %ecx,%eax
		call   _01f304_func

	_076a29_jump:
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x000062(%esi),%dl
		cmp    $0x00000a,%dl
		jne    _076a56_jump
		mov    0x00002c(%esi),%ebp
		xor    %edx,%edx
		xor    %eax,%eax
		mov    0x000069(%esi),%dl
		mov    0x000069(%ecx),%al
		add    %ebp,%edx
		jmp    _076a8d_jump

	_076a56_jump:
		xor    %eax,%eax
		mov    %dl,%al
		testb  $0x000002,_092224_data(%eax)
		jne    _076a79_jump
		mov    _0cda88_data,%edx
		sar    $0x000010,%edx
		xor    %eax,%eax
		shl    $0x000004,%edx
		mov    0x000069(%ecx),%al
		sub    $0x000010,%edx
		jmp    _076a8d_jump

	_076a79_jump:
		mov    _0cda88_data,%edx
		sar    $0x000010,%edx
		xor    %eax,%eax
		shl    $0x000004,%edx
		mov    0x000069(%ecx),%al
		sub    $0x000006,%edx

	_076a8d_jump:
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01db8c_func
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		call   _01d374_func
		movb   $0x000000,0x00006b(%ecx)
		orb    $0x000040,0x000081(%esi)
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076ab5_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _0769ef_jump

	_076ac5_jump:
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076acc_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		xor    %eax,%eax
		mov    0x00006d(%edx),%al
		mov    0x00000c(%edx),%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006c(%edx),%al
		mov    (%ebx),%ebx
		shl    $0x000003,%eax
		add    %ebx,%eax
		mov    0x000060(%edx),%bx
		cmp    $0x00000f,%bx
		jne    _076b0e_jump
		mov    0x000005(%eax),%dh
		movb   $0x0000ff,0x000001(%eax)
		and    $0x00000f,%dh
		movb   $0x000001,(%eax)
		mov    %dh,%bl
		mov    %dh,0x000005(%eax)
		or     $0x0000a0,%bl
		mov    %bl,0x000005(%eax)
		pop    %edx
		pop    %ebx
		ret    

	_076b0e_jump:
		cmp    $0x00000d,%bx
		jne    _076b24_jump
		movb   $0x0000fe,0x000001(%eax)
		mov    0x000005(%eax),%dl
		movb   $0x000002,(%eax)
		and    $0x00000f,%dl
		mov    %dl,0x000005(%eax)

	_076b24_jump:
		pop    %edx
		pop    %ebx
		ret    



_076b28_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    0x00006d(%eax),%ah
		test   %ah,%ah
		jne    _076cf7_jump
		cmpb   $0x00000b,0x00006c(%esi)
		jne    _076cf7_jump
		cmpw   $0x000000,0x000052(%esi)
		jne    _076d09_jump
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%dx
		xor    %al,%al
		test   %dx,%dx
		jle    _076cea_jump

	_076b68_jump:
		mov    0x000060(%ecx),%bx
		cmp    $0x00000d,%bx
		je     _076b7c_jump
		cmp    $0x00000f,%bx
		jne    _076cda_jump

	_076b7c_jump:
		cmpl   $0x000000,0x000024(%ecx)
		jne    _076cda_jump
		mov    0x000081(%esi),%al
		mov    0x000081(%ecx),%bh
		and    $0x000008,%al
		and    $0x0000f7,%bh
		movl   $0x000001,0x000024(%ecx)
		mov    %bh,%ah
		mov    %bh,0x000081(%ecx)
		or     %al,%ah
		mov    $0x000002,%ebx
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		or     $0x000004,%dl
		mov    %ecx,%eax
		mov    %dl,0x000081(%ecx)
		call   _01f304_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _01d374_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    0x000008(%eax),%eax
		mov    0x000012(%eax),%al
		mov    %al,0x00006a(%ecx)
		xor    %eax,%eax
		mov    0x000028(%esi),%edx
		mov    0x000068(%esi),%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%ecx),%al
		mov    0x000081(%ecx),%bl
		sub    %eax,%edx
		test   $0x000008,%bl
		je     _076c01_jump
		mov    $0x000040,%eax
		jmp    _076c06_jump

	_076c01_jump:
		mov    $0xffffffc0,%eax

	_076c06_jump:
		add    %eax,%edx
		mov    %edx,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ecx)
		mov    0x000028(%ecx),%ax
		mov    %ax,0x00003c(%ecx)
		mov    0x00002c(%ecx),%ax
		mov    %ax,0x00003e(%ecx)
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000032(%ecx),%edx
		mov    $0x000018,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		testb  $0x000008,0x000081(%ecx)
		je     _076c4f_jump
		mov    $0x000001,%ebx
		mov    $0x000003,%edx
		mov    %ecx,%eax
		jmp    _076c58_jump

	_076c4f_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx

	_076c58_jump:
		call   _05efb0_func
		cmpw   $0x00000e,0x000060(%esi)
		jne    _076cba_jump
		mov    _0cdabc_data,%edi
		mov    0x000028(%esi),%eax
		sub    %edi,%eax
		test   %eax,%eax
		jge    _076c75_jump
		neg    %eax

	_076c75_jump:
		sar    $0x000005,%eax
		movw   $0x00000f,0x000060(%ecx)
		mov    %eax,%edi
		mov    0x00002c(%esi),%ebp
		mov    _0cdac0_data,%eax
		sub    %ebp,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0cdabc_data,%ebx
		mov    0x000028(%esi),%eax
		sub    %ebx,%eax
		test   %eax,%eax
		jge    _076ca2_jump
		neg    %eax

	_076ca2_jump:
		mov    %eax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %di,%edx
		movb   $0x00000a,0x000072(%ecx)
		sub    %edx,%eax
		mov    %ax,0x000042(%ecx)
		jmp    _076cc6_jump

	_076cba_jump:
		movw   $0x00000d,0x000060(%ecx)
		movw   $0x000000,0x000042(%ecx)

	_076cc6_jump:
		mov    %ecx,%eax
		call   _01db8c_func
		movw   $0x000001,0x000052(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076cda_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _076b68_jump

	_076cea_jump:
		movw   $0x000001,0x000052(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076cf7_jump:
		cmpb   $0x000000,0x00006d(%esi)
		jne    _076d09_jump
		cmpb   $0x000002,0x00006c(%esi)
		jne    _076d09_jump
		movw   $0x000000,0x000052(%esi)

	_076d09_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076d10_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    0x000032(%eax),%edx
		mov    _0ce324_data,%ebx
		sar    $0x000010,%edx
		mov    (%ebx,%edx,2),%dx
		cmp    0x000034(%eax),%dx
		je     _076d8b_jump
		movswl %dx,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc1f0_data,%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		mov    0x000081(%edx),%bl
		movw   $0x000018,0x000060(%edx)
		and    $0x0000ef,%bl
		mov    %bl,0x000081(%edx)
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%cx
		mov    0x000069(%edx),%bl
		mov    0x00002c(%eax),%si
		add    %ecx,%ebx
		mov    0x000069(%eax),%al
		sub    %esi,%ebx
		xor    %ah,%ah
		sub    %eax,%ebx
		mov    %ebx,%eax
		test   %bx,%bx
		setle  %bl
		and    $0x0000ff,%ebx
		add    $0x000003,%ebx
		cwtl   
		mov    %bl,0x000070(%edx)
		test   %eax,%eax
		jge    _076d87_jump
		neg    %eax

	_076d87_jump:
		mov    %ax,0x000048(%edx)

	_076d8b_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076d90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    _0cc1f0_data,%eax
		mov    _0cc1f4_data,%si
		xor    %dl,%dl
		xor    %ebx,%ebx
		test   %si,%si
		jle    _076de5_jump

	_076dae_jump:
		cmpw   $0x000027,0x000060(%eax)
		jne    _076dda_jump
		movzbl %dl,%edi
		mov    0x000034(%eax),%cx
		mov    %cx,(%esp,%edi,2)
		mov    0x000024(%eax),%ecx
		inc    %dl
		test   %ecx,%ecx
		jne    _076dd1_jump
		movw   $0x00000a,0x000056(%eax)
		jmp    _076dd5_jump

	_076dd1_jump:
		incw   0x000056(%eax)

	_076dd5_jump:
		cmp    $0x000002,%dl
		jae    _076de5_jump

	_076dda_jump:
		inc    %ebx
		add    $0x000084,%eax
		cmp    %si,%bx
		jl     _076dae_jump

	_076de5_jump:
		mov    -0x000002(%esp),%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		mov    (%esp),%esi
		lea    (%eax,%edx,1),%ebp
		mov    %esi,%ebx
		xor    %al,%al

	_076e05_jump:
		movswl %bx,%edx
		imul   $0x000084,%edx,%edx
		movswl %si,%edi
		imul   $0x000084,%edi,%edi
		mov    _0cc1f0_data,%ecx
		add    %ecx,%edx
		add    %ecx,%edi
		mov    0x000056(%edx),%cx
		cmp    0x000056(%edi),%cx
		jle    _076e2f_jump
		mov    %ebx,%esi
		mov    %edx,%ebp

	_076e2f_jump:
		inc    %al
		xor    %edx,%edx
		mov    %al,%dl
		mov    (%esp,%edx,2),%bx
		cmp    $0x000002,%al
		jb     _076e05_jump
		mov    %ebp,%eax
		movw   $0x000001,0x000056(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076e50_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		push   %ebp
		cmpl   $0x000001,_0bd560_data
		je     _076e66_jump
		xor    %ebx,%ebx
		mov    %ebx,_0bd560_data

	_076e66_jump:
		xor    %eax,%eax
		mov    _0cdafe_data,%al
		lea    0x000000(,%eax,4),%ecx
		sub    %eax,%ecx
		mov    _0cda98_data,%eax
		mov    0x00000a(%eax,%ecx,4),%ax
		xor    %edx,%edx
		and    $0x00ffff,%eax
		mov    _0cdaff_data,%dl
		dec    %eax
		cmp    %eax,%edx
		jne    _076f3c_jump
		cmpl   $0x000000,_0bd560_data
		jne    _076f44_jump
		call   _076d90_func
		mov    0x000024(%eax),%edi
		mov    %eax,%ecx
		test   %edi,%edi
		je     _076eb8_jump
		call   _0772d8_func
		jmp    _076ebd_jump

	_076eb8_jump:
		call   _01f304_func

	_076ebd_jump:
		mov    0x000081(%ecx),%ah
		mov    $0x000026,%ebx
		or     $0x000004,%ah
		xor    %edx,%edx
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01d374_func
		mov    0x00000c(%ecx),%eax
		movb   $0x000000,0x00006b(%ecx)
		mov    (%eax),%eax
		mov    0x000132(%eax),%al
		mov    _0cdabc_data,%ebp
		mov    %al,0x00006a(%ecx)
		xor    %eax,%eax
		xor    %edx,%edx
		mov    _0cdafc_data,%al
		mov    0x000068(%ecx),%dl
		add    %ebp,%eax
		sub    %edx,%eax
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		mov    _0cdac0_data,%edx
		mov    _0cdafd_data,%al
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		sub    %eax,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		call   _01db8c_func
		movl   $0x000001,_0bd560_data
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_076f3c_jump:
		xor    %ecx,%ecx
		mov    %ecx,_0bd560_data

	_076f44_jump:
		pop    %ebp
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_076f4c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%dx
		xor    %ebx,%ebx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _077017_jump

	_076f6c_jump:
		cmpw   $0x000053,0x000060(%ecx)
		jne    _077007_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _077007_jump
		mov    %ecx,%eax
		xor    %ebx,%ebx
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%ecx),%ah
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ecx)
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01f304_func
		mov    0x000068(%esi),%bl
		mov    0x000028(%esi),%eax
		add    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		sub    %ebx,%eax
		mov    %eax,0x000028(%ecx)
		xor    %eax,%eax
		xor    %ebx,%ebx
		mov    0x000069(%esi),%al
		mov    0x00002c(%esi),%esi
		mov    0x000069(%ecx),%bl
		add    %eax,%esi
		sub    %ebx,%esi
		mov    %ecx,%eax
		add    $0x00000a,%esi
		xor    %ebx,%ebx
		mov    %esi,0x00002c(%ecx)
		call   _01db8c_func
		mov    0x00006d(%ecx),%bl
		mov    0x00000c(%ecx),%eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%ebx
		mov    0x00006c(%ecx),%al
		mov    0x000002(%ebx,%eax,8),%al
		movb   $0x000000,0x00006b(%ecx)
		movb   $0x000002,0x000073(%ecx)
		mov    %ecx,%ebx
		mov    %al,0x00006a(%ecx)
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_077007_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _076f6c_jump

	_077017_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077020_func:
		push   %edx
		mov    %eax,%edx
		call   _076f4c_func
		mov    0x000081(%edx),%ah
		movl   $0x000000,0x000024(%edx)
		and    $0x0000fb,%ah
		mov    %ah,0x000081(%edx)
		pop    %edx
		ret    



_077040_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0770e3_jump

	_07705e_jump:
		cmpw   $0x00008b,0x000060(%ecx)
		jne    _0770d3_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0770d3_jump
		mov    0x000081(%esi),%al
		and    $0x000008,%al
		mov    0x000081(%ecx),%ah
		movw   $0x000000,0x000042(%ecx)
		and    $0x0000f7,%ah
		movw   $0x000000,0x000040(%ecx)
		mov    %ah,%dl
		mov    %ah,0x000081(%ecx)
		or     %al,%dl
		mov    %dl,0x000081(%ecx)
		mov    0x000028(%esi),%eax
		mov    %eax,0x000028(%ecx)
		mov    0x00002c(%esi),%eax
		mov    %eax,0x00002c(%ecx)
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f304_func
		movb   $0x000000,0x000071(%ecx)
		movb   $0x000007,0x000072(%ecx)
		jmp    _0770e3_jump

	_0770d3_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _07705e_jump

	_0770e3_jump:
		mov    $0x000001,%ebx
		mov    $0x000063,%edx
		mov    %esi,%eax
		call   _05efb0_func
		cmpb   $0x000014,0x000070(%esi)
		jne    _07710a_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%esi)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%esi)

	_07710a_jump:
		mov    $0x00000c,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		call   _01d374_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077120_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		mov    _0cdabc_data,%ax
		mov    0x000028(%edx),%bx
		sub    %ebx,%eax
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    0x000068(%edx),%al
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdafc_data,%al
		mov    0x00002c(%edx),%cx
		add    %ebx,%eax
		mov    _0cdac0_data,%bx
		mov    0x000069(%edx),%dl
		sub    %ecx,%ebx
		xor    %dh,%dh
		sub    %edx,%ebx
		mov    _0cdafd_data,%dl
		add    %ebx,%edx
		test   %ax,%ax
		setg   %cl
		test   %dx,%dx
		setg   %ch
		test   %cl,%cl
		jne    _077172_jump
		neg    %eax

	_077172_jump:
		test   %ch,%ch
		jne    _077178_jump
		neg    %edx

	_077178_jump:
		cmp    $0x0000c8,%ax
		jle    _077186_jump
		cwtl   
		movswl %dx,%edx
		sar    %eax
		sar    %edx

	_077186_jump:
		test   %dx,%dx
		jne    _0771a3_jump
		test   %cl,%cl
		je     _077199_jump
		mov    $0x000180,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_077199_jump:
		mov    $0x000080,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0771a3_jump:
		cmp    %ax,%dx
		jle    _0771c3_jump
		movswl %ax,%ebx
		shl    $0x000006,%ebx
		movswl %dx,%esi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		cwtl   
		mov    _094a00_data(%eax),%al
		jmp    _0771e0_jump

	_0771c3_jump:
		movswl %dx,%edx
		shl    $0x000006,%edx
		movswl %ax,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		cwtl   
		mov    $0x000080,%dl
		mov    _094a00_data(%eax),%dh
		mov    %dl,%al
		sub    %dh,%al

	_0771e0_jump:
		test   %cl,%cl
		je     _0771fb_jump
		test   %ch,%ch
		je     _0771ef_jump
		mov    $0x000180,%edx
		jmp    _077210_jump

	_0771ef_jump:
		xor    %ah,%ah
		add    $0x000180,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0771fb_jump:
		test   %ch,%ch
		je     _07720b_jump
		xor    %ah,%ah
		add    $0x000080,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07720b_jump:
		mov    $0x000080,%edx

	_077210_jump:
		xor    %ah,%ah
		sub    %eax,%edx
		mov    %edx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07721c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    _0cc1e8_data,%edx
		movswl (%edx),%ecx
		mov    %ecx,%edx
		shl    $0x000005,%edx
		add    %ecx,%edx
		mov    _0cc1f0_data,%ecx
		shl    $0x000002,%edx
		xor    %ebx,%ebx
		add    %edx,%ecx
		mov    _0cc1ec_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0772cf_jump
		mov    _0cc1ec_data,%si

	_077256_jump:
		cmpw   $0x00008f,0x000060(%ecx)
		jne    _0772ae_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0772ae_jump
		mov    $0x000014,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d374_func
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01f304_func
		mov    0x00006d(%ecx),%dl
		mov    0x00000c(%ecx),%ebx
		shl    $0x000002,%edx
		lea    (%ebx,%edx,1),%eax
		xor    %edx,%edx
		mov    0x00006c(%ecx),%dl
		lea    0x000000(,%edx,8),%ebx
		mov    (%eax),%edx
		mov    0x000002(%edx,%ebx,1),%al
		movb   $0x000000,0x00006b(%ecx)
		mov    %ecx,%ebx
		mov    %al,0x00006a(%ecx)
		jmp    _0772cf_jump

	_0772ae_jump:
		inc    %eax
		mov    _0cc1e8_data,%edx
		movswl %ax,%ecx
		movswl (%edx,%ecx,2),%ecx
		imul   $0x000084,%ecx,%ecx
		mov    _0cc1f0_data,%edx
		add    %edx,%ecx
		cmp    %si,%ax
		jl     _077256_jump

	_0772cf_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0772d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000020,%esp
		mov    %eax,%edi
		call   _07721c_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _077399_jump
		mov    0x000028(%edi),%edx
		mov    %edx,0x000028(%eax)
		mov    0x00002c(%edi),%edx
		mov    %edx,0x00002c(%eax)
		lea    0x00001c(%esp),%edx
		mov    %esp,%ecx
		push   %edx
		lea    0x000014(%esp),%ebx
		lea    0x000018(%esp),%edx
		call   _01d294_func
		lea    0x000018(%esp),%edx
		lea    0x000004(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %edx
		mov    %edi,%eax
		lea    0x000010(%esp),%edx
		call   _01d294_func
		movl   $0x000001,0x000024(%esi)
		mov    0x000002(%esp),%edx
		mov    0x00000a(%esp),%ebx
		mov    -0x000002(%esp),%ecx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		sar    $0x000010,%ecx
		add    %edx,%ebx
		mov    0x000012(%esp),%edx
		sar    %ecx
		sar    $0x000010,%edx
		add    %ecx,%edx
		sub    %edx,%ebx
		add    %ebx,0x000028(%esi)
		mov    0x000016(%esp),%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		lea    (%ebx,%edx,1),%ecx
		mov    0x00001a(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		movb   $0x000001,0x00007e(%esi)
		add    %ebx,%edx
		mov    0x00002c(%esi),%ebx
		sub    %edx,%ecx
		movw   $0x000000,0x000050(%esi)
		add    %ecx,%ebx
		mov    %esi,%eax
		mov    %ebx,0x00002c(%esi)
		call   _01db8c_func

	_077399_jump:
		add    $0x000020,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_0773a4_switch:
		.long   _0774a0_case
		.long   _07746c_case
		.long   _077472_case
		.long   _077480_case
		.long   _077486_case




_0773b8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebp
		xor    %edx,%edx
		mov    %edx,0x000020(%esp)

	_0773c9_jump:
		call   _07721c_func
		mov    %eax,%esi
		mov    %eax,%edi
		test   %eax,%eax
		je     _0774c8_jump
		mov    0x000028(%ebp),%eax
		mov    %eax,0x000028(%esi)
		mov    0x00002c(%ebp),%eax
		lea    0x00000c(%esp),%ecx
		mov    %eax,0x00002c(%esi)
		mov    %esp,%eax
		lea    0x000010(%esp),%ebx
		push   %eax
		lea    0x000008(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		lea    0x000014(%esp),%eax
		lea    0x000018(%esp),%ecx
		lea    0x000008(%esp),%ebx
		push   %eax
		lea    0x000020(%esp),%edx
		mov    %ebp,%eax
		call   _01d294_func
		mov    0x00000a(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		sar    %eax
		add    %edx,%eax
		mov    0x00001a(%esp),%edx
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    %edx,%eax
		mov    -0x000002(%esp),%edx
		mov    0x00000e(%esp),%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%ebx
		sar    %edx
		add    %ebx,%edx
		mov    0x000006(%esp),%ebx
		sar    $0x000010,%ebx
		movl   $0x000001,0x000024(%esi)
		sub    %edx,%ebx
		mov    0x000020(%esp),%esi
		mov    %ebx,%edx
		cmp    $0x000004,%si
		ja     _0774a0_case
		xor    %ebx,%ebx
		mov    %si,%bx
		jmp    *%cs:_0773a4_switch(,%ebx,4)

	_07746c_case:
		add    0x000018(%esp),%eax
		jmp    _0774a0_case

	_077472_case:
		mov    0x000018(%esp),%ecx
		mov    0x000014(%esp),%esi
		add    %ecx,%eax
		add    %esi,%edx
		jmp    _0774a0_case

	_077480_case:
		add    0x000014(%esp),%edx
		jmp    _0774a0_case

	_077486_case:
		mov    0x000016(%esp),%ebx
		sar    $0x000010,%ebx
		cwtl   
		sar    %ebx
		add    %ebx,%eax
		mov    0x000012(%esp),%ebx
		sar    $0x000010,%ebx
		movswl %dx,%edx
		sar    %ebx
		add    %ebx,%edx

	_0774a0_case:
		cwtl   
		mov    0x000028(%edi),%ebx
		mov    0x00002c(%edi),%ecx
		add    %eax,%ebx
		movswl %dx,%eax
		add    %eax,%ecx
		mov    %ecx,0x00002c(%edi)
		imul   $0x000005,0x000020(%esp),%eax
		movb   $0x000000,0x00007e(%edi)
		mov    %ax,0x000050(%edi)
		mov    %edi,%eax
		mov    %ebx,0x000028(%edi)
		call   _01db8c_func

	_0774c8_jump:
		mov    0x000020(%esp),%ebx
		inc    %ebx
		mov    %ebx,0x000020(%esp)
		cmp    $0x000004,%bx
		jle    _0773c9_jump
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0774e8_func:
		push   %ebx
		push   %edx
		call   _07721c_func
		test   %eax,%eax
		je     _077535_jump
		movb   $0x000000,0x00007e(%eax)
		mov    _0cecfe_data,%edx
		movb   $0x00000a,0x00007f(%eax)
		xor    %ebx,%ebx
		sar    $0x000010,%edx
		mov    0x000068(%eax),%bl
		movw   $0x0000ff,0x000050(%eax)
		add    %ebx,%edx
		xor    %ebx,%ebx
		mov    %edx,0x000028(%eax)
		mov    _0cece8_data,%edx
		mov    0x000069(%eax),%bl
		sar    $0x000010,%edx
		movl   $0x000001,0x000024(%eax)
		add    %ebx,%edx
		mov    %edx,0x00002c(%eax)
		mov    0x000034(%eax),%ax
		pop    %edx
		pop    %ebx
		ret    

	_077535_jump:
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

_077540_switch:
		.long   _077628_case
		.long   _077639_case
		.long   _07764a_case
		.long   _07765b_case
		.long   _07766c_case
		.long   _07767d_case
		.long   _07768e_case
		.long   _07769f_case
		.long   _0776b0_case
		.long   _0776c1_case
		.long   _0776d2_case
		.long   _0776e3_case
		.long   _0776f4_case
		.long   _077705_case
		.long   _077716_case
		.long   _077727_case
		.long   _077738_case
		.long   _077749_case
		.long   _07775a_case
		.long   _07776b_case
		.long   _07777c_case
		.long   _07778d_case
		.long   _07779e_case
		.long   _0777af_case
		.long   _0777c0_case
		.long   _0777d1_case
		.long   _0777e2_case
		.long   _0777f3_case
		.long   _077804_case
		.long   _077812_case
		.long   _077820_case
		.long   _07782e_case
		.long   _07783c_case
		.long   _07784a_case
		.long   _077858_case
		.long   _077866_case




_0775d0_func:
		push   %ecx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %dx,(%esp)
		mov    %ebx,%ecx
		mov    _0cc1f0_data,%edx
		mov    _0cc1f4_data,%ax
		xor    %ebx,%ebx
		test   %ax,%ax
		jle    _0778e8_jump

	_0775f4_jump:
		cmpw   $0x000092,0x000060(%edx)
		jne    _0778d8_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _0778d8_jump
		andb   $0x0000f7,0x000081(%edx)
		cmp    $0x000023,%cx
		ja     _077872_jump
		xor    %eax,%eax
		mov    %cx,%ax
		jmp    *%cs:_077540_switch(,%eax,4)

	_077628_case:
		movw   $0x000100,0x000056(%edx)
		movw   $0x000000,0x00004a(%edx)
		jmp    _077872_jump

	_077639_case:
		movw   $0x0000fc,0x000056(%edx)
		movw   $0x00ffd4,0x00004a(%edx)
		jmp    _077872_jump

	_07764a_case:
		movw   $0x0000f0,0x000056(%edx)
		movw   $0x00ffa9,0x00004a(%edx)
		jmp    _077872_jump

	_07765b_case:
		movw   $0x0000dd,0x000056(%edx)
		movw   $0x00ff80,0x00004a(%edx)
		jmp    _077872_jump

	_07766c_case:
		movw   $0x0000c4,0x000056(%edx)
		movw   $0x00ff5c,0x00004a(%edx)
		jmp    _077872_jump

	_07767d_case:
		movw   $0x0000a4,0x000056(%edx)
		movw   $0x00ff3c,0x00004a(%edx)
		jmp    _077872_jump

	_07768e_case:
		movw   $0x000080,0x000056(%edx)
		movw   $0x00ff23,0x00004a(%edx)
		jmp    _077872_jump

	_07769f_case:
		movw   $0x000057,0x000056(%edx)
		movw   $0x00ff10,0x00004a(%edx)
		jmp    _077872_jump

	_0776b0_case:
		movw   $0x00002c,0x000056(%edx)
		movw   $0x00ff04,0x00004a(%edx)
		jmp    _077872_jump

	_0776c1_case:
		movw   $0x00ff04,0x000056(%edx)
		movw   $0x00ffd4,0x00004a(%edx)
		jmp    _077872_jump

	_0776d2_case:
		movw   $0x00ff10,0x000056(%edx)
		movw   $0x00ffa9,0x00004a(%edx)
		jmp    _077872_jump

	_0776e3_case:
		movw   $0x00ff23,0x000056(%edx)
		movw   $0x00ff80,0x00004a(%edx)
		jmp    _077872_jump

	_0776f4_case:
		movw   $0x00ff3c,0x000056(%edx)
		movw   $0x00ff5c,0x00004a(%edx)
		jmp    _077872_jump

	_077705_case:
		movw   $0x00ff5c,0x000056(%edx)
		movw   $0x00ff3c,0x00004a(%edx)
		jmp    _077872_jump

	_077716_case:
		movw   $0x00ff80,0x000056(%edx)
		movw   $0x00ff23,0x00004a(%edx)
		jmp    _077872_jump

	_077727_case:
		movw   $0x00ffa9,0x000056(%edx)
		movw   $0x00ff10,0x00004a(%edx)
		jmp    _077872_jump

	_077738_case:
		movw   $0x00ffd4,0x000056(%edx)
		movw   $0x00ff04,0x00004a(%edx)
		jmp    _077872_jump

	_077749_case:
		movw   $0x000000,0x000056(%edx)
		movw   $0x00ff00,0x00004a(%edx)
		jmp    _077872_jump

	_07775a_case:
		movw   $0x00ff00,0x000056(%edx)
		movw   $0x000000,0x00004a(%edx)
		jmp    _077872_jump

	_07776b_case:
		movw   $0x00ff04,0x000056(%edx)
		movw   $0x00002c,0x00004a(%edx)
		jmp    _077872_jump

	_07777c_case:
		movw   $0x00ff10,0x000056(%edx)
		movw   $0x000057,0x00004a(%edx)
		jmp    _077872_jump

	_07778d_case:
		movw   $0x00ff23,0x000056(%edx)
		movw   $0x000080,0x00004a(%edx)
		jmp    _077872_jump

	_07779e_case:
		movw   $0x00ff3c,0x000056(%edx)
		movw   $0x0000a4,0x00004a(%edx)
		jmp    _077872_jump

	_0777af_case:
		movw   $0x00ff5c,0x000056(%edx)
		movw   $0x0000c4,0x00004a(%edx)
		jmp    _077872_jump

	_0777c0_case:
		movw   $0x00ff80,0x000056(%edx)
		movw   $0x0000dd,0x00004a(%edx)
		jmp    _077872_jump

	_0777d1_case:
		movw   $0x00ffa9,0x000056(%edx)
		movw   $0x0000f0,0x00004a(%edx)
		jmp    _077872_jump

	_0777e2_case:
		movw   $0x00ffd4,0x000056(%edx)
		movw   $0x0000fc,0x00004a(%edx)
		jmp    _077872_jump

	_0777f3_case:
		movw   $0x0000fc,0x000056(%edx)
		movw   $0x00002c,0x00004a(%edx)
		jmp    _077872_jump

	_077804_case:
		movw   $0x0000f0,0x000056(%edx)
		movw   $0x000057,0x00004a(%edx)
		jmp    _077872_jump

	_077812_case:
		movw   $0x0000dd,0x000056(%edx)
		movw   $0x000080,0x00004a(%edx)
		jmp    _077872_jump

	_077820_case:
		movw   $0x0000c4,0x000056(%edx)
		movw   $0x0000a4,0x00004a(%edx)
		jmp    _077872_jump

	_07782e_case:
		movw   $0x0000a4,0x000056(%edx)
		movw   $0x0000c4,0x00004a(%edx)
		jmp    _077872_jump

	_07783c_case:
		movw   $0x000080,0x000056(%edx)
		movw   $0x0000dd,0x00004a(%edx)
		jmp    _077872_jump

	_07784a_case:
		movw   $0x000057,0x000056(%edx)
		movw   $0x0000f0,0x00004a(%edx)
		jmp    _077872_jump

	_077858_case:
		movw   $0x00002c,0x000056(%edx)
		movw   $0x0000fc,0x00004a(%edx)
		jmp    _077872_jump

	_077866_case:
		movw   $0x000000,0x000056(%edx)
		movw   $0x000100,0x00004a(%edx)

	_077872_jump:
		movswl %si,%eax
		movw   $0x000000,0x000040(%edx)
		mov    %eax,0x000028(%edx)
		mov    -0x000002(%esp),%eax
		movw   $0x000000,0x000042(%edx)
		sar    $0x000010,%eax
		mov    %eax,0x00002c(%edx)
		mov    0x000056(%edx),%ax
		mov    %ax,0x00003c(%edx)
		mov    0x00004a(%edx),%ax
		mov    %ax,0x00003e(%edx)
		mov    %edx,%eax
		mov    %cl,0x000076(%edx)
		call   _01db8c_func
		mov    0x000081(%edx),%cl
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%cl
		mov    %edx,%eax
		mov    %cl,0x000081(%edx)
		call   _01f304_func
		mov    $0x0000cd,%eax
		movswl %bx,%edx
		call   _06f35c_func
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		ret    

	_0778d8_jump:
		inc    %ebx
		add    $0x000084,%edx
		cmp    %ax,%bx
		jl     _0775f4_jump

	_0778e8_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %ecx
		ret    



_0778f0_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    _0cdb20_data,%eax
		cmpl   $0x000000,0x000024(%eax)
		jne    _077931_jump
		mov    _0cec9e_data,%edx
		mov    _0cec9a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sar    %edx
		add    %edx,%eax
		mov    %eax,%edx
		mov    _0cecb8_data,%eax
		mov    _0cec9c_data,%edi
		sar    $0x000010,%eax
		sar    $0x000010,%edi
		sar    %eax
		jmp    _077947_jump

	_077931_jump:
		xor    %edx,%edx
		mov    0x000028(%eax),%di
		mov    0x000068(%eax),%dl
		add    %edi,%edx
		movzbl 0x000069(%eax),%edi
		add    %edi,%edi
		mov    0x00002c(%eax),%eax
		sar    %edi

	_077947_jump:
		add    %edi,%eax
		mov    0x000028(%esi),%di
		sub    %edi,%edx
		mov    %edx,(%esp)
		xor    %edx,%edx
		mov    (%esp),%edi
		mov    0x000068(%esi),%dl
		sub    %edx,%edi
		mov    %di,0x000000(%ebp)
		xor    %edx,%edx
		movzbl 0x000074(%esi),%edi
		mov    0x000069(%esi),%dl
		add    %edx,%edi
		mov    0x00002c(%esi),%ebp
		sar    %edi
		cwtl   
		add    %ebp,%edi
		sub    %eax,%edi
		mov    %edi,%eax
		test   %eax,%eax
		jge    _07797d_jump
		neg    %eax

	_07797d_jump:
		mov    %ax,(%ebx)
		xor    %eax,%eax
		mov    0x00007a(%esi),%al
		shl    $0x000002,%eax
		mov    %ax,(%ecx)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_077994_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    $0xffffffff,%ebx
		xor    %eax,%eax

	_07799e_jump:
		movswl %ax,%edx
		imul   $0x000282,%edx,%edx
		cmpw   $0x000000,_0c90f0_data(%edx)
		jne    _0779c1_jump
		mov    $0x000001,%esi
		mov    %eax,%ebx
		mov    %si,_0c90f0_data(%edx)
		jmp    _0779c8_jump

	_0779c1_jump:
		inc    %eax
		cmp    $0x000008,%ax
		jl     _07799e_jump

	_0779c8_jump:
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_0779d0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,%ecx
		mov    %edx,%ebx
		call   _077994_func
		movswl %ax,%edx
		mov    %ax,0x00000c(%esp)
		cmp    $0xffffffff,%edx
		je     _077ac8_jump
		mov    $0x000100,%edi
		lea    0x000000(,%edx,4),%eax
		shl    $0x000006,%ecx
		xor    %esi,%esi
		shl    $0x000006,%ebx
		mov    %si,0x000010(%esp)
		mov    %ecx,0x000004(%esp)
		mov    %ebx,0x000008(%esp)
		add    %edx,%eax
		mov    $0x000040,%esi
		shl    $0x000006,%eax
		mov    $0x000020,%ecx
		add    %edx,%eax
		mov    $_0c8e70_data,%edx
		add    %eax,%eax
		mov    $0x000080,%ebx
		add    %eax,%edx
		jmp    _077aa6_jump

	_077a34_jump:
		mov    0x000004(%esp),%eax
		mov    %ax,(%edx)
		mov    0x000008(%esp),%eax
		mov    %ax,0x000002(%edx)
		movswl %bx,%eax
		add    $0x000002,%edx
		call   _0690e0_func
		sub    %edi,%eax
		add    $0x000002,%edx
		mov    %eax,(%esp)
		movswl %si,%eax
		add    $0x000002,%edx
		call   _0690e0_func
		sub    %ecx,%eax
		add    $0x000002,%edx
		mov    %ax,-0x000004(%edx)
		mov    (%esp),%eax
		mov    %ax,-0x000002(%edx)
		mov    $0x000008,%eax
		add    $0x000002,%edx
		call   _0690e0_func
		mov    %ax,0x000014(%esp)
		add    $0x000004,%ebx
		mov    0x000014(%esp),%al
		add    $0x000002,%edi
		add    $0x000008,%al
		add    $0x000004,%esi
		mov    %al,-0x000002(%edx)
		mov    0x000010(%esp),%eax
		add    $0x000002,%ecx
		inc    %eax
		movb   $0x000080,-0x000001(%edx)
		mov    %ax,0x000010(%esp)

	_077aa6_jump:
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		mov    $0x000040,%ebp
		shl    $0x000003,%eax
		sub    %eax,%ebp
		mov    %ebp,%eax
		mov    0x00000e(%esp),%ebp
		sar    $0x000010,%ebp
		cmp    %ebp,%eax
		jg     _077a34_jump

	_077ac8_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_077ad4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0cc47c_data,%ebp
		mov    _0cecf6_data,%ax
		mov    _0cecf8_data,%di
		xor    %edx,%edx
		shl    $0x000006,%eax
		shl    $0x000006,%edi
		mov    %dx,0x000004(%esp)
		mov    %eax,(%esp)

	_077b00_jump:
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000282,%eax,%eax
		cmpw   $0x000001,_0c90f0_data(%eax)
		jne    _077ba9_jump
		add    $_0c8e70_data,%eax
		xor    %esi,%esi
		xor    %edx,%edx

	_077b24_jump:
		cmpb   $0x000080,0x000009(%eax)
		jb     _077b8b_jump
		mov    (%esp),%ecx
		mov    0x000004(%eax),%bx
		sub    %ecx,%ebx
		add    %bx,(%eax)
		mov    0x000006(%eax),%bx
		mov    0x000002(%eax),%cx
		sub    %edi,%ebx
		add    %ebx,%ecx
		mov    %cx,0x000002(%eax)
		mov    _0cc484_data,%ecx
		movswl (%eax),%ebx
		shl    $0x000006,%ecx
		cmp    %ecx,%ebx
		jg     _077b71_jump
		mov    _0cc490_data,%ecx
		shl    $0x000006,%ecx
		cmp    %ecx,%ebx
		jl     _077b71_jump
		mov    (%eax),%ecx
		mov    %ebp,%ebx
		sar    $0x000010,%ecx
		shl    $0x000006,%ebx
		cmp    %ebx,%ecx
		jl     _077b77_jump

	_077b71_jump:
		movb   $0x000000,0x000009(%eax)
		jmp    _077b7c_jump

	_077b77_jump:
		mov    $0x000001,%esi

	_077b7c_jump:
		xor    %ebx,%ebx
		mov    0x000006(%eax),%cx
		mov    0x000008(%eax),%bl
		add    %ebx,%ecx
		mov    %cx,0x000006(%eax)

	_077b8b_jump:
		inc    %edx
		add    $0x00000a,%eax
		cmp    $0x000040,%dx
		jl     _077b24_jump
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		imul   $0x000282,%eax,%eax
		mov    %si,_0c90f0_data(%eax)

	_077ba9_jump:
		mov    0x000004(%esp),%ebx
		inc    %ebx
		mov    %bx,0x000004(%esp)
		cmp    $0x000008,%bx
		jl     _077b00_jump
		mov    %ebp,_0cc47c_data
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077bd0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		call   _05efb0_func
		mov    0x000032(%ecx),%eax
		sar    $0x000010,%eax
		lea    0x000000(,%eax,2),%edx
		mov    _0ce324_data,%eax
		movw   $0x000001,0x000052(%ecx)
		mov    (%edx,%eax,1),%ax
		cmp    0x000034(%ecx),%ax
		je     _077c3a_jump
		movswl %ax,%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0cc1f0_data,%ecx
		shl    $0x000002,%eax
		add    %eax,%ecx
		cmpw   $0x0000a8,0x000060(%ecx)
		jne    _077c3a_jump
		mov    $0x000001,%ebx
		mov    $0x000004,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		movw   $0x000001,0x000052(%ecx)

	_077c3a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077c40_func:
		push   %edx
		mov    $_0cda94_data,%eax
		mov    $0x000001,%edx
		call   _076124_func
		mov    %dx,_0cecc4_data
		pop    %edx
		ret    



_077c5c_func:
		push   %edx
		cmpb   $0x000000,_0ceec1_data
		jne    _077c81_jump
		mov    _0cecda_data,%eax
		sar    $0x000010,%eax
		xor    %dl,%dl
		cmp    $0xffffffff,%eax
		setne  %al
		mov    %dl,_0cee8e_data
		mov    %al,_0ceecd_data

	_077c81_jump:
		pop    %edx
		ret    



_077c84_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000015,%edx
		call   _01d364_func
		mov    _0cecd4_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%edx
		shl    $0x000005,%edx
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		add    %edx,%eax
		cmpb   $0x00000a,0x000076(%eax)
		jne    _077cb8_jump
		movb   $0x000005,0x000076(%eax)
		jmp    _077cc8_jump

	_077cb8_jump:
		mov    $0x000017,%ebx
		xor    %edx,%edx
		movb   $0x000001,0x000076(%eax)
		call   _01d374_func

	_077cc8_jump:
		mov    _0cc1f0_data,%edx
		mov    _0cc1f4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _077d2d_jump

	_077cdc_jump:
		cmpw   $0x0000de,0x000060(%edx)
		jne    _077d21_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _077d21_jump
		mov    0x000028(%ecx),%eax
		mov    %eax,0x000028(%edx)
		mov    0x00002c(%ecx),%eax
		movw   $0x000001,0x000042(%edx)
		mov    0x000081(%edx),%bl
		movl   $0x000001,0x000024(%edx)
		or     $0x000004,%bl
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		mov    %bl,0x000081(%edx)
		call   _01f304_func
		movb   $0x000004,0x000072(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_077d21_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _077cdc_jump

	_077d2d_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077d34_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %edx,%esi
		mov    _0cc1f0_data,%edx
		mov    _0cc1f4_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _077d98_jump

	_077d4f_jump:
		cmpw   $0x0000dd,0x000060(%edx)
		jne    _077d8c_jump
		cmpl   $0x000000,0x000024(%edx)
		jne    _077d8c_jump
		movswl %cx,%eax
		sub    $0x00008e,%eax
		mov    %eax,0x000028(%edx)
		movswl %si,%eax
		sub    $0x000080,%eax
		mov    %eax,0x00002c(%edx)
		mov    %edx,%eax
		movl   $0x000001,0x000024(%edx)
		call   _01f304_func
		orb    $0x000004,0x000081(%edx)
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_077d8c_jump:
		inc    %eax
		add    $0x000084,%edx
		cmp    %bx,%ax
		jl     _077d4f_jump

	_077d98_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_077d9c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0cecc4_data,%esi
		sar    $0x000010,%esi
		cmp    $0xffffffff,%esi
		jne    _077db6_jump
		xor    %eax,%eax
		jmp    _077e4c_jump

	_077db6_jump:
		movswl %ax,%ecx
		lea    0x000032(%ecx),%edx
		mov    $0x000065,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		movswl %ax,%ebx
		mov    $0x000005,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		imul   $0x000065,%ebx,%eax
		add    %esi,%edx
		sub    %eax,%ecx
		movswl %dx,%edx
		mov    %ecx,%eax
		mov    $0x000033,%ecx
		test   %eax,%eax
		jge    _077df0_jump
		neg    %eax

	_077df0_jump:
		sub    %eax,%ecx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%ebx
		shl    $0x000002,%eax
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00006a(%ebx),%al
		mov    _0949f6_data(,%eax,2),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x00006b(%ebx),%al
		add    %eax,%edx
		mov    $0x00000e,%esi
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %esi
		movswl %dx,%eax
		mov    _0949da_data(,%eax,2),%eax
		movswl %cx,%edx
		sar    $0x000010,%eax
		imul   %eax,%edx
		mov    $0x000032,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    0x00002c(%ebx),%edx
		sub    %eax,%edx
		mov    %edx,%eax

	_077e4c_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077e54_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %edi
		mov    %eax,%ebx
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _077efc_jump

	_077e72_jump:
		cmpw   $0x000085,0x000060(%ecx)
		jne    _077eec_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _077eec_jump
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f304_func
		mov    0x000028(%ebx),%eax
		mov    %eax,0x000028(%ecx)
		mov    $0x000002,%edx
		mov    0x00002c(%ebx),%ebx
		mov    %ecx,%eax
		mov    %ebx,0x00002c(%ecx)
		mov    $0x000012,%ebx
		call   _01d374_func
		mov    _0ced00_data,%di
		mov    0x000028(%ecx),%ax
		sub    %edi,%eax
		mov    %ax,0x000036(%ecx)
		mov    _0cecea_data,%dx
		mov    0x00002c(%ecx),%ax
		movw   $0x00fffe,0x000042(%ecx)
		sub    %edx,%eax
		mov    %ax,0x000038(%ecx)
		mov    %ecx,%eax
		movw   $0x000001,0x000040(%ecx)
		call   _01db8c_func
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_077eec_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _077e72_jump

	_077efc_jump:
		pop    %edi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077f04_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    _0cc1f0_data,%eax
		mov    _0cc1f4_data,%cx
		xor    %ebx,%ebx
		xor    %edx,%edx
		test   %cx,%cx
		jle    _077f3b_jump

	_077f1f_jump:
		cmpw   $0x00004b,0x000060(%eax)
		jne    _077f30_jump
		cmpl   $0x000000,0x000024(%eax)
		jne    _077f30_jump
		mov    %eax,%ebx
		jmp    _077f3b_jump

	_077f30_jump:
		inc    %edx
		add    $0x000084,%eax
		cmp    %cx,%dx
		jl     _077f1f_jump

	_077f3b_jump:
		test   %ebx,%ebx
		jne    _077f4d_jump
		mov    $0x00004b,%eax
		call   _01d020_func
		mov    %eax,%ebx
		jmp    _077f54_jump

	_077f4d_jump:
		mov    %ebx,%eax
		call   _01f304_func

	_077f54_jump:
		mov    0x000081(%ebx),%ah
		movl   $0x000001,0x000024(%ebx)
		or     $0x000004,%ah
		mov    %ah,0x000081(%ebx)
		mov    0x000081(%ebx),%dl
		movw   $0x000000,0x00005e(%ebx)
		and    $0x0000bf,%dl
		mov    %dl,0x000081(%ebx)
		mov    0x000028(%esi),%eax
		sub    $0x000028,%eax
		mov    %eax,0x000028(%ebx)
		mov    0x00002c(%esi),%eax
		movb   $0x000000,0x00006a(%ebx)
		movb   $0x000001,0x00006b(%ebx)
		movb   $0x000000,0x00006d(%ebx)
		movb   $0x000000,0x00006f(%ebx)
		sub    $0x000014,%eax
		movb   $0x000000,0x00006e(%ebx)
		mov    %eax,0x00002c(%ebx)
		mov    %ebx,%eax
		movb   $0x000000,0x00006c(%ebx)
		call   _01db8c_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_077fb8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0cec70_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _077ff4_jump
		movw   $0x00ffff,_0cec72_data
		call   _056394_func
		mov    _0cec70_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		andb   $0x0000fb,0x000081(%edx,%eax,4)

	_077ff4_jump:
		mov    _0cec88_data,%eax
		sar    $0x000010,%eax
		cmp    $0xffffffff,%eax
		je     _078031_jump
		mov    $0xffffffff,%ebx
		mov    _0cc1f0_data,%eax
		mov    %bx,_0cec8a_data
		mov    -0x000003(%eax),%ch
		sub    $0x000084,%eax
		mov    $0x000004,%bh
		and    $0x0000fb,%ch
		mov    %bh,_0cdb0a_data
		mov    %bh,_0ce3a3_data
		mov    %ch,0x000081(%eax)

	_078031_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078040_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000050,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%edx
		mov    _0e5d80_data,%eax
		mov    %eax,0x000030(%esp)
		mov    0x000014(%eax),%eax
		xor    %ebx,%ebx
		mov    %eax,0x000044(%esp)
		mov    0x000030(%esp),%eax
		mov    %cx,%bx
		movw   $0x000000,(%eax)
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _078075_jump
		mov    %ebx,%eax

	_078075_jump:
		mov    0x000030(%esp),%ebx
		mov    %ax,0x000002(%ebx)
		test   %dx,%dx
		jl     _078092_jump
		mov    $0x000001,%eax
		movswl %dx,%ebx
		cmp    %ebx,%eax
		jge    _078090_jump
		mov    %ebx,%eax

	_078090_jump:
		jmp    _0780a4_jump

	_078092_jump:
		movswl %dx,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _0780a2_jump
		mov    %ebx,%eax

	_0780a2_jump:
		neg    %eax

	_0780a4_jump:
		mov    0x000030(%esp),%edx
		mov    %ax,0x00000c(%edx)
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     _0780b8_jump
		mov    %di,0x000004(%edx)

	_0780b8_jump:
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _0780c8_jump
		mov    0x000030(%esp),%eax
		mov    %si,0x000006(%eax)

	_0780c8_jump:
		mov    0x000030(%esp),%eax
		xor    %ebx,%ebx
		mov    0x00000e(%eax),%bx
		mov    $0x00013f,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000030(%esp),%eax
		mov    0x000002(%eax),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _0780eb_jump
		mov    %ebx,%eax

	_0780eb_jump:
		mov    0x000030(%esp),%ebx
		xor    %edx,%edx
		mov    0x00000e(%ebx),%dx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    0x000030(%esp),%edx
		cmp    %ebx,%eax
		jge    _078103_jump
		mov    %ebx,%eax

	_078103_jump:
		xor    %ebx,%ebx
		mov    0x00000e(%edx),%bx
		mov    %ax,0x000004(%edx)
		mov    $0x0000c7,%eax
		sub    %ebx,%eax
		mov    %eax,%ebx
		mov    0x000004(%edx),%eax
		sar    $0x000010,%eax
		cmp    %ebx,%eax
		jle    _078122_jump
		mov    %ebx,%eax

	_078122_jump:
		mov    0x000030(%esp),%ebx
		xor    %edx,%edx
		mov    0x00000e(%ebx),%dx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    0x000030(%esp),%edx
		cmp    %ebx,%eax
		jge    _07813a_jump
		mov    %ebx,%eax

	_07813a_jump:
		mov    %ax,0x000006(%edx)
		call   _07cf1e_func
		and    $0x000007,%eax
		cmp    $0x000004,%eax
		jge    _078151_jump
		mov    0x00000c(%edx),%ax
		jmp    _078157_jump

	_078151_jump:
		mov    0x00000c(%edx),%ax
		neg    %eax

	_078157_jump:
		mov    0x000030(%esp),%edx
		mov    %ax,0x000008(%edx)
		call   _07cf1e_func
		and    $0x000007,%eax
		cmp    $0x000004,%eax
		jge    _078172_jump
		mov    0x00000c(%edx),%ax
		jmp    _078178_jump

	_078172_jump:
		mov    0x00000c(%edx),%ax
		neg    %eax

	_078178_jump:
		mov    0x000030(%esp),%edx
		mov    %ax,0x00000a(%edx)
		movswl %di,%eax
		cmp    $0xffffffff,%eax
		je     _078426_jump
		movswl %si,%eax
		cmp    $0xffffffff,%eax
		je     _078426_jump
		xor    %esi,%esi
		mov    0x00000e(%edx),%si
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		add    %eax,%eax
		call   _07b8f2_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x40590000,%edx
		xor    %eax,%eax
		call   _07c468_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07baef_func
		mov    %eax,0x000020(%esp)
		mov    %esi,%eax
		neg    %eax
		mov    %edx,0x000024(%esp)
		call   _07b8f2_func
		jmp    _0783f8_jump

	_0781e2_jump:
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07baef_func
		mov    %edx,0x00002c(%esp)
		mov    0x000030(%esp),%edx
		mov    %eax,0x000028(%esp)
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		neg    %eax
		call   _07b8f2_func
		jmp    _0783be_jump

	_078211_jump:
		mov    %esi,%eax
		mov    %edi,%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07baef_func
		mov    0x000028(%esp),%ebx
		mov    0x00002c(%esp),%ecx
		call   _07b938_func
		call   _07c0da_func
		mov    %eax,0x00004c(%esp)
		mov    %edx,%ebp
		mov    0x000020(%esp),%eax
		mov    0x000024(%esp),%edx
		mov    0x00004c(%esp),%ebx
		mov    %ebp,%ecx
		call   _07c66e_func
		call   _07baef_func
		mov    0x00004c(%esp),%ebx
		mov    %ebp,%ecx
		call   _07baef_func
		call   _0812a2_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x00004c(%esp),%eax
		mov    %ebp,%edx
		call   _07baef_func
		mov    %eax,0x00000c(%esp)
		mov    %edx,0x000038(%esp)
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %esi,%eax
		mov    %edi,%edx
		call   _081734_func
		jne    _0782b0_jump
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		call   _081734_func
		jne    _0782b0_jump
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%ebp
		mov    %esi,0x000034(%esp)
		mov    %edi,0x00003c(%esp)
		mov    %eax,0x000040(%esp)
		jmp    _07836c_jump

	_0782b0_jump:
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _0817c1_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07c421_func
		mov    %eax,0x000004(%esp)
		mov    %edx,0x000008(%esp)
		mov    %ebx,%eax
		mov    %ecx,%edx
		call   _07c3fa_func
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    %eax,0x00001c(%esp)
		mov    %edx,(%esp)
		mov    0x00004c(%esp),%eax
		mov    %ebp,%edx
		call   _07baef_func
		mov    0x00001c(%esp),%ebx
		mov    (%esp),%ecx
		mov    %eax,0x000010(%esp)
		mov    %edx,0x000014(%esp)
		mov    0x00000c(%esp),%eax
		mov    0x000038(%esp),%edx
		call   _07baef_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000010(%esp),%eax
		mov    0x000014(%esp),%edx
		call   _07b932_func
		mov    0x00001c(%esp),%ebx
		mov    (%esp),%ecx
		mov    %eax,0x000034(%esp)
		mov    %edx,0x00003c(%esp)
		mov    0x00004c(%esp),%eax
		mov    %ebp,%edx
		call   _07baef_func
		mov    0x000004(%esp),%ebx
		mov    0x000008(%esp),%ecx
		mov    %eax,0x000014(%esp)
		mov    %edx,%ebp
		mov    0x00000c(%esp),%eax
		mov    0x000038(%esp),%edx
		call   _07baef_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000014(%esp),%eax
		mov    %ebp,%edx
		call   _07b938_func
		mov    %eax,0x000040(%esp)
		mov    %edx,%ebp

	_07836c_jump:
		mov    0x000034(%esp),%eax
		mov    0x00003c(%esp),%edx
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07b932_func
		call   _07c13c_func
		mov    0x000044(%esp),%edx
		mov    0x000048(%esp),%ebx
		mov    0x000018(%esp),%ecx
		mov    %al,(%edx)
		mov    0x000040(%esp),%eax
		mov    %ebp,%edx
		call   _07b932_func
		call   _07c13c_func
		mov    0x000044(%esp),%edx
		add    $0x000002,%edx
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		mov    %al,-0x000001(%edx)
		mov    %edx,0x000044(%esp)
		mov    %esi,%eax
		mov    %edi,%edx
		call   _07b938_func

	_0783be_jump:
		mov    %eax,%esi
		mov    %edx,%edi
		mov    0x000030(%esp),%edx
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		call   _07b8ff_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %esi,%eax
		mov    %edi,%edx
		call   _081734_func
		jle    _078211_jump
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx
		call   _07b938_func

	_0783f8_jump:
		mov    %eax,0x000048(%esp)
		mov    %edx,0x000018(%esp)
		mov    0x000030(%esp),%edx
		xor    %eax,%eax
		mov    0x00000e(%edx),%ax
		call   _07b8ff_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    0x000048(%esp),%eax
		mov    0x000018(%esp),%edx
		call   _081734_func
		jle    _0781e2_jump

	_078426_jump:
		add    $0x000050,%esp
		pop    %ebp
		pop    %edi
		pop    %esi

	_07842c_jump:
		ret    

	_078430_case:
		mov    _0e5d80_data,%eax
		test   %eax,%eax
		je     _07842c_jump
		cmpl   $0x000000,0x000014(%eax)
		je     _078447_jump
		add    $0x000014,%eax
		call   _07b7dc_func

	_078447_jump:
		cmpl   $0x000000,_0e5d80_data
		je     _07842c_jump
		mov    $_0e5d80_data,%eax
		jmp    _07b7dc_func



_07845c_func:
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    0x000020(%esp),%esi
		mov    %ax,0x000004(%esp)
		mov    %dx,0x000008(%esp)
		mov    %cx,(%esp)
		xor    %ah,%ah
		mov    %ah,0x00000c(%esp)
		test   %esi,%esi
		je     _078527_jump
		cmpl   $0x000000,0x000024(%esp)
		je     _078527_jump
		mov    $0x000020,%eax
		call   _07b7c4_func
		mov    %eax,%edx
		mov    %eax,_0e5d80_data
		test   %eax,%eax
		je     _078527_jump
		xor    %eax,%eax
		mov    %bx,%ax
		mov    $0x000030,%ebx
		cmp    %ebx,%eax
		jle    _0784b5_jump
		mov    %ebx,%eax

	_0784b5_jump:
		mov    %eax,%ebx
		mov    $0x000008,%eax
		cmp    %ebx,%eax
		jge    _0784c2_jump
		mov    %ebx,%eax

	_0784c2_jump:
		mov    %ax,0x00000e(%edx)
		add    %eax,%eax
		inc    %eax
		mov    %ax,0x000010(%edx)
		mov    0x00000e(%edx),%ax
		add    %eax,%eax
		mov    $0x00fa00,%ecx
		inc    %eax
		mov    _0cc528_data,%edi
		mov    %ax,0x000012(%edx)
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _0784ed_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_0784ed_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _0784f6_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_0784f6_jump:
		mov    _0cc528_data,%eax
		mov    %eax,0x000018(%edx)
		mov    0x000024(%esp),%eax
		xor    %ebx,%ebx
		mov    %eax,0x00001c(%edx)
		xor    %eax,%eax
		mov    0x000012(%edx),%bx
		mov    0x000010(%edx),%ax
		imul   %ebx,%eax
		add    %eax,%eax
		call   _07b7c4_func
		mov    %eax,0x000014(%edx)
		test   %eax,%eax
		je     _078527_jump
		movb   $0x000001,0x00000c(%esp)

	_078527_jump:
		cmpb   $0x000000,0x00000c(%esp)
		je     _078551_jump
		mov    -0x000002(%esp),%ebx
		mov    0x000006(%esp),%edx
		xor    %ecx,%ecx
		mov    0x000002(%esp),%eax
		mov    0x00001c(%esp),%cx
		sar    $0x000010,%ebx
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _078040_func
		jmp    _078556_jump

	_078551_jump:
		call   _078430_case

	_078556_jump:
		mov    0x00000c(%esp),%al
		add    $0x000010,%esp
		pop    %edi
		pop    %esi
		ret    $0x00000c



_078564_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e5d80_data,%edx
		mov    0x000008(%edx),%ax
		add    %ax,0x000004(%edx)
		mov    0x000006(%edx),%cx
		mov    0x00000a(%edx),%ax
		mov    0x000002(%edx),%ebx
		add    %eax,%ecx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		add    %ebx,%eax
		mov    %cx,0x000006(%edx)
		cmp    $0x000140,%eax
		jl     _0785b3_jump
		mov    $0x00013f,%ebx
		mov    0x00000e(%edx),%ax
		mov    0x000008(%edx),%si
		sub    %eax,%ebx
		neg    %esi
		mov    %bx,0x000004(%edx)
		mov    %si,0x000008(%edx)

	_0785b3_jump:
		mov    0x000002(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jge    _0785d3_jump
		mov    0x000008(%edx),%di
		mov    %ax,0x000004(%edx)
		neg    %edi
		mov    %di,0x000008(%edx)

	_0785d3_jump:
		mov    0x000004(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		add    %ebx,%eax
		cmp    $0x0000c8,%eax
		jl     _078601_jump
		mov    $0x0000c7,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		mov    0x00000a(%edx),%ax
		mov    %bx,0x000006(%edx)
		neg    %eax
		mov    %ax,0x00000a(%edx)

	_078601_jump:
		mov    0x000004(%edx),%ebx
		xor    %eax,%eax
		sar    $0x000010,%ebx
		mov    0x00000e(%edx),%ax
		sub    %eax,%ebx
		test   %ebx,%ebx
		jge    _078621_jump
		mov    0x00000a(%edx),%bx
		mov    %ax,0x000006(%edx)
		neg    %ebx
		mov    %bx,0x00000a(%edx)

	_078621_jump:
		mov    0x00000a(%edx),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _07862d_jump
		neg    %eax

	_07862d_jump:
		mov    (%edx),%cx
		add    %eax,%ecx
		mov    0x000002(%edx),%si
		mov    %cx,(%edx)
		cmp    %si,%cx
		jbe    _078643_jump
		movw   $0x000000,(%edx)

	_078643_jump:
		mov    (%edx),%ax
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07864c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    _0e5d80_data,%ebp
		mov    $0x00fa00,%ecx
		xor    %ebx,%ebx
		mov    0x00001c(%ebp),%edi
		mov    0x000018(%ebp),%esi
		mov    0x000014(%ebp),%edx
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _078675_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_078675_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		je     _07867e_jump
		rep movsl %ds:(%esi),%es:(%edi)

	_07867e_jump:
		mov    0x000002(%ebp),%eax
		mov    0x000004(%ebp),%ecx
		mov    0x00000e(%ebp),%bx
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sub    %ebx,%ecx
		sub    %ebx,%eax
		mov    %ecx,%ebx
		mov    %ecx,0x000004(%esp)
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000018(%ebp),%esi
		mov    0x00001c(%ebp),%ecx
		add    %eax,%esi
		add    %eax,%ecx
		xor    %eax,%eax
		mov    $0x000140,%ebx
		mov    0x000010(%ebp),%ax
		sub    %eax,%ebx
		mov    %ebx,(%esp)
		xor    %ebx,%ebx
		mov    %ebx,0x000004(%esp)
		jmp    _078700_jump

	_0786c4_jump:
		xor    %edi,%edi
		jmp    _0786e6_jump

	_0786c8_jump:
		movsbl 0x000001(%edx),%ebx
		movsbl (%edx),%eax
		shl    $0x000006,%ebx
		add    %ebx,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		inc    %esi
		inc    %ecx
		add    $0x000002,%edx
		mov    -0x000001(%esi,%eax,1),%al
		inc    %edi
		mov    %al,-0x000001(%ecx)

	_0786e6_jump:
		xor    %eax,%eax
		mov    0x000010(%ebp),%ax
		cmp    %eax,%edi
		jl     _0786c8_jump
		mov    0x000004(%esp),%edi
		mov    (%esp),%eax
		inc    %edi
		add    %eax,%esi
		add    %eax,%ecx
		mov    %edi,0x000004(%esp)

	_078700_jump:
		xor    %eax,%eax
		mov    0x000004(%esp),%edi
		mov    0x000012(%ebp),%ax
		cmp    %edi,%eax
		jg     _0786c4_jump
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078720_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    0x000070(%eax),%al
		cmp    $0x000001,%al
		ja     _0787d2_jump
		test   %al,%al
		jne    _07873d_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _078744_jump

	_07873d_jump:
		orb    $0x000008,0x000081(%ecx)

	_078744_jump:
		mov    %ecx,%eax
		call   _053c34_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _07875f_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func

	_07875f_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _0787c4_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _078797_jump
		mov    0x000081(%ecx),%ah
		mov    $0x000001,%ebx
		or     $0x000008,%ah
		mov    $0x000005,%edx
		mov    %ah,0x000081(%ecx)
		jmp    _0787af_jump

	_078797_jump:
		mov    0x000081(%ecx),%al
		mov    $0x000001,%ebx
		and    $0x0000f7,%al
		mov    $0x000004,%edx
		mov    %al,0x000081(%ecx)

	_0787af_jump:
		mov    %ecx,%eax
		call   _05efb0_func
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x000028(%ecx)

	_0787c4_jump:
		mov    %ecx,%eax
		call   _053c34_func
		mov    %ecx,%eax
		call   _0252c0_func

	_0787d2_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0787d8_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000003,0x00006c(%eax)
		jne    _078801_jump
		movw   $0x00fff8,0x000042(%ecx)
		mov    0x000081(%ecx),%al
		movw   $0x000000,0x000040(%ecx)
		and    $0x0000ef,%al
		mov    %al,0x000081(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078801_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000001,%al
		jbe    _078824_jump
		cmp    $0x000014,%al
		jne    _078979_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078824_jump:
		test   %al,%al
		jne    _078831_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _078838_jump

	_078831_jump:
		orb    $0x000008,0x000081(%ecx)

	_078838_jump:
		mov    %ecx,%eax
		call   _053c34_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _078853_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func

	_078853_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		je     _07888f_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _078879_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _078880_jump

	_078879_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_078880_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		jmp    _078900_jump

	_07888f_jump:
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _07890f_jump
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _02ec10_func
		test   %ax,%ax
		je     _07890f_jump
		cmpw   $0x000028,0x000060(%ecx)
		jne    _07890f_jump
		cmpb   $0x000000,0x000070(%ecx)
		jne    _0788dd_jump
		orb    $0x000008,0x000081(%ecx)
		jmp    _0788e4_jump

	_0788dd_jump:
		andb   $0x0000f7,0x000081(%ecx)

	_0788e4_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		jne    _0788f6_jump
		mov    $0x000001,%ebx
		mov    $0x000009,%edx
		jmp    _078900_jump

	_0788f6_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_078900_jump:
		mov    %ecx,%eax
		call   _05efb0_func
		movb   $0x000005,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)

	_07890f_jump:
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000074(%ecx),%al
		add    %edx,%eax
		test   %eax,%eax
		jl     _07892b_jump
		xor    %eax,%eax
		mov    0x000065(%ecx),%al
		testb  $0x000010,_092224_data(%eax)
		je     _07892f_jump

	_07892b_jump:
		incw   0x000042(%ecx)

	_07892f_jump:
		mov    %ecx,%eax
		call   _053c34_func
		cmpb   $0x000002,0x00006d(%ecx)
		je     _078947_jump
		mov    %ecx,%eax
		call   _0252c0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078947_jump:
		mov    0x00006c(%ecx),%bl
		cmp    $0x000001,%bl
		je     _078954_jump
		cmp    $0x000003,%bl
		jne    _078979_jump

	_078954_jump:
		mov    0x000081(%ecx),%dh
		lea    0x000081(%ecx),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_078979_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078980_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _0789a7_jump
		mov    $0x000003,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		andb   $0x0000ef,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_0789a7_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		movb   $0x000007,0x000072(%ecx)
		mov    _0cdb20_data,%eax
		movb   $0x000002,0x000073(%ecx)
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _0789d8_jump
		andb   $0x0000f7,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_0789d8_jump:
		jge    _0789e1_jump
		orb    $0x000008,0x000081(%ecx)

	_0789e1_jump:
		pop    %ecx
		pop    %ebx
		ret    



_0789e4_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%esi
		mov    0x000060(%esi),%dx
		xor    %al,%al
		cmp    $0x000024,%dx
		jne    _078a1e_jump
		mov    0x00007f(%esi),%ah
		test   %ah,%ah
		je     _078a0d_jump
		cmpb   $0x000000,_0cee40_data
		jne    _078a0d_jump
		mov    %ah,%dh
		dec    %dh
		mov    %dh,0x00007f(%esi)

	_078a0d_jump:
		cmpb   $0x000000,0x00007f(%esi)
		jne    _078a1e_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _0790cc_func
		mov    $0x000001,%al

	_078a1e_jump:
		test   %al,%al
		jne    _078a69_jump
		mov    %esi,%eax
		xor    %edx,%edx
		call   _024c98_func
		xor    %edx,%edx
		mov    %al,%dl
		testb  $0x000001,_092224_data(%edx)
		je     _078a49_jump
		mov    $0xffffffff,%edx
		mov    %esi,%eax
		call   _0790cc_func
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078a49_jump:
		cmpb   $0x000002,0x00006d(%esi)
		jne    _078a69_jump
		cmpb   $0x000001,0x00006c(%esi)
		jne    _078a69_jump
		lea    0x000042(%esi),%ebx
		push   $0x000003
		lea    0x000040(%esi),%edx
		mov    $0x00001e,%ecx
		mov    %esi,%eax
		call   _01e6fc_func

	_078a69_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078a70_func:
		push   %ebx
		push   %edx
		xor    %dl,%dl
		cmpb   $0x000000,0x00006d(%eax)
		jne    _078a8d_jump
		mov    0x00006c(%eax),%bl
		test   %bl,%bl
		je     _078a8b_jump
		cmp    $0x00000e,%bl
		je     _078a8b_jump
		cmp    $0x000008,%bl
		jne    _078a8d_jump

	_078a8b_jump:
		mov    $0x000001,%dl

	_078a8d_jump:
		mov    %dl,%al
		pop    %edx
		pop    %ebx
		ret    



_078a94_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		call   _078a70_func
		test   %al,%al
		je     _078adc_jump
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01db14_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _078adc_jump
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _05efb0_func

	_078adc_jump:
		xor    %eax,%eax
		mov    _0cdabc_data,%edx
		mov    _0cdafc_data,%al
		mov    0x000028(%ecx),%ebx
		add    %edx,%eax
		xor    %edx,%edx
		sub    %ebx,%eax
		mov    0x000068(%ecx),%dl
		sub    %edx,%eax
		test   %eax,%eax
		jge    _078afd_jump
		neg    %eax

	_078afd_jump:
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    _0cdac0_data,%edi
		mov    _0cdafd_data,%al
		lea    (%eax,%edi,1),%edx
		mov    0x00002c(%ecx),%ebp
		xor    %eax,%eax
		sub    %ebp,%edx
		mov    0x000069(%ecx),%al
		sub    %eax,%edx
		mov    %edx,%eax
		test   %eax,%eax
		jge    _078b23_jump
		neg    %eax

	_078b23_jump:
		mov    %eax,%edx
		mov    0x00006d(%ecx),%ah
		cmp    $0x000002,%ah
		je     _078be1_jump
		cmp    $0x000001,%ah
		je     _078be1_jump
		test   %ah,%ah
		jne    _078b7c_jump
		cmpb   $0x00000b,0x00006c(%ecx)
		jne    _078b7c_jump
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _078b7c_jump
		mov    $0x000003,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _01d374_func
		movw   $0x00fff9,0x000042(%ecx)
		movb   $0x000000,0x000071(%ecx)
		mov    0x00002c(%ecx),%eax
		movb   $0x000004,0x000072(%ecx)
		sub    $0x00000e,%eax
		mov    %eax,0x00002c(%ecx)
		jmp    _078be1_jump

	_078b7c_jump:
		mov    0x00007b(%ecx),%ah
		xor    %esi,%esi
		test   %ah,%ah
		je     _078bd3_jump
		cmp    $0x0000aa,%bx
		jge    _078b96_jump
		cmp    $0x000026,%dx
		jge    _078b96_jump
		movb   $0x000001,0x00007d(%ecx)

	_078b96_jump:
		mov    %ecx,%eax
		call   _078a70_func
		test   %al,%al
		je     _078bd3_jump
		cmp    $0x00005f,%bx
		jge    _078bbe_jump
		cmp    $0x000032,%dx
		jge    _078bbe_jump
		cmpb   $0x000000,0x00007f(%ecx)
		jne    _078bbe_jump
		mov    $0x000001,%esi
		movb   $0x000064,0x00007f(%ecx)
		jmp    _078bd3_jump

	_078bbe_jump:
		cmpb   $0x000000,0x00007d(%ecx)
		je     _078bd3_jump
		mov    0x00007f(%ecx),%bl
		test   %bl,%bl
		jne    _078bd3_jump
		mov    $0xffffffff,%esi
		mov    %bl,0x00007d(%ecx)

	_078bd3_jump:
		cmpw   $0x000000,0x000040(%ecx)
		jne    _078be1_jump
		mov    %ecx,%eax
		call   _0798ec_func

	_078be1_jump:
		mov    0x00007f(%ecx),%bh
		test   %bh,%bh
		je     _078bef_jump
		mov    %bh,%al
		dec    %al
		mov    %al,0x00007f(%ecx)

	_078bef_jump:
		cmpw   $0x000000,0x000040(%ecx)
		jne    _078bff_jump
		test   %si,%si
		je     _078ce5_jump

	_078bff_jump:
		xor    %eax,%eax
		mov    0x000069(%ecx),%al
		xor    %edx,%edx
		sub    $0x000010,%eax
		mov    0x000068(%ecx),%dl
		movswl %ax,%ebx
		mov    %ecx,%eax
		call   _01d624_func
		test   %ax,%ax
		je     _078c2a_jump
		mov    $0x000001,%ebx
		mov    $0x00000e,%edx
		jmp    _078cde_jump

	_078c2a_jump:
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _024c98_func
		and    $0x0000ff,%eax
		testb  $0x000001,_092224_data(%eax)
		jne    _078c63_jump
		xor    %eax,%eax
		mov    0x000028(%ecx),%edx
		mov    0x000068(%ecx),%al
		add    %edx,%eax
		cmp    $0x000020,%eax
		jl     _078c63_jump
		mov    _0cecd6_data,%edx
		sar    $0x000010,%edx
		add    $0x00010c,%edx
		cmp    %edx,%eax
		jle    _078cb6_jump

	_078c63_jump:
		cmpb   $0x000002,0x00006d(%ecx)
		setne  %al
		and    $0x0000ff,%eax
		je     _078cb6_jump
		mov    0x00003e(%ecx),%eax
		mov    0x000028(%ecx),%ebx
		sar    $0x000010,%eax
		sub    %eax,%ebx
		mov    0x00007b(%ecx),%al
		mov    %ebx,0x000028(%ecx)
		test   %al,%al
		je     _078c9d_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		movb   $0x000000,0x00006b(%ecx)
		jmp    _078cae_jump

	_078c9d_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx
		mov    %ecx,%eax
		call   _05efb0_func

	_078cae_jump:
		movw   $0x000000,0x000040(%ecx)
		jmp    _078ce5_jump

	_078cb6_jump:
		mov    0x00006d(%ecx),%bl
		cmp    $0x000001,%bl
		je     _078ce5_jump
		cmp    $0x000002,%bl
		je     _078ce5_jump
		test   %si,%si
		jge    _078cd4_jump
		mov    $0x000001,%ebx
		mov    $0x00000d,%edx
		jmp    _078cde_jump

	_078cd4_jump:
		mov    $0x000001,%ebx
		mov    $0x000011,%edx

	_078cde_jump:
		mov    %ecx,%eax
		call   _05efb0_func

	_078ce5_jump:
		mov    %ecx,%eax
		call   _053c34_func
		cmpb   $0x000002,0x00006d(%ecx)
		je     _078cf9_jump
		mov    %ecx,%eax
		call   _0252c0_func

	_078cf9_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078d00_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _078a70_func
		test   %al,%al
		je     _078d5e_jump
		movw   $0x000000,0x000040(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%dl
		call   _01db14_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%dl
		shl    $0x000004,%al
		shr    $0x000007,%dl
		shr    $0x000007,%al
		cmp    %dl,%al
		je     _078d45_jump
		mov    $0x00000b,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _05efb0_func

	_078d45_jump:
		mov    0x00007f(%ecx),%dh
		test   %dh,%dh
		jne    _078d55_jump
		mov    %ecx,%eax
		call   _0798ec_func
		jmp    _078d75_jump

	_078d55_jump:
		mov    %dh,%bl
		dec    %bl
		mov    %bl,0x00007f(%ecx)
		jmp    _078d75_jump

	_078d5e_jump:
		mov    %ecx,%eax
		call   _0798ec_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _078d75_jump
		cmpb   $0x000009,0x00006c(%ecx)
		jne    _078d75_jump
		movb   $0x0000fa,0x00007f(%ecx)

	_078d75_jump:
		mov    %ecx,%eax
		call   _0252c0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_078d80_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000070(%eax),%al
		test   %al,%al
		jbe    _078d95_jump
		cmp    $0x000001,%al
		je     _078de8_jump
		jmp    _078e2e_jump

	_078d95_jump:
		mov    0x000081(%edx),%bh
		and    $0x0000f7,%bh
		mov    %edx,%eax
		mov    %bh,0x000081(%edx)
		call   _053c34_func
		mov    0x00006c(%edx),%al
		cmp    $0x00000b,%al
		jb     _078dc0_jump
		jbe    _078e34_jump
		cmp    $0x00000d,%al
		je     _078dd4_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078dc0_jump:
		cmp    $0x000009,%al
		jne    _078e3a_jump

	_078dc8_jump:
		mov    0x000040(%edx),%ax
		mov    %ax,0x000042(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078dd4_jump:
		mov    0x000040(%edx),%ax
		mov    %eax,%ecx
		mov    %ax,0x000042(%edx)
		neg    %ecx
		mov    %cx,0x000042(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078de8_jump:
		orb    $0x000008,0x000081(%edx)
		mov    %edx,%eax
		call   _053c34_func
		mov    0x000081(%edx),%bl
		and    $0x0000f7,%bl
		mov    0x00006c(%edx),%al
		mov    %bl,0x000081(%edx)
		cmp    $0x00000c,%al
		jb     _078e16_jump
		jbe    _078e34_jump
		cmp    $0x00000e,%al
		je     _078dc8_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078e16_jump:
		cmp    $0x00000a,%al
		jne    _078e3a_jump
		mov    0x000040(%edx),%ax
		mov    %eax,%ebx
		mov    %ax,0x000042(%edx)
		neg    %ebx
		mov    %bx,0x000042(%edx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_078e2e_jump:
		movw   $0x000000,0x000040(%edx)

	_078e34_jump:
		movw   $0x000000,0x000042(%edx)

	_078e3a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_078e40_switch:
		.long   _078eab_case
		.long   _078ee7_case
		.long   _078f1b_case
		.long   _078f47_case
		.long   _078f6d_case
		.long   _078fa6_case




_078e58_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%ecx
		mov    %ebx,%esi
		cmpb   $0x000000,(%ebx)
		jne    _079006_jump
		xor    %ebx,%ebx
		mov    0x000028(%eax),%edi
		mov    0x000068(%eax),%bl
		add    %ebx,%edi
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		sub    %ebx,%edi
		xor    %ebx,%ebx
		mov    %edi,0x000028(%ecx)
		mov    0x000069(%eax),%bl
		mov    0x00002c(%eax),%edx
		xor    %eax,%eax
		add    %edx,%ebx
		mov    0x000069(%ecx),%al
		sub    %eax,%ebx
		mov    0x00006c(%ecx),%al
		sub    $0x000009,%al
		mov    %ebx,0x00002c(%ecx)
		cmp    $0x000005,%al
		ja     _078fd8_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_078e40_switch(,%eax,4)

	_078eab_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000003,%edi
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%ebp
		mov    0x000069(%ecx),%bl
		sub    %eax,%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edx
		add    %ebx,%eax
		mov    %ebp,0x000028(%ecx)
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _078fd8_jump

	_078ee7_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		add    %eax,0x000028(%ecx)
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		mov    $0x000003,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edi
		add    %ebx,%eax
		sub    %eax,%edi
		jmp    _078fd5_jump

	_078f1b_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    0x000028(%ecx),%ebp
		sub    %ebx,%eax
		sub    %eax,%ebp
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edx
		mov    0x000069(%ecx),%al
		mov    %ebp,0x000028(%ecx)
		sub    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _078fd8_jump

	_078f47_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		mov    0x000028(%ecx),%ebx
		add    %eax,%ebx
		xor    %eax,%eax
		mov    0x00002c(%ecx),%edi
		mov    0x000069(%ecx),%al
		mov    %ebx,0x000028(%ecx)
		sub    %eax,%edi
		jmp    _078fd5_jump

	_078f6d_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		mov    $0x000003,%edi
		sub    %ebx,%eax
		xor    %ebx,%ebx
		mov    0x000028(%ecx),%ebp
		mov    0x000069(%ecx),%bl
		sub    %eax,%ebp
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edx
		sub    %ebx,%eax
		mov    %ebp,0x000028(%ecx)
		add    %eax,%edx
		mov    %edx,0x00002c(%ecx)
		jmp    _078fd8_jump

	_078fa6_case:
		xor    %ebx,%ebx
		mov    0x000068(%ecx),%bl
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		sub    %edx,%eax
		sar    %eax
		sub    %ebx,%eax
		add    %eax,0x000028(%ecx)
		xor    %ebx,%ebx
		mov    0x000069(%ecx),%bl
		mov    $0x000003,%edi
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		mov    0x00002c(%ecx),%edi
		sub    %ebx,%eax
		add    %eax,%edi

	_078fd5_jump:
		mov    %edi,0x00002c(%ecx)

	_078fd8_jump:
		mov    %ecx,%eax
		call   _01db8c_func
		mov    0x000081(%ecx),%dh
		movl   $0x000001,0x000024(%ecx)
		or     $0x000004,%dh
		mov    %ecx,%eax
		mov    %dh,0x000081(%ecx)
		call   _01f304_func
		andb   $0x0000bf,0x000081(%ecx)
		movb   $0x000001,(%esi)

	_079006_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07900c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    %eax,%esi
		xor    %ah,%ah
		mov    %ah,0x000004(%esp)
		mov    %ah,0x000008(%esp)
		mov    %ah,0x000014(%esp)
		cmpw   $0x000000,0x000040(%esi)
		setg   %bl
		test   %bl,%bl
		jbe    _079037_jump
		cmp    $0x000001,%bl
		je     _07904b_jump
		jmp    _07905d_jump

	_079037_jump:
		mov    $0x00000c,%al
		mov    $0x00000a,%ch
		mov    %al,0x000018(%esp)
		mov    $0x00000e,%ah
		mov    %ch,0x00000c(%esp)
		mov    %ah,0x000010(%esp)
		jmp    _07905d_jump

	_07904b_jump:
		mov    $0x000009,%bl
		mov    $0x00000d,%cl
		mov    %bl,0x00000c(%esp)
		mov    $0x00000b,%bh
		mov    %cl,0x000010(%esp)
		mov    %bh,0x000018(%esp)

	_07905d_jump:
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%bx
		xor    %edi,%edi
		mov    %ebx,(%esp)
		test   %bx,%bx
		jle    _0790c0_jump

	_079074_jump:
		cmpw   $0x00004f,0x000060(%ecx)
		jne    _0790b1_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _0790b1_jump
		mov    0x00000c(%esp),%dl
		mov    0x00006c(%ecx),%bl
		cmp    %dl,%bl
		jne    _079092_jump
		lea    0x000014(%esp),%ebx
		jmp    _0790a8_jump

	_079092_jump:
		cmp    0x000018(%esp),%bl
		jne    _07909e_jump
		lea    0x000008(%esp),%ebx
		jmp    _0790a8_jump

	_07909e_jump:
		cmp    0x000010(%esp),%bl
		jne    _0790b1_jump
		lea    0x000004(%esp),%ebx

	_0790a8_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		call   _078e58_func

	_0790b1_jump:
		mov    (%esp),%eax
		inc    %edi
		add    $0x000084,%ecx
		cmp    %ax,%di
		jl     _079074_jump

	_0790c0_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0790cc_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%ebx
		movswl %dx,%eax
		cmp    $0xffffffff,%eax
		je     _0790e5_jump
		mov    $0x000001,%edx
		mov    %ebx,%eax
		call   _01d364_func

	_0790e5_jump:
		mov    $0x000054,%eax
		call   _06fa30_func
		cmpl   $0x000000,0x000024(%ebx)
		je     _07916f_jump
		cmpb   $0x000002,0x00006d(%ebx)
		jne    _079137_jump
		cmpb   $0x000001,0x00006c(%ebx)
		jne    _079137_jump
		mov    0x000028(%ebx),%ecx
		movw   $0x00ffff,0x000040(%ebx)
		add    $0x000014,%ecx
		mov    %ebx,%eax
		mov    %ecx,0x000028(%ebx)
		call   _07900c_func
		mov    0x000028(%ebx),%esi
		movw   $0x000001,0x000040(%ebx)
		sub    $0x000014,%esi
		mov    %ebx,%eax
		mov    %esi,0x000028(%ebx)
		call   _07900c_func
		addl   $0x00000a,0x000028(%ebx)
		jmp    _07913e_jump

	_079137_jump:
		mov    %ebx,%eax
		call   _07900c_func

	_07913e_jump:
		mov    0x000060(%ebx),%dx
		movl   $0x000000,0x000024(%ebx)
		cmp    $0x000024,%dx
		jne    _079158_jump
		andb   $0x0000fb,0x000081(%ebx)
		jmp    _079168_jump

	_079158_jump:
		mov    _0cece8_data,%eax
		sar    $0x000010,%eax
		add    $0x0001e4,%eax
		mov    %eax,0x00002c(%ebx)

	_079168_jump:
		mov    %ebx,%eax
		call   _076f4c_func

	_07916f_jump:
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_079174_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%ecx
		mov    %bl,0x000010(%esp)
		cmpw   $0x000023,0x000060(%eax)
		jne    _07935c_jump
		mov    _0cc1f0_data,%esi
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0794c4_jump

	_0791a5_jump:
		cmpw   $0x000024,0x000060(%esi)
		jne    _079345_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _079345_jump
		mov    0x000010(%esp),%bh
		movb   $0x0000c8,0x00007f(%esi)
		test   %bh,%bh
		je     _0791e9_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _07920e_jump

	_0791e9_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_07920e_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    %cx,0x000042(%esi)
		xor    %edx,%edx
		mov    (%eax),%eax
		mov    0x00006c(%esi),%dl
		movsbw (%eax,%edx,8),%ax
		testb  $0x000008,0x000081(%esi)
		je     _079237_jump
		cwtl   
		jmp    _07923a_jump

	_079237_jump:
		cwtl   
		neg    %eax

	_07923a_jump:
		mov    $0x00007a,%ecx
		mov    %ax,0x000040(%esi)
		xor    %eax,%eax
		mov    $0x000035,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _07925c_jump
		cmp    %ecx,%eax
		jg     _07925c_jump
		mov    $0x000001,%eax
		jmp    _07925e_jump

	_07925c_jump:
		xor    %eax,%eax

	_07925e_jump:
		test   %eax,%eax
		je     _079269_jump
		mov    $0x000003,%eax
		jmp    _079294_jump

	_079269_jump:
		mov    $0x000090,%ecx
		mov    $0x00007b,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _079285_jump
		cmp    %ecx,%eax
		jg     _079285_jump
		mov    $0x000001,%eax
		jmp    _079287_jump

	_079285_jump:
		xor    %eax,%eax

	_079287_jump:
		test   %eax,%eax
		je     _07928f_jump
		xor    %eax,%eax
		jmp    _079294_jump

	_07928f_jump:
		mov    $0xffffffff,%eax

	_079294_jump:
		movswl %ax,%edx
		cmp    $0xffffffff,%edx
		je     _0794c4_jump
		lea    0x000008(%esp),%eax
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%ebx
		mov    %edi,%eax
		call   _01d710_func
		mov    -0x000002(%esp),%edx
		xor    %eax,%eax
		sar    $0x000010,%edx
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		xor    %eax,%eax
		mov    0x00000a(%esp),%edx
		mov    0x000074(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000028(%esi),%ax
		mov    %edx,0x00002c(%esi)
		mov    %ax,0x00003c(%esi)
		mov    $0x000002,%ebx
		mov    0x00002c(%esi),%ax
		mov    %ebx,%edx
		mov    %ax,0x00003e(%esi)
		mov    %esi,%eax
		call   _01d374_func
		mov    %esi,%eax
		call   _053c34_func
		mov    %esi,%eax
		call   _01db8c_func
		movb   $0x000000,0x000071(%esi)
		movb   $0x000007,0x000072(%esi)
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f304_func
		andb   $0x0000bf,0x000081(%esi)
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_079345_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _0791a5_jump
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07935c_jump:
		mov    _0cc1f0_data,%esi
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0794c4_jump

	_079374_jump:
		cmpw   $0x00002c,0x000060(%esi)
		jne    _0794b4_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _0794b4_jump
		mov    0x000032(%esi),%edx
		mov    $0x00005a,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		cmpb   $0x000000,0x000010(%esp)
		je     _0793c3_jump
		mov    0x000081(%edi),%al
		and    $0x000008,%al
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    %ah,%dl
		mov    %ah,0x000081(%esi)
		or     %al,%dl
		mov    %dl,0x000081(%esi)
		jmp    _0793e8_jump

	_0793c3_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_0793e8_jump:
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %cx,0x000042(%esi)
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%esi),%al
		movsbw (%edx,%eax,8),%ax
		testb  $0x000008,0x000081(%esi)
		je     _079411_jump
		cwtl   
		jmp    _079414_jump

	_079411_jump:
		cwtl   
		neg    %eax

	_079414_jump:
		mov    %ax,0x000040(%esi)
		lea    0x000008(%esp),%eax
		lea    0x00000c(%esp),%ecx
		push   %eax
		lea    0x000008(%esp),%eax
		lea    0x000004(%esp),%ebx
		push   %eax
		mov    $0x000007,%edx
		mov    %edi,%eax
		call   _01d710_func
		mov    -0x000002(%esp),%eax
		mov    0x000002(%esp),%edx
		sar    $0x000010,%eax
		sar    $0x000010,%edx
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x000068(%esi),%al
		sub    %eax,%edx
		mov    %edx,0x000028(%esi)
		mov    0x00000a(%esp),%eax
		sar    $0x000010,%eax
		sub    $0x000006,%eax
		mov    %eax,0x00002c(%esi)
		mov    0x000028(%esi),%ax
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    %ax,0x00003e(%esi)
		mov    0x000081(%esi),%al
		shl    $0x000004,%al
		xor    %edx,%edx
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,%dl
		mov    %esi,%eax
		call   _05efb0_func
		mov    %esi,%eax
		call   _01db8c_func
		mov    0x000081(%esi),%bl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x000081(%esi)
		call   _01f304_func
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0794b4_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _079374_jump

	_0794c4_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0794cc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _078720_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _07958e_jump
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _0794ec_jump
		cmpb   $0x000090,0x00006b(%ecx)
		jae    _0794f2_jump

	_0794ec_jump:
		movw   $0x000000,0x000052(%ecx)

	_0794f2_jump:
		mov    0x00006c(%ecx),%bl
		cmp    $0x000001,%bl
		je     _0794ff_jump
		cmp    $0x000002,%bl
		jne    _07952d_jump

	_0794ff_jump:
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _07952d_jump
		cmpb   $0x000000,0x00007b(%ecx)
		je     _07951c_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _079526_jump

	_07951c_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_079526_jump:
		mov    %ecx,%eax
		call   _05efb0_func

	_07952d_jump:
		cmpb   $0x000002,0x00006c(%ecx)
		jne    _079594_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _079594_jump
		cmpb   $0x000090,0x00006b(%ecx)
		jne    _079594_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		lea    0x000000(,%eax,4),%edx
		mov    0x00000c(%ecx),%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%ecx),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000005(%ebx,%eax,1),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _079594_jump
		mov    $0x000001,%ebx
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		call   _079174_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07958e_jump:
		movw   $0x000000,0x000052(%ecx)

	_079594_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079598_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		call   _078720_func
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _079644_jump
		cmpb   $0x000006,0x00006c(%ecx)
		je     _0795b8_jump
		movw   $0x000000,0x000052(%ecx)

	_0795b8_jump:
		mov    0x00006c(%ecx),%dh
		cmp    $0x000001,%dh
		je     _0795c5_jump
		cmp    $0x000006,%dh
		jne    _0795f3_jump

	_0795c5_jump:
		mov    %ecx,%eax
		call   _01cbd0_func
		test   %al,%al
		je     _0795f3_jump
		cmpb   $0x000000,0x00007b(%ecx)
		je     _0795e2_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _0795ec_jump

	_0795e2_jump:
		mov    $0x000001,%ebx
		mov    $0x000008,%edx

	_0795ec_jump:
		mov    %ecx,%eax
		call   _05efb0_func

	_0795f3_jump:
		cmpb   $0x000006,0x00006c(%ecx)
		jne    _07964a_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _07964a_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		dec    %eax
		xor    %edx,%edx
		mov    _0cee3e_data(%eax),%dl
		cmp    %eax,%edx
		jne    _07964a_jump
		mov    $0x000001,%ebx
		xor    %eax,%edx
		mov    %ecx,%eax
		call   _079174_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_079644_jump:
		movw   $0x000000,0x000052(%ecx)

	_07964a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079650_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00001c,%esp
		mov    %eax,%edi
		mov    %edx,0x000018(%esp)
		mov    _0cc1f0_data,%esi
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _0798e3_jump

	_079675_jump:
		cmpw   $0x000024,0x000060(%esi)
		jne    _0798d3_jump
		cmpl   $0x000000,0x000024(%esi)
		jne    _0798d3_jump
		mov    0x000018(%esp),%ecx
		movb   $0x0000c8,0x00007f(%esi)
		test   %cx,%cx
		je     _0796ba_jump
		mov    0x000081(%esi),%cl
		mov    0x000081(%edi),%al
		and    $0x0000f7,%cl
		and    $0x000008,%al
		mov    %cl,0x000081(%esi)
		mov    %cl,%ch
		or     %al,%ch
		mov    %ch,0x000081(%esi)
		jmp    _0796df_jump

	_0796ba_jump:
		mov    0x000081(%edi),%dh
		lea    0x000081(%esi),%eax
		test   $0x000008,%dh
		sete   %dl
		mov    (%eax),%bl
		and    $0x000001,%dl
		and    $0x0000f7,%bl
		shl    $0x000003,%dl
		mov    %bl,(%eax)
		mov    %bl,%bh
		or     %dl,%bh
		mov    %bh,(%eax)

	_0796df_jump:
		mov    0x00006d(%edi),%al
		mov    $0xffffffff,%edx
		test   %al,%al
		jne    _079717_jump
		cmpb   $0x00000d,0x00006c(%edi)
		jne    _079717_jump
		mov    $0x000065,%ecx
		xor    %eax,%eax
		mov    $0x000034,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _07970f_jump
		cmp    %ecx,%eax
		jg     _07970f_jump
		mov    $0x000001,%eax
		jmp    _079711_jump

	_07970f_jump:
		xor    %eax,%eax

	_079711_jump:
		test   %eax,%eax
		je     _07974c_jump
		jmp    _079747_jump

	_079717_jump:
		cmpb   $0x000000,0x00006d(%edi)
		jne    _07974c_jump
		cmpb   $0x000009,0x00006c(%edi)
		jne    _07974c_jump
		mov    $0x000037,%ecx
		xor    %eax,%eax
		mov    $0x000010,%ebx
		mov    0x00006b(%edi),%al
		cmp    %ebx,%eax
		jl     _079741_jump
		cmp    %ecx,%eax
		jg     _079741_jump
		mov    $0x000001,%eax
		jmp    _079743_jump

	_079741_jump:
		xor    %eax,%eax

	_079743_jump:
		test   %eax,%eax
		je     _07974c_jump

	_079747_jump:
		mov    $0x000003,%edx

	_07974c_jump:
		movswl %dx,%edx
		cmp    $0xffffffff,%edx
		je     _0798e3_jump
		lea    0x00000c(%esp),%eax
		push   %eax
		lea    0x000014(%esp),%eax
		lea    0x000018(%esp),%ecx
		push   %eax
		lea    0x000010(%esp),%ebx
		mov    %edi,%eax
		call   _01d710_func
		mov    0x000018(%esp),%eax
		cmp    $0x000001,%ax
		jb     _079785_jump
		jbe    _07979f_jump
		cmp    $0x000002,%ax
		je     _0797a9_jump
		jmp    _0797d8_jump

	_079785_jump:
		test   %ax,%ax
		jne    _0797d8_jump
		mov    $0xfffffffe,%edx
		mov    _0cdbc3_data,%al
		mov    %edx,0x000004(%esp)
		dec    %al
		add    %al,0x000076(%edi)
		jmp    _0797d8_jump

	_07979f_jump:
		movl   $0x000001,0x000004(%esp)
		jmp    _0797d8_jump

	_0797a9_jump:
		cmpb   $0x000002,_0cdb01_data
		jne    _0797c4_jump
		mov    _0cece2_data,%ax
		mov    %ax,0x00004e(%esi)
		mov    _0cece0_data,%ax
		jmp    _0797d4_jump

	_0797c4_jump:
		mov    _0cdabc_data,%ax
		mov    %ax,0x00004e(%esi)
		mov    _0cdac0_data,%ax

	_0797d4_jump:
		mov    %ax,0x00004c(%esi)

	_0797d8_jump:
		mov    0x000006(%esp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    0x000068(%esi),%dl
		sub    %edx,%eax
		mov    %eax,%edx
		mov    0x00000e(%esp),%eax
		sar    $0x000010,%eax
		sar    %eax
		add    %eax,%edx
		mov    %edx,0x000028(%esi)
		xor    %eax,%eax
		mov    0x000012(%esp),%edx
		mov    0x000074(%esi),%al
		sar    $0x000010,%edx
		sub    %eax,%edx
		mov    0x000028(%esi),%ax
		mov    %edx,0x00002c(%esi)
		mov    %ax,0x00003c(%esi)
		mov    0x00002c(%esi),%ax
		mov    0x000018(%esp),%ebx
		mov    %ax,0x00003e(%esi)
		cmp    $0x000002,%bx
		je     _079867_jump
		xor    %eax,%eax
		mov    0x00006d(%esi),%al
		mov    0x00000c(%esi),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    0x00006c(%esi),%al
		lea    0x000000(,%eax,8),%ebx
		mov    (%edx),%eax
		mov    0x000081(%esi),%dl
		movsbw (%ebx,%eax,1),%ax
		test   $0x000008,%dl
		je     _07984f_jump
		cwtl   
		jmp    _079852_jump

	_07984f_jump:
		cwtl   
		neg    %eax

	_079852_jump:
		mov    %eax,(%esp)
		mov    %esi,%eax
		xor    %edx,%edx
		call   _053c34_func
		mov    %esi,%eax
		call   _01d364_func
		jmp    _079889_jump

	_079867_jump:
		mov    $0x000001,%edx
		mov    $0x00001e,%ecx
		mov    %esi,%eax
		lea    0x000004(%esp),%ebx
		call   _01d364_func
		push   $0x000003
		lea    0x000004(%esp),%edx
		mov    %esi,%eax
		call   _01e6fc_func

	_079889_jump:
		mov    (%esp),%eax
		mov    %ax,0x000040(%esi)
		mov    0x000004(%esp),%eax
		mov    %ax,0x000042(%esi)
		mov    %esi,%eax
		call   _01db8c_func
		movb   $0x000000,0x000071(%esi)
		movb   $0x000007,0x000072(%esi)
		mov    0x000081(%esi),%dh
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dh
		mov    %esi,%eax
		mov    %dh,0x000081(%esi)
		call   _01f304_func
		andb   $0x0000bf,0x000081(%esi)
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_0798d3_jump:
		inc    %eax
		add    $0x000084,%esi
		cmp    %dx,%ax
		jl     _079675_jump

	_0798e3_jump:
		add    $0x00001c,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0798ec_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _0799fb_jump
		cmpb   $0x00000d,0x00006c(%ecx)
		jne    _079907_jump
		cmpb   $0x000065,0x00006b(%ecx)
		jae    _079919_jump

	_079907_jump:
		cmpb   $0x000009,0x00006c(%ecx)
		jne    _079913_jump
		cmpb   $0x000037,0x00006b(%ecx)
		jae    _079919_jump

	_079913_jump:
		movw   $0x000000,0x000052(%ecx)

	_079919_jump:
		mov    0x00006c(%ecx),%al
		test   %al,%al
		je     _079928_jump
		cmp    $0x00000e,%al
		je     _079928_jump
		cmp    $0x000008,%al
		jne    _079951_jump

	_079928_jump:
		cmpb   $0x000001,0x00006b(%ecx)
		jae    _079951_jump
		cmpb   $0x000002,0x00007b(%ecx)
		jb     _079940_jump
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		jmp    _07994a_jump

	_079940_jump:
		mov    $0x000001,%ebx
		mov    $0x00000c,%edx

	_07994a_jump:
		mov    %ecx,%eax
		call   _05efb0_func

	_079951_jump:
		mov    0x00006c(%ecx),%bh
		cmp    $0x00000d,%bh
		jne    _0799ac_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _079a01_jump
		cmpb   $0x000065,0x00006b(%ecx)
		jne    _079a01_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    0x00006c(%ecx),%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _079a01_jump
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _079650_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0799ac_jump:
		cmp    $0x000009,%bh
		jne    _079a01_jump
		cmpw   $0x000000,0x000052(%ecx)
		jne    _079a01_jump
		cmpb   $0x000037,0x00006b(%ecx)
		jne    _079a01_jump
		xor    %eax,%eax
		mov    0x00006d(%ecx),%al
		mov    0x00000c(%ecx),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		xor    %eax,%eax
		mov    (%edx),%edx
		mov    %bh,%al
		mov    0x000005(%edx,%eax,8),%al
		and    $0x00000f,%al
		and    $0x0000ff,%eax
		cmpb   $0x000000,_0cee3d_data(%eax)
		jne    _079a01_jump
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _079650_func
		movw   $0x000001,0x000052(%ecx)
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0799fb_jump:
		movw   $0x000000,0x000052(%ecx)

	_079a01_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_079a08_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %ebp
		mov    %eax,%ebp
		mov    %edx,%ebx
		cmp    $0x000008,%dx
		jb     _079a20_jump
		jbe    _079a2d_jump
		cmp    $0x000009,%dx
		je     _079a34_jump
		jmp    _079a39_jump

	_079a20_jump:
		cmp    $0x000007,%dx
		jne    _079a39_jump
		mov    $0xfffffffd,%esi
		jmp    _079a39_jump

	_079a2d_jump:
		mov    $0x000002,%esi
		jmp    _079a39_jump

	_079a34_jump:
		mov    $0xffffffff,%esi

	_079a39_jump:
		mov    _0cc1f0_data,%ecx
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _079adc_jump

	_079a51_jump:
		cmpw   $0x00006e,0x000060(%ecx)
		jne    _079acc_jump
		cmpl   $0x000000,0x000024(%ecx)
		jne    _079acc_jump
		mov    $0x000002,%edx
		and    $0x0000ff,%ebx
		mov    %ecx,%eax
		call   _01d374_func
		movw   $0x00fffa,0x000042(%ecx)
		mov    %si,0x000040(%ecx)
		mov    0x000028(%ebp),%ebx
		mov    %ebx,0x000028(%ecx)
		mov    0x00002c(%ebp),%ebx
		mov    %ebx,0x00002c(%ecx)
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		mov    %ecx,%eax
		call   _01db8c_func
		orb    $0x000004,0x000081(%ecx)
		mov    %ecx,%eax
		movl   $0x000001,0x000024(%ecx)
		call   _01f304_func
		movb   $0x000000,0x000071(%ecx)
		mov    0x000081(%ecx),%dl
		movb   $0x000005,0x000072(%ecx)
		and    $0x0000bf,%dl
		mov    %dl,0x000081(%ecx)
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_079acc_jump:
		inc    %eax
		add    $0x000084,%ecx
		cmp    %dx,%ax
		jl     _079a51_jump

	_079adc_jump:
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

_079ae4_switch:
		.long   _079bb4_case
		.long   _079bc2_case
		.long   _079bd0_case
		.long   _079bde_case
		.long   _079bec_case




_079af8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000018,%esp
		mov    %eax,(%esp)
		mov    $0x000054,%eax
		call   _06fa30_func
		mov    _0cc1f0_data,%ebp
		mov    _0cc1f4_data,%dx
		xor    %eax,%eax
		test   %dx,%dx
		jle    _079b4c_jump

	_079b22_jump:
		cmpw   $0x00006e,0x000060(%ebp)
		jne    _079b40_jump
		mov    %ebp,%edi

	_079b2b_jump:
		mov    0x0000e4(%edi),%cx
		add    $0x000084,%edi
		cmp    $0x00006e,%cx
		je     _079b2b_jump
		jmp    _079b4c_jump

	_079b40_jump:
		inc    %eax
		add    $0x000084,%ebp
		cmp    %dx,%ax
		jl     _079b22_jump

	_079b4c_jump:
		cmpw   $0x00006e,0x000060(%ebp)
		jne    _079c74_jump
		xor    %eax,%eax
		mov    %ax,0x00000c(%esp)

	_079b5e_jump:
		mov    %ebp,%esi
		cmp    %edi,%ebp
		ja     _079b74_jump

	_079b64_jump:
		cmpl   $0x000000,0x000024(%esi)
		je     _079b74_jump
		add    $0x000084,%esi
		cmp    %edi,%esi
		jbe    _079b64_jump

	_079b74_jump:
		cmp    %edi,%esi
		ja     _079c60_jump
		mov    $0x000002,%edx
		xor    %ebx,%ebx
		mov    %esi,%eax
		mov    0x00000c(%esp),%bl
		call   _01d374_func
		mov    0x000081(%esi),%ah
		and    $0x0000f7,%ah
		mov    0x00000c(%esp),%ecx
		mov    %ah,0x000081(%esi)
		cmp    $0x000004,%cx
		ja     _079bf8_jump
		xor    %eax,%eax
		mov    %cx,%ax
		jmp    *%cs:_079ae4_switch(,%eax,4)

	_079bb4_case:
		movw   $0x000000,0x000042(%esi)
		movw   $0x000004,0x000040(%esi)
		jmp    _079bf8_jump

	_079bc2_case:
		movw   $0x000000,0x000042(%esi)
		movw   $0x00fffe,0x000040(%esi)
		jmp    _079bf8_jump

	_079bd0_case:
		movw   $0x00fffc,0x000042(%esi)
		movw   $0x00fffc,0x000040(%esi)
		jmp    _079bf8_jump

	_079bde_case:
		movw   $0x00fffc,0x000042(%esi)
		movw   $0x000002,0x000040(%esi)
		jmp    _079bf8_jump

	_079bec_case:
		movw   $0x00fffa,0x000042(%esi)
		movw   $0x00ffff,0x000040(%esi)

	_079bf8_jump:
		lea    0x000004(%esp),%eax
		mov    0x00000a(%esp),%edx
		lea    0x000010(%esp),%ecx
		push   %eax
		lea    0x000018(%esp),%eax
		lea    0x00000c(%esp),%ebx
		push   %eax
		sar    $0x000010,%edx
		mov    0x000008(%esp),%eax
		call   _01d710_func
		mov    0x000006(%esp),%eax
		sar    $0x000010,%eax
		mov    %eax,0x000028(%esi)
		mov    0x00000e(%esp),%eax
		mov    $0x000001,%ebx
		sar    $0x000010,%eax
		mov    %ebx,%edx
		mov    %eax,0x00002c(%esi)
		mov    %esi,%eax
		call   _05efb0_func
		mov    %esi,%eax
		call   _01db8c_func
		mov    0x000081(%esi),%dl
		movl   $0x000001,0x000024(%esi)
		or     $0x000004,%dl
		mov    %esi,%eax
		mov    %dl,0x000081(%esi)
		call   _01f304_func

	_079c60_jump:
		mov    0x00000c(%esp),%edx
		inc    %edx
		mov    %dx,0x00000c(%esp)
		cmp    $0x000005,%dx
		jl     _079b5e_jump

	_079c74_jump:
		add    $0x000018,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

_079c80_switch:
		.long   _079d4c_case
		.long   _079d32_case
		.long   _079d18_case
		.long   _079cdb_case




_079c90_func:
		push   %ebx
		mov    %eax,%ebx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _079dab_jump
		cmpw   $0x000000,_0cecde_data
		jl     _079dab_jump
		mov    0x000032(%ebx),%edx
		mov    $0x000053,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		mov    0x000076(%ebx),%dl
		dec    %dl
		mov    %dl,%al
		mov    %dl,0x000076(%ebx)
		cmp    $0x000003,%dl
		ja     _079dab_jump
		and    $0x0000ff,%eax
		jmp    *%cs:_079c80_switch(,%eax,4)

	_079cdb_case:
		mov    $0x000004,%edx
		mov    %ebx,%eax
		call   _01d364_func
		mov    $0x000007,%edx
		mov    %ebx,%eax
		call   _079a08_func
		mov    _0cecdc_data,%eax
		sar    $0x000010,%eax
		mov    %eax,%ebx
		shl    $0x000005,%ebx
		add    %eax,%ebx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%ebx
		mov    $0x000006,%edx
		add    %ebx,%eax
		call   _01d364_func
		pop    %ebx
		ret    

	_079d18_case:
		mov    $0x000006,%edx
		mov    %ebx,%eax
		call   _01d364_func
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _079a08_func
		pop    %ebx
		ret    

	_079d32_case:
		mov    $0x000008,%edx
		mov    %ebx,%eax
		call   _01d364_func
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _079a08_func
		pop    %ebx
		ret    

	_079d4c_case:
		mov    _0cecdc_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %edx,%eax
		mov    _0cc1f0_data,%edx
		cmpb   $0x000006,0x00006c(%edx,%eax,4)
		jne    _079dab_jump
		mov    0x000032(%ebx),%edx
		mov    $0x000053,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		mov    $0x000009,%edx
		mov    %ebx,%eax
		call   _01d364_func
		mov    _0cecdc_data,%edx
		sar    $0x000010,%edx
		mov    %edx,%eax
		shl    $0x000005,%eax
		add    %eax,%edx
		mov    _0cc1f0_data,%eax
		shl    $0x000002,%edx
		movb   $0x000003,0x00006c(%edx,%eax,1)
		movb   $0x000004,0x00006e(%edx,%eax,1)
		movb   $0x00000a,0x00006e(%ebx)

	_079dab_jump:
		pop    %ebx
		ret    



_079db0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _079e1c_jump
		mov    %ecx,%eax
		call   _01e6dc_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _079e0c_jump
		mov    %ecx,%eax
		call   _079af8_func
		movl   $0x000000,0x000024(%ecx)
		mov    0x000034(%ecx),%dx
		cmp    _0cdade_data,%dx
		jne    _079e02_jump
		movw   $0x00ffff,_0cdade_data
		mov    $0x000002,%ebx
		mov    $_0cda94_data,%eax
		mov    %ebx,%edx
		movw   $0x0003e8,0x000054(%ecx)
		call   _01d374_func

	_079e02_jump:
		andb   $0x0000fb,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    

	_079e0c_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		call   _01d364_func
		movb   $0x000000,0x00006b(%ecx)

	_079e1c_jump:
		pop    %ecx
		pop    %ebx
		ret    



_079e20_func:
		push   %ebx
		push   %ecx
		sub    $0x000004,%esp
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _079e33_jump
		cmpb   $0x000001,0x00006c(%ecx)
		je     _079e3a_jump

	_079e33_jump:
		mov    %ecx,%eax
		call   _01e6dc_func

	_079e3a_jump:
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		shr    $0x000007,%al
		mov    $0x000001,%ebx
		mov    %al,(%esp)
		mov    %ecx,%eax
		mov    $0x000008,%edx
		call   _01db14_func
		mov    %ecx,%eax
		call   _05efb0_func
		mov    0x000081(%ecx),%al
		shl    $0x000004,%al
		mov    (%esp),%dh
		shr    $0x000007,%al
		cmp    %dh,%al
		je     _079e97_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		cmpw   $0x000023,0x000060(%ecx)
		jne    _079e97_jump
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _079174_func

	_079e97_jump:
		cmpb   $0x000003,0x000076(%ecx)
		jae    _079ee0_jump
		cmpw   $0x000023,0x000060(%ecx)
		jne    _079eb2_jump
		mov    $0xfffffffe,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _079174_func

	_079eb2_jump:
		cmpb   $0x000000,0x000076(%ecx)
		jne    _079ece_jump
		mov    $0x000001,%ebx
		mov    0x000077(%ecx),%al
		xor    %edx,%edx
		mov    %al,0x000076(%ecx)
		mov    %ecx,%eax
		call   _05efb0_func
		jmp    _079ee0_jump

	_079ece_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _05efb0_func
		movb   $0x000002,0x000073(%ecx)

	_079ee0_jump:
		add    $0x000004,%esp
		pop    %ecx
		pop    %ebx
		ret    



_079ee8_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		movb   $0x000000,0x00007f(%ecx)
		mov    %ecx,%eax
		mov    0x000081(%ecx),%bl
		call   _01db14_func
		mov    0x000032(%ecx),%edx
		mov    $0x000056,%eax
		sar    $0x000010,%edx
		call   _06f35c_func
		mov    0x000081(%ecx),%dl
		shl    $0x000004,%bl
		shl    $0x000004,%dl
		shr    $0x000007,%bl
		shr    $0x000007,%dl
		cmp    %bl,%dl
		je     _079f42_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		mov    $0x000001,%ebx
		call   _079650_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		pop    %ecx
		pop    %ebx
		ret    

	_079f42_jump:
		cmpb   $0x00000f,0x000076(%ecx)
		jae    _079f86_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _079650_func
		cmpb   $0x000000,0x000076(%ecx)
		jne    _079f6e_jump
		mov    $0x000001,%ebx
		mov    0x000077(%ecx),%dl
		mov    %ecx,%eax
		mov    %dl,0x000076(%ecx)
		xor    %edx,%edx
		call   _05efb0_func
		pop    %ecx
		pop    %ebx
		ret    

	_079f6e_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		je     _079f82_jump
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		mov    %ebx,%edx
		call   _05efb0_func

	_079f82_jump:
		movb   $0x000002,0x000073(%ecx)

	_079f86_jump:
		pop    %ecx
		pop    %ebx
		ret    



_079f8c_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _079fba_jump
		mov    0x00006c(%eax),%dh
		cmp    $0x000001,%dh
		je     _079fc9_jump
		cmp    $0x000002,%dh
		je     _079fc9_jump
		cmp    $0x000005,%dh
		je     _079fc9_jump
		cmp    $0x000006,%dh
		je     _079fc9_jump
		cmp    $0x000003,%dh
		je     _079fc9_jump
		cmp    $0x000007,%dh
		je     _079fc9_jump
		cmp    $0x000004,%dh
		je     _079fc9_jump

	_079fba_jump:
		mov    $0x000001,%ebx
		mov    $0x000007,%edx
		call   _05efb0_func

	_079fc9_jump:
		pop    %edx
		pop    %ebx
		ret    



_079fcc_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _079fdd_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _079fe9_jump

	_079fdd_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _07a002_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _07a002_jump

	_079fe9_jump:
		mov    $0x000001,%ebx
		mov    $0x000002,%edx
		mov    %ecx,%eax
		call   _05efb0_func
		movb   $0x000007,0x000072(%ecx)
		movb   $0x000000,0x000071(%ecx)

	_07a002_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a010_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %ebx,%ebp
		mov    %edx,%eax
		lea    0x00c800(%edx),%eax
		mov    %ecx,%ebx
		mov    %eax,(%esp)

	_07a028_jump:
		mov    %ebp,%ecx
		mov    %edx,%edi
		mov    %ebx,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07a038_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07a038_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    (%esp),%ecx
		add    $0x000100,%edx
		add    $0x000140,%ebx
		cmp    %ecx,%edx
		jne    _07a028_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07a05c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %edx,%ecx
		mov    %ebx,%ebp
		mov    %eax,%edx
		add    $0x00c800,%eax
		mov    %ecx,%ebx
		mov    %eax,(%esp)

	_07a073_jump:
		mov    %ebp,%ecx
		mov    %ebx,%edi
		mov    %edx,%esi
		cld    
		mov    %ecx,%eax
		and    $0x000003,%ecx
		je     _07a083_jump
		rep movsb %ds:(%esi),%es:(%edi)

	_07a083_jump:
		mov    %eax,%ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		mov    (%esp),%ecx
		add    $0x000100,%edx
		add    $0x000140,%ebx
		cmp    %ecx,%edx
		jne    _07a073_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07a0b0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07a0d2_jump
		cmpb   $0x000001,0x00006c(%ecx)
		jne    _07a0d2_jump
		movw   $0x000000,0x000040(%ecx)
		movw   $0x00fff8,0x000042(%ecx)
		jmp    _07a14c_jump

	_07a0d2_jump:
		mov    0x000070(%ecx),%al
		cmp    $0x000002,%al
		jb     _07a104_jump
		jbe    _07a145_jump
		cmp    $0x000014,%al
		jb     _07a14c_jump
		ja     _07a14c_jump
		mov    0x000056(%ecx),%ax
		mov    %ax,0x000040(%ecx)
		mov    0x00004a(%ecx),%ax
		mov    %ax,0x000042(%ecx)
		mov    %ecx,%eax
		call   _07a2e0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a104_jump:
		test   %al,%al
		jne    _07a111_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _07a118_jump

	_07a111_jump:
		orb    $0x000008,0x000081(%ecx)

	_07a118_jump:
		cmpb   $0x000000,0x00006d(%ecx)
		jne    _07a124_jump
		cmpb   $0x000000,0x00006c(%ecx)
		je     _07a130_jump

	_07a124_jump:
		cmpb   $0x000001,0x00006d(%ecx)
		jne    _07a14c_jump
		cmpb   $0x000000,0x00006c(%ecx)
		jne    _07a14c_jump

	_07a130_jump:
		mov    $0x000001,%edx
		mov    %ecx,%eax
		xor    %ebx,%ebx
		call   _01d374_func
		mov    %ecx,%eax
		call   _053c34_func

	_07a145_jump:
		mov    %ecx,%eax
		call   _0252c0_func

	_07a14c_jump:
		mov    %ecx,%eax
		call   _07a2e0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a158_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%esi
		mov    %dl,0x000010(%esp)
		lea    0x000008(%esp),%ecx
		movb   $0x000064,0x00007f(%eax)
		lea    0x000004(%esp),%eax
		mov    %esp,%ebx
		push   %eax
		lea    0x000010(%esp),%edx
		mov    %esi,%eax
		call   _01d294_func
		testb  $0x000008,0x000081(%esi)
		je     _07a19c_jump
		mov    0x000008(%esp),%eax
		mov    0x00000c(%esp),%ebx
		sub    $0x000010,%eax
		add    %eax,%ebx
		mov    %bx,0x00000c(%esp)
		jmp    _07a1b0_jump

	_07a19c_jump:
		mov    0x000008(%esp),%eax
		mov    0x00000c(%esp),%edx
		add    $0x00004c,%eax
		sub    %eax,%edx
		mov    %dx,0x00000c(%esp)

	_07a1b0_jump:
		mov    0x000008(%esp),%ecx
		add    $0x00005c,%ecx
		mov    0x000004(%esp),%eax
		mov    %cx,0x000008(%esp)
		mov    $0x000001,%cl
		test   %ax,%ax
		js     _07a1cc_jump
		sar    %cl,%ax
		jmp    _07a1d5_jump

	_07a1cc_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07a1d5_jump:
		add    $0x000002,%eax
		mov    $0x000002,%cl
		mov    %ax,0x000004(%esp)
		test   %ax,%ax
		js     _07a1eb_jump
		sar    %cl,%ax
		jmp    _07a1f4_jump

	_07a1eb_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07a1f4_jump:
		mov    (%esp),%edi
		add    %eax,%edi
		mov    0x000002(%esp),%eax
		sar    $0x000010,%eax
		push   %eax
		mov    0x00000a(%esp),%eax
		mov    _0cecb8_data,%ecx
		sar    $0x000010,%eax
		mov    %di,0x000004(%esp)
		push   %eax
		mov    0x000006(%esp),%eax
		mov    _0cec9e_data,%ebx
		sar    $0x000010,%eax
		mov    _0cec9c_data,%edx
		push   %eax
		mov    0x000016(%esp),%eax
		sar    $0x000010,%ecx
		sar    $0x000010,%eax
		sar    $0x000010,%ebx
		push   %eax
		mov    _0cec9a_data,%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		call   _02ae60_func
		test   %ax,%ax
		je     _07a2aa_jump
		mov    $0x000001,%cl
		mov    _0ceca0_data,%ax
		test   %ax,%ax
		js     _07a25d_jump
		sar    %cl,%ax
		jmp    _07a266_jump

	_07a25d_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07a266_jump:
		mov    $0x000001,%cl
		mov    _0cecba_data,%ax
		test   %ax,%ax
		js     _07a278_jump
		sar    %cl,%ax
		jmp    _07a281_jump

	_07a278_jump:
		neg    %ax
		sar    %cl,%ax
		neg    %ax

	_07a281_jump:
		mov    0x000081(%esi),%dl
		mov    $0x000007,%eax
		test   $0x000008,%dl
		jne    _07a298_jump
		cmpb   $0x000000,0x000010(%esp)
		je     _07a2a8_jump

	_07a298_jump:
		testb  $0x000008,0x000081(%esi)
		je     _07a2aa_jump
		cmpb   $0x000001,0x000010(%esp)
		jne    _07a2aa_jump

	_07a2a8_jump:
		neg    %eax

	_07a2aa_jump:
		test   %ax,%ax
		je     _07a2d7_jump
		mov    _0cecc8_data,%dx
		add    %eax,%edx
		mov    _0cdb01_data,%cl
		mov    %dx,_0cecc8_data
		cmp    $0x000005,%cl
		je     _07a2d7_jump
		mov    $0x000008,%cl
		mov    %edx,%eax
		cwtl   
		shl    %cl,%eax
		mov    %ax,_0ceca2_data

	_07a2d7_jump:
		add    $0x000014,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07a2e0_func:
		push   %ecx
		push   %edx
		mov    0x00007f(%eax),%dl
		test   %dl,%dl
		je     _07a2f0_jump
		mov    %dl,%dh
		dec    %dh
		mov    %dh,0x00007f(%eax)

	_07a2f0_jump:
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07a329_jump
		cmpb   $0x000002,0x00006c(%eax)
		jne    _07a302_jump
		cmpb   $0x00000a,0x00006b(%eax)
		jae    _07a30a_jump

	_07a302_jump:
		mov    0x00006c(%eax),%ch
		cmp    $0x000004,%ch
		jne    _07a30e_jump

	_07a30a_jump:
		xor    %edx,%edx
		jmp    _07a324_jump

	_07a30e_jump:
		cmp    $0x000006,%ch
		jne    _07a319_jump
		cmpb   $0x00000a,0x00006b(%eax)
		jae    _07a31f_jump

	_07a319_jump:
		cmpb   $0x000007,0x00006c(%eax)
		jne    _07a329_jump

	_07a31f_jump:
		mov    $0x000001,%edx

	_07a324_jump:
		call   _07a158_func

	_07a329_jump:
		pop    %edx
		pop    %ecx
		ret    



_07a32c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		mov    $0x000008,%edx
		call   _05efb0_func
		mov    %ecx,%eax
		call   _0255d0_func
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a34c_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		call   _01e6dc_func
		mov    _0cdb20_data,%eax
		mov    0x000040(%eax),%dx
		test   %dx,%dx
		jle    _07a36c_jump
		andb   $0x0000f7,0x000081(%ecx)
		jmp    _07a375_jump

	_07a36c_jump:
		jge    _07a375_jump
		orb    $0x000008,0x000081(%ecx)

	_07a375_jump:
		cmpb   $0x000000,0x000076(%ecx)
		je     _07a398_jump
		mov    0x00002c(%ecx),%edx
		mov    $0x000001,%ebx
		sub    $0x000002,%edx
		mov    %ecx,%eax
		mov    %edx,0x00002c(%ecx)
		mov    $0x000004,%edx
		call   _05efb0_func
		pop    %ecx
		pop    %ebx
		ret    

	_07a398_jump:
		mov    $0x000001,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		mov    0x000081(%ecx),%bl
		movb   $0x000002,0x000070(%ecx)
		and    $0x0000ef,%bl
		mov    %bl,0x000081(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_07a3bc_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,0x00007f(%eax)
		jne    _07a3eb_jump
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07a3d0_jump
		cmpb   $0x000000,0x00006c(%eax)
		je     _07a3dc_jump

	_07a3d0_jump:
		cmpb   $0x000001,0x00006d(%eax)
		jne    _07a3eb_jump
		cmpb   $0x000000,0x00006c(%eax)
		jne    _07a3eb_jump

	_07a3dc_jump:
		mov    $0x000001,%ebx
		mov    $0x000005,%edx
		call   _05efb0_func

	_07a3eb_jump:
		pop    %edx
		pop    %ebx
		ret    



_07a3f0_func:
		push   %esi
		push   %edi
		push   %ebp
		movswl %bx,%ebx
		movswl %cx,%ecx
		mov    0x000028(%eax),%edi
		mov    0x00002c(%eax),%ebp
		add    %edi,%ebx
		lea    (%ecx,%ebp,1),%edi
		mov    _0cda88_data,%cx
		sar    $0x000004,%edi
		imul   %edi,%ecx
		sar    $0x000004,%ebx
		add    %ebx,%ecx
		xor    %esi,%esi
		mov    %cx,(%edx)
		cmp    0x000058(%eax),%cx
		je     _07a48b_jump
		mov    %cx,0x000058(%eax)
		mov    _0cda86_data,%ecx
		movswl %bx,%eax
		sar    $0x000010,%ecx
		xor    %ebx,%ebx
		dec    %ecx
		cmp    %ebx,%eax
		jl     _07a443_jump
		cmp    %ecx,%eax
		jg     _07a443_jump
		mov    $0x000001,%eax
		jmp    _07a445_jump

	_07a443_jump:
		xor    %eax,%eax

	_07a445_jump:
		test   %eax,%eax
		je     _07a48b_jump
		mov    _0cda88_data,%ecx
		movswl %di,%eax
		sar    $0x000010,%ecx
		xor    %ebx,%ebx
		dec    %ecx
		cmp    %ebx,%eax
		jl     _07a467_jump
		cmp    %ecx,%eax
		jg     _07a467_jump
		mov    $0x000001,%eax
		jmp    _07a469_jump

	_07a467_jump:
		xor    %eax,%eax

	_07a469_jump:
		test   %eax,%eax
		je     _07a48b_jump
		movswl (%edx),%edx
		lea    0x000000(,%edx,4),%eax
		sub    %edx,%eax
		mov    _0cda90_data,%edx
		cmpb   $0x000001,0x000002(%edx,%eax,2)
		sete   %al
		xor    %ah,%ah
		mov    %eax,%esi

	_07a48b_jump:
		mov    %esi,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

_07a494_switch:
		.long   _07a753_case
		.long   _07a7c8_case
		.long   _07a7ac_case
		.long   _07a790_case
		.long   _07a714_case
		.long   _07a74e_case
		.long   _07a76f_case
		.long   _07a7a7_case
		.long   _07a5bd_case
		.long   _07a622_case
		.long   _07a622_case
		.long   _07a69c_case
		.long   _07a69c_case




_07a4c8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    0x000081(%eax),%ah
		and    $0x0000f7,%ah
		mov    0x00006d(%edi),%dl
		mov    %ah,0x000081(%edi)
		test   %dl,%dl
		jne    _07a809_jump
		cmpb   $0x00000e,0x00006c(%edi)
		jne    _07a809_jump
		mov    %esp,%edx
		mov    %edi,%eax
		xor    %ecx,%ecx
		xor    %ebx,%ebx
		mov    0x000069(%edi),%cl
		mov    0x000068(%edi),%bl
		call   _07a3f0_func
		test   %ax,%ax
		je     _07a809_jump
		mov    _0ce3a2_data,%ebx
		sar    $0x000010,%ebx
		mov    %ebx,%edx
		shl    $0x000005,%edx
		add    %ebx,%edx
		mov    _0cc1f0_data,%ebx
		shl    $0x000002,%edx
		add    %ebx,%edx
		mov    _0ce46c_data,%bx
		xor    %eax,%eax
		test   %bx,%bx
		jle    _07a809_jump

	_07a53f_jump:
		cmpw   $0x0000a3,0x000060(%edx)
		jne    _07a7dd_jump
		xor    %ebx,%ebx
		mov    0x00002c(%edx),%ecx
		mov    0x000069(%edx),%bl
		add    %ecx,%ebx
		mov    _0cda86_data,%ecx
		sar    $0x000004,%ebx
		sar    $0x000010,%ecx
		imul   %ebx,%ecx
		xor    %ebx,%ebx
		mov    0x000028(%edx),%esi
		mov    0x000068(%edx),%bl
		add    %esi,%ebx
		sar    $0x000004,%ebx
		add    %ecx,%ebx
		cmp    (%esp),%bx
		jne    _07a7dd_jump
		mov    0x000042(%edi),%si
		movswl %si,%eax
		mov    0x000040(%edi),%cx
		test   %eax,%eax
		jge    _07a58e_jump
		neg    %eax

	_07a58e_jump:
		mov    %eax,%ebx
		movswl %cx,%eax
		test   %eax,%eax
		jge    _07a599_jump
		neg    %eax

	_07a599_jump:
		cmp    %ebx,%eax
		jge    _07a59f_jump
		mov    %ebx,%eax

	_07a59f_jump:
		mov    0x00006c(%edx),%bl
		mov    %eax,0x000004(%esp)
		cmp    $0x00000c,%bl
		ja     _07a7cc_jump
		and    $0x0000ff,%ebx
		jmp    *%cs:_07a494_switch(,%ebx,4)

	_07a5bd_case:
		test   %cx,%cx
		jne    _07a5dd_jump
		test   %si,%si
		jle    _07a5d0_jump
		mov    %eax,%esi
		neg    %esi
		jmp    _07a7cc_jump

	_07a5d0_jump:
		jge    _07a7cc_jump
		mov    %eax,%esi
		jmp    _07a7cc_jump

	_07a5dd_jump:
		test   %si,%si
		jne    _07a60d_jump
		test   %cx,%cx
		jle    _07a5f8_jump
		mov    %eax,%ecx
		neg    %ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		jmp    _07a809_jump

	_07a5f8_jump:
		jge    _07a7cc_jump
		mov    %eax,%ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		jmp    _07a809_jump

	_07a60d_jump:
		neg    %ecx
		neg    %esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a622_case:
		cmpb   $0x000009,0x00006c(%edx)
		jne    _07a62f_jump
		mov    $0x000001,%eax
		jmp    _07a634_jump

	_07a62f_jump:
		mov    $0xffffffff,%eax

	_07a634_jump:
		test   %si,%si
		jne    _07a680_jump
		test   %cx,%cx
		jle    _07a65c_jump
		mov    0x000004(%esp),%ecx
		add    %eax,%ecx
		cmp    $0x000004,%cx
		jle    _07a64f_jump
		mov    $0x000004,%ecx

	_07a64f_jump:
		cmp    $0x000002,%cx
		jge    _07a680_jump
		mov    $0x000002,%ecx
		jmp    _07a680_jump

	_07a65c_jump:
		jge    _07a680_jump
		mov    0x000004(%esp),%edx
		mov    %eax,%ecx
		sub    %edx,%ecx
		movswl %cx,%eax
		cmp    $0xfffffffe,%eax
		jle    _07a673_jump
		mov    $0xfffffffe,%ecx

	_07a673_jump:
		movswl %cx,%eax
		cmp    $0xfffffffc,%eax
		jge    _07a680_jump
		mov    $0xfffffffc,%ecx

	_07a680_jump:
		test   %cx,%cx
		je     _07a7cc_jump
		xor    %esi,%esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a69c_case:
		cmpb   $0x00000b,0x00006c(%edx)
		jne    _07a6a9_jump
		mov    $0x000001,%eax
		jmp    _07a6ae_jump

	_07a6a9_jump:
		mov    $0xffffffff,%eax

	_07a6ae_jump:
		test   %cx,%cx
		jne    _07a6f8_jump
		test   %si,%si
		jle    _07a6d6_jump
		mov    0x000004(%esp),%esi
		add    %eax,%esi
		cmp    $0x000004,%si
		jle    _07a6c9_jump
		mov    $0x000004,%esi

	_07a6c9_jump:
		cmp    $0x000002,%si
		jge    _07a6f8_jump
		mov    $0x000002,%esi
		jmp    _07a6f8_jump

	_07a6d6_jump:
		jge    _07a6f8_jump
		mov    0x000004(%esp),%esi
		sub    %esi,%eax
		mov    %eax,%esi
		cwtl   
		cmp    $0xfffffffe,%eax
		jle    _07a6eb_jump
		mov    $0xfffffffe,%esi

	_07a6eb_jump:
		movswl %si,%eax
		cmp    $0xfffffffc,%eax
		jge    _07a6f8_jump
		mov    $0xfffffffc,%esi

	_07a6f8_jump:
		test   %si,%si
		je     _07a7cc_jump
		xor    %ecx,%ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a714_case:
		test   %cx,%cx
		jne    _07a72e_jump
		mov    %eax,%ecx
		xor    %esi,%esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a72e_jump:
		test   %si,%si
		jne    _07a7cc_jump
		mov    %eax,%esi
		xor    %ecx,%ecx
		neg    %esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a74e_case:
		test   %cx,%cx
		jne    _07a768_jump

	_07a753_case:
		mov    %eax,%ecx
		xor    %esi,%esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a768_jump:
		test   %si,%si
		jne    _07a7cc_jump
		jmp    _07a7c8_case

	_07a76f_case:
		test   %cx,%cx
		jne    _07a78b_jump
		mov    %eax,%ecx
		xor    %esi,%esi
		neg    %ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a78b_jump:
		test   %si,%si
		jne    _07a7cc_jump

	_07a790_case:
		mov    %eax,%esi
		xor    %ecx,%ecx
		neg    %esi
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a7a7_case:
		test   %cx,%cx
		jne    _07a7c3_jump

	_07a7ac_case:
		mov    %eax,%ecx
		xor    %esi,%esi
		neg    %ecx
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a7c3_jump:
		test   %si,%si
		jne    _07a7cc_jump

	_07a7c8_case:
		mov    %eax,%esi
		xor    %ecx,%ecx

	_07a7cc_jump:
		mov    %cx,0x000040(%edi)
		mov    %si,0x000042(%edi)
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07a7dd_jump:
		inc    %eax
		movswl %ax,%edx
		mov    _0ce3a2_data(,%edx,2),%edx
		sar    $0x000010,%edx
		imul   $0x000084,%edx,%edx
		mov    _0cc1f0_data,%ebx
		mov    _0ce46c_data,%cx
		add    %ebx,%edx
		cmp    %cx,%ax
		jl     _07a53f_jump

	_07a809_jump:
		add    $0x000008,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a814_func:
		push   %edx
		mov    0x00006c(%eax),%dl
		cmp    $0x000003,%dl
		ja     _07a832_jump
		mov    0x000081(%eax),%dl
		movb   $0x000004,0x00007e(%eax)
		and    $0x0000f7,%dl
		mov    %dl,0x000081(%eax)
		pop    %edx
		ret    

	_07a832_jump:
		movb   $0x000000,0x00007e(%eax)
		pop    %edx
		ret    

_07a838_switch:
		.long   _07a8bf_case
		.long   _07a8c6_case
		.long   _07a8cd_case
		.long   _07a8d4_case




_07a848_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		cmpb   $0x000005,0x00006d(%eax)
		jne    _07a8db_jump
		cmpb   $0x000035,0x00006c(%ecx)
		jne    _07a8db_jump
		mov    0x000032(%ecx),%edx
		mov    $0x0000eb,%eax
		sar    $0x000010,%edx
		mov    $0x000036,%ebx
		call   _06f35c_func
		mov    $0x000005,%edx
		mov    %ecx,%eax
		call   _01d374_func
		mov    0x000032(%ecx),%eax
		mov    _0ce324_data,%edx
		sar    $0x000010,%eax
		movswl (%edx,%eax,2),%ecx
		mov    %ecx,%eax
		shl    $0x000005,%eax
		add    %ecx,%eax
		mov    _0cc1f0_data,%edx
		shl    $0x000002,%eax
		add    %edx,%eax
		cmpw   $0x0000a3,0x000060(%eax)
		jne    _07a8db_jump
		mov    0x00006c(%eax),%cl
		cmp    $0x000003,%cl
		ja     _07a8db_jump
		xor    %edx,%edx
		mov    %cl,%dl
		jmp    *%cs:_07a838_switch(,%edx,4)

	_07a8bf_case:
		mov    $0x000001,%edx
		jmp    _07a8d6_jump

	_07a8c6_case:
		mov    $0x000002,%edx
		jmp    _07a8d6_jump

	_07a8cd_case:
		mov    $0x000003,%edx
		jmp    _07a8d6_jump

	_07a8d4_case:
		xor    %edx,%edx

	_07a8d6_jump:
		call   _01d364_func

	_07a8db_jump:
		pop    %ecx
		pop    %ebx
		ret    



_07a8e0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		cmpb   $0x000000,0x00006d(%eax)
		jne    _07a90b_jump
		cmpb   $0x00000d,0x00006c(%ecx)
		jne    _07a90b_jump
		mov    $0x00000e,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _01d374_func
		movw   $0x000002,0x000040(%ecx)
		movw   $0x000000,0x000042(%ecx)

	_07a90b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07a910_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000020,%esp
		mov    %eax,%edi
		mov    %edx,%ebx
		mov    $0x000140,%eax
		mov    _0e5d84_data,%esi
		mov    %eax,%edx
		movzbl (%esi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    %al,0x000018(%esp)
		mov    $0x0000c8,%eax
		mov    %eax,%edx
		movzbl 0x000001(%esi),%ebp
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00001c(%esi),%ecx
		mov    %al,0x000014(%esp)
		call   _010010_func
		movw   $0x000000,0x000004(%esi)
		mov    $0x000001,%eax
		and    $0x00ffff,%ebx
		cmp    %ebx,%eax
		jge    _07a968_jump
		mov    %ebx,%eax

	_07a968_jump:
		mov    %ax,0x000006(%esi)
		test   %di,%di
		jl     _07a981_jump
		mov    $0x000001,%eax
		movswl %di,%ebx
		cmp    %ebx,%eax
		jge    _07a97f_jump
		mov    %ebx,%eax

	_07a97f_jump:
		jmp    _07a993_jump

	_07a981_jump:
		movswl %di,%ebx
		mov    $0x000001,%eax
		neg    %ebx
		cmp    %ebx,%eax
		jge    _07a991_jump
		mov    %ebx,%eax

	_07a991_jump:
		neg    %eax

	_07a993_jump:
		mov    %ax,0x000008(%esi)
		xor    %ah,%ah
		mov    %ah,0x000004(%esp)
		mov    0x000014(%esp),%al
		mov    %al,(%esp)
		mul    %ah
		mov    %al,0x00000c(%esp)

	_07a9aa_jump:
		xor    %dl,%dl
		mov    0x00000c(%esp),%al
		mov    0x000018(%esp),%dh
		mov    %al,0x00001c(%esp)

	_07a9b8_jump:
		xor    %ah,%ah
		xor    %bh,%bh
		mov    0x000018(%esp),%al
		mov    %dl,%bl
		imul   %ebx,%eax
		mov    %eax,%ebx
		mov    %ax,0x000004(%ecx)
		xor    %ah,%bh
		mov    %ax,(%ecx)
		mov    0x00001c(%esp),%bl
		mov    %bl,0x000006(%ecx)
		mov    %bl,0x000002(%ecx)
		cmp    $0x0000a0,%ax
		jae    _07a9e5_jump
		mov    0x000014(%esi),%edi
		jmp    _07a9ee_jump

	_07a9e5_jump:
		mov    0x000018(%esi),%edi
		sub    $0x0000a0,%eax

	_07a9ee_jump:
		mov    %edi,0x000008(%ecx)
		mov    %al,0x00002e(%ecx)
		mov    %al,0x00002c(%ecx)
		add    %dh,%al
		dec    %al
		mov    %al,0x000032(%ecx)
		mov    %al,0x000030(%ecx)
		mov    0x000014(%esp),%al
		mov    %bl,0x000033(%ecx)
		add    %bl,%al
		mov    %bl,0x00002d(%ecx)
		dec    %al
		mov    %al,0x000031(%ecx)
		mov    %al,0x00002f(%ecx)
		inc    %dl
		mov    (%esi),%bl
		add    $0x000034,%ecx
		cmp    %bl,%dl
		jbe    _07a9b8_jump
		mov    (%esp),%al
		add    %al,0x00000c(%esp)
		mov    0x000004(%esp),%dh
		inc    %dh
		mov    0x000001(%esi),%bl
		mov    %dh,0x000004(%esp)
		cmp    %bl,%dh
		jbe    _07a9aa_jump
		xor    %bh,%bh
		mov    %bh,0x000008(%esp)
		mov    %bh,0x000010(%esp)

	_07aa46_jump:
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		movzbl 0x000010(%esp),%edi
		add    %eax,%eax
		mov    $0xc0440000,%ecx
		cwtl   
		movb   $0x000000,0x000020(%edi,%esi,1)
		call   _05bd90_func
		cwtl   
		xor    %ebx,%ebx
		call   _07b8f2_func
		call   _07baef_func
		mov    $0x3f600000,%ecx
		xor    %ebx,%ebx
		call   _07baef_func
		call   _07c13c_func
		mov    0x000008(%esp),%ch
		mov    %al,0x00006b(%edi,%esi,1)
		mov    0x000010(%esp),%al
		add    $0x00000a,%ch
		inc    %al
		mov    %ch,0x000008(%esp)
		mov    %al,0x000010(%esp)
		cmp    $0x00004b,%al
		jb     _07aa46_jump
		movw   $0x000000,0x0000b6(%esi)
		movb   $0x00004b,0x0000b8(%esi)
		add    $0x000020,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx

	_07aab6_jump:
		ret    

	_07aab8_case:
		mov    _0e5d84_data,%eax
		test   %eax,%eax
		je     _07aab6_jump
		cmpl   $0x000000,0x00001c(%eax)
		je     _07aacf_jump
		add    $0x00001c,%eax
		call   _07b7dc_func

	_07aacf_jump:
		cmpl   $0x000000,_0e5d84_data
		je     _07aab6_jump
		mov    $_0e5d84_data,%eax
		jmp    _07b7dc_func



_07aae4_func:
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %edx,0x000008(%esp)
		mov    %bx,0x000004(%esp)
		mov    %ecx,(%esp)
		mov    0x000018(%esp),%edx
		xor    %cl,%cl
		test   %edx,%edx
		je     _07ab9e_jump
		cmpl   $0x000000,0x00001c(%esp)
		je     _07ab9e_jump
		mov    $0x0000bc,%eax
		call   _07b7c4_func
		mov    %eax,%edx
		mov    %eax,_0e5d84_data
		test   %eax,%eax
		je     _07ab9e_jump
		mov    %eax,%esi
		xor    %ebx,%ebx
		mov    $0x000002,%eax
		mov    %di,%bx
		cmp    %ebx,%eax
		jge    _07ab37_jump
		mov    %ebx,%eax

	_07ab37_jump:
		xor    %ebx,%ebx
		mov    %al,(%edx)
		mov    0x000008(%esp),%bx
		mov    $0x000001,%eax
		cmp    %ebx,%eax
		jge    _07ab4b_jump
		mov    %ebx,%eax

	_07ab4b_jump:
		mov    %al,0x000001(%edx)
		mov    0x000008(%esp),%eax
		inc    %edi
		inc    %eax
		imul   %eax,%edi
		mov    0x000018(%esp),%eax
		mov    %di,0x000002(%edx)
		xor    %ebx,%ebx
		mov    %eax,0x00000c(%edx)
		mov    0x00001c(%esp),%eax
		mov    0x000002(%edx),%bx
		mov    %eax,0x000010(%edx)
		lea    0x000000(,%ebx,4),%eax
		sub    %ebx,%eax
		shl    $0x000002,%eax
		add    %ebx,%eax
		shl    $0x000002,%eax
		call   _07b7c4_func
		mov    %eax,0x00001c(%edx)
		test   %eax,%eax
		je     _07ab9e_jump
		mov    _0cc528_data,%eax
		mov    %eax,0x000014(%edx)
		add    $0x00c800,%eax
		mov    $0x000001,%cl
		mov    %eax,0x000018(%edx)

	_07ab9e_jump:
		test   %cl,%cl
		je     _07abdb_jump
		mov    $0x0000a0,%ebx
		mov    0x000014(%esi),%edx
		mov    0x00000c(%esi),%eax
		call   _07a010_func
		mov    $0x0000a0,%ebx
		mov    0x00000c(%esi),%eax
		mov    0x000018(%esi),%edx
		add    $0x0000a0,%eax
		call   _07a010_func
		xor    %edx,%edx
		mov    0x000002(%esp),%eax
		mov    (%esp),%dx
		sar    $0x000010,%eax
		call   _07a910_func
		jmp    _07abe0_jump

	_07abdb_jump:
		call   _07aab8_case

	_07abe0_jump:
		mov    %cl,%al
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		ret    $0x000008



_07abec_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		xor    %ah,%ah
		mov    _0e5d84_data,%ebp
		mov    %ah,(%esp)
		jmp    _07ad22_jump

	_07ac05_jump:
		mov    $0x000001,%dl
		mov    0x0000b6(%ebp),%cx
		mov    %dl,0x000008(%esp)
		add    $0x000002,%ecx
		mov    0x000001(%ebp),%dh
		mov    %cx,0x0000b6(%ebp)
		cmp    %dl,%dh
		jbe    _07accf_jump

	_07ac27_jump:
		xor    %ah,%ah
		xor    %dh,%dh
		mov    0x000000(%ebp),%al
		mov    0x000008(%esp),%dl
		inc    %eax
		imul   %edx,%eax
		xor    %ebx,%ebx
		inc    %eax
		mov    %ax,%bx
		imul   $0x000034,%ebx,%ebx
		mov    0x00001c(%ebp),%eax
		add    %eax,%ebx
		mov    $0x000001,%ah
		mov    0x000000(%ebp),%dl
		mov    %ah,0x000004(%esp)
		cmp    %ah,%dl
		jbe    _07acbc_jump

	_07ac51_jump:
		xor    %esi,%esi
		mov    (%ebx),%si
		sub    $0x0000a0,%esi
		mov    %esi,%eax
		imul   %esi,%eax
		xor    %ecx,%ecx
		mov    0x000002(%ebx),%cl
		sub    $0x000064,%ecx
		mov    %ecx,%edx
		imul   %ecx,%edx
		add    %edx,%eax
		sar    $0x000009,%eax
		mov    %esi,%edx
		mov    0x00001d(%eax,%ebp,1),%edi
		shl    $0x000009,%edx
		sar    $0x000018,%edi
		mov    %edx,%eax
		add    $0x000200,%edi
		sar    $0x00001f,%edx
		idiv   %edi
		mov    %ecx,%edx
		lea    0x0000a0(%eax),%esi
		shl    $0x000009,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %edi
		lea    0x000064(%eax),%ecx
		mov    %cl,0x000006(%ebx)
		mov    0x000004(%esp),%cl
		inc    %cl
		mov    %si,0x000004(%ebx)
		mov    %cl,0x000004(%esp)
		mov    0x000000(%ebp),%ch
		add    $0x000034,%ebx
		cmp    %ch,%cl
		jb     _07ac51_jump

	_07acbc_jump:
		mov    0x000008(%esp),%bl
		inc    %bl
		mov    %bl,0x000008(%esp)
		cmp    0x000001(%ebp),%bl
		jb     _07ac27_jump

	_07accf_jump:
		mov    0x0000b8(%ebp),%cl
		test   %cl,%cl
		je     _07aced_jump
		mov    %cl,%ch
		xor    %ebx,%ebx
		dec    %ch
		mov    %ch,%bl
		mov    %ch,0x0000b8(%ebp)
		mov    0x00006b(%ebx,%ebp,1),%bl
		jmp    _07acf0_jump

	_07aced_jump:
		mov    0x00006a(%ebp),%bl

	_07acf0_jump:
		cmpw   $0x000258,0x0000b6(%ebp)
		jbe    _07ad03_jump
		cmpb   $0x000000,0x000020(%ebp)
		jne    _07ad03_jump
		xor    %bl,%bl

	_07ad03_jump:
		mov    $0x00004a,%al

	_07ad05_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    0x00001f(%edx,%ebp,1),%ah
		mov    %ah,0x000020(%edx,%ebp,1)
		dec    %al
		test   %al,%al
		ja     _07ad05_jump
		mov    (%esp),%dh
		inc    %dh
		mov    %bl,0x000020(%ebp)
		mov    %dh,(%esp)

	_07ad22_jump:
		mov    0x000006(%ebp),%eax
		xor    %edx,%edx
		sar    $0x000010,%eax
		mov    (%esp),%dl
		test   %eax,%eax
		jge    _07ad33_jump
		neg    %eax

	_07ad33_jump:
		cmp    %eax,%edx
		jl     _07ac05_jump
		mov    0x000006(%ebp),%eax
		sar    $0x000010,%eax
		test   %eax,%eax
		jge    _07ad47_jump
		neg    %eax

	_07ad47_jump:
		mov    0x000004(%ebp),%dx
		add    %eax,%edx
		mov    0x000006(%ebp),%bx
		mov    %dx,0x000004(%ebp)
		cmp    %bx,%dx
		jbe    _07ad60_jump
		movw   $0x000000,0x000004(%ebp)

	_07ad60_jump:
		mov    0x000004(%ebp),%ax
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ad70_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    _0e5d84_data,%ebx
		xor    %edx,%edx
		xor    %ah,%ah
		mov    %edx,(%esp)
		mov    %ah,0x000004(%esp)
		mov    0x00001c(%ebx),%edx
		mov    0x000001(%ebx),%al
		mov    %edx,%ecx
		test   %al,%al
		jbe    _07ae7d_jump

	_07ad9a_jump:
		xor    %al,%al
		mov    %al,0x000008(%esp)
		cmpb   $0x000000,(%ebx)
		jbe    _07ae5c_jump
		lea    0x000008(%edx),%edi

	_07adac_jump:
		xor    %eax,%eax
		mov    (%esp),%ax
		imul   $0x000034,%eax,%esi
		movzwl 0x000004(%ecx,%esi,1),%ebp
		mov    %ebp,0x00000c(%edx)
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000010(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		inc    %esi
		imul   $0x000034,%esi,%esi
		mov    0x000004(%ecx,%esi,1),%si
		and    $0x00ffff,%esi
		mov    %esi,0x000014(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		inc    %esi
		imul   $0x000034,%esi,%esi
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000018(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		add    $0x000002,%esi
		imul   $0x000034,%esi,%esi
		mov    0x000004(%ecx,%esi,1),%si
		and    $0x00ffff,%esi
		dec    %esi
		mov    %esi,0x00001c(%edx)
		movzbl (%ebx),%esi
		add    %eax,%esi
		add    $0x000002,%esi
		imul   $0x000034,%esi,%esi
		inc    %eax
		imul   $0x000034,%eax,%eax
		movzbl 0x000006(%ecx,%esi,1),%esi
		mov    %esi,0x000020(%edx)
		xor    %esi,%esi
		mov    0x000004(%ecx,%eax,1),%si
		dec    %esi
		mov    %esi,0x000024(%edx)
		mov    0x000006(%ecx,%eax,1),%al
		and    $0x0000ff,%eax
		mov    %eax,0x000028(%edx)
		mov    %edi,%esi
		mov    0x000010(%ebx),%eax
		call   _010045_func
		incl   (%esp)
		mov    0x000008(%esp),%al
		inc    %al
		add    $0x000034,%edx
		mov    %al,0x000008(%esp)
		mov    (%ebx),%ah
		add    $0x000034,%edi
		cmp    %ah,%al
		jb     _07adac_jump

	_07ae5c_jump:
		mov    0x000004(%esp),%ah
		mov    (%esp),%esi
		inc    %ah
		add    $0x000034,%edx
		mov    %ah,0x000004(%esp)
		mov    %ah,%al
		inc    %esi
		mov    0x000001(%ebx),%ah
		mov    %esi,(%esp)
		cmp    %ah,%al
		jb     _07ad9a_jump

	_07ae7d_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ae90_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000018,%esp
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $0x000016,%ebx
		movb   $0x000000,(%eax)
		mov    %esp,%eax
		movb   $0x000000,(%edx)
		xor    %edx,%edx
		call   _07c050_func
		mov    $0x001600,%edx
		mov    $0x00002f,%eax
		mov    %dx,(%esp)
		mov    %esp,%edx
		call   _063f58_func
		mov    (%esp),%ah
		cmp    $0x000001,%ah
		jb     _07aee2_jump
		jbe    _07aeeb_jump
		cmp    $0x000080,%ah
		jb     _07afa5_jump
		jbe    _07aef8_jump
		cmp    $0x0000ff,%ah
		je     _07aeeb_jump
		jmp    _07afa5_jump

	_07aee2_jump:
		test   %ah,%ah
		je     _07aef8_jump
		jmp    _07afa5_jump

	_07aeeb_jump:
		movb   $0x000002,(%esi)
		mov    $0x000001,%al
		movb   $0x000000,(%ecx)
		jmp    _07afb2_jump

	_07aef8_jump:
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _07c050_func
		mov    $0x004680,%ebx
		mov    %esp,%edx
		mov    $0x00002f,%eax
		mov    %bx,(%esp)
		call   _063f58_func
		cmpb   $0x000080,(%esp)
		jne    _07af2a_jump
		xor    %al,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07af2a_jump:
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		mov    $0x001605,%ecx
		call   _07c050_func
		xor    %esi,%esi
		mov    $0x000001,%edx
		mov    $0x00002f,%eax
		mov    %cx,(%esp)
		mov    %si,0x000004(%esp)
		mov    %si,0x000008(%esp)
		mov    %dx,0x000006(%esp)
		mov    %esp,%edx
		mov    %si,0x000002(%esp)
		call   _063f58_func
		cmpw   $0x000000,0x000004(%esp)
		jne    _07af9c_jump
		mov    $0x000016,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		mov    $0x001606,%ecx
		call   _07c050_func
		mov    %esp,%edx
		mov    $0x00002f,%eax
		mov    %cx,(%esp)
		call   _063f58_func
		mov    $0x000081,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07af9c_jump:
		mov    $0x000082,%al
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07afa5_jump:
		mov    (%esp),%al
		mov    %al,(%esi)
		mov    0x000001(%esp),%al
		mov    %al,(%ecx)
		mov    $0x000083,%al

	_07afb2_jump:
		add    $0x000018,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07afc0_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000028,%esp
		mov    $0x00001c,%ebx
		mov    %esp,%eax
		xor    %edx,%edx
		call   _07c050_func
		mov    $0x00000c,%ebx
		lea    0x00001c(%esp),%eax
		xor    %edx,%edx
		lea    0x00001c(%esp),%ecx
		call   _07c050_func
		mov    $0x000500,%edx
		mov    $_0c18f0_data,%eax
		mov    %edx,(%esp)
		mov    %ds,%edx
		mov    $_0c18f0_data,%ebx
		mov    $0x000031,%eax
		mov    %dx,0x00001c(%esp)
		mov    %ebx,0x000014(%esp)
		mov    %esp,%ebx
		mov    %esp,%edx
		call   _081583_func
		mov    _0c18f0_data,%eax
		add    $0x000028,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b1c0_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    %edx,%eax
		and    $0x000003,%eax
		add    %eax,%edx
		je     _07b1e2_jump
		mov    (%ebx),%ecx
		mov    0x000008(%ebx),%esi
		add    %edx,%ecx
		cmp    %esi,%ecx
		jbe    _07b275_jump

	_07b1e2_jump:
		mov    $0x000064,%eax
		call   _07b4e8_func
		mov    %eax,%ecx
		cmp    $_0cccbc_data,%ebx
		jne    _07b200_jump
		mov    _0c0f90_data,%eax
		mov    %eax,(%esp)
		jmp    _07b247_jump

	_07b200_jump:
		cmp    $_0cccc8_data,%ebx
		jne    _07b214_jump
		mov    %esp,%edi
		mov    $_0c0f94_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		jmp    _07b247_jump

	_07b214_jump:
		cmp    $_0ccc98_data,%ebx
		jne    _07b228_jump
		mov    %esp,%edi
		mov    $_0c0f9c_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		jmp    _07b247_jump

	_07b228_jump:
		cmp    $_0ccca8_data,%ebx
		jne    _07b23d_jump
		mov    %esp,%edi
		mov    $_0c0fa4_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsw  %ds:(%esi),%es:(%edi)
		movsb  %ds:(%esi),%es:(%edi)
		jmp    _07b247_jump

	_07b23d_jump:
		mov    %esp,%edi
		mov    $_0c0fac_data,%esi
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)
		movsl  %ds:(%esi),%es:(%edi)

	_07b247_jump:
		push   %edx
		push   %ebx
		lea    0x000008(%esp),%eax
		push   %eax
		push   $_0c0fb8_data
		push   %ecx
		call   _07c07b_func
		add    $0x000014,%esp
		mov    %ecx,%eax
		call   _01f3a4_func
		mov    %ecx,%eax
		call   _07b680_func
		xor    %eax,%eax
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07b275_jump:
		mov    (%ebx),%edi
		mov    %ecx,(%ebx)
		mov    _0bd568_data,%edx
		mov    0x000004(%ebx),%eax
		mov    _0cccbc_data,%ebp
		add    %edi,%eax
		cmp    %ebp,%edx
		jae    _07b2b0_jump
		mov    _0cecd4_data,%dx
		mov    %dx,_0bd56c_data
		mov    _0cecc0_data,%dx
		mov    %ebp,_0bd568_data
		mov    %dx,_0bd56e_data

	_07b2b0_jump:
		mov    _0bd570_data,%edx
		mov    _0cccc8_data,%ebx
		cmp    %ebx,%edx
		jae    _07b2e2_jump
		mov    _0cecd4_data,%dx
		mov    %dx,_0bd574_data
		mov    _0cecc0_data,%dx
		mov    %ebx,_0bd570_data
		mov    %dx,_0bd576_data

	_07b2e2_jump:
		mov    _0bd578_data,%edx
		mov    _0ccc98_data,%ecx
		cmp    %ecx,%edx
		jae    _07b314_jump
		mov    _0cecd4_data,%dx
		mov    %dx,_0bd57c_data
		mov    _0cecc0_data,%dx
		mov    %ecx,_0bd578_data
		mov    %dx,_0bd57e_data

	_07b314_jump:
		mov    _0bd580_data,%edx
		mov    _0ccca8_data,%esi
		cmp    %esi,%edx
		jae    _07b346_jump
		mov    _0cecd4_data,%dx
		mov    %dx,_0bd584_data
		mov    _0cecc0_data,%dx
		mov    %esi,_0bd580_data
		mov    %dx,_0bd586_data

	_07b346_jump:
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07b350_func:
		push   %ebx
		push   %edx
		mov    $_0cccd8_data,%eax
		mov    $0x000168,%ebx
		call   _07b7dc_func
		xor    %edx,%edx
		mov    $_0c8a88_data,%eax
		mov    %edx,_0cccd8_data
		call   _07c050_func
		pop    %edx
		pop    %ebx
		ret    



_07b378_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%edx
		mov    $_0cccd4_data,%eax
		call   _07b3e0_func
		mov    %eax,%ecx
		mov    %eax,_0bd564_data
		mov    _0cccd8_data,%eax
		mov    %eax,_0c8a8c_data
		mov    _0cccdc_data,%eax
		mov    %eax,_0c8a88_data
		xor    %ah,%ah
		mov    %ah,_0c8a90_data
		mov    $0x000001,%eax

	_07b3b1_jump:
		movswl %ax,%edx
		imul   $0x00000c,%edx,%edx
		mov    _0cccd8_data,%ebx
		add    %ecx,%ebx
		mov    %ebx,_0c8a8c_data(%edx)
		xor    %ebx,%ebx
		mov    %ebx,_0c8a88_data(%edx)
		xor    %bl,%bl
		inc    %eax
		mov    %bl,_0c8a90_data(%edx)
		cmp    $0x00001e,%ax
		jl     _07b3b1_jump
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b3e0_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ecx
		mov    %edx,%eax
		and    $0x000003,%eax
		add    %eax,%edx
		mov    %edx,%eax
		call   _0818ba_func
		mov    %eax,0x000004(%ecx)
		test   %eax,%eax
		jne    _07b422_jump
		mov    $0x000064,%eax
		call   _07b4e8_func
		push   %edx
		push   $_0c0ff0_data
		push   %eax
		mov    %eax,%ebx
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    %ebx,%eax
		call   _01f3a4_func
		mov    %ebx,%eax
		call   _07b680_func

	_07b422_jump:
		mov    0x000004(%ecx),%ebx
		mov    %edx,0x000008(%ecx)
		and    $0x000003,%ebx
		mov    %edx,%eax
		mov    %ebx,(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_07b434_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		xor    %ecx,%ecx

	_07b43b_jump:
		movswl %cx,%edx
		imul   $0x00000c,%edx,%edx
		cmpb   $0x000000,_0c8a90_data(%edx)
		jne    _07b4d7_jump
		cmpl   $0x000000,_0c8a88_data(%edx)
		je     _07b4d7_jump

	_07b45b_jump:
		xor    %esi,%esi
		xor    %eax,%eax

	_07b45f_jump:
		movswl %cx,%edx
		imul   $0x00000c,%edx,%edx
		mov    _0c8a8c_data(%edx),%ebx
		mov    _0c8a88_data(%edx),%ebp
		movswl %ax,%edx
		imul   $0x00000c,%edx,%edx
		add    %ebp,%ebx
		cmp    _0c8a8c_data(%edx),%ebx
		jne    _07b48a_jump
		cmpb   $0x000000,_0c8a90_data(%edx)
		je     _07b491_jump

	_07b48a_jump:
		inc    %eax
		cmp    $0x00001e,%ax
		jl     _07b45f_jump

	_07b491_jump:
		cmp    $0x00001e,%ax
		jge    _07b4d3_jump
		movswl %ax,%edx
		imul   $0x00000c,%edx,%edx
		movswl %cx,%ebx
		imul   $0x00000c,%ebx,%ebx
		mov    _0c8a88_data(%edx),%esi
		mov    _0c8a88_data(%ebx),%eax
		add    %esi,%eax
		mov    _0cccdc_data,%ebp
		mov    %eax,_0c8a88_data(%ebx)
		mov    _0cccd8_data,%ebx
		xor    %eax,%eax
		add    %ebp,%ebx
		mov    %eax,_0c8a88_data(%edx)
		mov    %ebx,_0c8a8c_data(%edx)

	_07b4d3_jump:
		test   %esi,%esi
		jne    _07b45b_jump

	_07b4d7_jump:
		inc    %ecx
		cmp    $0x00001e,%cx
		jl     _07b43b_jump
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b4e8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000068,%esp
		mov    %eax,%ebp
		mov    $0x00001e,%edx
		mov    _0cccdc_data,%edi
		and    $0x000003,%eax
		mov    %edx,0x000064(%esp)
		add    %eax,%ebp
		xor    %edx,%edx

	_07b509_jump:
		movswl %dx,%esi
		imul   $0x00000c,%esi,%esi
		cmpb   $0x000000,_0c8a90_data(%esi)
		jne    _07b541_jump
		mov    %edi,%ecx
		mov    %ebp,%ebx
		mov    _0c8a88_data(%esi),%eax
		cmp    %ebx,%eax
		jl     _07b531_jump
		cmp    %ecx,%eax
		jg     _07b531_jump
		mov    $0x000001,%eax
		jmp    _07b533_jump

	_07b531_jump:
		xor    %eax,%eax

	_07b533_jump:
		test   %eax,%eax
		je     _07b541_jump
		mov    %edx,0x000064(%esp)
		mov    _0c8a88_data(%esi),%edi

	_07b541_jump:
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _07b509_jump
		mov    0x000064(%esp),%edi
		cmp    $0x00001e,%di
		jge    _07b634_jump
		xor    %edx,%edx

	_07b558_jump:
		movswl %di,%esi
		imul   $0x00000c,%esi,%esi
		mov    _0c8a8c_data(%esi),%eax
		mov    _0c8a88_data(%esi),%esi
		add    %eax,%esi
		movswl %dx,%eax
		imul   $0x00000c,%eax,%eax
		cmp    _0c8a8c_data(%eax),%esi
		je     _07b581_jump
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _07b558_jump

	_07b581_jump:
		movswl %dx,%esi
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		cmpb   $0x000000,_0c8a90_data(,%eax,4)
		je     _07b5bb_jump
		mov    _0cccdc_data,%ecx
		xor    %edx,%edx

	_07b59f_jump:
		movswl %dx,%esi
		imul   $0x00000c,%esi,%esi
		mov    _0cccd8_data,%eax
		add    %ecx,%eax
		cmp    _0c8a8c_data(%esi),%eax
		je     _07b5bb_jump
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _07b59f_jump

	_07b5bb_jump:
		movswl %di,%esi
		lea    0x000000(,%esi,4),%eax
		sub    %esi,%eax
		movswl %dx,%edi
		lea    0x000000(,%eax,4),%esi
		lea    0x000000(,%edi,4),%eax
		mov    _0c8a8c_data(%esi),%ebx
		sub    %edi,%eax
		add    %ebp,%ebx
		mov    %ebx,_0c8a8c_data(,%eax,4)
		mov    _0c8a88_data(%esi),%ebx
		mov    _0c8a88_data(,%eax,4),%ecx
		sub    %ebp,%ebx
		mov    _0cccd4_data,%edi
		add    %ebx,%ecx
		add    %ebp,%edi
		mov    %ecx,_0c8a88_data(,%eax,4)
		mov    $0x000001,%bh
		mov    %ebp,_0c8a88_data(%esi)
		mov    %edi,_0cccd4_data
		mov    %bh,_0c8a90_data(%esi)
		mov    _0bd588_data,%eax
		mov    _0c8a8c_data(%esi),%esi
		cmp    %edi,%eax
		jae    _07b671_jump
		mov    %edi,_0bd588_data
		jmp    _07b671_jump

	_07b634_jump:
		mov    %ebp,%eax
		call   _0818ba_func
		mov    %eax,%esi
		mov    _0bd564_data,%eax
		mov    _0bd588_data,%edx
		add    %ebp,%eax
		cmp    %edx,%eax
		jbe    _07b653_jump
		mov    %eax,_0bd588_data

	_07b653_jump:
		test   %esi,%esi
		jne    _07b671_jump
		push   %ebp
		push   $_0c1018_data
		lea    0x000008(%esp),%eax
		push   %eax
		call   _07c07b_func
		add    $0x00000c,%esp
		mov    %esp,%eax
		call   _01f3a4_func

	_07b671_jump:
		mov    %esi,%eax
		add    $0x000068,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b680_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,(%esp)
		mov    (%esp),%esi
		xor    %cl,%cl
		xor    %edx,%edx

	_07b692_jump:
		movswl %dx,%ebx
		imul   $0x00000c,%ebx,%ebx
		cmp    _0c8a8c_data(%ebx),%esi
		jne    _07b6ce_jump
		cmpb   $0x000000,_0c8a90_data(%ebx)
		je     _07b6d5_jump
		mov    $0x000001,%cl
		mov    _0cccd4_data,%edi
		mov    _0c8a88_data(%ebx),%eax
		xor    %dl,%dl
		sub    %eax,%edi
		mov    %dl,_0c8a90_data(%ebx)
		mov    %edi,_0cccd4_data
		call   _07b434_func
		jmp    _07b6d5_jump

	_07b6ce_jump:
		inc    %edx
		cmp    $0x00001e,%dx
		jl     _07b692_jump

	_07b6d5_jump:
		test   %cl,%cl
		jne    _07b6e0_jump
		mov    %esp,%eax
		call   _07b7dc_func

	_07b6e0_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b6ec_func:
		push   %edx
		mov    %eax,%edx
		cmp    $_0cccbc_data,%eax
		lea    0x000004(%edx),%eax
		call   _07b7dc_func
		movl   $0x000000,0x000004(%edx)
		movl   $0x000000,0x000008(%edx)
		movl   $0x000000,(%edx)
		pop    %edx
		ret    



_07b714_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0ceee0_data,%bl
		xor    %eax,%eax
		mov    _0ceedf_data,%al
		jmp    _07b733_jump

	_07b726_jump:
		movswl %ax,%edx
		xor    %ecx,%ecx
		inc    %eax
		mov    %ecx,_0cc208_data(,%edx,4)

	_07b733_jump:
		xor    %edx,%edx
		mov    %bl,%dl
		cmp    %dx,%ax
		jl     _07b726_jump
		mov    _0ceedf_data,%bl
		mov    _092206_data,%ax
		mov    %bl,_0ceee0_data
		mov    %ax,_092204_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b758_func:
		push   %ebx
		push   %edx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		add    %ebx,%edx
		and    $0x000003,%edx
		lea    (%ebx,%edx,1),%eax
		mov    %eax,_0e5d94_data
		pop    %edx
		pop    %ebx
		ret    



_07b770_func:
		push   %ebx
		push   %edx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		add    %ebx,%edx
		and    $0x000003,%edx
		lea    (%ebx,%edx,1),%eax
		mov    %eax,_0e5d90_data
		pop    %edx
		pop    %ebx
		ret    



_07b788_func:
		push   %edx
		mov    _0e5d94_data,%edx
		mov    %edx,(%eax)
		pop    %edx
		ret    



_07b794_func:
		push   %edx
		mov    _0e5d90_data,%edx
		mov    %edx,(%eax)
		pop    %edx
		ret    



_07b7a0_func:
		push   %edx
		mov    %eax,%edx
		call   _07b714_func
		mov    0x000004(%edx),%eax
		and    $0x000003,%eax
		mov    %eax,(%edx)
		pop    %edx
		ret    



_07b7b4_func:
		push   %edx
		mov    %eax,%edx
		mov    0x000004(%eax),%eax
		and    $0x000003,%eax
		mov    %eax,(%edx)
		pop    %edx
		ret    



_07b7c4_func:
		jmp    _0818ba_func



_07b7cc_func:
		push   %ebx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _08199d_func
		pop    %ebx
		ret    



_07b7dc_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    (%eax),%ebx
		test   %ebx,%ebx
		je     _07b7f3_jump
		mov    %ebx,%eax
		call   _0819b5_func
		movl   $0x000000,(%edx)

	_07b7f3_jump:
		pop    %edx
		pop    %ebx
		ret    



_07b7f6_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%edx

	_07b7fd_jump:
		mov    (%edx),%al
		test   %al,%al
		je     _07b815_jump
		sub    $0x000061,%al
		xor    %ebx,%ebx
		mov    %al,%bl
		cmp    $0x000019,%ebx
		jg     _07b812_jump
		add    $0x000041,%al
		mov    %al,(%edx)

	_07b812_jump:
		inc    %edx
		jmp    _07b7fd_jump

	_07b815_jump:
		mov    %ecx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07b850_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		cmp    %edx,%eax
		je     _07b8c4_jump

	_07b858_jump:
		mov    (%ebx),%eax
		mov    (%edx),%ecx
		cmp    %eax,%ecx
		jne    _07b8c9_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _07b8c4_jump
		mov    0x000004(%ebx),%eax
		mov    0x000004(%edx),%ecx
		cmp    %eax,%ecx
		jne    _07b8c9_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _07b8c4_jump
		mov    0x000008(%ebx),%eax
		mov    0x000008(%edx),%ecx
		cmp    %eax,%ecx
		jne    _07b8c9_jump
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		jne    _07b8c4_jump
		mov    0x00000c(%ebx),%eax
		mov    0x00000c(%edx),%ecx
		cmp    %eax,%ecx
		jne    _07b8c9_jump
		add    $0x000010,%ebx
		add    $0x000010,%edx
		not    %ecx
		add    $0xfefefeff,%eax
		and    %ecx,%eax
		and    $0x80808080,%eax
		je     _07b858_jump

	_07b8c4_jump:
		sub    %eax,%eax
		pop    %ecx
		pop    %ebx
		ret    

	_07b8c9_jump:
		cmp    %cl,%al
		jne    _07b8ea_jump
		cmp    $0x000000,%al
		je     _07b8c4_jump
		cmp    %ch,%ah
		jne    _07b8ea_jump
		cmp    $0x000000,%ah
		je     _07b8c4_jump
		shr    $0x000010,%eax
		shr    $0x000010,%ecx
		cmp    %cl,%al
		jne    _07b8ea_jump
		cmp    $0x000000,%al
		je     _07b8c4_jump
		cmp    %ch,%ah

	_07b8ea_jump:
		sbb    %eax,%eax
		or     $0x000001,%al
		pop    %ecx
		pop    %ebx
		ret    



_07b8f2_func:
		or     %eax,%eax
		jns    _07b8ff_func
		neg    %eax
		mov    $0x000bff,%edx
		jmp    _07b904_jump



_07b8ff_func:
		mov    $0x0003ff,%edx

	_07b904_jump:
		or     %eax,%eax
		je     _07b92f_jump
		push   %ecx
		bsr    %eax,%ecx
		mov    %cl,%ch
		mov    $0x00001f,%cl
		sub    %ch,%cl
		shl    %cl,%eax
		add    %eax,%eax
		mov    %ch,%cl
		movzbl %ch,%ecx
		add    %edx,%ecx
		mov    %eax,%edx
		and    $0xfffff000,%edx
		or     %ecx,%edx
		ror    $0x00000c,%edx
		shl    $0x000014,%eax
		pop    %ecx
		ret    

	_07b92f_jump:
		sub    %edx,%edx
		ret    



_07b932_func:
		xor    $0x80000000,%ecx



_07b938_func:
		or     %ebx,%ebx
		jne    _07b942_jump
		add    %ecx,%ecx
		je     _07b94e_jump
		rcr    %ecx

	_07b942_jump:
		or     %eax,%eax
		jne    _07b951_jump
		add    %edx,%edx
		jne    _07b94f_jump
		mov    %ecx,%edx
		mov    %ebx,%eax

	_07b94e_jump:
		ret    

	_07b94f_jump:
		rcr    %edx

	_07b951_jump:
		cmpb   $0x000000,_0bd5b9_data
		je     _07b97b_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		faddl  (%esp)

	_07b964_jump:
		fstpl  0x000008(%esp)
		add    $0x000008,%esp
		fwait
		pop    %eax
		pop    %edx
		cmp    $0x80000000,%edx
		jne    _07b97a_jump
		sub    %edx,%edx
		mov    %edx,%eax

	_07b97a_jump:
		ret    

	_07b97b_jump:
		push   %ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		mov    %ecx,%ebp
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %di,%cx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		je     _07b9bc_jump
		or     $0x100000,%edx

	_07b9bc_jump:
		or     %cx,%cx
		je     _07b9c7_jump
		or     $0x100000,%esi

	_07b9c7_jump:
		add    %eax,%eax
		adc    %edx,%edx
		add    %ebx,%ebx
		adc    %esi,%esi
		sub    %di,%cx
		je     _07ba03_jump
		jae    _07b9de_jump
		mov    %edi,%ebp
		neg    %cx
		xchg   %eax,%ebx
		xchg   %esi,%edx

	_07b9de_jump:
		cmp    $0x000036,%cx
		jbe    _07ba03_jump
		mov    %esi,%edx
		mov    %ebx,%eax
		add    %ebp,%ebp
		rcr    %edx
		rcr    %eax
		and    $0x800fffff,%edx
		ror    $0x00000d,%ebp
		and    $0x7ff00000,%ebp
		or     %ebp,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_07ba03_jump:
		or     %ecx,%ecx
		jns    _07ba14_jump
		neg    %esi
		neg    %ebx
		sbb    $0x000000,%esi
		xor    $0x80000000,%ebp

	_07ba14_jump:
		sub    %edi,%edi
		cmp    $0x000000,%cl
		je     _07ba3e_jump
		push   %ebx
		sub    %ebx,%ebx
		cmp    $0x000020,%cl
		jb     _07ba30_jump
		or     %eax,%eax
		setne  %bl
		mov    %ebx,%edi
		sub    %ebx,%ebx
		mov    %edx,%eax
		sub    %edx,%edx

	_07ba30_jump:
		shrd   %cl,%eax,%ebx
		or     %ebx,%edi
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		pop    %ebx

	_07ba3e_jump:
		add    %ebx,%eax
		adc    %esi,%edx
		jns    _07ba67_jump
		cmp    $0x000035,%cl
		jb     _07ba5a_jump
		test   $0x7fffffff,%edi
		setne  %bl
		shr    %ebx
		adc    $0x000000,%eax
		adc    $0x000000,%edx

	_07ba5a_jump:
		neg    %edx
		neg    %eax
		sbb    $0x000000,%edx
		xor    $0x80000000,%ebp

	_07ba67_jump:
		mov    %eax,%ebx
		or     %edx,%ebx
		je     _07bad7_jump
		or     %bp,%bp
		je     _07badb_jump

	_07ba72_jump:
		test   $0x7fe00000,%edx
		jne    _07ba84_jump
		dec    %bp
		je     _07badb_jump
		add    %eax,%eax
		adc    %edx,%edx
		jmp    _07ba72_jump

	_07ba84_jump:
		test   $0x400000,%edx
		je     _07ba9c_jump
		shr    %edx
		rcr    %eax
		adc    $0x000000,%edi
		inc    %bp
		cmp    $0x0007ff,%bp
		je     _07bae5_jump

	_07ba9c_jump:
		shr    %edx
		rcr    %eax
		jae    _07bac6_jump
		or     %edi,%edi
		setne  %bl
		or     %eax,%ebx
		shr    %ebx
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		test   $0x200000,%edx
		je     _07bac6_jump
		shr    %edx
		rcr    %eax
		inc    %bp
		cmp    $0x0007ff,%bp
		je     _07bae5_jump

	_07bac6_jump:
		and    $0x0fffff,%edx
		mov    %ebp,%ecx
		shl    $0x000015,%ebp
		add    %ecx,%ecx
		rcr    %ebp
		or     %ebp,%edx

	_07bad7_jump:
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_07badb_jump:
		add    %ebp,%ebp
		rcr    %edx
		rcr    %eax
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_07bae5_jump:
		mov    %ebp,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _081a49_jump



_07baef_func:
		or     %eax,%eax
		jne    _07bafa_jump
		add    %edx,%edx
		jne    _07baf8_jump
		ret    

	_07baf8_jump:
		rcr    %edx

	_07bafa_jump:
		or     %ebx,%ebx
		jne    _07bb09_jump
		add    %ecx,%ecx
		jne    _07bb07_jump
		sub    %eax,%eax
		sub    %edx,%edx
		ret    

	_07bb07_jump:
		rcr    %ecx

	_07bb09_jump:
		cmpb   $0x000000,_0bd5b9_data
		je     _07bb21_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		fmull  (%esp)
		jmp    _07b964_jump

	_07bb21_jump:
		push   %ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %di,%cx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		jne    _07bb6a_jump
		inc    %di

	_07bb5c_jump:
		dec    %di
		add    %eax,%eax
		adc    %edx,%edx
		test   $0x100000,%edx
		je     _07bb5c_jump

	_07bb6a_jump:
		or     $0x100000,%edx
		or     %cx,%cx
		jne    _07bb85_jump
		inc    %cx

	_07bb77_jump:
		dec    %cx
		add    %ebx,%ebx
		adc    %esi,%esi
		test   $0x100000,%esi
		je     _07bb77_jump

	_07bb85_jump:
		or     $0x100000,%esi
		add    %di,%cx
		sub    $0x0003ff,%cx
		js     _07bba6_jump
		cmp    $0x0007ff,%cx
		jb     _07bba6_jump
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _081a49_jump

	_07bba6_jump:
		cmp    $0x00ffcb,%cx
		jge    _07bbb4_jump
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _081a38_jump

	_07bbb4_jump:
		push   %ecx
		mov    $0x00000b,%cl
		shld   %cl,%eax,%edx
		shld   %cl,%ebp,%eax
		and    $0xfffff800,%eax
		shld   %cl,%ebx,%esi
		shld   %cl,%ebp,%ebx
		and    $0xfffff800,%ebx
		sub    %ebp,%ebp
		push   %esi
		push   %edx
		push   %eax
		mul    %ebx
		xchg   %eax,%esi
		mov    %edx,%ecx
		pop    %edx
		mul    %edx
		mov    %edx,%edi
		add    %eax,%ecx
		adc    %ebp,%edi
		adc    %ebp,%ebp
		pop    %eax
		xchg   %eax,%ebx
		mul    %ebx
		add    %eax,%ecx
		adc    %edx,%edi
		adc    $0x000000,%ebp
		mov    %ebx,%eax
		pop    %edx
		mul    %edx
		add    %edi,%eax
		adc    %ebp,%edx
		sub    %ebx,%ebx
		mov    $0x00000a,%cl
		shrd   %cl,%eax,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		pop    %ecx

	_07bc05_jump:
		test   $0x200000,%edx
		je     _07bc1e_jump
		shr    %edx
		rcr    %eax
		rcr    %ebx
		inc    %cx
		cmp    $0x0007ff,%cx
		je     _07bc82_jump
		jmp    _07bc05_jump

	_07bc1e_jump:
		add    %ebx,%ebx
		jae    _07bc4c_jump
		jne    _07bc31_jump
		or     %esi,%esi
		setne  %bl
		shr    %ebx
		jb     _07bc31_jump
		mov    %eax,%esi
		shr    %esi

	_07bc31_jump:
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		test   $0x200000,%edx
		je     _07bc4c_jump
		shr    %edx
		rcr    %eax
		inc    %cx
		cmp    $0x0007ff,%cx
		je     _07bc82_jump

	_07bc4c_jump:
		or     %cx,%cx
		jg     _07bc67_jump
		jne    _07bc57_jump
		mov    $0x000001,%cl
		jmp    _07bc5c_jump

	_07bc57_jump:
		neg    %cx
		dec    %cx

	_07bc5c_jump:
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %cx,%cx

	_07bc67_jump:
		and    $0x0fffff,%edx
		mov    %ecx,%esi
		ror    $0x00000b,%ecx
		add    %esi,%esi
		rcr    %ecx
		and    $0xfff00000,%ecx
		or     %ecx,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    

	_07bc82_jump:
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _081a49_jump



_07bc8c_func:
		push   %ebx
		push   %edx
		sub    $0x000004,%esp
		lea    0x000014(%esp),%eax
		mov    %esp,%ebx
		mov    0x000010(%esp),%edx
		mov    %eax,(%esp)
		mov    $_0bd5d6_data,%eax
		call   _081aa2_func
		add    $0x000004,%esp
		pop    %edx
		pop    %ebx
		ret    

	_07bcae_jump:
		ret    



_07bcaf_func:
		push   %edx
		mov    %eax,%edx
		call   *_0bd58c_data
		call   *_0bd590_data
		mov    %edx,%eax
		call   _07bcc7_func
		pop    %edx
		ret    



_07bcc7_func:
		push   %edx
		mov    %eax,%edx
		call   *_0bd590_data
		call   *_0bd594_data
		mov    %edx,%eax
		jmp    _07c007_jump



_07bcde_func:
		jmp    _081b53_jump

	_07bce3_jump:
		push   %edx
		mov    %eax,%edx
		mov    $0x000041,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    _07bd00_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _081b94_func
		pop    %edx
		ret    

	_07bd00_jump:
		xor    %eax,%eax
		pop    %edx
		ret    



_07bd04_func:
		push   %ebx
		push   %edx
		sub    $0x000004,%esp
		mov    $0x000020,%edx
		mov    _0e5e18_data,%ebx
		mov    %edx,_0e5e18_data
		mov    %ebx,%edx
		shl    $0x000002,%edx

	_07bd1f_jump:
		test   %edx,%edx
		je     _07bd35_jump
		mov    _0e5d94_data(%edx),%eax
		sub    $0x000004,%edx
		mov    %eax,(%esp)
		dec    %ebx
		call   *(%esp)
		jmp    _07bd1f_jump

	_07bd35_jump:
		add    $0x000004,%esp
		pop    %edx
		pop    %ebx
		ret    



_07bd3b_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $_07bd04_func,%edx
		mov    _0e5e18_data,%ecx
		mov    %edx,_0bd58c_data
		cmp    $0x000020,%ecx
		jge    _07bd6e_jump
		mov    %ecx,%eax
		xor    %ecx,%eax
		lea    0x000001(%ecx),%edx
		mov    %ebx,_0e5d98_data(,%ecx,4)
		mov    %edx,_0e5e18_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_07bd6e_jump:
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07bd78_func:
		jmp    _07bdf0_jump



_07bdec_func:
		arpl   %bp,0x00006e(%edi)
	_07bdf0_jump:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %bh,%bl
		and    $0xfffffffc,%esp
		mov    %esp,%ebx
		mov    %ebx,_0bd7fc_data
		mov    %ebx,_0bd7e8_data
		mov    $0x000024,%ax
		mov    %ax,_0bd7f4_data
		mov    $0x50484152,%ebx
		sub    %eax,%eax
		mov    $0x000030,%ah
		int    $0x000021
		mov    %al,_0bd81f_data
		mov    %ah,_0bd820_data
		mov    %eax,%ecx
		sub    %esi,%esi
		mov    $0x000081,%edi
		shr    $0x000010,%eax
		cmp    $0x004458,%ax
		jne    _07be72_jump
		sub    $0x000030,%bl
		mov    %bl,%al
		mov    $0x000000,%ah
		push   %eax
		data16 mov _0bd7f4_data,%es
		mov    %es:0x00005c,%ebx
		add    $0x000fff,%ebx
		and    $0xfffff000,%ebx
		mov    %ebx,_0bd7e8_data
		shr    $0x00000c,%ebx
		mov    %ds,%ax
		mov    %eax,%es
		mov    $0x00004a,%ah
		int    $0x000021
		pop    %eax
		mov    %ds,%bx
		mov    $0x00002c,%cx
		jmp    _07beaa_jump

	_07be72_jump:
		cmp    $0x004243,%ax
		jne    _07beac_jump
		mov    %edx,_0bd598_data
		mov    %edx,%esi
		mov    0x00001c(%esi),%edx
		mov    %esp,%ebx
		sub    %edx,%ebx
		mov    $0x00004a,%ah
		int    $0x000021
		mov    %ds,%bx
		data16 mov %ds,_0bd7f4_data
		mov    0x000010(%esi),%eax
		add    %eax,%edi
		sub    %esi,%esi
		mov    0x00002c(%eax),%si
		shl    $0x000004,%esi
		mov    %ds,%cx
		mov    $0x000009,%al
		mov    $0x000000,%ah

	_07beaa_jump:
		jmp    _07bf05_jump

	_07beac_jump:
		mov    $0x000078,%dx
		mov    $0x00ff00,%ax
		int    $0x000021
		cmp    $0x000000,%al
		je     _07beee_jump
		mov    %gs,%ax
		cmp    $0x000000,%ax
		je     _07bec9_jump
		mov    %ax,_0bd59c_data

	_07bec9_jump:
		mov    $0x000006,%ax
		mov    %ds,%bx
		int    $0x000031
		mov    $0x000001,%al
		mov    $0x000000,%ah
		or     %cx,%dx
		je     _07bedd_jump
		mov    $0x000001,%ah

	_07bedd_jump:
		data16 mov %es,_0bd7f4_data
		mov    %es:0x00002c,%cx
		jmp    _07bf05_jump

	_07beee_jump:
		mov    %ds,%dx
		mov    $0x000024,%cx
		mov    %ecx,%ds
		mov    $0x00002c,%cx
		mov    %edx,%ds
		mov    $0x000017,%bx
		mov    $0x000000,%al
		mov    $0x000000,%ah

	_07bf05_jump:
		mov    %al,_0bd816_data
		mov    %ah,_0bd817_data
		mov    %ebx,%es
		data16 mov %ds,%es:_07c04d_jump
		mov    %esi,_0bd819_data
		mov    %cx,_0bd81d_data
		push   %esi
		data16 mov _0bd7f4_data,%es
		ds mov $_0e5e68_data,%edx
		add    $0x00000f,%edx
		and    $0x0000f0,%dl
		sub    %ecx,%ecx
		mov    %es:-0x000001(%edi),%cl
		cld    
		mov    $0x000020,%al
		repz scas %es:(%edi),%al
		lea    -0x000001(%edi),%esi
		mov    %edx,%edi
		mov    %es,%bx
		mov    %ds,%dx
		mov    %ebx,%ds
		mov    %edx,%es
		je     _07bf5a_jump
		inc    %ecx
		rep movsb %ds:(%esi),%es:(%edi)

	_07bf5a_jump:
		sub    %al,%al
		stos   %al,%es:(%edi)
		stos   %al,%es:(%edi)
		pop    %esi
		dec    %edi
		push   %edi
		push   %edx
		data16 mov %es:_0bd81d_data,%ds
		sub    %ebp,%ebp

	_07bf6c_jump:
		mov    (%esi),%eax
		or     $0x20202020,%eax
		cmp    $0x37386f6e,%eax
		jne    _07bf81_jump
		cmpb   $0x00003d,0x000004(%esi)
		jne    _07bf81_jump
		inc    %ebp

	_07bf81_jump:
		cmpb   $0x000000,(%esi)
		lods   %ds:(%esi),%al
		jne    _07bf81_jump
		cmpb   $0x000000,(%esi)
		jne    _07bf6c_jump
		lods   %ds:(%esi),%al
		inc    %esi
		inc    %esi

	_07bf8f_jump:
		cmpb   $0x000000,(%esi)
		movsb  %ds:(%esi),%es:(%edi)
		jne    _07bf8f_jump
		pop    %ds
		pop    %esi
		mov    %esp,%ebx
		mov    %bp,_0bd814_data
		mov    %edi,_0bd7f8_data
		mov    %ebx,_0bd7e4_data
		ds mov $_0e5e68_data,%ecx
		ds mov $_0c18f0_data,%edi
		sub    %edi,%ecx
		cmpb   $0x000001,_0bd816_data
		jne    _07bfd0_jump
		cmp    $0x001000,%ecx
		jbe    _07bfd0_jump
		mov    $0x001000,%ecx

	_07bfd0_jump:
		mov    %cl,%dl
		shr    $0x000002,%ecx
		sub    %eax,%eax
		rep stos %eax,%es:(%edi)
		mov    %dl,%cl
		and    $0x000003,%cl
		rep stos %al,%es:(%edi)
		ds mov $_0e5e68_data,%eax
		add    $0x00000f,%eax
		and    $0x0000f0,%al
		mov    %eax,_0bd7ec_data
		mov    %esi,_0bd7f0_data
		mov    $0x0000ff,%eax
		call   _081c54_func
		sub    %ebp,%ebp
		call   _081c05_func

	_07c007_jump:
		jmp    _07c02c_jump



_07c009_func:
		push   %edx
		push   %eax
		mov    $_07bdec_func,%edx
		mov    $0x003d01,%ax
		int    $0x000021
		mov    %ax,%bx
		pop    %edx
		mov    %edx,%esi
		cld    

	_07c01d_jump:
		lods   %ds:(%esi),%al
		cmp    $0x000000,%al
		jne    _07c01d_jump
		mov    %esi,%ecx
		sub    %edx,%ecx
		dec    %ecx
		mov    $0x000040,%ah
		int    $0x000021
		pop    %eax

	_07c02c_jump:
		push   %eax
		mov    $0x000000,%eax
		mov    $0x0000ff,%edx
		call   _081c9f_func
		pop    %eax
		mov    $0x00004c,%ah
		int    $0x000021
		lea    0x000000(%eax),%eax



_07c044_func:
		data16 mov %cs:_07c04d_jump,%ds
		ret    

	_07c04d_jump:
		add    %al,(%eax)


_07c050_func:	/* WARNING: instructions around this label are incorrect, generated just to workaround corrupted library */
		add    %dl,0x000051(%eax)
		mov    %dl,%dh
		shl    $0x000008,%edx
		mov    %dh,%dl
		shl    $0x000008,%edx
		mov    %dh,%dl
		mov    %ebx,%ecx
		call   _0814e0_func
		pop    %ecx
		pop    %eax
		ret    



_07c068_func:
		push   %ebx
		push   %ecx
		mov    %dl,%bl
		mov    (%eax),%edx
		lea    0x000001(%edx),%ecx
		mov    %ecx,(%eax)
		mov    %bl,(%edx)
		incl   0x000010(%eax)
		pop    %ecx
		pop    %ebx
		ret    



_07c07b_func:
		push   %ebx
		push   %ecx
		push   %edx
		sub    $0x000004,%esp
		lea    0x00001c(%esp),%eax
		mov    $_07c068_func,%ecx
		mov    %esp,%ebx
		mov    0x000018(%esp),%edx
		mov    %eax,(%esp)
		mov    0x000014(%esp),%eax
		call   _081ebe_func
		mov    0x000014(%esp),%edx
		movb   $0x000000,(%edx,%eax,1)
		add    $0x000004,%esp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07c0ab_func:
		push   %edx
		xor    %edx,%edx
		mov    _0bd808_data,%eax
		mov    %edx,_0bd808_data
		test   %eax,%eax
		jne    _07c0c6_jump
		mov    $0x000008,%ah
		int    $0x000021
		and    $0x0000ff,%eax

	_07c0c6_jump:
		pop    %edx
		ret    



_07c0da_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		test   %edx,%edx
		jge    _07c0f9_jump
		lea    -0x000008(%ebp),%edx
		mov    $0x002043,%eax
		call   _082a7a_func
		jmp    _07c124_jump

	_07c0f9_jump:
		cmpb   $0x000000,_0bd5b9_data
		je     _07c118_jump
		mov    -0x000008(%ebp),%eax
		push   %ebp
		push   %edx
		push   %eax
		mov    %esp,%ebp
		fldl   0x000000(%ebp)
		fsqrt  
		fstpl  0x000000(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		jmp    _07c124_jump

	_07c118_jump:
		test   %edx,%edx
		je     _07c12a_jump
		mov    -0x000008(%ebp),%eax
		call   _082b6a_func

	_07c124_jump:
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)

	_07c12a_jump:
		mov    -0x000008(%ebp),%eax
		mov    -0x000004(%ebp),%edx
		mov    %ebp,%esp
		pop    %ebp
		ret    



_07c13c_func:
		mov    $0x00001f,%al
		jmp    _07c142_jump



_07c140_func:
		mov    $0x000020,%al

	_07c142_jump:
		add    %edx,%edx
		rcr    %ah
		shr    %ah
		or     %al,%ah
		shr    %edx
		push   %ecx
		mov    %edx,%ecx
		sar    $0x000014,%ecx
		and    $0x0007ff,%cx
		sub    $0x0003fe,%cx
		jl     _07c1b1_jump
		cmp    $0x000020,%cx
		jg     _07c1aa_jump
		and    $0x00003f,%al
		cmp    %al,%cl
		jg     _07c1aa_jump
		mov    %ah,%ch
		and    $0x0fffff,%edx
		and    $0xfff00000,%eax
		or     %eax,%edx
		rol    $0x00000c,%edx
		stc    
		rcr    %edx
		rcr    %ch
		cmp    $0x000020,%cl
		jne    _07c18c_jump
		mov    %edx,%eax
		add    %ch,%ch
		jmp    _07c197_jump

	_07c18c_jump:
		sub    %eax,%eax
		shld   %cl,%edx,%eax
		shl    %cl,%edx
		add    %ch,%ch
		add    %edx,%edx

	_07c197_jump:
		mov    $0x0000ff,%cl
		rcr    %cl
		and    %cl,%ch
		add    %ch,%ch
		adc    $0x000000,%eax
		add    %ch,%ch
		jae    _07c1a8_jump
		neg    %eax

	_07c1a8_jump:
		pop    %ecx
		ret    

	_07c1aa_jump:
		mov    $0x80000000,%eax
		pop    %ecx
		ret    

	_07c1b1_jump:
		sub    %eax,%eax
		pop    %ecx
		ret    



_07c1b5_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000038,%esp
		mov    %eax,-0x000044(%ebp)
		mov    %edx,-0x000040(%ebp)
		mov    %ebx,%esi
		lea    -0x00002c(%ebp),%ebx
		call   _082d9c_func
		cmpl   $0x000020,-0x00002c(%ebp)
		jl     _07c1eb_jump
		mov    _0c1474_data(,%esi,4),%eax
		lea    -0x000044(%ebp),%edx
		or     $0x000024,%ah
		call   _082a7a_func
		jmp    _07c3e0_jump

	_07c1eb_jump:
		lea    -0x000034(%ebp),%eax
		push   %eax
		lea    -0x000028(%ebp),%eax
		push   %eax
		push   $0x3fe921fb
		push   $0x54442d18
		mov    -0x000040(%ebp),%ebx
		push   %ebx
		mov    -0x000044(%ebp),%ecx
		push   %ecx
		call   _082df0_func
		mov    %esi,%eax
		mov    -0x000028(%ebp),%edx
		and    $0x000002,%eax
		add    %edx,%eax
		and    $0x000007,%eax
		mov    %eax,-0x000028(%ebp)
		testb  $0x000001,-0x000028(%ebp)
		je     _07c23b_jump
		mov    $0x54442d18,%eax
		mov    $0x3fe921fb,%edx
		mov    -0x000034(%ebp),%ebx
		mov    -0x000030(%ebp),%ecx
		call   _07b932_func
		mov    %eax,-0x000034(%ebp)
		mov    %edx,-0x000030(%ebp)

	_07c23b_jump:
		lea    -0x00001c(%ebp),%ebx
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _082d9c_func
		mov    -0x00001c(%ebp),%ebx
		cmp    $0xffffffe6,%ebx
		jge    _07c26c_jump
		mov    -0x000034(%ebp),%edi
		mov    -0x000030(%ebp),%eax
		xor    %ecx,%ecx
		mov    %eax,-0x000014(%ebp)
		mov    $0x3ff00000,%eax
		mov    %ecx,-0x000018(%ebp)
		mov    %eax,-0x000010(%ebp)
		jmp    _07c30f_jump

	_07c26c_jump:
		test   %ebx,%ebx
		jle    _07c275_jump
		xor    %eax,%eax
		mov    %eax,-0x00001c(%ebp)

	_07c275_jump:
		mov    -0x00001c(%ebp),%edx
		neg    %edx
		mov    %edx,-0x00001c(%ebp)
		cmp    $0x000008,%edx
		jle    _07c289_jump
		movl   $0x000008,-0x00001c(%ebp)

	_07c289_jump:
		mov    -0x00001c(%ebp),%eax
		mov    _0c1450_data(,%eax,4),%eax
		mov    %eax,-0x00001c(%ebp)
		mov    -0x000028(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		jne    _07c2a3_jump
		cmp    $0x000001,%esi
		jne    _07c2df_jump

	_07c2a3_jump:
		mov    $0x000008,%eax
		mov    -0x00001c(%ebp),%edx
		sub    %edx,%eax
		mov    %eax,-0x000024(%ebp)
		mov    %edx,%eax
		mov    $_0c1408_data,%edx
		shl    $0x000003,%eax
		add    %eax,%edx
		mov    -0x000034(%ebp),%eax
		mov    %edx,-0x000020(%ebp)
		mov    -0x000030(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07baef_func
		mov    -0x000024(%ebp),%ecx
		mov    -0x000020(%ebp),%ebx
		call   _082ee9_func
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000010(%ebp)

	_07c2df_jump:
		mov    -0x000028(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		je     _07c2ec_jump
		cmp    $0x000001,%esi
		jne    _07c30f_jump

	_07c2ec_jump:
		mov    $0x000008,%ecx
		mov    -0x00001c(%ebp),%ebx
		mov    -0x000034(%ebp),%eax
		sub    %ebx,%ecx
		shl    $0x000003,%ebx
		mov    -0x000030(%ebp),%edx
		add    $_0c13c0_data,%ebx
		call   _082f1e_func
		mov    %eax,%edi
		mov    %edx,-0x000014(%ebp)

	_07c30f_jump:
		mov    -0x000028(%ebp),%eax
		inc    %eax
		test   $0x000002,%al
		je     _07c322_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,-0x00003c(%ebp)
		mov    -0x000010(%ebp),%eax
		jmp    _07c328_jump

	_07c322_jump:
		mov    -0x000014(%ebp),%eax
		mov    %edi,-0x00003c(%ebp)

	_07c328_jump:
		mov    %eax,-0x000038(%ebp)
		testb  $0x000004,-0x000028(%ebp)
		je     _07c342_jump
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _07c66e_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_07c342_jump:
		cmp    $0x000001,%esi
		jne    _07c3bd_jump
		mov    -0x000028(%ebp),%edx
		mov    -0x000028(%ebp),%eax
		add    $0x000002,%edx
		add    $0x000003,%eax
		mov    %edx,-0x000028(%ebp)
		test   $0x000002,%al
		je     _07c366_jump
		mov    -0x000018(%ebp),%ebx
		mov    -0x000010(%ebp),%ecx
		jmp    _07c36b_jump

	_07c366_jump:
		mov    -0x000014(%ebp),%ecx
		mov    %edi,%ebx

	_07c36b_jump:
		testb  $0x000004,-0x000028(%ebp)
		je     _07c37e_jump
		mov    %ebx,%eax
		mov    %ecx,%edx
		call   _07c66e_func
		mov    %eax,%ebx
		mov    %edx,%ecx

	_07c37e_jump:
		test   %ecx,%ecx
		jne    _07c3ac_jump
		call   _082f65_func
		cmpl   $0x000000,-0x000038(%ebp)
		jle    _07c39a_jump
		mov    _0c14a0_data,%eax
		mov    _0c14a4_data,%edx
		jmp    _07c3e0_jump

	_07c39a_jump:
		mov    _0c14a0_data,%eax
		mov    _0c14a4_data,%edx
		call   _07c66e_func
		jmp    _07c3e0_jump

	_07c3ac_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _07c468_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_07c3bd_jump:
		cmpl   $0x00001c,-0x00002c(%ebp)
		jl     _07c3da_jump
		lea    -0x00003c(%ebp),%ebx
		mov    _0c1474_data(,%esi,4),%eax
		lea    -0x000044(%ebp),%edx
		or     $0x000002,%ah
		call   _082a84_func
		jmp    _07c3e0_jump

	_07c3da_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx

	_07c3e0_jump:
		lea    -0x00000c(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_07c3fa_func:
		push   %ebx
		cmpb   $0x000000,_0bd5b9_data
		je     _07c40b_jump
		call   _082f9b_func
		pop    %ebx
		ret    

	_07c40b_jump:
		xor    %ebx,%ebx
		call   _07c1b5_func
		pop    %ebx
		ret    



_07c421_func:
		push   %ebx
		cmpb   $0x000000,_0bd5b9_data
		je     _07c432_jump
		call   _082f92_func
		pop    %ebx
		ret    

	_07c432_jump:
		mov    $0x000002,%ebx
		call   _07c1b5_func
		pop    %ebx
		ret    



_07c468_func:
		or     %ebx,%ebx
		jne    _07c477_jump
		add    %ecx,%ecx
		jne    _07c475_jump
		jmp    _081a3d_jump

	_07c475_jump:
		rcr    %ecx

	_07c477_jump:
		or     %eax,%eax
		jne    _07c482_jump
		add    %edx,%edx
		jne    _07c480_jump
		ret    

	_07c480_jump:
		rcr    %edx

	_07c482_jump:
		cmpb   $0x000000,_0bd5b9_data
		je     _07c4bb_jump
		push   %edx
		push   %eax
		fldl   (%esp)
		push   %ecx
		push   %ebx
		testb  $0x000001,_0bd884_data
		je     _07c4a2_jump
		call   _083738_func
		jmp    _07c4a8_jump

	_07c4a2_jump:
		fdivl  (%esp)
		add    $0x000008,%esp

	_07c4a8_jump:
		fstpl  (%esp)
		fwait
		pop    %eax
		pop    %edx
		cmp    $0x80000000,%edx
		jne    _07c4ba_jump
		sub    %edx,%edx
		mov    %edx,%eax

	_07c4ba_jump:
		ret    

	_07c4bb_jump:
		push   %ebp
		mov    %esp,%ebp
		push   %edi
		push   %esi
		mov    %edx,%edi
		mov    %ecx,%esi
		sar    $0x000014,%edi
		sar    $0x000014,%ecx
		and    $0x800007ff,%edi
		and    $0x800007ff,%ecx
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		add    %cx,%di
		rol    $0x000010,%edi
		rol    $0x000010,%ecx
		and    $0x0fffff,%edx
		and    $0x0fffff,%esi
		or     %di,%di
		je     _07c4fe_jump
		or     $0x100000,%edx
		jmp    _07c50c_jump

	_07c4fe_jump:
		add    %eax,%eax
		adc    %edx,%edx
		dec    %di
		test   $0x100000,%edx
		je     _07c4fe_jump

	_07c50c_jump:
		or     %cx,%cx
		je     _07c519_jump
		or     $0x100000,%esi
		jmp    _07c527_jump

	_07c519_jump:
		add    %ebx,%ebx
		adc    %esi,%esi
		dec    %cx
		test   $0x100000,%esi
		je     _07c519_jump

	_07c527_jump:
		sub    %cx,%di
		add    $0x0003ff,%di
		js     _07c542_jump
		cmp    $0x0007ff,%di
		jb     _07c542_jump
		mov    %ecx,%eax
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _081a49_jump

	_07c542_jump:
		cmp    $0x00ffcc,%di
		jge    _07c550_jump
		pop    %esi
		pop    %edi
		pop    %ebp
		jmp    _081a38_jump

	_07c550_jump:
		push   %edi
		mov    $0x00000b,%cl
		shld   %cl,%eax,%edx
		shld   %cl,%ebp,%eax
		and    $0xfffff800,%eax
		shld   %cl,%ebx,%esi
		shld   %cl,%ebp,%ebx
		and    $0xfffff800,%ebx
		push   %esi
		push   %ebx
		mov    %esi,%ecx
		mov    %edx,%edi
		mov    %eax,%esi
		sub    %eax,%eax
		cmp    %edx,%ecx
		ja     _07c57b_jump
		sub    %ecx,%edx
		inc    %eax

	_07c57b_jump:
		push   %eax
		mov    %esi,%eax
		div    %ecx
		push   %eax
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %edx,%ebx
		mul    %edx
		add    %ebx,%eax
		adc    $0x000000,%edx
		mov    -0x000014(%ebp),%ebx
		testb  $0x000001,-0x000018(%ebp)
		je     _07c59c_jump
		add    %ebx,%eax
		adc    -0x000010(%ebp),%edx

	_07c59c_jump:
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     _07c5b6_jump

	_07c5a4_jump:
		subl   $0x000001,-0x00001c(%ebp)
		sbbl   $0x000000,-0x000018(%ebp)
		add    %ebx,%ecx
		adc    -0x000010(%ebp),%esi
		adc    $0x000000,%edi
		jne    _07c5a4_jump

	_07c5b6_jump:
		mov    %esi,%edi
		mov    %ecx,%esi
		mov    -0x000010(%ebp),%ecx
		cmp    %edi,%ecx
		ja     _07c5cb_jump
		sub    %ecx,%edi
		addl   $0x000001,-0x00001c(%ebp)
		adcl   $0x000000,-0x000018(%ebp)

	_07c5cb_jump:
		mov    %edi,%edx
		mov    %esi,%eax
		div    %ecx
		push   %eax
		or     %eax,%eax
		je     _07c602_jump
		xchg   %eax,%ebx
		mul    %ebx
		xchg   %eax,%ecx
		xchg   %edx,%ebx
		mul    %edx
		add    %ebx,%eax
		adc    $0x000000,%edx
		neg    %ecx
		sbb    %eax,%esi
		sbb    %edx,%edi
		je     _07c602_jump

	_07c5eb_jump:
		subl   $0x000001,-0x000020(%ebp)
		sbbl   $0x000000,-0x00001c(%ebp)
		sbbl   $0x000000,-0x000018(%ebp)
		add    -0x000014(%ebp),%ecx
		adc    -0x000010(%ebp),%esi
		adc    $0x000000,%edi
		jne    _07c5eb_jump

	_07c602_jump:
		pop    %eax
		pop    %edx
		pop    %ebx
		add    $0x000008,%esp
		pop    %edi
		dec    %di
		shr    %ebx
		jae    _07c614_jump
		rcr    %edx
		rcr    %eax
		inc    %edi

	_07c614_jump:
		sub    %esi,%esi
		mov    $0x00000b,%cl
		shrd   %cl,%edx,%eax
		rcr    %esi
		shrd   %cl,%esi,%edx
		or     $0xfff00000,%edx
		add    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		adc    $0x000000,%edi
		or     %di,%di
		jg     _07c653_jump
		jne    _07c63c_jump
		mov    $0x000001,%cl
		jmp    _07c642_jump

	_07c63c_jump:
		neg    %di
		mov    %di,%cx

	_07c642_jump:
		and    $0x1fffff,%edx
		sub    %ebx,%ebx
		shrd   %cl,%edx,%eax
		shrd   %cl,%ebx,%edx
		sub    %di,%di

	_07c653_jump:
		and    $0x0fffff,%edx
		mov    %edi,%esi
		ror    $0x00000b,%edi
		add    %esi,%esi
		rcr    %edi
		and    $0xfff00000,%edi
		or     %edi,%edx
		pop    %esi
		pop    %edi
		pop    %ebp
		ret    



_07c66e_func:
		test   %edx,%edx
		jne    _07c674_jump
		test   %eax,%eax

	_07c674_jump:
		je     _07c67c_jump
		xor    $0x80000000,%edx

	_07c67c_jump:
		ret    



_07c67d_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		push   %eax
		push   %edx
		mov    %ecx,%ebp
		testb  $0x000001,0x00000c(%ecx)
		jne    _07c6a7_jump
		mov    $0x000004,%eax
		call   _082f59_func
		mov    0x00000c(%ecx),%dh
		or     $0x000020,%dh
		xor    %eax,%eax
		mov    %dh,0x00000c(%ecx)
		jmp    _07c851_jump

	_07c6a7_jump:
		imul   %edx,%ebx
		test   %ebx,%ebx
		jne    _07c6b5_jump
		mov    %ebx,%eax
		jmp    _07c851_jump

	_07c6b5_jump:
		cmpl   $0x000000,0x000008(%ecx)
		jne    _07c6c2_jump
		mov    %ebp,%eax
		call   _08381c_func

	_07c6c2_jump:
		xor    %esi,%esi
		mov    0x00000c(%ebp),%dl
		mov    %esi,0x000008(%esp)
		test   $0x000040,%dl
		je     _07c7d2_jump
		mov    %ebx,0x00000c(%esp)

	_07c6d8_jump:
		mov    0x000004(%ebp),%edx
		test   %edx,%edx
		je     _07c733_jump
		mov    0x00000c(%esp),%ebx
		cmp    %ebx,%edx
		jbe    _07c6e9_jump
		mov    %ebx,%edx

	_07c6e9_jump:
		mov    0x000004(%esp),%edi
		mov    %edx,%ecx
		mov    0x000000(%ebp),%esi
		mov    0x000008(%esp),%ebx
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x00000c(%esp),%eax
		mov    0x000000(%ebp),%ecx
		lea    (%edi,%edx,1),%esi
		add    %edx,%ebx
		mov    %esi,0x000004(%esp)
		mov    %ebx,0x000008(%esp)
		mov    0x000004(%ebp),%edi
		add    %edx,%ecx
		sub    %edx,%eax
		sub    %edx,%edi
		mov    %ecx,0x000000(%ebp)
		mov    %eax,0x00000c(%esp)
		mov    %edi,0x000004(%ebp)

	_07c733_jump:
		mov    0x00000c(%esp),%ecx
		test   %ecx,%ecx
		je     _07c846_jump
		cmp    0x000014(%ebp),%ecx
		jae    _07c74e_jump
		testb  $0x000004,0x00000d(%ebp)
		je     _07c7be_jump

	_07c74e_jump:
		movl   $0x000000,0x000004(%ebp)
		mov    0x00000c(%esp),%ebx
		mov    0x000008(%ebp),%eax
		mov    0x00000d(%ebp),%cl
		mov    %eax,0x000000(%ebp)
		test   $0x000004,%cl
		jne    _07c774_jump
		cmp    $0x000200,%ebx
		jbe    _07c774_jump
		xor    %bl,%bl
		and    $0x0000fe,%bh

	_07c774_jump:
		mov    0x000004(%esp),%edx
		mov    0x000010(%ebp),%eax
		call   _083893_func
		cmp    $0xffffffff,%eax
		jne    _07c78e_jump
		orb    $0x000020,0x00000c(%ebp)
		jmp    _07c846_jump

	_07c78e_jump:
		test   %eax,%eax
		jne    _07c79b_jump

	_07c792_jump:
		orb    $0x000010,0x00000c(%ebp)
		jmp    _07c846_jump

	_07c79b_jump:
		mov    0x000004(%esp),%edx
		mov    0x00000c(%esp),%ebx
		mov    0x000008(%esp),%ecx
		add    %eax,%edx
		sub    %eax,%ebx
		add    %eax,%ecx
		mov    %edx,0x000004(%esp)
		mov    %ebx,0x00000c(%esp)
		mov    %ecx,0x000008(%esp)
		jmp    _07c6d8_jump

	_07c7be_jump:
		mov    %ebp,%eax
		call   _07cc0e_func
		test   %eax,%eax
		je     _07c846_jump
		jmp    _07c6d8_jump

	_07c7d2_jump:
		mov    0x000004(%esp),%edx
		add    %edx,%ebx

	_07c7d8_jump:
		cmpl   $0x000000,0x000004(%ebp)
		jne    _07c7e9_jump
		mov    %ebp,%eax
		call   _07cc0e_func
		test   %eax,%eax
		je     _07c846_jump

	_07c7e9_jump:
		mov    0x000004(%ebp),%ecx
		mov    0x000000(%ebp),%eax
		dec    %ecx
		lea    0x000001(%eax),%esi
		mov    %ecx,0x000004(%ebp)
		mov    %esi,0x000000(%ebp)
		mov    (%eax),%al
		and    $0x0000ff,%eax
		cmp    $0x00000d,%eax
		jne    _07c82d_jump
		cmpl   $0x000000,0x000004(%ebp)
		jne    _07c816_jump
		mov    %ebp,%eax
		call   _07cc0e_func
		test   %eax,%eax
		je     _07c846_jump

	_07c816_jump:
		mov    0x000004(%ebp),%edi
		mov    0x000000(%ebp),%eax
		dec    %edi
		lea    0x000001(%eax),%esi
		mov    %edi,0x000004(%ebp)
		mov    %esi,0x000000(%ebp)
		mov    (%eax),%al
		and    $0x0000ff,%eax

	_07c82d_jump:
		cmp    $0x00001a,%eax
		je     _07c792_jump
		mov    %al,(%edx)
		mov    0x000008(%esp),%eax
		inc    %eax
		inc    %edx
		mov    %eax,0x000008(%esp)
		cmp    %ebx,%edx
		jne    _07c7d8_jump

	_07c846_jump:
		mov    0x000008(%esp),%eax
		mov    (%esp),%esi
		xor    %edx,%edx
		div    %esi

	_07c851_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_07c858_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		andb   $0x0000ef,0x00000c(%edx)
		cmp    0x000004(%edx),%eax
		jg     _07c884_jump
		mov    0x000008(%edx),%ebx
		mov    (%edx),%ecx
		sub    %ecx,%ebx
		cmp    %ebx,%eax
		jl     _07c884_jump
		mov    0x000004(%edx),%edi
		lea    (%ecx,%eax,1),%esi
		sub    %eax,%edi
		mov    %esi,(%edx)
		xor    %eax,%eax
		mov    %edi,0x000004(%edx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_07c884_jump:
		mov    0x000008(%edx),%eax
		movl   $0x000000,0x000004(%edx)
		mov    %eax,(%edx)
		mov    $0x000001,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07c89a_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%esi
		testb  $0x000006,0x00000c(%eax)
		je     _07c902_jump
		testb  $0x000010,0x00000d(%ecx)
		je     _07c8d3_jump
		mov    %ecx,%eax
		call   _0838b2_func
		test   %eax,%eax
		je     _07c8e7_jump
		test   %ebx,%ebx
		jne    _07c8ca_jump
		test   %esi,%esi
		jge    _07c8ca_jump

	_07c8c0_jump:
		mov    $0x000009,%eax
		call   _082f59_func

	_07c8ca_jump:
		mov    $0xffffffff,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07c8d3_jump:
		cmp    $0x000001,%ebx
		jne    _07c8db_jump
		sub    0x000004(%ecx),%esi

	_07c8db_jump:
		mov    0x000008(%ecx),%eax
		movl   $0x000000,0x000004(%ecx)
		mov    %eax,(%ecx)

	_07c8e7_jump:
		andb   $0x0000eb,0x00000c(%ecx)
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		call   _07d218_func
		cmp    $0xffffffff,%eax
		jne    _07c990_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07c902_jump:
		cmp    $0x000001,%ebx
		jb     _07c910_jump
		jbe    _07c916_jump
		cmp    $0x000002,%ebx
		je     _07c96c_jump
		jmp    _07c8c0_jump

	_07c910_jump:
		test   %ebx,%ebx
		je     _07c93b_jump
		jmp    _07c8c0_jump

	_07c916_jump:
		mov    %ecx,%edx
		mov    %esi,%eax
		mov    0x000004(%ecx),%edi
		call   _07c858_func
		test   %eax,%eax
		je     _07c990_jump
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		sub    %edi,%edx
		call   _07d218_func
		cmp    $0xffffffff,%eax
		jne    _07c990_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07c93b_jump:
		mov    0x000010(%ecx),%eax
		call   _08398b_func
		mov    0x000004(%ecx),%edx
		mov    %esi,%edi
		sub    %edx,%eax
		sub    %eax,%edi
		mov    %ecx,%edx
		mov    %edi,%eax
		call   _07c858_func
		test   %eax,%eax
		je     _07c990_jump
		mov    %esi,%edx
		mov    0x000010(%ecx),%eax
		call   _07d218_func
		cmp    $0xffffffff,%eax
		jne    _07c990_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_07c96c_jump:
		mov    0x000008(%ecx),%eax
		mov    0x00000c(%ecx),%dl
		mov    %eax,(%ecx)
		and    $0x0000ef,%dl
		mov    0x000010(%ecx),%eax
		mov    %dl,0x00000c(%ecx)
		mov    %esi,%edx
		movl   $0x000000,0x000004(%ecx)
		call   _07d218_func
		cmp    $0xffffffff,%eax
		je     _07c992_jump

	_07c990_jump:
		xor    %eax,%eax

	_07c992_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07cc0e_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%ecx
		cmpl   $0x000000,0x000008(%eax)
		jne    _07cc1f_jump
		call   _08381c_func

	_07cc1f_jump:
		mov    0x00000d(%ecx),%ah
		test   $0x000020,%ah
		je     _07cc36_jump
		test   $0x000006,%ah
		je     _07cc36_jump
		mov    $0x002000,%eax
		call   _083a21_func

	_07cc36_jump:
		mov    0x000008(%ecx),%edx
		mov    %edx,(%ecx)
		mov    0x00000c(%ecx),%dh
		mov    0x00000c(%ecx),%eax
		and    $0x0000fb,%dh
		and    $0x002400,%eax
		mov    %dh,0x00000c(%ecx)
		cmp    $0x002400,%eax
		jne    _07cc76_jump
		mov    0x000010(%ecx),%ebx
		test   %ebx,%ebx
		jne    _07cc76_jump
		mov    %ebx,0x000004(%ecx)
		call   _081273_func
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		je     _07cc93_jump
		mov    (%ecx),%eax
		mov    %dl,(%eax)
		movl   $0x000001,0x000004(%ecx)
		jmp    _07cc93_jump

	_07cc76_jump:
		testb  $0x000004,0x00000d(%ecx)
		je     _07cc83_jump
		mov    $0x000001,%ebx
		jmp    _07cc86_jump

	_07cc83_jump:
		mov    0x000014(%ecx),%ebx

	_07cc86_jump:
		mov    (%ecx),%edx
		mov    0x000010(%ecx),%eax
		call   _083893_func
		mov    %eax,0x000004(%ecx)

	_07cc93_jump:
		mov    0x000004(%ecx),%esi
		test   %esi,%esi
		jg     _07ccb2_jump
		jne    _07cca2_jump
		orb    $0x000010,0x00000c(%ecx)
		jmp    _07ccb2_jump

	_07cca2_jump:
		mov    0x00000c(%ecx),%bh
		movl   $0x000000,0x000004(%ecx)
		or     $0x000020,%bh
		mov    %bh,0x00000c(%ecx)

	_07ccb2_jump:
		mov    0x000004(%ecx),%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ccba_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebx
		testb  $0x000002,0x00000c(%edx)
		jne    _07ccdf_jump
		mov    $0x000004,%eax
		call   _082f59_func
		orb    $0x000020,0x00000c(%edx)

	_07ccd5_jump:
		mov    $0xffffffff,%eax
		jmp    _07cd58_jump

	_07ccdf_jump:
		cmpl   $0x000000,0x000008(%edx)
		jne    _07ccec_jump
		mov    %edx,%eax
		call   _08381c_func

	_07ccec_jump:
		mov    $0x000400,%ecx
		cmp    $0x00000a,%ebx
		jne    _07cd29_jump
		mov    0x00000c(%edx),%al
		mov    $0x000600,%ecx
		test   $0x000040,%al
		jne    _07cd29_jump
		orb    $0x000010,0x00000d(%edx)
		mov    (%edx),%eax
		movb   $0x00000d,(%eax)
		mov    (%edx),%esi
		inc    %esi
		mov    0x000004(%edx),%edi
		mov    %esi,(%edx)
		inc    %edi
		mov    0x000014(%edx),%ebp
		mov    %edi,0x000004(%edx)
		cmp    %ebp,%edi
		jne    _07cd29_jump
		mov    %edx,%eax
		call   _0838b2_func
		test   %eax,%eax
		jne    _07ccd5_jump

	_07cd29_jump:
		orb    $0x000010,0x00000d(%edx)
		mov    (%edx),%eax
		mov    %bl,(%eax)
		mov    (%edx),%eax
		inc    %eax
		mov    0x000004(%edx),%esi
		mov    %eax,(%edx)
		inc    %esi
		mov    0x00000c(%edx),%edi
		mov    %esi,0x000004(%edx)
		test   %edi,%ecx
		jne    _07cd49_jump
		cmp    0x000014(%edx),%esi
		jne    _07cd54_jump

	_07cd49_jump:
		mov    %edx,%eax
		call   _0838b2_func
		test   %eax,%eax
		jne    _07ccd5_jump

	_07cd54_jump:
		xor    %eax,%eax
		mov    %bl,%al

	_07cd58_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

.data

_07cd6f_data:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"

.text



_07cd94_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x000001(%esp),%ecx
		mov    %dl,(%esp)

	_07cdaa_jump:
		lea    0x000024(%esp),%ebx
		mov    %edi,0x000024(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %eax,(%ebx)
		mov    %cs:_07cd6f_data(%edx),%al
		mov    %al,(%ecx)
		mov    0x000024(%esp),%eax
		inc    %ecx
		test   %eax,%eax
		jne    _07cdaa_jump

	_07cdca_jump:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    _07cdca_jump
		mov    %ebp,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07cdde_func:
		push   %ecx
		mov    %edx,%ecx
		cmp    $0x00000a,%ebx
		jne    _07cdf0_jump
		test   %eax,%eax
		jge    _07cdf0_jump
		neg    %eax
		movb   $0x00002d,(%edx)
		inc    %edx

	_07cdf0_jump:
		call   _07cd94_func
		mov    %ecx,%eax
		pop    %ecx
		ret    

.data

_07cdf9_data:
		.string "0123456789abcdefghijklmnopqrstuvwxyz"

.text



_07ce1e_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000028,%esp
		mov    %edx,%ebp
		mov    %ebx,%edi
		mov    %edx,%esi
		xor    %dl,%dl
		lea    0x000001(%esp),%ecx
		mov    %dl,(%esp)

	_07ce34_jump:
		lea    0x000024(%esp),%ebx
		mov    %edi,0x000024(%esp)
		xor    %edx,%edx
		divl   (%ebx)
		mov    %edx,(%ebx)
		mov    0x000024(%esp),%edx
		mov    %cs:_07cdf9_data(%edx),%dl
		mov    %dl,(%ecx)
		inc    %ecx
		test   %eax,%eax
		jne    _07ce34_jump

	_07ce54_jump:
		dec    %ecx
		mov    (%ecx),%al
		mov    %al,(%esi)
		inc    %esi
		test   %al,%al
		jne    _07ce54_jump
		mov    %ebp,%eax
		add    $0x000028,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07ce68_func:
		push   %ecx
		mov    %edx,%ecx
		cmp    $0x00000a,%ebx
		jne    _07ce7a_jump
		test   %eax,%eax
		jge    _07ce7a_jump
		neg    %eax
		movb   $0x00002d,(%edx)
		inc    %edx

	_07ce7a_jump:
		call   _07ce1e_func
		mov    %ecx,%eax
		pop    %ecx
		ret    



_07ce83_func:
		jmp    _07bce3_jump



_07ce88_func:
		cmpl   $0x000000,_0bd808_data
		je     _07ce97_jump
		mov    $0x000001,%eax
		ret    

	_07ce97_jump:
		mov    $0x00000b,%ah
		int    $0x000021
		movsbl %al,%eax
		ret    



_07cea0_func:
		mov    %eax,%ecx
		mov    %edx,%eax
		mov    %ebp,%esp
		xchg   %ecx,0x000028(%ebp)
		xchg   %eax,0x00002c(%ebp)
		pop    %gs
		pop    %fs
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		pop    %ebp
		pop    %ebx
		pop    %ebx
		pop    %edx
		lret   



_07ceb9_func:
		push   %ebx
		push   %ecx
		xor    %edx,%edx
		mov    _0bd816_data,%dl
		cmp    $0x000002,%edx
		jl     _07ced6_jump
		cmp    $0x000008,%edx
		jg     _07ced6_jump
		mov    %al,%cl
		mov    $0x002502,%eax
		jmp    _07cee0_jump

	_07ced6_jump:
		and    $0x0000ff,%eax
		xor    %cl,%cl
		or     $0x000035,%ah

	_07cee0_jump:
		push   %es
		int    $0x000021
		mov    %es,%edx
		pop    %es
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_07ceeb_func:
		push   %edx
		mov    %ebx,%edx
		xor    %ebx,%ebx
		mov    _0bd816_data,%bl
		cmp    $0x000002,%ebx
		jl     _07cf0e_jump
		cmp    $0x000008,%ebx
		jg     _07cf0e_jump
		push   %ds
		mov    %ecx,%ds
		mov    %al,%cl
		mov    $0x000004,%al
		mov    $0x000025,%ah
		int    $0x000021
		pop    %ds
		pop    %edx
		ret    

	_07cf0e_jump:
		push   %ds
		mov    %ecx,%ds
		mov    $0x000025,%ah
		int    $0x000021
		pop    %ds
		pop    %edx
		ret    



_07cf18_func:
		mov    $_0bd5a8_data,%eax
		ret    



_07cf1e_func:
		push   %edx
		call   _07cf18_func
		test   %eax,%eax
		je     _07cf40_jump
		imul   $0x41c64e6d,(%eax),%edx
		add    $0x003039,%edx
		mov    %edx,(%eax)
		mov    %edx,%eax
		shr    $0x000010,%eax
		and    $0x007fff,%eax

	_07cf40_jump:
		pop    %edx
		ret    



_07cf42_func:
		push   %edx
		mov    %eax,%edx
		call   _07cf18_func
		test   %eax,%eax
		je     _07cf50_jump
		mov    %edx,(%eax)

	_07cf50_jump:
		pop    %edx
		ret    



_07cf52_func:
		push   %ecx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%esi
		mov    %esp,%eax
		mov    %esp,%ecx
		call   _083a50_func
		mov    %esi,%eax
		call   _081583_func
		add    $0x00000c,%esp
		pop    %esi
		pop    %ecx
		ret    



_07cf6f_func:
		push   %ebx
		push   %edx
		lea    0x000014(%esp),%eax
		add    $0x000004,%eax
		mov    -0x000004(%eax),%eax
		push   %eax
		push   $0x000000
		mov    0x000018(%esp),%edx
		push   %edx
		mov    0x000018(%esp),%ebx
		push   %ebx
		call   _07cf93_func
		add    $0x000010,%esp
		pop    %edx
		pop    %ebx
		ret    



_07cf93_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		sub    $0x00000c,%esp
		mov    0x000024(%esp),%esi

	_07cf9f_jump:
		movzbl (%esi),%edi
		cmp    $0x000020,%edi
		jne    _07cfaa_jump
		inc    %esi
		jmp    _07cf9f_jump

	_07cfaa_jump:
		mov    0x000028(%esp),%eax
		and    $0x000083,%eax
		mov    %eax,0x000004(%esp)
		mov    0x000004(%esp),%al
		mov    0x00002c(%esp),%ah
		mov    %esi,%edx
		or     %ah,%al
		mov    $0xffffffff,%edi
		mov    $0x00003d,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _07cfdd_jump
		xor    %edi,%edi
		mov    (%esp),%di

	_07cfdd_jump:
		mov    0x000028(%esp),%dl
		test   $0x000003,%dl
		je     _07d060_jump
		cmp    $0xffffffff,%edi
		je     _07d060_jump
		mov    %edi,%eax
		call   _083a78_func
		test   %eax,%eax
		jne    _07d060_jump
		testb  $0x000004,0x000029(%esp)
		je     _07d028_jump
		test   $0x000020,%dl
		je     _07d028_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    $0x000007,%eax
		call   _082f59_func
		mov    $0xffffffff,%eax
		jmp    _07d173_jump

	_07d028_jump:
		testb  $0x000040,0x000028(%esp)
		je     _07d060_jump
		lea    0x000008(%esp),%edx
		mov    %edi,%ebx
		xor    %ecx,%ecx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jge    _07d060_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax

	_07d050_jump:
		xor    %eax,%eax
		mov    (%esp),%ax
		call   _081b94_func
		jmp    _07d173_jump

	_07d060_jump:
		cmp    $0xffffffff,%edi
		jne    _07d102_jump
		testb  $0x000020,0x000028(%esp)
		je     _07d050_jump
		xor    %eax,%eax
		mov    (%esp),%ax
		cmp    $0x000002,%eax
		jne    _07d050_jump
		lea    0x000030(%esp),%eax
		add    $0x000004,%eax
		mov    -0x000004(%eax),%eax
		test   %eax,%eax
		jne    _07d08e_jump
		mov    $0x000180,%eax

	_07d08e_jump:
		mov    _0bd888_data,%edx
		not    %edx
		and    %edx,%eax
		xor    %ecx,%ecx
		test   $0x000080,%al
		jne    _07d0a3_jump
		mov    $0x000001,%ecx

	_07d0a3_jump:
		and    $0x0000ff,%ecx
		mov    %esi,%edx
		mov    $0x00003c,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _07d050_jump
		xor    %edi,%edi
		mov    0x00002c(%esp),%edx
		mov    (%esp),%di
		test   %edx,%edx
		je     _07d102_jump
		mov    %edi,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _07d050_jump
		mov    0x000004(%esp),%al
		mov    0x00002c(%esp),%ch
		mov    %esi,%edx
		or     %ch,%al
		mov    $0x00003d,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		test   %eax,%eax
		jl     _07d050_jump
		xor    %edi,%edi
		mov    (%esp),%di

	_07d102_jump:
		mov    %edi,%eax
		call   _083a9f_func
		and    $0x00003c,%al
		mov    %eax,%edx
		mov    %edi,%eax
		call   _083a78_func
		test   %eax,%eax
		je     _07d11b_jump
		or     $0x000020,%dh

	_07d11b_jump:
		andb   $0x00007f,0x000004(%esp)
		cmpl   $0x000002,0x000004(%esp)
		jne    _07d12a_jump
		or     $0x000003,%dl

	_07d12a_jump:
		cmpl   $0x000000,0x000004(%esp)
		jne    _07d134_jump
		or     $0x000001,%dl

	_07d134_jump:
		cmpl   $0x000001,0x000004(%esp)
		jne    _07d13e_jump
		or     $0x000002,%dl

	_07d13e_jump:
		testb  $0x000010,0x000028(%esp)
		je     _07d148_jump
		or     $0x000080,%dl

	_07d148_jump:
		mov    %edx,%eax
		mov    0x000029(%esp),%bl
		or     $0x000040,%al
		test   $0x000003,%bl
		je     _07d15c_jump
		test   $0x000002,%bl
		je     _07d16a_jump
		jmp    _07d168_jump

	_07d15c_jump:
		cmpl   $0x000200,_0bd7c5_data
		jne    _07d16a_jump

	_07d168_jump:
		mov    %eax,%edx

	_07d16a_jump:
		mov    %edi,%eax
		call   _083af4_func
		mov    %edi,%eax

	_07d173_jump:
		add    $0x00000c,%esp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d1e2_func:
		push   $0x003f00
		push   %ds
		mov    %ecx,%ds
		mov    %edx,%ecx
		mov    %ebx,%edx
		mov    %eax,%ebx
		mov    0x000004(%esp),%eax
		int    $0x000021
		pop    %ds
		push   %ds
		jb     _07d200_jump
		mov    0x00000c(%esp),%ebx
		mov    %eax,(%ebx)

	_07d200_jump:
		call   _083b0a_func
		pop    %ds
		add    $0x000004,%esp
		ret    $0x000004



_07d213_func:
		jmp    _083b1d_func



_07d218_func:
		push   %ecx
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %esp,%edi
		mov    %bl,%al
		mov    %ecx,%ebx
		mov    $0x000042,%ah
		mov    %edx,%ecx
		shr    $0x000010,%ecx
		int    $0x000021
		mov    %ax,%ss:(%edi)
		mov    %dx,%ss:0x000002(%edi)
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    _07d252_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _081b94_func
		mov    $0xffffffff,%eax
		jmp    _07d255_jump

	_07d252_jump:
		mov    (%esp),%eax

	_07d255_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %ecx
		ret    



_07d25b_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx

	_07d25f_jump:
		mov    (%ebx),%al
		xor    %ecx,%ecx
		mov    (%edx),%ah
		mov    %al,%cl
		cmp    $0x000041,%ecx
		jl     _07d273_jump
		cmp    $0x00005a,%ecx
		jg     _07d273_jump
		add    $0x000020,%al

	_07d273_jump:
		xor    %ecx,%ecx
		mov    %ah,%cl
		cmp    $0x000041,%ecx
		jl     _07d284_jump
		cmp    $0x00005a,%ecx
		jg     _07d284_jump
		add    $0x000020,%ah

	_07d284_jump:
		cmp    %ah,%al
		jne    _07d290_jump
		test   %ah,%ah
		je     _07d290_jump
		inc    %ebx
		inc    %edx
		jmp    _07d25f_jump

	_07d290_jump:
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ah,%al
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_07d2a2_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x000004,%esp
		mov    %eax,%ebx
		xor    %eax,%eax
		mov    (%ebx),%al
		xor    %edx,%edx
		call   _083b52_func
		mov    %al,(%esp)
		and    $0x0000ff,%eax
		cmp    $0x000072,%eax
		je     _07d2de_jump
		cmp    $0x000077,%eax
		je     _07d2de_jump
		cmp    $0x000061,%eax
		je     _07d2de_jump
		mov    $0x000009,%eax
		call   _082f59_func
		xor    %eax,%eax
		jmp    _07d36b_jump

	_07d2de_jump:
		xor    %ecx,%ecx
		mov    %edx,%esi
		mov    0x000001(%ebx),%cl
		or     $0x000003,%si
		cmp    $0x00002b,%ecx
		jne    _07d313_jump
		xor    %eax,%eax
		mov    %esi,%edx
		mov    0x000002(%ebx),%al
		or     $0x000040,%si
		cmp    $0x000062,%eax
		je     _07d30f_jump
		cmp    $0x000074,%eax
		je     _07d34d_jump
		cmpl   $0x000200,_0bd7c5_data

	_07d30d_jump:
		jne    _07d34d_jump

	_07d30f_jump:
		mov    %esi,%edx
		jmp    _07d34d_jump

	_07d313_jump:
		mov    %edx,%eax
		or     $0x000040,%al
		cmp    $0x000062,%ecx
		jne    _07d330_jump
		mov    %eax,%edx
		mov    0x000002(%ebx),%bl
		and    $0x0000ff,%ebx
		cmp    $0x00002b,%ebx
		jne    _07d34d_jump
		or     $0x000003,%al
		jmp    _07d34b_jump

	_07d330_jump:
		cmp    $0x000074,%ecx
		jne    _07d33f_jump
		xor    %eax,%eax
		mov    0x000002(%ebx),%al
		cmp    $0x00002b,%eax
		jmp    _07d30d_jump

	_07d33f_jump:
		cmpl   $0x000200,_0bd7c5_data
		jne    _07d34d_jump

	_07d34b_jump:
		mov    %eax,%edx

	_07d34d_jump:
		xor    %eax,%eax
		mov    (%esp),%al
		cmp    $0x000077,%eax
		jne    _07d35c_jump
		or     $0x000002,%dl
		jmp    _07d369_jump

	_07d35c_jump:
		cmp    $0x000061,%eax
		jne    _07d366_jump
		or     $0x000082,%dl
		jmp    _07d369_jump

	_07d366_jump:
		or     $0x000001,%dl

	_07d369_jump:
		mov    %edx,%eax

	_07d36b_jump:
		add    $0x000004,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d373_func:
		push   %esi
		mov    %eax,%esi
		mov    %dl,%al
		mov    %ecx,%edx
		mov    0x000008(%esp),%ecx
		andb   $0x0000fc,0x00000c(%ecx)
		or     %ebx,0x00000c(%ecx)
		and    $0x0000ff,%eax
		call   _083b52_func
		and    $0x0000ff,%eax
		cmp    $0x000072,%eax
		jne    _07d3b6_jump
		xor    %eax,%eax
		test   $0x000002,%bl
		je     _07d3a5_jump
		mov    $0x000002,%eax

	_07d3a5_jump:
		test   $0x000040,%bl
		je     _07d3af_jump
		or     $0x000002,%ah
		jmp    _07d3b2_jump

	_07d3af_jump:
		or     $0x000001,%ah

	_07d3b2_jump:
		push   $0x000000
		jmp    _07d3e1_jump

	_07d3b6_jump:
		test   $0x000001,%bl
		setne  %al
		and    $0x0000ff,%eax
		add    $0x000021,%eax
		test   $0x000080,%bl
		je     _07d3cd_jump
		or     $0x000010,%al
		jmp    _07d3cf_jump

	_07d3cd_jump:
		or     $0x000040,%al

	_07d3cf_jump:
		test   $0x000040,%bl
		je     _07d3d9_jump
		or     $0x000002,%ah
		jmp    _07d3dc_jump

	_07d3d9_jump:
		or     $0x000001,%ah

	_07d3dc_jump:
		push   $0x000180

	_07d3e1_jump:
		push   %edx
		push   %eax
		push   %esi
		call   _07cf93_func
		add    $0x000010,%esp
		mov    %eax,0x000010(%ecx)
		cmpl   $0xffffffff,0x000010(%ecx)
		jne    _07d402_jump
		mov    %ecx,%eax
		call   _083c06_func
		xor    %eax,%eax
		pop    %esi
		ret    $0x000004

	_07d402_jump:
		movl   $0x000000,0x000004(%ecx)
		movl   $0x000000,0x000008(%ecx)
		movl   $0x000000,0x000014(%ecx)
		test   $0x000080,%bl
		je     _07d42a_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _07c89a_func

	_07d42a_jump:
		mov    %ecx,%eax
		call   _083c5d_func
		mov    %ecx,%eax
		pop    %esi
		ret    $0x000004



_07d437_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%esi
		mov    %ebx,%ecx
		mov    %edx,%eax
		call   _07d2a2_func
		mov    %eax,%ebx
		test   %eax,%eax
		je     _07d46c_jump
		xor    %eax,%eax
		call   _083b60_func
		mov    %eax,%edi
		test   %eax,%eax
		je     _07d46a_jump
		push   %eax
		mov    (%edx),%dl
		and    $0x0000ff,%edx
		mov    %esi,%eax
		call   _07d373_func
		mov    %eax,%edi

	_07d46a_jump:
		mov    %edi,%eax

	_07d46c_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07d470_func:
		push   %ebx
		xor    %ebx,%ebx
		call   _07d437_func
		pop    %ebx
		ret    



_07d524_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    _0e5e30_data,%eax

	_07d52d_jump:
		test   %eax,%eax
		jne    _07d539_jump
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    

	_07d539_jump:
		cmp    0x000004(%eax),%ebx
		je     _07d542_jump
		mov    (%eax),%eax
		jmp    _07d52d_jump

	_07d542_jump:
		mov    $0x000001,%edx
		mov    %ebx,%eax
		call   _07d551_func
		pop    %edx
		pop    %ebx
		ret    



_07d551_func:
		push   %ebx
		mov    %eax,%ebx
		call   _07d5d7_func
		mov    %eax,%edx
		mov    %ebx,%eax
		call   _083c06_func
		mov    %edx,%eax
		pop    %ebx
		ret    



_07d566_func:
		add    $0x000030,%eax
		cmp    $0x000039,%eax
		jle    _07d571_jump
		add    $0x000027,%eax

	_07d571_jump:
		ret    



_07d572_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    %edx,%edi
		call   _083c8e_func
		mov    %eax,%ebx
		lea    0x000004(%ecx),%edx
		movb   $0x000074,(%ecx)
		mov    %ecx,%esi

	_07d589_jump:
		mov    %ebx,%eax
		and    $0x00000f,%eax
		call   _07d566_func
		mov    %al,(%edx)
		dec    %edx
		shr    $0x000004,%ebx
		cmp    %esi,%edx
		jne    _07d589_jump
		mov    %edi,%eax
		sar    $0x000004,%eax
		and    $0x00000f,%eax
		movb   $0x00005f,0x000005(%ecx)
		call   _07d566_func
		mov    %al,0x000006(%ecx)
		mov    %edi,%eax
		and    $0x00000f,%eax
		call   _07d566_func
		movb   $0x00002e,0x000008(%ecx)
		movb   $0x000074,0x000009(%ecx)
		movb   $0x00006d,0x00000a(%ecx)
		movb   $0x000070,0x00000b(%ecx)
		movb   $0x000000,0x00000c(%ecx)
		mov    %al,0x000007(%ecx)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07d5d7_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		mov    %eax,%ecx
		mov    %edx,%edi
		cmpl   $0x000000,0x00000c(%eax)
		jne    _07d5f3_jump
		mov    $0xffffffff,%eax
		jmp    _07d65e_jump

	_07d5f3_jump:
		mov    0x00000d(%eax),%ah
		xor    %esi,%esi
		test   $0x000010,%ah
		je     _07d606_jump
		mov    %ecx,%eax
		call   _0838b2_func
		mov    %eax,%esi

	_07d606_jump:
		mov    %ecx,%eax
		call   _08176c_func
		cmp    $0xffffffff,%eax
		je     _07d620_jump
		mov    %eax,%edx
		mov    0x000010(%ecx),%ebp
		xor    %ebx,%ebx
		mov    %ebp,%eax
		call   _07d218_func

	_07d620_jump:
		test   %edi,%edi
		je     _07d62e_jump
		mov    0x000010(%ecx),%eax
		call   _083b1d_func
		or     %eax,%esi

	_07d62e_jump:
		testb  $0x000008,0x00000c(%ecx)
		je     _07d643_jump
		mov    0x000008(%ecx),%eax
		call   _0819b5_func
		movl   $0x000000,0x000008(%ecx)

	_07d643_jump:
		testb  $0x000008,0x00000d(%ecx)
		je     _07d65c_jump
		xor    %edx,%edx
		mov    %esp,%eax
		mov    0x000019(%ecx),%dl
		call   _07d572_func
		mov    %esp,%eax
		call   _07ce83_func

	_07d65c_jump:
		mov    %esi,%eax

	_07d65e_jump:
		add    $0x000010,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07d667_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d67c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		movl   $0x000000,-0x000008(%ebp)
		movl   $0x000000,-0x000004(%ebp)

	_07d69b_jump:
		cmpl   $0x000020,-0x000004(%ebp)
		jb     _07d6a8_jump
		jmp    _07d6cb_jump

	_07d6a3_jump:
		incl   -0x000004(%ebp)
		jmp    _07d69b_jump

	_07d6a8_jump:
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _07d6c9_jump
		incl   -0x000008(%ebp)

	_07d6c9_jump:
		jmp    _07d6a3_jump

	_07d6cb_jump:
		mov    -0x000008(%ebp),%eax
		mov    %eax,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d6db_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d6f0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d705_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		testb  $0x000002,-0x00000c(%ebp)
		je     _07d727_jump
		movb   $0x000001,_0bf838_data
		jmp    _07d72e_jump

	_07d727_jump:
		movb   $0x000000,_0bf838_data

	_07d72e_jump:
		testb  $0x000001,-0x00000c(%ebp)
		jne    _07d760_jump
		movb   $0x000001,_0bf834_data
		call   _083e19_func
		mov    %cs,%eax
		mov    $_07ddae_func,%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		push   $0x00ffff
		call   _083d57_func
		add    $0x00000c,%esp
		call   _083e45_func
		jmp    _07d767_jump

	_07d760_jump:
		movb   $0x000000,_0bf834_data

	_07d767_jump:
		cmpl   $0x000000,-0x000010(%ebp)
		je     _07d773_jump
		testb  $0x000001,-0x00000c(%ebp)
		je     _07d775_jump

	_07d773_jump:
		jmp    _07d7c7_jump

	_07d775_jump:
		cmpl   $0x00ff00,-0x000010(%ebp)
		jne    _07d794_jump
		mov    $0x00ffff,%eax
		call   _07dd79_func
		movl   $0x00ff00,_0be37b_data
		jmp    _07d7ab_jump

	_07d794_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000010(%ebp)
		call   _07dd79_func
		mov    -0x000010(%ebp),%eax
		mov    %eax,_0be37b_data

	_07d7ab_jump:
		mov    %cs,_0be33d_data
		movl   $_07de78_func,_0be339_data
		movl   $0x010000,_0be3bb_data
		jmp    _07d7d1_jump

	_07d7c7_jump:
		movl   $0x00ffff,_0be2db_data

	_07d7d1_jump:
		movl   $0x000000,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07d7e1_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		cmpb   $0x000000,_0bf834_data
		je     _07d80a_jump
		call   _083e19_func
		call   _083e71_func
		call   _083e45_func

	_07d80a_jump:
		movl   $0x000000,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07d81b_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000020,%esp
		mov    %eax,-0x000018(%ebp)
		mov    %cx,-0x00001c(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x00000c(%ebp)
		movl   $0x000000,-0x000004(%ebp)

	_07d83f_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07d84c_jump
		jmp    _07d865_jump

	_07d847_jump:
		incl   -0x000004(%ebp)
		jmp    _07d83f_jump

	_07d84c_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0be2df_data(%eax)
		jne    _07d863_jump
		cmpw   $0x000000,_0be2e3_data(%eax)
		je     _07d865_jump

	_07d863_jump:
		jmp    _07d847_jump

	_07d865_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07d877_jump
		movl   $0x00000b,-0x000014(%ebp)
		jmp    _07da1e_jump

	_07d877_jump:
		cmpb   $0x000000,_0bf834_data
		je     _07d885_jump
		call   _083e19_func

	_07d885_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		imul   $0x000006,-0x000004(%ebp),%edx
		mov    -0x00001c(%ebp),%eax
		mov    %ax,_0be2e3_data(%edx)
		mov    -0x000020(%ebp),%eax
		mov    %eax,_0be2df_data(%edx)
		mov    -0x000004(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000018(%ebp),%eax
		mov    %eax,_0be33f_data(%edx)
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		cmp    _0be2db_data,%eax
		jae    _07d8f0_jump
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		call   _07dd79_func
		mov    _0be2db_data,%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000018(%ebp)
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,-0x00000c(%ebp)

	_07d8f0_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07d8f7_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07d907_jump
		jmp    _07d9ff_jump

	_07d902_jump:
		incl   -0x000004(%ebp)
		jmp    _07d8f7_jump

	_07d907_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0be2df_data(%eax)
		jne    _07d922_jump
		cmpw   $0x000000,_0be2e3_data(%eax)
		je     _07d9fa_jump

	_07d922_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0be33f_data(%eax)
		jne    _07d97a_jump
		cmpl   $0x00ffff,_0be2db_data
		jne    _07d952_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x010000,_0be37f_data(%eax)
		jmp    _07d978_jump

	_07d952_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0be2db_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    $0x123333,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be37f_data(%eax)

	_07d978_jump:
		jmp    _07d9ac_jump

	_07d97a_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be33f_data(%eax),%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0be2db_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be37f_data(%eax)

	_07d9ac_jump:
		cmpl   $0x000000,-0x00000c(%ebp)
		je     _07d9fa_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    -0x00000c(%ebp),%edx
		and    $0x00ffff,%edx
		mov    _0be3bf_data(%eax),%eax
		imul   %edx,%eax
		shr    $0x000010,%eax
		mov    %eax,-0x000010(%ebp)
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    -0x00000c(%ebp),%edx
		shr    $0x000010,%edx
		mov    _0be3bf_data(%eax),%eax
		imul   %edx,%eax
		shr    $0x000010,%eax
		add    %eax,-0x000010(%ebp)
		mov    -0x000004(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000010(%ebp),%eax
		mov    %eax,_0be3bf_data(%edx)

	_07d9fa_jump:
		jmp    _07d902_jump

	_07d9ff_jump:
		cmpb   $0x000000,_0bf834_data
		je     _07da0d_jump
		call   _083e45_func

	_07da0d_jump:
		mov    -0x000008(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000014(%ebp)

	_07da1e_jump:
		mov    -0x000014(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000008



_07dba0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		movl   $0x000000,-0x000008(%ebp)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0be2e3_data(%eax)
		movl   $0x000000,_0be2df_data(%eax)
		movl   $0x000000,-0x000004(%ebp)

	_07dbd6_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07dbe3_jump
		jmp    _07dc30_jump

	_07dbde_jump:
		incl   -0x000004(%ebp)
		jmp    _07dbd6_jump

	_07dbe3_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0be2df_data(%eax)
		jne    _07dbfa_jump
		cmpw   $0x000000,_0be2e3_data(%eax)
		je     _07dc2e_jump

	_07dbfa_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be33f_data(%eax),%eax
		cmp    -0x000008(%ebp),%eax
		jbe    _07dc1d_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0be33f_data(%eax)
		jne    _07dc1f_jump

	_07dc1d_jump:
		jmp    _07dc2e_jump

	_07dc1f_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be33f_data(%eax),%eax
		mov    %eax,-0x000008(%ebp)

	_07dc2e_jump:
		jmp    _07dbde_jump

	_07dc30_jump:
		cmpl   $0x000000,-0x000008(%ebp)
		je     _07dc47_jump
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   -0x000008(%ebp)
		call   _07dd79_func
		jmp    _07dc51_jump

	_07dc47_jump:
		mov    $0x00ffff,%eax
		call   _07dd79_func

	_07dc51_jump:
		cmpb   $0x000000,_0bf834_data
		je     _07dc5f_jump
		call   _083e19_func

	_07dc5f_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07dc66_jump:
		cmpl   $0x000010,-0x000004(%ebp)
		jb     _07dc76_jump
		jmp    _07dd30_jump

	_07dc71_jump:
		incl   -0x000004(%ebp)
		jmp    _07dc66_jump

	_07dc76_jump:
		imul   $0x000006,-0x000004(%ebp),%eax
		cmpl   $0x000000,_0be2df_data(%eax)
		jne    _07dc91_jump
		cmpw   $0x000000,_0be2e3_data(%eax)
		je     _07dd2b_jump

	_07dc91_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00ff00,_0be33f_data(%eax)
		jne    _07dce9_jump
		cmpl   $0x00ffff,_0be2db_data
		jne    _07dcc1_jump
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x010000,_0be37f_data(%eax)
		jmp    _07dce7_jump

	_07dcc1_jump:
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0be2db_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    $0x123333,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be37f_data(%eax)

	_07dce7_jump:
		jmp    _07dd1b_jump

	_07dce9_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be33f_data(%eax),%ecx
		shl    $0x000010,%ecx
		xor    %edx,%edx
		mov    $0x1234dc,%eax
		divl   _0be2db_data
		mov    %eax,%ebx
		xor    %edx,%edx
		mov    %ecx,%eax
		div    %ebx
		mov    %eax,%ebx
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		mov    %ebx,_0be37f_data(%eax)

	_07dd1b_jump:
		mov    -0x000004(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0be3bf_data(%eax)

	_07dd2b_jump:
		jmp    _07dc71_jump

	_07dd30_jump:
		cmpb   $0x000000,_0bf834_data
		je     _07dd3e_jump
		call   _083e45_func

	_07dd3e_jump:
		movl   $0x000000,-0x00000c(%ebp)
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07dd79_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		mov    %eax,_0be2db_data
		pushl  -0x000008(%ebp)
		call   _083d11_func
		add    $0x000004,%esp
		movl   $0x000000,-0x000004(%ebp)
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ddae_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		incl   _0be60e_data
		movl   $0x000000,_0be7f8_data

	_07ddcc_jump:
		cmpl   $0x000010,_0be7f8_data
		jb     _07dde2_jump
		jmp    _07de6b_jump

	_07ddda_jump:
		incl   _0be7f8_data
		jmp    _07ddcc_jump

	_07dde2_jump:
		imul   $0x000006,_0be7f8_data,%eax
		cmpl   $0x000000,_0be2df_data(%eax)
		jne    _07ddfc_jump
		cmpw   $0x000000,_0be2e3_data(%eax)
		je     _07de66_jump

	_07ddfc_jump:
		mov    _0be7f8_data,%eax
		shl    $0x000002,%eax
		mov    _0be7f8_data,%edx
		shl    $0x000002,%edx
		mov    _0be37f_data(%edx),%edx
		add    %edx,_0be3bf_data(%eax)
		mov    _0be7f8_data,%eax
		shl    $0x000002,%eax
		testb  $0x000001,_0be3c1_data(%eax)
		je     _07de66_jump
		mov    _0be7f8_data,%eax
		shl    $0x000002,%eax
		movw   $0x000000,_0be3c1_data(%eax)
		mov    _0be7f8_data,%eax
		cmpb   $0x0000ff,_0be3ff_data(%eax)
		je     _07de59_jump
		mov    _0be7f8_data,%eax
		mov    _0be3ff_data(%eax),%al
		mov    %al,_0be40f_data

	_07de59_jump:
		imul   $0x000006,_0be7f8_data,%eax
		lcall  *_0be2df_data(%eax)

	_07de66_jump:
		jmp    _07ddda_jump

	_07de6b_jump:
		decl   _0be60e_data
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lret   



_07de78_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		call   _083eed_func
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		lret   



_07de92_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07dea7_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07debc_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %dx,-0x000010(%ebp)
		mov    %eax,-0x000014(%ebp)
		cmpl   $0x000000,_0be66e_data
		je     _07dee5_jump
		movl   $0x000003,-0x00000c(%ebp)
		jmp    _07dffd_jump

	_07dee5_jump:
		movl   $0x00002c,-0x000008(%ebp)
		cmpl   $0x000000,-0x000014(%ebp)
		jne    _07def9_jump
		cmpw   $0x000000,-0x000010(%ebp)
		je     _07df17_jump

	_07def9_jump:
		mov    -0x000014(%ebp),%edx
		mov    $_0be50f_data,%eax
		call   _083f47_func
		mov    $_0c1060_data,%edx
		mov    $_0be50f_data,%eax
		call   _083f66_func
		jmp    _07df26_jump

	_07df17_jump:
		mov    $_0c1060_data,%edx
		mov    $_0be50f_data,%eax
		call   _083f47_func

	_07df26_jump:
		push   $0x000200
		mov    $_0be50f_data,%eax
		push   %eax
		call   _07cf6f_func
		add    $0x000008,%esp
		mov    %eax,_0be67e_data
		cmpl   $0xffffffff,_0be67e_data
		jne    _07df53_jump
		movl   $0x00000f,-0x00000c(%ebp)
		jmp    _07dffd_jump

	_07df53_jump:
		mov    -0x000008(%ebp),%ebx
		mov    $_0be612_data,%edx
		mov    _0be67e_data,%eax
		call   _081178_func
		mov    _0be63a_data,%eax
		mov    %eax,-0x000004(%ebp)
		mov    $_0be68e_data,%eax
		push   %eax
		mov    $_0be68a_data,%eax
		push   %eax
		push   $0x001000
		call   _084017_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,_0be676_data
		mov    %ecx,_0be672_data
		movzwl _0be676_data,%eax
		push   %eax
		pushl  _0be672_data
		call   _0840db_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,_0be67c_data
		mov    %ecx,_0be678_data
		push   $0x001000
		pushl  _0be68e_data
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07dfde_jump
		movl   $0x000005,-0x00000c(%ebp)
		jmp    _07dffd_jump

	_07dfde_jump:
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0be67e_data,%eax
		call   _07d218_func
		movl   $0x000001,_0be66e_data
		movl   $0x000000,-0x00000c(%ebp)

	_07dffd_jump:
		mov    -0x00000c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07e006_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		movl   $0x000000,_0be66e_data
		mov    _0be67e_data,%eax
		call   _07d213_func
		push   $0x001000
		pushl  _0be68e_data
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07e048_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07e087_jump

	_07e048_jump:
		pushl  _0be68a_data
		movzwl _0be676_data,%eax
		push   %eax
		pushl  _0be672_data
		call   _0840a5_func
		add    $0x00000c,%esp
		pushl  _0be68a_data
		movzwl _0be67c_data,%eax
		push   %eax
		pushl  _0be678_data
		call   _0840a5_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_07e087_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07e4aa_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000038,%esp
		mov    %dx,-0x000034(%ebp)
		mov    %eax,-0x000038(%ebp)
		mov    %cx,-0x00002c(%ebp)
		mov    %ebx,-0x000030(%ebp)
		movl   $0xffffffff,-0x000008(%ebp)
		movl   $0x000030,-0x000014(%ebp)
		movl   $0x000000,-0x000020(%ebp)
		movl   $0x000000,-0x000024(%ebp)
		cmpl   $0x000000,-0x000038(%ebp)
		jne    _07e4f8_jump
		cmpw   $0x000000,-0x000034(%ebp)
		jne    _07e4f8_jump
		movl   $0x000002,-0x000028(%ebp)
		jmp    _07e6f5_jump

	_07e4f8_jump:
		movl   $0x000000,-0x00000c(%ebp)
		movl   $0x000000,-0x000010(%ebp)
		movl   $0x000000,_0be686_data
		xor    %ebx,%ebx
		xor    %edx,%edx
		mov    _0be67e_data,%eax
		call   _07d218_func
		mov    $0x00002c,%ebx
		mov    $_0be612_data,%edx
		mov    _0be67e_data,%eax
		call   _081178_func

	_07e532_jump:
		mov    _0be686_data,%eax
		cmp    _0be632_data,%eax
		ja     _07e545_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		je     _07e54a_jump

	_07e545_jump:
		jmp    _07e6ee_jump

	_07e54a_jump:
		mov    $0x000001,%ebx
		xor    %edx,%edx
		mov    _0be67e_data,%eax
		call   _07d218_func
		mov    %eax,-0x000018(%ebp)
		mov    -0x000014(%ebp),%ebx
		mov    $_0be63e_data,%edx
		mov    _0be67e_data,%eax
		call   _081178_func
		mov    _0be662_data,%eax
		mov    %eax,-0x000004(%ebp)
		mov    _0be666_data,%eax
		mov    %eax,-0x000008(%ebp)
		testb  $0x000080,_0be66b_data
		je     _07e6d1_jump
		lea    -0x00001c(%ebp),%eax
		push   %eax
		mov    -0x000004(%ebp),%edx
		mov    _0be676_data,%bx
		mov    _0be672_data,%eax
		mov    _0be67e_data,%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _07d1e2_func
		mov    %ds,%eax
		mov    $_0be698_data,%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		movzwl _0be676_data,%eax
		push   %eax
		pushl  _0be672_data
		movzwl _0be67c_data,%eax
		push   %eax
		pushl  _0be678_data
		call   _0842d6_func
		add    $0x000018,%esp
		testb  $0x000001,_0be6d5_data
		je     _07e64a_jump
		movzwl _0be676_data,%eax
		push   %eax
		pushl  _0be672_data
		movzwl _0be67c_data,%eax
		push   %eax
		pushl  _0be678_data
		call   _084509_func
		add    $0x000010,%esp
		movl   $0x000000,-0x000020(%ebp)

	_07e615_jump:
		pushl  -0x000020(%ebp)
		call   _084548_func
		add    $0x000004,%esp
		test   %eax,%eax
		je     _07e64a_jump
		pushl  -0x000020(%ebp)
		call   _084548_func
		add    $0x000004,%esp
		call   _084820_func
		mov    %eax,-0x000024(%ebp)
		pushl  -0x000024(%ebp)
		pushl  -0x000020(%ebp)
		call   _084592_func
		add    $0x000008,%esp
		incl   -0x000020(%ebp)
		jmp    _07e615_jump

	_07e64a_jump:
		movzwl _0be676_data,%eax
		push   %eax
		pushl  _0be672_data
		movzwl _0be67c_data,%eax
		push   %eax
		pushl  _0be678_data
		call   _08426f_func
		add    $0x000010,%esp
		mov    %eax,-0x000010(%ebp)
		cmpl   $0x000000,-0x000010(%ebp)
		je     _07e6cf_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,_0be682_data
		movzwl -0x000034(%ebp),%eax
		push   %eax
		pushl  -0x000038(%ebp)
		movzwl _0be676_data,%eax
		push   %eax
		pushl  _0be672_data
		movzwl _0be67c_data,%eax
		push   %eax
		pushl  _0be678_data
		call   _0842d6_func
		add    $0x000018,%esp
		mov    -0x000034(%ebp),%eax
		mov    %ax,_0be696_data
		mov    -0x000038(%ebp),%eax
		mov    %eax,_0be692_data
		mov    -0x000010(%ebp),%eax
		lgs    -0x000030(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000028(%ebp)
		jmp    _07e6f5_jump

	_07e6cf_jump:
		jmp    _07e6e3_jump

	_07e6d1_jump:
		mov    $0x000001,%ebx
		mov    -0x000004(%ebp),%edx
		mov    _0be67e_data,%eax
		call   _07d218_func

	_07e6e3_jump:
		incl   _0be686_data
		jmp    _07e532_jump

	_07e6ee_jump:
		movl   $0x000007,-0x000028(%ebp)

	_07e6f5_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		ret    



_07e922_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00002c,%esp
		mov    %dx,-0x000028(%ebp)
		mov    %eax,-0x00002c(%ebp)
		movl   $0x000030,-0x000018(%ebp)
		cmpl   $0x000000,-0x00002c(%ebp)
		jne    _07e956_jump
		cmpw   $0x000000,-0x000028(%ebp)
		jne    _07e956_jump
		movl   $0x000002,-0x000024(%ebp)
		jmp    _07eaa1_jump

	_07e956_jump:
		xor    %ebx,%ebx
		mov    _0be682_data,%edx
		mov    _0be67e_data,%eax
		call   _07d218_func
		movl   $0x000000,-0x00001c(%ebp)

	_07e96f_jump:
		lgs    _0be692_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		cmpw   $0x00ffff,%gs:(%eax)
		je     _07e9bc_jump
		lgs    _0be692_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		movswl %gs:(%eax),%eax
		push   %eax
		call   _08449f_func
		add    $0x000004,%esp
		incl   -0x00001c(%ebp)
		jmp    _07e96f_jump

	_07e9bc_jump:
		movzwl _0be676_data,%eax
		push   %eax
		pushl  _0be672_data
		movzwl _0be67c_data,%eax
		push   %eax
		pushl  _0be678_data
		call   _084292_func
		add    $0x000010,%esp
		movl   $0x000000,-0x00001c(%ebp)

	_07e9e7_jump:
		lgs    _0be692_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		cmpw   $0x00ffff,%gs:(%eax)
		je     _07ea34_jump
		lgs    _0be692_data,%eax
		mov    -0x00001c(%ebp),%ecx
		add    %ecx,%ecx
		mov    %gs:0x00004c(%eax),%dx
		mov    %gs:0x000048(%eax),%ebx
		mov    %edx,%gs
		lea    (%ebx,%ecx,1),%eax
		movswl %gs:(%eax),%eax
		push   %eax
		call   _0844d4_func
		add    $0x000004,%esp
		incl   -0x00001c(%ebp)
		jmp    _07e9e7_jump

	_07ea34_jump:
		mov    _0bf930_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:(%eax)
		mov    _0bf934_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:0x000008(%eax)
		mov    _0bf938_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:0x000004(%eax)
		mov    _0bf93c_data,%edx
		lgs    -0x00002c(%ebp),%eax
		mov    %edx,%gs:0x00000c(%eax)
		testb  $0x000001,_0be6d4_data
		jne    _07ea9a_jump
		cmpl   $0x000001,_0bf938_data
		jbe    _07ea86_jump
		cmpl   $0x000010,_0bf938_data
		jb     _07ea88_jump

	_07ea86_jump:
		jmp    _07ea91_jump

	_07ea88_jump:
		movl   $0x000000,-0x000024(%ebp)
		jmp    _07eaa1_jump

	_07ea91_jump:
		movl   $0x000011,-0x000024(%ebp)
		jmp    _07eaa1_jump

	_07ea9a_jump:
		movl   $0x000000,-0x000024(%ebp)

	_07eaa1_jump:
		mov    -0x000024(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_07eb7b_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07eb90_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07eba5_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    $_084881_func,%edx
		mov    $_0848c0_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_084881_func,%eax
		push   %eax
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ebde_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07ee61_jump

	_07ebde_jump:
		mov    $_0848d5_func,%edx
		mov    $_08497b_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0848d5_func,%eax
		push   %eax
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ec09_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07ee61_jump

	_07ec09_jump:
		mov    $_08103b_func,%edx
		mov    $_081126_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08103b_func,%eax
		push   %eax
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ec34_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07ee61_jump

	_07ec34_jump:
		mov    $_07eb90_func,%edx
		mov    $_07ff3a_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07eb90_func,%eax
		push   %eax
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ec5f_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07ee61_jump

	_07ec5f_jump:
		mov    $_084990_func,%edx
		mov    $_084f3c_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_084990_func,%eax
		push   %eax
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ec8a_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07ee61_jump

	_07ec8a_jump:
		mov    $_07d667_func,%edx
		mov    $_07d6db_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07d667_func,%eax
		push   %eax
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ecb5_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07ee61_jump

	_07ecb5_jump:
		mov    $_084f51_func,%edx
		mov    $_084fc8_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_084f51_func,%eax
		push   %eax
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ece0_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07ee61_jump

	_07ece0_jump:
		mov    $_07ff4f_func,%edx
		mov    $_0809a2_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07ff4f_func,%eax
		push   %eax
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ed0b_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07ee61_jump

	_07ed0b_jump:
		mov    $_07d6f0_func,%edx
		mov    $_07de92_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07d6f0_func,%eax
		push   %eax
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ed36_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07ee61_jump

	_07ed36_jump:
		mov    $_0809b7_func,%edx
		mov    $_081026_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0809b7_func,%eax
		push   %eax
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ed61_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07ee61_jump

	_07ed61_jump:
		mov    $_07dea7_func,%edx
		mov    $_07eb7b_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07dea7_func,%eax
		push   %eax
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ed8c_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07ee61_jump

	_07ed8c_jump:
		mov    $_083c94_jump,%edx
		mov    $_083f46_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_083c94_jump,%eax
		push   %eax
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07edb7_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07ee61_jump

	_07edb7_jump:
		mov    $_083f9c_jump,%edx
		mov    $_08481f_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_083f9c_jump,%eax
		push   %eax
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ede2_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07ee61_jump

	_07ede2_jump:
		mov    $_0bd8e4_data,%edx
		mov    $_0be7fc_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bd8e4_data,%eax
		push   %eax
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ee0a_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07ee61_jump

	_07ee0a_jump:
		mov    $_0be800_data,%edx
		mov    $_0bf83c_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0be800_data,%eax
		push   %eax
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ee32_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07ee61_jump

	_07ee32_jump:
		mov    $_0bf840_data,%edx
		mov    $_0bf940_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bf840_data,%eax
		push   %eax
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ee5a_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07ee61_jump

	_07ee5a_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07ee61_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ee6b_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000004,%esp
		mov    $_084881_func,%edx
		mov    $_0848c0_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_084881_func,%eax
		push   %eax
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07eea4_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f127_jump

	_07eea4_jump:
		mov    $_0848d5_func,%edx
		mov    $_08497b_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0848d5_func,%eax
		push   %eax
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07eecf_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f127_jump

	_07eecf_jump:
		mov    $_08103b_func,%edx
		mov    $_081126_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_08103b_func,%eax
		push   %eax
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07eefa_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f127_jump

	_07eefa_jump:
		mov    $_07eb90_func,%edx
		mov    $_07ff3a_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07eb90_func,%eax
		push   %eax
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ef25_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f127_jump

	_07ef25_jump:
		mov    $_084990_func,%edx
		mov    $_084f3c_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_084990_func,%eax
		push   %eax
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ef50_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f127_jump

	_07ef50_jump:
		mov    $_07d667_func,%edx
		mov    $_07d6db_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07d667_func,%eax
		push   %eax
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07ef7b_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f127_jump

	_07ef7b_jump:
		mov    $_084f51_func,%edx
		mov    $_084fc8_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_084f51_func,%eax
		push   %eax
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07efa6_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f127_jump

	_07efa6_jump:
		mov    $_07ff4f_func,%edx
		mov    $_0809a2_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07ff4f_func,%eax
		push   %eax
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07efd1_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f127_jump

	_07efd1_jump:
		mov    $_07d6f0_func,%edx
		mov    $_07de92_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07d6f0_func,%eax
		push   %eax
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07effc_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f127_jump

	_07effc_jump:
		mov    $_0809b7_func,%edx
		mov    $_081026_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0809b7_func,%eax
		push   %eax
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07f027_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f127_jump

	_07f027_jump:
		mov    $_07dea7_func,%edx
		mov    $_07eb7b_func,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_07dea7_func,%eax
		push   %eax
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07f052_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f127_jump

	_07f052_jump:
		mov    $_083c94_jump,%edx
		mov    $_083f46_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_083c94_jump,%eax
		push   %eax
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07f07d_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f127_jump

	_07f07d_jump:
		mov    $_083f9c_jump,%edx
		mov    $_08481f_jump,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_083f9c_jump,%eax
		push   %eax
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07f0a8_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f127_jump

	_07f0a8_jump:
		mov    $_0bd8e4_data,%edx
		mov    $_0be7fc_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bd8e4_data,%eax
		push   %eax
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07f0d0_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f127_jump

	_07f0d0_jump:
		mov    $_0be800_data,%edx
		mov    $_0bf83c_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0be800_data,%eax
		push   %eax
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07f0f8_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f127_jump

	_07f0f8_jump:
		mov    $_0bf840_data,%edx
		mov    $_0bf940_data,%eax
		sub    %edx,%eax
		push   %eax
		mov    $_0bf840_data,%eax
		push   %eax
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _07f120_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _07f127_jump

	_07f120_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07f127_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f131_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %dx,-0x000010(%ebp)
		mov    %eax,-0x000014(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		call   _07eba5_func
		mov    %eax,-0x000004(%ebp)
		cmpl   $0x000000,-0x000004(%ebp)
		je     _07f15d_jump
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		jmp    _07f1a2_jump

	_07f15d_jump:
		movl   $0x000001,_0be768_data
		cmpl   $0x000000,-0x000014(%ebp)
		jne    _07f174_jump
		cmpw   $0x000000,-0x000010(%ebp)
		je     _07f194_jump

	_07f174_jump:
		mov    -0x000010(%ebp),%ebx
		mov    -0x000014(%ebp),%eax
		mov    %ds,%edi
		mov    $_0be410_data,%edx
		mov    %edi,%esi
		mov    %edx,%edi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%edx
		mov    %edi,%eax
		call   _084fdd_func
		jmp    _07f19b_jump

	_07f194_jump:
		movb   $0x000000,_0be410_data

	_07f19b_jump:
		movl   $0x000000,-0x000008(%ebp)

	_07f1a2_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07f1aa_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		call   _07ee6b_func
		mov    %eax,-0x000004(%ebp)
		cmpl   $0x000000,-0x000004(%ebp)
		je     _07f1cf_jump
		movl   $0x000000,-0x000008(%ebp)
		jmp    _07f1e0_jump

	_07f1cf_jump:
		movl   $0x000000,_0be768_data
		movl   $0x000000,-0x000008(%ebp)

	_07f1e0_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07f1ea_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000084,%esp
		mov    %eax,-0x000034(%ebp)
		mov    %cx,-0x000078(%ebp)
		mov    %ebx,-0x00007c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000004(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000010(%eax),%eax
		mov    %eax,-0x000008(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000008(%eax),%ax
		mov    %ax,-0x000048(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000004(%eax),%eax
		mov    %eax,-0x00004c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00000c(%eax),%eax
		mov    %eax,-0x000010(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000010(%eax),%eax
		mov    %eax,-0x000014(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000014(%eax),%eax
		mov    %eax,-0x000018(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000018(%eax),%eax
		mov    %eax,-0x00001c(%ebp)
		movl   $0x000006,-0x00002c(%ebp)
		movl   $0x000000,-0x000028(%ebp)

	_07f267_jump:
		cmpl   $0x000005,-0x000028(%ebp)
		jb     _07f274_jump
		jmp    _07f28d_jump

	_07f26f_jump:
		incl   -0x000028(%ebp)
		jmp    _07f267_jump

	_07f274_jump:
		mov    -0x000028(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bde96_data(%eax)
		jne    _07f28b_jump
		mov    -0x000028(%ebp),%eax
		mov    %eax,-0x00002c(%ebp)
		jmp    _07f28d_jump

	_07f28b_jump:
		jmp    _07f26f_jump

	_07f28d_jump:
		cmpl   $0x000006,-0x00002c(%ebp)
		jne    _07f29f_jump
		movl   $0x00000b,-0x000024(%ebp)
		jmp    _07faa0_jump

	_07f29f_jump:
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000034(%ebp),%eax
		mov    %eax,_0bde96_data(%edx)
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000024(%eax)
		jne    _07f2c5_jump
		lgs    0x000014(%ebp),%eax
		cmpw   $0x000000,%gs:0x000028(%eax)
		je     _07f328_jump

	_07f2c5_jump:
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000028(%eax),%ax
		mov    %ax,-0x000058(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000024(%eax),%eax
		mov    %eax,-0x00005c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000030(%eax),%ax
		mov    %ax,-0x000060(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00002c(%eax),%eax
		mov    %eax,-0x000064(%ebp)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000058(%ebp),%eax
		mov    %ax,_0bd914_data(%edx)
		mov    -0x00005c(%ebp),%eax
		mov    %eax,_0bd910_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000060(%ebp),%eax
		mov    %ax,_0bd932_data(%edx)
		mov    -0x000064(%ebp),%eax
		mov    %eax,_0bd92e_data(%edx)
		jmp    _07f3e6_jump

	_07f328_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd8e8_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd94c_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    $_0bd9b0_data,%eax
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00005c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000064(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    -0x00002c(%ebp),%edx
		mov    -0x000034(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _0849a5_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _07f38a_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _07faa0_jump

	_07f38a_jump:
		mov    -0x000058(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000028(%edx)
		mov    -0x00005c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000024(%edx)
		mov    -0x000060(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000030(%edx)
		mov    -0x000064(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x00002c(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000058(%ebp),%eax
		mov    %ax,_0bd914_data(%edx)
		mov    -0x00005c(%ebp),%eax
		mov    %eax,_0bd910_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000060(%ebp),%eax
		mov    %ax,_0bd932_data(%edx)
		mov    -0x000064(%ebp),%eax
		mov    %eax,_0bd92e_data(%edx)

	_07f3e6_jump:
		imul   $0x00006c,-0x00002c(%ebp),%eax
		mov    $_0bdeae_data,%edx
		add    %edx,%eax
		mov    %ds,%ebx
		mov    -0x00002c(%ebp),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _0848ea_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _07f415_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _07faa0_jump

	_07f415_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0bde96_data(%eax)
		jae    _07f824_jump
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    -0x000004(%ebp),%eax
		mov    %eax,_0bda28_data(%edx)
		cmpl   $0x000000,-0x000010(%ebp)
		je     _07f55f_jump
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0be754_data(%eax)
		movw   $0x000000,-0x000080(%ebp)
		movl   $0x000000,-0x000084(%ebp)
		mov    -0x00002c(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    $_0bda6e_data,%eax
		add    %eax,%ebx
		lea    -0x00003c(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _07fcc2_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		mov    %bx,-0x000048(%ebp)
		mov    %ecx,-0x00004c(%ebp)
		mov    -0x00004c(%ebp),%eax
		cmp    -0x000084(%ebp),%eax
		jne    _07f4bf_jump
		mov    -0x000048(%ebp),%eax
		cmp    -0x000080(%ebp),%ax
		jne    _07f4bf_jump
		mov    -0x00002c(%ebp),%eax
		call   _084bc8_func
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bde96_data(%eax)
		movl   $0x000005,-0x000024(%ebp)
		jmp    _07faa0_jump

	_07f4bf_jump:
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000048(%ebp),%eax
		mov    %ax,_0bda40_data(%edx)
		mov    -0x00004c(%ebp),%eax
		mov    %eax,_0bda3c_data(%edx)
		imul   $0x00006c,-0x00002c(%ebp),%eax
		cmpl   $0x000008,_0bded2_data(%eax)
		jne    _07f53a_jump
		imul   $0x00006c,-0x00002c(%ebp),%eax
		testb  $0x000080,_0bdeeb_data(%eax)
		je     _07f515_jump
		movl   $0x000000,-0x000044(%ebp)

	_07f4f7_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _07f506_jump
		jmp    _07f513_jump

	_07f501_jump:
		incl   -0x000044(%ebp)
		jmp    _07f4f7_jump

	_07f506_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000000,%gs:(%eax)
		jmp    _07f501_jump

	_07f513_jump:
		jmp    _07f538_jump

	_07f515_jump:
		movl   $0x000000,-0x000044(%ebp)

	_07f51c_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _07f52b_jump
		jmp    _07f538_jump

	_07f526_jump:
		incl   -0x000044(%ebp)
		jmp    _07f51c_jump

	_07f52b_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000080,%gs:(%eax)
		jmp    _07f526_jump

	_07f538_jump:
		jmp    _07f55d_jump

	_07f53a_jump:
		movl   $0x000000,-0x000044(%ebp)

	_07f541_jump:
		mov    -0x000044(%ebp),%eax
		cmp    -0x000004(%ebp),%eax
		jb     _07f550_jump
		jmp    _07f55d_jump

	_07f54b_jump:
		incl   -0x000044(%ebp)
		jmp    _07f541_jump

	_07f550_jump:
		lgs    -0x00004c(%ebp),%eax
		add    -0x000044(%ebp),%eax
		movb   $0x000000,%gs:(%eax)
		jmp    _07f54b_jump

	_07f55d_jump:
		jmp    _07f581_jump

	_07f55f_jump:
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000048(%ebp),%eax
		mov    %ax,_0bda40_data(%edx)
		mov    -0x00004c(%ebp),%eax
		mov    %eax,_0bda3c_data(%edx)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000048(%eax),%eax
		mov    %eax,-0x00003c(%ebp)

	_07f581_jump:
		mov    -0x000048(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000008(%edx)
		mov    -0x00004c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000004(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000048(%edx)
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000034(%eax)
		jne    _07f69b_jump
		lgs    0x000014(%ebp),%eax
		cmpw   $0x000000,%gs:0x000038(%eax)
		jne    _07f69b_jump
		lgs    0x000014(%ebp),%eax
		cmpl   $0x000000,%gs:0x000044(%eax)
		je     _07f633_jump
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd8fc_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd960_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd9c4_data,%edx
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00006c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000074(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000044(%edx),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _084ca0_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _07f631_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _07faa0_jump

	_07f631_jump:
		jmp    _07f699_jump

	_07f633_jump:
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd8fc_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    $_0bd960_data,%edx
		add    %edx,%eax
		push   %eax
		mov    -0x00002c(%ebp),%edx
		shl    $0x000002,%edx
		mov    $_0bd9c4_data,%eax
		add    %edx,%eax
		push   %eax
		mov    %ss,%eax
		lea    -0x00006c(%ebp),%edx
		movzwl %ax,%eax
		push   %eax
		push   %edx
		mov    %ss,%eax
		lea    -0x000074(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%eax
		imul   $0x00006c,-0x00002c(%ebp),%edx
		mov    _0bdf16_data(%edx),%edx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %edx,%eax
		call   _084ca0_func
		mov    %eax,-0x000030(%ebp)
		cmpl   $0x000000,-0x000030(%ebp)
		je     _07f699_jump
		mov    -0x000030(%ebp),%eax
		mov    %eax,-0x000024(%ebp)
		jmp    _07faa0_jump

	_07f699_jump:
		jmp    _07f6cb_jump

	_07f69b_jump:
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000038(%eax),%ax
		mov    %ax,-0x000068(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000034(%eax),%eax
		mov    %eax,-0x00006c(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x000040(%eax),%ax
		mov    %ax,-0x000070(%ebp)
		lgs    0x000014(%ebp),%eax
		mov    %gs:0x00003c(%eax),%eax
		mov    %eax,-0x000074(%ebp)

	_07f6cb_jump:
		imul   $0x00006c,-0x00002c(%ebp),%eax
		testb  $0x000002,_0bdeeb_data(%eax)
		je     _07f700_jump
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		movzwl -0x000068(%ebp),%eax
		push   %eax
		pushl  -0x00006c(%ebp)
		movzwl -0x000070(%ebp),%eax
		push   %eax
		pushl  -0x000074(%ebp)
		call   _0845c8_func
		add    $0x000020,%esp

	_07f700_jump:
		mov    -0x000068(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000038(%edx)
		mov    -0x00006c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x000034(%edx)
		mov    -0x000070(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000040(%edx)
		mov    -0x000074(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:0x00003c(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000068(%ebp),%eax
		mov    %ax,_0bd978_data(%edx)
		mov    -0x00006c(%ebp),%eax
		mov    %eax,_0bd974_data(%edx)
		imul   $0x000006,-0x00002c(%ebp),%edx
		mov    -0x000070(%ebp),%eax
		mov    %ax,_0bd996_data(%edx)
		mov    -0x000074(%ebp),%eax
		mov    %eax,_0bd992_data(%edx)
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bd9ec_data(%eax)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		mov    -0x000038(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be136_data(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		mov    $_0be77c_data,%eax
		push   %eax
		pushl  -0x00002c(%ebp)
		pushl  -0x000038(%ebp)
		pushl  -0x000004(%ebp)
		movzwl -0x000048(%ebp),%eax
		push   %eax
		pushl  -0x00004c(%ebp)
		movzwl -0x000068(%ebp),%eax
		push   %eax
		pushl  -0x00006c(%ebp)
		movzwl -0x000070(%ebp),%eax
		push   %eax
		pushl  -0x000074(%ebp)
		call   _084377_func
		add    $0x000028,%esp
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0be780_data,%dx
		mov    _0be77c_data,%ebx
		mov    %dx,_0bda9a_data(%eax)
		mov    %ebx,_0bda96_data(%eax)
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0be788_data,%dx
		mov    _0be784_data,%ebx
		mov    %dx,_0bde78_data(%eax)
		mov    %ebx,_0bde74_data(%eax)
		mov    _0be790_data,%ax
		mov    %ax,-0x000050(%ebp)
		mov    _0be78c_data,%eax
		mov    %eax,-0x000054(%ebp)
		movzwl -0x000050(%ebp),%eax
		push   %eax
		pushl  -0x000054(%ebp)
		imul   $0x0000c0,-0x00002c(%ebp),%eax
		mov    $_0bdab4_data,%edx
		add    %edx,%eax
		push   %eax
		call   _084138_func
		add    $0x00000c,%esp
		jmp    _07f83b_jump

	_07f824_jump:
		imul   $0x000006,-0x00002c(%ebp),%eax
		movw   $0x000000,_0bda9a_data(%eax)
		movl   $0x000000,_0bda96_data(%eax)

	_07f83b_jump:
		imul   $0x000006,-0x00002c(%ebp),%eax
		mov    _0bda9a_data(%eax),%dx
		mov    _0bda96_data(%eax),%ebx
		lgs    0x000014(%ebp),%eax
		mov    %dx,%gs:0x000020(%eax)
		lgs    0x000014(%ebp),%eax
		mov    %ebx,%gs:0x00001c(%eax)
		lgs    -0x00007c(%ebp),%eax
		pushl  %gs:0x000008(%eax)
		call   _08449f_func
		add    $0x000004,%esp
		mov    -0x00002c(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    -0x00003c(%ebp),%eax
		mov    %eax,_0bda5a_data(%ebx)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000040(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000004(%eax),%eax
		mov    %eax,-0x00000c(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x000038(%ebp)
		lgs    -0x00007c(%ebp),%eax
		mov    %gs:0x00000c(%eax),%eax
		mov    %eax,-0x000020(%ebp)
		mov    -0x000038(%ebp),%al
		mov    -0x00002c(%ebp),%edx
		mov    %al,_0be156_data(%edx)
		pushl  -0x000020(%ebp)
		pushl  -0x00001c(%ebp)
		pushl  -0x000018(%ebp)
		pushl  -0x000038(%ebp)
		pushl  -0x00000c(%ebp)
		pushl  -0x000040(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _0843ca_func
		add    $0x000028,%esp
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _08444e_func
		add    $0x000010,%esp
		pushl  -0x000014(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _084428_func
		add    $0x000014,%esp
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0bda5a_data(%eax),%eax
		mov    %eax,-0x00003c(%ebp)
		pushl  -0x000004(%ebp)
		pushl  -0x00003c(%ebp)
		movzwl -0x000058(%ebp),%eax
		push   %eax
		pushl  -0x00005c(%ebp)
		movzwl -0x000060(%ebp),%eax
		push   %eax
		pushl  -0x000064(%ebp)
		call   _0843ff_func
		add    $0x000018,%esp
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bd9d8_data(%eax)
		mov    -0x00002c(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bda00_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:(%ebx),%ebx
		mov    %ebx,_0be15b_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000008(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000004(%ebx),%ebx
		mov    %dx,_0be163_data(%eax)
		mov    %ebx,_0be15f_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00000c(%ebx),%ebx
		mov    %ebx,_0be167_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000010(%ebx),%ebx
		mov    %ebx,_0be16b_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%ebx
		mov    -0x000034(%ebp),%eax
		mov    %eax,_0be16f_data(%ebx)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000018(%ebx),%ebx
		mov    %ebx,_0be173_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000020(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00001c(%ebx),%ebx
		mov    %dx,_0be17b_data(%eax)
		mov    %ebx,_0be177_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000028(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000024(%ebx),%ebx
		mov    %dx,_0be183_data(%eax)
		mov    %ebx,_0be17f_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000038(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x000034(%ebx),%ebx
		mov    %dx,_0be193_data(%eax)
		mov    %ebx,_0be18f_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000030(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00002c(%ebx),%ebx
		mov    %dx,_0be18b_data(%eax)
		mov    %ebx,_0be187_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000040(%edx),%dx
		lgs    0x000014(%ebp),%ebx
		mov    %gs:0x00003c(%ebx),%ebx
		mov    %dx,_0be19b_data(%eax)
		mov    %ebx,_0be197_data(%eax)
		imul   $0x00004c,-0x00002c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %gs:0x000044(%edx),%edx
		mov    %edx,_0be19f_data(%eax)
		mov    -0x00002c(%ebp),%eax
		lgs    0x00001c(%ebp),%edx
		mov    %eax,%gs:(%edx)
		movl   $0x000000,-0x000024(%ebp)

	_07faa0_jump:
		mov    -0x000024(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000010



_07faaa_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000028,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %ebx,-0x000008(%ebp)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bd9d8_data(%eax)
		jne    _07fada_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _07fcba_jump

	_07fada_jump:
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bda00_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0bda82_data(%eax)
		jae    _07fb97_jump
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0be754_data(%eax)
		je     _07fb15_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		jne    _07fb1a_jump

	_07fb15_jump:
		jmp    _07fb97_jump

	_07fb1a_jump:
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bda40_data(%edx),%ax
		mov    %ax,-0x00001c(%ebp)
		mov    _0bda3c_data(%edx),%eax
		mov    %eax,-0x000020(%ebp)
		call   _084628_func
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _07fb71_jump
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    _0bda5a_data(%ebx),%ecx
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%ebx
		mov    _0bda6e_data(%ebx),%esi
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		movzwl %dx,%eax
		mov    %ecx,%ebx
		mov    %esi,%edx
		call   _07febe_func
		jmp    _07fb87_jump

	_07fb71_jump:
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%ebx
		mov    %eax,%edx
		mov    %ebx,%eax
		movzwl %dx,%ebx
		push   %ebx
		call   _08419e_func
		add    $0x000004,%esp

	_07fb87_jump:
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0be754_data(%eax)

	_07fb97_jump:
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bd914_data(%edx),%ax
		mov    %ax,-0x000024(%ebp)
		mov    _0bd910_data(%edx),%eax
		mov    %eax,-0x000028(%ebp)
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bd932_data(%edx),%ax
		mov    %ax,-0x000014(%ebp)
		mov    _0bd92e_data(%edx),%eax
		mov    %eax,-0x000018(%ebp)
		movzwl -0x000024(%ebp),%eax
		push   %eax
		pushl  -0x000028(%ebp)
		movzwl -0x000014(%ebp),%eax
		push   %eax
		pushl  -0x000018(%ebp)
		call   _08424c_func
		add    $0x000010,%esp
		movzwl -0x000024(%ebp),%eax
		push   %eax
		pushl  -0x000028(%ebp)
		movzwl -0x000014(%ebp),%eax
		push   %eax
		pushl  -0x000018(%ebp)
		call   _084354_func
		add    $0x000010,%esp
		mov    -0x000010(%ebp),%eax
		movzbl _0be156_data(%eax),%eax
		push   %eax
		call   _0844d4_func
		add    $0x000004,%esp
		cmpl   $0x000000,-0x000008(%ebp)
		je     _07fc20_jump
		mov    -0x000010(%ebp),%eax
		call   _084bc8_func
		mov    -0x000010(%ebp),%eax
		call   _084e7a_func

	_07fc20_jump:
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd914_data(%eax)
		movl   $0x000000,_0bd910_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd932_data(%eax)
		movl   $0x000000,_0bd92e_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bda9a_data(%eax)
		movl   $0x000000,_0bda96_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd978_data(%eax)
		movl   $0x000000,_0bd974_data(%eax)
		imul   $0x000006,-0x000010(%ebp),%eax
		movw   $0x000000,_0bd996_data(%eax)
		movl   $0x000000,_0bd992_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bde96_data(%eax)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bd9d8_data(%eax)
		movl   $0x000000,-0x000004(%ebp)

	_07fcba_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07fcc2_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000030,%esp
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000018(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x00000c(%ebp)
		call   _084628_func
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _07fd30_jump
		lea    -0x000014(%ebp),%ebx
		lea    -0x000010(%ebp),%edx
		lea    -0x000028(%ebp),%eax
		call   _07fda2_func
		test   %eax,%eax
		je     _07fd11_jump
		movw   $0x000000,-0x00002c(%ebp)
		movl   $0x000000,-0x000030(%ebp)
		jmp    _07fd97_jump

	_07fd11_jump:
		mov    -0x000014(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)
		mov    -0x000010(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %eax,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    %ax,-0x00002c(%ebp)
		mov    -0x000028(%ebp),%eax
		mov    %eax,-0x000030(%ebp)
		jmp    _07fd97_jump

	_07fd30_jump:
		lea    -0x00000c(%ebp),%eax
		push   %eax
		lea    -0x000004(%ebp),%eax
		push   %eax
		mov    -0x00001c(%ebp),%eax
		shr    $0x000004,%eax
		add    $0x000004,%eax
		push   %eax
		call   _084168_func
		add    $0x00000c,%esp
		mov    -0x000004(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)

	_07fd52_jump:
		mov    -0x000004(%ebp),%edx
		and    $0x00ffff,%edx
		mov    $0x00ffff,%eax
		sub    -0x00001c(%ebp),%eax
		cmp    %eax,%edx
		jbe    _07fd8b_jump
		lea    -0x00000c(%ebp),%eax
		push   %eax
		lea    -0x000004(%ebp),%eax
		push   %eax
		mov    -0x00001c(%ebp),%eax
		shr    $0x000004,%eax
		add    $0x000004,%eax
		push   %eax
		call   _084168_func
		add    $0x00000c,%esp
		mov    -0x000004(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _07fd52_jump

	_07fd8b_jump:
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,-0x00002c(%ebp)
		mov    %edx,-0x000030(%ebp)

	_07fd97_jump:
		mov    -0x00002c(%ebp),%edx
		mov    -0x000030(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07fda2_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00002c,%esp
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x000020(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		mov    -0x000024(%ebp),%eax
		movw   $0x000000,0x000004(%eax)
		mov    -0x000024(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    -0x000010(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    -0x000020(%ebp),%eax
		movl   $0x000000,(%eax)
		movl   $0x000000,-0x000004(%ebp)
		lea    -0x000004(%ebp),%eax
		push   %eax
		lea    -0x00000c(%ebp),%eax
		push   %eax
		push   $0x000020
		call   _084645_func
		add    $0x00000c,%esp
		test   %eax,%eax
		je     _07fe12_jump
		movl   $0x000000,-0x00001c(%ebp)
		jmp    _07feb6_jump

	_07fe12_jump:
		xor    %edx,%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,-0x000028(%ebp)
		mov    %edx,-0x00002c(%ebp)
		lgs    -0x00002c(%ebp),%edx
		movl   $0x001000,%gs:(%edx)
		pushl  -0x000004(%ebp)
		call   _0846b4_func
		add    $0x000004,%esp
		mov    %eax,-0x000018(%ebp)
		push   $0x000010
		mov    -0x000028(%ebp),%ebx
		mov    -0x00002c(%ebp),%edx
		mov    %ds,%esi
		mov    $_0be76c_data,%ecx
		mov    %esi,%eax
		mov    %ecx,%esi
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _08500c_func
		pushl  -0x000004(%ebp)
		pushl  -0x00000c(%ebp)
		call   _084686_func
		add    $0x000008,%esp
		cmpl   $0x000000,-0x000018(%ebp)
		jne    _07feaf_jump
		andw   $0x00f000,_0be778_data
		pushl  _0be778_data
		call   _08476d_func
		add    $0x000004,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    _0be778_data,%eax
		mov    %eax,-0x000014(%ebp)
		xor    %ebx,%ebx
		mov    -0x00000c(%ebp),%edx
		mov    -0x000024(%ebp),%eax
		mov    %dx,0x000004(%eax)
		mov    -0x000024(%ebp),%eax
		mov    %ebx,(%eax)
		mov    -0x000014(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %eax,(%edx)
		movl   $0x000000,-0x00001c(%ebp)
		jmp    _07feb6_jump

	_07feaf_jump:
		movl   $0x000005,-0x00001c(%ebp)

	_07feb6_jump:
		mov    -0x00001c(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07febe_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00001c,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %ebx,-0x000004(%ebp)
		pushl  -0x000010(%ebp)
		call   _0847ed_func
		add    $0x000004,%esp
		lea    -0x00000c(%ebp),%edx
		push   %edx
		lea    -0x000008(%ebp),%edx
		push   %edx
		push   $0x000020
		call   _084645_func
		add    $0x00000c,%esp
		xor    %edx,%edx
		mov    -0x000008(%ebp),%eax
		mov    %ax,-0x000018(%ebp)
		mov    %edx,-0x00001c(%ebp)
		push   $0x000010
		mov    %ds,%edx
		mov    $_0be76c_data,%esi
		mov    %edx,%ebx
		mov    %esi,%edx
		mov    -0x000018(%ebp),%eax
		mov    -0x00001c(%ebp),%esi
		mov    %ebx,%ecx
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    %esi,%eax
		call   _08500c_func
		pushl  -0x00000c(%ebp)
		call   _084720_func
		add    $0x000004,%esp
		pushl  -0x00000c(%ebp)
		pushl  -0x000008(%ebp)
		call   _084686_func
		add    $0x000008,%esp
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_07ff3a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ff4f_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_07ff64_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000030,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %cx,-0x00001c(%ebp)
		mov    %ebx,-0x000020(%ebp)
		imul   $0x000006,-0x000010(%ebp),%edx
		mov    _0bd914_data(%edx),%ax
		mov    %ax,-0x000024(%ebp)
		mov    _0bd910_data(%edx),%eax
		mov    %eax,-0x000028(%ebp)
		mov    -0x000010(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x00e106,_0bda82_data(%eax)
		jb     _07ffcb_jump
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000004(%eax),%ax
		mov    %ax,-0x000014(%ebp)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:(%eax),%eax
		mov    %eax,-0x000018(%ebp)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    %eax,-0x00000c(%ebp)
		jmp    _08056e_jump

	_07ffcb_jump:
		movl   $0x000000,-0x000004(%ebp)

	_07ffd2_jump:
		cmpl   $0x000020,-0x000004(%ebp)
		jb     _07ffe2_jump
		jmp    _080565_jump

	_07ffdd_jump:
		incl   -0x000004(%ebp)
		jmp    _07ffd2_jump

	_07ffe2_jump:
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		jne    _080560_jump
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%eax
		lgs    -0x000020(%ebp),%ebx
		mov    %gs:0x000004(%ebx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x000004(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x000004(%edx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x00000c(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:0x000008(%eax)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000004(%eax),%ax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:(%edx),%edx
		mov    %eax,%ebx
		lgs    -0x000020(%ebp),%eax
		add    %gs:0x000030(%eax),%edx
		mov    %ebx,%eax
		mov    %eax,%ebx
		mov    %edx,%ecx
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%eax
		mov    %bx,%gs:0x000014(%eax)
		mov    %ecx,%gs:0x000010(%eax)
		lgs    -0x000020(%ebp),%eax
		testb  $0x000040,%gs:0x000028(%eax)
		je     _080184_jump
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000018(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x00001c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000034(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000020(%edx)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000030(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		add    %gs:0x000034(%edx),%eax
		lgs    -0x000020(%ebp),%ebx
		mov    %gs:0x00002c(%ebx),%ebx
		sub    %eax,%ebx
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		mov    %ebx,%gs:0x00002c(%edx)
		jmp    _0801de_jump

	_080184_jump:
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000018(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x00001c(%edx)

	_0801de_jump:
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000014(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000032(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000018(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000034(%edx)
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000028(%eax),%dx
		or     $0x0000a0,%dh
		imul   $0x0000c0,-0x000010(%ebp),%ebx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %ebx,%eax
		lgs    _0bdab4_data(%eax),%eax
		mov    %dx,%gs:0x000030(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000010(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000036(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%eax
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x000020(%edx),%bx
		lgs    -0x000020(%ebp),%edx
		mov    %gs:0x00001c(%edx),%ecx
		mov    -0x00002c(%ebp),%gs
		mov    %bx,%gs:0x000040(%eax)
		mov    -0x00002c(%ebp),%gs
		mov    %ecx,%gs:0x00003c(%eax)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x00000c(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000038(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000024(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00004a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movw   $0x000000,%gs:0x00003a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000038(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000044(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%eax
		imul   $0x000006,-0x000004(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movw   $0x000000,%gs:0x000048(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movl   $0x000000,%gs:0x00004c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000008(%eax),%eax
		mov    -0x00002c(%ebp),%gs
		mov    %eax,%gs:0x000050(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000040(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000054(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000044(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000056(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000048(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000058(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x00004c(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005a(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000050(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005c(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000054(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x00005e(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		mov    _0bdab8_data(%eax),%dx
		mov    %dx,-0x00002c(%ebp)
		mov    _0bdab4_data(%eax),%edx
		lgs    -0x000020(%ebp),%eax
		mov    %gs:0x000058(%eax),%ax
		mov    -0x00002c(%ebp),%gs
		mov    %ax,%gs:0x000060(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movl   $0x000000,%gs:0x000064(%edx)
		imul   $0x0000c0,-0x000010(%ebp),%edx
		imul   $0x000006,-0x000004(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movw   $0x000000,%gs:0x000068(%edx)
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)
		jmp    _080575_jump

	_080560_jump:
		jmp    _07ffdd_jump

	_080565_jump:
		movl   $0xffffffff,-0x000008(%ebp)
		jmp    _080575_jump

	_08056e_jump:
		movl   $0x000000,-0x000008(%ebp)

	_080575_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_08057d_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		cmpl   $0x000020,-0x000008(%ebp)
		jae    _08061b_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _0805d3_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		testb  $0x000010,%gs:0x000031(%edx)
		je     _0805d5_jump

	_0805d3_jump:
		jmp    _080612_jump

	_0805d5_jump:
		imul   $0x0000c0,-0x00000c(%ebp),%eax
		imul   $0x000006,-0x000008(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%eax
		andb   $0x00007f,%gs:0x000031(%eax)
		imul   $0x0000c0,-0x00000c(%ebp),%eax
		imul   $0x000006,-0x000008(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movw   $0x000000,%gs:0x000034(%edx)
		movl   $0x000000,-0x000004(%ebp)
		jmp    _080622_jump

	_080612_jump:
		movl   $0x000000,-0x000004(%ebp)
		jmp    _080622_jump

	_08061b_jump:
		movl   $0x00000a,-0x000004(%ebp)

	_080622_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0809a2_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0809b7_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0809f8_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000014(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%edx
		imul   $0x000006,-0x000010(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _080a65_jump
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movswl %gs:0x000032(%edx),%eax
		mov    %eax,-0x000004(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,%gs:0x000032(%edx)
		jmp    _080a6e_jump

	_080a65_jump:
		movl   $0x000000,-0x000008(%ebp)
		jmp    _080a74_jump

	_080a6e_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)

	_080a74_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_080c9b_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000014,%esp
		mov    %eax,-0x000014(%ebp)
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%edx
		imul   $0x000006,-0x000010(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		je     _080d08_jump
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movswl %gs:0x000054(%edx),%eax
		mov    %eax,-0x000004(%ebp)
		imul   $0x0000c0,-0x000014(%ebp),%eax
		imul   $0x000006,-0x000010(%ebp),%edx
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		mov    -0x00000c(%ebp),%eax
		mov    %ax,%gs:0x000054(%edx)
		jmp    _080d11_jump

	_080d08_jump:
		movl   $0x000000,-0x000008(%ebp)
		jmp    _080d17_jump

	_080d11_jump:
		mov    -0x000004(%ebp),%eax
		mov    %eax,-0x000008(%ebp)

	_080d17_jump:
		mov    -0x000008(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_081026_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08103b_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081050_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x00000c,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		cmpl   $0x000020,-0x000008(%ebp)
		jae    _081099_jump
		imul   $0x0000c0,-0x00000c(%ebp),%edx
		imul   $0x000006,-0x000008(%ebp),%eax
		add    %edx,%eax
		lgs    _0bdab4_data(%eax),%edx
		movswl %gs:0x000030(%edx),%eax
		test   $0x000080,%ah
		jne    _081090_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _0810a0_jump

	_081090_jump:
		movl   $0x000000,-0x000004(%ebp)
		jmp    _0810a0_jump

	_081099_jump:
		movl   $0x00000a,-0x000004(%ebp)

	_0810a0_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_081126_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08113b_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    %eax,%ecx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _07d218_func
		mov    %eax,%esi
		cmp    $0xffffffff,%eax
		je     _081172_jump
		mov    $0x000002,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _07d218_func
		mov    %eax,%edi
		mov    %esi,%edx
		xor    %ebx,%ebx
		mov    %ecx,%eax
		call   _07d218_func
		mov    %edi,%eax

	_081172_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081178_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000010,%esp
		push   %eax
		mov    %edx,%ebp
		call   _083a9f_func
		mov    %eax,0x000008(%esp)
		test   %eax,%eax
		jne    _0811a3_jump
		mov    $0x000004,%eax

	_081194_jump:
		call   _082f59_func
		mov    $0xffffffff,%eax
		jmp    _08126b_jump

	_0811a3_jump:
		test   $0x000001,%al
		jne    _0811ae_jump
		mov    $0x000006,%eax
		jmp    _081194_jump

	_0811ae_jump:
		test   $0x000040,%al
		je     _0811da_jump
		mov    %ebx,%ecx
		mov    (%esp),%ebx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edi
		mov    %eax,%esi
		test   %eax,%eax
		jge    _081269_jump
		xor    %eax,%eax
		mov    %di,%ax

	_0811d0_jump:
		call   _081b94_func
		jmp    _08126b_jump

	_0811da_jump:
		mov    %ebx,0x00000c(%esp)
		xor    %esi,%esi

	_0811e0_jump:
		mov    0x00000c(%esp),%ecx
		mov    (%esp),%ebx
		mov    %ebp,%edx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%ebx
		mov    %eax,%edi
		mov    %eax,0x000004(%esp)
		test   %eax,%eax
		jge    _081204_jump
		xor    %eax,%eax
		mov    %bx,%ax
		jmp    _0811d0_jump

	_081204_jump:
		je     _081269_jump
		xor    %eax,%edi
		mov    %ebp,%eax
		lea    (%ebx,%ebp,1),%ecx
		xor    %edx,%edx
		mov    %ecx,0x000010(%esp)
		jmp    _081246_jump

	_081215_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x00001a,%ebx
		jne    _081236_jump
		mov    0x000004(%esp),%ebp
		mov    %edi,%edx
		mov    $0x000001,%ebx
		sub    %ebp,%edx
		mov    (%esp),%eax
		inc    %edx
		call   _07d218_func
		jmp    _081269_jump

	_081236_jump:
		cmp    $0x00000d,%ebx
		je     _081244_jump
		mov    %edx,%ebx
		inc    %esi
		mov    (%eax),%cl
		inc    %edx
		mov    %cl,(%ebx,%ebp,1)

	_081244_jump:
		inc    %eax
		inc    %edi

	_081246_jump:
		cmp    0x000010(%esp),%eax
		jb     _081215_jump
		mov    0x00000c(%esp),%ecx
		mov    0x000009(%esp),%ah
		sub    %edx,%ecx
		add    %edx,%ebp
		mov    %ecx,0x00000c(%esp)
		test   $0x000020,%ah
		jne    _081269_jump
		test   %ecx,%ecx
		jne    _0811e0_jump

	_081269_jump:
		mov    %esi,%eax

	_08126b_jump:
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_081273_func:
		push   %edx
		xor    %edx,%edx
		mov    _0bd808_data,%eax
		mov    %edx,_0bd808_data
		test   %eax,%eax
		jne    _08128e_jump
		mov    $0x000001,%ah
		int    $0x000021
		and    $0x0000ff,%eax

	_08128e_jump:
		pop    %edx
		ret    



_0812a2_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		call   _08503d_func
		mov    $0xf368cb40,%ebx
		mov    $0x3cc003c9,%ecx
		mov    %eax,%edi
		mov    %edx,%esi
		call   _081734_func
		jge    _0812de_jump
		xor    %esi,%esi
		mov    $0x3ff00000,%edi
		mov    %esi,-0x00003c(%ebp)
		mov    %edi,-0x000038(%ebp)
		jmp    _0814c5_jump

	_0812de_jump:
		mov    $0xfefa39ef,%ebx
		mov    $0x40862e42,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _081734_func
		jle    _081318_jump
		cmpl   $0x000000,-0x000038(%ebp)
		jge    _081306_jump
		xor    %ebx,%ebx
		mov    %ebx,-0x00003c(%ebp)
		mov    %ebx,-0x000038(%ebp)
		jmp    _0814c5_jump

	_081306_jump:
		lea    -0x00003c(%ebp),%edx
		mov    $0x008104,%eax
		call   _082a7a_func
		jmp    _0814bf_jump

	_081318_jump:
		cmpb   $0x000000,_0bd5b9_data
		je     _081331_jump
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _085046_func
		jmp    _0814bf_jump

	_081331_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		mov    $0x652b8301,%ebx
		mov    $0x3ff71547,%ecx
		call   _07baef_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		call   _0850ef_func
		mov    -0x000038(%ebp),%edx
		mov    %eax,%esi
		mov    -0x00003c(%ebp),%eax
		lea    -0x000034(%ebp),%ebx
		call   _08503d_func
		call   _085104_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _07c13c_func
		mov    %eax,-0x000014(%ebp)
		test   %esi,%esi
		jge    _0813a5_jump
		mov    %eax,%edx
		neg    %edx
		mov    %edx,-0x000014(%ebp)
		test   %ecx,%ecx
		je     _0813a5_jump
		lea    -0x000001(%edx),%esi
		xor    %eax,%eax
		mov    $0x3ff00000,%edx
		mov    %esi,-0x000014(%ebp)
		call   _07b932_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_0813a5_jump:
		mov    -0x000038(%ebp),%eax
		xor    %edi,%edi
		test   %eax,%eax
		je     _0813ed_jump
		mov    $0x000004,%ebx
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _085130_func
		lea    -0x000034(%ebp),%ebx
		call   _085104_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)
		test   %edx,%edx
		je     _0813e0_jump
		mov    $0xfffffffc,%ebx
		call   _085130_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_0813e0_jump:
		mov    -0x000034(%ebp),%eax
		mov    -0x000030(%ebp),%edx
		call   _07c13c_func
		mov    %eax,%edi

	_0813ed_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07baef_func
		mov    $0x4f237e45,%ebx
		mov    $0x4034d053,%ecx
		mov    %eax,%esi
		mov    %edx,-0x00002c(%ebp)
		call   _07b938_func
		mov    $0x1ac13af9,%ebx
		mov    $0x3fad92de,%ecx
		mov    %eax,-0x000028(%ebp)
		mov    %edx,-0x000024(%ebp)
		mov    -0x00002c(%ebp),%edx
		mov    %esi,%eax
		call   _07baef_func
		mov    $0xa35ca6dc,%ebx
		mov    $0x401cdaa0,%ecx
		call   _07b938_func
		mov    -0x00003c(%ebp),%ebx
		mov    -0x000038(%ebp),%ecx
		call   _07baef_func
		mov    %eax,-0x000020(%ebp)
		mov    %edx,%esi
		mov    -0x000028(%ebp),%eax
		mov    -0x000024(%ebp),%edx
		mov    -0x000020(%ebp),%ebx
		mov    %esi,%ecx
		call   _07b938_func
		mov    -0x000020(%ebp),%ebx
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000018(%ebp)
		mov    %esi,%ecx
		mov    -0x000028(%ebp),%eax
		mov    -0x000024(%ebp),%edx
		call   _07b932_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x00001c(%ebp),%eax
		mov    -0x000018(%ebp),%edx
		mov    $_0c1480_data,%esi
		call   _07c468_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_081489_jump:
		test   %edi,%edi
		je     _0814b1_jump
		test   $0x000001,%di
		je     _0814aa_jump
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		mov    (%esi),%ebx
		mov    0x000004(%esi),%ecx
		call   _07baef_func
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_0814aa_jump:
		sar    %edi
		add    $0x000008,%esi
		jmp    _081489_jump

	_0814b1_jump:
		mov    -0x000014(%ebp),%ebx
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		call   _085130_func

	_0814bf_jump:
		mov    %eax,-0x00003c(%ebp)
		mov    %edx,-0x000038(%ebp)

	_0814c5_jump:
		mov    -0x00003c(%ebp),%eax
		mov    -0x000038(%ebp),%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_0814e0_func:
		or     %ecx,%ecx
		je     _081510_jump
		cmp    %dl,(%eax)

	_0814e6_jump:
		test   $0x000003,%al
		je     _0814f3_jump
		mov    %dl,(%eax)
		inc    %eax
		ror    $0x000008,%edx
		dec    %ecx
		jne    _0814e6_jump

	_0814f3_jump:
		push   %ecx
		shr    $0x000002,%ecx
		call   _081517_func
		pop    %ecx
		and    $0x000003,%ecx
		je     _081510_jump
		mov    %dl,(%eax)
		dec    %ecx
		je     _081510_jump
		mov    %dh,0x000001(%eax)
		dec    %ecx
		je     _081510_jump
		mov    %dl,0x000002(%eax)

	_081510_jump:
		ret    



_081517_func:
		or     %ecx,%ecx
		je     _081582_jump

	_08151b_jump:
		test   $0x00001f,%al
		je     _081527_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		jne    _08151b_jump

	_081527_jump:
		push   %ecx
		shr    $0x000002,%ecx
		je     _081567_jump
		dec    %ecx
		je     _081559_jump

	_081530_jump:
		mov    %edx,(%eax)
		mov    %edx,0x000004(%eax)
		dec    %ecx
		mov    %edx,0x000008(%eax)
		mov    %edx,0x00000c(%eax)
		je     _081556_jump
		cmp    %dl,0x000020(%eax)
		mov    %edx,0x000010(%eax)
		mov    %edx,0x000014(%eax)
		dec    %ecx
		mov    %edx,0x000018(%eax)
		mov    %edx,0x00001c(%eax)
		lea    0x000020(%eax),%eax
		jne    _081530_jump
		lea    -0x000010(%eax),%eax

	_081556_jump:
		lea    0x000010(%eax),%eax

	_081559_jump:
		mov    %edx,(%eax)
		mov    %edx,0x000004(%eax)
		mov    %edx,0x000008(%eax)
		mov    %edx,0x00000c(%eax)
		lea    0x000010(%eax),%eax

	_081567_jump:
		pop    %ecx
		and    $0x000003,%ecx
		je     _081582_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		je     _081582_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax
		dec    %ecx
		je     _081582_jump
		mov    %edx,(%eax)
		lea    0x000004(%eax),%eax

	_081582_jump:
		ret    



_081583_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %edx,%edi
		mov    %ebx,%ebp
		mov    %ecx,%ebx
		mov    %ebp,%edx
		mov    %eax,%esi
		call   _0851ce_func
		mov    0x000000(%ebp),%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_08159c_func:
		push   %ecx
		push   %eax
		push   %edx
		mov    %ebx,%edx
		mov    $0x00001a,%ah
		int    $0x000021
		pop    %ecx
		pop    %edx
		mov    $0x00004e,%ah
		int    $0x000021
		call   _083b0a_func
		mov    %ebx,%edx
		call   _0815d8_func
		pop    %ecx
		ret    



_0815d8_func:
		cmpb   $0x000009,_0bd816_data
		jne    _0815fa_jump
		push   %eax
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		mov    $0x00002f,%ah
		int    $0x000021
		mov    %ebx,%esi
		mov    %edx,%edi
		mov    $0x00002b,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %eax

	_0815fa_jump:
		ret    



_08161e_func:
		push   %ebx
		push   %edx
		sub    $0x000024,%esp
		mov    %eax,%edx
		mov    %esp,%eax
		call   _0855ac_func
		cmp    $0x0001f4,%eax
		jl     _081636_jump
		incl   (%esp)

	_081636_jump:
		mov    %esp,%eax
		call   _08566f_func
		mov    %eax,%ebx
		test   %edx,%edx
		je     _081645_jump
		mov    %eax,(%edx)

	_081645_jump:
		mov    %ebx,%eax
		add    $0x000024,%esp
		pop    %edx
		pop    %ebx
		ret    



_08164d_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %ebx,%ecx
		cmp    %eax,%edx
		je     _081696_jump
		jae    _081680_jump
		lea    (%edx,%ebx,1),%edi
		cmp    %eax,%edi
		jbe    _081680_jump
		lea    -0x000001(%edi),%esi
		lea    (%eax,%ebx,1),%edi
		mov    %ds,%edx
		dec    %edi
		push   %es
		mov    %edx,%es
		std    
		dec    %esi
		dec    %edi
		shr    %ecx
		rep movsw %ds:(%esi),%es:(%edi)
		adc    %ecx,%ecx
		inc    %esi
		inc    %edi
		data16 rep movsb %ds:(%esi),%es:(%edi)
		pop    %es
		cld    
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_081680_jump:
		mov    %edx,%esi
		mov    %eax,%edi
		mov    %ds,%edx
		push   %es
		mov    %edx,%es
		push   %ecx
		shr    $0x000002,%ecx
		rep movsl %ds:(%esi),%es:(%edi)
		pop    %ecx
		and    $0x000003,%ecx
		rep movsb %ds:(%esi),%es:(%edi)
		pop    %es

	_081696_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0816ac_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07baef_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x3ff00000,%edx
		xor    %eax,%eax
		call   _07b932_func
		test   %edx,%edx
		jge    _0816e6_jump
		lea    -0x000010(%ebp),%edx
		mov    $0x002041,%eax
		call   _082a7a_func
		jmp    _08172c_jump

	_0816e6_jump:
		jne    _081700_jump
		cmpl   $0x000000,-0x00000c(%ebp)
		jge    _0816fa_jump
		mov    $0x54442d18,%eax
		mov    $0x400921fb,%edx
		jmp    _08172c_jump

	_0816fa_jump:
		xor    %eax,%eax
		xor    %edx,%edx
		jmp    _08172c_jump

	_081700_jump:
		call   _07c0da_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		call   _07c468_func
		call   _0857d5_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    $0x54442d15,%eax
		mov    $0x3ff921fb,%edx
		call   _07b932_func

	_08172c_jump:
		lea    -0x000008(%ebp),%esp
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_081734_func:
		push   %ebp
		test   $0x7ff00000,%edx
		jne    _08173f_jump
		sub    %edx,%edx

	_08173f_jump:
		test   $0x7ff00000,%ecx
		jne    _081749_jump
		sub    %ecx,%ecx

	_081749_jump:
		mov    %ecx,%ebp
		xor    %edx,%ebp
		mov    $0x000000,%ebp
		js     _081760_jump
		cmp    %ecx,%edx
		jne    _08175a_jump
		cmp    %ebx,%eax

	_08175a_jump:
		je     _081768_jump
		rcr    %ecx
		xor    %ecx,%edx

	_081760_jump:
		add    %edx,%edx
		sbb    $0x000000,%ebp
		add    %ebp,%ebp
		inc    %ebp

	_081768_jump:
		mov    %ebp,%eax
		pop    %ebp
		ret    



_08176c_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		mov    0x000010(%eax),%eax
		call   _08398b_func
		mov    %eax,%ebx
		cmp    $0xffffffff,%eax
		je     _081798_jump
		mov    0x000004(%edx),%ecx
		test   %ecx,%ecx
		je     _081796_jump
		testb  $0x000010,0x00000d(%edx)
		je     _081792_jump
		lea    (%ecx,%eax,1),%ebx
		jmp    _081796_jump

	_081792_jump:
		mov    %eax,%ebx
		sub    %ecx,%ebx

	_081796_jump:
		mov    %ebx,%eax

	_081798_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0817c1_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000010,%esp
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %ebx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		call   _0850ef_func
		mov    -0x00000c(%ebp),%edx
		mov    %eax,%esi
		mov    -0x000010(%ebp),%eax
		call   _0850ef_func
		test   %esi,%esi
		jne    _081828_jump
		test   %eax,%eax
		jne    _081804_jump
		lea    -0x000010(%ebp),%ebx
		lea    -0x000018(%ebp),%edx
		mov    $0x00204d,%eax
		call   _082a84_func
		jmp    _0818a7_jump

	_081804_jump:
		jge    _08181b_jump
		mov    $0x54442d18,%edx
		mov    $0x400921fb,%ebx

	_081810_jump:
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		jmp    _0818ad_jump

	_08181b_jump:
		xor    %edi,%edi
		mov    %esi,-0x00000c(%ebp)
		mov    %edi,-0x000010(%ebp)
		jmp    _0818ad_jump

	_081828_jump:
		test   %eax,%eax
		jne    _08184e_jump
		test   %esi,%esi
		jge    _081842_jump
		mov    $0x54442d15,%ecx
		mov    $0xbff921fb,%esi
		mov    %ecx,-0x000010(%ebp)
		mov    %esi,-0x00000c(%ebp)
		jmp    _0818ad_jump

	_081842_jump:
		mov    $0x54442d15,%edx
		mov    $0x3ff921fb,%ebx
		jmp    _081810_jump

	_08184e_jump:
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    -0x000010(%ebp),%ebx
		mov    -0x00000c(%ebp),%ecx
		call   _07c468_func
		call   _0857d5_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		call   _0850ef_func
		test   %esi,%esi
		jl     _08188e_jump
		test   %eax,%eax
		jge    _0818ad_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0x54442d18,%ebx
		mov    $0x400921fb,%ecx
		call   _07b938_func
		jmp    _0818a7_jump

	_08188e_jump:
		test   %eax,%eax
		jle    _0818ad_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0x54442d18,%ebx
		mov    $0xc00921fb,%ecx
		call   _07b938_func

	_0818a7_jump:
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)

	_0818ad_jump:
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0818ba_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %fs
		push   %gs
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		test   %eax,%eax
		je     _0818d3_jump
		cmp    $0xffffffd4,%eax
		jbe    _0818da_jump

	_0818d3_jump:
		xor    %eax,%eax
		jmp    _08198e_jump

	_0818da_jump:
		mov    $_0bd5ac_data,%ebp
		lea    0x000003(%esi),%edi
		xor    %ah,%ah
		xor    %edx,%edx
		mov    %ah,(%esp)
		and    $0x00fffc,%di

	_0818ed_jump:
		mov    %edi,%eax
		cmp    $0x00000c,%edi
		jae    _0818f9_jump
		mov    $0x00000c,%eax

	_0818f9_jump:
		cmp    _0bd5b4_data,%eax
		jbe    _081919_jump
		mov    _0bd5b0_data,%ecx
		test   %ecx,%ecx
		jne    _081951_jump

	_08190b_jump:
		mov    %ecx,_0bd5b4_data
		mov    _0bd5ac_data,%ecx
		jmp    _081951_jump

	_081919_jump:
		xor    %ecx,%ecx
		jmp    _08190b_jump

	_08191d_jump:
		mov    %ds,%edx
		mov    %ebp,%eax
		mov    %ecx,_0bd5b0_data
		and    $0x00ffff,%edx
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _085946_func
		mov    %eax,%edx
		test   %eax,%eax
		jne    _081984_jump
		mov    _0bd5b4_data,%ebx
		mov    0x000014(%ecx),%eax
		cmp    %ebx,%eax
		jbe    _08194e_jump
		mov    %eax,_0bd5b4_data

	_08194e_jump:
		mov    0x000008(%ecx),%ecx

	_081951_jump:
		test   %ecx,%ecx
		jne    _08191d_jump
		cmpb   $0x000000,(%esp)
		jne    _081966_jump
		mov    %esi,%eax
		call   _085ed8_func
		test   %eax,%eax
		jne    _08197b_jump

	_081966_jump:
		mov    %esi,%eax
		call   _0860a1_func
		test   %eax,%eax
		je     _081984_jump
		xor    %cl,%cl
		mov    %cl,(%esp)
		jmp    _0818ed_jump

	_08197b_jump:
		movb   $0x000001,(%esp)
		jmp    _0818ed_jump

	_081984_jump:
		xor    %ch,%ch
		mov    %edx,%eax
		mov    %ch,_0e5e34_data

	_08198e_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %gs
		pop    %fs
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08199d_func:
		push   %ebx
		imul   %edx,%eax
		mov    %eax,%ebx
		call   _0818ba_func
		test   %eax,%eax
		je     _0819b3_jump
		xor    %edx,%edx
		call   _07c050_func

	_0819b3_jump:
		pop    %ebx
		ret    



_0819b5_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		mov    %eax,%esi
		test   %eax,%eax
		je     _081a31_jump
		mov    _0e5e1c_data,%ecx
		test   %ecx,%ecx
		je     _0819d7_jump
		cmp    %eax,%ecx
		ja     _0819d7_jump
		cmp    0x000008(%ecx),%eax
		jb     _0819f1_jump

	_0819d7_jump:
		mov    _0bd5ac_data,%ecx
		jmp    _0819ea_jump

	_0819df_jump:
		cmp    %esi,%ecx
		ja     _0819e7_jump
		cmp    %ebx,%esi
		jb     _0819f1_jump

	_0819e7_jump:
		mov    0x000008(%ecx),%ecx

	_0819ea_jump:
		mov    0x000008(%ecx),%ebx
		test   %ebx,%ebx
		jne    _0819df_jump

	_0819f1_jump:
		mov    $_0bd5ac_data,%eax
		mov    %ds,%edx
		and    $0x00ffff,%edx
		mov    %ecx,%ebx
		mov    %esi,%eax
		call   _0859ee_func
		mov    _0bd5b0_data,%ebp
		mov    %ecx,_0e5e1c_data
		cmp    %ebp,%ecx
		jae    _081a29_jump
		mov    _0bd5b4_data,%eax
		mov    0x000014(%ecx),%edx
		cmp    %eax,%edx
		jbe    _081a29_jump
		mov    %edx,_0bd5b4_data

	_081a29_jump:
		xor    %ah,%ah
		mov    %ah,_0e5e34_data

	_081a31_jump:
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_081a38_jump:
		sub    %edx,%edx
		sub    %eax,%eax
		ret    

	_081a3d_jump:
		mov    $0x000083,%eax
		call   _08612e_func
		jmp    _081a5a_jump

	_081a49_jump:
		push   %eax
		call   _082f65_func
		mov    $0x000084,%eax
		call   _08612e_func
		pop    %eax

	_081a5a_jump:
		and    $0x80000000,%eax
		or     $0x7ff00000,%eax
		mov    %eax,%edx
		sub    %eax,%eax
		ret    



_081a91_func:
		push   %ebx
		mov    %eax,%ebx
		mov    %edx,%eax
		mov    (%ebx),%edx
		call   _07ccba_func
		incl   0x000010(%ebx)
		pop    %ebx
		ret    



_081aa2_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%esi
		mov    0x00000c(%eax),%ebp
		mov    0x00000c(%eax),%ah
		mov    0x000008(%esi),%ecx
		and    $0x0000cf,%ah
		and    $0x000030,%ebp
		mov    %ah,0x00000c(%esi)
		test   %ecx,%ecx
		jne    _081ac5_jump
		mov    %esi,%eax
		call   _08381c_func

	_081ac5_jump:
		mov    0x00000d(%esi),%cl
		xor    %edi,%edi
		test   $0x000004,%cl
		je     _081ae0_jump
		mov    %cl,%ch
		and    $0x0000fa,%ch
		mov    %ch,%al
		or     $0x000001,%al
		mov    $0x000001,%edi
		mov    %al,0x00000d(%esi)

	_081ae0_jump:
		mov    $_081a91_func,%ecx
		mov    %esi,%eax
		call   _081ebe_func
		mov    %eax,%edx
		test   %edi,%edi
		je     _081b07_jump
		mov    0x00000d(%esi),%ah
		and    $0x0000fa,%ah
		mov    %ah,%bl
		or     $0x000004,%bl
		mov    %esi,%eax
		mov    %bl,0x00000d(%esi)
		call   _0838b2_func

	_081b07_jump:
		testb  $0x000020,0x00000c(%esi)
		je     _081b12_jump
		mov    $0xffffffff,%edx

	_081b12_jump:
		mov    0x00000c(%esi),%edi
		or     %ebp,%edi
		mov    %edx,%eax
		mov    %edi,0x00000c(%esi)
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_081b21_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    $0x00002c,%ah
		int    $0x000021
		xor    %eax,%eax
		mov    %dh,%al
		mov    %eax,%ebx

	_081b2f_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		xor    %eax,%eax
		mov    %dh,%al
		cmp    %eax,%ebx
		je     _081b2f_jump
		xor    %esi,%esi
		mov    %al,%bl

	_081b3f_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		inc    %esi
		cmp    %dh,%bl
		je     _081b3f_jump
		mov    %esi,_0e5e24_data
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_081b53_jump:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		test   %eax,%eax
		je     _081b84_jump
		imul   _0e5e24_data,%eax
		mov    $0x0003e8,%ebx
		add    $0x0001f4,%eax
		xor    %edx,%edx
		div    %ebx
		test   %eax,%eax
		jne    _081b75_jump
		inc    %eax

	_081b75_jump:
		mov    %eax,%esi
		xor    %eax,%eax
		mov    %al,%bl

	_081b7b_jump:
		mov    $0x00002c,%ah
		int    $0x000021
		cmp    %dh,%bl
		dec    %esi
		jne    _081b7b_jump

	_081b84_jump:
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081b94_func:
		push   %ebx
		push   %edx
		mov    %eax,%ebx
		mov    %al,%dl
		xor    %eax,%eax
		mov    %bl,%al
		call   _082f7c_func
		cmp    $0x000100,%ebx
		jae    _081bee_jump
		xor    %eax,%eax
		mov    _0bd81f_data,%al
		cmp    $0x000003,%eax
		jl     _081bd4_jump
		xor    %ebx,%ebx
		mov    %dl,%bl
		cmp    $0x000050,%ebx
		jne    _081bc4_jump
		mov    $0x00000e,%dl
		jmp    _081bd4_jump

	_081bc4_jump:
		cmp    $0x000022,%ebx
		jl     _081bcd_jump
		mov    $0x000013,%dl
		jmp    _081bd4_jump

	_081bcd_jump:
		cmp    $0x000020,%ebx
		jl     _081bd4_jump
		mov    $0x000005,%dl

	_081bd4_jump:
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x000013,%eax
		jle    _081bdf_jump
		mov    $0x000013,%dl

	_081bdf_jump:
		xor    %ebx,%ebx
		mov    %dl,%bl
		mov    _0bd7cd_data(%ebx),%eax
		sar    $0x000018,%eax
		jmp    _081bf8_jump

	_081bee_jump:
		mov    %ebx,%eax
		shr    $0x000008,%eax
		and    $0x0000ff,%eax

	_081bf8_jump:
		call   _082f59_func
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ebx
		ret    



_081c05_func:
		push   %edx
		push   %ebp
		mov    %esp,%ebp
		mov    _0bd800_data,%edx
		add    $0x000003,%edx
		and    $0x0000fc,%dl
		call   _086135_func
		cmp    %eax,%edx
		jae    _081c26_jump
		mov    %edx,%eax
		sub    %eax,%esp
		mov    %esp,%eax
		jmp    _081c28_jump

	_081c26_jump:
		xor    %eax,%eax

	_081c28_jump:
		mov    _0bd800_data,%edx
		add    %edx,%eax
		mov    %eax,_0bd804_data
		call   _08613e_func
		mov    _0e5e3c_data,%edx
		mov    _0e5e38_data,%eax
		call   _018198_func
		call   _07bcaf_func
		mov    %ebp,%esp
		pop    %ebp
		pop    %edx
		ret    



_081c54_func:
		push   %esi
		push   %edi
		push   %ebx
		push   %edx
		push   %es
		mov    %eax,%edx

	_081c5b_jump:
		ds mov $_0c15e8_data,%esi
		ds mov $_0c1612_data,%edi
		mov    %edi,%ebx
		mov    %dl,%al

	_081c6b_jump:
		cmp    %edi,%esi
		jae    _081c83_jump
		cmpb   $0x000002,(%esi)
		je     _081c7e_jump
		cmp    %al,0x000001(%esi)
		ja     _081c7e_jump
		mov    %esi,%ebx
		mov    0x000001(%esi),%al

	_081c7e_jump:
		add    $0x000006,%esi
		jmp    _081c6b_jump

	_081c83_jump:
		cmp    %edi,%ebx
		je     _081c99_jump
		mov    0x000002(%ebx),%eax
		or     %eax,%eax
		je     _081c94_jump
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx

	_081c94_jump:
		movb   $0x000002,(%ebx)
		jmp    _081c5b_jump

	_081c99_jump:
		pop    %es
		pop    %edx
		pop    %ebx
		pop    %edi
		pop    %esi
		ret    



_081c9f_func:
		push   %esi
		push   %edi
		push   %ebx
		push   %es
		mov    %dl,%dh
		mov    %al,%dl

	_081ca7_jump:
		ds mov $_0c1612_data,%esi
		ds mov $_0c1618_data,%edi
		mov    %edi,%ebx
		mov    %dl,%al

	_081cb7_jump:
		cmp    %edi,%esi
		jae    _081ccf_jump
		cmpb   $0x000002,(%esi)
		je     _081cca_jump
		cmp    0x000001(%esi),%al
		ja     _081cca_jump
		mov    %esi,%ebx
		mov    0x000001(%esi),%al

	_081cca_jump:
		add    $0x000006,%esi
		jmp    _081cb7_jump

	_081ccf_jump:
		cmp    %edi,%ebx
		je     _081ce9_jump
		cmp    %dh,%al
		ja     _081ce4_jump
		mov    0x000002(%ebx),%eax
		or     %eax,%eax
		je     _081ce4_jump
		push   %ds
		pop    %es
		push   %edx
		call   *%eax
		pop    %edx

	_081ce4_jump:
		movb   $0x000002,(%ebx)
		jmp    _081ca7_jump

	_081ce9_jump:
		pop    %es
		pop    %ebx
		pop    %edi
		pop    %esi
		ret    



_081cee_func:
		ret    



_081cef_func:
		push   %ebx
		push   %edx
		mov    $_086149_func,%edx
		mov    $_0862b1_func,%ebx
		mov    %edx,_0bf944_data
		mov    %ebx,_0bf948_data
		pop    %edx
		pop    %ebx
		ret    



_081d0a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00000c,%esp
		mov    %esp,%ebx
		mov    _0bd7ec_data,%eax
		xor    %edx,%edx
		call   _081dcb_func
		mov    (%esp),%ecx
		inc    %eax
		mov    _0bd7ec_data,%edx
		mov    %eax,0x000008(%esp)
		sub    %edx,%ecx
		shl    $0x000002,%eax
		inc    %ecx
		mov    %eax,0x000004(%esp)
		add    $0x000004,%eax
		add    %ecx,%eax
		call   _0818ba_func
		mov    %eax,%ebp
		test   %eax,%eax
		je     _081da4_jump
		mov    %esp,%ebx
		mov    _0bd7ec_data,%esi
		add    %ecx,%eax
		mov    %ebp,%edi
		mov    %eax,_0bd5a4_data
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    _0bd5a4_data,%ecx
		mov    _0bd7f0_data,%eax
		lea    0x000004(%ecx),%edx
		mov    %eax,(%ecx)
		mov    %ebp,%eax
		mov    0x000004(%esp),%esi
		call   _081dcb_func
		mov    _0bd5a4_data,%ecx
		mov    0x000008(%esp),%eax
		add    %esi,%ecx
		mov    %eax,_0bd5a0_data
		movl   $0x000000,(%ecx)
		jmp    _081dae_jump

	_081da4_jump:
		mov    %eax,_0bd5a4_data
		mov    %eax,_0bd5a0_data

	_081dae_jump:
		mov    0x000008(%esp),%eax
		mov    %eax,_0e5e38_data
		mov    _0bd5a4_data,%eax
		mov    %eax,_0e5e3c_data
		add    $0x00000c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_081dcb_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %edx,%esi
		mov    %ebx,(%esp)
		xor    %edi,%edi

	_081dd9_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000020,%edx
		je     _081de7_jump
		cmp    $0x000009,%edx
		jne    _081dea_jump

	_081de7_jump:
		inc    %eax
		jmp    _081dd9_jump

	_081dea_jump:
		test   %dl,%dl
		je     _081eaf_jump
		cmp    $0x000022,%edx
		jne    _081e3a_jump
		inc    %eax
		mov    %eax,%ebp
		mov    %eax,%edx

	_081dfc_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x000022,%ebx
		je     _081e75_jump
		test   %bl,%bl
		je     _081e75_jump
		cmp    $0x00005c,%ebx
		jne    _081e26_jump
		xor    %ebx,%ebx
		mov    0x000001(%eax),%bl
		cmp    $0x000022,%ebx
		je     _081e25_jump
		cmp    $0x00005c,%ebx
		jne    _081e26_jump

	_081e25_jump:
		inc    %eax

	_081e26_jump:
		lea    0x000001(%eax),%ebx
		test   %esi,%esi
		je     _081e36_jump
		mov    (%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		inc    %edx
		jmp    _081dfc_jump

	_081e36_jump:
		mov    %ebx,%eax
		jmp    _081dfc_jump

	_081e3a_jump:
		mov    %eax,%ebp
		mov    %eax,%edx

	_081e3e_jump:
		cmpb   $0x000000,(%eax)
		je     _081e75_jump
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x000020,%ebx
		je     _081e75_jump
		cmp    $0x000009,%ebx
		je     _081e75_jump
		cmp    $0x00005c,%ebx
		jne    _081e61_jump
		xor    %ebx,%ebx
		mov    0x000001(%eax),%bl
		cmp    $0x000022,%ebx
		jne    _081e61_jump
		inc    %eax

	_081e61_jump:
		lea    0x000001(%eax),%ebx
		test   %esi,%esi
		je     _081e71_jump
		mov    (%eax),%al
		mov    %al,(%edx)
		mov    %ebx,%eax
		inc    %edx
		jmp    _081e3e_jump

	_081e71_jump:
		mov    %ebx,%eax
		jmp    _081e3e_jump

	_081e75_jump:
		lea    0x000001(%eax),%ebx
		mov    %ebx,0x000004(%esp)
		lea    0x000001(%edi),%ebx
		test   %esi,%esi
		je     _081e9e_jump
		mov    %ebp,(%esi,%edi,4)
		mov    %ebx,%edi
		mov    (%eax),%bl
		test   %bl,%bl
		jne    _081e92_jump
		mov    %bl,(%edx)
		jmp    _081eaf_jump

	_081e92_jump:
		mov    0x000004(%esp),%eax
		movb   $0x000000,(%edx)
		jmp    _081dd9_jump

	_081e9e_jump:
		mov    (%eax),%ch
		mov    %ebx,%edi
		test   %ch,%ch
		je     _081eaf_jump
		mov    0x000004(%esp),%eax
		jmp    _081dd9_jump

	_081eaf_jump:
		mov    (%esp),%edx
		mov    %eax,(%edx)
		mov    %edi,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_081ebe_func:
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x00004c,%esp
		mov    %ebx,%esi
		mov    %ecx,0x000044(%esp)
		xor    %bl,%bl
		mov    %eax,0x000028(%esp)
		mov    %bl,0x000048(%esp)
		mov    %bl,0x00003c(%esp)
		xor    %ebx,%ebx
		mov    %edx,%edi
		mov    %ebx,0x000038(%esp)
		mov    $0x000004,%ebp
		jmp    _081f64_jump

	_081eeb_jump:
		lea    0x000028(%esp),%ebx
		mov    %esi,%edx
		call   _082198_func
		mov    %eax,%edi
		mov    (%eax),%al
		inc    %edi
		mov    %al,0x00003d(%esp)
		test   %al,%al
		je     _08218c_jump
		xor    %eax,%eax
		mov    0x00003d(%esp),%al
		cmp    $0x00006e,%eax
		jne    _082020_jump
		mov    0x00003c(%esp),%al
		xor    %edx,%edx
		and    $0x000020,%al
		mov    %al,%dl
		mov    0x00003c(%esp),%ah
		and    $0x000040,%ah
		mov    0x00003c(%esp),%al
		and    $0x000080,%al
		test   %edx,%edx
		je     _081f95_jump
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _081f4c_jump
		mov    (%esi),%ecx
		add    $0x000008,%ecx
		mov    %ecx,(%esi)
		les    -0x000008(%ecx),%edx

	_081f43_jump:
		mov    0x000038(%esp),%eax
		mov    %eax,%es:(%edx)
		jmp    _081f64_jump

	_081f4c_jump:
		mov    %ah,%al
		and    $0x0000ff,%eax
		je     _081f8a_jump
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x000004(%ebx),%edx

	_081f5e_jump:
		mov    0x000038(%esp),%eax
		mov    %eax,(%edx)

	_081f64_jump:
		mov    (%edi),%cl
		test   %cl,%cl
		je     _08218c_jump
		xor    %edx,%edx
		mov    %cl,%dl
		lea    0x000001(%edi),%eax
		cmp    $0x000025,%edx
		je     _081eeb_jump
		mov    %eax,%edi
		lea    0x000028(%esp),%eax
		call   *0x000044(%esp)
		jmp    _081f64_jump

	_081f8a_jump:
		mov    (%esi),%edx
		add    %ebp,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		jmp    _081f5e_jump

	_081f95_jump:
		mov    0x00003c(%esp),%dl
		and    $0x000010,%dl
		and    $0x0000ff,%edx
		je     _081fe6_jump
		xor    %edx,%edx
		mov    %al,%dl
		test   %edx,%edx
		je     _081fc0_jump
		mov    (%esi),%eax
		add    $0x000008,%eax
		mov    %eax,(%esi)
		les    -0x000008(%eax),%edx
		mov    0x000038(%esp),%eax
		mov    %ax,%es:(%edx)
		jmp    _081f64_jump

	_081fc0_jump:
		mov    %ah,%al
		and    $0x0000ff,%eax
		je     _081fdb_jump
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x000004(%ecx),%edx

	_081fd2_jump:
		mov    0x000038(%esp),%eax
		mov    %ax,(%edx)
		jmp    _081f64_jump

	_081fdb_jump:
		mov    (%esi),%ebx
		add    %ebp,%ebx
		mov    %ebx,(%esi)
		mov    -0x000004(%ebx),%edx
		jmp    _081fd2_jump

	_081fe6_jump:
		mov    %al,%dl
		test   %edx,%edx
		je     _081ffb_jump
		mov    (%esi),%edx
		add    $0x000008,%edx
		mov    %edx,(%esi)
		les    -0x000008(%edx),%edx
		jmp    _081f43_jump

	_081ffb_jump:
		mov    %ah,%al
		and    $0x0000ff,%eax
		je     _082012_jump
		mov    (%esi),%eax
		add    %ebp,%eax
		mov    %eax,(%esi)
		mov    -0x000004(%eax),%edx
		jmp    _081f5e_jump

	_082012_jump:
		mov    (%esi),%ecx
		add    %ebp,%ecx
		mov    %ecx,(%esi)
		mov    -0x000004(%ecx),%edx
		jmp    _081f5e_jump

	_082020_jump:
		lea    0x000048(%esp),%ecx
		lea    0x000028(%esp),%ebx
		mov    %esp,%eax
		mov    %esi,%edx
		call   _0824d6_func
		mov    %eax,%ebx
		mov    0x00003c(%esp),%al
		mov    %edx,%es
		and    $0x000008,%al
		and    $0x0000ff,%eax
		jne    _082068_jump
		mov    0x00003e(%esp),%al
		cmp    $0x000020,%eax
		jne    _082068_jump

	_08204b_jump:
		mov    0x00002c(%esp),%eax
		dec    %eax
		mov    %eax,0x00002c(%esp)
		test   %eax,%eax
		jl     _082068_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    0x00003e(%esp),%dl
		call   *0x000044(%esp)
		jmp    _08204b_jump

	_082068_jump:
		lea    0x00003f(%esp),%ecx

	_08206c_jump:
		mov    (%ecx),%al
		test   %al,%al
		je     _082081_jump
		xor    %edx,%edx
		mov    %al,%dl
		lea    0x000028(%esp),%eax
		inc    %ecx
		call   *0x000044(%esp)
		jmp    _08206c_jump

	_082081_jump:
		mov    0x000034(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000034(%esp)
		test   %eax,%eax
		je     _08209f_jump
		mov    $0x000030,%edx
		lea    0x000028(%esp),%eax
		call   *0x000044(%esp)
		jmp    _082081_jump

	_08209f_jump:
		mov    0x00003c(%esp),%al
		and    $0x000008,%al
		and    $0x0000ff,%eax
		jne    _0820d2_jump
		mov    0x00003e(%esp),%al
		cmp    $0x000020,%eax
		je     _0820d2_jump

	_0820b5_jump:
		mov    0x00002c(%esp),%eax
		dec    %eax
		mov    %eax,0x00002c(%esp)
		test   %eax,%eax
		jl     _0820d2_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    0x00003e(%esp),%dl
		call   *0x000044(%esp)
		jmp    _0820b5_jump

	_0820d2_jump:
		xor    %eax,%eax
		mov    0x00003d(%esp),%al
		cmp    $0x000073,%eax
		je     _0820e2_jump
		cmp    $0x000053,%eax
		jne    _08212f_jump

	_0820e2_jump:
		mov    0x00003c(%esp),%al
		and    $0x000020,%al
		and    $0x0000ff,%eax
		je     _082110_jump

	_0820ef_jump:
		mov    0x000030(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000030(%esp)
		test   %eax,%eax
		je     _08214e_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x000044(%esp)
		add    $0x000002,%ebx
		jmp    _0820ef_jump

	_082110_jump:
		mov    0x000030(%esp),%eax
		lea    -0x000001(%eax),%edx
		mov    %edx,0x000030(%esp)
		test   %eax,%eax
		je     _08214e_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x000044(%esp)
		inc    %ebx
		jmp    _082110_jump

	_08212f_jump:
		mov    0x000030(%esp),%eax
		lea    -0x000001(%eax),%ecx
		mov    %ecx,0x000030(%esp)
		test   %eax,%eax
		je     _08214e_jump
		xor    %edx,%edx
		lea    0x000028(%esp),%eax
		mov    %es:(%ebx),%dl
		call   *0x000044(%esp)
		inc    %ebx
		jmp    _08212f_jump

	_08214e_jump:
		mov    0x00003c(%esp),%al
		and    $0x000008,%al
		and    $0x0000ff,%eax
		je     _081f64_jump
		cmpl   $0x000000,0x00002c(%esp)
		jle    _081f64_jump

	_08216a_jump:
		mov    0x00002c(%esp),%eax
		lea    -0x000001(%eax),%edx
		mov    %edx,0x00002c(%esp)
		test   %eax,%eax
		je     _081f64_jump
		mov    $0x000020,%edx
		lea    0x000028(%esp),%eax
		call   *0x000044(%esp)
		jmp    _08216a_jump

	_08218c_jump:
		mov    0x000038(%esp),%eax
		add    $0x00004c,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret    



_082198_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		movb   $0x000000,0x000017(%ebx)
		mov    %ebx,%edx
		movb   $0x000020,0x000016(%ebx)
		call   _0822d6_func
		movl   $0x000000,0x000004(%ebx)
		mov    (%eax),%dl
		and    $0x0000ff,%edx
		cmp    $0x000030,%edx
		jl     _0821e6_jump
		cmp    $0x000039,%edx
		jg     _0821e6_jump

	_0821c5_jump:
		imul   $0x00000a,0x000004(%ebx),%ecx
		xor    %edx,%edx
		mov    (%eax),%dl
		sub    $0x000030,%edx
		inc    %eax
		add    %edx,%ecx
		xor    %edx,%edx
		mov    %ecx,0x000004(%ebx)
		mov    (%eax),%dl
		cmp    $0x000030,%edx
		jl     _082211_jump
		cmp    $0x000039,%edx
		jle    _0821c5_jump
		jmp    _082211_jump

	_0821e6_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x00002a,%edx
		jne    _082211_jump
		mov    (%esi),%edx
		add    $0x000004,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		mov    %edx,0x000004(%ebx)
		test   %edx,%edx
		jge    _082210_jump
		mov    %edx,%edi
		mov    0x000014(%ebx),%dl
		neg    %edi
		or     $0x000008,%dl
		mov    %edi,0x000004(%ebx)
		mov    %dl,0x000014(%ebx)

	_082210_jump:
		inc    %eax

	_082211_jump:
		movl   $0xffffffff,0x000008(%ebx)
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x00002e,%edx
		jne    _08226a_jump
		inc    %eax
		movl   $0x000000,0x000008(%ebx)
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x00002a,%edx
		jne    _08224d_jump
		mov    (%esi),%edx
		add    $0x000004,%edx
		mov    %edx,(%esi)
		mov    -0x000004(%edx),%edx
		mov    %edx,0x000008(%ebx)
		test   %edx,%edx
		jge    _08224a_jump
		movl   $0xffffffff,0x000008(%ebx)

	_08224a_jump:
		inc    %eax
		jmp    _08226a_jump

	_08224d_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000030,%edx
		jl     _08226a_jump
		cmp    $0x000039,%edx
		jg     _08226a_jump
		imul   $0x00000a,0x000008(%ebx),%ecx
		sub    $0x000030,%edx
		add    %edx,%ecx
		inc    %eax
		mov    %ecx,0x000008(%ebx)
		jmp    _08224d_jump

	_08226a_jump:
		mov    (%eax),%dl
		lea    0x000001(%eax),%ecx
		cmp    $0x00004e,%dl
		jb     _08228f_jump
		jbe    _0822cc_jump
		cmp    $0x00006c,%dl
		jb     _082286_jump
		jbe    _08229f_jump
		cmp    $0x000077,%dl
		je     _08229f_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_082286_jump:
		cmp    $0x000068,%dl
		je     _0822ad_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_08228f_jump:
		cmp    $0x000046,%dl
		jb     _0822d2_jump
		jbe    _0822c2_jump
		cmp    $0x00004c,%dl
		je     _0822b3_jump
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_08229f_jump:
		mov    0x000014(%ebx),%dh
		or     $0x000020,%dh
		inc    %eax

	_0822a6_jump:
		mov    %dh,0x000014(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0822ad_jump:
		orb    $0x000010,0x000014(%ebx)
		jmp    _0822d0_jump

	_0822b3_jump:
		mov    0x000014(%ebx),%dl
		or     $0x000040,%dl
		mov    %ecx,%eax
		mov    %dl,0x000014(%ebx)
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_0822c2_jump:
		mov    0x000014(%ebx),%dh
		or     $0x000080,%dh
		mov    %ecx,%eax
		jmp    _0822a6_jump

	_0822cc_jump:
		orb    $0x000040,0x000014(%ebx)

	_0822d0_jump:
		mov    %ecx,%eax

	_0822d2_jump:
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0822d6_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		movb   $0x000000,0x000014(%edx)

	_0822de_jump:
		xor    %eax,%eax
		mov    (%ebx),%al
		cmp    $0x00002d,%eax
		jne    _0822ed_jump
		orb    $0x000008,0x000014(%edx)
		jmp    _08232d_jump

	_0822ed_jump:
		cmp    $0x000023,%eax
		jne    _0822f8_jump
		orb    $0x000001,0x000014(%edx)
		jmp    _08232d_jump

	_0822f8_jump:
		cmp    $0x00002b,%eax
		jne    _08230d_jump
		mov    0x000014(%edx),%cl
		or     $0x000004,%cl
		mov    %cl,%ch
		and    $0x0000fd,%ch
		mov    %ch,0x000014(%edx)
		jmp    _08232d_jump

	_08230d_jump:
		cmp    $0x000020,%eax
		jne    _082324_jump
		mov    0x000014(%edx),%al
		and    $0x000004,%al
		and    $0x0000ff,%eax
		jne    _08232d_jump
		orb    $0x000002,0x000014(%edx)
		jmp    _08232d_jump

	_082324_jump:
		cmp    $0x000030,%eax
		jne    _082330_jump
		movb   $0x000030,0x000016(%edx)

	_08232d_jump:
		inc    %ebx
		jmp    _0822de_jump

	_082330_jump:
		mov    %ebx,%eax
		pop    %ecx
		pop    %ebx
		ret    



_082335_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %edx,%ecx
		mov    %ebx,%edi
		mov    %eax,%edx
		mov    %ecx,%es
		xor    %eax,%eax

	_082343_jump:
		mov    %edx,%esi
		mov    %es:(%esi),%bl
		inc    %edx
		test   %bl,%bl
		je     _082354_jump
		cmp    %edi,%eax
		je     _082354_jump
		inc    %eax
		jmp    _082343_jump

	_082354_jump:
		pop    %es
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_082359_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %es
		mov    %eax,%ecx
		mov    %ebx,%esi
		mov    %ecx,%ebx
		mov    %edx,%es
		xor    %eax,%eax

	_082367_jump:
		mov    %ebx,%ecx
		mov    %es:(%ecx),%di
		add    $0x000002,%ebx
		test   %di,%di
		je     _082354_jump
		cmp    %esi,%eax
		je     _082354_jump
		inc    %eax
		jmp    _082367_jump



_08237c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %edx,%ebp
		mov    %ebx,(%esp)
		mov    $0x000010,%ebx
		mov    %ebp,%edi
		call   _07cdde_func
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    (%esp),%eax
		mov    %ebp,%esi
		dec    %eax
		lea    (%ecx,%ebp,1),%edx
		lea    (%eax,%ebp,1),%ebx
		jmp    _0823b9_jump

	_0823b2_jump:
		dec    %edx
		mov    (%edx),%cl
		dec    %eax
		mov    %cl,(%ebx)
		dec    %ebx

	_0823b9_jump:
		cmp    %esi,%edx
		jne    _0823b2_jump
		lea    (%eax,%ebp,1),%edx

	_0823c0_jump:
		test   %eax,%eax
		jl     _0823cb_jump
		dec    %eax
		movb   $0x000030,(%edx)
		dec    %edx
		jmp    _0823c0_jump

	_0823cb_jump:
		add    (%esp),%ebp
		movb   $0x000000,0x000000(%ebp)
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0823da_func:
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000004,%esp
		mov    %eax,%ecx
		mov    %ebx,%esi
		mov    %edx,(%esp)
		test   %edx,%edx
		jge    _0823f6_jump
		neg    %edx
		lea    0x000001(%eax),%ecx
		movb   $0x00002d,(%eax)
		mov    %edx,(%esp)

	_0823f6_jump:
		cmpl   $0xffffffff,0x000008(%esi)
		jne    _082403_jump
		movl   $0x000004,0x000008(%esi)

	_082403_jump:
		mov    $0x00000a,%ebx
		xor    %eax,%eax
		mov    %ecx,%edx
		mov    0x000002(%esp),%ax
		call   _07cdde_func
		mov    %ecx,%ebx

	_082418_jump:
		mov    (%ecx),%ah
		lea    0x000001(%ecx),%edx
		test   %ah,%ah
		je     _082425_jump
		mov    %edx,%ecx
		jmp    _082418_jump

	_082425_jump:
		cmpl   $0x000000,0x000008(%esi)
		je     _082457_jump
		movb   $0x00002e,(%ecx)
		xor    %eax,%eax
		mov    %edx,%ecx
		jmp    _08244f_jump

	_082434_jump:
		xor    %edx,%edx
		mov    %dx,0x000002(%esp)
		mov    (%esp),%edi
		imul   $0x00000a,%edi,%edx
		mov    %edx,(%esp)
		mov    0x000002(%esp),%dl
		add    $0x000030,%dl
		inc    %eax
		mov    %dl,(%ecx)
		inc    %ecx

	_08244f_jump:
		cmp    0x000008(%esi),%eax
		jl     _082434_jump
		movb   $0x000000,(%ecx)

	_082457_jump:
		mov    (%esp),%eax
		xor    %al,%al
		and    $0x000080,%ah
		and    $0x00ffff,%eax
		je     _0824c8_jump

	_08246a_jump:
		cmp    %ebx,%ecx
		jne    _0824a7_jump
		lea    0x000001(%ebx),%ecx
		movb   $0x000031,(%ebx)

	_082474_jump:
		xor    %edx,%edx
		mov    (%ecx),%dl
		lea    0x000001(%ecx),%eax
		cmp    $0x000030,%edx
		jne    _082484_jump
		mov    %eax,%ecx
		jmp    _082474_jump

	_082484_jump:
		cmp    $0x00002e,%edx
		jne    _08249e_jump
		movb   $0x000030,(%ecx)
		lea    0x000001(%eax),%ecx
		movb   $0x00002e,(%eax)

	_082492_jump:
		xor    %eax,%eax
		mov    (%ecx),%al
		cmp    $0x000030,%eax
		jne    _08249e_jump
		inc    %ecx
		jmp    _082492_jump

	_08249e_jump:
		movb   $0x000030,(%ecx)
		inc    %ecx
		movb   $0x000000,(%ecx)
		jmp    _0824c8_jump

	_0824a7_jump:
		dec    %ecx
		xor    %eax,%eax
		mov    (%ecx),%al
		cmp    $0x00002e,%eax
		jne    _0824b2_jump
		dec    %ecx

	_0824b2_jump:
		xor    %eax,%eax
		mov    (%ecx),%al
		cmp    $0x000039,%eax
		je     _0824c3_jump
		mov    %al,%dl
		inc    %dl
		mov    %dl,(%ecx)
		jmp    _0824c8_jump

	_0824c3_jump:
		movb   $0x000030,(%ecx)
		jmp    _08246a_jump

	_0824c8_jump:
		add    $0x000004,%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_0824cf_func:
		call   *_0bf944_data
		ret    



_0824d6_func:
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		sub    $0x00000c,%esp
		mov    %eax,%edi
		mov    %ebx,%esi
		mov    %ecx,0x000004(%esp)
		mov    %edx,%eax
		movl   $0x000001,(%esp)
		mov    %ds,%edx
		mov    %edi,%ecx
		mov    %edx,%es
		mov    0x000015(%ebx),%dl
		movl   $0x000000,0x00000c(%ebx)
		cmp    $0x000069,%dl
		jb     _08251f_jump
		jbe    _082570_jump
		cmp    $0x000075,%dl
		jb     _08251a_jump
		jbe    _08252d_jump
		cmp    $0x000078,%dl

	_082513_jump:
		je     _08252d_jump
		jmp    _08257a_jump

	_08251a_jump:
		cmp    $0x00006f,%dl
		jmp    _082513_jump

	_08251f_jump:
		cmp    $0x000058,%dl
		jb     _08257a_jump
		jbe    _08252d_jump
		cmp    $0x000064,%dl
		je     _082570_jump
		jmp    _08257a_jump

	_08252d_jump:
		mov    0x000014(%esi),%dl
		and    $0x000020,%dl
		and    $0x0000ff,%edx
		je     _082547_jump
		mov    (%eax),%edx
		add    $0x000004,%edx
		mov    %edx,(%eax)
		mov    -0x000004(%edx),%ebp
		jmp    _08256c_jump

	_082547_jump:
		mov    0x000014(%esi),%dl
		and    $0x000010,%dl
		and    $0x0000ff,%edx
		je     _082562_jump
		mov    (%eax),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%eax)
		movzwl -0x000004(%ebp),%ebp
		jmp    _08256c_jump

	_082562_jump:
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    -0x000004(%ebx),%ebp

	_08256c_jump:
		andb   $0x0000f9,0x000014(%esi)

	_082570_jump:
		cmpl   $0xffffffff,0x000008(%esi)
		je     _08257a_jump
		movb   $0x000020,0x000016(%esi)

	_08257a_jump:
		mov    0x000015(%esi),%dl
		mov    $0x00000a,%ebx
		cmp    $0x000065,%dl
		jb     _0825e7_jump
		jbe    _082667_jump
		cmp    $0x00006f,%dl
		jb     _0825ce_jump
		jbe    _08267d_jump
		cmp    $0x000073,%dl
		jb     _0825c0_jump
		jbe    _082712_jump
		cmp    $0x000075,%dl
		jb     _0828e4_jump
		jbe    _0827fe_jump
		cmp    $0x000078,%dl
		je     _0827db_jump
		jmp    _0828e4_jump

	_0825c0_jump:
		cmp    $0x000070,%dl
		je     _082821_jump
		jmp    _0828e4_jump

	_0825ce_jump:
		cmp    $0x000067,%dl
		jb     _082635_jump
		jbe    _082667_jump
		cmp    $0x000069,%dl
		je     _0826c1_jump
		jmp    _0828e4_jump

	_0825e7_jump:
		cmp    $0x000050,%dl
		jb     _08261f_jump
		jbe    _082821_jump
		cmp    $0x000058,%dl
		jb     _082611_jump
		jbe    _0827db_jump
		cmp    $0x000063,%dl
		jb     _0828e4_jump
		jbe    _0828b8_jump
		jmp    _0826c1_jump

	_082611_jump:
		cmp    $0x000053,%dl
		je     _082712_jump
		jmp    _0828e4_jump

	_08261f_jump:
		cmp    $0x000046,%dl
		jb     _082630_jump
		jbe    _082635_jump
		cmp    $0x000047,%dl

	_082629_jump:
		je     _082667_jump
		jmp    _0828e4_jump

	_082630_jump:
		cmp    $0x000045,%dl
		jmp    _082629_jump

	_082635_jump:
		mov    0x000014(%esi),%dl
		and    $0x000010,%dl
		and    $0x0000ff,%edx
		je     _082667_jump
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    %edi,%eax
		mov    -0x000004(%ebx),%edx
		mov    %esi,%ebx
		call   _0823da_func
		mov    $0xffffffff,%ebx
		mov    %ds,%eax
		mov    %ds,%edx
		mov    %eax,%es
		mov    %edi,%eax
		mov    %edi,%ecx
		jmp    _0826b7_jump

	_082667_jump:
		mov    %esi,%ebx
		mov    %eax,%edx
		mov    %edi,%eax
		call   _0824cf_func
		mov    $0xffffffff,%ebx
		mov    %edx,%es
		mov    %eax,%ecx
		jmp    _0826b7_jump

	_08267d_jump:
		mov    0x000014(%esi),%al
		mov    $0x000008,%ebx
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _082692_jump
		movb   $0x000030,(%edi)
		inc    %edi

	_082692_jump:
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _07ce68_func

	_08269b_jump:
		cmpl   $0x000000,0x000008(%esi)
		jne    _0826ae_jump
		xor    %eax,%eax
		mov    (%edi),%al
		cmp    $0x000030,%eax
		jne    _0826ae_jump
		movb   $0x000000,%es:(%ecx)

	_0826ae_jump:
		mov    $0xffffffff,%ebx
		mov    %es,%edx
		mov    %ecx,%eax

	_0826b7_jump:
		call   _082335_func
		jmp    _08290d_jump

	_0826c1_jump:
		mov    0x000014(%esi),%dl
		and    $0x000020,%dl
		and    $0x0000ff,%edx
		je     _0826e2_jump
		mov    (%eax),%edx
		add    $0x000004,%edx
		mov    %edx,(%eax)
		mov    -0x000004(%edx),%eax
		mov    %edi,%edx

	_0826db_jump:
		call   _07ce68_func
		jmp    _08269b_jump

	_0826e2_jump:
		mov    0x000014(%esi),%dl
		and    $0x000010,%dl
		and    $0x0000ff,%edx
		je     _0826ff_jump
		mov    (%eax),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%eax)
		mov    %edi,%edx
		movswl -0x000004(%ebp),%eax
		jmp    _0826db_jump

	_0826ff_jump:
		mov    (%eax),%edx
		add    $0x000004,%edx
		mov    %edx,(%eax)
		mov    -0x000004(%edx),%eax
		mov    %edi,%edx
		call   _07cdde_func
		jmp    _08269b_jump

	_082712_jump:
		mov    0x000014(%esi),%dl
		and    $0x000080,%dl
		and    $0x0000ff,%edx
		je     _082743_jump
		mov    (%eax),%edi
		add    $0x000008,%edi
		mov    %edi,(%eax)
		mov    -0x000008(%edi),%ecx
		mov    -0x000004(%edi),%dx
		test   %ecx,%ecx
		jne    _082737_jump
		test   %dx,%dx
		je     _08273b_jump

	_082737_jump:
		mov    %edx,%es
		jmp    _082779_jump

	_08273b_jump:
		mov    %ds,%eax
		mov    0x000004(%esp),%ecx
		jmp    _082777_jump

	_082743_jump:
		mov    0x000014(%esi),%dl
		and    $0x000040,%dl
		and    $0x0000ff,%edx
		je     _082763_jump
		mov    (%eax),%ecx
		add    $0x000004,%ecx
		mov    %ecx,(%eax)
		mov    -0x000004(%ecx),%ecx
		test   %ecx,%ecx
		je     _08273b_jump

	_08275f_jump:
		mov    %ds,%eax
		jmp    _082777_jump

	_082763_jump:
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    -0x000004(%ebx),%ecx
		test   %ecx,%ecx
		jne    _08275f_jump
		mov    %ds,%eax
		mov    0x000004(%esp),%ecx

	_082777_jump:
		mov    %eax,%es

	_082779_jump:
		mov    0x000014(%esi),%bl
		xor    %ebp,%ebp
		xor    %eax,%eax
		and    $0x0000f9,%bl
		mov    %ebp,(%esp)
		mov    0x000015(%esi),%al
		mov    %bl,0x000014(%esi)
		cmp    $0x000053,%eax
		jne    _0827b3_jump
		mov    %bl,%al
		and    $0x000020,%al
		and    $0x0000ff,%eax
		je     _0827aa_jump
		xor    %eax,%eax
		mov    %es:(%ecx),%ax
		add    $0x000002,%ecx
		jmp    _08290d_jump

	_0827aa_jump:
		mov    %es:(%ecx),%al
		inc    %ecx
		jmp    _08290d_jump

	_0827b3_jump:
		mov    %bl,%al
		and    $0x000020,%al
		and    $0x0000ff,%eax
		je     _0827cf_jump
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x000008(%esi),%ebx
		call   _082359_func
		jmp    _08290d_jump

	_0827cf_jump:
		mov    %es,%edx
		mov    %ecx,%eax
		mov    0x000008(%esi),%ebx
		jmp    _0826b7_jump

	_0827db_jump:
		mov    0x000014(%esi),%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _0827f9_jump
		test   %ebp,%ebp
		je     _0827f9_jump
		movb   $0x000030,0x000017(%esi)
		mov    0x000015(%esi),%al
		movb   $0x000000,0x000019(%esi)
		mov    %al,0x000018(%esi)

	_0827f9_jump:
		mov    $0x000010,%ebx

	_0827fe_jump:
		mov    %edi,%edx
		mov    %ebp,%eax
		call   _07ce1e_func
		xor    %eax,%eax
		mov    0x000015(%esi),%al
		cmp    $0x000058,%eax
		jne    _08269b_jump
		mov    %edi,%eax
		call   _0829bf_func
		jmp    _08269b_jump

	_082821_jump:
		cmpl   $0x000000,0x000004(%esi)
		jne    _082845_jump
		mov    0x000014(%esi),%dl
		and    $0x000080,%dl
		and    $0x0000ff,%edx
		je     _08283e_jump
		movl   $0x00000d,0x000004(%esi)
		jmp    _082845_jump

	_08283e_jump:
		movl   $0x000008,0x000004(%esi)

	_082845_jump:
		andb   $0x0000f9,0x000014(%esi)
		mov    (%eax),%ebx
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    0x000014(%esi),%dl
		and    $0x000080,%dl
		mov    %dl,0x000008(%esp)
		xor    %edx,%edx
		mov    0x000008(%esp),%dl
		mov    -0x000004(%ebx),%ebp
		test   %edx,%edx
		je     _082890_jump
		add    $0x000004,%ebx
		mov    %ebx,(%eax)
		mov    %edi,%edx
		mov    -0x000004(%ebx),%eax
		mov    $0x000004,%ebx
		and    $0x00ffff,%eax
		call   _08237c_func
		mov    $0x000008,%ebx
		lea    0x000005(%edi),%edx
		mov    %ebp,%eax
		movb   $0x00003a,0x000004(%edi)
		jmp    _082899_jump

	_082890_jump:
		mov    $0x000008,%ebx
		mov    %edi,%edx
		mov    %ebp,%eax

	_082899_jump:
		call   _08237c_func
		xor    %eax,%eax
		mov    0x000015(%esi),%al
		cmp    $0x000050,%eax
		jne    _0826ae_jump
		mov    %edi,%eax
		call   _0829bf_func
		jmp    _0826ae_jump

	_0828b8_jump:
		mov    (%eax),%ebp
		add    $0x000004,%ebp
		mov    %ebp,(%eax)
		mov    -0x000004(%ebp),%al
		movb   $0x000000,0x000001(%edi)
		mov    %al,(%edi)
		movl   $0x000001,0x000008(%esi)
		mov    0x000014(%esi),%dh
		xor    %eax,%eax
		and    $0x0000f9,%dh
		mov    %eax,(%esp)
		mov    $0x000001,%eax
		mov    %dh,0x000014(%esi)
		jmp    _08290d_jump

	_0828e4_jump:
		movl   $0x000000,0x000004(%esi)
		mov    0x000015(%esi),%al
		movb   $0x000000,0x000001(%edi)
		mov    %al,(%edi)
		movl   $0x000001,0x000008(%esi)
		mov    0x000014(%esi),%al
		xor    %edi,%edi
		and    $0x0000f9,%al
		mov    %edi,(%esp)
		mov    %al,0x000014(%esi)
		mov    $0x000001,%eax

	_08290d_jump:
		cmpl   $0x000000,(%esp)
		je     _082962_jump
		xor    %edx,%edx
		mov    %es:(%ecx),%dl
		cmp    $0x00002d,%edx
		jne    _082925_jump
		inc    %ecx
		movb   $0x00002d,0x000017(%esi)
		dec    %eax
		jmp    _08294b_jump

	_082925_jump:
		mov    0x000014(%esi),%dl
		and    $0x000002,%dl
		and    $0x0000ff,%edx
		je     _082939_jump
		movb   $0x000020,0x000017(%esi)
		jmp    _08294b_jump

	_082939_jump:
		mov    0x000014(%esi),%dl
		and    $0x000004,%dl
		and    $0x0000ff,%edx
		je     _08294f_jump
		movb   $0x00002b,0x000017(%esi)

	_08294b_jump:
		movb   $0x000000,0x000018(%esi)

	_08294f_jump:
		mov    0x000008(%esi),%edx
		cmp    %edx,%eax
		jle    _08295b_jump
		mov    %eax,0x000008(%esi)
		jmp    _082962_jump

	_08295b_jump:
		mov    %edx,%ebx
		sub    %eax,%ebx
		mov    %ebx,0x00000c(%esi)

	_082962_jump:
		xor    %edx,%edx
		mov    0x000016(%esi),%dl
		cmp    $0x00002a,%edx
		jne    _082979_jump
		mov    0x000014(%esi),%dl
		movb   $0x000000,0x000017(%esi)
		and    $0x0000f9,%dl
		mov    %dl,0x000014(%esi)

	_082979_jump:
		mov    0x000008(%esi),%ebx
		cmp    $0xffffffff,%ebx
		je     _082985_jump
		cmp    %ebx,%eax
		jge    _082992_jump

	_082985_jump:
		xor    %edx,%edx
		mov    0x000015(%esi),%dl
		cmp    $0x000063,%edx
		je     _082992_jump
		mov    %eax,0x000008(%esi)

	_082992_jump:
		mov    $0xffffffff,%ebx
		lea    0x000017(%esi),%eax
		mov    %ds,%edx
		call   _082335_func
		mov    0x000008(%esi),%ebp
		mov    0x00000c(%esi),%edx
		add    %ebp,%eax
		mov    0x000004(%esi),%ebx
		add    %edx,%eax
		mov    %es,%edx
		sub    %eax,%ebx
		mov    %ecx,%eax
		mov    %ebx,0x000004(%esi)
		add    $0x00000c,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		ret    



_0829bf_func:
		push   %edx
		mov    %eax,%edx

	_0829c2_jump:
		cmpb   $0x000000,(%edx)
		je     _0829d5_jump
		xor    %eax,%eax
		mov    (%edx),%al
		call   _0862d4_func
		mov    %al,(%edx)
		inc    %edx
		jmp    _0829c2_jump

	_0829d5_jump:
		pop    %edx
		ret    



_082a7a_func:
		push   %ebx
		mov    %edx,%ebx
		call   _082a84_func
		pop    %ebx
		ret    



_082a84_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		sub    $0x000020,%esp
		mov    %eax,%ecx
		mov    (%edx),%eax
		mov    %eax,-0x000020(%ebp)
		mov    0x000004(%edx),%eax
		mov    %eax,-0x00001c(%ebp)
		mov    (%ebx),%eax
		mov    %eax,-0x000018(%ebp)
		mov    0x000004(%ebx),%eax
		mov    %eax,-0x000014(%ebp)
		test   $0x000040,%cl
		je     _082ab0_jump
		mov    $0x000001,%esi
		jmp    _082aea_jump

	_082ab0_jump:
		test   $0x000080,%cl
		je     _082abc_jump
		mov    $0x000002,%esi
		jmp    _082aea_jump

	_082abc_jump:
		test   $0x000001,%ch
		je     _082ac8_jump
		mov    $0x000003,%esi
		jmp    _082aea_jump

	_082ac8_jump:
		test   $0x000008,%ch
		je     _082ad4_jump
		mov    $0x000004,%esi
		jmp    _082aea_jump

	_082ad4_jump:
		test   $0x000002,%ch
		je     _082ae0_jump
		mov    $0x000006,%esi
		jmp    _082aea_jump

	_082ae0_jump:
		test   $0x000004,%ch
		je     _082aea_jump
		mov    $0x000005,%esi

	_082aea_jump:
		mov    %ecx,%eax
		and    $0x00001f,%eax
		mov    _0bd824_data(,%eax,4),%eax
		mov    %esi,-0x000028(%ebp)
		mov    %eax,-0x000024(%ebp)
		test   $0x000010,%ch
		je     _082b19_jump
		mov    _0c14a0_data,%eax
		mov    _0c14a4_data,%edx
		call   _07c66e_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)
		jmp    _082b5b_jump

	_082b19_jump:
		test   $0x000020,%ch
		je     _082b28_jump
		xor    %ecx,%ecx
		mov    %ecx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		jmp    _082b5b_jump

	_082b28_jump:
		test   $0x000040,%ch
		je     _082b3c_jump
		xor    %edx,%edx
		mov    $0x3ff00000,%ebx
		mov    %edx,-0x000010(%ebp)
		mov    %ebx,-0x00000c(%ebp)
		jmp    _082b5b_jump

	_082b3c_jump:
		test   $0x000080,%ch
		je     _082b50_jump
		mov    _0c14a0_data,%eax
		mov    %eax,-0x000010(%ebp)
		mov    _0c14a4_data,%eax
		jmp    _082b58_jump

	_082b50_jump:
		mov    (%ebx),%eax
		mov    %eax,-0x000010(%ebp)
		mov    0x000004(%ebx),%eax

	_082b58_jump:
		mov    %eax,-0x00000c(%ebp)

	_082b5b_jump:
		lea    -0x000028(%ebp),%eax
		call   _086330_func
		lea    -0x000008(%ebp),%esp
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_082b6a_func:
		push   %ebx
		sub    $0x00000c,%esp
		mov    %esp,%ebx
		call   _082c55_func
		mov    %esp,%eax
		call   _082b89_func
		mov    %esp,%eax
		call   _082cd5_func
		add    $0x00000c,%esp
		pop    %ebx
		ret    



_082b88_func:
		ret    



_082b89_func:
		push   %edi
		push   %esi
		push   %edx
		push   %ecx
		push   %ebx
		mov    0x000008(%eax),%cx
		mov    0x000004(%eax),%edx
		mov    (%eax),%ebx
		or     %ebx,%ebx
		jne    _082bcf_jump
		or     %edx,%edx
		jne    _082bc4_jump
		add    %cx,%cx
		je     _082c4f_jump

	_082ba8_jump:
		movw   $0x00ffff,0x000008(%eax)
		movl   $0x000000,0x000004(%eax)
		movl   $0x000000,(%eax)

	_082bbb_jump:
		orb    $0x0000c0,0x000007(%eax)
		jmp    _082c4f_jump

	_082bc4_jump:
		cmp    $0x007fff,%cx
		je     _082c4f_jump

	_082bcf_jump:
		mov    %ecx,%edx
		and    $0x00007f,%dh
		cmp    $0x007fff,%dx
		je     _082bbb_jump
		add    %cx,%cx
		jb     _082bbb_jump
		shr    %cx
		je     _082bec_jump
		mov    0x000004(%eax),%edx
		add    %edx,%edx
		jae    _082ba8_jump

	_082bec_jump:
		mov    0x000004(%eax),%edx
		sub    %edi,%edi
		push   %eax
		sub    $0x003fff,%cx
		sar    %cx
		jb     _082c02_jump
		shr    %edx
		rcr    %ebx
		rcr    %edi

	_082c02_jump:
		add    $0x003fff,%cx
		mov    %cx,0x000008(%eax)
		mov    %edx,%ecx
		mov    %ebx,%eax
		mov    %edx,%esi
		stc    
		rcr    %esi
		inc    %edx
		je     _082c35_jump
		dec    %edx

	_082c18_jump:
		div    %esi
		dec    %esi
		cmp    %eax,%esi
		jbe    _082c2a_jump
		inc    %esi
		add    %eax,%esi
		rcr    %esi
		mov    %ecx,%edx
		mov    %ebx,%eax
		jmp    _082c18_jump

	_082c2a_jump:
		inc    %esi
		mov    %eax,%ecx
		mov    %edi,%eax
		div    %esi
		add    %ecx,%esi
		jmp    _082c3e_jump

	_082c35_jump:
		cmp    %esi,%eax
		je     _082c47_jump
		xchg   %eax,%edx
		mov    %edi,%eax
		div    %esi

	_082c3e_jump:
		sub    %edx,%edx
		stc    
		rcr    %esi
		rcr    %eax
		adc    %edx,%eax

	_082c47_jump:
		adc    %esi,%edx
		pop    %esi
		mov    %eax,(%esi)
		mov    %edx,0x000004(%esi)

	_082c4f_jump:
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %esi
		pop    %edi
		ret    



_082c55_func:
		push   %ecx
		mov    %edx,%ecx
		shld   $0x00000b,%eax,%edx
		shl    $0x00000b,%eax
		sar    $0x000014,%ecx
		and    $0x0007ff,%cx
		je     _082ca0_jump
		cmp    $0x0007ff,%cx
		je     _082c77_jump
		add    $0x003c00,%cx
		jmp    _082c98_jump

	_082c77_jump:
		mov    $0x007fff,%cx
		test   $0x7fffffff,%edx
		jne    _082c85_jump
		or     %eax,%eax

	_082c85_jump:
		je     _082c98_jump
		push   %eax
		mov    $0x000001,%al
		mov    $0x000081,%ah
		call   _082b88_func
		pop    %eax
		or     $0x40000000,%edx

	_082c98_jump:
		or     $0x80000000,%edx
		jmp    _082cc5_jump

	_082ca0_jump:
		or     %edx,%edx
		jne    _082cac_jump
		or     %eax,%eax
		jne    _082cac_jump
		sub    %ecx,%ecx
		jmp    _082cc5_jump

	_082cac_jump:
		mov    $0x003c01,%cx
		or     %edx,%edx
		jne    _082cb9_jump
		xchg   %eax,%edx
		sub    $0x000020,%cx

	_082cb9_jump:
		or     %edx,%edx
		js     _082cc5_jump
		add    %eax,%eax
		adc    %edx,%edx
		dec    %cx
		jmp    _082cb9_jump

	_082cc5_jump:
		mov    %eax,(%ebx)
		mov    %edx,0x000004(%ebx)
		add    %ecx,%ecx
		rcr    %cx
		mov    %cx,0x000008(%ebx)
		pop    %ecx
		ret    



_082cd5_func:
		push   %ecx
		push   %ebx
		push   %esi
		mov    0x000008(%eax),%cx
		mov    0x000004(%eax),%edx
		mov    (%eax),%eax
		mov    $0xfffff800,%esi
		mov    %eax,%ebx
		shl    $0x000016,%ebx
		jae    _082d02_jump
		jne    _082cf1_jump
		add    %esi,%esi

	_082cf1_jump:
		add    $0x000800,%eax
		adc    $0x000000,%edx
		jae    _082d02_jump
		mov    $0x80000000,%edx
		inc    %cx

	_082d02_jump:
		and    %esi,%eax
		mov    %ecx,%ebx
		and    $0x007fff,%cx
		add    $0x00c400,%cx
		cmp    $0x0007ff,%cx
		jae    _082d38_jump
		or     %cx,%cx
		jne    _082d27_jump
		shrd   $0x00000c,%edx,%eax
		add    %edx,%edx
		shr    $0x00000c,%edx
		jmp    _082d31_jump

	_082d27_jump:
		shrd   $0x00000b,%edx,%eax
		add    %edx,%edx
		shrd   $0x00000b,%ecx,%edx

	_082d31_jump:
		add    %bx,%bx
		rcr    %edx
		jmp    _082d98_jump

	_082d38_jump:
		cmp    $0x00c400,%cx
		jb     _082d72_jump
		cmp    $0x00ffcc,%cx
		jl     _082d6c_jump
		sub    $0x00000c,%cx
		neg    %cx
		cmp    $0x000020,%cl
		jb     _082d5a_jump
		sub    $0x000020,%cl
		mov    %eax,%esi
		mov    %edx,%eax
		sub    %edx,%edx

	_082d5a_jump:
		shrd   %cl,%eax,%esi
		shrd   %cl,%edx,%eax
		shr    %cl,%edx
		add    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx
		jmp    _082d70_jump

	_082d6c_jump:
		sub    %eax,%eax
		sub    %edx,%edx

	_082d70_jump:
		jmp    _082d98_jump

	_082d72_jump:
		shrd   $0x00000b,%edx,%eax
		add    %edx,%edx
		shr    $0x00000b,%edx
		add    %bx,%bx
		rcr    %edx
		or     $0x7ff00000,%edx
		cmp    $0x0043ff,%cx
		je     _082d98_jump
		push   %eax
		mov    $0x000008,%al
		mov    $0x000084,%ah
		call   _082b88_func
		pop    %eax

	_082d98_jump:
		pop    %esi
		pop    %ebx
		pop    %ecx
		ret    



_082d9c_func:
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,%ecx
		mov    %ecx,(%esp)
		mov    %edx,0x000004(%esp)
		xor    %eax,%eax
		test   %edx,%edx
		je     _082de1_jump
		mov    0x000006(%esp),%eax
		and    $0x007ff0,%eax
		mov    0x000006(%esp),%edx
		and    $0x00ffff,%eax
		and    $0x00800f,%edx
		sar    $0x000004,%eax
		mov    %edx,%ecx
		mov    %dx,0x000006(%esp)
		or     $0x003fe0,%ecx
		sub    $0x0003fe,%eax
		mov    %cx,0x000006(%esp)

	_082de1_jump:
		mov    0x000004(%esp),%edx
		mov    %eax,(%ebx)
		mov    (%esp),%eax
		add    $0x000008,%esp
		pop    %ecx
		ret    



_082df0_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %ecx
		push   %ebx
		push   %eax
		mov    0x000008(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		mov    0x000010(%ebp),%ebx
		mov    0x000014(%ebp),%ecx
		or     %ecx,%ecx
		jne    _082e1c_jump
		sub    %eax,%eax
		mov    0x000018(%ebp),%ebx
		mov    %eax,(%ebx)
		mov    0x00001c(%ebp),%ebx
		mov    %eax,(%ebx)
		mov    %eax,0x000004(%ebx)
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %ebp
		ret    

	_082e1c_jump:
		push   %esi
		push   %edi
		push   %edx
		push   %ecx
		mov    %edx,%esi
		mov    %ecx,%edi
		and    $0x7ff00000,%esi
		and    $0x7ff00000,%edi
		and    $0x0fffff,%edx
		and    $0x0fffff,%ecx
		or     $0x100000,%edx
		or     $0x100000,%ecx
		sub    %edi,%esi
		jl     _082eb4_jump
		sub    %edi,%edi

	_082e4e_jump:
		cmp    %edx,%ecx
		jne    _082e56_jump
		cmp    %eax,%ebx
		je     _082e58_jump

	_082e56_jump:
		jae    _082e5d_jump

	_082e58_jump:
		sub    %ebx,%eax
		sbb    %ecx,%edx
		stc    

	_082e5d_jump:
		adc    %edi,%edi
		sub    $0x100000,%esi
		jl     _082e7e_jump
		add    %eax,%eax
		adc    %edx,%edx
		cmp    $0x200000,%edx
		jae    _082e58_jump
		cmp    $0x100000,%edx
		jae    _082e4e_jump
		cmc    
		jmp    _082e5d_jump

	_082e7e_jump:
		sub    %esi,%esi
		or     %eax,%eax
		jne    _082e8a_jump
		or     %edx,%edx
		jne    _082e8a_jump
		jmp    _082eb2_jump

	_082e8a_jump:
		test   $0x200000,%edx
		jne    _082e9e_jump
		adc    %eax,%eax
		adc    %edx,%edx
		sub    $0x100000,%esi
		jmp    _082e8a_jump

	_082e9e_jump:
		shr    %edx
		rcr    %eax
		add    $0x100000,%esi
		pop    %ecx
		push   %ecx
		and    $0x7ff00000,%ecx
		add    %ecx,%esi

	_082eb2_jump:
		jmp    _082eb8_jump

	_082eb4_jump:
		add    %edi,%esi
		sub    %edi,%edi

	_082eb8_jump:
		and    $0x0fffff,%edx
		add    %esi,%edx
		pop    %ecx
		pop    %esi
		and    $0x80000000,%esi
		or     %edx,%edx
		je     _082ece_jump
		or     %esi,%edx

	_082ece_jump:
		xor    %ecx,%esi
		jns    _082ed4_jump
		neg    %edi

	_082ed4_jump:
		mov    0x000018(%ebp),%esi
		mov    %edi,(%esi)
		mov    0x00001c(%ebp),%esi
		mov    %eax,(%esi)
		mov    %edx,0x000004(%esi)
		pop    %edi
		pop    %esi
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edx
		pop    %ebp
		ret    



_082ee9_func:
		push   %esi
		push   %edi
		push   %ebp
		push   %eax
		mov    %edx,%ebp
		mov    %ebx,%esi
		mov    %ecx,%edi
		lea    0x000008(%ebx),%esi
		mov    (%ebx),%eax
		mov    0x000004(%ebx),%edx

	_082efb_jump:
		mov    (%esp),%ebx
		mov    %ebp,%ecx
		call   _07baef_func
		mov    %esi,%ecx
		mov    (%ecx),%ebx
		mov    0x000004(%ecx),%ecx
		add    $0x000008,%esi
		call   _07b938_func
		dec    %edi
		jne    _082efb_jump
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    



_082f1e_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %edx,%edi
		mov    %ebx,-0x000010(%ebp)
		mov    %ecx,-0x00000c(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		call   _07baef_func
		mov    -0x00000c(%ebp),%ecx
		mov    -0x000010(%ebp),%ebx
		call   _082ee9_func
		mov    %esi,%ebx
		mov    %edi,%ecx
		call   _07baef_func
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_082f54_func:
		mov    $0x00000d,%eax



_082f59_func:
		push   %edx
		mov    %eax,%edx
		call   _083a10_func
		mov    %edx,(%eax)
		pop    %edx
		ret    



_082f65_func:
		mov    $0x00000e,%eax
		jmp    _082f59_func



_082f7c_func:
		push   %edx
		mov    %eax,%edx
		call   _083a16_func
		mov    %edx,(%eax)
		pop    %edx
		ret    

.data

_082f88_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f"

.text



_082f92_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		mov    $0x000002,%al
		jmp    _082fa2_jump



_082f9b_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		mov    $0x000000,%al

	_082fa2_jump:
		mov    %al,%dl
		fldt   %cs:_082f88_data
		fldl   -0x000008(%ebp)
		ftst   
		fnstsw %ax
		and    $0x004100,%ax
		cmp    $0x000100,%ax
		jne    _082fc5_jump
		fchs   
		cmp    $0x000000,%dl
		jne    _082fc5_jump
		mov    $0x000004,%dl

	_082fc5_jump:
		fprem  
		fnstsw %ax
		test   $0x000400,%ax
		jne    _082fc5_jump
		mov    $0x000000,%al
		test   $0x000002,%ah
		je     _082fdc_jump
		or     $0x000001,%al
		fsub   %st(1),%st
		fchs   

	_082fdc_jump:
		test   $0x000040,%ah
		je     _082fe3_jump
		or     $0x000002,%al

	_082fe3_jump:
		test   $0x000001,%ah
		je     _082fea_jump
		add    $0x000004,%al

	_082fea_jump:
		fstp   %st(1)
		fptan  
		fld    %st(0)
		fmul   %st(0),%st
		fld    %st(2)
		fmul   %st(0),%st
		faddp  %st,%st(1)
		fsqrt  
		add    %dl,%al
		and    $0x000007,%al
		cmp    $0x000004,%al
		jl     _083004_jump
		fchs   

	_083004_jump:
		and    $0x000003,%al
		cmp    $0x000000,%al
		je     _08300c_jump
		cmp    $0x000003,%al

	_08300c_jump:
		jne    _083029_jump
		fstp   %st(1)
		testb  $0x000001,_0bd884_data
		jne    _08301d_jump
		fdivrp %st,%st(1)
		jmp    _083027_jump

	_08301d_jump:
		mov    $0x00000d,%eax
		call   _083217_func

	_083027_jump:
		jmp    _083042_jump

	_083029_jump:
		testb  $0x000001,_0bd884_data
		jne    _083036_jump
		fdivrp %st,%st(1)
		jmp    _083040_jump

	_083036_jump:
		mov    $0x00000d,%eax
		call   _083217_func

	_083040_jump:
		fstp   %st(1)

	_083042_jump:
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    

.data

_08304a_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xff\x3f"

_083054_data:
		.ascii  "\x00\xc0\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f\x55\x89\xe5\x52\x50\xd9"
		.ascii  "\xeb\xb2\x00\xb6\x00\xdd\x45\xf8"
		.ascii  "\xd9\xe4\xdf\xe0\x9e\x73\x04\xd9"
		.ascii  "\xe0\xf6\xd6\xd9\xf8\xdf\xe0\x9e"
		.ascii  "\x7a\xf9\x2e\xdb\x2d"
		.long   _08304a_data
		.ascii  "\xdd\xda\xd8\xd1\xdf\xe0\x9e\x76"
		.ascii  "\x06\xd8\xe1\xf6\xd2\xf6\xd6\x2e"
		.ascii  "\xdb\x2d"
		.long   _083054_func
		.ascii  "\xd8\xd9\xdf\xe0\x9e\x73\x04\xd8"
		.ascii  "\xe9\xf6\xd2\xdd\xd9\xf6\x05"
		.long   _0bd884_data
		.ascii  "\x01\x75\x04\xd9\xf2\xeb\x05"

.text



_083100_func:
		fldt   0x000010(%esp)
		fldt   0x000004(%esp)

	_083108_jump:
		mov    0x000008(%esp),%eax
		add    %eax,%eax
		jae    _08319a_jump
		xor    $0xe000000,%eax
		test   $0xe000000,%eax
		je     _083123_jump
		fdivrp %st,%st(1)
		ret    

	_083123_jump:
		shr    $0x00001c,%eax
		cmpb   $0x000000,_0c1618_data(%eax)
		jne    _083132_jump
		fdivrp %st,%st(1)
		ret    

	_083132_jump:
		mov    0x00000c(%esp),%eax
		and    $0x007fff,%eax
		je     _0831a4_jump
		cmp    $0x007fff,%eax
		je     _0831a4_jump
		fnstcw 0x00001c(%esp)
		mov    0x00001c(%esp),%eax
		or     $0x00033f,%eax
		and    $0x00f3ff,%eax
		mov    %eax,0x000020(%esp)
		fldcw  0x000020(%esp)
		mov    0x000018(%esp),%eax
		and    $0x007fff,%eax
		cmp    $0x000001,%eax
		je     _083183_jump
		fmuls  _0c1628_data
		fxch   %st(1)
		fmuls  _0c1628_data
		fxch   %st(1)
		fldcw  0x00001c(%esp)
		fdivrp %st,%st(1)
		ret    

	_083183_jump:
		fmuls  _0c162c_data
		fxch   %st(1)
		fmuls  _0c162c_data
		fxch   %st(1)
		fldcw  0x00001c(%esp)
		fdivrp %st,%st(1)
		ret    

	_08319a_jump:
		mov    0x000004(%esp),%eax
		or     0x000008(%esp),%eax
		jne    _0831a7_jump

	_0831a4_jump:
		fdivrp %st,%st(1)
		ret    

	_0831a7_jump:
		mov    0x00000c(%esp),%eax
		and    $0x007fff,%eax
		jne    _0831a4_jump
		fnstcw 0x00001c(%esp)
		mov    0x00001c(%esp),%eax
		or     $0x00033f,%eax
		and    $0x00f3ff,%eax
		mov    %eax,0x000020(%esp)
		fldcw  0x000020(%esp)
		mov    0x000018(%esp),%eax
		and    $0x007fff,%eax
		je     _0831e8_jump
		cmp    $0x007fff,%eax
		je     _083210_jump
		mov    0x000014(%esp),%eax
		add    %eax,%eax
		jae    _083210_jump
		jmp    _0831f0_jump

	_0831e8_jump:
		mov    0x000014(%esp),%eax
		add    %eax,%eax
		jb     _083210_jump

	_0831f0_jump:
		fxch   %st(1)
		fstp   %st(0)
		fld    %st(0)
		fmuls  _0c1630_data
		fstpt  0x000004(%esp)
		fldt   0x000010(%esp)
		fxch   %st(1)
		fldcw  0x00001c(%esp)
		jmp    _083108_jump

	_083210_jump:
		fldcw  0x00001c(%esp)
		fdivrp %st,%st(1)
		ret    



_083217_func:
		sub    $0x00002c,%esp
		jmp    *_0c1634_data(,%eax,4)



_083221_func:
		fdiv   %st(0),%st
		add    $0x00002c,%esp
		ret    



_083227_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08322c_jump:
		fdivr  %st(0),%st
		add    $0x00002c,%esp
		ret    



_083232_func:
		add    $0x00002c,%esp
		int    $0x000006

	_083237_jump:
		fdiv   %st(0),%st
		add    $0x00002c,%esp
		ret    



_08323d_func:
		fdivrp %st,%st(0)
		add    $0x00002c,%esp
		ret    



_083243_func:
		fdivr  %st(0),%st
		add    $0x00002c,%esp
		ret    



_083249_func:
		fdivp  %st,%st(0)
		add    $0x00002c,%esp
		ret    



_08324f_func:
		fstpt  0x00000c(%esp)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083100_func
		fldt   0x000020(%esp)
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_08326b_func:
		add    $0x00002c,%esp
		int    $0x000006

	_083270_jump:
		fstpt  (%esp)
		fstpt  0x00000c(%esp)
		call   _083100_func
		fldt   0x00000c(%esp)
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_083286_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08328b_jump:
		fxch   %st(1)
		fstpt  0x00000c(%esp)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083100_func
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_0832a7_func:
		fstpt  (%esp)
		fstpt  0x00000c(%esp)
		call   _083100_func
		add    $0x00002c,%esp
		ret    



_0832b7_func:
		fstpt  0x00000c(%esp)
		fstpt  (%esp)
		call   _083100_func
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_0832cb_func:
		fstpt  0x00000c(%esp)
		fstpt  (%esp)
		call   _083100_func
		add    $0x00002c,%esp
		ret    



_0832db_func:
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083100_func
		fxch   %st(1)
		fldt   0x000020(%esp)
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_0832fb_func:
		add    $0x00002c,%esp
		int    $0x000006

	_083300_jump:
		fstpt  (%esp)
		fxch   %st(1)
		fstpt  0x00000c(%esp)
		call   _083100_func
		fxch   %st(1)
		fldt   0x00000c(%esp)
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_08331a_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08331f_jump:
		fxch   %st(2)
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083100_func
		fxch   %st(1)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_08333f_func:
		fstpt  (%esp)
		fxch   %st(1)
		fstpt  0x00000c(%esp)
		call   _083100_func
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_083353_func:
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fstpt  (%esp)
		call   _083100_func
		fxch   %st(1)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_08336b_func:
		fstpt  0x00000c(%esp)
		fxch   %st(1)
		fstpt  (%esp)
		call   _083100_func
		fxch   %st(1)
		add    $0x00002c,%esp
		ret    



_08337f_func:
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083100_func
		fxch   %st(2)
		fldt   0x000020(%esp)
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_08339f_func:
		add    $0x00002c,%esp
		int    $0x000006

	_0833a4_jump:
		fstpt  (%esp)
		fxch   %st(2)
		fstpt  0x00000c(%esp)
		call   _083100_func
		fxch   %st(2)
		fldt   0x00000c(%esp)
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_0833be_func:
		add    $0x00002c,%esp
		int    $0x000006

	_0833c3_jump:
		fxch   %st(3)
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083100_func
		fxch   %st(2)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_0833e3_func:
		fstpt  (%esp)
		fxch   %st(2)
		fstpt  0x00000c(%esp)
		call   _083100_func
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_0833f7_func:
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fstpt  (%esp)
		call   _083100_func
		fxch   %st(2)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_08340f_func:
		fstpt  0x00000c(%esp)
		fxch   %st(2)
		fstpt  (%esp)
		call   _083100_func
		fxch   %st(2)
		add    $0x00002c,%esp
		ret    



_083423_func:
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083100_func
		fxch   %st(3)
		fldt   0x000020(%esp)
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_083443_func:
		add    $0x00002c,%esp
		int    $0x000006

	_083448_jump:
		fstpt  (%esp)
		fxch   %st(3)
		fstpt  0x00000c(%esp)
		call   _083100_func
		fxch   %st(3)
		fldt   0x00000c(%esp)
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_083462_func:
		add    $0x00002c,%esp
		int    $0x000006

	_083467_jump:
		fxch   %st(4)
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083100_func
		fxch   %st(3)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_083487_func:
		fstpt  (%esp)
		fxch   %st(3)
		fstpt  0x00000c(%esp)
		call   _083100_func
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_08349b_func:
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fstpt  (%esp)
		call   _083100_func
		fxch   %st(3)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_0834b3_func:
		fstpt  0x00000c(%esp)
		fxch   %st(3)
		fstpt  (%esp)
		call   _083100_func
		fxch   %st(3)
		add    $0x00002c,%esp
		ret    



_0834c7_func:
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083100_func
		fxch   %st(4)
		fldt   0x000020(%esp)
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_0834e7_func:
		add    $0x00002c,%esp
		int    $0x000006

	_0834ec_jump:
		fstpt  (%esp)
		fxch   %st(4)
		fstpt  0x00000c(%esp)
		call   _083100_func
		fxch   %st(4)
		fldt   0x00000c(%esp)
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_083506_func:
		add    $0x00002c,%esp
		int    $0x000006

	_08350b_jump:
		fxch   %st(5)
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083100_func
		fxch   %st(4)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_08352b_func:
		fstpt  (%esp)
		fxch   %st(4)
		fstpt  0x00000c(%esp)
		call   _083100_func
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_08353f_func:
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fstpt  (%esp)
		call   _083100_func
		fxch   %st(4)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_083557_func:
		fstpt  0x00000c(%esp)
		fxch   %st(4)
		fstpt  (%esp)
		call   _083100_func
		fxch   %st(4)
		add    $0x00002c,%esp
		ret    



_08356b_func:
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083100_func
		fxch   %st(5)
		fldt   0x000020(%esp)
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_08358b_func:
		add    $0x00002c,%esp
		int    $0x000006

	_083590_jump:
		fstpt  (%esp)
		fxch   %st(5)
		fstpt  0x00000c(%esp)
		call   _083100_func
		fxch   %st(5)
		fldt   0x00000c(%esp)
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_0835aa_func:
		add    $0x00002c,%esp
		int    $0x000006

	_0835af_jump:
		fxch   %st(6)
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083100_func
		fxch   %st(5)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_0835cf_func:
		fstpt  (%esp)
		fxch   %st(5)
		fstpt  0x00000c(%esp)
		call   _083100_func
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_0835e3_func:
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fstpt  (%esp)
		call   _083100_func
		fxch   %st(5)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_0835fb_func:
		fstpt  0x00000c(%esp)
		fxch   %st(5)
		fstpt  (%esp)
		call   _083100_func
		fxch   %st(5)
		add    $0x00002c,%esp
		ret    



_08360f_func:
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083100_func
		fxch   %st(6)
		fldt   0x000020(%esp)
		fxch   %st(7)
		add    $0x00002c,%esp
		ret    



_08362f_func:
		add    $0x00002c,%esp
		int    $0x000006

	_083634_jump:
		fstpt  (%esp)
		fxch   %st(6)
		fstpt  0x00000c(%esp)
		call   _083100_func
		fxch   %st(6)
		fldt   0x00000c(%esp)
		fxch   %st(7)
		add    $0x00002c,%esp
		ret    



_08364e_func:
		add    $0x00002c,%esp
		int    $0x000006

	_083653_jump:
		fxch   %st(7)
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fld    %st(0)
		fstpt  (%esp)
		fstpt  0x000020(%esp)
		call   _083100_func
		fxch   %st(6)
		fldt   0x000020(%esp)
		add    $0x00002c,%esp
		ret    



_083673_func:
		fstpt  (%esp)
		fxch   %st(6)
		fstpt  0x00000c(%esp)
		call   _083100_func
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_083687_func:
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fstpt  (%esp)
		call   _083100_func
		fxch   %st(6)
		fldt   0x00000c(%esp)
		add    $0x00002c,%esp
		ret    



_08369f_func:
		fstpt  0x00000c(%esp)
		fxch   %st(6)
		fstpt  (%esp)
		call   _083100_func
		fxch   %st(6)
		add    $0x00002c,%esp
		ret    



_0836b3_func:
		sub    $0x00002c,%esp
		fstpt  (%esp)
		fstpt  0x00000c(%esp)
		call   _083100_func
		add    $0x00002c,%esp
		ret    



_083738_func:
		push   %eax
		mov    0x00000c(%esp),%eax
		and    $0x7ff00000,%eax
		cmp    $0x7ff00000,%eax
		je     _08377c_jump
		fnstsw %ax
		and    $0x003800,%eax
		je     _08375f_jump
		fldl   0x000008(%esp)
		call   _0836b3_func
		pop    %eax
		ret    $0x000008

	_08375f_jump:
		fxch   %st(1)
		sub    $0x00000c,%esp
		fstpt  (%esp)
		fldl   0x000014(%esp)
		call   _0836b3_func
		fldt   (%esp)
		fxch   %st(1)
		add    $0x00000c,%esp
		pop    %eax
		ret    $0x000008

	_08377c_jump:
		fdivl  0x000008(%esp)
		pop    %eax
		ret    $0x000008



_08381c_func:
		push   %ecx
		push   %edx
		mov    %eax,%edx
		call   _083c5d_func
		cmpl   $0x000000,0x000014(%edx)
		jne    _083851_jump
		mov    0x00000d(%edx),%ah
		test   $0x000002,%ah
		je     _08383c_jump
		movl   $0x000086,0x000014(%edx)
		jmp    _083851_jump

	_08383c_jump:
		test   $0x000004,%ah
		je     _08384a_jump
		movl   $0x000001,0x000014(%edx)
		jmp    _083851_jump

	_08384a_jump:
		movl   $0x001000,0x000014(%edx)

	_083851_jump:
		mov    0x000014(%edx),%eax
		call   _0818ba_func
		mov    %eax,0x000008(%edx)
		test   %eax,%eax
		jne    _083880_jump
		mov    0x00000d(%edx),%cl
		movl   $0x000001,0x000014(%edx)
		and    $0x0000f8,%cl
		lea    0x000018(%edx),%eax
		mov    %cl,0x00000d(%edx)
		mov    %cl,%ch
		mov    %eax,0x000008(%edx)
		or     $0x000004,%ch
		mov    %ch,0x00000d(%edx)
		jmp    _083884_jump

	_083880_jump:
		orb    $0x000008,0x00000c(%edx)

	_083884_jump:
		mov    0x000008(%edx),%eax
		movl   $0x000000,0x000004(%edx)
		mov    %eax,(%edx)
		pop    %edx
		pop    %ecx
		ret    



_083893_func:
		push   %ecx
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    $0x00003f,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jge    _0838b0_jump
		xor    %eax,%eax
		mov    %dx,%ax
		call   _081b94_func

	_0838b0_jump:
		pop    %ecx
		ret    



_0838b2_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    0x00000d(%eax),%ah
		xor    %ebp,%ebp
		test   $0x000010,%ah
		je     _08393e_jump
		mov    0x00000d(%ecx),%bh
		and    $0x0000ef,%bh
		mov    0x00000c(%ecx),%al
		mov    %bh,0x00000d(%ecx)
		test   $0x000002,%al
		je     _083976_jump
		mov    0x000008(%ecx),%ebx
		test   %ebx,%ebx
		je     _083976_jump
		mov    %ebx,%edi
		mov    0x000004(%ecx),%esi

	_0838ec_jump:
		test   %esi,%esi
		je     _083976_jump
		test   %ebp,%ebp
		jne    _083976_jump
		mov    %esi,%ebx
		mov    %edi,%edx
		mov    0x000010(%ecx),%eax
		call   _08399c_func
		mov    %eax,%edx
		cmp    $0xffffffff,%eax
		jne    _08391c_jump
		mov    0x00000c(%ecx),%bl
		or     $0x000020,%bl
		mov    %eax,%ebp
		mov    %bl,0x00000c(%ecx)
		jmp    _083938_jump

	_08391c_jump:
		test   %eax,%eax
		jne    _083938_jump
		mov    $0x00000c,%eax
		call   _082f59_func
		mov    0x00000c(%ecx),%ah
		or     $0x000020,%ah
		mov    $0xffffffff,%ebp
		mov    %ah,0x00000c(%ecx)

	_083938_jump:
		add    %edx,%edi
		sub    %edx,%esi
		jmp    _0838ec_jump

	_08393e_jump:
		cmpl   $0x000000,0x000008(%ecx)
		je     _083976_jump
		andb   $0x0000ef,0x00000c(%ecx)
		testb  $0x000020,0x00000d(%ecx)
		jne    _083976_jump
		mov    0x000004(%ecx),%eax
		test   %eax,%eax
		je     _083966_jump
		mov    %eax,%edx
		mov    $0x000001,%ebx
		neg    %edx
		mov    0x000010(%ecx),%eax
		call   _07d218_func

	_083966_jump:
		cmp    $0xffffffff,%eax
		jne    _083976_jump
		mov    0x00000c(%ecx),%bl
		or     $0x000020,%bl
		mov    %eax,%ebp
		mov    %bl,0x00000c(%ecx)

	_083976_jump:
		mov    0x000008(%ecx),%eax
		movl   $0x000000,0x000004(%ecx)
		mov    %eax,(%ecx)
		mov    %ebp,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08398b_func:
		push   %ebx
		push   %edx
		mov    $0x000001,%ebx
		xor    %edx,%edx
		call   _07d218_func
		pop    %edx
		pop    %ebx
		ret    



_08399c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%esi
		mov    %edx,%ebp
		mov    %ebx,%edi
		call   _083a9f_func
		test   $0x000080,%al
		je     _0839e1_jump
		mov    $0x000002,%al
		mov    %esi,%ebx
		xor    %edx,%edx
		mov    $0x000042,%ah
		mov    %edx,%ecx
		shr    $0x000010,%ecx
		int    $0x000021
		rcl    %dx
		ror    %dx
		shl    $0x000010,%edx
		mov    %ax,%dx
		mov    %edx,(%esp)
		test   %edx,%edx
		jge    _0839e1_jump

	_0839d4_jump:
		xor    %eax,%eax
		mov    (%esp),%ax
		call   _081b94_func
		jmp    _083a08_jump

	_0839e1_jump:
		mov    %edi,%ecx
		mov    %ebp,%edx
		mov    %esi,%ebx
		mov    $0x000040,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,(%esp)
		mov    %eax,%edx
		test   %eax,%eax
		jl     _0839d4_jump
		cmp    %edi,%eax
		je     _083a06_jump
		mov    $0x00000c,%eax
		call   _082f59_func

	_083a06_jump:
		mov    %edx,%eax

	_083a08_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_083a10_func:
		mov    $_0e5e28_data,%eax
		ret    



_083a16_func:
		mov    $_0e5e2c_data,%eax
		ret    



_083a21_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    _0e5e30_data,%edx
		xor    %ebx,%ebx
		jmp    _083a46_jump

	_083a30_jump:
		mov    0x000004(%edx),%eax
		test   %ecx,0x00000c(%eax)
		je     _083a44_jump
		inc    %ebx
		testb  $0x000010,0x00000d(%eax)
		je     _083a44_jump
		call   _0838b2_func

	_083a44_jump:
		mov    (%edx),%edx

	_083a46_jump:
		test   %edx,%edx
		jne    _083a30_jump
		mov    %ebx,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083a50_func:
		push   %edx
		mov    %eax,%edx
		mov    %cs,%eax
		mov    %ax,0x000002(%edx)
		mov    %ds,%eax
		mov    %ax,0x000006(%edx)
		mov    %es,%eax
		mov    %ax,(%edx)
		mov    %ss,%eax
		mov    %ax,0x000004(%edx)
		mov    %fs,%eax
		mov    %ax,0x000008(%edx)
		mov    %gs,%eax
		mov    %ax,0x00000a(%edx)
		pop    %edx
		ret    



_083a78_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $0x000000,%al
		mov    $0x000044,%ah
		int    $0x000021
		rcl    %edx
		ror    %edx
		xor    %dh,%dh
		xor    %eax,%eax
		and    $0x000080,%dl
		mov    %dx,%ax
		test   %eax,%eax
		setne  %al
		and    $0x0000ff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083a9f_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		cmp    _0bd88c_data,%eax
		jb     _083ab2_jump
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_083ab2_jump:
		cmp    $0x000005,%eax
		jg     _083ae8_jump
		mov    %eax,%ebx
		mov    _0bd8e0_data,%eax
		shl    $0x000002,%ebx
		add    %ebx,%eax
		mov    0x000001(%eax),%cl
		test   $0x000040,%cl
		jne    _083ae8_jump
		mov    %cl,%ch
		or     $0x000040,%ch
		mov    %ch,0x000001(%eax)
		mov    %edx,%eax
		call   _083a78_func
		test   %eax,%eax
		je     _083ae8_jump
		mov    _0bd8e0_data,%eax
		orb    $0x000020,0x000001(%ebx,%eax,1)

	_083ae8_jump:
		mov    _0bd8e0_data,%eax
		mov    (%eax,%edx,4),%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083af4_func:
		push   %ebx
		or     $0x000040,%dh
		mov    %edx,%ebx
		mov    %eax,%edx
		mov    _0bd8e0_data,%eax
		shl    $0x000002,%edx
		mov    %ebx,(%edx,%eax,1)
		pop    %ebx
		ret    



_083b0a_func:
		jae    _083b1a_jump
		and    $0x00ffff,%eax
		push   %eax
		call   _081b94_func
		pop    %eax
		jmp    _083b1c_jump

	_083b1a_jump:
		sub    %eax,%eax

	_083b1c_jump:
		ret    



_083b1d_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ecx
		mov    %eax,%ebx
		mov    $0x00003e,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     _083b3f_jump
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _083af4_func
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_083b3f_jump:
		mov    $0x000004,%eax
		call   _082f59_func
		mov    $0xffffffff,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083b52_func:
		cmp    $0x000041,%eax
		jl     _083b5f_jump
		cmp    $0x00005a,%eax
		jg     _083b5f_jump
		add    $0x000020,%eax

	_083b5f_jump:
		ret    



_083b60_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0e5e20_data,%esi
		test   %esi,%esi
		je     _083b88_jump
		mov    0x000004(%esi),%ecx
		mov    0x00000c(%ecx),%edi
		mov    (%esi),%eax
		and    $0x004003,%edi
		mov    %eax,_0e5e20_data
		or     $0x000003,%di
		jmp    _083bcf_jump

	_083b88_jump:
		mov    $_0bd5bc_data,%ecx
		jmp    _083baf_jump

	_083b8f_jump:
		testb  $0x000003,0x00000c(%ecx)
		jne    _083bac_jump
		mov    $0x000008,%eax
		call   _0818ba_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _083bf4_jump
		mov    $0x000003,%edi
		jmp    _083bcf_jump

	_083bac_jump:
		add    $0x00001a,%ecx

	_083baf_jump:
		cmp    $_0bd7c4_data,%ecx
		jb     _083b8f_jump
		mov    $0x000022,%eax
		mov    $0x004003,%edi
		call   _0818ba_func
		mov    %eax,%esi
		test   %eax,%eax
		je     _083bf4_jump
		lea    0x000008(%eax),%ecx

	_083bcf_jump:
		mov    $0x00001a,%ebx
		mov    %ecx,%eax
		xor    %edx,%edx
		call   _07c050_func
		mov    %edi,0x00000c(%ecx)
		mov    _0e5e30_data,%eax
		mov    %ecx,0x000004(%esi)
		mov    %esi,_0e5e30_data
		mov    %eax,(%esi)
		mov    %ecx,%eax
		jmp    _083c00_jump

	_083bf4_jump:
		mov    $0x000005,%eax
		call   _082f59_func
		xor    %eax,%eax

	_083c00_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083c06_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		mov    $_0e5e30_data,%edx

	_083c10_jump:
		mov    (%edx),%eax
		test   %eax,%eax
		je     _083c3b_jump
		mov    0x000004(%eax),%ecx
		cmp    %ecx,%ebx
		je     _083c21_jump
		mov    %eax,%edx
		jmp    _083c10_jump

	_083c21_jump:
		mov    0x00000c(%ecx),%cl
		or     $0x000003,%cl
		mov    %cl,0x00000c(%ebx)
		mov    (%eax),%ebx
		mov    %ebx,(%edx)
		mov    _0e5e20_data,%edx
		mov    %eax,_0e5e20_data
		mov    %edx,(%eax)

	_083c3b_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_083c3f_jump:
		push   %edx

	_083c40_jump:
		mov    _0e5e20_data,%edx
		test   %edx,%edx
		je     _083c5b_jump
		mov    %edx,%eax
		mov    (%edx),%edx
		call   _0819b5_func
		mov    %edx,_0e5e20_data
		jmp    _083c40_jump

	_083c5b_jump:
		pop    %edx
		ret    



_083c5d_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%edx
		testb  $0x000020,0x00000d(%eax)
		jne    _083c8a_jump
		mov    0x000010(%edx),%eax
		call   _083a78_func
		test   %eax,%eax
		je     _083c8a_jump
		mov    0x00000d(%edx),%bl
		or     $0x000020,%bl
		mov    %bl,0x00000d(%edx)
		test   $0x000007,%bl
		jne    _083c8a_jump
		mov    %bl,%cl
		or     $0x000002,%cl
		mov    %cl,0x00000d(%edx)

	_083c8a_jump:
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_083c8e_func:
		mov    _0bd7f4_data,%eax
		ret    

	_083c94_jump:
		ret    



_083c95_func:
		push   %ds
		call   _07c044_func
		cmpw   $0x000001,_0bf832_data
		je     _083cf0_jump
		nop
		nop
		nop
		nop
		movw   $0x000001,_0bf832_data
		mov    %esp,_0be822_data
		data16 mov %ss,_0be826_data
		lss    _0be81a_data,%esp
		pusha  
		push   %es
		push   %fs
		push   %gs
		push   %ds
		pop    %es
		mov    %esp,_0bf82a_data
		lcall  *_0be810_data
		pop    %gs
		pop    %fs
		pop    %es
		popa   
		lss    _0be822_data,%esp
		movw   $0x000000,_0bf832_data

	_083cf0_jump:
		pop    %ds
		push   %ax
		mov    $0x000020,%ax
		out    %al,$0x000020
		pop    %ax
		iret   



_083d11_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bf834_data
		je     _083d4c_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		mov    $0x000043,%dx
		mov    $0x000036,%al
		out    %al,(%dx)
		mov    $0x000040,%dx
		mov    0x000008(%ebp),%eax
		out    %al,(%dx)
		mov    %ah,%al
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_083d4c_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_083d57_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		les    0x00000c(%ebp),%edi
		mov    %edi,_0be810_data
		data16 mov %es,_0be814_data
		data16 mov %ds,_0be818_data
		data16 mov %ds,_0be81e_data
		cmpl   $0x000000,_0bf834_data
		je     _083e0e_jump
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		cmpl   $0x000000,_0bf838_data
		je     _083dcd_jump
		nop
		nop
		nop
		nop
		mov    $0x000204,%ax
		mov    $0x000008,%bl
		int    $0x000031
		mov    %edx,_0be804_data
		mov    %cx,_0be808_data
		mov    $0x000205,%ax
		mov    $0x000008,%bl
		mov    $_083c95_func,%edx
		mov    %cs,%cx
		int    $0x000031
		jmp    _083df4_jump

	_083dcd_jump:
		mov    $0x003508,%ax
		int    $0x000021
		mov    %ebx,_0be804_data
		data16 mov %es,_0be808_data
		push   %ds
		xor    %ax,%ax
		mov    %eax,%es
		mov    $0x002508,%ax
		mov    $_083c95_func,%edx
		push   %cs
		pop    %ds
		int    $0x000021
		pop    %ds

	_083df4_jump:
		mov    $0x000043,%dx
		mov    $0x000036,%al
		out    %al,(%dx)
		mov    $0x000040,%dx
		mov    0x000008(%ebp),%eax
		out    %al,(%dx)
		mov    %ah,%al
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_083e0e_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_083e19_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bf834_data
		je     _083e3a_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)

	_083e3a_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_083e45_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bf834_data
		je     _083e66_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_083e66_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_083e71_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		cmpl   $0x000000,_0bf834_data
		je     _083ee2_jump
		nop
		nop
		nop
		nop
		mov    $0x000021,%dx
		in     (%dx),%al
		or     $0x000001,%al
		out    %al,(%dx)
		cmpl   $0x000000,_0bf838_data
		je     _083eb9_jump
		nop
		nop
		nop
		nop
		mov    $0x000205,%ax
		mov    $0x000008,%bl
		mov    _0be808_data,%cx
		mov    _0be804_data,%edx
		int    $0x000031
		jmp    _083ed0_jump

	_083eb9_jump:
		push   %ds
		mov    $0x002508,%ax
		mov    _0be808_data,%cx
		mov    _0be804_data,%edx
		mov    %ecx,%ds
		int    $0x000021
		pop    %ds

	_083ed0_jump:
		mov    $0x000040,%dx
		mov    $0x000000,%ax
		out    %al,(%dx)
		out    %al,(%dx)
		mov    $0x000021,%dx
		in     (%dx),%al
		and    $0x0000fe,%al
		out    %al,(%dx)

	_083ee2_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_083eed_func:
		cmpl   $0x000000,_0bf834_data
		je     _083f45_jump
		nop
		nop
		nop
		nop
		movw   $0x000000,_0bf832_data
		mov    _0bf82a_data,%esp
		pop    %gs
		pop    %fs
		pop    %es
		popa   
		lss    _0be822_data,%esp
		mov    %eax,_0bf82e_data
		pop    %eax
		mov    %ax,_0bf82a_data
		push   %eax
		push   %eax
		mov    _0be804_data,%eax
		mov    %eax,(%esp)
		mov    _0be808_data,%eax
		mov    %eax,0x000004(%esp)
		mov    _0bf82e_data,%eax
		push   %eax
		mov    _0bf82a_data,%ax
		mov    %eax,%ds
		pop    %eax
		lret   

	_083f45_jump:
		ret    

	_083f46_jump:
		ret    



_083f47_func:
		push   %ecx
		push   %eax

	_083f49_jump:
		mov    (%edx),%cl
		mov    %cl,(%eax)
		cmp    $0x000000,%cl
		je     _083f63_jump
		mov    0x000001(%edx),%cl
		add    $0x000002,%edx
		mov    %cl,0x000001(%eax)
		add    $0x000002,%eax
		cmp    $0x000000,%cl
		jne    _083f49_jump

	_083f63_jump:
		pop    %eax
		pop    %ecx
		ret    



_083f66_func:
		push   %ecx
		push   %esi
		push   %edi
		mov    %edx,%esi
		mov    %eax,%edi
		push   %es
		push   %ds
		pop    %es
		push   %edi
		sub    %ecx,%ecx
		dec    %ecx
		mov    $0x000000,%al
		repnz scas %es:(%edi),%al
		dec    %edi

	_083f79_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _083f91_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _083f79_jump

	_083f91_jump:
		pop    %edi
		pop    %es
		mov    %edi,%eax
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    

	_083f9c_jump:
		ret    



_083f9d_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%cx
		mov    0x00000a(%ebp),%bx
		mov    0x00000c(%ebp),%di
		mov    0x00000e(%ebp),%si
		mov    $0x000600,%ax
		int    $0x000031
		mov    $0x000000,%eax
		jae    _083fcf_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax

	_083fcf_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_083fda_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%cx
		mov    0x00000a(%ebp),%bx
		mov    0x00000c(%ebp),%di
		mov    0x00000e(%ebp),%si
		mov    $0x000601,%ax
		int    $0x000031
		mov    $0x000000,%eax
		jae    _08400c_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax

	_08400c_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084017_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		push   %eax
		mov    %ax,-0x000002(%ebp)
		push   %eax
		mov    %ax,%bx
		mov    $0x000008,%ax
		xor    %cx,%cx
		mov    0x000008(%ebp),%edx
		int    $0x000031
		pop    %eax
		mov    $0x000501,%ax
		xor    %ebx,%ebx
		mov    0x000008(%ebp),%ecx
		add    $0x000050,%cx
		int    $0x000031
		push   %ebx
		mov    0x00000c(%ebp),%ebx
		mov    %si,(%ebx)
		mov    %di,0x000002(%ebx)
		pop    %ebx
		pop    %eax
		push   %eax
		mov    0x000010(%ebp),%esi
		mov    %cx,(%esi)
		mov    %bx,0x000002(%esi)
		mov    %cx,%dx
		mov    %bx,%cx
		mov    %ax,%bx
		mov    $0x000007,%ax
		int    $0x000031
		movzwl -0x000002(%ebp),%ecx
		lar    %ecx,%ecx
		shr    $0x000008,%ecx
		or     $0x004000,%cx
		mov    -0x000002(%ebp),%bx
		mov    $0x000009,%ax
		int    $0x000031
		pop    %eax
		xor    %edx,%edx
		mov    %ax,%dx
		xor    %eax,%eax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0840a5_func:
		push   %eax
		mov    %ds,%ax
		mov    %eax,%gs
		pop    %eax
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000010(%ebp),%si
		mov    0x000012(%ebp),%di
		mov    $0x000502,%ax
		int    $0x000031
		mov    $0x000001,%ax
		mov    0x00000c(%ebp),%bx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0840db_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		push   %eax
		push   %eax
		push   %eax
		push   %eax
		mov    0x00000c(%ebp),%bx
		mov    $0x000006,%ax
		int    $0x000031
		pop    %ebx
		mov    $0x000007,%ax
		int    $0x000031
		xor    %ebx,%ebx
		mov    0x00000c(%ebp),%bx
		lsl    %bx,%edx
		mov    $0x000008,%ax
		pop    %ebx
		xor    %ecx,%ecx
		int    $0x000031
		mov    $0x000009,%ax
		pop    %ebx
		lar    %bx,%ecx
		shr    $0x000008,%ecx
		or     $0x004008,%cx
		int    $0x000031
		pop    %edx
		xor    %eax,%eax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084138_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    0x000008(%ebp),%esi
		les    0x00000c(%ebp),%edi
		mov    $0x000020,%ecx

	_08414f_jump:
		mov    %edi,(%esi)
		data16 mov %es,0x000004(%esi)
		add    $0x00006c,%edi
		add    $0x000006,%esi
		loop   _08414f_jump
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084168_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		xor    %eax,%eax
		mov    $0x000100,%ax
		mov    0x000008(%ebp),%ebx
		add    $0x000100,%ebx
		int    $0x000031
		mov    0x00000c(%ebp),%esi
		shl    $0x000004,%eax
		mov    %eax,(%esi)
		mov    0x000010(%ebp),%esi
		mov    %dx,(%esi)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08419e_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%es
		mov    %eax,%fs
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		xor    %eax,%eax
		mov    $0x000101,%ax
		mov    0x000008(%ebp),%edx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0841fe_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000008,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		push   %ds
		push   %es
		les    0x000018(%ebp),%edi
		lds    0x000010(%ebp),%esi
		mov    %edx,%esi
		mov    $0x00006a,%ecx
		cld    
		rep movsb %ds:(%esi),%es:(%edi)
		les    0x000018(%ebp),%edi
		data16 mov %ds,%es:0x000044(%edi)
		data16 mov %ds,%es:0x00004c(%edi)
		data16 mov %ds,%es:0x000054(%edi)
		data16 mov %ds,%es:0x00005c(%edi)
		pop    %es
		pop    %ds
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08424c_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000005,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08426f_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000000,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084292_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		mov    %ax,_0bf930_data
		mov    %ch,%al
		cbtw   
		mov    %ax,_0bf938_data
		mov    %cl,%al
		cbtw   
		mov    %ax,_0bf934_data
		mov    %dx,_0bf93c_data
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0842d6_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		push   %es
		mov    $0x000002,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		push   %ds
		les    0x000018(%ebp),%edi
		lds    0x000010(%ebp),%esi
		mov    %edx,%esi
		mov    $0x00006a,%ecx
		cld    
		rep movsb %ds:(%esi),%es:(%edi)
		les    0x000018(%ebp),%edi
		data16 mov %ds,%es:0x000044(%edi)
		data16 mov %ds,%es:0x00004c(%edi)
		data16 mov %ds,%es:0x000054(%edi)
		data16 mov %ds,%es:0x00005c(%edi)
		pop    %ds
		pop    %es
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084354_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%eax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084377_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x00000a,%eax
		mov    0x000020(%ebp),%ecx
		les    0x000018(%ebp),%edi
		mov    0x000024(%ebp),%edx
		mov    0x000028(%ebp),%ebx
		push   %ds
		pop    %gs
		lcall  *0x000008(%ebp)
		cli    
		mov    0x00002c(%ebp),%ebx
		mov    %edi,(%ebx)
		mov    %ecx,0x000008(%ebx)
		mov    %esi,0x000010(%ebx)
		mov    0x00000c(%ebp),%ax
		mov    %ax,0x000004(%ebx)
		mov    0x000014(%ebp),%ax
		mov    %ax,0x00000c(%ebx)
		mov    %ax,0x000014(%ebx)
		sti    
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0843ca_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000000,%eax
		mov    0x000018(%ebp),%bx
		mov    0x00001c(%ebp),%cx
		mov    0x000020(%ebp),%dx
		mov    %dl,%ch
		mov    0x00002c(%ebp),%si
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0843ff_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000004,%eax
		mov    0x00001c(%ebp),%ecx
		mov    0x000018(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084428_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000002,%eax
		mov    0x000018(%ebp),%ebx
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08444e_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000003,%eax
		mov    $0x000008,%bx
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08449f_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		cmp    $0x000003,%al
		jne    _0844c9_jump
		nop
		nop
		nop
		nop
		mov    $0x000081,%ah
		mov    $0x00000b,%al
		mov    0x000008(%ebp),%ebx
		xor    %dx,%dx
		int    $0x00004b
		mov    $0x000000,%ax

	_0844c9_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0844d4_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		cmp    $0x000003,%al
		jne    _0844fe_jump
		nop
		nop
		nop
		nop
		mov    $0x000081,%ah
		mov    $0x00000c,%al
		mov    0x000008(%ebp),%ebx
		xor    %dx,%dx
		int    $0x00004b
		mov    $0x000000,%ax

	_0844fe_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084509_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		lfs    0x000010(%ebp),%edi
		mov    $0x000004,%eax
		lcall  *0x000008(%ebp)
		mov    %esi,_0bf894_data
		mov    %edi,_0bf89c_data
		mov    0x000014(%ebp),%ax
		mov    %ax,_0bf898_data
		mov    %ax,_0bf8a0_data
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084548_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		push   %ds
		push   %ds
		pop    %es
		mov    $_0bf844_data,%edi
		mov    0x000008(%ebp),%ebx
		lds    _0bf894_data,%esi
		mov    (%esi,%ebx,4),%esi
		cmp    $0xffffffff,%esi
		jne    _084579_jump
		nop
		nop
		nop
		nop
		xor    %eax,%eax
		pop    %ds
		jmp    _084587_jump

	_084579_jump:
		mov    $0x000050,%ecx
		cld    
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %ds
		mov    $_0bf844_data,%eax

	_084587_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084592_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		les    _0bf89c_data,%esi
		mov    0x000008(%ebp),%eax
		mov    %eax,%ebx
		shl    %eax
		shl    $0x000002,%ebx
		add    %eax,%ebx
		mov    0x00000c(%ebp),%eax
		mov    %eax,%es:(%esi,%ebx,1)
		data16 mov %ds,%es:0x000004(%esi,%ebx,1)
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0845c8_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		push   %esi
		push   %es
		mov    $0x00000b,%ax
		lfs    0x000020(%ebp),%edi
		lcall  *0x000018(%ebp)
		mov    %eax,%esi
		mov    %edx,%es
		mov    $0x00000c,%ax
		lfs    0x000010(%ebp),%edi
		lcall  *0x000008(%ebp)
		pop    %es
		pop    %esi
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084628_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x001600,%ax
		int    $0x00002f
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084645_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000100,%ax
		mov    0x000008(%ebp),%ebx
		int    $0x000031
		jae    _08466a_jump
		nop
		nop
		nop
		nop
		mov    $0x000001,%eax
		jmp    _08467b_jump

	_08466a_jump:
		mov    0x00000c(%ebp),%esi
		mov    %dx,(%esi)
		mov    0x000010(%ebp),%esi
		mov    %ax,(%esi)
		mov    $0x000000,%eax

	_08467b_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084686_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%fs
		mov    %eax,%es
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000101,%ax
		mov    0x000008(%ebp),%dx
		int    $0x000031
		mov    $0x000000,%ax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0846b4_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $_0bf8e0_data,%esi
		movl   $0x008107,0x00001c(%esi)
		movl   $0x000000,0x000014(%esi)
		mov    0x000008(%ebp),%ax
		mov    %ax,0x000022(%esi)
		movl   $0x000000,(%esi)
		mov    $0x000300,%ax
		mov    $0x00004b,%bl
		mov    $0x000000,%bh
		mov    $0x000000,%cx
		mov    $_0bf8e0_data,%edi
		push   %ds
		pop    %es
		int    $0x000031
		mov    $_0bf8e0_data,%esi
		andw   $0x000001,0x000020(%esi)
		jne    _084710_jump
		nop
		nop
		nop
		nop
		mov    $0x000000,%eax
		jmp    _084715_jump

	_084710_jump:
		mov    $0x000001,%eax

	_084715_jump:
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_084720_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $_0bf8e0_data,%esi
		movl   $0x008108,0x00001c(%esi)
		movl   $0x000000,0x000014(%esi)
		mov    0x000008(%ebp),%ax
		mov    %ax,0x000022(%esi)
		movl   $0x000000,(%esi)
		mov    $0x000300,%ax
		mov    $0x00004b,%bl
		mov    $0x000000,%bh
		mov    $0x000000,%cx
		mov    $_0bf8e0_data,%edi
		push   %ds
		pop    %es
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08476d_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000800,%ax
		mov    0x00000a(%ebp),%bx
		mov    0x000008(%ebp),%cx
		mov    $0x000000,%si
		mov    $0x004000,%di
		int    $0x000031
		mov    %cx,-0x000008(%ebp)
		mov    %bx,-0x000006(%ebp)
		mov    $0x000000,%ax
		mov    $0x000001,%cx
		int    $0x000031
		mov    %ax,-0x000004(%ebp)
		mov    $0x000007,%ax
		mov    -0x000004(%ebp),%bx
		mov    -0x000006(%ebp),%cx
		mov    -0x000008(%ebp),%dx
		int    $0x000031
		mov    $0x000008,%ax
		mov    -0x000004(%ebp),%bx
		mov    $0x00ffff,%cx
		mov    $0x00ffff,%dx
		int    $0x000031
		mov    $0x000009,%ax
		xor    %ecx,%ecx
		mov    %ds,%cx
		lar    %ecx,%ecx
		shr    $0x000008,%ecx
		mov    -0x000004(%ebp),%bx
		int    $0x000031
		mov    -0x000004(%ebp),%ax
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_0847ed_func:
		mov    %ds,%ax
		mov    %eax,%gs
		mov    %eax,%fs
		mov    %eax,%es
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		push   %ebx
		push   %ecx
		push   %fs
		push   %gs
		push   %es
		mov    $0x000001,%ax
		mov    0x000008(%ebp),%bx
		int    $0x000031
		pop    %es
		pop    %gs
		pop    %fs
		pop    %ecx
		pop    %ebx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    

	_08481f_jump:
		ret    



_084820_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    _0bf950_data,%esi
		test   %esi,%esi
		je     _084878_jump
		test   %eax,%eax
		je     _084878_jump
		mov    %eax,%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		sub    %ecx,%ecx
		dec    %ecx
		xor    %eax,%eax
		repnz scas %es:(%edi),%al
		not    %ecx
		dec    %ecx
		pop    %es
		mov    %ecx,%edi
		jmp    _084872_jump

	_08484c_jump:
		mov    %edi,%ebx
		mov    %ebp,%edx
		mov    %ecx,%eax
		call   _086546_func
		test   %eax,%eax
		jne    _08486f_jump
		mov    (%ecx,%edi,1),%al
		and    $0x0000ff,%eax
		cmp    $0x00003d,%eax
		jne    _08486f_jump
		lea    0x000001(%edi),%eax
		add    %ecx,%eax
		jmp    _08487a_jump

	_08486f_jump:
		add    $0x000004,%esi

	_084872_jump:
		mov    (%esi),%ecx
		test   %ecx,%ecx
		jne    _08484c_jump

	_084878_jump:
		xor    %eax,%eax

	_08487a_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084881_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0848c0_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0848d5_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0848ea_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %cx,-0x00000c(%ebp)
		mov    %ebx,-0x000010(%ebp)
		imul   $0x000006,-0x000008(%ebp),%eax
		cmpl   $0x000000,_0bd910_data(%eax)
		jne    _084920_jump
		cmpw   $0x000000,_0bd914_data(%eax)
		jne    _084920_jump
		movl   $0x000001,-0x000004(%ebp)
		jmp    _084973_jump

	_084920_jump:
		cmpl   $0x000000,-0x000010(%ebp)
		jne    _08492d_jump
		cmpw   $0x000000,-0x00000c(%ebp)
		je     _084963_jump

	_08492d_jump:
		movzwl -0x00000c(%ebp),%eax
		push   %eax
		pushl  -0x000010(%ebp)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd914_data(%eax),%edx
		push   %edx
		pushl  _0bd910_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd932_data(%eax),%edx
		push   %edx
		pushl  _0bd92e_data(%eax)
		call   _0841fe_func
		add    $0x000018,%esp
		jmp    _08496c_jump

	_084963_jump:
		movl   $0x000002,-0x000004(%ebp)
		jmp    _084973_jump

	_08496c_jump:
		movl   $0x000000,-0x000004(%ebp)

	_084973_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    



_08497b_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084990_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0849a5_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000048,%esp
		mov    %eax,-0x00002c(%ebp)
		mov    %edx,-0x000030(%ebp)
		mov    %cx,-0x000044(%ebp)
		mov    %ebx,-0x000048(%ebp)
		movl   $0x00002c,-0x00000c(%ebp)
		movl   $0x000030,-0x000010(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		cmpl   $0x000005,-0x000030(%ebp)
		jbe    _0849eb_jump
		movl   $0x00000a,-0x000028(%ebp)
		jmp    _084bbf_jump

	_0849eb_jump:
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bd9d8_data(%eax)
		je     _084a06_jump
		movl   $0x000009,-0x000028(%ebp)
		jmp    _084bbf_jump

	_084a06_jump:
		cmpl   $0x00e000,-0x00002c(%ebp)
		jb     _084a18_jump
		cmpl   $0x00e200,-0x00002c(%ebp)
		jbe    _084a24_jump

	_084a18_jump:
		movl   $0x000006,-0x000028(%ebp)
		jmp    _084bbf_jump

	_084a24_jump:
		mov    $_0be410_data,%edx
		mov    $_0be50f_data,%eax
		call   _083f47_func
		mov    $_0c12c0_data,%edx
		mov    $_0be50f_data,%eax
		call   _083f66_func
		push   $0x000200
		mov    $_0be50f_data,%eax
		push   %eax
		call   _07cf6f_func
		add    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		cmpl   $0xffffffff,-0x000004(%ebp)
		jne    _084a6a_jump
		movl   $0x00000f,-0x000028(%ebp)
		jmp    _084bbf_jump

	_084a6a_jump:
		mov    -0x00000c(%ebp),%ebx
		mov    $_0be79c_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _081178_func

	_084a7a_jump:
		mov    -0x000018(%ebp),%eax
		cmp    _0be7bc_data,%eax
		ja     _084a8b_jump
		cmpl   $0x000000,-0x000014(%ebp)
		je     _084a90_jump

	_084a8b_jump:
		jmp    _084b8e_jump

	_084a90_jump:
		mov    -0x000010(%ebp),%ebx
		mov    $_0be7c8_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _081178_func
		mov    _0be7ec_data,%eax
		mov    %eax,-0x000008(%ebp)
		mov    _0be7f0_data,%eax
		cmp    -0x00002c(%ebp),%eax
		jne    _084abb_jump
		testb  $0x000080,_0be7f5_data
		jne    _084ac0_jump

	_084abb_jump:
		jmp    _084b76_jump

	_084ac0_jump:
		movl   $0x000001,-0x000014(%ebp)
		lea    -0x000024(%ebp),%eax
		push   %eax
		pushl  0x000018(%ebp)
		pushl  -0x000008(%ebp)
		call   _084017_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,-0x00003c(%ebp)
		mov    %ecx,-0x000040(%ebp)
		movzwl -0x00003c(%ebp),%eax
		push   %eax
		pushl  -0x000040(%ebp)
		call   _0840db_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,-0x000034(%ebp)
		mov    %ecx,-0x000038(%ebp)
		pushl  -0x000008(%ebp)
		pushl  -0x000024(%ebp)
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _084b1d_jump
		movl   $0x000005,-0x000028(%ebp)
		jmp    _084bbf_jump

	_084b1d_jump:
		lea    -0x000020(%ebp),%eax
		push   %eax
		mov    -0x000008(%ebp),%edx
		mov    -0x00003c(%ebp),%ebx
		mov    -0x000040(%ebp),%eax
		mov    -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _07d1e2_func
		mov    -0x000034(%ebp),%eax
		lgs    -0x000048(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000038(%ebp),%eax
		lgs    -0x000048(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000010(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000040(%ebp),%eax
		lgs    0x000010(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000008(%ebp),%al
		mov    0x00001c(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    0x000020(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _084b86_jump

	_084b76_jump:
		mov    $0x000001,%ebx
		mov    -0x000008(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _07d218_func

	_084b86_jump:
		incl   -0x000018(%ebp)
		jmp    _084a7a_jump

	_084b8e_jump:
		mov    -0x000004(%ebp),%eax
		call   _07d213_func
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		mov    _0be7f0_data,%edx
		mov    %edx,_0bda82_data(%eax)
		mov    -0x000030(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000001,_0bd9d8_data(%eax)
		movl   $0x000000,-0x000028(%ebp)

	_084bbf_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		ret    $0x000014



_084bc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		cmpl   $0x000005,-0x000008(%ebp)
		jbe    _084beb_jump
		movl   $0x00000a,-0x000004(%ebp)
		jmp    _084c96_jump

	_084beb_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		cmpl   $0x000000,_0bd9d8_data(%eax)
		jne    _084c06_jump
		movl   $0x00000a,-0x000004(%ebp)
		jmp    _084c96_jump

	_084c06_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		movl   $0x000000,_0bd9d8_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd94c_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd8e8_data(%eax)
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _084c43_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _084c96_jump

	_084c43_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd9b0_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd914_data(%eax),%edx
		push   %edx
		pushl  _0bd910_data(%eax)
		call   _0840a5_func
		add    $0x00000c,%esp
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd9b0_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd932_data(%eax),%edx
		push   %edx
		pushl  _0bd92e_data(%eax)
		call   _0840a5_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_084c96_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084ca0_func:
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000044,%esp
		mov    %eax,-0x00002c(%ebp)
		mov    %cx,-0x000040(%ebp)
		mov    %ebx,-0x000044(%ebp)
		movl   $0x00002c,-0x00000c(%ebp)
		movl   $0x000030,-0x000010(%ebp)
		movl   $0x000000,-0x000014(%ebp)
		movl   $0x000000,-0x000018(%ebp)
		cmpl   $0x001000,-0x00002c(%ebp)
		jb     _084ce4_jump
		cmpl   $0x001023,-0x00002c(%ebp)
		jbe    _084cf0_jump

	_084ce4_jump:
		movl   $0x000006,-0x000028(%ebp)
		jmp    _084e70_jump

	_084cf0_jump:
		mov    $_0be410_data,%edx
		mov    $_0be50f_data,%eax
		call   _083f47_func
		mov    $_0c12c0_data,%edx
		mov    $_0be50f_data,%eax
		call   _083f66_func
		push   $0x000200
		mov    $_0be50f_data,%eax
		push   %eax
		call   _07cf6f_func
		add    $0x000008,%esp
		mov    %eax,-0x000004(%ebp)
		cmpl   $0xffffffff,-0x000004(%ebp)
		jne    _084d36_jump
		movl   $0x00000f,-0x000028(%ebp)
		jmp    _084e70_jump

	_084d36_jump:
		mov    -0x00000c(%ebp),%ebx
		mov    $_0be79c_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _081178_func

	_084d46_jump:
		mov    -0x000018(%ebp),%eax
		cmp    _0be7bc_data,%eax
		ja     _084d57_jump
		cmpl   $0x000000,-0x000014(%ebp)
		je     _084d5c_jump

	_084d57_jump:
		jmp    _084e61_jump

	_084d5c_jump:
		mov    -0x000010(%ebp),%ebx
		mov    $_0be7c8_data,%edx
		mov    -0x000004(%ebp),%eax
		call   _081178_func
		mov    _0be7ec_data,%eax
		mov    %eax,-0x000008(%ebp)
		mov    _0be7f0_data,%eax
		cmp    -0x00002c(%ebp),%eax
		jne    _084d87_jump
		testb  $0x000040,_0be7f5_data
		jne    _084d8c_jump

	_084d87_jump:
		jmp    _084e49_jump

	_084d8c_jump:
		movl   $0x000001,-0x000014(%ebp)
		addl   $0x004000,-0x000008(%ebp)
		lea    -0x000024(%ebp),%eax
		push   %eax
		pushl  0x00001c(%ebp)
		pushl  -0x000008(%ebp)
		call   _084017_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x00000c,%esp
		mov    %bx,-0x000038(%ebp)
		mov    %ecx,-0x00003c(%ebp)
		movzwl -0x000038(%ebp),%eax
		push   %eax
		pushl  -0x00003c(%ebp)
		call   _0840db_func
		mov    %edx,%ebx
		mov    %eax,%ecx
		add    $0x000008,%esp
		mov    %bx,-0x000030(%ebp)
		mov    %ecx,-0x000034(%ebp)
		pushl  -0x000008(%ebp)
		pushl  -0x000024(%ebp)
		call   _083f9d_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _084df0_jump
		movl   $0x000005,-0x000028(%ebp)
		jmp    _084e70_jump

	_084df0_jump:
		lea    -0x000020(%ebp),%eax
		push   %eax
		mov    -0x000008(%ebp),%edx
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%eax
		mov    -0x000004(%ebp),%esi
		mov    %ebx,%ecx
		mov    %eax,%ebx
		mov    %esi,%eax
		call   _07d1e2_func
		mov    -0x000030(%ebp),%eax
		lgs    -0x000044(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x000034(%ebp),%eax
		lgs    -0x000044(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000038(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %ax,%gs:0x000004(%edx)
		mov    -0x00003c(%ebp),%eax
		lgs    0x000014(%ebp),%edx
		mov    %eax,%gs:(%edx)
		mov    -0x000008(%ebp),%al
		mov    0x000020(%ebp),%edx
		mov    %al,(%edx)
		mov    -0x000024(%ebp),%eax
		mov    0x000024(%ebp),%edx
		mov    %eax,(%edx)
		jmp    _084e59_jump

	_084e49_jump:
		mov    $0x000001,%ebx
		mov    -0x000008(%ebp),%edx
		mov    -0x000004(%ebp),%eax
		call   _07d218_func

	_084e59_jump:
		incl   -0x000018(%ebp)
		jmp    _084d46_jump

	_084e61_jump:
		mov    -0x000004(%ebp),%eax
		call   _07d213_func
		movl   $0x000000,-0x000028(%ebp)

	_084e70_jump:
		mov    -0x000028(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		ret    $0x000014



_084e7a_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd960_data(%eax)
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd8fc_data(%eax)
		call   _083fda_func
		add    $0x000008,%esp
		test   %eax,%eax
		je     _084eb8_jump
		movl   $0x000005,-0x000004(%ebp)
		jmp    _084f0b_jump

	_084eb8_jump:
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd9c4_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd978_data(%eax),%edx
		push   %edx
		pushl  _0bd974_data(%eax)
		call   _0840a5_func
		add    $0x00000c,%esp
		mov    -0x000008(%ebp),%eax
		shl    $0x000002,%eax
		pushl  _0bd9c4_data(%eax)
		imul   $0x000006,-0x000008(%ebp),%eax
		movzwl _0bd996_data(%eax),%edx
		push   %edx
		pushl  _0bd992_data(%eax)
		call   _0840a5_func
		add    $0x00000c,%esp
		movl   $0x000000,-0x000004(%ebp)

	_084f0b_jump:
		mov    -0x000004(%ebp),%eax
		leave  
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084f3c_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084f51_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084fc8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000000,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_084fdd_func:
		push   %esi
		push   %edi
		push   %ds
		push   %es
		push   %eax
		mov    %dx,%es
		mov    %cx,%ds
		mov    %ebx,%esi
		mov    %eax,%edi

	_084fec_jump:
		mov    (%esi),%al
		mov    %al,%es:(%edi)
		cmp    $0x000000,%al
		je     _085006_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,%es:0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _084fec_jump

	_085006_jump:
		pop    %eax
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		ret    



_08500c_func:
		push   %esi
		push   %edi
		mov    %eax,%edi
		mov    0x00000c(%esp),%eax
		mov    %ebx,%esi
		push   %ds
		push   %es
		push   %edi
		xchg   %eax,%ecx
		mov    %eax,%ds
		mov    %edx,%es
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %eax
		pop    %es
		pop    %ds
		pop    %edi
		pop    %esi
		ret    $0x000004

	_08503c_jump:
		ret    



_08503d_func:
		test   %edx,%edx
		jge    _08503c_jump
		jmp    _07c66e_func



_085046_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		call   _08505b_func
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    



_08505b_func:
		fldl2e 
		fmulp  %st,%st(1)
		push   %ebp
		mov    %esp,%ebp
		mov    $0x008001,%ax
		push   %eax
		filds  -0x000004(%ebp)
		fcom   %st(1)
		fnstsw %ax
		sahf   
		mov    %ebp,%esp
		fstp   %st(0)
		jbe    _08507b_jump
		fstp   %st(0)
		fldz   
		pop    %ebp
		ret    

	_08507b_jump:
		fld    %st(0)
		call   _0850cc_func
		push   %eax
		fists  -0x000004(%ebp)
		fwait
		pop    %eax
		cmp    $0x008000,%ax
		jne    _08509b_jump
		dec    %ax
		push   %eax
		fstp   %st(0)
		fstp   %st(0)
		filds  -0x000004(%ebp)
		fld    %st(0)
		pop    %eax

	_08509b_jump:
		fld    %st(0)
		fld1   
		fscale 
		fstp   %st(1)
		fxch   %st(1)
		fld    %st(2)
		fsubp  %st,%st(1)
		ftst   
		fnstsw %ax
		sahf   
		je     _0850c6_jump
		fld1   
		fchs   
		fxch   %st(1)
		fscale 
		fstp   %st(1)
		f2xm1  
		fld1   
		faddp  %st,%st(1)
		fmul   %st(0),%st
		fmulp  %st,%st(1)
		jmp    _0850c8_jump

	_0850c6_jump:
		fstp   %st(0)

	_0850c8_jump:
		fstp   %st(1)
		pop    %ebp
		ret    



_0850cc_func:
		push   %ebp
		mov    %esp,%ebp
		push   %eax
		fstcw  -0x000002(%ebp)
		fwait
		mov    -0x000002(%ebp),%ax
		and    $0x00f3ff,%ax
		or     $0x000400,%ax
		push   %eax
		fldcw  -0x000008(%ebp)
		frndint 
		fldcw  -0x000002(%ebp)
		fwait
		mov    %ebp,%esp
		pop    %ebp
		ret    



_0850ef_func:
		test   %edx,%edx
		jne    _0850f6_jump
		xor    %eax,%eax
		ret    

	_0850f6_jump:
		jge    _0850fe_jump
		mov    $0xffffffff,%eax
		ret    

	_0850fe_jump:
		mov    $0x000001,%eax
		ret    



_085104_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000010,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		lea    -0x000010(%ebp),%edx
		lea    -0x000008(%ebp),%eax
		call   _0865a4_func
		mov    -0x000010(%ebp),%eax
		mov    %eax,(%ebx)
		mov    -0x00000c(%ebp),%eax
		mov    %eax,0x000004(%ebx)
		mov    -0x000008(%ebp),%eax
		mov    -0x000004(%ebp),%edx
		mov    %ebp,%esp
		pop    %ebp
		ret    



_085130_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		sub    $0x000008,%esp
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)
		test   %edx,%edx
		je     _0851c2_jump
		mov    -0x000006(%ebp),%eax
		and    $0x007ff0,%eax
		cwtl   
		sar    $0x000004,%eax
		cmp    $0x003e80,%ebx
		jle    _08515e_jump
		mov    $0x003e80,%ebx

	_08515e_jump:
		cmp    $0xffffc180,%ebx
		jge    _08516b_jump
		mov    $0xffffc180,%ebx

	_08516b_jump:
		add    %ebx,%eax
		test   %eax,%eax
		jg     _085177_jump
		xor    %eax,%eax
		xor    %edx,%edx
		jmp    _0851c8_jump

	_085177_jump:
		cmp    $0x0007ff,%eax
		jl     _0851aa_jump
		mov    -0x000006(%ebp),%ecx
		call   _082f65_func
		test   %cx,%cx
		jle    _085198_jump
		mov    _0c14a0_data,%eax
		mov    _0c14a4_data,%edx
		jmp    _0851c8_jump

	_085198_jump:
		mov    _0c14a0_data,%eax
		mov    _0c14a4_data,%edx
		call   _07c66e_func
		jmp    _0851c8_jump

	_0851aa_jump:
		mov    -0x000006(%ebp),%edx
		and    $0x00800f,%edx
		shl    $0x000004,%eax
		mov    %edx,%ebx
		mov    %dx,-0x000006(%ebp)
		or     %eax,%ebx
		mov    %bx,-0x000006(%ebp)

	_0851c2_jump:
		mov    -0x00000c(%ebp),%eax
		mov    -0x000008(%ebp),%edx

	_0851c8_jump:
		lea    -0x000004(%ebp),%esp
		pop    %ecx
		pop    %ebp
		ret    



_0851ce_func:
		push   %ebp
		push   %es
		push   %ebx
		push   %ds
		push   %edx
		call   _085206_func
		push   %ds
		push   %edi
		mov    %esp,%ebp
		mov    0x000008(%ebp),%edi
		mov    0x00000c(%ebp),%ds
		mov    %eax,(%edi)
		mov    %ebx,0x000004(%edi)
		mov    %ecx,0x000008(%edi)
		mov    %edx,0x00000c(%edi)
		mov    %esi,0x000010(%edi)
		popl   0x000014(%edi)
		sbb    %eax,%eax
		mov    %eax,0x000018(%edi)
		pop    %eax
		pop    %ebx
		pop    %ebx
		pop    %ebx
		mov    %ax,0x000006(%ebx)
		data16 mov %es,(%ebx)
		pop    %es
		pop    %ebp
		ret    



_085206_func:
		lea    (%esi,%esi,2),%esi
		lea    %cs:_0852ac_jump(%esi),%eax
		push   %eax
		mov    (%ebx),%es
		mov    0x000006(%ebx),%bp
		mov    (%edi),%eax
		mov    0x000004(%edi),%ebx
		mov    0x000008(%edi),%ecx
		mov    0x00000c(%edi),%edx
		mov    0x000010(%edi),%esi
		mov    0x000014(%edi),%edi
		mov    %ebp,%ds
		ret    

	_0852ac_jump:
		int    $0x000000
		ret    



_0855ac_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		sub    $0x00000c,%esp
		mov    %eax,%ebx
		mov    $0x00002a,%ah
		int    $0x000021
		sub    $0x00076c,%cx
		mov    %al,%ch
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,0x000008(%esp)
		xor    %eax,%eax
		mov    0x00000a(%esp),%al
		mov    %eax,0x000014(%ebx)
		xor    %eax,%eax
		mov    0x000009(%esp),%al
		dec    %eax
		mov    %eax,0x000010(%ebx)
		xor    %eax,%eax
		mov    0x000008(%esp),%al
		mov    %eax,0x00000c(%ebx)
		mov    $0x00002c,%ah
		int    $0x000021
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,(%esp)
		xor    %eax,%eax
		mov    0x000003(%esp),%al
		xor    %ecx,%ecx
		mov    %eax,0x000008(%ebx)
		xor    %eax,%eax
		mov    (%esp),%cl
		mov    0x000002(%esp),%al
		mov    %ecx,%esi
		mov    %eax,0x000004(%ebx)
		xor    %eax,%eax
		shl    $0x000002,%esi
		mov    0x000001(%esp),%al
		add    %ecx,%esi
		mov    %eax,(%ebx)
		mov    $0x00002a,%ah
		int    $0x000021
		sub    $0x00076c,%cx
		mov    %al,%ch
		shl    $0x000010,%ecx
		mov    %dx,%cx
		mov    %ecx,0x000004(%esp)
		mov    0x000004(%esp),%al
		mov    0x000008(%esp),%ah
		add    %esi,%esi
		cmp    %ah,%al
		je     _08565e_jump
		cmpl   $0x000017,0x000008(%ebx)
		je     _08565e_jump
		xor    %eax,%eax
		mov    0x000006(%esp),%al
		mov    %eax,0x000014(%ebx)
		xor    %eax,%eax
		mov    0x000005(%esp),%al
		dec    %eax
		mov    %eax,0x000010(%ebx)
		xor    %eax,%eax
		mov    0x000004(%esp),%al
		mov    %eax,0x00000c(%ebx)

	_08565e_jump:
		mov    %esi,%eax
		movl   $0xffffffff,0x000020(%ebx)
		add    $0x00000c,%esp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08566f_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ebp
		mov    $0x00000c,%esi
		mov    0x000010(%ebp),%edx
		mov    0x000010(%eax),%eax
		sar    $0x00001f,%edx
		idiv   %esi
		mov    $_0c150c_data,%ebx
		mov    0x000014(%ebp),%esi
		mov    %edx,%edi
		cmp    $0xf4fb7ea1,%esi
		jge    _0856a3_jump

	_085699_jump:
		mov    $0xffffffff,%eax
		jmp    _0857bc_jump

	_0856a3_jump:
		mov    0x000010(%ebp),%eax
		mov    %eax,%edx
		mov    $0x00000c,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		add    %eax,%esi

	_0856b4_jump:
		test   %edi,%edi
		jge    _0856be_jump
		dec    %esi
		add    $0x00000c,%edi
		jmp    _0856b4_jump

	_0856be_jump:
		test   %esi,%esi
		jl     _085699_jump
		lea    0x00076c(%esi),%eax
		call   _0866d0_func
		test   %eax,%eax
		je     _0856d6_jump
		mov    $_0c1526_data,%ebx

	_0856d6_jump:
		lea    0x000003(%esi),%ecx
		mov    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		shl    $0x000003,%eax
		add    %esi,%eax
		mov    %eax,%edx
		shl    $0x000002,%eax
		sar    $0x000002,%ecx
		add    %edx,%eax
		lea    (%eax,%ecx,1),%edx
		movswl (%ebx,%edi,2),%eax
		mov    0x00000c(%ebp),%edi
		add    %edx,%eax
		add    %eax,%edi
		dec    %edi
		test   %esi,%esi
		je     _085703_jump
		dec    %edi

	_085703_jump:
		mov    0x000008(%ebp),%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		mov    0x000004(%ebp),%edx
		add    %eax,%edx
		mov    %edx,%eax
		shl    $0x000004,%eax
		sub    %edx,%eax
		mov    0x000000(%ebp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi

	_085724_jump:
		test   %esi,%esi
		jge    _085731_jump
		dec    %edi
		add    $0x015180,%esi
		jmp    _085724_jump

	_085731_jump:
		mov    %ebp,%ecx
		mov    %esi,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _086b17_func
		call   _086cc3_func
		mov    _0bf9a0_data,%edx
		mov    0x000020(%ebp),%ebx
		add    %edx,%esi
		test   %ebx,%ebx
		jge    _085759_jump
		mov    %ebp,%eax
		call   _086824_func

	_085759_jump:
		cmpl   $0x000000,0x000020(%ebp)
		jle    _085765_jump
		sub    _0bf9a4_data,%esi

	_085765_jump:
		test   %esi,%esi
		jge    _085772_jump
		dec    %edi
		add    $0x015180,%esi
		jmp    _085765_jump

	_085772_jump:
		cmp    $0x0063de,%edi
		jl     _085699_jump
		jne    _08579c_jump
		mov    _0bf9a0_data,%eax
		sub    $0x015180,%esi
		test   %eax,%eax
		jle    _085699_jump
		test   %esi,%esi
		jge    _0857ba_jump
		jmp    _085699_jump

	_08579c_jump:
		lea    -0x0063df(%edi),%eax
		mov    %eax,%edi
		shl    $0x000003,%edi
		sub    %eax,%edi
		shl    $0x000005,%edi
		add    %eax,%edi
		shl    $0x000007,%edi
		mov    %edi,%eax
		shl    $0x000002,%edi
		sub    %eax,%edi
		add    %edi,%esi

	_0857ba_jump:
		mov    %esi,%eax

	_0857bc_jump:
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0857d5_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    _0bd5b9_data,%ah
		test   %ah,%ah
		je     _0857f9_jump
		mov    %edi,%eax
		call   _087028_func
		jmp    _08593d_jump

	_0857f9_jump:
		mov    %ah,-0x000018(%ebp)
		mov    %ah,-0x000014(%ebp)
		mov    %edi,%eax
		mov    $0x3ff00000,%ecx
		call   _0850ef_func
		mov    %eax,-0x00001c(%ebp)
		mov    %esi,%edx
		mov    %edi,%eax
		xor    %ebx,%ebx
		call   _08503d_func
		mov    %eax,%edi
		mov    %edx,%esi
		call   _081734_func
		jne    _085833_jump
		mov    $0x54442d18,%edi
		mov    $0x3fe921fb,%esi
		jmp    _085926_jump

	_085833_jump:
		mov    $0x3ff00000,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   _081734_func
		jle    _08585e_jump
		mov    $0x3ff00000,%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		xor    %eax,%eax
		call   _07c468_func
		mov    $0x000001,%bl
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bl,-0x000018(%ebp)

	_08585e_jump:
		mov    $0x5e9ecd56,%ebx
		mov    $0x3fd12614,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _081734_func
		jle    _0858d8_jump
		mov    $0xd0b09955,%ebx
		mov    $0x3fe76cf5,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07baef_func
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _07b938_func
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _07b938_func
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07b938_func
		mov    $0xe8584ca9,%ebx
		mov    $0x3ffbb67a,%ecx
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07b938_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _07c468_func
		mov    $0x000001,%bh
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %bh,-0x000014(%ebp)

	_0858d8_jump:
		mov    $0x000008,%ecx
		mov    $_0c14a8_data,%ebx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _082f1e_func
		mov    -0x000014(%ebp),%cl
		mov    %eax,%edi
		mov    %edx,%esi
		test   %cl,%cl
		je     _085909_jump
		mov    $0x382d7366,%ebx
		mov    $0x3fe0c152,%ecx
		call   _07b938_func
		mov    %eax,%edi
		mov    %edx,%esi

	_085909_jump:
		cmpb   $0x000000,-0x000018(%ebp)
		je     _085926_jump
		mov    $0x54442d15,%eax
		mov    $0x3ff921fb,%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07b932_func
		mov    %eax,%edi
		mov    %edx,%esi

	_085926_jump:
		cmpl   $0x000000,-0x00001c(%ebp)
		jge    _085939_jump
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07c66e_func
		mov    %eax,%edi
		mov    %edx,%esi

	_085939_jump:
		mov    %edi,%eax
		mov    %esi,%edx

	_08593d_jump:
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_085946_func:
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     _085995_jump
		add    $0x000007,%eax
		jb     _085995_jump
		and    $0x0000fc,%al
		mov    $0x00000c,%edx
		sub    %edx,%eax
		cmc    
		sbb    %ecx,%ecx
		and    %ecx,%eax
		add    %edx,%eax
		cmp    0x000014(%ebx),%eax
		ja     _085995_jump
		mov    0x00000c(%ebx),%esi
		mov    0x000010(%ebx),%edi
		cmp    %edi,%eax
		ja     _085979_jump
		mov    0x000028(%ebx),%esi
		sub    %edi,%edi

	_085979_jump:
		mov    (%esi),%edx
		cmp    %edx,%eax
		jbe    _085999_jump
		sub    %edx,%edi
		cmc    
		sbb    %ecx,%ecx
		and    %ecx,%edi
		add    %edx,%edi
		lea    0x000020(%ebx),%edx
		mov    0x000008(%esi),%esi
		cmp    %edx,%esi
		jne    _085979_jump
		mov    %edi,0x000014(%ebx)

	_085995_jump:
		sub    %eax,%eax
		jmp    _0859e4_jump

	_085999_jump:
		sub    %eax,%edx
		mov    %edi,0x000010(%ebx)
		incl   0x000018(%ebx)
		mov    0x000008(%esi),%ecx
		cmp    $0x00000c,%edx
		jb     _0859c7_jump
		mov    %esi,%edi
		add    %eax,%edi
		mov    %edi,0x00000c(%ebx)
		mov    %edx,(%edi)
		mov    %eax,(%esi)
		mov    0x000004(%esi),%ebx
		mov    %ebx,0x000004(%edi)
		mov    %ecx,0x000008(%edi)
		mov    %edi,0x000008(%ebx)
		mov    %ecx,%ebx
		mov    %edi,0x000004(%ebx)
		jmp    _0859dc_jump

	_0859c7_jump:
		decl   0x00001c(%ebx)
		mov    %esi,%eax
		mov    %ecx,%edi
		mov    0x000004(%esi),%esi
		mov    %edi,0x000008(%esi)
		mov    %esi,0x000004(%edi)
		mov    %esi,0x00000c(%ebx)
		mov    %eax,%esi

	_0859dc_jump:
		orl    $0x000001,(%esi)
		mov    %esi,%eax
		add    $0x000004,%eax

	_0859e4_jump:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret    

	_0859e9_jump:
		jmp    _085af4_jump



_0859ee_func:
		push   %esi
		push   %edi
		push   %ecx
		push   %ds
		mov    %edx,%ds
		or     %eax,%eax
		je     _0859e9_jump
		mov    %eax,%esi
		sub    $0x000004,%esi
		mov    (%esi),%eax
		test   $0x000001,%al
		je     _0859e9_jump
		and    $0x0000fe,%al
		mov    %esi,%edi
		add    %eax,%edi
		testl  $0x000001,(%edi)
		jne    _085a30_jump
		cmp    0x00000c(%ebx),%edi
		jne    _085a19_jump
		mov    %esi,0x00000c(%ebx)

	_085a19_jump:
		add    (%edi),%eax
		mov    %eax,(%esi)
		push   %ebx
		mov    0x000004(%edi),%ebx
		mov    0x000008(%edi),%edi
		mov    %edi,0x000008(%ebx)
		mov    %ebx,0x000004(%edi)
		pop    %ebx
		decl   0x00001c(%ebx)
		jmp    _085aac_jump

	_085a30_jump:
		mov    %eax,(%esi)
		mov    0x00000c(%ebx),%edi
		cmp    %edi,%esi
		jae    _085a47_jump
		cmp    0x000004(%edi),%esi
		ja     _085aac_jump
		mov    0x000028(%ebx),%edi
		cmp    %edi,%esi
		jb     _085aac_jump
		jmp    _085a56_jump

	_085a47_jump:
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _085aac_jump
		lea    0x000020(%ebx),%edi
		cmp    0x000024(%ebx),%esi
		ja     _085aac_jump

	_085a56_jump:
		sub    %edx,%edx
		mov    0x000018(%ebx),%eax
		mov    0x00001c(%ebx),%ecx
		inc    %ecx
		div    %ecx
		dec    %ecx
		cmp    %ecx,%eax
		jae    _085a8b_jump
		mov    0x000018(%ebx),%edx
		sub    %ecx,%edx
		add    %eax,%eax
		cmp    %ecx,%edx
		ja     _085a73_jump
		sub    %eax,%eax

	_085a73_jump:
		mov    %esi,%edi
		add    (%esi),%edi

	_085a77_jump:
		mov    (%edi),%edx
		test   $0x000001,%dl
		je     _085aac_jump
		cmp    $0xffffffff,%edx
		je     _085a8b_jump
		and    $0x0000fe,%dl
		add    %edx,%edi
		dec    %eax
		jne    _085a77_jump

	_085a8b_jump:
		mov    0x00000c(%ebx),%edi
		cmp    %edi,%esi
		jae    _085a95_jump
		mov    0x000028(%ebx),%edi

	_085a95_jump:
		cmp    %edi,%esi
		jb     _085aac_jump
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _085aac_jump
		mov    0x000008(%edi),%edi
		cmp    %edi,%esi
		jb     _085aac_jump
		mov    0x000008(%edi),%edi
		jmp    _085a95_jump

	_085aac_jump:
		mov    0x000004(%edi),%edx
		mov    (%esi),%ecx
		xchg   %edi,%edx
		mov    %edi,%eax
		add    (%edi),%eax
		cmp    %esi,%eax
		jne    _085acb_jump
		add    (%edi),%ecx
		mov    %ecx,(%edi)
		cmp    0x00000c(%ebx),%esi
		jne    _085ac7_jump
		mov    %edi,0x00000c(%ebx)

	_085ac7_jump:
		mov    %edi,%esi
		jmp    _085adc_jump

	_085acb_jump:
		incl   0x00001c(%ebx)
		mov    %edx,0x000008(%esi)
		mov    %edi,0x000004(%esi)
		mov    %esi,0x000008(%edi)
		mov    %edx,%edi
		mov    %esi,0x000004(%edi)

	_085adc_jump:
		decl   0x000018(%ebx)
		cmp    0x00000c(%ebx),%esi
		jae    _085aec_jump
		cmp    0x000010(%ebx),%ecx
		jbe    _085aec_jump
		mov    %ecx,0x000010(%ebx)

	_085aec_jump:
		cmp    0x000014(%ebx),%ecx
		jbe    _085af4_jump
		mov    %ecx,0x000014(%ebx)

	_085af4_jump:
		pop    %ds
		pop    %ecx
		pop    %edi
		pop    %esi
		ret    



_085af9_func:
		push   %ebx
		push   %edx
		mov    _0bd5b0_data,%edx
		cmp    %edx,%eax
		jne    _085b0e_jump
		mov    0x000008(%edx),%edx
		mov    %edx,_0bd5b0_data

	_085b0e_jump:
		mov    _0bd5ac_data,%ebx
		cmp    %ebx,%eax
		jne    _085b21_jump
		mov    0x000008(%ebx),%edx
		mov    %edx,_0bd5ac_data

	_085b21_jump:
		mov    0x000004(%eax),%edx
		mov    0x000008(%eax),%eax
		test   %edx,%edx
		je     _085b2e_jump
		mov    %eax,0x000008(%edx)

	_085b2e_jump:
		test   %eax,%eax
		je     _085b35_jump
		mov    %edx,0x000004(%eax)

	_085b35_jump:
		pop    %edx
		pop    %ebx
		ret    



_085b38_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    _0bd5ac_data,%edx

	_085b43_jump:
		test   %edx,%edx
		je     _085e22_jump
		mov    0x000024(%edx),%eax
		mov    (%eax),%eax
		mov    (%edx),%ebx
		add    $0x00002c,%eax
		cmp    %ebx,%eax
		jne    _085b8f_jump
		lea    -0x000008(%edx),%ebx
		mov    %edx,%eax
		mov    0x000008(%edx),%ecx
		call   _085af9_func
		mov    %ecx,%edx
		mov    0x000004(%ebx),%ecx
		test   %ecx,%ecx
		jne    _085b7f_jump
		mov    (%ebx),%esi
		mov    (%ebx),%di
		shr    $0x000010,%esi
		mov    $0x000005,%ah
		mov    $0x000002,%al
		int    $0x000031
		jmp    _085b43_jump

	_085b7f_jump:
		mov    %ecx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x000049,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		pop    %es
		jmp    _085b43_jump

	_085b8f_jump:
		mov    0x000008(%edx),%edx
		jmp    _085b43_jump



_085c93_func:
		push   %ebx
		push   %edx
		mov    %eax,%edx
		mov    _0bd5ac_data,%eax
		xor    %ebx,%ebx
		jmp    _085ca9_jump

	_085ca0_jump:
		cmp    %eax,%edx
		jb     _085cad_jump
		mov    %eax,%ebx
		mov    0x000008(%eax),%eax

	_085ca9_jump:
		test   %eax,%eax
		jne    _085ca0_jump

	_085cad_jump:
		mov    %ebx,0x000004(%edx)
		mov    %eax,0x000008(%edx)
		test   %ebx,%ebx
		je     _085cbc_jump
		mov    %edx,0x000008(%ebx)
		jmp    _085cc2_jump

	_085cbc_jump:
		mov    %edx,_0bd5ac_data

	_085cc2_jump:
		test   %eax,%eax
		je     _085cc9_jump
		mov    %edx,0x000004(%eax)

	_085cc9_jump:
		lea    0x000020(%edx),%ebx
		mov    (%edx),%eax
		add    $0x00002c,%edx
		movl   $0x000000,-0x00000c(%edx)
		movl   $0x000000,-0x00001c(%edx)
		movl   $0x000000,-0x000014(%edx)
		movl   $0x000000,-0x000010(%edx)
		mov    %ebx,-0x000008(%edx)
		mov    %ebx,-0x000004(%edx)
		sub    $0x00002c,%eax
		mov    %ebx,-0x000020(%edx)
		mov    %eax,(%edx)
		movl   $0xffffffff,(%edx,%eax,1)
		mov    %edx,%eax
		pop    %edx
		pop    %ebx
		ret    



_085d07_func:
		push   %ebx
		push   %edx
		mov    _0bd5ac_data,%edx
		test   %edx,%edx
		je     _085d52_jump
		mov    0x000024(%edx),%edx
		mov    (%edx),%eax
		add    %edx,%eax
		lea    0x000004(%eax),%ebx
		xor    %eax,%eax
		mov    _0bd816_data,%al
		cmp    $0x000002,%eax
		jl     _085d45_jump
		cmp    $0x000008,%eax
		jg     _085d45_jump
		cmpb   $0x000000,_0bd818_data
		jne    _085d45_jump
		xor    %eax,%eax
		mov    %ds,%ax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,_0bd7e8_data

	_085d45_jump:
		cmp    _0bd7e8_data,%ebx
		jne    _085d52_jump
		mov    (%edx),%eax
		pop    %edx
		pop    %ebx
		ret    

	_085d52_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ebx
		ret    



_085d57_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		mov    (%esp),%ebx
		mov    (%esp),%ecx
		shr    $0x000010,%ebx
		call   _085b38_func
		mov    $0x000005,%ah
		mov    $0x000001,%al
		int    $0x000031
		sbb    %eax,%eax
		inc    %eax
		je     _085d86_jump
		mov    %bx,%ax
		shl    $0x000010,%eax
		mov    %cx,%ax
		mov    %di,(%eax)
		mov    %si,0x000002(%eax)

	_085d86_jump:
		test   %eax,%eax
		je     _085da3_jump
		mov    (%esp),%ebx
		lea    0x000008(%eax),%edx
		sub    $0x000008,%ebx
		mov    %ebx,(%edx)
		movl   $0x000000,0x000004(%eax)
		mov    %edx,%eax
		jmp    _085e1f_jump

	_085da3_jump:
		testw  $0x00fff0,_0e5e66_data
		je     _085db8_jump
		movl   $0x0fffff,_0e5e64_data

	_085db8_jump:
		cmpl   $0x010000,(%esp)
		ja     _085e1d_jump
		mov    _0e5e64_data,%ebx
		shr    $0x000004,%ebx
		or     $0x000001,%bl
		mov    $0x000048,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%edx
		test   %eax,%eax
		jl     _085e1d_jump
		mov    (%esp),%ebx
		shr    $0x000004,%ebx
		mov    $0x000048,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		mov    %eax,%esi
		mov    %eax,%ebx
		mov    %edx,%eax
		push   %es
		mov    %eax,%es
		mov    $0x000049,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		pop    %es
		test   %esi,%esi
		jl     _085e1d_jump
		mov    $0x000000,%ah
		mov    $0x000006,%al
		int    $0x000031
		mov    %ecx,%eax
		shl    $0x000010,%eax
		mov    %dx,%ax
		add    $0x000008,%eax
		mov    (%esp),%edx
		mov    %esi,-0x000004(%eax)
		sub    $0x000008,%edx
		mov    %edx,(%eax)
		jmp    _085e1f_jump

	_085e1d_jump:
		xor    %eax,%eax

	_085e1f_jump:
		add    $0x000004,%esp

	_085e22_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_085e28_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %eax
		cmpl   $0x000000,_0bf9f8_data
		jne    _085e3b_jump

	_085e37_jump:
		xor    %eax,%eax
		jmp    _085e1f_jump

	_085e3b_jump:
		cmpl   $0xfffffffe,_0bd7e8_data
		je     _085e37_jump
		mov    %esp,%eax
		call   _086024_func
		test   %eax,%eax
		je     _085e1f_jump
		xor    %eax,%eax
		mov    _0bd816_data,%al
		cmp    $0x000001,%eax
		jne    _085e70_jump
		mov    (%esp),%eax
		call   _085d57_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _085e8b_jump
		mov    (%eax),%eax
		mov    %eax,(%esp)
		jmp    _085e8b_jump

	_085e70_jump:
		mov    (%esp),%ebx
		mov    $0x80004800,%eax
		int    $0x000021
		sbb    %ebx,%ebx
		not    %ebx
		and    %ebx,%eax
		mov    (%esp),%ecx
		sub    $0x000004,%ecx
		mov    %eax,%edx
		mov    %ecx,(%esp)

	_085e8b_jump:
		test   %edx,%edx
		je     _085e37_jump
		mov    (%esp),%eax
		mov    (%esp),%esi
		sub    $0x000004,%eax
		cmp    %esi,%eax
		ja     _085e37_jump
		mov    %eax,(%esp)
		cmp    $0x000038,%eax
		jb     _085e37_jump
		mov    %eax,(%edx)
		mov    %edx,%eax
		call   _085c93_func
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)
		or     $0x000001,%al
		mov    %eax,(%ebx)
		mov    0x000018(%edx),%edi
		movl   $0xffffffff,0x000014(%edx)
		inc    %edi
		lea    0x000004(%ebx),%eax
		mov    %edi,0x000018(%edx)
		call   _0819b5_func
		mov    $0x000001,%eax
		jmp    _085e1f_jump



_085ed8_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %ebp
		push   %eax
		xor    %eax,%eax
		mov    _0bd816_data,%al
		cmp    $0x000001,%eax
		jne    _085ef3_jump
		cmpb   $0x000000,_0bd817_data
		je     _085eff_jump

	_085ef3_jump:
		xor    %eax,%eax
		mov    _0bd816_data,%al
		cmp    $0x000009,%eax
		jne    _085f0c_jump

	_085eff_jump:
		mov    (%esp),%eax
		call   _085e28_func
		jmp    _08601b_jump

	_085f0c_jump:
		cmpl   $0x000000,_0bf9f8_data
		jne    _085f1c_jump

	_085f15_jump:
		xor    %eax,%eax
		jmp    _08601b_jump

	_085f1c_jump:
		cmpl   $0xfffffffe,_0bd7e8_data
		je     _085f15_jump
		mov    %esp,%eax
		call   _086024_func
		test   %eax,%eax
		je     _08601b_jump
		xor    %eax,%eax
		mov    _0bd816_data,%al
		cmp    $0x000002,%eax
		jl     _085f5c_jump
		cmp    $0x000008,%eax
		jg     _085f5c_jump
		cmpb   $0x000000,_0bd818_data
		jne    _085f5c_jump
		xor    %eax,%eax
		mov    %ds,%ax
		lsl    %eax,%eax
		inc    %eax
		mov    %eax,_0bd7e8_data

	_085f5c_jump:
		mov    (%esp),%edx
		mov    _0bd7e8_data,%ecx
		add    %ecx,%edx
		cmp    %ecx,%edx
		jae    _085f70_jump
		mov    $0xfffffffe,%edx

	_085f70_jump:
		mov    %edx,%eax
		call   _087167_func
		cmp    $0xffffffff,%eax
		je     _085f15_jump
		mov    %eax,%ebx
		cmp    $0xfffffff8,%eax
		ja     _085f15_jump
		cmp    %eax,%edx
		jbe    _085f15_jump
		sub    %eax,%edx
		mov    %edx,(%esp)
		lea    -0x000004(%edx),%eax
		cmp    %edx,%eax
		ja     _085f15_jump
		mov    _0bd5ac_data,%edx
		mov    %eax,(%esp)
		jmp    _085fb0_jump

	_085f9e_jump:
		mov    0x000008(%edx),%ebp
		test   %ebp,%ebp
		je     _085fb4_jump
		cmp    %ebx,%edx
		ja     _085fad_jump
		cmp    %ebp,%ebx
		jb     _085fb4_jump

	_085fad_jump:
		mov    0x000008(%edx),%edx

	_085fb0_jump:
		test   %edx,%edx
		jne    _085f9e_jump

	_085fb4_jump:
		test   %edx,%edx
		je     _085fde_jump
		mov    (%edx),%eax
		lea    -0x000004(%ebx),%ecx
		add    %edx,%eax
		cmp    %eax,%ecx
		jne    _085fde_jump
		mov    (%esp),%esi
		add    $0x000004,%esi
		mov    %esi,(%esp)
		add    %esi,(%edx)
		mov    (%esp),%ebp
		mov    %eax,%ebx
		lea    (%eax,%ebp,1),%ecx
		movl   $0xffffffff,(%ecx)
		jmp    _085ffd_jump

	_085fde_jump:
		cmpl   $0x000038,(%esp)
		jb     _085f15_jump
		mov    (%esp),%eax
		mov    %eax,(%ebx)
		mov    %ebx,%eax
		mov    %ebx,%edx
		call   _085c93_func
		mov    %eax,%ebx
		mov    (%eax),%eax
		mov    %eax,(%esp)

	_085ffd_jump:
		mov    (%esp),%eax
		or     $0x000001,%al
		mov    %eax,(%ebx)
		incl   0x000018(%edx)
		lea    0x000004(%ebx),%eax
		movl   $0xffffffff,0x000014(%edx)
		call   _0819b5_func
		mov    $0x000001,%eax

	_08601b_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_086024_func:
		push   %ebx
		push   %edx
		push   %esi
		mov    %eax,%ebx
		mov    (%eax),%edx
		add    $0x000003,%edx
		and    $0x0000fc,%dl
		test   %edx,%edx
		jne    _08603b_jump

	_086035_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    

	_08603b_jump:
		xor    %eax,%eax
		mov    _0bd816_data,%al
		cmp    $0x000001,%eax
		jne    _086050_jump
		cmpb   $0x000000,_0bd817_data
		je     _08605c_jump

	_086050_jump:
		xor    %eax,%eax
		mov    _0bd816_data,%al
		cmp    $0x000009,%eax
		jne    _086061_jump

	_08605c_jump:
		add    $0x000008,%edx
		jmp    _086068_jump

	_086061_jump:
		call   _085d07_func
		sub    %eax,%edx

	_086068_jump:
		mov    %edx,(%ebx)
		add    $0x00003c,%edx
		cmp    (%ebx),%edx
		jb     _086035_jump
		mov    _0bf9fc_data,%esi
		cmp    %esi,%edx
		jae    _086080_jump
		mov    %esi,%edx
		and    $0x0000fe,%dl

	_086080_jump:
		mov    %edx,(%ebx)
		add    $0x000fff,%edx
		cmp    (%ebx),%edx
		jb     _086035_jump
		xor    %dl,%dl
		and    $0x0000f0,%dh
		mov    %edx,(%ebx)
		test   %edx,%edx
		setne  %al
		and    $0x0000ff,%eax
		pop    %esi
		pop    %edx
		pop    %ebx
		ret    



_0860a1_func:
		xor    %eax,%eax
		ret    



_0860a4_func:
		fsave  (%eax)
		fwait
		ret    



_0860a9_func:
		frstor (%eax)
		fwait
		ret    



_0860ad_func:
		push   %ebx
		push   %edx
		cmpb   $0x000000,_0bd5b9_data
		je     _0860ce_jump
		mov    $_0860a4_func,%edx
		mov    $_0860a9_func,%ebx
		mov    %edx,_0bfa00_data
		mov    %ebx,_0bfa04_data

	_0860ce_jump:
		xor    %eax,%eax
		mov    _0bfa08_data,%ax
		call   _087234_func
		pop    %edx
		pop    %ebx
		ret    



_0860e8_func:
		push   %edx
		mov    _0bd5b8_data,%ah
		test   %ah,%ah
		jne    _08612c_jump
		mov    %ah,_0bd5b9_data
		sub    %eax,%eax
		push   %eax
		fninit 
		fnstcw (%esp)
		pop    %eax
		mov    %ah,%al
		xor    %dl,%dl
		and    $0x0000ff,%eax
		cmp    $0x000003,%eax
		jne    _086117_jump
		call   _0860ad_func
		mov    %al,%dl

	_086117_jump:
		cmpb   $0x000000,_0bd814_data
		jne    _08612c_jump
		mov    %dl,_0bd5b8_data
		mov    %dl,_0bd5b9_data

	_08612c_jump:
		pop    %edx
		ret    



_08612e_func:
		call   *_0bd821_data
		ret    



_086135_func:
		mov    %esp,%eax
		sub    _0bd7f8_data,%eax
		ret    



_08613e_func:
		movl   $0x008000,_0bf9fc_data
		ret    



_086149_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%esi
		mov    %ebx,%edi
		mov    %edx,%eax
		mov    %ds,%ebx
		movl   $0x000000,0x00000c(%edi)
		mov    %esi,%ecx
		mov    0x000015(%edi),%dl
		xor    %ebp,%ebp
		cmp    $0x000047,%dl
		jb     _086188_jump
		jbe    _086195_jump
		cmp    $0x000066,%dl
		jb     _08617e_jump
		jbe    _0861aa_jump
		cmp    $0x000067,%dl
		je     _086195_jump
		jmp    _086246_jump

	_08617e_jump:
		cmp    $0x000065,%dl
		je     _0861a5_jump
		jmp    _086246_jump

	_086188_jump:
		cmp    $0x000045,%dl
		jb     _086246_jump
		jbe    _0861a5_jump
		jmp    _0861aa_jump

	_086195_jump:
		cmpl   $0x000000,0x000008(%edi)
		jne    _0861a2_jump
		movl   $0x000001,0x000008(%edi)

	_0861a2_jump:
		sub    $0x000002,%dl

	_0861a5_jump:
		mov    $0x000001,%ebp

	_0861aa_jump:
		mov    (%eax),%ecx
		add    $0x000008,%ecx
		mov    %ecx,(%eax)
		mov    -0x000008(%ecx),%eax
		mov    %eax,(%esp)
		mov    -0x000004(%ecx),%eax
		mov    %eax,0x000004(%esp)
		cmpl   $0x000001,0x000008(%edi)
		jle    _0861e3_jump
		mov    %esp,%eax
		call   _08725b_func
		test   %eax,%eax
		je     _0861e3_jump
		xor    %eax,%eax
		mov    0x000015(%edi),%al
		cmp    $0x000067,%eax
		je     _0861de_jump
		cmp    $0x000047,%eax
		jne    _0861e3_jump

	_0861de_jump:
		decl   0x000008(%edi)
		jmp    _0861f0_jump

	_0861e3_jump:
		cmpl   $0xffffffff,0x000008(%edi)
		jne    _0861f0_jump
		movl   $0x000006,0x000008(%edi)

	_0861f0_jump:
		mov    0x000015(%edi),%al
		and    $0x00005f,%al
		and    $0x0000ff,%eax
		push   %eax
		xor    %eax,%eax
		mov    %dl,%al
		push   %eax
		push   $0x000003
		push   %ebp
		mov    0x000008(%edi),%ebx
		xor    %ecx,%ecx
		push   $0x000027
		lea    0x000014(%esp),%edx
		mov    %esi,%eax
		call   _087415_func
		xor    %eax,%eax
		mov    (%esi),%al
		cmp    $0x00002a,%eax
		jne    _086222_jump
		movb   $0x00002a,0x000016(%edi)

	_086222_jump:
		movb   $0x000000,0x000027(%esi)

	_086226_jump:
		xor    %eax,%eax
		mov    (%esi),%al
		cmp    $0x000020,%eax
		jne    _086232_jump
		inc    %esi
		jmp    _086226_jump

	_086232_jump:
		mov    %edi,%edx
		mov    %esi,%eax
		call   _086252_func
		mov    %ds,%ebx
		mov    %esi,%ecx
		movl   $0xffffffff,0x000008(%edi)

	_086246_jump:
		mov    %ebx,%edx
		mov    %ecx,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_086252_func:
		push   %ebx
		mov    %edx,%ebx
		mov    0x000014(%edx),%dl
		and    $0x000001,%dl
		and    $0x0000ff,%edx
		jne    _0862af_jump

	_086263_jump:
		cmpb   $0x000000,(%eax)
		je     _086279_jump
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000065,%edx
		je     _086279_jump
		cmp    $0x000045,%edx
		je     _086279_jump
		inc    %eax
		jmp    _086263_jump

	_086279_jump:
		mov    %eax,%edx
		mov    0x000015(%ebx),%bl
		and    $0x0000ff,%ebx
		dec    %eax
		cmp    $0x000047,%ebx
		je     _08628f_jump
		cmp    $0x000067,%ebx
		jne    _08629b_jump

	_08628f_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x000030,%ebx
		jne    _08629b_jump
		dec    %eax
		jmp    _08628f_jump

	_08629b_jump:
		xor    %ebx,%ebx
		mov    (%eax),%bl
		cmp    $0x00002e,%ebx
		je     _0862a5_jump
		inc    %eax

	_0862a5_jump:
		mov    (%edx),%bl
		inc    %edx
		mov    %bl,(%eax)
		inc    %eax
		test   %bl,%bl
		jne    _0862a5_jump

	_0862af_jump:
		pop    %ebx
		ret    



_0862b1_func:
		push   %ebx
		mov    %edx,%ebx
		xor    %edx,%edx
		call   _087611_func
		mov    %eax,(%ebx)
		mov    %edx,0x000004(%ebx)
		pop    %ebx
		ret    



_0862c2_func:
		push   %edx
		mov    $0x000001,%edx
		mov    $_0c12cc_data,%eax
		call   _087823_func
		pop    %edx
		ret    



_0862d4_func:
		cmp    $0x000061,%eax
		jl     _0862e1_jump
		cmp    $0x00007a,%eax
		jg     _0862e1_jump
		sub    $0x000020,%eax

	_0862e1_jump:
		ret    



_0862e8_func:
		push   %ebx
		push   %ecx
		push   %esi
		mov    %eax,%esi
		mov    %edx,%ecx
		mov    $0x000002,%eax
		call   _087845_func
		mov    %eax,%ebx
		mov    %esi,%eax
		mov    %ebx,%edx
		mov    _0c14f0_data(,%eax,4),%eax
		call   _087864_func
		mov    $_0c1375_data,%eax
		mov    %ebx,%edx
		call   _087864_func
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _087864_func
		mov    $0x00000a,%eax
		mov    %ebx,%edx
		call   _07ccba_func
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_086330_func:
		push   %ebx
		mov    %eax,%ebx
		call   *_0bf94c_data
		test   %eax,%eax
		jne    _086358_jump
		mov    0x000004(%ebx),%edx
		mov    (%ebx),%eax
		call   _0862e8_func
		cmpl   $0x000001,(%ebx)
		jne    _086353_jump
		call   _082f54_func
		jmp    _086358_jump

	_086353_jump:
		call   _082f65_func

	_086358_jump:
		mov    0x000018(%ebx),%eax
		mov    0x00001c(%ebx),%edx
		pop    %ebx
		ret    



_086411_func:
		sub    $0x000010,%esp
		movl   $0xc0000000,0x000008(%esp)
		movl   $0x4150017e,0x00000c(%esp)
		movl   $0x80000000,(%esp)
		movl   $0x4147ffff,0x000004(%esp)
		xor    %eax,%eax
		mov    _0bd5b9_data,%al
		cmp    $0x000003,%eax
		jl     _086462_jump
		fldl   0x000008(%esp)
		fld    %st(0)
		fldl   (%esp)
		fxch   %st(1)
		fdiv   %st(1),%st
		fmulp  %st,%st(1)
		fsubrp %st,%st(1)
		fcompl _0c137c_data
		fnstsw %ax
		sahf   
		jbe    _086462_jump
		orb    $0x000001,_0bd884_data

	_086462_jump:
		add    $0x000010,%esp
		ret    



_086466_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    _0bd5fd_data,%ah
		and    $0x0000f8,%ah
		mov    %ah,%dl
		mov    %ah,_0bd5fd_data
		or     $0x000004,%dl
		mov    $_0bd5bc_data,%ecx
		mov    %dl,_0bd5fd_data
		jmp    _0864cc_jump

	_08648a_jump:
		mov    $0x000008,%eax
		call   _0818ba_func
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _0864b9_jump
		mov    $0x000008,%eax
		call   _0818ba_func
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _0864b9_jump
		mov    $0x000001,%edx
		mov    $_0c1384_data,%eax
		call   _087823_func

	_0864b9_jump:
		mov    _0e5e30_data,%eax
		mov    %ecx,0x000004(%ebx)
		mov    %ebx,_0e5e30_data
		add    $0x00001a,%ecx
		mov    %eax,(%ebx)

	_0864cc_jump:
		mov    0x00000c(%ecx),%edx
		test   %edx,%edx
		jne    _08648a_jump
		mov    %edx,_0e5e20_data
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0864dd_func:
		xor    %eax,%eax
		call   _0864ee_func
		jmp    _083c3f_jump



_0864ee_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		mov    $_0bd5bc_data,%esi
		add    %eax,%eax
		xor    %ebx,%ebx
		add    %eax,%esi
		mov    _0e5e30_data,%eax
		jmp    _08653b_jump

	_086510_jump:
		mov    (%eax),%ecx
		mov    0x000004(%eax),%eax
		mov    $0x000001,%edx
		testb  $0x000040,0x00000d(%eax)
		jne    _086533_jump
		testb  $0x000008,0x00000d(%eax)
		jne    _086533_jump
		cmp    %esi,%eax
		jb     _086539_jump
		cmp    $_0bd63e_data,%eax
		jae    _086533_jump
		xor    %edx,%edx

	_086533_jump:
		call   _07d551_func
		inc    %ebx

	_086539_jump:
		mov    %ecx,%eax

	_08653b_jump:
		test   %eax,%eax
		jne    _086510_jump
		mov    %ebx,%eax
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_086546_func:
		push   %ecx
		push   %esi
		mov    %eax,%ecx
		mov    %ebx,%esi

	_08654c_jump:
		test   %esi,%esi
		jne    _086555_jump

	_086550_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		ret    

	_086555_jump:
		mov    (%ecx),%al
		xor    %ebx,%ebx
		mov    (%edx),%ah
		mov    %al,%bl
		cmp    $0x000041,%ebx
		jl     _086569_jump
		cmp    $0x00005a,%ebx
		jg     _086569_jump
		add    $0x000020,%al

	_086569_jump:
		xor    %ebx,%ebx
		mov    %ah,%bl
		cmp    $0x000041,%ebx
		jl     _08657a_jump
		cmp    $0x00005a,%ebx
		jg     _08657a_jump
		add    $0x000020,%ah

	_08657a_jump:
		cmp    %ah,%al
		je     _086590_jump
		xor    %edx,%edx
		mov    %al,%dl
		mov    %ah,%al
		and    $0x0000ff,%eax
		sub    %eax,%edx
		mov    %edx,%eax
		pop    %esi
		pop    %ecx
		ret    

	_086590_jump:
		test   %ah,%ah
		je     _086550_jump
		inc    %ecx
		inc    %edx
		dec    %esi
		jmp    _08654c_jump



_0865a4_func:
		push   %ebp
		push   %esi
		push   %edi
		push   %ecx
		push   %ebx
		mov    %edx,%esi
		mov    %eax,%ebp
		mov    0x000000(%ebp),%eax
		mov    0x000004(%ebp),%edx
		xchg   %ebp,%esi
		mov    %eax,0x000000(%ebp)
		mov    %edx,0x000004(%ebp)
		mov    %edx,%ecx
		and    $0x7ff00000,%ecx
		je     _0865cf_jump
		cmp    $0x43300000,%ecx
		jb     _0865dd_jump
		xchg   %esi,%ebp

	_0865cf_jump:
		sub    %eax,%eax
		mov    %eax,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    

	_0865dd_jump:
		mov    %ecx,%edi
		shr    $0x000014,%ecx
		sub    $0x0003ff,%cx
		jb     _0865cf_jump
		push   %edx
		sub    %eax,%eax
		mov    $0xfff00000,%edx
		cmp    $0x000014,%cl
		jbe    _086602_jump
		sar    $0x000015,%edx
		rcr    %eax
		sub    $0x000015,%cl
		sar    %cl,%eax
		jmp    _086604_jump

	_086602_jump:
		sar    %cl,%edx

	_086604_jump:
		and    %edx,0x000004(%ebp)
		and    %eax,0x000000(%ebp)
		not    %edx
		not    %eax
		mov    %esi,%ebp
		and    0x000004(%ebp),%edx
		and    0x000000(%ebp),%eax
		call   _08667f_func
		pop    %esi
		or     %edx,%edx
		je     _086628_jump
		and    $0x80000000,%esi
		or     %esi,%edx

	_086628_jump:
		mov    %edx,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_086634_func:
		push   %ebp
		push   %esi
		push   %edi
		push   %ecx
		push   %ebx
		push   %edx
		mov    %eax,%esi
		sub    %edx,%edx
		sub    %ecx,%ecx
		sub    %eax,%eax

	_086642_jump:
		mov    (%esi),%al
		cmp    $0x000000,%al
		je     _086666_jump
		mov    %edx,%edi
		mov    %ecx,%ebx
		add    %ecx,%ecx
		adc    %edx,%edx
		add    %ecx,%ecx
		adc    %edx,%edx
		add    %ebx,%ecx
		adc    %edi,%edx
		add    %ecx,%ecx
		adc    %edx,%edx
		and    $0x00000f,%al
		add    %eax,%ecx
		adc    $0x000000,%edx
		inc    %esi
		jmp    _086642_jump

	_086666_jump:
		mov    %ecx,%eax
		mov    $0x43300000,%edi
		call   _08667f_func
		pop    %ebp
		mov    %edx,0x000004(%ebp)
		mov    %eax,0x000000(%ebp)
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    



_08667f_func:
		sub    %esi,%esi
		or     %eax,%esi
		or     %edx,%esi
		je     _0866cf_jump
		test   $0xfff00000,%edx
		jne    _0866a3_jump

	_08668f_jump:
		sub    $0x100000,%edi
		add    %eax,%eax
		adc    %edx,%edx
		test   $0xfff00000,%edx
		je     _08668f_jump
		jmp    _0866c7_jump

	_0866a3_jump:
		test   $0xffe00000,%edx
		je     _0866c7_jump

	_0866ab_jump:
		add    $0x100000,%edi
		shr    %edx
		rcr    %eax
		rcr    %esi
		test   $0xffe00000,%edx
		jne    _0866ab_jump
		adc    %esi,%esi
		adc    $0x000000,%eax
		adc    $0x000000,%edx

	_0866c7_jump:
		and    $0x0fffff,%edx
		or     %edi,%edx

	_0866cf_jump:
		ret    



_0866d0_func:
		push   %ebx
		push   %ecx
		push   %edx
		mov    %eax,%ebx
		test   $0x000003,%bl
		jne    _086705_jump
		mov    %eax,%edx
		mov    $0x000064,%ecx
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     _0866f3_jump

	_0866ea_jump:
		mov    $0x000001,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_0866f3_jump:
		mov    $0x000190,%ecx
		mov    %ebx,%edx
		mov    %ebx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		test   %edx,%edx
		je     _0866ea_jump

	_086705_jump:
		xor    %eax,%eax
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08670b_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000024,%esp
		mov    %eax,%ebx
		mov    0x000020(%eax),%ecx
		test   %ecx,%ecx
		jne    _0867d8_jump
		lea    0x00076c(%edx),%eax
		call   _0866d0_func
		test   %eax,%eax
		je     _086742_jump
		mov    0x000010(%ebx),%eax
		mov    _0c1526_data(,%eax,2),%esi
		mov    _0c1524_data(,%eax,2),%eax
		jmp    _086753_jump

	_086742_jump:
		mov    0x000010(%ebx),%eax
		mov    _0c150c_data(,%eax,2),%esi
		mov    _0c150a_data(,%eax,2),%eax

	_086753_jump:
		sar    $0x000010,%esi
		sar    $0x000010,%eax
		sub    %eax,%esi
		xor    %edi,%edi
		mov    $0x000001,%ecx
		mov    %edi,(%esp)
		mov    %edi,0x000004(%esp)
		mov    %edi,0x000008(%esp)
		mov    %ecx,0x00000c(%esp)
		mov    0x000010(%ebx),%eax
		mov    %eax,0x000010(%esp)
		mov    %edx,0x000014(%esp)
		mov    %esp,%eax
		mov    %edi,0x000020(%esp)
		call   _08566f_func
		mov    0x000018(%esp),%ebp
		mov    0x000018(%ebx),%edx
		sub    %ebp,%edx
		add    $0x000007,%edx
		mov    $0x000007,%ecx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ecx
		mov    0x00000c(%ebx),%eax
		cmp    $0x000005,%eax
		jne    _0867c6_jump
		lea    -0x000001(%eax),%ecx
		mov    %ecx,%edi
		shl    $0x000003,%edi
		lea    0x000001(%edx),%eax
		sub    %ecx,%edi
		add    %edi,%eax
		cmp    %esi,%eax
		jle    _0867c2_jump
		mov    0x00000c(%ebx),%eax
		sub    $0x000002,%eax
		jmp    _0867c7_jump

	_0867c2_jump:
		mov    %ecx,%eax
		jmp    _0867c7_jump

	_0867c6_jump:
		dec    %eax

	_0867c7_jump:
		mov    0x00001c(%esp),%ebx
		add    %edx,%ebx
		mov    %eax,%edx
		shl    $0x000003,%eax
		sub    %edx,%eax
		add    %ebx,%eax
		jmp    _0867e7_jump

	_0867d8_jump:
		cmp    $0x000001,%ecx
		jne    _0867e4_jump
		mov    0x00001c(%eax),%eax
		sub    %ecx,%eax
		jmp    _0867e7_jump

	_0867e4_jump:
		mov    0x00001c(%eax),%eax

	_0867e7_jump:
		add    $0x000024,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0867f0_func:
		push   %ecx
		push   %esi
		mov    %edx,%ecx
		mov    0x000010(%eax),%esi
		cmp    0x000010(%edx),%esi
		jle    _086804_jump

	_0867fc_jump:
		mov    $0x000001,%eax
		pop    %esi
		pop    %ecx
		ret    

	_086804_jump:
		cmp    0x000010(%ecx),%esi
		jl     _08681f_jump
		mov    %ebx,%edx
		call   _08670b_func
		mov    %eax,%esi
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _08670b_func
		cmp    %eax,%esi
		jg     _0867fc_jump

	_08681f_jump:
		xor    %eax,%eax
		pop    %esi
		pop    %ecx
		ret    



_086824_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x00001c,%esp
		mov    %eax,%ecx
		mov    _0bf9ee_data,%eax
		mov    (%eax),%dl
		xor    %edi,%edi
		test   %dl,%dl
		je     _086ad8_jump
		mov    $_0bf97c_data,%edx
		mov    $_0bf958_data,%eax
		mov    0x000014(%ecx),%ebx
		call   _0867f0_func
		mov    %eax,0x000014(%esp)
		test   %eax,%eax
		je     _086866_jump
		mov    $_0bf97c_data,%esi
		mov    $_0bf958_data,%ebx
		jmp    _086870_jump

	_086866_jump:
		mov    $_0bf958_data,%esi
		mov    $_0bf97c_data,%ebx

	_086870_jump:
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		mov    0x000010(%ecx),%ebp
		call   _0866d0_func
		mov    %eax,%edx
		lea    0x000000(%ebp,%ebp,1),%eax
		test   %edx,%edx
		je     _086898_jump
		mov    _0c1526_data(%eax),%edx
		mov    _0c1524_data(%eax),%eax
		jmp    _0868a4_jump

	_086898_jump:
		mov    _0c150c_data(%eax),%edx
		mov    _0c150a_data(%eax),%eax

	_0868a4_jump:
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		sub    %eax,%edx
		mov    %edx,0x00000c(%esp)
		xor    %edx,%edx
		mov    0x000020(%esi),%eax
		mov    %edx,0x000010(%esp)
		test   %eax,%eax
		jne    _086974_jump
		mov    0x000010(%esi),%eax
		cmp    %eax,%ebp
		jle    _0868d2_jump
		mov    $0x000001,%edi
		jmp    _0869ad_jump

	_0868d2_jump:
		jne    _0869ad_jump
		mov    0x000018(%ecx),%edx
		mov    0x000018(%esi),%eax
		add    $0x000007,%edx
		sub    %eax,%edx
		movl   $0x000007,0x000018(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000018(%esp)
		mov    0x00000c(%ecx),%eax
		sub    %edx,%eax
		mov    0x000018(%ecx),%edx
		mov    %eax,(%esp)
		add    $0x000006,%edx
		sub    0x000018(%esi),%edx
		movl   $0x000007,0x000018(%esp)
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idivl  0x000018(%esp)
		mov    0x00000c(%ecx),%eax
		dec    %eax
		sub    %edx,%eax
		mov    0x00000c(%esi),%edx
		mov    %eax,0x000008(%esp)
		cmp    $0x000005,%edx
		jne    _08694d_jump
		mov    0x00000c(%esp),%eax
		mov    (%esp),%edx
		sub    $0x000007,%eax
		cmp    %edx,%eax
		jge    _0869ad_jump
		mov    0x000008(%esp),%edx
		mov    $0x000001,%edi
		cmp    %edx,%eax
		jl     _0869ad_jump
		jmp    _0869a9_jump

	_08694d_jump:
		lea    -0x000001(%edx),%eax
		mov    %eax,0x000018(%esp)
		mov    0x000018(%esp),%edx
		shl    $0x000003,%eax
		sub    %edx,%eax
		mov    (%esp),%edx
		inc    %eax
		cmp    %edx,%eax
		jg     _0869ad_jump
		mov    0x000008(%esp),%edx
		mov    $0x000001,%edi
		cmp    %edx,%eax
		jle    _0869ad_jump
		jmp    _0869a9_jump

	_086974_jump:
		mov    0x00001c(%esi),%edx
		cmp    $0x000001,%eax
		jne    _08699b_jump
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		call   _0866d0_func
		test   %eax,%eax
		je     _08699a_jump
		mov    _0c150e_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _08699a_jump
		inc    %edx

	_08699a_jump:
		dec    %edx

	_08699b_jump:
		mov    0x00001c(%ecx),%eax
		cmp    %eax,%edx
		jg     _0869ad_jump
		mov    $0x000001,%edi
		jne    _0869ad_jump

	_0869a9_jump:
		mov    %edi,0x000010(%esp)

	_0869ad_jump:
		cmpl   $0x000000,0x000010(%esp)
		je     _0869ca_jump
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _086ae7_func
		test   %eax,%eax
		sete   %al
		mov    %eax,%edi
		and    $0x0000ff,%edi

	_0869ca_jump:
		test   %edi,%edi
		jne    _0869e1_jump
		mov    0x000014(%esp),%edx
		test   %edx,%edx
		je     _086ad8_jump
		mov    %edx,%edi
		jmp    _086ad8_jump

	_0869e1_jump:
		mov    0x000020(%ebx),%eax
		xor    %esi,%esi
		test   %eax,%eax
		jne    _086a84_jump
		mov    0x000010(%ebx),%eax
		cmp    %eax,%ebp
		jle    _0869fc_jump
		xor    %edi,%edi
		jmp    _086abd_jump

	_0869fc_jump:
		jne    _086abd_jump
		mov    0x000018(%ecx),%edx
		mov    0x000018(%ebx),%ebp
		add    $0x000007,%edx
		sub    %ebp,%edx
		mov    $0x000007,%ebp
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00000c(%ecx),%eax
		sub    %edx,%eax
		mov    0x000018(%ecx),%edx
		mov    %eax,0x000004(%esp)
		add    $0x000006,%edx
		mov    0x000018(%ebx),%eax
		sub    %eax,%edx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebp
		mov    0x00000c(%ecx),%eax
		dec    %eax
		xor    %edi,%edi
		sub    %edx,%eax
		mov    0x00000c(%ebx),%ebp
		mov    %eax,%edx
		cmp    $0x000005,%ebp
		jne    _086a65_jump
		mov    0x00000c(%esp),%eax
		mov    0x000004(%esp),%ebp
		sub    $0x000007,%eax
		cmp    %ebp,%eax
		jl     _086a5f_jump

	_086a55_jump:
		mov    $0x000001,%edi
		jmp    _086abd_jump

	_086a5f_jump:
		cmp    %eax,%edx
		jg     _086abd_jump
		jmp    _086ab8_jump

	_086a65_jump:
		lea    -0x000001(%ebp),%eax
		mov    %eax,0x000018(%esp)
		mov    0x000018(%esp),%ebp
		shl    $0x000003,%eax
		sub    %ebp,%eax
		mov    0x000004(%esp),%ebp
		inc    %eax
		cmp    %ebp,%eax
		jg     _086a55_jump
		cmp    %eax,%edx
		jge    _086abd_jump
		jmp    _086ab8_jump

	_086a84_jump:
		mov    0x00001c(%ebx),%edx
		cmp    $0x000001,%eax
		jne    _086aab_jump
		mov    0x000014(%ecx),%eax
		add    $0x00076c,%eax
		call   _0866d0_func
		test   %eax,%eax
		je     _086aaa_jump
		mov    _0c150e_data,%eax
		sar    $0x000010,%eax
		cmp    %eax,%edx
		jle    _086aaa_jump
		inc    %edx

	_086aaa_jump:
		dec    %edx

	_086aab_jump:
		mov    0x00001c(%ecx),%eax
		cmp    %eax,%edx
		jg     _086abd_jump
		xor    %edi,%edi
		cmp    %eax,%edx
		jne    _086abd_jump

	_086ab8_jump:
		mov    $0x000001,%esi

	_086abd_jump:
		test   %esi,%esi
		je     _086acc_jump
		mov    %ebx,%edx
		mov    %ecx,%eax
		call   _086ae7_func
		mov    %eax,%edi

	_086acc_jump:
		mov    0x000014(%esp),%eax
		test   %eax,%eax
		je     _086ad8_jump
		sub    %edi,%eax
		mov    %eax,%edi

	_086ad8_jump:
		mov    %edi,%eax
		mov    %edi,0x000020(%ecx)
		add    $0x00001c,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_086ae7_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %ebp
		mov    0x000008(%eax),%ecx
		mov    0x000008(%edx),%esi
		xor    %ebx,%ebx
		cmp    %esi,%ecx
		jl     _086b0b_jump
		jne    _086b10_jump
		mov    0x000004(%eax),%ecx
		mov    0x000004(%edx),%ebp
		cmp    %ebp,%ecx
		jl     _086b0b_jump
		jne    _086b10_jump
		mov    (%eax),%eax
		cmp    (%edx),%eax
		jge    _086b10_jump

	_086b0b_jump:
		mov    $0x000001,%ebx

	_086b10_jump:
		mov    %ebx,%eax
		pop    %ebp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_086b17_func:
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ebx,%eax
		cmp    $0x00a8c0,%edx
		jae    _086b44_jump
		test   %ebx,%ebx
		jle    _086b44_jump
		lea    0x015180(%edx),%esi
		sub    %ebx,%esi
		xor    %edx,%edx
		mov    $0x015180,%ebx
		mov    %esi,%eax
		div    %ebx
		add    %eax,%edi
		dec    %edi
		jmp    _086b53_jump

	_086b44_jump:
		mov    $0x015180,%ebx
		sub    %eax,%esi
		xor    %edx,%edx
		mov    %esi,%eax
		div    %ebx
		add    %eax,%edi

	_086b53_jump:
		mov    $0x015180,%ebx
		mov    %esi,%eax
		xor    %edx,%edx
		div    %ebx
		mov    %edx,%ebx
		mov    $0x000e10,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		xor    %edx,%edx
		mov    %eax,0x000008(%ecx)
		mov    %ebx,%eax
		div    %esi
		mov    %edx,%ebx
		mov    $0x00003c,%esi
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %esi
		xor    %edx,%edx
		mov    %eax,0x000004(%ecx)
		mov    %ebx,%eax
		div    %esi
		mov    $0x00016e,%ebx
		mov    %edi,%eax
		mov    %edx,(%ecx)
		xor    %edx,%edx
		div    %ebx
		mov    %eax,%edx
		shl    $0x000003,%eax
		add    %edx,%eax
		shl    $0x000003,%eax
		add    %edx,%eax
		mov    %eax,%ebx
		shl    $0x000002,%eax
		add    %ebx,%eax
		mov    %edi,%ebx
		sub    %eax,%ebx
		test   %edx,%edx
		jbe    _086bba_jump
		lea    -0x000001(%edx),%eax
		shr    $0x000002,%eax
		sub    %eax,%ebx

	_086bba_jump:
		lea    0x00076c(%edx),%eax
		call   _0866d0_func
		add    $0x00016d,%eax

	_086bca_jump:
		cmp    %eax,%ebx
		jb     _086bd3_jump
		inc    %edx
		sub    %eax,%ebx
		jmp    _086bca_jump

	_086bd3_jump:
		mov    $_0c150c_data,%esi
		mov    %edx,0x000014(%ecx)
		lea    0x00076c(%edx),%eax
		mov    %ebx,0x00001c(%ecx)
		call   _0866d0_func
		test   %eax,%eax
		je     _086bf2_jump
		mov    $_0c1526_data,%esi

	_086bf2_jump:
		mov    $0x00001f,%ebp
		mov    %ebx,%eax
		xor    %edx,%edx
		div    %ebp
		mov    %eax,%edx
		mov    (%esi,%edx,2),%edx
		sar    $0x000010,%edx
		cmp    %edx,%ebx
		jb     _086c0a_jump
		inc    %eax

	_086c0a_jump:
		mov    %eax,0x000010(%ecx)
		movswl (%esi,%eax,2),%eax
		sub    %eax,%ebx
		xor    %edx,%edx
		inc    %ebx
		lea    0x000001(%edi),%eax
		mov    %ebx,0x00000c(%ecx)
		mov    $0x000007,%ebx
		div    %ebx
		mov    %ecx,%eax
		mov    %edx,0x000018(%ecx)
		pop    %ebp
		pop    %edi
		pop    %esi
		ret    

	_086cab_jump:
		mov    _0bf9f2_data,%ah
		test   $0x000001,%ah
		je     _086cbb_jump
		test   $0x000002,%ah
		jne    _086cc2_jump

	_086cbb_jump:
		orb    $0x000002,_0bf9f2_data

	_086cc2_jump:
		ret    



_086cc3_func:
		mov    $_0c13b4_data,%eax
		call   _084820_func
		test   %eax,%eax
		je     _086cab_jump
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		xor    %edx,%edx
		mov    $_0bf9a0_data,%ebx
		mov    %edx,_0bf9a8_data
		mov    $_0bf9ac_data,%edx
		call   _086d2c_func
		mov    %eax,%ecx
		mov    (%eax),%ah
		test   %ah,%ah
		jne    _086f59_jump
		mov    %ah,_0bf9cb_data
		jmp    _08701d_jump



_086d08_func:
		push   %ebx
		push   %ecx
		mov    %edx,%ecx
		xor    %ebx,%ebx

	_086d0e_jump:
		xor    %edx,%edx
		mov    (%eax),%dl
		cmp    $0x000030,%edx
		jl     _086d27_jump
		cmp    $0x000039,%edx
		jg     _086d27_jump
		imul   $0x00000a,%ebx,%ebx
		add    %ebx,%edx
		inc    %eax
		lea    -0x000030(%edx),%ebx
		jmp    _086d0e_jump

	_086d27_jump:
		mov    %ebx,(%ecx)
		pop    %ecx
		pop    %ebx
		ret    



_086d2c_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000014,%esp
		mov    %eax,%ebp
		mov    %edx,0x000010(%esp)
		xor    %eax,%eax
		mov    0x000000(%ebp),%al
		cmp    $0x00003a,%eax
		jne    _086d44_jump
		inc    %ebp

	_086d44_jump:
		mov    %ebp,%esi

	_086d46_jump:
		mov    0x000000(%ebp),%dl
		test   %dl,%dl
		je     _086d6d_jump
		xor    %eax,%eax
		mov    %dl,%al
		cmp    $0x00002c,%eax
		je     _086d6d_jump
		cmp    $0x00002d,%eax
		je     _086d6d_jump
		cmp    $0x00002b,%eax
		je     _086d6d_jump
		cmp    $0x000030,%eax
		jl     _086d6a_jump
		cmp    $0x000039,%eax
		jle    _086d6d_jump

	_086d6a_jump:
		inc    %ebp
		jmp    _086d46_jump

	_086d6d_jump:
		mov    %ebp,%eax
		sub    %esi,%eax
		mov    %eax,0x00000c(%esp)
		cmp    $0x00001e,%eax
		jle    _086d82_jump
		movl   $0x00001e,0x00000c(%esp)

	_086d82_jump:
		mov    0x00000c(%esp),%ecx
		mov    0x000010(%esp),%edi
		push   %es
		mov    %ds,%eax
		mov    %eax,%es
		push   %edi
		mov    %ecx,%eax
		shr    $0x000002,%ecx
		repnz movsl %ds:(%esi),%es:(%edi)
		mov    %al,%cl
		and    $0x000003,%cl
		repnz movsb %ds:(%esi),%es:(%edi)
		pop    %edi
		pop    %es
		mov    0x00000c(%esp),%ecx
		lea    (%edi,%ecx,1),%eax
		movb   $0x000000,(%eax)
		xor    %eax,%eax
		xor    %ecx,%ecx
		mov    %dl,%al
		lea    0x000001(%ebp),%edx
		cmp    $0x00002d,%eax
		jne    _086dbf_jump
		mov    $0x000001,%ecx
		jmp    _086dc4_jump

	_086dbf_jump:
		cmp    $0x00002b,%eax
		jne    _086dc6_jump

	_086dc4_jump:
		mov    %edx,%ebp

	_086dc6_jump:
		mov    0x000000(%ebp),%al
		and    $0x0000ff,%eax
		cmp    $0x000030,%eax
		jl     _086e4b_jump
		cmp    $0x000039,%eax
		jg     _086e4b_jump
		lea    0x000008(%esp),%edx
		xor    %esi,%esi
		mov    %ebp,%eax
		mov    %esi,(%esp)
		mov    %esi,0x000004(%esp)
		mov    %esi,0x000008(%esp)
		call   _086d08_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebp
		cmp    $0x00003a,%edx
		jne    _086e1e_jump
		lea    0x000004(%esp),%edx
		inc    %eax
		call   _086d08_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebp
		cmp    $0x00003a,%edx
		jne    _086e1e_jump
		mov    %esp,%edx
		inc    %eax
		call   _086d08_func
		mov    %eax,%ebp

	_086e1e_jump:
		mov    0x000008(%esp),%esi
		mov    %esi,%eax
		shl    $0x000004,%eax
		sub    %esi,%eax
		mov    0x000004(%esp),%esi
		shl    $0x000002,%eax
		add    %eax,%esi
		mov    %esi,%eax
		shl    $0x000004,%eax
		sub    %esi,%eax
		mov    (%esp),%edx
		shl    $0x000002,%eax
		add    %eax,%edx
		mov    %edx,(%ebx)
		test   %ecx,%ecx
		je     _086e4b_jump
		neg    %edx
		mov    %edx,(%ebx)

	_086e4b_jump:
		mov    %ebp,%eax
		add    $0x000014,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_086e55_func:
		push   %ebx
		push   %ecx
		push   %esi
		sub    $0x000010,%esp
		mov    %eax,%ebx
		mov    %edx,%ecx
		xor    %eax,%eax
		mov    (%ebx),%al
		mov    $0xffffffff,%esi
		cmp    $0x00004a,%eax
		jne    _086e74_jump
		mov    $0x000001,%esi
		add    %esi,%ebx

	_086e74_jump:
		xor    %eax,%eax
		mov    (%ebx),%al
		cmp    $0x00004d,%eax
		jne    _086e80_jump
		inc    %ebx
		xor    %esi,%esi

	_086e80_jump:
		lea    0x00000c(%esp),%edx
		mov    %ebx,%eax
		mov    %esi,0x000020(%ecx)
		call   _086d08_func
		mov    %eax,%edx
		mov    %eax,%ebx
		test   %esi,%esi
		je     _086e9f_jump
		mov    0x00000c(%esp),%eax
		mov    %eax,0x00001c(%ecx)
		jmp    _086eec_jump

	_086e9f_jump:
		mov    0x00000c(%esp),%eax
		dec    %eax
		mov    %eax,0x000010(%ecx)
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00002e,%eax
		jne    _086ee5_jump
		lea    0x000001(%edx),%eax
		lea    0x00000c(%esp),%edx
		call   _086d08_func
		mov    %eax,%edx
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %eax,0x00000c(%ecx)
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00002e,%eax
		jne    _086ee5_jump
		lea    0x000001(%edx),%eax
		lea    0x00000c(%esp),%edx
		call   _086d08_func
		mov    %eax,%ebx
		mov    0x00000c(%esp),%eax
		mov    %eax,0x000018(%ecx)

	_086ee5_jump:
		movl   $0x000000,0x00001c(%ecx)

	_086eec_jump:
		mov    $0x000002,%edx
		xor    %esi,%esi
		xor    %eax,%eax
		mov    %edx,0x000008(%esp)
		mov    %esi,(%esp)
		mov    %esi,0x000004(%esp)
		mov    (%ebx),%al
		cmp    $0x00002f,%eax
		jne    _086f3d_jump
		lea    0x000008(%esp),%edx
		lea    0x000001(%ebx),%eax
		call   _086d08_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebx
		cmp    $0x00003a,%edx
		jne    _086f3d_jump
		lea    0x000004(%esp),%edx
		inc    %eax
		call   _086d08_func
		xor    %edx,%edx
		mov    (%eax),%dl
		mov    %eax,%ebx
		cmp    $0x00003a,%edx
		jne    _086f3d_jump
		mov    %esp,%edx
		inc    %eax
		call   _086d08_func
		mov    %eax,%ebx

	_086f3d_jump:
		mov    (%esp),%eax
		mov    %eax,(%ecx)
		mov    0x000004(%esp),%eax
		mov    %eax,0x000004(%ecx)
		mov    0x000008(%esp),%eax
		mov    %eax,0x000008(%ecx)
		mov    %ebx,%eax
		add    $0x000010,%esp
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    

	_086f59_jump:
		mov    $0x000001,%ebx
		mov    $_0bf9cb_data,%edx
		mov    _0bf9a0_data,%eax
		mov    %ebx,_0bf9a8_data
		sub    $0x000e10,%eax
		mov    %esp,%ebx
		mov    %eax,(%esp)
		mov    %ecx,%eax
		call   _086d2c_func
		mov    (%esp),%ecx
		mov    _0bf9a0_data,%ebx
		sub    %ecx,%ebx
		mov    %ebx,_0bf9a4_data
		xor    %ebx,%ebx
		mov    (%eax),%bl
		mov    %eax,%edx
		cmp    $0x00002c,%ebx
		jne    _086fa8_jump
		mov    $_0bf958_data,%edx
		inc    %eax
		call   _086e55_func
		mov    %eax,%edx

	_086fa8_jump:
		xor    %eax,%eax
		mov    (%edx),%al
		cmp    $0x00002c,%eax
		jne    _08701d_jump
		lea    0x000001(%edx),%eax
		mov    $_0bf97c_data,%edx
		call   _086e55_func
		mov    _0bf9a4_data,%eax
		mov    %eax,%edx
		mov    $0x000e10,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0bf984_data,%esi
		sub    %eax,%esi
		mov    _0bf9a4_data,%eax
		mov    %eax,%edx
		mov    $0x00003c,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0bf980_data,%edi
		mov    _0bf9a4_data,%eax
		sub    %edx,%edi
		mov    %eax,%edx
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    _0bf97c_data,%ebp
		mov    %esi,_0bf984_data
		sub    %edx,%ebp
		mov    %edi,_0bf980_data
		mov    %ebp,_0bf97c_data

	_08701d_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_087028_func:
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		mov    $0x000000,%dl
		ftst   
		fnstsw %ax
		sahf   
		jae    _08703d_jump
		fchs   
		not    %dl

	_08703d_jump:
		fld1   
		fcom   %st(1)
		fnstsw %ax
		and    $0x004100,%ax
		je     _08706e_jump
		fxch   %st(1)
		testb  $0x000001,_0bd884_data
		jne    _087058_jump
		fpatan 
		jmp    _08705d_jump

	_087058_jump:
		call   _0879b4_func

	_08705d_jump:
		mov    $0x000002,%ax
		mov    %ax,-0x000002(%ebp)
		fldpi  
		fidivs -0x000002(%ebp)
		fsubp  %st,%st(1)
		jmp    _087080_jump

	_08706e_jump:
		testb  $0x000001,_0bd884_data
		jne    _08707b_jump
		fpatan 
		jmp    _087080_jump

	_08707b_jump:
		call   _0879b4_func

	_087080_jump:
		cmp    $0x000000,%dl
		je     _087087_jump
		fchs   

	_087087_jump:
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    



_087167_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %ebp
		push   %eax
		cmp    _0bd7fc_data,%eax
		jb     _0871d2_jump
		cmpb   $0x000000,_0bd816_data
		jne    _0871e4_jump
		mov    (%esp),%ebp
		add    $0x00000f,%ebp
		shr    $0x000004,%ebp
		test   %ebp,%ebp
		jne    _087192_jump
		mov    $0xfffffff,%ebp

	_087192_jump:
		xor    %ebx,%ebx
		mov    %ds,%ax
		mov    %ax,%bx
		mov    $0x0000ed,%ah
		int    $0x000021
		shl    $0x00001f,%eax
		and    $0x00ffff,%edi
		or     %eax,%edi
		mov    %edi,%eax
		test   %edi,%edi
		jge    _0871bf_jump
		mov    %ebp,%ebx
		mov    %edi,%es
		mov    $0x00004a,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jl     _0871d2_jump

	_0871bf_jump:
		mov    %ds,%ax
		mov    %ebp,%ebx

	_0871c4_jump:
		mov    %eax,%es
		mov    $0x00004a,%ah
		int    $0x000021
		rcl    %eax
		ror    %eax
		test   %eax,%eax
		jge    _087219_jump

	_0871d2_jump:
		call   _083a10_func
		movl   $0x000005,(%eax)
		mov    $0xffffffff,%eax
		jmp    _087227_jump

	_0871e4_jump:
		mov    (%esp),%ebx
		add    $0x000fff,%ebx
		shr    $0x00000c,%ebx
		test   %ebx,%ebx
		jne    _0871f9_jump
		mov    $0x0fffff,%ebx

	_0871f9_jump:
		xor    %eax,%eax
		mov    _0bd816_data,%al
		cmp    $0x000001,%eax
		jne    _087214_jump
		xor    %eax,%eax
		mov    _0bd817_data,%al
		cmp    $0x000001,%eax
		jne    _087214_jump
		shl    $0x000008,%ebx

	_087214_jump:
		mov    %ds,%ax
		jmp    _0871c4_jump

	_087219_jump:
		mov    (%esp),%ebx
		mov    _0bd7e8_data,%eax
		mov    %ebx,_0bd7e8_data

	_087227_jump:
		add    $0x000004,%esp
		pop    %ebp
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    

	_087232_jump:
		ret    



_087234_func:
		push   %ax
		finit  
		fld1   
		fldz   
		fdivrp %st,%st(1)
		fld    %st(0)
		fchs   
		fcompp 
		fnstsw %ax
		mov    $0x000002,%al
		sahf   
		je     _08724e_jump
		mov    $0x000003,%al

	_08724e_jump:
		finit  
		fldcw  (%esp)
		xchg   %ax,(%esp)
		pop    %ax
		ret    



_08725b_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		mov    $0xbff00000,%ecx
		mov    (%eax),%edi
		mov    0x000004(%eax),%esi
		xor    %ebx,%ebx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _081734_func
		jle    _087290_jump
		mov    $0x3ff00000,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   _081734_func
		jge    _087290_jump
		mov    $0x000001,%eax
		jmp    _087292_jump

	_087290_jump:
		xor    %eax,%eax

	_087292_jump:
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_08729e_func:
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000004,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		mov    %ecx,(%esp)
		mov    %ebx,%eax
		test   %edx,%edx
		jge    _0872b7_jump
		mov    $0x00002d,%cl
		neg    %esi
		jmp    _0872b9_jump

	_0872b7_jump:
		mov    $0x00002b,%cl

	_0872b9_jump:
		mov    $0x000064,%ebx
		mov    $0x000003,%edx
		cmp    %ebx,%esi
		jge    _0872dc_jump
		mov    $0x00000a,%ebx
		mov    $0x000002,%edx
		cmp    %ebx,%esi
		jge    _0872dc_jump
		mov    $0x000001,%edx
		mov    %edx,%ebx

	_0872dc_jump:
		test   %eax,%eax
		jne    _0872ec_jump
		mov    $0x000002,%eax
		cmp    $0x000003,%edx
		jne    _0872ec_jump
		mov    %edx,%eax

	_0872ec_jump:
		lea    0x000001(%eax),%ebp
		cmp    (%esp),%ebp
		jg     _087338_jump
		cmp    %eax,%edx
		jg     _087335_jump
		mov    %cl,(%edi)

	_0872fa_jump:
		inc    %edi
		cmp    %edx,%eax
		jle    _087305_jump
		dec    %eax
		movb   $0x000030,(%edi)
		jmp    _0872fa_jump

	_087305_jump:
		mov    %esi,%edx
		mov    %esi,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    %esi,%edx
		add    $0x000030,%eax
		sar    $0x00001f,%edx
		mov    %al,(%edi)
		mov    %esi,%eax
		idiv   %ebx
		mov    %edx,%esi
		mov    %ebx,%eax
		mov    %ebx,%edx
		mov    $0x00000a,%ebx
		sar    $0x00001f,%edx
		idiv   %ebx
		inc    %edi
		mov    %eax,%ebx
		test   %eax,%eax
		jne    _087305_jump
		jmp    _087338_jump

	_087335_jump:
		lea    0x000001(%edx),%ebp

	_087338_jump:
		mov    %ebp,%eax
		add    $0x000004,%esp
		pop    %ebp
		pop    %edi

	_08733f_jump:
		pop    %esi
		ret    



_087341_func:
		push   %esi
		mov    %ebx,%esi
		test   %ecx,%ecx
		jne    _087356_jump
		test   %ebx,%ebx
		jg     _087356_jump
		movb   $0x000030,(%eax)
		inc    %eax
		movb   $0x00002e,(%eax)
		inc    %eax
		pop    %esi
		ret    

	_087356_jump:
		test   %esi,%esi
		jle    _087367_jump
		mov    (%edx),%bl
		test   %bl,%bl
		je     _087367_jump
		inc    %edx
		dec    %esi
		mov    %bl,(%eax)
		inc    %eax
		jmp    _087356_jump

	_087367_jump:
		test   %esi,%esi
		jle    _087374_jump

	_08736b_jump:
		dec    %esi
		movb   $0x000030,(%eax)
		inc    %eax
		test   %esi,%esi
		jg     _08736b_jump

	_087374_jump:
		movb   $0x00002e,(%eax)
		inc    %eax
		test   %ecx,%ecx
		jle    _087388_jump

	_08737c_jump:
		test   %esi,%esi
		je     _087388_jump
		inc    %esi
		movb   $0x000030,(%eax)
		inc    %eax
		dec    %ecx
		jne    _08737c_jump

	_087388_jump:
		test   %ecx,%ecx
		jle    _08733f_jump

	_08738c_jump:
		mov    (%edx),%bh
		test   %bh,%bh
		je     _087399_jump
		inc    %edx
		mov    %bh,(%eax)
		inc    %eax
		dec    %ecx
		jne    _08738c_jump

	_087399_jump:
		test   %ecx,%ecx
		je     _08733f_jump
		dec    %ecx
		movb   $0x000030,(%eax)
		inc    %eax
		jmp    _087399_jump



_0873a4_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000008,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		cmp    %ebx,%edx
		je     _08740d_jump
		mov    %edi,-0x000014(%ebp)
		mov    0x000001(%eax),%al
		lea    (%ebx,%edi,1),%edx
		mov    %al,-0x000010(%ebp)
		lea    (%esi,%edi,1),%eax

	_0873c4_jump:
		dec    %eax
		dec    %edx
		mov    (%eax),%cl
		dec    %esi
		mov    %cl,(%edx)
		mov    -0x000014(%ebp),%ecx
		dec    %ebx
		cmp    %ecx,%eax
		jne    _0873c4_jump
		xor    %ecx,%eax
		mov    (%edi),%al
		cmp    $0x00002e,%eax
		jne    _0873e3_jump
		dec    %ebx
		movb   $0x000030,(%edi,%ebx,1)
		jmp    _087401_jump

	_0873e3_jump:
		cmp    $0x00002b,%eax
		je     _0873ed_jump
		cmp    $0x00002d,%eax
		jne    _087401_jump

	_0873ed_jump:
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		cmp    $0x00002e,%eax
		jne    _087401_jump
		movb   $0x000030,(%edi,%ebx,1)
		dec    %ebx
		mov    (%edi),%dl
		mov    %dl,(%edi,%ebx,1)

	_087401_jump:
		mov    $0x000020,%edx
		mov    %edi,%eax
		call   _07c050_func

	_08740d_jump:
		lea    -0x00000c(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebp
		ret    



_087415_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x000034,%esp
		mov    0x000008(%ebp),%edi
		mov    %eax,-0x000020(%ebp)
		mov    %edx,%esi
		mov    %ebx,-0x000018(%ebp)
		mov    %cl,-0x00000c(%ebp)
		mov    0x000018(%ebp),%cl
		lea    -0x00003c(%ebp),%ebx
		mov    (%edx),%eax
		mov    0x000004(%edx),%edx
		call   _0879e8_func
		test   %eax,%eax
		je     _08745b_jump
		mov    -0x000020(%ebp),%eax
		xor    %esi,%esi
		jmp    _08744e_jump

	_087446_jump:
		cmp    %edi,%esi
		jge    _08744c_jump
		mov    %ch,(%eax)

	_08744c_jump:
		inc    %eax
		inc    %esi

	_08744e_jump:
		mov    -0x00003c(%esi,%ebp,1),%ch
		test   %ch,%ch
		jne    _087446_jump
		jmp    _0875f4_jump

	_08745b_jump:
		mov    %cl,%al
		mov    %cl,-0x000010(%ebp)
		cmp    $0x000047,%eax
		jne    _0874b7_jump
		mov    (%esi),%eax
		mov    0x000004(%esi),%edx
		call   _08503d_func
		mov    %edx,%ebx
		test   %edx,%edx
		je     _0874af_jump
		call   _087a7c_func
		mov    %edx,%ebx
		call   _087aa6_func
		call   _07c13c_func
		cmp    $0xfffffffc,%eax
		jl     _087490_jump
		cmp    -0x000018(%ebp),%eax
		jl     _087496_jump

	_087490_jump:
		movb   $0x000045,-0x000010(%ebp)
		jmp    _0874b7_jump

	_087496_jump:
		test   %ebx,%ebx
		jl     _08749b_jump
		inc    %eax

	_08749b_jump:
		mov    $0x000046,%dl
		mov    -0x000018(%ebp),%ebx
		mov    %dl,-0x000010(%ebp)
		sub    %eax,%ebx
		xor    %eax,%eax
		mov    %ebx,-0x000018(%ebp)
		mov    %eax,0x00000c(%ebp)
		jmp    _0874b7_jump

	_0874af_jump:
		mov    $0x000046,%ah
		mov    %edx,0x00000c(%ebp)
		mov    %ah,-0x000010(%ebp)

	_0874b7_jump:
		xor    %eax,%eax
		mov    -0x000010(%ebp),%al
		cmp    $0x000045,%eax
		jne    _0874eb_jump
		mov    -0x000018(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		neg    %eax
		cmp    %edx,%eax
		jge    _0874d7_jump
		mov    -0x000018(%ebp),%eax
		add    $0x000002,%eax
		cmp    %edx,%eax
		jg     _0874eb_jump

	_0874d7_jump:
		mov    $0x00002a,%edx
		mov    -0x000020(%ebp),%eax
		mov    %edi,%ebx
		call   _07c050_func
		jmp    _087608_jump

	_0874eb_jump:
		mov    -0x000018(%ebp),%eax
		mov    %eax,-0x000014(%ebp)
		xor    %eax,%eax
		mov    %cl,%al
		cmp    $0x000045,%eax
		jne    _087511_jump
		mov    0x00000c(%ebp),%ecx
		test   %ecx,%ecx
		jle    _087507_jump
		mov    -0x000018(%ebp),%eax
		inc    %eax
		jmp    _08750e_jump

	_087507_jump:
		jge    _087511_jump
		mov    -0x000018(%ebp),%eax
		add    %ecx,%eax

	_08750e_jump:
		mov    %eax,-0x000014(%ebp)

	_087511_jump:
		mov    0x000004(%esi),%edx
		mov    (%esi),%eax
		mov    %edx,-0x00001c(%ebp)
		test   %edx,%edx
		je     _08753b_jump
		xor    %edx,%edx
		mov    -0x000010(%ebp),%dl
		cmp    $0x000045,%edx
		je     _08753b_jump
		mov    0x00000c(%ebp),%ecx
		test   %ecx,%ecx
		je     _08753b_jump
		mov    -0x00001c(%ebp),%edx
		mov    %ecx,%ebx
		call   _087b25_func
		mov    %edx,-0x00001c(%ebp)

	_08753b_jump:
		lea    -0x00003c(%ebp),%edx
		push   %edx
		xor    %edx,%edx
		mov    -0x000010(%ebp),%dl
		push   %edx
		lea    -0x000028(%ebp),%edx
		lea    -0x000024(%ebp),%ecx
		push   %edx
		mov    -0x000014(%ebp),%ebx
		mov    -0x00001c(%ebp),%edx
		call   _087c47_func
		mov    -0x000020(%ebp),%eax
		mov    -0x000028(%ebp),%esi
		lea    0x000001(%eax),%edx
		test   %esi,%esi
		je     _087569_jump
		movb   $0x00002d,(%eax)
		jmp    _087572_jump

	_087569_jump:
		cmpb   $0x000000,-0x00000c(%ebp)
		je     _087574_jump
		movb   $0x00002b,(%eax)

	_087572_jump:
		mov    %edx,%eax

	_087574_jump:
		xor    %edx,%edx
		mov    -0x000010(%ebp),%dl
		cmp    $0x000045,%edx
		jne    _0875c7_jump
		mov    0x00000c(%ebp),%edx
		mov    -0x000014(%ebp),%ecx
		mov    %edx,%ebx
		sub    %edx,%ecx
		lea    -0x00003c(%ebp),%edx
		call   _087341_func
		mov    -0x000020(%ebp),%ecx
		mov    %eax,%esi
		sub    %ecx,%esi
		mov    0x000014(%ebp),%cl
		mov    %eax,%ebx
		test   %cl,%cl
		je     _0875a8_jump
		cmp    %edi,%esi
		jge    _0875a8_jump
		inc    %esi
		mov    %cl,(%eax)
		inc    %eax

	_0875a8_jump:
		cmpl   $0x000000,-0x00001c(%ebp)
		je     _0875b4_jump
		mov    0x00000c(%ebp),%edx
		sub    %edx,-0x000024(%ebp)

	_0875b4_jump:
		mov    0x000010(%ebp),%ebx
		mov    %edi,%ecx
		mov    -0x000024(%ebp),%edx
		sub    %esi,%ecx
		call   _08729e_func
		add    %eax,%esi
		jmp    _0875f4_jump

	_0875c7_jump:
		mov    -0x000020(%ebp),%ebx
		mov    %eax,%edx
		sub    %ebx,%edx
		mov    -0x000024(%ebp),%ebx
		mov    -0x000014(%ebp),%ecx
		inc    %ebx
		add    %ecx,%ebx
		add    %ebx,%edx
		cmp    %edx,%edi
		jge    _0875e2_jump
		lea    0x000001(%edi),%esi
		jmp    _0875f4_jump

	_0875e2_jump:
		mov    -0x000024(%ebp),%ebx
		lea    -0x00003c(%ebp),%edx
		mov    -0x000020(%ebp),%esi
		call   _087341_func
		sub    %esi,%eax
		mov    %eax,%esi

	_0875f4_jump:
		cmp    %edi,%esi
		jg     _0874d7_jump
		mov    -0x000020(%ebp),%eax
		mov    %edi,%ebx
		mov    %esi,%edx
		call   _0873a4_func

	_087608_jump:
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    $0x000014



_087611_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000028,%esp
		push   %edx
		mov    %eax,-0x000018(%ebp)

	_08761f_jump:
		mov    (%eax),%bl
		xor    %edx,%edx
		mov    %bl,%dl
		cmp    $0x000020,%edx
		je     _087634_jump
		cmp    $0x000009,%edx
		jl     _087637_jump
		cmp    $0x00000d,%edx
		jg     _087637_jump

	_087634_jump:
		inc    %eax
		jmp    _08761f_jump

	_087637_jump:
		xor    %cl,%cl
		and    $0x0000ff,%ebx
		lea    0x000001(%eax),%edx
		cmp    $0x00002b,%ebx
		je     _08764e_jump
		cmp    $0x00002d,%ebx
		jne    _087650_jump
		mov    $0x000001,%cl

	_08764e_jump:
		mov    %edx,%eax

	_087650_jump:
		xor    %ebx,%ebx
		mov    $0x000030,%dh
		mov    %ebx,-0x000014(%ebp)

	_087657_jump:
		mov    (%eax),%dl
		mov    %cl,%ch
		movzbl %dl,%esi
		and    $0x000008,%ch
		inc    %eax
		cmp    $0x00002e,%esi
		jne    _087673_jump
		movzbl %ch,%esi
		test   %esi,%esi
		jne    _0876a0_jump
		or     $0x000008,%cl
		jmp    _087657_jump

	_087673_jump:
		cmp    $0x000030,%esi
		jl     _0876a0_jump
		cmp    $0x000039,%esi
		jg     _0876a0_jump
		movzbl %ch,%esi
		test   %esi,%esi
		je     _087687_jump
		incl   -0x000014(%ebp)

	_087687_jump:
		or     %dl,%dh
		movzbl %dh,%esi
		cmp    $0x000030,%esi
		je     _08769b_jump
		cmp    $0x000011,%ebx
		jge    _08769a_jump
		mov    %dl,-0x000038(%ebx,%ebp,1)

	_08769a_jump:
		inc    %ebx

	_08769b_jump:
		or     $0x000004,%cl
		jmp    _087657_jump

	_0876a0_jump:
		mov    %cl,%dh
		and    $0x000004,%dh
		movzbl %dh,%edi
		xor    %esi,%esi
		test   %edi,%edi
		je     _087736_jump
		and    $0x0000ff,%edx
		cmp    $0x000065,%edx
		je     _0876c6_jump
		cmp    $0x000045,%edx
		jne    _087732_jump

	_0876c6_jump:
		lea    -0x000001(%eax),%edx
		mov    %edx,-0x00001c(%ebp)
		mov    (%eax),%dl
		lea    0x000001(%eax),%edi
		and    $0x0000ff,%edx
		cmp    $0x00002b,%edx
		je     _0876e4_jump
		cmp    $0x00002d,%edx
		jne    _0876e6_jump
		or     $0x000002,%cl

	_0876e4_jump:
		mov    %edi,%eax

	_0876e6_jump:
		and    $0x0000fb,%cl

	_0876e9_jump:
		mov    (%eax),%dl
		and    $0x0000ff,%edx
		cmp    $0x000030,%edx
		jl     _087711_jump
		cmp    $0x000039,%edx
		jg     _087711_jump
		cmp    $0x0003e8,%esi
		jge    _08770b_jump
		imul   $0x00000a,%esi,%esi
		add    %esi,%edx
		lea    -0x000030(%edx),%esi

	_08770b_jump:
		or     $0x000004,%cl
		inc    %eax
		jmp    _0876e9_jump

	_087711_jump:
		mov    %cl,%dl
		and    $0x000002,%dl
		and    $0x0000ff,%edx
		je     _087720_jump
		neg    %esi

	_087720_jump:
		mov    %cl,%dl
		and    $0x000004,%dl
		and    $0x0000ff,%edx
		jne    _087733_jump
		mov    -0x00001c(%ebp),%eax
		jmp    _087733_jump

	_087732_jump:
		dec    %eax

	_087733_jump:
		mov    %eax,-0x000018(%ebp)

	_087736_jump:
		sub    -0x000014(%ebp),%esi
		cmp    $0x000011,%ebx
		jle    _087748_jump
		sub    $0x000011,%ebx
		add    %ebx,%esi
		mov    $0x000011,%ebx

	_087748_jump:
		test   %ebx,%ebx
		jle    _08775b_jump
		xor    %eax,%eax
		mov    -0x000039(%ebx,%ebp,1),%al
		cmp    $0x000030,%eax
		jne    _08775b_jump
		inc    %esi
		dec    %ebx
		jmp    _087748_jump

	_08775b_jump:
		test   %ebx,%ebx
		jne    _08776a_jump
		mov    %ebx,-0x000024(%ebp)
		mov    %ebx,-0x000020(%ebp)
		jmp    _087803_jump

	_08776a_jump:
		xor    %ah,%ah
		lea    -0x000024(%ebp),%edx
		mov    %ah,-0x000038(%ebx,%ebp,1)
		lea    -0x000038(%ebp),%eax
		call   _086634_func
		lea    -0x000001(%esi,%ebx,1),%eax
		cmp    $0x000134,%eax
		jle    _0877bd_jump
		call   _082f65_func
		mov    %cl,%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _0877ab_jump
		mov    _0c14a0_data,%eax
		mov    _0c14a4_data,%edx
		call   _07c66e_func
		mov    %eax,-0x000024(%ebp)
		jmp    _087800_jump

	_0877ab_jump:
		mov    _0c14a0_data,%eax
		mov    %eax,-0x000024(%ebp)
		mov    _0c14a4_data,%eax
		mov    %eax,-0x000020(%ebp)
		jmp    _087803_jump

	_0877bd_jump:
		cmp    $0xfffffecc,%eax
		jge    _0877d0_jump
		xor    %edx,%edx
		call   _082f65_func
		mov    %edx,-0x000024(%ebp)
		jmp    _087800_jump

	_0877d0_jump:
		test   %esi,%esi
		je     _0877e7_jump
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		mov    %esi,%ebx
		call   _087b25_func
		mov    %eax,-0x000024(%ebp)
		mov    %edx,-0x000020(%ebp)

	_0877e7_jump:
		mov    %cl,%al
		and    $0x000001,%al
		and    $0x0000ff,%eax
		je     _087803_jump
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _07c66e_func
		mov    %eax,-0x000024(%ebp)

	_087800_jump:
		mov    %edx,-0x000020(%ebp)

	_087803_jump:
		mov    -0x00003c(%ebp),%edi
		test   %edi,%edi
		je     _08780f_jump
		mov    -0x000018(%ebp),%eax
		mov    %eax,(%edi)

	_08780f_jump:
		mov    -0x000024(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_087823_func:
		push   %ebx
		push   %ecx
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %ds,%edx
		call   _087e28_func
		test   %eax,%eax
		jne    _08783d_jump
		mov    %ecx,%edx
		mov    %ebx,%eax
		call   _07c009_func

	_08783d_jump:
		pop    %ecx
		pop    %ebx
		ret    



_087840_func:
		jmp    _087e4e_jump



_087845_func:
		push   %edx
		cmp    $0x000005,%eax
		jbe    _08784f_jump
		xor    %eax,%eax
		pop    %edx
		ret    

	_08784f_jump:
		mov    %eax,%edx
		shl    $0x000002,%eax
		sub    %edx,%eax
		shl    $0x000002,%eax
		add    %edx,%eax
		add    %eax,%eax
		add    $_0bd5bc_data,%eax
		pop    %edx
		ret    



_087864_func:
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		mov    %eax,%ecx
		mov    %edx,%ebx
		cmpl   $0x000000,0x000008(%edx)
		jne    _08787a_jump
		mov    %ebx,%eax
		call   _08381c_func

	_08787a_jump:
		mov    0x00000d(%ebx),%ah
		xor    %edi,%edi
		test   $0x000004,%ah
		je     _087896_jump
		mov    %ah,%dl
		and    $0x0000f9,%dl
		mov    %dl,%dh
		or     $0x000002,%dh
		mov    $0x000001,%edi
		mov    %dh,0x00000d(%ebx)

	_087896_jump:
		mov    %ecx,%ebp
		xor    %esi,%esi

	_08789a_jump:
		xor    %eax,%eax
		mov    (%ecx),%al
		test   %eax,%eax
		je     _0878b1_jump
		mov    %ebx,%edx
		inc    %ecx
		call   _07ccba_func
		cmp    $0xffffffff,%eax
		jne    _08789a_jump
		mov    %eax,%esi

	_0878b1_jump:
		test   %edi,%edi
		je     _0878cf_jump
		mov    0x00000d(%ebx),%al
		and    $0x0000f9,%al
		mov    %al,%ah
		or     $0x000004,%ah
		mov    %ah,0x00000d(%ebx)
		test   %esi,%esi
		jne    _0878cf_jump
		mov    %ebx,%eax
		call   _0838b2_func
		mov    %eax,%esi

	_0878cf_jump:
		test   %esi,%esi
		jne    _0878d7_jump
		mov    %ecx,%esi
		sub    %ebp,%esi

	_0878d7_jump:
		mov    %esi,%eax
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		ret    



_0878df_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %esi
		push   %edi
		push   %es
		push   %fs
		cmpl   $0x000000,_0bf950_data
		jne    _0879aa_jump
		mov    _0bd81d_data,%fs
		xor    %ecx,%ecx
		xor    %dl,%dl
		mov    %fs,%eax
		mov    _0bd819_data,%edi
		mov    %eax,%es
		mov    %edi,%eax

	_08790a_jump:
		cmp    %es:(%eax),%dl
		je     _087922_jump

	_08790f_jump:
		mov    %es:(%eax),%dh
		lea    0x000001(%eax),%ebx
		cmp    %dh,%dl
		je     _08791d_jump
		mov    %ebx,%eax
		jmp    _08790f_jump

	_08791d_jump:
		inc    %ecx
		mov    %ebx,%eax
		jmp    _08790a_jump

	_087922_jump:
		sub    %edi,%eax
		jne    _08792b_jump
		mov    $0x000001,%eax

	_08792b_jump:
		call   _0818ba_func
		mov    %eax,%edx
		mov    %eax,%ebx
		test   %eax,%eax
		je     _0879aa_jump
		mov    %ecx,%eax
		shl    $0x000002,%eax
		add    $0x000004,%eax
		add    %ecx,%eax
		call   _0818ba_func
		test   %eax,%eax
		je     _0879a3_jump
		mov    %eax,_0bf950_data
		xor    %esi,%esi
		mov    %fs,%eax
		xor    %ecx,%ecx
		mov    %eax,%es
		mov    %edi,%eax

	_08795e_jump:
		cmpb   $0x000000,%es:(%eax)
		je     _08797e_jump
		mov    _0bf950_data,%edx
		mov    %ebx,(%ecx,%edx,1)

	_08796d_jump:
		mov    %es:(%eax),%dl
		inc    %eax
		mov    %dl,(%ebx)
		inc    %ebx
		test   %dl,%dl
		jne    _08796d_jump
		add    $0x000004,%ecx
		inc    %esi
		jmp    _08795e_jump

	_08797e_jump:
		mov    _0bf950_data,%edx
		movl   $0x000000,(%ecx,%edx,1)
		add    $0x000004,%ecx
		add    %ecx,%edx
		mov    %esi,%ebx
		mov    %edx,_0bf954_data
		mov    %edx,%eax
		xor    %edx,%edx
		call   _07c050_func
		jmp    _0879aa_jump

	_0879a3_jump:
		mov    %edx,%eax
		call   _0819b5_func

	_0879aa_jump:
		pop    %fs
		pop    %es
		pop    %edi
		pop    %esi
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0879b4_func:
		push   %eax
		sub    $0x000076,%esp
		fstpt  0x00006c(%esp)
		fnsave (%esp)
		fldt   0x00001c(%esp)
		fldt   0x00006c(%esp)
		call   _087e60_func
		fnstsw %ax
		fstpt  0x00001c(%esp)
		and    $0x0000ff,%ax
		or     0x000004(%esp),%ax
		mov    %ax,0x000004(%esp)
		frstor (%esp)
		add    $0x000076,%esp
		pop    %eax
		ret    



_0879e8_func:
		sub    $0x000008,%esp
		mov    %edx,0x000004(%esp)
		mov    %eax,(%esp)
		mov    0x000006(%esp),%eax
		and    $0x007ff0,%eax
		and    $0x00ffff,%eax
		cmp    $0x007ff0,%eax
		jne    _087a64_jump
		mov    0x000006(%esp),%edx
		xor    %dl,%dl
		mov    %ebx,%eax
		and    $0x000080,%dh
		and    $0x00ffff,%edx
		je     _087a20_jump
		lea    0x000001(%ebx),%eax
		movb   $0x00002d,(%ebx)

	_087a20_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		mov    0x000002(%esp),%dx
		mov    (%esp),%bx
		or     %edx,%ebx
		xor    %edx,%edx
		mov    0x000004(%esp),%dx
		or     %edx,%ebx
		mov    0x000006(%esp),%edx
		xor    %dh,%dh
		and    $0x00000f,%dl
		and    $0x00ffff,%edx
		or     %ebx,%edx
		jne    _087a53_jump
		mov    _0c13b8_data,%edx
		jmp    _087a59_jump

	_087a53_jump:
		mov    _0c13bc_data,%edx

	_087a59_jump:
		mov    %edx,(%eax)
		mov    $0x000001,%eax
		add    $0x000008,%esp
		ret    

	_087a64_jump:
		xor    %eax,%eax
		add    $0x000008,%esp
		ret    



_087a7c_func:
		push   %ebx
		push   %ecx
		test   %edx,%edx
		jg     _087a8f_jump
		mov    $0x00000b,%ebx
		call   _088060_func
		pop    %ecx
		pop    %ebx
		ret    

	_087a8f_jump:
		mov    $0x1526e50e,%ebx
		mov    $0x3fdbcb7b,%ecx
		call   _0880a2_func
		call   _07baef_func
		pop    %ecx
		pop    %ebx
		ret    



_087aa6_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		sub    $0x000008,%esp
		lea    -0x000010(%ebp),%ebx
		call   _085104_func
		test   %edx,%edx
		jge    _087ad2_jump
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		mov    $0xbff00000,%ecx
		xor    %ebx,%ebx
		call   _07b938_func
		mov    %eax,-0x000010(%ebp)
		mov    %edx,-0x00000c(%ebp)

	_087ad2_jump:
		mov    -0x000010(%ebp),%eax
		mov    -0x00000c(%ebp),%edx
		lea    -0x000008(%ebp),%esp
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_087adf_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		sub    $0x000008,%esp
		mov    0x000008(%ebp),%esi
		mov    %ebx,-0x00000c(%ebp)
		mov    %ecx,-0x000008(%ebp)
		mov    %edx,%ecx
		cmp    %edx,%eax
		je     _087b0a_jump
		mov    %edx,%ebx
		mov    -0x000008(%ebp),%edx
		sub    %eax,%ebx
		mov    -0x00000c(%ebp),%eax
		call   _087b25_func
		mov    %eax,-0x00000c(%ebp)
		mov    %edx,-0x000008(%ebp)

	_087b0a_jump:
		lea    -0x00000c(%ebp),%eax
		mov    %esi,%edx
		call   _08827e_func
		mov    %esi,%edx
		mov    %ecx,%eax
		call   _088244_func
		lea    -0x000004(%ebp),%esp
		pop    %esi
		pop    %ebp
		ret    $0x000004



_087b25_func:
		push   %ecx
		push   %esi
		push   %edi
		push   %ebp
		sub    $0x000008,%esp
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)
		mov    %ebx,(%esp)
		mov    _0c1540_data,%ebx
		mov    _0c1544_data,%ecx
		call   _081734_func
		jne    _087b55_jump
		mov    _0c1554_data,%eax
		mov    _0c1550_data,%ebp
		jmp    _087b79_jump

	_087b55_jump:
		mov    0x000004(%esp),%edx
		mov    _0c1548_data,%ebx
		mov    _0c154c_data,%ecx
		mov    %ebp,%eax
		call   _081734_func
		jne    _087b7d_jump
		mov    _0c155c_data,%eax
		mov    _0c1558_data,%ebp

	_087b79_jump:
		mov    %eax,0x000004(%esp)

	_087b7d_jump:
		mov    (%esp),%edx
		mov    $_0c1598_data,%esi
		test   %edx,%edx
		jge    _087bb4_jump
		mov    %edx,%edi
		neg    %edi
		cmp    $0x000134,%edi
		jle    _087be1_jump
		mov    0x000004(%esp),%edx
		mov    _0c159a_data,%ebx
		mov    _0c159e_data,%ecx
		mov    %ebp,%eax
		sub    $0x0000d8,%edi
		call   _07c468_func
		jmp    _087bdb_jump

	_087bb4_jump:
		mov    %edx,%edi
		cmp    $0x000134,%edx
		jle    _087be1_jump
		mov    0x000004(%esp),%edx
		mov    _0c159a_data,%ebx
		mov    _0c159e_data,%ecx
		mov    %ebp,%eax
		sub    $0x0000d8,%edi
		call   _07baef_func

	_087bdb_jump:
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)

	_087be1_jump:
		mov    $0x3ff00000,%ecx
		xor    %ebx,%ebx

	_087be8_jump:
		movswl (%esi),%eax
		cmp    %eax,%edi
		jl     _087c04_jump
		mov    %ecx,%edx
		sub    %eax,%edi
		mov    %ebx,%eax
		mov    0x000006(%esi),%ecx
		mov    0x000002(%esi),%ebx
		call   _07baef_func
		mov    %eax,%ebx
		mov    %edx,%ecx

	_087c04_jump:
		test   %edi,%edi
		je     _087c15_jump
		movswl (%esi),%eax
		cmp    $0x000001,%eax
		je     _087be8_jump
		add    $0x00000a,%esi
		jmp    _087be8_jump

	_087c15_jump:
		cmpl   $0x000000,(%esp)
		jge    _087c28_jump
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		call   _07c468_func
		jmp    _087c33_jump

	_087c28_jump:
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		call   _07baef_func

	_087c33_jump:
		mov    %eax,%ebp
		mov    %edx,0x000004(%esp)
		mov    0x000004(%esp),%edx
		mov    %ebp,%eax
		add    $0x000008,%esp
		pop    %ebp
		pop    %edi
		pop    %esi
		pop    %ecx
		ret    



_087c47_func:
		push   %ebp
		mov    %esp,%ebp
		push   %esi
		push   %edi
		sub    $0x00002c,%esp
		push   %eax
		push   %edx
		mov    %ebx,%esi
		mov    %ecx,%edi
		mov    0x000008(%ebp),%eax
		mov    0x000010(%ebp),%ebx
		movl   $0x000000,(%eax)
		mov    -0x000038(%ebp),%eax
		movl   $0x000000,(%ecx)
		call   _0879e8_func
		test   %eax,%eax
		je     _087c7b_jump
		mov    0x000010(%ebp),%eax
		jmp    _087e1f_jump

	_087c7b_jump:
		xor    %edx,%edx
		xor    %ebx,%ebx
		xor    %ecx,%ecx
		mov    %dx,-0x000020(%ebp)
		mov    %bx,-0x00001e(%ebp)
		mov    %dx,-0x00001a(%ebp)
		mov    -0x00003c(%ebp),%edx
		mov    %cx,-0x00001c(%ebp)
		test   %edx,%edx
		je     _087dda_jump
		jge    _087cb5_jump
		mov    0x000008(%ebp),%eax
		movl   $0xffffffff,(%eax)
		mov    -0x000038(%ebp),%eax
		call   _07c66e_func
		mov    %eax,-0x000038(%ebp)
		mov    %edx,-0x00003c(%ebp)

	_087cb5_jump:
		mov    -0x000038(%ebp),%eax
		mov    -0x00003c(%ebp),%edx
		mov    %edi,%ebx
		call   _082d9c_func
		mov    (%edi),%eax
		mov    %eax,-0x000010(%ebp)
		test   %eax,%eax
		jge    _087cd0_jump
		neg    %eax
		mov    %eax,-0x000010(%ebp)

	_087cd0_jump:
		mov    -0x000010(%ebp),%edx
		mov    -0x000010(%ebp),%ebx
		shl    $0x000002,%edx
		sub    %ebx,%edx
		add    $0x000005,%edx
		mov    $0x00000a,%ebx
		mov    %edx,%eax
		sar    $0x00001f,%edx
		idiv   %ebx
		mov    (%edi),%ecx
		mov    %eax,-0x000010(%ebp)
		test   %ecx,%ecx
		jge    _087cf8_jump
		neg    %eax
		mov    %eax,-0x000010(%ebp)

	_087cf8_jump:
		mov    -0x000010(%ebp),%eax
		mov    0x00000c(%ebp),%edx
		mov    %eax,(%edi)
		cmp    $0x000046,%edx
		jne    _087d07_jump
		add    %eax,%esi

	_087d07_jump:
		test   %esi,%esi
		jl     _087da0_jump
		cmp    $0x000010,%esi
		jle    _087d19_jump
		mov    $0x000010,%esi

	_087d19_jump:
		lea    -0x000018(%ebp),%ebx
		xor    %ah,%ah
		mov    -0x00003c(%ebp),%edx
		mov    %ah,-0x00000c(%ebp)
		mov    -0x000038(%ebp),%eax
		call   _085104_func
		test   %edx,%edx
		jne    _087d3e_jump
		mov    -0x000010(%ebp),%ecx
		cmp    %ecx,%esi
		jle    _087d3e_jump
		mov    $0x000001,%dl
		mov    %ecx,%esi
		mov    %dl,-0x00000c(%ebp)

	_087d3e_jump:
		lea    -0x000020(%ebp),%eax
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%ecx
		push   %eax
		mov    %esi,%edx
		mov    (%edi),%eax
		call   _087adf_func
		mov    %eax,%edx
		test   %eax,%eax
		je     _087da0_jump
		mov    (%edi),%ebx
		add    %eax,%ebx
		mov    0x00000c(%ebp),%ecx
		mov    %ebx,(%edi)
		cmp    $0x000046,%ecx
		je     _087d6b_jump
		cmpb   $0x000000,-0x00000c(%ebp)
		je     _087d6d_jump

	_087d6b_jump:
		add    %edx,%esi

	_087d6d_jump:
		cmp    $0x000001,%esi
		jge    _087d79_jump
		mov    $0x000001,%esi
		jmp    _087d83_jump

	_087d79_jump:
		cmp    $0x000010,%esi
		jle    _087d83_jump
		mov    $0x000010,%esi

	_087d83_jump:
		lea    -0x000020(%ebp),%eax
		mov    -0x000038(%ebp),%ebx
		mov    -0x00003c(%ebp),%ecx
		push   %eax
		mov    %esi,%edx
		mov    (%edi),%eax
		call   _087adf_func
		test   %eax,%eax
		jle    _087da0_jump
		mov    (%edi),%eax
		inc    %eax
		inc    %esi
		mov    %eax,(%edi)

	_087da0_jump:
		mov    -0x000020(%ebp),%edx
		mov    -0x000022(%ebp),%eax
		sar    $0x000010,%edx
		sar    $0x000010,%eax
		or     %edx,%eax
		mov    -0x00001e(%ebp),%edx
		sar    $0x000010,%edx
		or     %edx,%eax
		mov    -0x00001c(%ebp),%edx
		sar    $0x000010,%edx
		or     %edx,%eax
		jne    _087dda_jump
		mov    0x000008(%ebp),%eax
		movl   $0x000000,(%eax)
		mov    0x00000c(%ebp),%edx
		movl   $0x000000,(%edi)
		cmp    $0x000046,%edx
		jne    _087dda_jump
		sub    -0x000010(%ebp),%esi

	_087dda_jump:
		cmp    $0x000001,%esi
		jge    _087de6_jump
		mov    $0x000001,%esi
		jmp    _087df0_jump

	_087de6_jump:
		cmp    $0x000011,%esi
		jle    _087df0_jump
		mov    $0x000011,%esi

	_087df0_jump:
		lea    -0x000034(%ebp),%edx
		lea    -0x000020(%ebp),%eax
		mov    0x000010(%ebp),%edi
		mov    %esi,%ebx
		lea    -0x000034(%ebp),%esi
		call   _0882e9_func
		push   %edi

	_087e04_jump:
		mov    (%esi),%al
		mov    %al,(%edi)
		cmp    $0x000000,%al
		je     _087e1c_jump
		mov    0x000001(%esi),%al
		add    $0x000002,%esi
		mov    %al,0x000001(%edi)
		add    $0x000002,%edi
		cmp    $0x000000,%al
		jne    _087e04_jump

	_087e1c_jump:
		pop    %edi
		mov    %edi,%eax

	_087e1f_jump:
		lea    -0x000008(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ebp
		ret    $0x00000c



_087e28_func:
		cmpb   $0x000000,_0bfa10_data
		je     _087e4b_jump
		and    $0x00ffff,%edx
		push   %edx
		push   %eax
		int3   
		jmp    _087e42_jump

	_087e42_jump:
		mov    $0x000001,%eax
		add    $0x000008,%esp
		ret    

	_087e4b_jump:
		xor    %eax,%eax
		ret    

	_087e4e_jump:
		xor    %eax,%eax
		ret    



_087e60_func:
		push   %eax
		push   %ecx
		push   %edx
		sub    $0x000024,%esp
		fstpt  0x00000c(%esp)
		fstpt  (%esp)
		mov    0x000004(%esp),%ecx
		add    %ecx,%ecx
		jae    _088050_jump
		mov    0x000010(%esp),%eax
		add    %eax,%eax
		jae    _088050_jump
		mov    0x000008(%esp),%ecx
		mov    0x000014(%esp),%eax
		and    $0x007fff,%ecx
		je     _088050_jump
		and    $0x007fff,%eax
		je     _088050_jump
		cmp    $0x007fff,%ecx
		je     _088050_jump
		cmp    $0x007fff,%eax
		je     _088050_jump
		fldt   0x00000c(%esp)
		fabs   
		fldt   (%esp)
		fabs   
		fnstcw 0x000018(%esp)
		mov    0x000018(%esp),%edx
		or     $0x00033f,%edx
		and    $0x00f3ff,%edx
		mov    %edx,0x00001c(%esp)
		fldcw  0x00001c(%esp)
		xor    %edx,%edx
		fcom   %st(1)
		push   %eax
		fnstsw %ax
		sahf   
		pop    %eax
		jb     _087ef0_jump
		fxch   %st(1)
		inc    %edx

	_087ef0_jump:
		push   %eax
		mov    $0x00000f,%eax
		call   _083217_func
		pop    %eax
		flds   _0c1790_data
		fmul   %st(1),%st
		fistpl 0x000020(%esp)
		mov    0x000020(%esp),%ecx
		shl    $0x000004,%ecx
		fildl  0x000020(%esp)
		fmuls  _0c1794_data
		fld    %st(1)
		fsub   %st(1),%st
		fxch   %st(1)
		fmulp  %st,%st(2)
		fldl   _0c174c_data
		faddp  %st,%st(2)
		push   %eax
		mov    $0x00000f,%eax
		call   _083217_func
		pop    %eax
		fld    %st(0)
		fmul   %st(1),%st
		fld    %st(0)
		fmul   %st(1),%st
		fld    %st(0)
		fmul   %st(1),%st
		fldt   _0c17ca_data
		fldt   _0c17c0_data
		fxch   %st(1)
		fmul   %st(2),%st
		fldt   _0c17b6_data
		fxch   %st(2)
		fmul   %st(3),%st
		fldt   _0c17ac_data
		fxch   %st(2)
		fmul   %st(5),%st
		fxch   %st(3)
		fmulp  %st,%st(4)
		fldt   _0c17a2_data
		fxch   %st(3)
		faddp  %st,%st(4)
		mov    0x000014(%esp),%eax
		fldt   _0c1798_data
		fxch   %st(1)
		shl    $0x000010,%eax
		fmul   %st(6),%st
		fxch   %st(2)
		add    %eax,%eax
		fmul   %st(5),%st
		fxch   %st(3)
		adc    %edx,%edx
		fmulp  %st,%st(5)
		fxch   %st(2)
		mov    0x000008(%esp),%eax
		fmul   %st(5),%st
		fxch   %st(2)
		shl    $0x000010,%eax
		fmulp  %st,%st(5)
		fxch   %st(2)
		faddp  %st,%st(3)
		add    %eax,%eax
		faddp  %st,%st(1)
		adc    %edx,%edx
		faddp  %st,%st(2)
		faddp  %st,%st(1)
		fmul   %st(1),%st
		faddp  %st,%st(1)
		fldt   _0c17d4_data(%ecx)
		faddp  %st,%st(1)
		jmp    *_0c175c_data(,%edx,4)



_087fc0_func:
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_087fcb_func:
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_087fd8_func:
		fldt   _0c177c_data
		fsubp  %st,%st(1)
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_087feb_func:
		fldt   _0c177c_data
		fsubp  %st,%st(1)
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_088000_func:
		fldt   _0c1786_data
		fsubp  %st,%st(1)
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_088013_func:
		fldt   _0c1786_data
		fsubp  %st,%st(1)
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_088028_func:
		fldt   _0c1786_data
		faddp  %st,%st(1)
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_08803b_func:
		fldt   _0c1786_data
		faddp  %st,%st(1)
		fchs   
		fldcw  0x000018(%esp)
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    

	_088050_jump:
		fldt   (%esp)
		fldt   0x00000c(%esp)
		fpatan 
		add    $0x000024,%esp
		pop    %edx
		pop    %ecx
		pop    %eax
		ret    



_088060_func:
		push   %ebp
		mov    %esp,%ebp
		sub    $0x000008,%esp
		mov    %eax,-0x000008(%ebp)
		mov    %edx,-0x000004(%ebp)
		mov    %ebx,%eax
		and    $0x00001f,%eax
		cmp    $0x000008,%eax
		je     _088080_jump
		test   %edx,%edx
		jne    _088080_jump
		or     $0x001080,%ax
		jmp    _088084_jump

	_088080_jump:
		or     $0x001040,%ax

	_088084_jump:
		lea    -0x000008(%ebp),%edx
		call   _082a7a_func
		mov    %ebp,%esp
		pop    %ebp
		ret    



_0880a2_func:
		push   %ebp
		mov    %esp,%ebp
		push   %ebx
		push   %ecx
		push   %esi
		push   %edi
		sub    $0x000014,%esp
		mov    %eax,%edi
		mov    %edx,%esi
		test   %edx,%edx
		jg     _0880c3_jump
		mov    $0x00000a,%ebx
		call   _088060_func
		jmp    _088233_jump

	_0880c3_jump:
		cmpb   $0x000000,_0bd5b9_data
		je     _0880d8_jump
		mov    %edi,%eax
		call   _08840a_func
		jmp    _088233_jump

	_0880d8_jump:
		lea    -0x000024(%ebp),%ebx
		mov    %edi,%eax
		mov    $0xbfe00000,%ecx
		call   _082d9c_func
		mov    %eax,%edi
		xor    %ebx,%ebx
		mov    %edx,%esi
		call   _07b938_func
		mov    $0x667f3bcd,%ebx
		mov    $0x3fe6a09e,%ecx
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _081734_func
		jle    _088127_jump
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    $0xbfe00000,%ecx
		xor    %ebx,%ebx
		call   _07b938_func
		mov    %eax,-0x000018(%ebp)
		mov    %edx,-0x000014(%ebp)
		jmp    _088134_jump

	_088127_jump:
		mov    -0x000024(%ebp),%edx
		mov    -0x000018(%ebp),%edi
		dec    %edx
		mov    -0x000014(%ebp),%esi
		mov    %edx,-0x000024(%ebp)

	_088134_jump:
		mov    $0x3fe00000,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		xor    %ebx,%ebx
		call   _07baef_func
		mov    $0x3fe00000,%ecx
		xor    %ebx,%ebx
		call   _07b938_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		call   _07c468_func
		mov    %eax,-0x000018(%ebp)
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edx,-0x000014(%ebp)
		call   _07baef_func
		mov    %eax,%edi
		mov    %edx,%esi
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07baef_func
		mov    $0x000002,%ecx
		mov    $_0c1560_data,%ebx
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _082ee9_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _07baef_func
		mov    $0x000003,%ecx
		mov    $_0c1578_data,%ebx
		mov    %eax,-0x00001c(%ebp)
		mov    %edx,-0x000020(%ebp)
		mov    %edi,%eax
		mov    %esi,%edx
		call   _082ee9_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x00001c(%ebp),%eax
		mov    -0x000020(%ebp),%edx
		call   _07c468_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    -0x000018(%ebp),%eax
		mov    -0x000014(%ebp),%edx
		call   _07b938_func
		mov    -0x000024(%ebp),%ebx
		mov    %eax,%edi
		mov    %edx,%esi
		test   %ebx,%ebx
		je     _088237_jump
		mov    %ebx,%eax
		mov    $0xbf2bd010,%ecx
		call   _07b8f2_func
		mov    $0x5c610ca9,%ebx
		mov    %eax,-0x000020(%ebp)
		mov    %edx,-0x00001c(%ebp)
		call   _07baef_func
		mov    %edi,%ebx
		mov    %esi,%ecx
		call   _07b938_func
		mov    $0x3fe63000,%ecx
		mov    %eax,%edi
		mov    %edx,%esi
		xor    %ebx,%ebx
		mov    -0x000020(%ebp),%eax
		mov    -0x00001c(%ebp),%edx
		call   _07baef_func
		mov    %eax,%ebx
		mov    %edx,%ecx
		mov    %edi,%eax
		mov    %esi,%edx
		call   _07b938_func

	_088233_jump:
		mov    %eax,%edi
		mov    %edx,%esi

	_088237_jump:
		mov    %edi,%eax
		mov    %esi,%edx
		lea    -0x000010(%ebp),%esp
		pop    %edi
		pop    %esi
		pop    %ecx
		pop    %ebx
		pop    %ebp
		ret    



_088244_func:
		push   %edi
		push   %ecx
		call   _088353_data
		inc    %eax
		lea    (%edi,%eax,8),%edi
		mov    (%edx),%ecx
		mov    0x000004(%edx),%edx
		sub    %eax,%eax

	_088256_jump:
		cmp    %cs:(%edi),%edx
		jne    _08825f_jump
		cmp    %cs:0x000004(%edi),%ecx

	_08825f_jump:
		jb     _088267_jump
		add    $0x000008,%edi
		inc    %eax
		jmp    _088256_jump

	_088267_jump:
		sub    $0x000008,%edi

	_08826a_jump:
		cmp    %cs:(%edi),%edx
		jne    _088273_jump
		cmp    %cs:0x000004(%edi),%ecx

	_088273_jump:
		jae    _08827b_jump
		sub    $0x000008,%edi
		dec    %eax
		jmp    _08826a_jump

	_08827b_jump:
		pop    %ecx
		pop    %edi
		ret    



_08827e_func:
		push   %ebx
		push   %ecx
		push   %edx
		push   %ebp
		push   %esi
		push   %edx
		mov    %eax,%ebp
		mov    0x000000(%ebp),%ecx
		mov    0x000004(%ebp),%ebx
		mov    %ebx,%ebp
		and    $0xfff00000,%ebp
		xor    %ebp,%ebx
		xor    $0x100000,%ebx
		shr    $0x000014,%ebp
		sub    $0x000433,%ebp
		je     _0882dc_jump
		jbe    _0882b2_jump

	_0882a9_jump:
		shl    %ecx
		rcl    %ebx
		dec    %ebp
		jne    _0882a9_jump
		jmp    _0882dc_jump

	_0882b2_jump:
		sub    %eax,%eax
		sub    %esi,%esi

	_0882b6_jump:
		shr    %ebx
		rcr    %ecx
		rcr    %eax
		adc    %esi,%esi
		inc    %ebp
		jne    _0882b6_jump
		cmp    $0x80000000,%eax
		jb     _0882dc_jump
		jne    _0882d6_jump
		or     %esi,%esi
		jne    _0882d6_jump
		test   $0x000001,%ecx
		je     _0882dc_jump

	_0882d6_jump:
		add    $0x000001,%ecx
		adc    $0x000000,%ebx

	_0882dc_jump:
		pop    %ebp
		mov    %ecx,0x000000(%ebp)
		mov    %ebx,0x000004(%ebp)
		pop    %esi
		pop    %ebp
		pop    %edx
		pop    %ecx
		pop    %ebx
		ret    



_0882e9_func:
		push   %ebp
		push   %edi
		push   %ecx
		push   %ebx
		mov    %eax,%ebp
		mov    0x000000(%ebp),%ecx
		mov    0x000004(%ebp),%eax
		mov    %edx,%ebp
		add    %ebx,%ebp
		movb   $0x000000,0x000000(%ebp)
		push   %eax

	_0882fe_jump:
		pop    %eax
		mov    $0x002710,%edi
		sub    %edx,%edx
		or     %eax,%eax
		jne    _088311_jump
		or     %ecx,%ecx
		jne    _088313_jump
		push   %eax
		jmp    _088329_jump

	_088311_jump:
		div    %edi

	_088313_jump:
		xchg   %eax,%ecx
		div    %edi
		xchg   %eax,%ecx
		push   %eax
		mov    %edx,%eax
		mov    $0x000064,%dl
		div    %dl
		mov    %ah,%dl
		mov    $0x000000,%ah
		aam    $0x00000a
		xchg   %eax,%edx
		mov    $0x000000,%ah
		aam    $0x00000a

	_088329_jump:
		add    $0x003030,%ax
		add    $0x003030,%dx
		sub    $0x000004,%ebp
		mov    %al,0x000003(%ebp)
		dec    %ebx
		je     _08834d_jump
		mov    %ah,0x000002(%ebp)
		dec    %ebx
		je     _08834d_jump
		mov    %dl,0x000001(%ebp)
		dec    %ebx
		je     _08834d_jump
		mov    %dh,0x000000(%ebp)
		dec    %ebx
		jne    _0882fe_jump

	_08834d_jump:
		pop    %eax
		pop    %ebx
		pop    %ecx
		pop    %edi
		pop    %ebp
		ret    

.data

_088353_data:
		.ascii  "\xe8\xb0"
		.fill   0xf
		.ascii  "\x01"
		.fill   0x7
		.ascii  "\x0a"
		.fill   0x7
		.ascii  "\x64"
		.fill   0x7
		.ascii  "\xe8\x03"
		.fill   0x6
		.ascii  "\x10\x27"
		.fill   0x6
		.ascii  "\xa0\x86\x01"
		.fill   0x5
		.ascii  "\x40\x42\x0f"
		.fill   0x5

_08839c_data:
		.ascii  "\x80\x96\x98"
		.fill   0x6
		.ascii  "\xe1\xf5\x05"
		.fill   0x5
		.ascii  "\xca\x9a\x3b\x02"
		.fill   0x4
		.ascii  "\xe4\x0b\x54\x17"
		.fill   0x4
		.ascii  "\xe8\x76\x48\xe8"
		.fill   0x4
		.ascii  "\x10\xa5\xd4\x18\x09\x00\x00\x00"
		.ascii  "\xa0\x72\x4e\xf3\x5a\x00\x00\x00"
		.ascii  "\x40\x7a\x10\x7e\x8d\x03\x00\x00"
		.ascii  "\x80\xc6\xa4\xf2\x86\x23\x00\x00"
		.ascii  "\x00\xc1"
		.ascii   "oxEc"
		.ascii  "\x01\x00\x00\x8a\x5d\xb3\xb6\xe0"
		.ascii  "\x0d\x00\x00\x64\xa7\x04\x23\xc7"
		.ascii  "\x8a\x00\x00\xe8\x89\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff"

_088408_data:
		.ascii  "\x5f\xc3"

.text



_08840a_func:
		fldln2 
		push   %ebp
		mov    %esp,%ebp
		push   %edx
		push   %eax
		fldl   -0x000008(%ebp)
		fyl2x  
		fstpl  -0x000008(%ebp)
		fwait
		pop    %eax
		pop    %edx
		pop    %ebp
		ret    

.data

_090000_data:
		.ascii  "\x01\x01\x01"
		.fill   0xd

_090010_data:
		.fill   0x4

_090014_data:
		.ascii  "\xff\xff\x00\x00"

_090018_data:
		.fill   0x4

_09001c_data:
		.fill   0x4

_090020_data:
		.fill   0x4

_090024_data:
		.fill   0x4

_090028_data:
		.fill   0xc
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e
		.ascii  "\xff\xff"
		.fill   0x1e

_091914_data:
		.fill   0xe

_091922_data:
		.fill   0xc

_09192e_data:
		.fill   0x4

_091932_data:
		.fill   0x4

_091936_data:
		.fill   0x4

_09193a_data:
		.fill   0x4

_09193e_data:
		.fill   0x4

_091942_data:
		.fill   0x4

_091946_data:
		.fill   0x4

_09194a_data:
		.fill   0x10

_09195a_data:
		.fill   0x4
		.ascii  "\x80\x3e\x00\x00\x00\x7d\x00\x00"
		.ascii  "\x80\xbb\x00\x00"

_09196a_data:
		.ascii  "\x00"

_09196b_data:
		.ascii  "\x00"

_09196c_data:
		.ascii  "\x00"

_09196d_data:
		.ascii  "\x00"

_09196e_data:
		.ascii  "\x00"

_09196f_data:
		.fill   0x191

_091b00_data:
		.fill   0x4
		.ascii  "\x40\x01\x00\x00\x80\x02\x00\x00"
		.ascii  "\xc0\x03\x00\x00\x00\x05\x00\x00"
		.ascii  "\x40\x06\x00\x00\x80\x07\x00\x00"
		.ascii  "\xc0\x08\x00\x00\x00\x0a\x00\x00"
		.ascii  "\x40\x0b\x00\x00\x80\x0c\x00\x00"
		.ascii  "\xc0\x0d\x00\x00\x00\x0f\x00\x00"
		.ascii  "\x40\x10\x00\x00\x80\x11\x00\x00"
		.ascii  "\xc0\x12\x00\x00\x00\x14\x00\x00"
		.ascii  "\x40\x15\x00\x00\x80\x16\x00\x00"
		.ascii  "\xc0\x17\x00\x00\x00\x19\x00\x00"
		.ascii  "\x40\x1a\x00\x00\x80\x1b\x00\x00"
		.ascii  "\xc0\x1c\x00\x00\x00\x1e\x00\x00"
		.ascii  "\x40\x1f\x00\x00\x80\x20\x00\x00"
		.ascii  "\xc0\x21\x00\x00\x00\x23\x00\x00"
		.ascii  "\x40\x24\x00\x00\x80\x25\x00\x00"
		.ascii  "\xc0\x26\x00\x00\x00\x28\x00\x00"
		.ascii  "\x40\x29\x00\x00\x80\x2a\x00\x00"
		.ascii  "\xc0\x2b\x00\x00\x00\x2d\x00\x00"
		.ascii  "\x40\x2e\x00\x00\x80\x2f\x00\x00"
		.ascii  "\xc0\x30\x00\x00\x00\x32\x00\x00"
		.ascii  "\x40\x33\x00\x00\x80\x34\x00\x00"
		.ascii  "\xc0\x35\x00\x00\x00\x37\x00\x00"
		.ascii  "\x40\x38\x00\x00\x80\x39\x00\x00"
		.ascii  "\xc0\x3a\x00\x00\x00\x3c\x00\x00"
		.ascii  "\x40\x3d\x00\x00\x80\x3e\x00\x00"
		.ascii  "\xc0\x3f\x00\x00\x00\x41\x00\x00"
		.ascii  "\x40\x42\x00\x00\x80\x43\x00\x00"
		.ascii  "\xc0\x44\x00\x00\x00\x46\x00\x00"
		.ascii  "\x40\x47\x00\x00\x80\x48\x00\x00"
		.ascii  "\xc0\x49\x00\x00\x00\x4b\x00\x00"
		.ascii  "\x40\x4c\x00\x00\x80\x4d\x00\x00"
		.ascii  "\xc0\x4e\x00\x00\x00\x50\x00\x00"
		.ascii  "\x40\x51\x00\x00\x80\x52\x00\x00"
		.ascii  "\xc0\x53\x00\x00\x00\x55\x00\x00"
		.ascii  "\x40\x56\x00\x00\x80\x57\x00\x00"
		.ascii  "\xc0\x58\x00\x00\x00\x5a\x00\x00"
		.ascii  "\x40\x5b\x00\x00\x80\x5c\x00\x00"
		.ascii  "\xc0\x5d\x00\x00\x00\x5f\x00\x00"
		.ascii  "\x40\x60\x00\x00\x80\x61\x00\x00"
		.ascii  "\xc0\x62\x00\x00\x00\x64\x00\x00"
		.ascii  "\x40\x65\x00\x00\x80\x66\x00\x00"
		.ascii  "\xc0\x67\x00\x00\x00\x69\x00\x00"
		.ascii  "\x40\x6a\x00\x00\x80\x6b\x00\x00"
		.ascii  "\xc0\x6c\x00\x00\x00\x6e\x00\x00"
		.ascii  "\x40\x6f\x00\x00\x80\x70\x00\x00"
		.ascii  "\xc0\x71\x00\x00\x00\x73\x00\x00"
		.ascii  "\x40\x74\x00\x00\x80\x75\x00\x00"
		.ascii  "\xc0\x76\x00\x00\x00\x78\x00\x00"
		.ascii  "\x40\x79\x00\x00\x80\x7a\x00\x00"
		.ascii  "\xc0\x7b\x00\x00\x00\x7d\x00\x00"
		.ascii  "\x40\x7e\x00\x00\x80\x7f\x00\x00"
		.ascii  "\xc0\x80\x00\x00\x00\x82\x00\x00"
		.ascii  "\x40\x83\x00\x00\x80\x84\x00\x00"
		.ascii  "\xc0\x85\x00\x00\x00\x87\x00\x00"
		.ascii  "\x40\x88\x00\x00\x80\x89\x00\x00"
		.ascii  "\xc0\x8a\x00\x00\x00\x8c\x00\x00"
		.ascii  "\x40\x8d\x00\x00\x80\x8e\x00\x00"
		.ascii  "\xc0\x8f\x00\x00\x00\x91\x00\x00"
		.ascii  "\x40\x92\x00\x00\x80\x93\x00\x00"
		.ascii  "\xc0\x94\x00\x00\x00\x96\x00\x00"
		.ascii  "\x40\x97\x00\x00\x80\x98\x00\x00"
		.ascii  "\xc0\x99\x00\x00\x00\x9b\x00\x00"
		.ascii  "\x40\x9c\x00\x00\x80\x9d\x00\x00"
		.ascii  "\xc0\x9e\x00\x00\x00\xa0\x00\x00"
		.ascii  "\x40\xa1\x00\x00\x80\xa2\x00\x00"
		.ascii  "\xc0\xa3\x00\x00\x00\xa5\x00\x00"
		.ascii  "\x40\xa6\x00\x00\x80\xa7\x00\x00"
		.ascii  "\xc0\xa8\x00\x00\x00\xaa\x00\x00"
		.ascii  "\x40\xab\x00\x00\x80\xac\x00\x00"
		.ascii  "\xc0\xad\x00\x00\x00\xaf\x00\x00"
		.ascii  "\x40\xb0\x00\x00\x80\xb1\x00\x00"
		.ascii  "\xc0\xb2\x00\x00\x00\xb4\x00\x00"
		.ascii  "\x40\xb5\x00\x00\x80\xb6\x00\x00"
		.ascii  "\xc0\xb7\x00\x00\x00\xb9\x00\x00"
		.ascii  "\x40\xba\x00\x00\x80\xbb\x00\x00"
		.ascii  "\xc0\xbc\x00\x00\x00\xbe\x00\x00"
		.ascii  "\x40\xbf\x00\x00\x80\xc0\x00\x00"
		.ascii  "\xc0\xc1\x00\x00\x00\xc3\x00\x00"
		.ascii  "\x40\xc4\x00\x00\x80\xc5\x00\x00"
		.ascii  "\xc0\xc6\x00\x00\x00\xc8\x00\x00"
		.ascii  "\x40\xc9\x00\x00\x80\xca\x00\x00"
		.ascii  "\xc0\xcb\x00\x00\x00\xcd\x00\x00"
		.ascii  "\x40\xce\x00\x00\x80\xcf\x00\x00"
		.ascii  "\xc0\xd0\x00\x00\x00\xd2\x00\x00"
		.ascii  "\x40\xd3\x00\x00\x80\xd4\x00\x00"
		.ascii  "\xc0\xd5\x00\x00\x00\xd7\x00\x00"
		.ascii  "\x40\xd8\x00\x00\x80\xd9\x00\x00"
		.ascii  "\xc0\xda\x00\x00\x00\xdc\x00\x00"
		.ascii  "\x40\xdd\x00\x00\x80\xde\x00\x00"
		.ascii  "\xc0\xdf\x00\x00\x00\xe1\x00\x00"
		.ascii  "\x40\xe2\x00\x00\x80\xe3\x00\x00"
		.ascii  "\xc0\xe4\x00\x00\x00\xe6\x00\x00"
		.ascii  "\x40\xe7\x00\x00\x80\xe8\x00\x00"
		.ascii  "\xc0\xe9\x00\x00\x00\xeb\x00\x00"
		.ascii  "\x40\xec\x00\x00\x80\xed\x00\x00"
		.ascii  "\xc0\xee\x00\x00\x00\xf0\x00\x00"
		.ascii  "\x40\xf1\x00\x00\x80\xf2\x00\x00"
		.ascii  "\xc0\xf3\x00\x00\x00\xf5\x00\x00"
		.ascii  "\x40\xf6\x00\x00\x80\xf7\x00\x00"
		.ascii  "\xc0\xf8\x00\x00"

_091e20_data:
		.fill   0x4
		.ascii  "\x50\x00\x00\x00\xa0\x00\x00\x00"
		.ascii  "\xf0\x00\x00\x00\x40\x01\x00\x00"
		.ascii  "\x90\x01\x00\x00\xe0\x01\x00\x00"
		.ascii  "\x30\x02\x00\x00\x80\x02\x00\x00"
		.ascii  "\xd0\x02\x00\x00\x20\x03\x00\x00"
		.ascii  "\x70\x03\x00\x00\xc0\x03\x00\x00"
		.ascii  "\x10\x04\x00\x00\x60\x04\x00\x00"
		.ascii  "\xb0\x04\x00\x00\x00\x05\x00\x00"
		.ascii  "\x50\x05\x00\x00\xa0\x05\x00\x00"
		.ascii  "\xf0\x05\x00\x00\x40\x06\x00\x00"
		.ascii  "\x90\x06\x00\x00\xe0\x06\x00\x00"
		.ascii  "\x30\x07\x00\x00\x80\x07\x00\x00"
		.ascii  "\xd0\x07\x00\x00\x20\x08\x00\x00"
		.ascii  "\x70\x08\x00\x00\xc0\x08\x00\x00"
		.ascii  "\x10\x09\x00\x00\x60\x09\x00\x00"
		.ascii  "\xb0\x09\x00\x00\x00\x0a\x00\x00"
		.ascii  "\x50\x0a\x00\x00\xa0\x0a\x00\x00"
		.ascii  "\xf0\x0a\x00\x00\x40\x0b\x00\x00"
		.ascii  "\x90\x0b\x00\x00\xe0\x0b\x00\x00"
		.ascii  "\x30\x0c\x00\x00\x80\x0c\x00\x00"
		.ascii  "\xd0\x0c\x00\x00\x20\x0d\x00\x00"
		.ascii  "\x70\x0d\x00\x00\xc0\x0d\x00\x00"
		.ascii  "\x10\x0e\x00\x00\x60\x0e\x00\x00"
		.ascii  "\xb0\x0e\x00\x00\x00\x0f\x00\x00"
		.ascii  "\x50\x0f\x00\x00\xa0\x0f\x00\x00"
		.ascii  "\xf0\x0f\x00\x00\x40\x10\x00\x00"
		.ascii  "\x90\x10\x00\x00\xe0\x10\x00\x00"
		.ascii  "\x30\x11\x00\x00\x80\x11\x00\x00"
		.ascii  "\xd0\x11\x00\x00\x20\x12\x00\x00"
		.ascii  "\x70\x12\x00\x00\xc0\x12\x00\x00"
		.ascii  "\x10\x13\x00\x00\x60\x13\x00\x00"
		.ascii  "\xb0\x13\x00\x00\x00\x14\x00\x00"
		.ascii  "\x50\x14\x00\x00\xa0\x14\x00\x00"
		.ascii  "\xf0\x14\x00\x00\x40\x15\x00\x00"
		.ascii  "\x90\x15\x00\x00\xe0\x15\x00\x00"
		.ascii  "\x30\x16\x00\x00\x80\x16\x00\x00"
		.ascii  "\xd0\x16\x00\x00\x20\x17\x00\x00"
		.ascii  "\x70\x17\x00\x00\xc0\x17\x00\x00"
		.ascii  "\x10\x18\x00\x00\x60\x18\x00\x00"
		.ascii  "\xb0\x18\x00\x00\x00\x19\x00\x00"
		.ascii  "\x50\x19\x00\x00\xa0\x19\x00\x00"
		.ascii  "\xf0\x19\x00\x00\x40\x1a\x00\x00"
		.ascii  "\x90\x1a\x00\x00\xe0\x1a\x00\x00"
		.ascii  "\x30\x1b\x00\x00\x80\x1b\x00\x00"
		.ascii  "\xd0\x1b\x00\x00\x20\x1c\x00\x00"
		.ascii  "\x70\x1c\x00\x00\xc0\x1c\x00\x00"
		.ascii  "\x10\x1d\x00\x00\x60\x1d\x00\x00"
		.ascii  "\xb0\x1d\x00\x00\x00\x1e\x00\x00"
		.ascii  "\x50\x1e\x00\x00\xa0\x1e\x00\x00"
		.ascii  "\xf0\x1e\x00\x00\x40\x1f\x00\x00"
		.ascii  "\x90\x1f\x00\x00\xe0\x1f\x00\x00"
		.ascii  "\x30\x20\x00\x00\x80\x20\x00\x00"
		.ascii  "\xd0\x20\x00\x00\x20\x21\x00\x00"
		.ascii  "\x70\x21\x00\x00\xc0\x21\x00\x00"
		.ascii  "\x10\x22\x00\x00\x60\x22\x00\x00"
		.ascii  "\xb0\x22\x00\x00\x00\x23\x00\x00"
		.ascii  "\x50\x23\x00\x00\xa0\x23\x00\x00"
		.ascii  "\xf0\x23\x00\x00\x40\x24\x00\x00"
		.ascii  "\x90\x24\x00\x00\xe0\x24\x00\x00"
		.ascii  "\x30\x25\x00\x00\x80\x25\x00\x00"
		.ascii  "\xd0\x25\x00\x00\x20\x26\x00\x00"
		.ascii  "\x70\x26\x00\x00\xc0\x26\x00\x00"
		.ascii  "\x10\x27\x00\x00\x60\x27\x00\x00"
		.ascii  "\xb0\x27\x00\x00\x00\x28\x00\x00"
		.ascii  "\x50\x28\x00\x00\xa0\x28\x00\x00"
		.ascii  "\xf0\x28\x00\x00\x40\x29\x00\x00"
		.ascii  "\x90\x29\x00\x00\xe0\x29\x00\x00"
		.ascii  "\x30\x2a\x00\x00\x80\x2a\x00\x00"
		.ascii  "\xd0\x2a\x00\x00\x20\x2b\x00\x00"
		.ascii  "\x70\x2b\x00\x00\xc0\x2b\x00\x00"
		.ascii  "\x10\x2c\x00\x00\x60\x2c\x00\x00"
		.ascii  "\xb0\x2c\x00\x00\x00\x2d\x00\x00"
		.ascii  "\x50\x2d\x00\x00\xa0\x2d\x00\x00"
		.ascii  "\xf0\x2d\x00\x00\x40\x2e\x00\x00"
		.ascii  "\x90\x2e\x00\x00\xe0\x2e\x00\x00"
		.ascii  "\x30\x2f\x00\x00\x80\x2f\x00\x00"
		.ascii  "\xd0\x2f\x00\x00\x20\x30\x00\x00"
		.ascii  "\x70\x30\x00\x00\xc0\x30\x00\x00"
		.ascii  "\x10\x31\x00\x00\x60\x31\x00\x00"
		.ascii  "\xb0\x31\x00\x00\x00\x32\x00\x00"
		.ascii  "\x50\x32\x00\x00\xa0\x32\x00\x00"
		.ascii  "\xf0\x32\x00\x00\x40\x33\x00\x00"
		.ascii  "\x90\x33\x00\x00\xe0\x33\x00\x00"
		.ascii  "\x30\x34\x00\x00\x80\x34\x00\x00"
		.ascii  "\xd0\x34\x00\x00\x20\x35\x00\x00"
		.ascii  "\x70\x35\x00\x00\xc0\x35\x00\x00"
		.ascii  "\x10\x36\x00\x00\x60\x36\x00\x00"
		.ascii  "\xb0\x36\x00\x00\x00\x37\x00\x00"
		.ascii  "\x50\x37\x00\x00\xa0\x37\x00\x00"
		.ascii  "\xf0\x37\x00\x00\x40\x38\x00\x00"
		.ascii  "\x90\x38\x00\x00\xe0\x38\x00\x00"
		.ascii  "\x30\x39\x00\x00\x80\x39\x00\x00"
		.ascii  "\xd0\x39\x00\x00\x20\x3a\x00\x00"
		.ascii  "\x70\x3a\x00\x00\xc0\x3a\x00\x00"
		.ascii  "\x10\x3b\x00\x00\x60\x3b\x00\x00"
		.ascii  "\xb0\x3b\x00\x00\x00\x3c\x00\x00"
		.ascii  "\x50\x3c\x00\x00\xa0\x3c\x00\x00"
		.ascii  "\xf0\x3c\x00\x00\x40\x3d\x00\x00"
		.ascii  "\x90\x3d\x00\x00\xe0\x3d\x00\x00"
		.ascii  "\x30\x3e\x00\x00"

_092140_data:
		.fill   0x4

_092144_data:
		.fill   0x4

_092148_data:
		.fill   0x8

_092150_data:
		.fill   0x4

_092154_data:
		.fill   0x4

_092158_data:
		.fill   0x4

_09215c_data:
		.fill   0x4

_092160_data:
		.ascii  "\x22\xc5\x00\x00"

_092164_data:
		.ascii  "\x71"

_092165_data:
		.ascii  "\xff\x00\x00\x22\xc5\x00\x00\x0c"
		.ascii  "\x58\x00\x00\x7f\x7f\x00\x00\x2e"
		.ascii  "\x1d\x01\x00\xd6\x81\x00\x00\xa0"
		.ascii  "\xbd\x00\x00\x04\x9f\x01\x00\xd3"
		.ascii  "\x69\x01\x00\x21\xcf\x00\x00\xd7"
		.ascii  "\x08\x03\x00\x32\xd5\x00\x00\x63"
		.ascii  "\x53\x00\x00\x09\xde\x03\x00\xd9"
		.ascii  "\x23\x00\x00\x87\x93\x00\x00\xe2"
		.ascii  "\x01\x04\x00\x33\x0a\x02\x00\x53"
		.ascii  "\xa4\x00\x00\x15\x0c\x06\x00\xc5"
		.ascii  "\xc6\x00\x00\x24\xcb\x00\x00\xda"
		.ascii  "\xd2\x06\x00\x2b\x5a\x00\x00\x03"
		.ascii  "\x93\x00\x00\x05\x2d\x07\x00\x09"
		.ascii  "\x68\x00\x00\x83\x09\x00\x00\x0e"
		.ascii  "\x95\x07\x00\xe0\x68\x00\x00\x4e"
		.ascii  "\xa1\x00\x00\xee\xfd\x07\x00\x46"
		.ascii  "\x68\x00\x00\xdd\x1e\x00\x00\x34"
		.ascii  "\x66\x08\x00\x35\x47\x00\x00\x30"
		.ascii  "\x85\x00\x00"

_0921f8_data:
		.fill   0x4

_0921fc_data:
		.ascii  "\x4f\x10\x00\x00"

_092200_data:
		.ascii  "\xe4"

_092201_data:
		.ascii  "\x68"

_092202_data:
		.ascii  "\x00\x00"

_092204_data:
		.ascii  "\x00\x00"

_092206_data:
		.ascii  "\x00\x00"

_092208_data:
		.ascii  "\x00\x00"

_09220a_data:
		.ascii  "\x00\x00"

_09220c_data:
		.ascii  "\x02\x01\x03\x00\x04\x07\x06\x05"
		.ascii  "\x01\x03\x02\x00\x04\x07\x06\x05"
		.ascii  "\x04\x01\x03\x02\x00\x07\x06\x05"

_092224_data:
		.ascii  "\x00\x20\x42\xc2\x42\x42\xc2\xc2"
		.ascii  "\x04\x0b"
		.fill   0x4
		.ascii  "\x03\x13\x00\x00\x4a\xca\x4a\x4a"
		.ascii  "\xca\xca"
		.fill   0x6
		.ascii  "\x0b\x00"
		.ascii   "                                "

_092264_data:
		.ascii  "\x28"

_092265_data:
		.ascii  "\x80"

_092266_data:
		.ascii  "\x03"

_092267_data:
		.ascii  "\x23\x04\x00\x03\x02\x00\x00\x02"
		.ascii  "\x42\x21\x80\x21\x42\x04\x00\x02"
		.ascii  "\x42\x20\x00\x02\x02\x08\x10\x47"
		.ascii  "\x26\x08\x00\x02\x02\x00\x11\x43"
		.ascii  "\x20\x28\x80\x03\x23\x18\x80\x01"
		.ascii  "\x02\x05\x00\x00\x4a\x28\x80\x02"
		.ascii  "\x03\x0b\x80\x22\x42\x28\x80\x02"
		.ascii  "\x03\x0b\x80\x22\x42\x04\x81\x02"
		.ascii  "\x02\x04\x81\x02\x02\x04\x80\x03"
		.ascii  "\x02\x01\x00\x20\x4a\x28\x91\x03"
		.ascii  "\x03\x20\x80\x02\x02\x00\x81\x03"
		.ascii  "\x02\x40\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x00\x02\x02\x00\x40\x02"
		.ascii  "\x02\x00\xc0\x02\x02\x00\x41\x02"
		.ascii  "\x02\x00\x40\x02\x02\x00\x00\x10"
		.ascii  "\x20\x01\x00\x00\x42\x08\x80\x02"
		.ascii  "\x02\x09\xb0\x22\x42\x00\x81\x03"
		.ascii  "\x02\x28\x80\x03\x03\x09\x90\x23"
		.ascii  "\x42\x00\x00\x03\x02\x01\x80\x03"
		.ascii  "\x42\x01\x80\x23\x42\x08\x90\x03"
		.ascii  "\x03\x08\x00\x02\x02\x00\x00\x12"
		.ascii  "\x02\x28\x80\x03\x03\x09\x80\x22"
		.ascii  "\x42\x08\x81\x02\x02\x98\x80\x03"
		.ascii  "\x03\x08\x10\x03\x22\x04\x80\x02"
		.ascii  "\x02\x00\x80\x02\x02\x98\xb0\x00"
		.ascii  "\x03\x09\x90\x23\x42\x19\x90\x23"
		.ascii  "\x42\x28\x90\x03\x02\x00\x80\x02"
		.ascii  "\x02\x20\x80\x02\x02\x28\x80\x03"
		.ascii  "\x03\x28\x80\x02\x03\x04\x02\x03"
		.ascii  "\x22\x05\x00\x23\x42\x28\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x09\x90\x23"
		.ascii  "\x42\x00\xb1\x02\x02\x00\x80\x00"
		.ascii  "\x42\x28\x80\x03\x03\x09\x80\x22"
		.ascii  "\x42\x04\x01\x02\x02\x00\xc0\x02"
		.ascii  "\x02\x08\x10\x03\x23\x28\x80\x03"
		.ascii  "\x03\x09\x80\x03\x43\x28\x00\x23"
		.ascii  "\x03\x09\xb0\x03\x42\x98\x80\x03"
		.ascii  "\x03\x05\x00\x20\x48\x00\x80\x03"
		.ascii  "\x02\x28\x00\x22\x03\x09\x90\x63"
		.ascii  "\x43\x09\x80\x23\x42\x00\x00\x03"
		.ascii  "\x02\x20\x88\x13\x03\x00\x00\x12"
		.ascii  "\x22\x09\x00\x20\x42\x00\x00\x02"
		.ascii  "\x02\x00\x00\x02\x03\x00\x81\x02"
		.ascii  "\x02\x00\x01\x02\x42\x00\x01\x02"
		.ascii  "\x42\x20\x80\x03\x02\x09\x80\x23"
		.ascii  "\x42\x09\x80\x23\x42\x09\x80\x23"
		.ascii  "\x42\x01\x80\x23\x42\x11\x00\x00"
		.ascii  "\x42\x00\x00\x02\x42\x00\x80\x02"
		.ascii  "\x03\x19\x80\x27\x43\x98\xb0\x03"
		.ascii  "\x03\x04\x00\x00\x42\x28\x80\x13"
		.ascii  "\x03\x08\x00\x02\x02\x09\x80\x23"
		.ascii  "\x42\x00\x80\x02\x02\x00\x80\x02"
		.ascii  "\x02\x08\x80\x02\x02\x08\x81\x03"
		.ascii  "\x02\x08\x00\x02\x02\x01\xb0\x12"
		.ascii  "\x42\x00\x00\x06\x32\x01\x00\x22"
		.ascii  "\x42\x00\x80\x02\x02\x09\x10\x23"
		.ascii  "\x43\x08\x80\x02\x02\x00\x80\x03"
		.ascii  "\x02\x01\xc0\x02\x42\x28\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x28\x80\x03"
		.ascii  "\x03\x09\x80\x23\x42\x38\x90\x03"
		.ascii  "\x03\x09\x80\x23\x42\x09\x90\x23"
		.ascii  "\x43\x28\x90\x0b\x23\x00\x00\x12"
		.ascii  "\x42\x00\x88\x03\x02\x08\x80\x03"
		.ascii  "\x02\x08\x80\x03\x02\x08\x80\x03"
		.ascii  "\x02\x08\x80\x07\x02\x05\x10\x63"
		.ascii  "\x42\x00\x80\x03\x02\x28\x80\x02"
		.ascii  "\x03\x00\x00\x03\x02\x00\x11\x43"
		.ascii  "\x20\x09\x80\x22\x42\x01\x00\x02"
		.ascii  "\x42\x00\x00\x12\x22\x00\x89\x03"
		.ascii  "\x02\x05\x00\x22\x42\x00\x81\x03"
		.ascii  "\x02\x00\x00\x13\x42\x00\x02\x12"
		.ascii  "\x22\x11\x00\x00\x4a\x00\x82\x01"
		.ascii  "\x42\x08\x80\x02\x02\x09\x00\x23"
		.ascii  "\x42\x28\x80\x03\x03\x00\x80\x03"
		.ascii  "\x42\x04\x00\x03\x02\xb8\x84\x02"
		.ascii  "\x03\x08\x80\x03\x22\x20\xc0\x03"
		.ascii  "\x03\x30\x80\x03\x03\x00\x89\x03"
		.ascii  "\x02\x00\x89\x03\x02\x08\x80\x03"
		.ascii  "\x03\x10\x00\x00\x02\x00\x00\x03"
		.ascii  "\x42\x00\x08\x03\x02\x00\x08\x03"
		.ascii  "\x02\x00\x00\x12\x42\x00\x01\x02"
		.ascii  "\x42\x00\x00\x02\x02\x00\x00\x12"
		.ascii  "\x02\x28\x80\x03\x23\x00\x00\x02"
		.ascii  "\x02\x00\x10\x43\x20\x00\xb0\x03"
		.ascii  "\x03\x00\xb8\x13\x03\x09\x80\x22"
		.ascii  "\x4a\x05\x00\x03\x42\x28\x80\x1b"
		.ascii  "\x03\x00\xb0\x23\x02\x28\x90\x02"
		.ascii  "\x03\x08\x00\x02\x02\x08\x00\x06"
		.ascii  "\x12\x00\x11\x47\x26\x08\x00\x06"
		.ascii  "\x12\x08\x00\x06\x12\x98\x80\x13"
		.ascii  "\x03\x20\x80\x03\x43\x08\x80\x03"
		.ascii  "\x03\x28\x80\x03\x03\x28\x90\x02"
		.ascii  "\x03\x08\x80\x03\x03\x01\x00\x22"
		.ascii  "\x42\x98\x84\x03\x03\x08\x00\x02"
		.ascii  "\x02\x08\x81\x03\x02\x19\xf0\x03"
		.ascii  "\x42\x08\x00\x02\x02\x19\x90\x22"
		.ascii  "\x43\x09\xb0\x02\x43\x09\xb0\x22"
		.ascii  "\x43\x28\x10\x03\x03\x09\xb0\x22"
		.ascii  "\x42\x05\x00\x02\x42\x98\x84\x13"
		.ascii  "\x03\x20\x80\x03\x03\x08\x84\x13"
		.ascii  "\x03\x08\x80\x13\x03\x05\x00\x03"
		.ascii  "\x42\x09\x00\x03\x42\x19\x80\x02"
		.ascii  "\x42\x19\x80\x02\x42\x01\x00\x02"
		.ascii  "\x42\x00\x80\x01\x00\x01\x00\x02"
		.ascii  "\x4a\x09\x90\x13\x42\x09\x90\x13"
		.ascii  "\x42\x01\x00\x43\x42\x28\x80\x02"
		.ascii  "\x03\x98\xb0\x03\x03\x00\x10\x83"
		.ascii  "\x42\x11\x80\x22\x4a\x00\x80\x02"
		.ascii  "\x02\x08\x80\x03\x03\x08\x90\x03"
		.ascii  "\x03\x10\x80\x02\x02\x10\xa0\x02"
		.ascii  "\x02\x01\x00\x02\x42\x01\x00\x22"
		.ascii  "\x42\x08\x80\x02\x03\x09\x90\x02"
		.ascii  "\x43\x28\x90\x02\x03\x28\x90\x02"
		.ascii  "\x03\x98\xb0\x00\x02\x00\x80\x03"
		.ascii  "\x02\x08\x00\x02\x02\x08\x00\x02"
		.ascii  "\x02\x08\xa0\x02\x43\x08\xa0\x02"
		.ascii  "\x43\x09\x80\x22\x42\x08\x00\x02"
		.ascii  "\x42\x08\x00\x03\x02\x00\x00\x02"
		.ascii  "\x02\x00\xc0\x03\x02\x05\x00\x00"
		.ascii  "\x42\x28\x00\x23\x02\x08\x00\x06"
		.ascii  "\x12\x08\x00\x06\x12\x08\x00\x06"
		.ascii  "\x12\x08\xc0\x06\x02\x19\x90\x22"
		.ascii  "\x42\x00\x80\x02\x02\x00\x80\x03"
		.ascii  "\x42\x00\x80\x03\x02\x09\x90\x02"
		.ascii  "\x42\x04\xa0\x02\x42\x08\x00\x02"
		.ascii  "\x02\x04\x00\x02\x42\x04\x00\x02"
		.ascii  "\x42\x04\x00\x02\x42\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02\x01\xb0\x03"
		.ascii  "\x42\x00\xb0\x03\x02\x00\x88\x03"
		.ascii  "\x02\x00\x80\x03\x02\x00\x80\x03"
		.ascii  "\x02\x00\x80\x03\x02"

_09267c_data:
		.ascii  "\x00\x00"

_09267e_data:
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x4
		.ascii  "\xb0\xff"
		.fill   0x6
		.ascii  "\xfa\x00\x00\x00\xfa\x00\x00\x00"
		.ascii  "\xc4\xff\xc4\xff"
		.fill   0x4
		.ascii  "\x3c"
		.fill   0xb
		.ascii  "\xc4\xff"
		.fill   0x8
		.ascii  "\xce\xff"
		.fill   0xc
		.ascii  "\xce\xff"
		.fill   0x6
		.ascii  "\xce\xff"
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x12
		.ascii  "\xce\xff"
		.fill   0x1c
		.ascii  "\x3c\x00\x00\x00\x96"
		.fill   0xd
		.ascii  "\xce\xff"
		.fill   0xc
		.ascii  "\xce\xff"
		.fill   0x8
		.ascii  "\xc2\x01\xce\xff\x00\x00\x64\x00"
		.ascii  "\x00\x00\xce\xff\xc8"
		.fill   0xf
		.ascii  "\x64"
		.fill   0x1d
		.ascii  "\x96\x00\xce\xff"
		.fill   0x12
		.ascii  "\xb0\xff"
		.fill   0xc
		.ascii  "\xce\xff\xce\xff"
		.fill   0x8
		.ascii  "\xc8"
		.fill   0x1d
		.ascii  "\xce\xff\xce\xff\xce\xff"
		.fill   0x4
		.ascii  "\xb0\xff"
		.fill   0x8
		.ascii  "\xc8\x00\x28\x00\xc8"
		.fill   0x7
		.ascii  "\xce\xff\xce\xff"
		.fill   0x8
		.ascii  "\xc8"
		.fill   0xf
		.ascii  "\x64"
		.fill   0xf
		.ascii  "\x28"
		.fill   0xb
		.ascii  "\xc2\x01"
		.fill   0xa
		.ascii  "\x28"
		.fill   0x19
		.ascii  "\xc8\x00\xc8\x00\x00\x00\xce\xff"
		.fill   0x16
		.ascii  "\xce\xff\xce\xff\xce\xff\x00\x00"
		.ascii  "\x64"
		.fill   0x23

_09288a_data:
		.fill   0x4c
		.ascii  "\xce\xff"
		.fill   0x6
		.ascii  "\xce\xff"
		.fill   0x12
		.ascii  "\x2c\x01"
		.fill   0xa
		.ascii  "\xce\xff"
		.fill   0x2c
		.ascii  "\x78\x00\xce\xff\x00\x00\x96"
		.fill   0x5
		.ascii  "\xc8\x00\xc8"
		.fill   0xb
		.ascii  "\x5e\x01\xce\xff\x00\x00\x2c\x01"
		.fill   0x4
		.ascii  "\xc8\x00\x8c"
		.fill   0x29
		.ascii  "\x32\x00\x00\x00\xce\xff"
		.fill   0x1e
		.ascii  "\x78\x00\xce\xff\xce\xff"
		.fill   0x6
		.ascii  "\x64\x00\x2c\x01\x00\x00\xc8"
		.fill   0x5
		.ascii  "\x78"
		.fill   0xd
		.ascii  "\x96\x00\x96\x00\x00\x00\xce\xff"
		.ascii  "\xce\xff"
		.fill   0x8
		.ascii  "\x78\x00\x78"
		.fill   0x5
		.ascii  "\x78\x00\xc8\x00\xc8"
		.fill   0x7
		.ascii  "\x14\x00\x14"
		.fill   0x9
		.ascii  "\xc8"
		.fill   0x1b
		.ascii  "\x96\x00\x00\x00\x32"
		.fill   0xb
		.ascii  "\x5e\x01"
		.fill   0xa
		.ascii  "\x96"
		.fill   0xb
		.ascii  "\x32\x00\x64\x00\x96"
		.fill   0x9
		.ascii  "\xc8\x00\xc8"
		.fill   0x1d
		.ascii  "\x14\x00\x14"
		.fill   0xd
		.ascii  "\x32"
		.fill   0x19

_092a96_data:
		.ascii  "\x54\x00\x2c\x00\x0d\x11\x04\xff"
		.ascii  "\x03\x00\x04\x00\x03\x0d\x03\x00"
		.ascii  "\x0c\x00\x0b\x00\x10\x10\x03\x04"
		.ascii  "\x07\x00\x06\x00\x1a\x19\x01\xff"
		.ascii  "\x02\x00\x01\x00\x08\x0d\x03\x02"
		.ascii  "\x4c\x00\x3f\x00\x0a\x16\x01\xff"
		.ascii  "\x05\x00\x08\x00\x0c\x08\x03\x00"
		.ascii  "\x06\x00\xf6\xff\x0c\x23\x03\x02"
		.ascii  "\x01\x00\x07\x00\x15\x05\x03\x04"
		.ascii  "\x47\x00\x31\x00\x12\x06\x01\xff"
		.ascii  "\x06\x00\xf6\xff\x0c\x23\x03\x02"
		.ascii  "\x01\x00\x07\x00\x15\x05\x03\x04"
		.ascii  "\x47\x00\x31\x00\x12\x06\x01\xff"
		.ascii  "\xeb\xff\xed\xff\x40\x40\x03\x00"
		.ascii  "\x69\x00\xa8\x00\x30\x3c\x01\xff"
		.ascii  "\x61\x00\x81\x00\x02\x02\x01\xff"
		.ascii  "\x08\x00\x06\x00\x14\x14\x03\x00"
		.ascii  "\x06\x00\x05\x00\x0a\x0b\x03\x00"
		.ascii  "\x4a\x00\x49\x00\x0d\x0e\x01\xff"
		.ascii  "\x09\x00\x0a\x00\x10\x10\x03\x00"
		.ascii  "\x0e\x00\x01\x00\x0e\x2c\x03\x00"
		.ascii  "\x09\x00\x0a\x00\x10\x10\x03\x00"
		.ascii  "\x08\x00\x06\x00\x14\x14\x03\x00"
		.ascii  "\x40\x00\x30\x00\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x0b\x00\x0a\x00"
		.ascii  "\x10\x10\x03\x00\x10\x00\x1a\x00"
		.ascii  "\x30\x26\x03\x00\x0b\x00\x0b\x00"
		.ascii  "\x10\x10\x03\x00\x01\x00\xf9\xff"
		.ascii  "\x0c\x22\x03\x02\x08\x00\x06\x00"
		.ascii  "\x14\x14\x03\x00\x01\x00\xf8\xff"
		.ascii  "\x0d\x1e\x03\x00\x06\x00\x03\x00"
		.ascii  "\x0b\x02\x03\x00\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\x3f\x00\x4d\x00"
		.ascii  "\x15\x0a\x04\xff\x08\x00\x05\x00"
		.ascii  "\x12\x17\x03\x03\x07\x00\x0e\x00"
		.ascii  "\x06\x07\x03\x00\x00\x00\x02\x00"
		.ascii  "\xd0\x06\x03\x03\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x47\x00\x38\x00"
		.ascii  "\x13\x12\x01\xff\x47\x00\x38\x00"
		.ascii  "\x13\x12\x01\xff\x4b\x00\x3a\x00"
		.ascii  "\x0c\x0c\x01\xff\x06\x00\x04\x00"
		.ascii  "\x18\x19\x06\x04\x02\x00\x04\x00"
		.ascii  "\x12\x0e\x03\x05\x08\x00\x08\x00"
		.ascii  "\x31\x33\x03\x06\x12\x00\x09\x00"
		.ascii  "\x10\x10\x03\x01\x13\x00\x02\x00"
		.ascii  "\x0e\x44\x03\x03\xfd\xff\xfe\xff"
		.ascii  "\x0b\x07\x03\x0a\x0a\x00\x06\x00"
		.ascii  "\x10\x13\x03\x00\x0b\x00\x07\x00"
		.ascii  "\x0e\x11\x03\x01\x0a\x00\x08\x00"
		.ascii  "\x11\x10\x03\x02\x18\x00\x18\x00"
		.ascii  "\x36\x35\x03\x04\x4c\x00\x3c\x00"
		.ascii  "\x08\x09\x01\xff\x15\x00\x14\x00"
		.ascii  "\x38\x38\x03\x00\x3f\x00\x28\x00"
		.ascii  "\x2b\x2d\x01\xff\x7b\x00\x82\x00"
		.ascii  "\x2b\x2d\x01\xff\xa8\x00\x8c\x00"
		.ascii  "\x20\x30\x01\xff\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x02\x00\xf7\xff"
		.ascii  "\x08\x1c\x03\x02\x0a\x00\x06\x00"
		.ascii  "\x13\x0b\x03\x00\x0a\x00\x06\x00"
		.ascii  "\x13\x0b\x03\x01\x02\x00\x14\x00"
		.ascii  "\x20\x25\x03\x02\x0b\x00\x0d\x00"
		.ascii  "\x3b\x0c\x03\x03\x12\x00\x0e\x00"
		.ascii  "\x29\x29\x03\x0e\x12\x00\x0e\x00"
		.ascii  "\x29\x29\x03\x0f"
		.fill   0x4
		.ascii  "\x13\x20\x06\x0a\x04\x00\x00\x00"
		.ascii  "\x13\x20\x06\x0b\x4a\x00\x49\x00"
		.ascii  "\x0d\x0e\x01\xff\x46\x00\x44\x00"
		.ascii  "\x0e\x0c\x01\xff\x0f\x00\x03\x00"
		.ascii  "\x0c\x2a\x03\x00\x6d\x00\x33\x00"
		.ascii  "\x36\x38\x01\xff\x6f\x00\x98\x00"
		.ascii  "\x33\x17\x01\xff\x4f\x00\x53\x00"
		.ascii  "\x74\x26\x01\xff\x32\x00\x72\x00"
		.ascii  "\x34\x0f\x01\xff\x47\x00\x8c\x00"
		.ascii  "\x36\x15\x01\xff\x47\x00\x8c\x00"
		.ascii  "\x36\x15\x01\x00\x07\x00\x06\x00"
		.ascii  "\x1a\x19\x01\xff\x44\x00\x35\x00"
		.ascii  "\x21\x22\x01\xff\x04\x00\x01\x00"
		.ascii  "\x10\x1c\x03\x02\x09\x00\x09\x00"
		.ascii  "\x24\x09\x03\x00\x40\x00\x30\x00"
		.ascii  "\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x03\x00\x03\x00"
		.ascii  "\x0c\x0c\x03\x04\x07\x00\x04\x00"
		.ascii  "\x0d\x0b\x03\x06\x04\x00\x03\x00"
		.ascii  "\x11\x11\x03\x07\x0c\x00\x0b\x00"
		.ascii  "\x1f\x1c\x03\x0b\x0f\x00\x14\x00"
		.ascii  "\x16\x2f\x03\x0c\x0d\x00\xfa\xff"
		.ascii  "\x35\x21\x03\x10\x06\x00\x07\x00"
		.ascii  "\x1e\x0e\x03\x11\x47\x00\x31\x00"
		.ascii  "\x12\x06\x01\xff"
		.fill   0x4
		.ascii  "\x4b\x50\x03\x02\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x07\x00\x05\x00"
		.ascii  "\x13\x13\x01\xff\x02\x00\x01\x00"
		.ascii  "\x08\x0d\x03\x02\x4c\x00\x3f\x00"
		.ascii  "\x0a\x16\x01\xff\x07\x00\x06\x00"
		.ascii  "\x1a\x19\x01\xff\x00\x00\x02\x00"
		.ascii  "\xd0\x06\x03\x03\x04\x00\x04\x00"
		.ascii  "\x10\x10\x03\x00\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x02\x00\xff\xff"
		.ascii  "\x02\x1b\x03\x01\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x47\x00\x0b\x00"
		.ascii  "\x0e\x6a\x04\xff\x04\x00\xfa\xff"
		.ascii  "\x02\x16\x03\x03\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x11\x00\x0d\x00"
		.ascii  "\x3a\x4c\x03\x02\x0f\x00\x0e\x00"
		.ascii  "\x17\x3b\x03\x05\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x4f\x00\x34\x00"
		.ascii  "\x06\x13\x01\xff\x12\x00\x07\x00"
		.ascii  "\x20\x1d\x03\x02\x07\x00\x00\x00"
		.ascii  "\x1a\x17\x03\x05\x09\x00\x0b\x00"
		.ascii  "\x21\x0d\x01\xff\x09\x00\x0b\x00"
		.ascii  "\x21\x0d\x01\xff\xfa\xff\x7f\xff"
		.ascii  "\x16\x8b\x03\x03\x10\x00\x04\x00"
		.ascii  "\x08\x08\x03\x00\xf8\xff\x04\x00"
		.ascii  "\x08\x08\x03\x01\x00\x00\x04\x00"
		.ascii  "\x08\x08\x03\x02\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x04\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x05\x04\x00\x0c\x00"
		.ascii  "\x17\x06\x03\x00\x07\x00\x0c\x00"
		.ascii  "\x18\x08\x03\x01\x04\x00\x0c\x00"
		.ascii  "\x17\x06\x03\x00\x07\x00\x0c\x00"
		.ascii  "\x18\x08\x03\x01\x0e\x00\x05\x00"
		.ascii  "\x5d\x0c\x03\x08\x03\x00\x02\x00"
		.ascii  "\x16\x05\x03\x01\x0c\x00\xd8\xff"
		.ascii  "\x3c\x99\x01\xff\x48\x00\xd8\xff"
		.ascii  "\x3c\x99\x01\xff\x69\x00\xa8\x00"
		.ascii  "\x30\x3c\x01\xff\xa8\x00\x8c\x00"
		.ascii  "\x20\x30\x01\xff\x0a\x00\x06\x00"
		.ascii  "\x15\x10\x03\x00\x05\x00\x04\x00"
		.ascii  "\x0c\x0c\x03\x03\x06\x00\x04\x00"
		.ascii  "\x0c\x0c\x03\x06\x0b\x00\x07\x00"
		.ascii  "\x17\x12\x03\x08\x07\x00\x02\x00"
		.ascii  "\x10\x09\x03\x02\x0c\x00\x07\x00"
		.ascii  "\x2f\x0f\x03\x04\x0f\x00\x07\x00"
		.ascii  "\x38\x11\x03\x05\x04\x00\x02\x00"
		.ascii  "\x06\x32\x03\x07\x0a\x00\x16\x00"
		.ascii  "\x38\x07\x03\x08\x16\x00\x12\x00"
		.ascii  "\x16\x32\x03\x06\x10\x00\x02\x00"
		.ascii  "\x2b\x1e\x03\x01\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\xfb\xff\xf4\xff"
		.ascii  "\x1b\x2a\x03\x05\x05\x00\x05\x00"
		.ascii  "\x11\x10\x03\x06\x40\x00\x30\x00"
		.ascii  "\x20\x20\x01\xff"
		.fill   0x4
		.ascii  "\x10\x10\x03\x05\x11\x00\x01\x00"
		.ascii  "\x09\x09\x03\x07\x18\x00\x40\x00"
		.ascii  "\x70\x60\x01\xff\x02\x00\x02\x00"
		.ascii  "\x02\x28\x03\x01\x01\x00\x01\x00"
		.ascii  "\x1f\x02\x03\x01\xf3\xff\xf3\xff"
		.ascii  "\x30\x2b\x03\x03\x05\x00\x02\x00"
		.ascii  "\x1e\x11\x03\x07\xf3\xff\xf3\xff"
		.ascii  "\x30\x2b\x03\x03\x05\x00\x02\x00"
		.ascii  "\x1e\x11\x03\x07\x0d\x00\x04\x00"
		.ascii  "\x07\x08\x03\x08\x00\x00\x50\x00"
		.ascii  "\x80\x01\x01\xff\x40\x00\x00\x00"
		.ascii  "\x20\x80\x01\xff\x06\x00\x05\x00"
		.ascii  "\x07\x11\x03\x01\x07\x00\xf8\xff"
		.ascii  "\x09\x22\x03\x03\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x47\x00\x21\x00"
		.ascii  "\x0e\x5f\x04\xff\x04\x00\x04\x00"
		.ascii  "\x02\x13\x03\x02\x54\x00\x2a\x00"
		.ascii  "\x0d\x62\x04\xff\x05\x00\x01\x00"
		.ascii  "\x02\x13\x03\x00\x10\x00\x04\x00"
		.ascii  "\x08\x08\x03\x00\xf8\xff\x04\x00"
		.ascii  "\x08\x08\x03\x01\x00\x00\x04\x00"
		.ascii  "\x08\x08\x03\x02\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x04\x04\x00\x04\x00"
		.ascii  "\x08\x08\x03\x05\x0b\x00\xba\x00"
		.ascii  "\x38\x22\x01\xff\x10\x00\xe8\xff"
		.ascii  "\x02\x51\x03"
		.fill   0x79

_0930d6_data:
		.fill   0xd
		.ascii  "\x10\x02\x08\x03\x08\x04\x10\x06"
		.ascii  "\x08\x00\x00\x07\x10\x09\x08\x0a"
		.ascii  "\x10\x0c\x08"
		.fill   0x1c
		.ascii  "\x0d\x08\x00\x00\x0e\x08\x0f\x08"
		.fill   0x4
		.ascii  "\x10\x08\x11\x08"
		.fill   0x4
		.ascii  "\x12\x08\x13\x08\x14\x08"
		.fill   0x4
		.ascii  "\x15\x08\x00\x00\x16\x08"
		.fill   0x4
		.ascii  "\x17\x20\x1b\x08\x1c\x08\x1d\x08"
		.fill   0xe
		.ascii  "\x1e\x08"
		.fill   0xe
		.ascii  "\x1f\x08"
		.fill   0x4
		.ascii  "\x20\x08\x21\x08\x22\x10"
		.fill   0x4
		.ascii  "\x24\x10\x26\x08"
		.fill   0x4
		.ascii  "\x27\x08"
		.fill   0x10
		.ascii  "\x28\x08\x29\x08\x2a\x08"
		.fill   0x4
		.ascii  "\x2b\x08\x2c\x18\x00\x00\x2f\x18"
		.fill   0x4
		.ascii  "\x32\x20\x36\x08"
		.fill   0x8
		.ascii  "\x37\x08\x00\x00\x38\x08\x00\x00"
		.ascii  "\x39\x08\x3a\x08"
		.fill   0x6
		.ascii  "\x3b\x08\x3c\x08\x3d\x08\x00\x00"
		.ascii  "\x3e\x40\x00\x00\x46\x08\x47\x08"
		.ascii  "\x48\x08\x00\x00\x49\x08\x4a\x18"
		.ascii  "\x4d\x10"
		.fill   0xa
		.ascii  "\x4f\x08"
		.fill   0x4
		.ascii  "\x50\x08"
		.fill   0x4
		.ascii  "\x51\x08"
		.fill   0x8
		.ascii  "\x52\x08\x00\x00\x53\x20"
		.fill   0x4
		.ascii  "\x57\x38\x5e\x08\x5f\x08"
		.fill   0x6
		.ascii  "\x60\x08"
		.fill   0x8
		.ascii  "\x61\x08"
		.fill   0x6
		.ascii  "\x62\x10\x00\x00\x64\x08\x65\x08"
		.ascii  "\x00\x00\x66\x08"
		.fill   0x6
		.ascii  "\x67\x10\x69\x08\x6a\x10\x00\x00"
		.ascii  "\x6c\x10\x6e\x10\x70\x10\x00\x00"
		.ascii  "\x72\x08\x73\x10\x75\x10\x77\x08"
		.ascii  "\x00\x00\x78\x10\x7a\x08\x7b\x08"
		.ascii  "\x00\x00\x7c\x08\x7d\x28\x82\x10"
		.ascii  "\x84\x10"
		.fill   0x10
		.ascii  "\x86\x08"
		.fill   0x4
		.ascii  "\x87\x08"
		.fill   0x4
		.ascii  "\x88\x08\x89\x08\x00\x00\x8a\x08"
		.ascii  "\x8b\x08"
		.fill   0x8
		.ascii  "\x8c\x20"
		.fill   0x8
		.ascii  "\x90\x30\x96\x08\x97\x10\x99\x10"
		.ascii  "\x9b\x20\x00\x00\x9f\x08\xa0\x08"
		.ascii  "\xa1\x10\xa3\x10\xa5\x08\xa6\x08"
		.ascii  "\x00\x00\xa7\x08"
		.fill   0x4
		.ascii  "\xa8\x10\xaa\x10\xac\x10\xae\x10"
		.ascii  "\xb0\x10\xb2\x28"
		.fill   0x6
		.ascii  "\xb7\x08\x00\x00\xb8\x08"
		.fill   0x18

_0932e4_data:
		.long   _02f088_func

_0932e8_data:
		.long   _0605b8_func

_0932ec_data:
		.long   _02e7a4_func

_0932f0_data:
		.long   _0606a4_func
		.long   _05f080_func
		.long   _02f088_func
		.long   _061e1c_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05f904_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _028c34_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _028dfc_func
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _05f2dc_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _0310ac_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _031020_func
		.long   _0310ac_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _06043c_func
		.long   _02e7a4_func
		.long   _060538_func
		.long   _05f080_func
		.long   _064f28_func
		.long   _06514c_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _060324_func
		.long   _02e7a4_func
		.long   _06038c_func
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _060324_func
		.long   _02e7a4_func
		.long   _06038c_func
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0600bc_func
		.long   _0602b8_func
		.long   _02e7a4_func
		.long   _06031c_func
		.long   _05f080_func
		.long   _060b00_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _060ca0_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _03eee0_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _03f888_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0794cc_func
		.long   _079e20_func
		.long   _02e7a4_func
		.long   _079f8c_func
		.long   _05f080_func
		.long   _0789e4_func
		.long   _0790cc_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _05f2f8_func
		.long   _05f3cc_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05f984_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0787d8_func
		.long   _078980_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05fba4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _079598_func
		.long   _079e20_func
		.long   _02e7a4_func
		.long   _079f8c_func
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _021208_func
		.long   _021cf0_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0789e4_func
		.long   _0790cc_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _052b6c_func
		.long   _052e94_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _05319c_func
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _06004c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _0600a8_func
		.long   _05f080_func
		.long   _078d00_func
		.long   _079ee8_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _060874_func
		.long   _05f080_func
		.long   _0285d0_func
		.long   _028624_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0285c0_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02abbc_func
		.long   _02e7a4_func
		.long   _02aca4_func
		.long   _05f080_func
		.long   _02f088_func
		.long   _02abbc_func
		.long   _02e7a4_func
		.long   _02aca4_func
		.long   _05f080_func
		.long   _030e30_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _01c874_func
		.long   _01ca00_func
		.long   _02e7a4_func
		.long   _01cac0_func
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0789e4_func
		.long   _0790cc_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _07a0b0_func
		.long   _07a34c_func
		.long   _02e7a4_func
		.long   _07a3bc_func
		.long   _05f080_func
		.long   _0717bc_func
		.long   _071d7c_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _05b6f4_func
		.long   _05ba20_func
		.long   _02e7a4_func
		.long   _05b6c4_func
		.long   _05f080_func
		.long   _05bae8_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0722c4_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _03c998_func
		.long   _03d178_func
		.long   _02e7a4_func
		.long   _03d294_func
		.long   _05f080_func
		.long   _03d330_func
		.long   _02d288_jump
		.long   _077020_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _078d80_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _031930_func
		.long   _02d288_jump
		.long   _032168_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05fa88_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f144_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02fa0c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _060934_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _060a30_func
		.long   _05f080_func
		.long   _02f088_func
		.long   _071d7c_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _071d7c_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0717bc_func
		.long   _071d7c_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0717bc_func
		.long   _071d7c_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _064804_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05f814_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _01fe2c_func
		.long   _01fd90_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _020998_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0505c0_func
		.long   _050844_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _031198_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _05117c_func
		.long   _051588_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _05f774_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _064b60_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _040080_func
		.long   _02d288_jump
		.long   _040414_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _079db0_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _079c90_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f624_func
		.long   _02d288_jump
		.long   _02f694_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _022cac_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02a370_func
		.long   _02ac2c_func
		.long   _02e7a4_func
		.long   _02acd0_func
		.long   _05f080_func
		.long   _02a55c_func
		.long   _02ac2c_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02a5f8_func
		.long   _02ac2c_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _077020_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _01f8ec_func
		.long   _01fcbc_func
		.long   _02e7a4_func
		.long   _01fc8c_func
		.long   _05f080_func
		.long   _022b4c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0787d8_func
		.long   _078980_func
		.long   _02e7a4_func
		.long   _079fcc_func
		.long   _05f080_func
		.long   _02316c_func
		.long   _02319c_func
		.long   _02e7a4_func
		.long   _023240_func
		.long   _022e5c_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05ff90_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _05f698_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _05f66c_func
		.long   _05f684_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _03114c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _064c58_func
		.long   _064de0_func
		.long   _02e7a4_func
		.long   _06519c_func
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05f948_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _031020_func
		.long   _0310ac_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _05fb48_func
		.long   _02d288_jump
		.long   _05fb68_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02ed2c_func
		.long   _02eda8_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05a18c_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _05f6b0_func
		.long   _05f6e8_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _030bc0_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _028c34_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f144_func
		.long   _02f3a8_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02fbd4_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _052f80_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _053130_func
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05f7b8_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _075c14_func
		.long   _075f14_func
		.long   _02e7a4_func
		.long   _075e8c_func
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _060738_func
		.long   _0607cc_func
		.long   _02e7a4_func
		.long   _060828_func
		.long   _05f080_func
		.long   _038ba0_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _038ee0_func
		.long   _05f080_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02fc90_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02fec0_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05f9b4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _07a4c8_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _07a814_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _05fb28_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _05f4f4_func
		.long   _06043c_func
		.long   _02e7a4_func
		.long   _060538_func
		.long   _05f080_func
		.long   _02f088_func
		.long   _07a848_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _031020_func
		.long   _0310ac_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _031cb0_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _031cb0_func
		.long   _02d288_jump
		.long   _032168_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _078a94_func
		.long   _079ee8_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _030c38_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _060da0_func
		.long   _061070_func
		.long   _02e7a4_func
		.long   _0611ac_func
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _0310ac_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0302bc_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0302bc_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _072e68_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _0733a4_func
		.long   _05f080_func
		.long   _0717bc_func
		.long   _071d7c_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0733b4_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _073554_func
		.long   _05f080_func
		.long   _060da0_func
		.long   _061070_func
		.long   _02e7a4_func
		.long   _0611ac_func
		.long   _05f080_func
		.long   _02fc90_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0637f0_func
		.long   _063ca4_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02ed2c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _063570_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0509a4_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _050a60_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _01bdb0_func
		.long   _01c1d8_func
		.long   _02e7a4_func
		.long   _01c2f0_func
		.long   _05f080_func
		.long   _01c3ac_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0286ac_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _021d34_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _02271c_func
		.long   _05f080_func
		.long   _02284c_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _022a70_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _030338_func
		.long   _02d288_jump
		.long   _030614_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _030614_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _06dc64_unknown
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _030628_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _03fd58_func
		.long   _02d288_jump
		.long   _03fd84_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _03fd58_func
		.long   _02d288_jump
		.long   _03fd84_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _032c2c_func
		.long   _033060_func
		.long   _02e7a4_func
		.long   _0330a0_func
		.long   _05f080_func
		.long   _0505c0_func
		.long   _050844_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _060a94_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0330f8_func
		.long   _02d288_jump
		.long   _0333b0_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _060890_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0515cc_func
		.long   _051754_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _03dd70_func
		.long   _03ded4_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0308d8_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _030a90_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _030b28_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _03dfc8_func
		.long   _03e21c_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _060da0_func
		.long   _061070_func
		.long   _02e7a4_func
		.long   _0611ac_func
		.long   _05f080_func
		.long   _060da0_func
		.long   _061070_func
		.long   _02e7a4_func
		.long   _0611ac_func
		.long   _05f080_func
		.long   _052b6c_func
		.long   _052e94_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _05f614_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _03e2dc_func
		.long   _03e7a8_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _03e2dc_func
		.long   _03e7a8_func
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _03e98c_func
		.long   _02d288_jump
		.long   _03eb98_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _03357c_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _03c998_func
		.long   _03d178_func
		.long   _02e7a4_func
		.long   _03d294_func
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0302bc_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0302bc_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0509a4_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _033a54_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _060ca8_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _0282f8_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _028258_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func
		.long   _02f088_func
		.long   _02d288_jump
		.long   _02e7a4_func
		.long   _055fec_unknown
		.long   _05f080_func

_09475c_data:
		.ascii  "\x00\x16\x12\x0d\x0d\x0c"

_094762_data:
		.ascii  "\x04\x00\x00\x00\x03\x00\x07\x00"
		.ascii  "\x0a\x00\x0d\x00\x10\x00\x13\x00"
		.ascii  "\x16\x00\x19\x00\x1c\x00\x1f\x00"
		.ascii  "\x22\x00\x25\x00\x28\x00\x2a\x00"
		.ascii  "\x2d\x00"

_094784_data:
		.ascii  "\x08\x08\x08\x08\x08\x08\x08\x08"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x06\x06\x06\x06\x06\x06\x06"
		.ascii  "\x06\x06\x06\x05\x05\x05\x05\x05"
		.ascii  "\x05\x05\x05\x05\x05\x05\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x04\x04"
		.ascii  "\x04\x04\x04\x04\x04\x04\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x02\x02\x02"
		.ascii  "\x02\x02\x02\x02\x02\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"

_094884_data:
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xc4\xff\xe6\xff"
		.ascii  "\x08\x00\x20\x00\x4b\x00\x20\x00"
		.ascii  "\x08\x00\xe6\xff\xc4\xff"

_0948aa_data:
		.ascii  "\xff\xff"
		.fill   0x14
		.ascii  "\x20\x00\x20\x00\x30\x00\x30\x00"
		.ascii  "\x30\x00\x30\x00\x30\x00\x20\x00"
		.ascii  "\x20\x00"

_0948d2_data:
		.ascii  "\x00\x00"

_0948d4_data:
		.fill   0x14
		.ascii  "\x20\x00\x20\x00\x30\x00\x30\x00"
		.ascii  "\x3c\x00\x30\x00\x30\x00\x20\x00"
		.ascii  "\x20\x00\x00\x00"

_0948fc_data:
		.ascii  "\x00\x00\x57\x03\x39\x03\x00\x00"
		.ascii  "\xff\xfc\x1a\xfd\xff\xff\xb2\x02"
		.ascii  "\x9a\x02\x00\x00\x93\xfd\xa9\xfd"
		.ascii  "\xff\xff\x2d\x02\x19\x02\x00\x00"
		.ascii  "\x0b\xfe\x1c\xfe\xff\xff\xc1\x01"
		.ascii  "\xb2\x01\x00\x00\x6b\xfe\x79\xfe"
		.ascii  "\xff\xff\x6b\x01\x5e\x01\x00\x00"
		.ascii  "\xb9\xfe\xc5\xfe\xff\xff\x24\x01"
		.ascii  "\x1a\x01\x00\x00\xf8\xfe\x01\xff"
		.ascii  "\xff\xff\xec\x00\xe4\x00\x00\x00"
		.ascii  "\x2b\xff\x32\xff\xff\xff\xbe\x00"
		.ascii  "\xb8\x00\x00\x00\x54\xff\x5a\xff"
		.ascii  "\xff\xff\x99\x00\x94\x00\x00\x00"
		.ascii  "\x75\xff\x7a\xff\xff\xff\x7c\x00"
		.ascii  "\x78\x00\x00\x00\x90\xff\x94\xff"
		.ascii  "\xff\xff\x50\x00\x80\x7f"

_09497a_data:
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"
		.ascii  "\x03\x00\x00\x00\xfd\xff\x00\x00"

_0949da_data:
		.ascii  "\xff\x00\x00\x00\xfd\xff\xfa\xff"
		.ascii  "\xf8\xff\xf7\xff\xf6\xff\xf7\xff"
		.ascii  "\xf9\xff\xfb\xff\xfe\xff\x02\x00"
		.ascii  "\x06\x00\x07\x00"

_0949f6_data:
		.ascii  "\x04\x00\x09\x00\x00\x00\x07\x00"
		.ascii  "\x05\x00"

_094a00_data:
		.ascii  "\x80"
		.string "~}|zyxwutsrponmljihgfecba`_^]\\[ZYXWVUTSRQPONNMLKJIIHGFFEDDCBAA@@"

_094a42_data:
		.ascii  "\x00\x00"

_094a44_data:
		.ascii  "\x1d\x00"

_094a46_data:
		.ascii  "\x08\x01"

_094a48_data:
		.ascii  "\x12"

_094a49_data:
		.ascii  "\x00"

_094a4a_data:
		.ascii  "\x00"

_094a4b_data:
		.ascii  "\x01"

_094a4c_data:
		.ascii  "\x01"

_094a4d_data:
		.ascii  "\x00"

_094a4e_data:
		.ascii  "\x01"

_094a4f_data:
		.ascii  "\x01"

_094a50_data:
		.ascii  "\x02\x00\x00\x00"

_094a54_data:
		.long   _0bfa14_data
		.ascii  "\x64\x00\xfe\x00\x02\x01\x00\x04"

_094a60_data:
		.ascii  "\x00\x00\x01\x05"
		.fill   0x4
		.long   _0bfa14_data
		.ascii  "\x5a\x00\xd4\x00\x02\x01\x03\x02"

_094a74_data:
		.ascii  "\x00\x00\x01\x09\x02\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\x2f\x00\xc8\x00\x03\x03\x03\x02"

_094a88_data:
		.ascii  "\x00\x00\x01\x0c\x01\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xb4\x00\xd7\x00\x05\x13\x01\x04"

_094a9c_data:
		.ascii  "\x00\x00\x02\x01\x02\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xb9\x00\xaf\x00\x08\x04\x06\x08"

_094ab0_data:
		.ascii  "\x00\x00\x02\x07"
		.fill   0x4
		.long   _0bfa14_data
		.ascii  "\x87\x00\xa0\x00\x14\x06\x07\x05"

_094ac4_data:
		.ascii  "\x00\x00\x02\x0c\x02\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\x5b\x00\x8f\x00\x07\x07\x07\x06"

_094ad8_data:
		.ascii  "\x00\x00\x02\x0e\x03\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xd4\x00\x85\x00\x09\x05\x05\x08"

_094aec_data:
		.ascii  "\x00\x00\x03\x01\x01\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xd1\x00\x5c\x00\x15\x08\x09\x0a"

_094b00_data:
		.ascii  "\x00\x00\x03\x03"
		.fill   0x4
		.long   _0bfa14_data
		.ascii  "\x01\x01\x50\x00\x0a\x0b\x09\x0a"

_094b14_data:
		.ascii  "\x00\x00\x03\x06\x01\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xea\x00\xeb\x00\x0a\x0b\x0b\x0c"

_094b28_data:
		.ascii  "\x00\x00\x04\x01\x01\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\x16\x01\xbe\x00\x0d\x0b\x0b\x0c"

_094b3c_data:
		.ascii  "\x00\x00\x04\x05\x05\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\x22\x01\x91\x00\x16\x0c\x0d\x0e"

_094b50_data:
		.ascii  "\x00\x00\x04\x08\x01\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\x4f\x01\xb4\x00\x0d\x0f\x0d\x0e"

_094b64_data:
		.ascii  "\x00\x00\x05\x01"
		.fill   0x4
		.long   _0bfa14_data
		.ascii  "\x38\x01\xe4\x00\x0e\x17\x0f\x10"

_094b78_data:
		.ascii  "\x00\x00\x05\x03\x05\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\x68\x01\xdc\x00\x11\x10\x0f\x10"

_094b8c_data:
		.ascii  "\x00\x00\x05\x09\x02\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\x65\x01\x50\x00\x11\x10\x11\x11"

_094ba0_data:
		.ascii  "\x00\x00\x06\x01\x02\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\x0a\x00\xd4\x00\x12\x00\x12\x12"

_094bb4_data:
		.ascii  "\x00\x00\x07\x14\x05\x00\x00\x00"

_094bbc_data:
		.long   _0bfa14_data
		.ascii  "\xb6\x00\x0a\x01\x04\x13\x13\x13"

_094bc8_data:
		.ascii  "\x00\x00\x07\x14\x03\x00\x00\x00"

_094bd0_data:
		.long   _0bfa14_data
		.ascii  "\x91\x00\x61\x00\x14\x06\x14\x14"

_094bdc_data:
		.ascii  "\x00\x00\x07\x14"
		.fill   0x4

_094be4_data:
		.long   _0bfa14_data
		.ascii  "\xbe\x00\x2d\x00\x15\x09\x15\x15"

_094bf0_data:
		.ascii  "\x00\x00\x07\x14\x02\x00\x00\x00"

_094bf8_data:
		.long   _0bfa14_data
		.ascii  "\x14\x01\x73\x00\x16\x0d\x16\x16"

_094c04_data:
		.ascii  "\x00\x00\x07\x14\x01\x00\x00\x00"

_094c0c_data:
		.long   _0bfa14_data
		.ascii  "\x32\x01\x0b\x01\x0f\x17\x17\x17"

_094c18_data:
		.ascii  "\x00\x00\x07\x14\x01\x00\x00\x00"

_094c20_data:
		.ascii  "\x14\xfa\x0b"

_094c23_data:
		.ascii  "\x00\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03"

_094ca4_data:
		.ascii  "\x03\x03\x03\x03\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00\x3a\x00\x00\x00"
		.ascii  "\x3a\x00\x00\x00"

_094eb8_data:
		.fill   0x4

_094ebc_data:
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x6e\x00\x01\x04\x02\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x70\x00\x02\x66\x01\x00"
		.long   _0bfa18_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfa28_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x71\x00\x02\x66\x02\x00"
		.long   _0bfa3c_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x02\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x73\x00\x02\x66\x05\x00"
		.long   _0bfa18_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfa50_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x05\x00"
		.long   _0bfa60_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfa70_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfa84_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfa98_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfaa8_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x05\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x74\x00\x02\x66\x00\x00"
		.long   _0bfa3c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x00\x00"
		.long   _0bfac0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfad4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfae4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfaf8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfb0c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfb1c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfb34_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfb48_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfb5c_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x75\x00\x02\x66\x01\x00"
		.long   _0bfb74_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfb84_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x72\x00\x02\x66\x00\x00"
		.long   _0bfb98_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfbb8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfbc8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfbdc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfbf4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfc08_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfc1c_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x76\x00\x02\x66\x05\x00"
		.long   _0bfc30_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfc44_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfc58_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x05\x00"
		.long   _0bfc68_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfc7c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfc90_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfca4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfcb8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfccc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfce0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfa28_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfcf4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfd08_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfd20_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfd34_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfd44_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfd58_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfd6c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x05\x00"
		.long   _0bfd7c_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x05\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x77\x00\x02\x66\x00\x00"
		.long   _0bfd94_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfdac_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x00\x00"
		.long   _0bfdbc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfdd0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfde4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfdf8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfe0c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfe1c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfe2c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfe40_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfe58_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfe6c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfe80_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfe94_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfea8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x00\x00"
		.long   _0bfebc_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x00\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x78\x00\x02\x66\x01\x00"
		.long   _0bfecc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x01\x00"
		.long   _0bfee0_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfef4_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff04_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff18_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff28_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff3c_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x79\x00\x02\x66\x01\x00"
		.long   _0bfa50_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x6f\x00\x02\x00\x01\x00"
		.long   _0bff50_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff60_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfbdc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfa60_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff74_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfa70_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfa84_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff8c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfa98_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bff9c_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bffac_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bffbc_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bfaa8_data
		.ascii  "\xa0\x00\x00\x00\x02\x00\x01\x00"
		.long   _0bffd4_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x01\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x7a\x00\x02\x66\x02\x00"
		.long   _0bffe8_data
		.ascii  "\xa0\x00\x00\x00\x02\x03\x02\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x7b\x00\x02\x66\x05\x00"
		.long   _0bfff8_data
		.ascii  "\xa0\x00\x00\x00\x02\x02\x05\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x7c\x00\x02\x66\x05\x00"
		.long   _0c0018_data
		.ascii  "\xa0\x00\x00\x00\x02\x02\x05\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x7d\x00\x02\x66\x05\x00"
		.long   _0c003c_data
		.ascii  "\xa0\x00\x00\x00\x02\x04\x05\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x7e\x00\x02\x00\x01\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x7f\x00\x02\x06\x01\x00"
		.long   _0bfa14_data
		.ascii  "\xa0\x00\x80\x00\x01\x00\x01\x00"
		.long   _0c005c_data
		.ascii  "\xc8\x00\x00\x00\x02\xff\x02"
		.fill   0xf1

_095510_data:
		.ascii  "\x00\x29\x20\x08\x00\x13\x20\x1b"
		.ascii  "\x00\x1e\x04\x02\x00\x3c\x20\x0b"
		.ascii  "\x00\x10\x04\x0c\x00\x45\x04\x07"
		.ascii  "\x24\x14\x20\x1b\x00\x4a\x80\x2a"
		.ascii  "\xa0\x04\x20\x08\x24\x0b\x20\x7c"
		.ascii  "\x24\x13\x20\x3a\x00\x1c\x10\x2e"
		.ascii  "\x00\x0d\x80\x17\x90\x01\x10\x17"
		.ascii  "\x90\x01\x80\x1f\x90\x02\x10\x34"
		.ascii  "\x00\x21\x80\x03\x90\x01\x10\x17"
		.ascii  "\x90\x01\x80\x1b\x90\x03\x10\x4a"
		.ascii  "\x00\x44\x80\x1f\x90\x01\x10\x04"
		.ascii  "\x14\x0c\x10\x0e\x00\x08\xa0\x1d"
		.ascii  "\x80\x02\x90\x01\x80\xca\x90\x0d"
		.ascii  "\x10\x23\x00\x11\x20\x24\x00\x13"
		.ascii  "\x20\x0d\xa0\x01\x80\x16\xa0\x19"
		.ascii  "\x20\x26\x24\x0e\x20\x1d\x00\x10"
		.ascii  "\x80\x19\x90\x11\x80\x01\x90\x01"
		.ascii  "\x80\x0c\xa0"
		.ascii   "0 #$"
		.ascii  "\x04"
		.ascii   " u$\t "
		.ascii  "\x0f\x00\x55\x10\x02"
		.fill   0x61
		.ascii  "\x29\x20\x0c\x24\x13\x04\x02\x14"
		.ascii  "\x01\x10\x09\x14\x01\x04\x0c\x00"
		.ascii  "\x1a\x04\x05\x00\x2b\x10\x07\x00"
		.ascii  "\x07\x20\x07\x00\x02\x04\x03\x00"
		.ascii  "\x02\x10\x01\x50\x01\x10\x06\x00"
		.ascii  "\x07\x20\x08\x00\x4b\x04\x05\x00"
		.ascii  "\x3f\x10\x06\x00\x0e\x20\x09\x00"
		.ascii  "\x09\x04\x06\x00\x0c\x20\x37\x00"
		.ascii  "\x05\x10\x02\x50\x1c\x10\x01\x04"
		.ascii  "\x05\x00\x14\x10\x07\x00\x08\x20"
		.ascii  "\x05\x00\x38\x04\x04\x00\x0e\x10"
		.ascii  "\x08\x00\x22\x20\x06\x00\x19\x54"
		.ascii  "\x04\x50\x17\x10\x15\x00\x08\x20"
		.ascii  "\x16\x00\x0f\x20\x0b\x00\x01\x04"
		.ascii  "\x06\x00\x0d\x10\x06\x00\x52\x04"
		.ascii  "\x04\x00\x58\x20\x04\x24\x04\x20"
		.ascii  "\x2c\x00\x0a\x10\x02\x50\x17\x10"
		.ascii  "\x02\x00\x0d\x04\x04\x00\x0a\x10"
		.ascii  "\x03\x00\x0a\x20\x04\x00\x10\x10"
		.ascii  "\x05\x00\x34\x04\x04\x00\x33\x10"
		.ascii  "\x04\x00\x0d\x20\x03\x00\x1b\x04"
		.ascii  "\x05\x00\x47\x04\x04\x00\x51\x04"
		.ascii  "\x04\x00\x21\x10\x0c\x00\x13\x20"
		.ascii  "\x06\x00\x05\x04\x07\x00\x42"
		.fill   0x3b
		.ascii  "\x1d\x20\x32\x24\x08\x20\x0d\x21"
		.ascii  "\x05\x20\x08\x00\x0c\x20\x01\x24"
		.ascii  "\x08\x20\x07\x00\x09\x20\x06\x24"
		.ascii  "\x05\x20\x36\x24\x02\x04\x0a\x00"
		.ascii  "\x07\x20\x03\x00\x11\x20\x03\x22"
		.ascii  "\x03\x26\x01\x66\x06\x62\x01\x22"
		.ascii  "\x20\x02\x14\x22\x04\x26\x08\x22"
		.ascii  "\x0f\x26\x0a\x22\x16\x00\x18\x20"
		.ascii  "\x08\x00\x47\x20\x05\x24\x05\x20"
		.ascii  "\x1b\x00\x05\x04\x06\x00\x04\x04"
		.ascii  "\x07\x00\x0d\x22\x89\x26\x0d\x22"
		.ascii  "\x15\x02\x02\x00\x1c\x20\x08\x24"
		.ascii  "\x07\x20\x19\x00\x0c\x20\x03\x24"
		.ascii  "\x03\x20\x02\x00\x0c\x20\x17\x24"
		.ascii  "\x08\x20\x07\x24\x01\x04\x06\x00"
		.ascii  "\x16\x20\x09\x24\x0b\x20\x22\x24"
		.ascii  "\x03\x20\x15\x24\x0a\x20\x10\x00"
		.ascii  "\x1b\x20\x08\x24\x08\x20\x0c"
		.string "$\r K"
		.ascii  "\x46\x02\x27\x22\x05\x26\x06\x22"
		.ascii  "\x12\x26\x0e\x22\x2b\x02\x01\x00"
		.ascii  "\x10\x20\x06\x00\x2d\x04\x12\x00"
		.ascii  "\x09\x04\x12\x00\x15\x01\x57\x00"
		.ascii  "\x16\x04\x0b\x00\x0e\x04\x23\x00"
		.ascii  "\x2b\x01\x22\x00\x1b\x04\x0d\x00"
		.ascii  "\x1a\x04\x13"
		.fill   0x33
		.ascii  "\x28\x20\x4a\x00\x03\x20\x25\x24"
		.ascii  "\x0c\x20\x07\x00\x15\x01\x09\x00"
		.ascii  "\x0e\x80\x1d\x00\x1e\x20\x0a\x24"
		.ascii  "\x1a\x20\x0b\x00\x22\x20\x10\x24"
		.ascii  "\x09\x20\x13\x00\x10\x20\x10\x00"
		.ascii  "\x04\x01\x3d\x00\x1c\x80\x35\x00"
		.ascii  "\x0c\x01\x20\x81\x03\x80\x2f\x00"
		.ascii  "\x03\x01\x1b\x81\x04\x80\x34\x00"
		.ascii  "\x0f\x20\x09\x24\x08\x20\x17\x00"
		.ascii  "\x20\x20\x07\x00\x09\x04\x14\x00"
		.ascii  "\x11\x01\x07\x00\x11\x80\x24\x00"
		.ascii  "\x1d\x20\x01\x24\x0e\x20\x15\x00"
		.ascii  "\x1f\x20\x02\x24\x1e\x20\x09\x00"
		.ascii  "\x0f\x10\x08\x00\x04\x01\x29\x00"
		.ascii  "\x2c\x10\x0e\x14\x07\x10\x2c\x00"
		.ascii  "\x12\x04\x1f\x24\x07\x20\x22\x00"
		.ascii  "\x06\x20\x02\x24\x05\x20\x0f\x00"
		.ascii  "\x2e\x10\x18\x00\x0c\x20\x06\x00"
		.ascii  "\x21\x20\x05\x24\x05\x20\x14\x24"
		.ascii  "\x0e\x20\x10\x00\x34\x20\x10\x00"
		.ascii  "\x0e\x80\x0f\xa0\x13\xa4\xff\xa4"
		.ascii  "\x22\xa0\x28"
		.fill   0x4f
		.ascii  "\xbc\x20\x10\x00\xb0\x02\x0e\x00"
		.ascii  "\x2a\x04\x17\x00\x15\x04\x02\x24"
		.ascii  "\x11\x20\x02\x00\x1d\x04\x01\x24"
		.ascii  "\x08\x20\x02\x00\x25\x20\x0d\x00"
		.ascii  "\x0a\x02\x0b\x00\x76\x04\x0f\x00"
		.ascii  "\x2b\x04\x0a\x24\x04\x20\x02\x00"
		.ascii  "\x2b\x10\x14\x14\x13\x10\x27\x14"
		.ascii  "\x07\x10\x1f\x00\x15\x02\x0e\x00"
		.ascii  "\x29\x04\x18\x00\x13\x20\x05\x00"
		.ascii  "\x58\x04\x12\x24\x0c\x20\x01\x00"
		.ascii  "\x66\x04\x05\x24\x07\x20\x0b\x00"
		.ascii  "\x06\x20\x01\x00\x1a\x02\x0a\x00"
		.ascii  "\x34\x04\x0c\x00\x19\x10\x04\x00"
		.ascii  "\x17\x04\x02\x14\x02\x04\x06\x00"
		.ascii  "\x61\x04\x02\x14\x02\x54\x0a\x14"
		.ascii  "\x01\x10\x16\x00\x08\x01\x05\x00"
		.ascii  "\x1b\x10\x45\x00\x07\x20\x34\x00"
		.ascii  "\x0a\x02\x0a\x00\x2e\x04\x10\x00"
		.ascii  "\x10\x20\x09\x00\x0a\x04\x06\x24"
		.ascii  "\x0e\x20\x05\x00\x04\x10\x08\x00"
		.ascii  "\x02\x01\x06\x00\xa5\x20\x21\x00"
		.ascii  "\x05\x20\x14\x00\x0c\x02\x08\x00"
		.ascii  "\x26\x04\x11\x00\x19\x10\x04\x14"
		.ascii  "\x05\x04\x02\x00\x20\x14\x09\x10"
		.ascii  "\x08\x00\x1e\x10\x4a\x00\x80"
		.fill   0x33
		.ascii  "\x54\x10\x25\x00\x1a\x10\x03\x00"
		.ascii  "\x0a\x20\x06\x00\x3a\x10\x0d\x00"
		.ascii  "\x09\x20\x03\x00\xff\x00\x0b\x20"
		.ascii  "\x03\x24\x11\x20\x13\x00\x17\x10"
		.ascii  "\x07\x50\x02\x54\x1f\x50\x11\x10"
		.ascii  "\x01\x00\x11\x20\x03\x00\x8b\x20"
		.ascii  "\x04\x24\x0f\x20\x13\x00\x2d\x10"
		.ascii  "\x03\x50\x03"
		.ascii   "T P\t"
		.ascii  "\x10\x04\x00\x31\x20\x02\x00\x73"
		.ascii  "\x04\x18\x00\x35\x04\x18\x00\x4a"
		.ascii  "\x20\x08\x24\x1e\x20\x0b\x24\x12"
		.ascii  "\x20\x03\x00\x19\x20\x27\x00\x44"
		.ascii  "\x04\x0e\x00\x07\x20\x05\x00\x50"
		.ascii  "\x04\x13\x14\x09\x04\x01\x00\x20"
		.ascii  "\x10\x04\x00\x11\x20\x04\x00\x22"
		.fill   0x80

_095aea_data:
		.ascii  "\x00\x00\x9a\x00\xc0\x00\xc8\x00"
		.ascii  "\xac\x00\xc8\x00\x78\x00"

_095af8_data:
		.ascii  "\x02\x00\x03\x00\x04\x00\x05\x00"
		.ascii  "\x01\x00\x05\x00"

_095b04_data:
		.ascii  "\x07\x00\x07\x00\x01\x00\x04\x00"
		.ascii  "\x09\x00\x0a\x00"

_095b10_data:
		.ascii  "\x00\x00\x0a\x00"

_095b14_data:
		.ascii  "\xff"

_095b15_data:
		.ascii  "\xff\x00\x00"

_095b18_data:
		.fill   0x4

_095b1c_data:
		.fill   0x4

_095b20_data:
		.ascii  "\x4d"

_095b21_data:
		.ascii  "\x48"

_095b22_data:
		.ascii  "\x4b"

_095b23_data:
		.ascii  "\x50"

_095b24_data:
		.ascii  "\x38"

_095b25_data:
		.ascii  "\x1d"

_095b26_data:
		.ascii  "\x2d\x00"

_095b28_data:
		.long   _095b22_data

_095b2c_data:
		.long   _095b21_data

_095b30_data:
		.long   _095b20_data

_095b34_data:
		.long   _095b23_data

_095b38_data:
		.long   _095b25_data

_095b3c_data:
		.long   _095b24_data

_095b40_data:
		.long   _095b26_data

_095b44_data:
		.ascii   "KHMP"
		.ascii  "\x1d\x38\x2d"

_095b4b_data:
		.ascii  "\x00"

_095b4c_data:
		.ascii  "\x00\x00"

_095b4e_data:
		.ascii  "\x01\x00"

_095b50_data:
		.ascii  "\x00\x00"

_095b52_data:
		.ascii  "\x00\x00"

_095b54_data:
		.ascii  "\x00"

_095b55_data:
		.ascii  "\x01"

_095b56_data:
		.ascii  "\x01\x00"

_095b58_data:
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"

_095b68_data:
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"

_095b78_data:
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"
		.ascii  "\xff\x00\xff\x00\xff\x00\xff\x00"

_095b88_data:
		.ascii  "\xff\x00\xff\x00"

_095b8c_data:
		.ascii  "\xff\x00\xff\x00"

_095b90_data:
		.ascii  "\xff\x00"

_095b92_data:
		.ascii  "\xff\x00\xff\x00\xff\x00"

_095b98_data:
		.ascii  "\x00"

_095b99_data:
		.ascii  "\x00"

_095b9a_data:
		.ascii  "\x00\x00"

_095b9c_data:
		.ascii  "\x01\x00"

_095b9e_data:
		.ascii  "\x01"
		.fill   0x9

_095ba8_data:
		.ascii  "\x01"

_095ba9_data:
		.ascii  "\x01\x00\x00"

_095bac_data:
		.ascii  "\x00\x00"

_095bae_data:
		.ascii  "\x00\x00"

_095bb0_data:
		.ascii  "\x02\x00\xff"
		.fill   0x19
		.ascii  "\x02\x00\x01\x00\x03\x00\xff"
		.fill   0x13
		.ascii  "\x06\x00\x02\x00\x02\x00\x02\x00"
		.ascii  "\x00\x00\x01\x00\x01\x00\x01"
		.fill   0x5
		.ascii  "\xff"
		.fill   0x7
		.ascii  "\x03"
		.fill   0x5
		.ascii  "\x01\x00\x01\x00\x01\x00\xff"
		.fill   0xf
		.ascii  "\x05\x00\x01\x00\x02\x00\x03"
		.fill   0x5
		.ascii  "\x03\x00\x01\x00\x04\x00\x00\x00"
		.ascii  "\xff"
		.fill   0x7
		.ascii  "\x07\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x06\x00\x00\x00\x03"
		.fill   0x5
		.ascii  "\x01\x00\x04\x00\x00\x00\xff"
		.fill   0x5

_095c58_data:
		.ascii  "\x20"

_095c59_data:
		.ascii  "\x07"

_095c5a_data:
		.ascii  "\x3f\x1f\x07\x3d\x20\x07\x3a\x21"
		.ascii  "\x07"
		.ascii   "8$\n5%"
		.ascii  "\x0c\x33\x2d\x0f\x30\x34\x11\x2e"
		.ascii  "\x2d\x0f\x30\x28\x0f\x33\x23\x0c"
		.ascii   "5#\n8 "
		.ascii  "\x07\x3a\x1e\x05\x3d\x1b\x05\x3d"
		.ascii  "\x20"

_095c86_data:
		.ascii  "\x07\x3f"

_095c88_data:
		.ascii  "\x00\x00"

_095c8a_data:
		.ascii  "\x00\x00"

_095c8c_data:
		.ascii  "\x00\x00"

_095c8e_data:
		.ascii  "\x00\x00"

_095c90_data:
		.ascii  "\x00\x00"

_095c92_data:
		.ascii  "\x00\x00"

_095c94_data:
		.ascii  "\x00\x00"

_095c96_data:
		.ascii  "\x00\x00"

_095c98_data:
		.ascii  "\x00\x00"

_095c9a_data:
		.ascii  "\x00"

_095c9b_data:
		.ascii  "\x00"

_095c9c_data:
		.ascii  "\x09\x0f\x05\x13\x14\x0a\x15\x19"
		.ascii  "\x0a\x22\x1e"
		.ascii   "\n$#\n'(\n)-\n)2\n.7\n1<\n3<\n6<\n8<\n;<\n=<\n?"

_095cca_data:
		.ascii  "\x00\x00"

_095ccc_data:
		.ascii  "\x00\x00"

_095cce_data:
		.ascii  "\x00"

_095ccf_data:
		.ascii  "\x00"

_095cd0_data:
		.ascii  "\x14"

_095cd1_data:
		.ascii  "\x00"

_095cd2_data:
		.ascii  "\x00"

_095cd3_data:
		.ascii  "\x00"

_095cd4_data:
		.fill   0x4
		.ascii  "\x06\x00\x02\x00\x05\x00\x04\x00"
		.ascii  "\x08\x00"

_095ce2_data:
		.ascii  "\x10\x00\x10\x00\x08\x00\x08\x00"
		.ascii  "\x10\x00\x10\x00\x08\x00"

_095cf0_data:
		.ascii  "\x14\x00"

_095cf2_data:
		.ascii  "\x00\x00"

_095cf4_data:
		.ascii  "\x00\x00"

_095cf6_data:
		.ascii  "\xf4\x01"

_095cf8_data:
		.ascii  "\x00\x00"

_095cfa_data:
		.ascii  "\x00\x00"

_095cfc_data:
		.ascii  "\x00\x00"

_095cfe_data:
		.fill   0x4

_095d02_data:
		.ascii  "\x40\x02"

_095d04_data:
		.ascii  "\x00\x00\x90\x02\x00\x00\xe0\x02"
		.ascii  "\x00\x00\x30\x03\x00\x00\x80\x03"
		.ascii  "\x00\x00\xd0\x03\x00\x00\x20\x04"
		.ascii  "\x00\x00\x70\x04\x00\x00\xd4\xff"
		.ascii  "\x3d\x02\xce\xff\x8d\x02\xc7\xff"
		.ascii  "\xdd\x02\xc0\xff\x2c\x03\xb9\xff"
		.ascii  "\x7c\x03\xb2\xff\xcc\x03\xab\xff"
		.ascii  "\x1b\x04\xa4\xff\x6b\x04\x9d\xff"
		.ascii  "\xa6\xff\x37\x02\x9c\xff\x86\x02"
		.ascii  "\x8f\xff\xd4\x02\x81\xff\x23\x03"
		.ascii  "\x73\xff\x72\x03\x65\xff\xc1\x03"
		.ascii  "\x57\xff\x0f\x04\x49\xff\x5e\x04"
		.ascii  "\x3b\xff\x77\xff\x2c\x02\x6b\xff"
		.ascii  "\x79\x02\x57\xff\xc6\x02\x42\xff"
		.ascii  "\x14\x03\x2d\xff\x61\x03\x19\xff"
		.ascii  "\xae\x03\x04\xff\xfc\x03\xef\xfe"
		.ascii  "\x49\x04\xda\xfe\x46\xff\x1d\x02"
		.ascii  "\x3b\xff\x68\x02\x20\xff\xb3\x02"
		.ascii  "\x05\xff\xfe\x02\xe9\xfe\x49\x03"
		.ascii  "\xce\xfe\x95\x03\xb3\xfe\xe0\x03"
		.ascii  "\x97\xfe\x2b\x04\x7c\xfe\x12\xff"
		.ascii  "\x0a\x02\x0d\xff\x52\x02\xeb\xfe"
		.ascii  "\x9b\x02\xc9\xfe\xe3\x02\xa8\xfe"
		.ascii  "\x2c\x03\x86\xfe\x74\x03\x64\xfe"
		.ascii  "\xbd\x03\x42\xfe\x05\x04\x20\xfe"
		.ascii  "\xd9\xfe\xf2\x01\xe1\xfe\x38\x02"
		.ascii  "\xb9\xfe\x7d\x02\x91\xfe\xc2\x02"
		.ascii  "\x69\xfe\x07\x03\x41\xfe\x4d\x03"
		.ascii  "\x19\xfe\x92\x03\xf1\xfd\xd7\x03"
		.ascii  "\xc9\xfd\x9a\xfe\xd7\x01\xb6\xfe"
		.ascii  "\x19\x02\x88\xfe\x5a\x02\x5a\xfe"
		.ascii  "\x9c\x02\x2c\xfe\xdd\x02\xff\xfd"
		.ascii  "\x1f\x03\xd1\xfd\x61\x03\xa3\xfd"
		.ascii  "\xa2\x03\x75\xfd\x53\xfe\xb9\x01"
		.ascii  "\x8e\xfe\xf6\x01\x5b\xfe\x33\x02"
		.ascii  "\x27\xfe\x71\x02\xf4\xfd\xae\x02"
		.ascii  "\xc1\xfd\xeb\x02\x8d\xfd\x28\x03"
		.ascii  "\x5a\xfd\x66\x03\x26\xfd\x01\xfe"
		.ascii  "\x97\x01\x69\xfe\xcf\x01\x31\xfe"
		.ascii  "\x08\x02\xf8\xfd\x40\x02\xc0\xfd"
		.ascii  "\x79\x02\x87\xfd\xb2\x02\x4e\xfd"
		.ascii  "\xea\x02\x16\xfd\x23\x03\xdd\xfc"
		.ascii  "\x9e\xfd\x72\x01\x47\xfe\xa5\x01"
		.ascii  "\x0a\xfe\xd9\x01\xcd\xfd\x0c\x02"
		.ascii  "\x8f\xfd\x3f\x02\x52\xfd\x73\x02"
		.ascii  "\x15\xfd\xa6\x02\xd8\xfc\xda\x02"
		.ascii  "\x9a\xfc\x25\xfd\x4a\x01\x29\xfe"
		.ascii  "\x78\x01\xe7\xfd\xa6\x01\xa6\xfd"
		.ascii  "\xd4\x01\x64\xfd\x01\x02\x23\xfd"
		.ascii  "\x2f\x02\xe1\xfc\x5d\x02\x9f\xfc"
		.ascii  "\x8b\x02\x5e\xfc\x8a\xfc\x20\x01"
		.ascii  "\x0e\xfe\x48\x01\xc8\xfd\x70\x01"
		.ascii  "\x83\xfd\x98\x01\x3e\xfd\xc0\x01"
		.ascii  "\xf9\xfc\xe8\x01\xb3\xfc\x10\x02"
		.ascii  "\x6e\xfc\x38\x02\x29\xfc\xb7\xfb"
		.ascii  "\xf3\x00\xf6\xfd\x15\x01\xae\xfd"
		.ascii  "\x37\x01\x65\xfd\x58\x01\x1d\xfd"
		.ascii  "\x7a\x01\xd4\xfc\x9c\x01\x8c\xfc"
		.ascii  "\xbe\x01\x43\xfc\xe0\x01\xfb\xfb"
		.ascii  "\x82\xfa\xc5\x00\xe3\xfd\xe0\x00"
		.ascii  "\x98\xfd\xfb\x00\x4d\xfd\x17\x01"
		.ascii  "\x02\xfd\x32\x01\xb7\xfc\x4d\x01"
		.ascii  "\x6b\xfc\x69\x01\x20\xfc\x84\x01"
		.ascii  "\xd5\xfb\x8a\xf8\x95\x00\xd4\xfd"
		.ascii  "\xa9\x00\x87\xfd\xbe\x00\x3a\xfd"
		.ascii  "\xd3\x00\xec\xfc\xe7\x00\x9f\xfc"
		.ascii  "\xfc\x00\x52\xfc\x11\x01\x04\xfc"
		.ascii  "\x26\x01\xb7\xfb\xa9\xf4\x64\x00"
		.ascii  "\xc9\xfd\x71\x00\x7a\xfd\x7f\x00"
		.ascii  "\x2c\xfd\x8d\x00\xdd\xfc\x9b\x00"
		.ascii  "\x8e\xfc\xa9\x00\x3f\xfc\xb7\x00"
		.ascii  "\xf1\xfb\xc5\x00\xa2\xfb\x24\xe9"
		.ascii  "\x32\x00\xc3\xfd\x39\x00\x73\xfd"
		.ascii  "\x40\x00\x23\xfd\x47\x00\xd4\xfc"
		.ascii  "\x4e\x00\x84\xfc\x55\x00\x34\xfc"
		.ascii  "\x5c\x00\xe5\xfb\x63\x00\x95\xfb"
		.fill   0x4
		.ascii  "\xc0\xfd\x00\x00\x70\xfd\x00\x00"
		.ascii  "\x20\xfd\x00\x00\xd0\xfc\x00\x00"
		.ascii  "\x80\xfc\x00\x00\x30\xfc\x00\x00"
		.ascii  "\xe0\xfb\x00\x00\x90\xfb"

_095f86_data:
		.ascii  "\x12\x00"

_095f88_data:
		.ascii  "\x00\x00"

_095f8a_data:
		.ascii  "\x00\x00"

_095f8c_data:
		.fill   0x4

_095f90_data:
		.fill   0x4

_095f94_data:
		.fill   0x4

_095f98_data:
		.ascii  "\xb9\x01\x00\x00"

_095f9c_data:
		.ascii  "\x00"

_095f9d_data:
		.ascii  "\x00"

_095f9e_data:
		.ascii  "\x00"

_095f9f_data:
		.ascii  "\x00"

_095fa0_data:
		.fill   0x4

_095fa4_data:
		.ascii  "\xfd\xff\xfe\xff\xff\xff\x00\x00"
		.ascii  "\x01\x00\x01\x00\x03\x00"

_095fb2_data:
		.ascii  "\xfd\xff\xfb\xff\xfc\xff\xfa\xff"
		.ascii  "\xfb\xff\xfd\xff\xfd\xff"
		.long   _0c0528_data
		.long   _0c0540_data
		.long   _0c0550_data
		.long   _0c0560_data
		.long   _0c0570_data
		.long   _0c057c_data
		.long   _0c05a0_data
		.long   _0c05ac_data
		.long   _0c05bc_data
		.long   _0c05d0_data
		.long   _0c05e8_data
		.long   _0c05f4_data
		.long   _0c0600_data
		.long   _0c0610_data
		.long   _0c0610_data
		.long   _0c061c_data

_096000_data:
		.fill   0x4
		.long   _0c064c_data

_096008_data:
		.ascii  "\x00"

_096009_data:
		.ascii  "\x53\x00\x00"

_09600c_data:
		.fill   0x4

_096010_data:
		.ascii  "\x00\x00"

_096012_data:
		.fill   0x4
		.ascii  "\x04\x00\x07\x00\x09\x00\x0a\x00"
		.ascii  "\x09\x00\x07\x00\x04\x00\x00\x00"
		.ascii  "\xfe\xff\xfc\xff\xfb\xff\xfa\xff"
		.ascii  "\xfb\xff\xfc\xff\xfe\xff\x00\x00"
		.ascii  "\x01\x00\x02\x00\x03\x00\x02\x00"
		.ascii  "\x01\x00\x00\x00\xff\xff\xfe\xff"
		.ascii  "\xff\xff\x00\x00\x01\x00\x00\x00"

_09604e_data:
		.ascii  "\x00\x01\x02"

_096051_data:
		.ascii  "\x00\x00\x02\x00\x02"

_096056_data:
		.ascii  "\x02\x00\x00\x02\x00"

_09605b_data:
		.ascii  "\x02\x02\x00\x00\x00"

_096060_data:
		.fill   0x5

_096065_data:
		.ascii  "\x00"

_096066_data:
		.ascii  "\x00\x00"

_096068_data:
		.fill   0x4
		.ascii  "\x98\xb0\x86\x83\x86\x85\xa6\xb8"
		.ascii  "\x99\x98\xb0\x88\x83\x88\x85\xa6"
		.ascii  "\xb8\x99\x98\xb0\x84\xb9\x84\xb0"
		.ascii  "\x86\x99\x98\xb0\x84\xb9\x84\xb0"
		.ascii  "\x88\x99\x89\xa7\x84\xb0\x89\xa7"
		.ascii  "\x84\xb0\x9d\x94\x88\x84\x85\xb7"
		.ascii  "\x9d\x94\x86\x84\x85\xb7\x9d\x9f"
		.ascii  "\x88\x84\x85\xb7\x9d\x9f\x86\x84"
		.ascii  "\x85\xb7\x98\x83\x86\x85\x84\xb9"
		.ascii  "\x8e\xb1\x99\x98\x83\x88\x85\x84"
		.ascii  "\xb9\x8e\xb1\x99\xb1\x9e\x83\x80"
		.ascii  "\xa7\x9f\x8f\xb7\xa4\x9e\x83\x80"
		.ascii  "\xa7\x9f\x8f\xb7\xb4\x88\x9c\x8e"
		.ascii  "\xb9\x87\x9f\xa7\xb4\x86\x9c\x8e"
		.ascii  "\xb9\xba\x9f\xa7\xb5\xb2\x8f\x80"
		.ascii  "\x82\xb5\xb2\x8f\x80\x82\xb2\xb6"
		.ascii  "\x8f\x9f\x88\xb2\xb6\x8f\x9f\x86"
		.ascii  "\xa7\xb0\xb3\xb2\xb9\xb7\xb6\x95"
		.ascii  "\xa7\xb0\xb3\xb2\xb9\xb7\xb6\x95"
		.ascii  "\x85\xb6\xb3\x91\xb1\x83\xb7\x92"
		.ascii  "\x85\xb6\xb3\x91\xa4\x83\xb7\x92"
		.ascii  "\x94\x91\x9d\x92\x91\x90\xa6\x85"
		.ascii  "\x94\x91\x9d\x92\x91\x90\xa6\x85"
		.ascii  "\xb3\x93\xb6\x91\x84\xb3\x93\xb6"
		.ascii  "\x91\x84\x85\x84\x81\xb9\x81\xb0"
		.ascii  "\x8e\x99\x85\x84\x81\xb9\x81\xb0"
		.ascii  "\x8e\x99\x89\x81\x8e\xb8\xa7\x86"
		.ascii  "\x85\xb7\x99\x89\x81\x8e\xb8\xa7"
		.ascii  "\x88\x85\xb7\x99\xb6\xa7\x86\x85"
		.ascii  "\x82\x85\x84\xa6\x99\xb6\xa7\x88"
		.ascii  "\x85\x82\x85\x84\xa6\x99\x82\x81"
		.ascii  "\x8e\xa7\x84\xa6\x99\x82\x81\x8e"
		.ascii  "\xa7\x84\xa6\x99\x82\x89\x81\x85"
		.ascii  "\xb5\xb8\x99\x82\x89\x81\x85\xb5"
		.ascii  "\xb8\x99\x84\xa7\x81\x8e\x82\xa7"
		.ascii  "\x86\x99\x84\xa7\x81\x8e\x82\xa7"
		.ascii  "\x88\x99\x8e\xb2\x8e\xb2\x99\x8e"
		.ascii  "\xb2\x8e\xb2\x99\xb0\x81\x85\x83"
		.ascii  "\xb8\x99\xb0\x81\x85\x83\xb8\x99"
		.ascii  "\xb1\x86\x85\xb4\x8e\x85\x8f\x99"
		.ascii  "\xa4\x88\x85\xb4\x8e\x85\x8f"

_0961b3_data:
		.ascii  "\x99"

_0961b4_data:
		.ascii  "\x00"

_0961b5_data:
		.ascii  "\x00"

_0961b6_data:
		.ascii  "\x01\x00"

_0961b8_data:
		.ascii  "\x00\x00"

_0961ba_data:
		.ascii  "\x00\x00"

_0961bc_data:
		.ascii  "\x00\x00"

_0961be_data:
		.ascii  "\x00\x00"

_0961c0_data:
		.fill   0x4

_0961c4_data:
		.ascii  "\x3c"

_0961c5_data:
		.ascii  "\x00"

_0961c6_data:
		.ascii  "\x00"

_0961c7_data:
		.ascii  "\x02"

_0961c8_data:
		.ascii  "\x00"

_0961c9_data:
		.ascii  "\x00\x00\x00"

_0961cc_data:
		.ascii  "\x00\x0f\x00\x00"

_0961d0_data:
		.ascii  "\x01\x00\x00\x00"

_0961d4_data:
		.ascii  "\xd7\x00\x00\x00"

_0961d8_data:
		.ascii  "\xdf"
		.fill   0x4
		.ascii  "\x1f\x00\x00\xdf\x00\x00\x00\x9c"
		.ascii  "\x01\x00\x00\xd4\x01\x00\x00\x28"
		.ascii  "\x01\x01\x00\xd4\x01\x00\x00\x7a"
		.ascii  "\x03\x00\x00\x98\x03\x00\x00\x00"
		.ascii  "\x14\x01\x00\x98\x03\x00\x00\x92"
		.ascii  "\x04\x00\x00\xab\x04\x00\x00\xff"
		.ascii  "\xff\xff\x00\xab\x04\x00\x00\x08"
		.ascii  "\x07\x00\x00\x0d\x07\x00\x00"

_09621c_data:
		.ascii  "\x3c"

_09621d_data:
		.ascii  "\x00"

_09621e_data:
		.ascii  "\x00\x00"

_096220_data:
		.fill   0x4

_096224_data:
		.ascii  "\x00\x01\x00\x00"

_096228_data:
		.fill   0x8

_096230_data:
		.fill   0x8

_096238_data:
		.fill   0x8

_096240_data:
		.fill   0x5
		.ascii  "\x08\x00\x00"

_096248_data:
		.ascii  "\x82"

_096249_data:
		.ascii  "\xaa\x00\x00"

_09624c_data:
		.fill   0x4

_096250_data:
		.ascii  "\xe8\x6d\x04\x00"

_096254_data:
		.ascii  "\xf6"

_096255_data:
		.ascii  "\xc3\x00\x00"

_096258_data:
		.ascii  "\x00\x20"
		.fill   0xa
		.ascii  "\x01\x00\x00\x00"

_096268_data:
		.fill   0xc

_096274_data:
		.fill   0x4

_096278_data:
		.fill   0x2c

_0962a4_data:
		.fill   0x6

_0962aa_data:
		.ascii  "\x00\x00\x0b\x00\x0c\x00\x0d\x00"
		.ascii  "\x0e\x00\x0f\x00\x10\x00\x10\x00"
		.ascii  "\x11\x00\x13\x00\x14\x00\x15\x00"
		.ascii  "\x16\x00\x17\x00\x19\x00\x1a\x00"
		.ascii  "\x1c\x00\x1e\x00\x20\x00\x21\x00"
		.ascii  "\x23\x00\x26\x00\x28\x00\x2a\x00"
		.ascii  "\x2d\x00\x2f\x00\x32\x00\x35\x00"
		.ascii  "\x39\x00\x3c\x00\x40\x00\x43\x00"
		.ascii  "\x47\x00\x4c\x00\x50\x00\x55\x00"
		.ascii  "\x5a\x00\x60\x00\x65\x00\x6b\x00"
		.ascii  "\x72\x00\x78\x00\x80\x00\x87\x00"
		.ascii  "\x8f\x00\x98\x00\xa1\x00\xaa\x00"
		.ascii  "\xb5\x00\xbf\x00\xcb\x00\xd7\x00"
		.ascii  "\xe4\x00\xf1\x00\x00\x01\x0f\x01"
		.ascii  "\x1f\x01\x30\x01\x42\x01\x55\x01"
		.ascii  "\x6a\x01\x7f\x01\x96\x01\xae\x01"
		.ascii  "\xc8\x01\xe3\x01\x00\x02\x1e\x02"
		.ascii  "\x3e\x02\x60\x02\x85\x02\xab\x02"
		.ascii  "\xd4\x02\xff\x02\x2c\x03\x5d\x03"
		.ascii  "\x90\x03\xc6\x03\x00\x04\x3c\x04"
		.ascii  "\x7d\x04\xc1\x04\x0a\x05\x56\x05"
		.ascii  "\xa8\x05\xfe\x05\x59\x06\xba\x06"
		.ascii  "\x20\x07\x8d\x07\x00\x08\x79\x08"
		.ascii  "\xfa\x08\x83\x09\x15\x0a\xad\x0a"
		.ascii  "\x50\x0b\xfc\x0b\xb2\x0c\x74\x0d"
		.ascii  "\x41\x0e\x1a\x0f\x00\x10\xf3\x10"
		.ascii  "\xf5\x11\x06\x13\x28\x14\x5b\x15"
		.ascii  "\xa0\x16\xf9\x17\x65\x19\xe8\x1a"
		.ascii  "\x82\x1c\x34\x1e\x00\x20\xe7\x21"
		.ascii  "\xeb"
		.ascii   "#\r&Q("
		.ascii  "\xb7\x2a\x41\x2d\xf2\x2f\xcb\x32"
		.ascii  "\xd1\x35\x04\x39\x68\x3c\x00\x40"
		.ascii  "\xce\x43\xd6\x47"

_0963ac_data:
		.fill   0x4

_0963b0_data:
		.long   _0406d8_jump

_0963b4_data:
		.long   _0406ec_jump

_0963b8_data:
		.long   _040700_jump

_0963bc_data:
		.long   _040700_jump

_0963c0_data:
		.fill   0x4

_0963c4_data:
		.fill   0x4

_0963c8_data:
		.fill   0x4

_0963cc_data:
		.ascii  "\x2f"

_0963cd_data:
		.fill   0x63
		.long   _0c0b04_data
		.long   _0c0b0c_data
		.long   _0c0b14_data
		.ascii  "\x1c\x0b"

_09643e_data:
		.ascii  "\x0c\x00\x04\x00\x0c\x00\x14\x00"

_096446_data:
		.ascii  "\x18\x00\x40\x01\x38\x01\x30\x01"

_09644e_data:
		.ascii  "\x2c\x01\x00\x00\x08\x00\x10\x00"

_096456_data:
		.ascii  "\x14\x00\xc8\x00\xc0\x00\xb8\x00"
		.ascii  "\xb4\x00"
		.long   _0c0b24_data
		.long   _0c0b28_data
		.long   _0c0b2c_data
		.long   _0c0b30_data
		.long   _0c0b34_data

_096474_data:
		.ascii  "\x00"

_096475_data:
		.ascii  "\x00"

_096476_data:
		.ascii  "\x00"

_096477_data:
		.ascii  "\x00"

_096478_data:
		.ascii  "\x40\x00\x00\x00"

_09647c_data:
		.fill   0x8
		.long   _0c0b40_data
		.long   _0c0b44_data
		.long   _0c0b48_data
		.long   _0c0b4c_data
		.long   _0c0b50_data
		.long   _0c0b54_data
		.long   _0c0b58_data
		.long   _0c0b5c_data
		.long   _0c0b60_data
		.long   _0c0b64_data
		.fill   0x10
		.long   _0c0b68_data
		.long   _0c0b6c_data
		.long   _0c0b70_data
		.long   _0c0b74_data
		.long   _0c0b78_data
		.long   _0c0b7c_data
		.long   _0c0b80_data
		.long   _0c0b84_data
		.long   _0c0b88_data
		.long   _0c0b8c_data
		.fill   0x10
		.long   _0c0b90_data
		.long   _0c0b94_data
		.long   _0c0b98_data
		.long   _0c0b9c_data
		.long   _0c0ba0_data
		.long   _0c0ba4_data
		.long   _0c0ba8_data
		.long   _0c0bac_data
		.long   _0c0bb0_data
		.long   _0c0bb4_data
		.fill   0x10
		.long   _0c0bb8_data
		.long   _0c0bbc_data
		.long   _0c0bc0_data
		.long   _0c0bc4_data
		.long   _0c0bc8_data
		.long   _0c0bcc_data
		.long   _0c0bd0_data
		.long   _0c0bd4_data
		.long   _0c0bd8_data
		.fill   0x5c
		.long   _0c0b50_data
		.fill   0xcc

_09667c_data:
		.fill   0x8
		.long   _0c0b40_data
		.long   _0c0b44_data
		.long   _0c0b48_data
		.long   _0c0b4c_data
		.long   _0c0b50_data
		.long   _0c0b54_data
		.long   _0c0b58_data
		.long   _0c0b5c_data
		.long   _0c0b60_data
		.long   _0c0b64_data
		.fill   0x10
		.long   _0c0b90_data
		.long   _0c0bb8_data
		.long   _0c0b70_data
		.long   _0c0b74_data
		.long   _0c0b78_data
		.long   _0c0b7c_data
		.long   _0c0b80_data
		.long   _0c0b84_data
		.long   _0c0b88_data
		.long   _0c0b8c_data
		.fill   0x10
		.long   _0c0b68_data
		.long   _0c0b94_data
		.long   _0c0b98_data
		.long   _0c0b9c_data
		.long   _0c0ba0_data
		.long   _0c0ba4_data
		.long   _0c0ba8_data
		.long   _0c0bac_data
		.long   _0c0bb0_data
		.long   _0c0bd8_data
		.fill   0x10
		.long   _0c0b6c_data
		.long   _0c0bbc_data
		.long   _0c0bc0_data
		.long   _0c0bc4_data
		.long   _0c0bc8_data
		.long   _0c0bcc_data
		.long   _0c0bb4_data
		.fill   0x4
		.long   _0c0bd4_data
		.long   _0c0bd0_data
		.fill   0x5c
		.long   _0c0b50_data
		.fill   0xc8

_09687c_data:
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_09688c_data:
		.ascii  "\x02\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x06\x00"

_09689c_data:
		.fill   0x8
		.ascii  "\x08"
		.fill   0x7

_0968ac_data:
		.ascii  "\x07\x00\x08\x00\x08"
		.fill   0x5
		.ascii  "\x08\x00\x08\x00\x01\x00"

_0968bc_data:
		.ascii  "\x08\x00\x08\x00\x01\x00\x08\x00"
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"

_0968cc_data:
		.fill   0xe
		.ascii  "\x08\x00"

_0968dc_data:
		.fill   0xa
		.ascii  "\x08"
		.fill   0x5
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x01\x00\x08\x00"
		.ascii  "\x07\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x01\x00"

_09690c_data:
		.ascii  "\x07\x00\x08\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_09691c_data:
		.ascii  "\x08\x00\x07\x00\x08\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_09692c_data:
		.ascii  "\x08\x00\x08\x00\x07\x00\x08\x00"
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x00"

_09693c_data:
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09688c_data

_09695c_data:
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _0968dc_data

_09697c_data:
		.long   _09687c_data
		.long   _09692c_data
		.long   _09687c_data
		.long   _09691c_data
		.long   _09687c_data
		.long   _09690c_data
		.long   _09687c_data
		.long   _09687c_data

_09699c_data:
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _0968ac_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data

_0969bc_data:
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _0968bc_data
		.long   _09687c_data
		.long   _09688c_data
		.long   _09687c_data

_0969dc_data:
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _0968cc_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data

_0969fc_data:
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09687c_data
		.long   _09689c_data
		.long   _09687c_data

_096a1c_data:
		.long   _09693c_data
		.long   _09695c_data
		.long   _09697c_data
		.long   _09699c_data
		.long   _0969bc_data
		.long   _0969dc_data
		.long   _0969fc_data

_096a38_data:
		.ascii  "\x2a\x2e\x05"

_096a3b_data:
		.ascii  "\x2c\x02"

_096a3d_data:
		.ascii  "\x28\x02"

_096a3f_data:
		.ascii  "\x07\x08\x0c\x26\x0d\x0e\x00"

_096a46_data:
		.ascii  "\x29\x0f\x10\x29\x1a\x12\x13\x01"

_096a4e_data:
		.ascii  "\x15\x16\x2d\x18\x29\x1a\x12\x13"
		.ascii  "\x01"

_096a57_data:
		.ascii  "\x1b\x1c\x00\x00\x1d\x1c\x20\xfe"
		.ascii  "\x1d\x1c\x00\x01\x1d\x1c\x20\xfe"
		.ascii  "\x1d\x1c\x10\x02\x1d\x1c\x10\x02"
		.ascii  "\x1d\x1c\x30\x03\x1d\x1c\x00\x04"
		.ascii  "\x1d\x1c\x5c\x05\x1d\x1c\x36\x05"
		.ascii  "\x1d\x1c\x10\x05\x1d\x1c\x00\x06"
		.ascii  "\x1d\x1e\x18\x29\x1a\x12\x13\x00"

_096a8f_data:
		.ascii  "\x15\x16\x19\x1f\x00"

_096a94_data:
		.ascii  "\x24\x23\x2b\x01"
		.ascii   "\"$\"!"
		.ascii  "\x01"
		.ascii   "#$#+"
		.ascii  "\x01\x22\x22\x21\x01\x23\x23\x2b"
		.ascii  "\x02\x22\x22\x21\x01\x23\x23\x2b"
		.ascii  "\x02\x22\x20\x01\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x01\x22\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x01\x22\x22\x21\x03\x23"
		.ascii  "\x23\x2b\x03\x22\x01"

_096ace_data:
		.ascii  "\x25\x27\x00"

_096ad1_data:
		.ascii  "\x2d\x18\x29\x1a\x12\x13\x1b\x1c"
		.ascii  "\x10\xff\x1d\x2d\x18\x29\x1a\x12"
		.ascii  "\x12\x13\x15\x16\x1c\x20\xfe\x1d"
		.ascii  "\x01\x00\x00"

_096aec_data:
		.long   _096a3f_data
		.long   _096a46_data
		.long   _096a4e_data
		.long   _096a57_data
		.long   _096a8f_data
		.long   _096a94_data
		.long   _096ace_data
		.long   _096ad1_data
		.long   _096a3d_data
		.long   _096a3b_data
		.long   _096a38_data

_096b18_data:
		.ascii  "\x10\x17\x18\x16\x19"

_096b1d_data:
		.ascii  "\x10\x11\x0f\x1a\x0b\x05"

_096b23_data:
		.ascii  "\x0d\x1a\x0e\x03"

_096b27_data:
		.ascii  "\x0d\x1a\x0e\x04\x13\x15\x04\x14"
		.ascii  "\x12\x15\x04\x14\x13\x15\x04\x14"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x04"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x04"
		.ascii  "\x13\x15\x04\x14\x0a\x1a\x0e\x02"

_096b4f_data:
		.ascii  "\x0d\x1a\x0e\x04\x07\x00\x07\x00"
		.ascii  "\x0a\x1a\x0e\x04\x03"

_096b5c_data:
		.ascii  "\x07\x04\x07\x08\x0a\x1a\x0e\x0d"
		.ascii  "\x1a\x0e\x04\x02"

_096b68_data:
		.ascii  "\x08\x00\x08\x00\x08\x00\x08\x04"
		.ascii  "\x12\x15\x04\x14\x13\x15\x04\x14"
		.ascii  "\x0a\x1a\x0e\x04\x02"

_096b7d_data:
		.ascii  "\x09\x00\x12\x15\x04\x14\x09\x04"
		.ascii  "\x12\x15\x04\x14\x0a\x1a\x0e\x0d"
		.ascii  "\x0e\x04\x02"

_096b90_data:
		.ascii  "\x07\x08\x08\x08\x09\x00\x13\x15"
		.ascii  "\x04\x14\x09\x08\x12\x15\x04\x14"
		.ascii  "\x0a\x1a\x0e\x04\x02\x00\x00\x00"

_096ba8_data:
		.long   _096b23_data

_096bac_data:
		.long   _096b27_data
		.long   _096b23_data
		.long   _096b4f_data
		.long   _096b5c_data
		.long   _096b68_data
		.long   _096b7d_data
		.long   _096b90_data
		.long   _096b1d_data
		.long   _096b18_data

_096bd0_data:
		.fill   0x4

_096bd4_data:
		.ascii  "\x00\x02\x00\x02\x00\x02\x00\x02"
		.ascii  "\x00\x02\x00\x02\xff\x01\xff\x01"
		.ascii  "\xfe\x01\xfd\x01\xfd\x01\xfc\x01"
		.ascii  "\xfb\x01\xfa\x01\xf9\x01\xf8\x01"
		.ascii  "\xf7\x01\xf5\x01\xf4\x01\xf3\x01"
		.ascii  "\xf1\x01\xf0\x01\xee\x01\xec\x01"
		.ascii  "\xea\x01\xe9\x01\xe7\x01\xe5\x01"
		.ascii  "\xe3\x01\xe0\x01\xde\x01\xdc\x01"
		.ascii  "\xda\x01\xd7\x01\xd5\x01\xd2\x01"
		.ascii  "\xcf\x01\xcd\x01\xca\x01\xc7\x01"
		.ascii  "\xc4\x01\xc1\x01\xbe\x01\xbb\x01"
		.ascii  "\xb8\x01\xb4\x01\xb1\x01\xae\x01"
		.ascii  "\xaa\x01\xa7\x01\xa3\x01\x9f\x01"
		.ascii  "\x9c\x01\x98\x01\x94\x01\x90\x01"
		.ascii  "\x8c\x01\x88\x01\x84\x01\x80\x01"
		.ascii  "\x7c\x01\x78\x01\x73\x01\x6f\x01"
		.ascii  "\x6b\x01\x66\x01\x62\x01\x5d\x01"
		.ascii  "\x58\x01\x54\x01\x4f\x01\x4a\x01"
		.ascii  "\x45\x01\x40\x01\x3c\x01\x37\x01"
		.ascii  "\x32\x01\x2c\x01\x27\x01\x22\x01"
		.ascii  "\x1d\x01\x18\x01\x12\x01\x0d\x01"
		.ascii  "\x08\x01\x02\x01\xfd\x00\xf7\x00"
		.ascii  "\xf2\x00\xec\x00\xe7\x00\xe1\x00"
		.ascii  "\xdb\x00\xd6\x00\xd0\x00\xca\x00"
		.ascii  "\xc4\x00\xbf\x00\xb9\x00\xb3\x00"
		.ascii  "\xad\x00\xa7\x00\xa1\x00\x9b\x00"
		.ascii  "\x95\x00\x8f\x00\x89\x00\x83\x00"
		.ascii  "\x7d\x00\x77\x00\x71\x00\x6b\x00"
		.ascii  "\x64\x00\x5e\x00\x58\x00\x52\x00"
		.ascii  "\x4c\x00\x45\x00\x3f\x00\x39\x00"
		.ascii  "\x33\x00\x2c\x00\x26\x00\x20\x00"
		.ascii  "\x1a\x00\x13\x00\x0d\x00\x07\x00"
		.ascii  "\x01\x00\x00\x00"

_096cd8_data:
		.long   _05e890_func

_096cdc_data:
		.long   _05e9b4_jump

_096ce0_data:
		.long   _05e9ec_jump
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05e9ec_jump
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05e9ec_jump
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05e9ec_jump
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05e9ec_jump
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05eb9c_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05ebbc_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05e9ec_jump
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05eb7c_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05ebe0_func
		.long   _05e88c_jump
		.long   _05e88c_jump
		.long   _05ec20_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05e9fc_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05eb64_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05ebf0_func
		.long   _05e88c_jump
		.long   _05e88c_jump
		.long   _05ec18_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05ec60_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05ec84_func
		.long   _05e8b0_func
		.long   _05e9bc_func
		.long   _05ed28_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05ed00_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05ea00_func
		.long   _05e938_func
		.long   _05e9e4_func
		.long   _05e9ec_jump
		.long   _05e8ec_func
		.long   _05e9dc_jump
		.long   _05eb0c_func
		.long   _05e8ec_func
		.long   _05e9dc_jump
		.long   _05eb38_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05ea4c_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05ea4c_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05ea20_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05ea6c_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05ea94_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05eabc_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05eae4_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05e9ec_jump
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05eca8_func
		.long   _05e890_func
		.long   _05e9b4_jump
		.long   _05ecd4_func
		.long   _05e9a4_func
		.long   _05e9f0_func
		.long   _05ec54_func

_096e70_data:
		.ascii  "\x03\x05\x05\x03\x03\x04"

_096e76_data:
		.ascii  "\x00\x03\x05\x00\x05\x01\x04\x02"

_096e7e_data:
		.ascii  "\x03\x04\x02\x03\x02\x00"

_096e84_data:
		.ascii  "\x01\x00\x15\x00\x9c\xff\x08\x00"
		.ascii  "\x01\x00\x00\x00\x12\x00\xa0\x00"
		.ascii  "\x08\x00\x03\x00\x2a\x00\x13\x00"
		.ascii  "\x0e\x00"

_096e9e_data:
		.ascii  "\x01\x00\x15\x00\x9c\xff\x08\x00"
		.ascii  "\x06\x00\x0f\x00\x12\x00\x4a\x01"
		.ascii  "\x0e\x00"

_096eb0_data:
		.ascii  "\x00\x00\x15\x00\x4a\x01\x08\x00"
		.ascii  "\x06\x00\x10\x00\x12\x00\x88\xff"
		.ascii  "\x0e\x00"

_096ec2_data:
		.ascii  "\x00\x00\x15\x00\x40\x01\x08\x00"
		.ascii  "\x01\x00\x00\x00\x12\x00\xf8\xff"
		.ascii  "\x08\x00\x03\x00\x29\x00\x13\x00"
		.ascii  "\x0e\x00"

_096edc_data:
		.ascii  "\x00\x00\x15\x00\x64\x00\x08\x00"
		.ascii  "\x03\x00\x2b\x00\x13\x00\x08\x00"
		.ascii  "\x03\x00\x2c\x00\x13\x00\x0e\x00"

_096ef4_data:
		.ascii  "\x00\x00\x15\x00\xc8\x00\x08\x00"
		.ascii  "\x03\x00\x2f\x00\x13\x00\x08\x00"
		.ascii  "\x03\x00\x30\x00\x13\x00\x11\x00"
		.ascii  "\x12\x00\x14\x00\xf8\xff\x11\x00"
		.ascii  "\x1e\x00\x14\x00\xf0\xff\x11\x00"
		.ascii  "\x2d\x00\x14\x00\xe0\xff\x11\x00"
		.ascii  "\x3c\x00\x14\x00\xc0\xff\x11\x00"
		.ascii  "\x41\x00\x14\x00\x00\x00\x13\x00"
		.ascii  "\x0e\x00"

_096f36_data:
		.ascii  "\x00\x00\x04\x00\x57\x01\x22\x00"
		.ascii  "\x6c\x01\xde\x00\x25\x02\xc8\x00"
		.ascii  "\xcd\x02\xcc\x03\x19\x01\xc6\x01"
		.ascii  "\x6f\x00\xca\x02\x41\x02\x2a\x00"
		.ascii  "\xa9\x00\x43\x03\xbd\x02\x0e\x03"
		.ascii  "\x4f\x03\xd6\x03\xe0\x00\xb5\x01"
		.ascii  "\xcf\x03\x5b\x03\xb1\x03\x3e\x03"
		.ascii  "\xcd\x01\x6b\x02\xa5\x02\x66\x02"
		.ascii  "\x32\x02\xe1\x02\x74\x00\x9f\x01"
		.ascii  "\x7c\x00\xaf\x02\xe6\x01\xf6\x01"
		.ascii  "\x41\x02\x60\x01\x79\x03\x0e\x01"
		.ascii  "\xb8\x00\xb1\x01\xc7\x02\xa7\x00"
		.ascii  "\x27\x02\x94\x02\x7e\x02\x03\x00"
		.ascii  "\x26\x03\x13\x01\xd8\x01\x8b\x01"
		.ascii  "\x81\x01\x53\x02\x69\x02\x1e\x01"
		.ascii  "\xae\x00\x38\x03\x2e\x01\x55\x01"
		.ascii  "\xa2\x01\xf6\x00\xa7\x01\x37\x00"
		.ascii  "\xf9\x01\xef\x03\x01\x00\xa3\x01"
		.ascii  "\x47\x00\x4b\x00\x04\x01\xe6\x03"
		.ascii  "\x6b\x01\x9e\x01\xc9\x00\xc9\x00"
		.ascii  "\xd8\x00\xff\x00\x08\x03\x8e\x03"
		.ascii  "\x9f\x03\xf1\x02\xd8\x01\x20\x02"
		.ascii  "\x24\x00\x85\x00\xd5\x01\xef\x01"
		.ascii  "\x63\x02\x03\x01\x75\x00\xce\x02"
		.ascii  "\x98\x02\x8b\x03\x80\x03\x2b\x00"
		.ascii  "\x36\x02\x0a\x02\x7b\x02\x15\x03"
		.ascii  "\x03\x01\xde\x00\xf1\x00\x57\x01"
		.ascii  "\x43\x02\x88\x00\x74\x02\x1f\x00"
		.ascii  "\xcb\x03\xd9\x00\x3b\x03\x84\x02"
		.ascii  "\xdc\x02\xed\x02\x35\x02\x49\x02"
		.ascii  "\xac\x00\x54\x01\x7a\x03\x4c\x03"
		.ascii  "\x75\x02\xd0\x03\xf7\x03\xed\x03"
		.ascii  "\xf3\x02\x0a\x02\x2e\x01\xdf\x02"
		.ascii  "\x24\x01\x8f\x02\xf8\x01\xb3\x00"
		.ascii  "\x3c\x02\x89\x01\x19\x03\x8e\x01"
		.ascii  "\x9a\x02\x82\x00\x94\x00\x58\x01"
		.ascii  "\xad\x03\x9e\x02\x98\x02\xd6\x02"
		.ascii  "\x9f\x02\xa5\x02\xe2\x02\xfd\x03"
		.ascii  "\xaf\x01\x3f\x02\x81\x01\xef\x03"
		.ascii  "\x0f\x00\xc4\x03\xcf\x01\xf3\x00"
		.ascii  "\x2f\x02\xfa\x01\x81\x02\xd4\x02"
		.ascii  "\x55\x02\x28\x03\xba\x01\x03\x00"
		.ascii  "\x57\x03\xdd\x02\xf2\x03\xd4\x01"
		.ascii  "\x69\x01\xc1\x03\x93\x02\x42\x02"
		.ascii  "\xcb\x02\xe4\x00\x3d\x01\x97\x03"
		.ascii  "\x49\x00\xd4\x03\x73\x02\x53\x00"
		.ascii  "\x63\x03\xe8\x02\xb2\x02\xb3\x03"
		.ascii  "\xf9\x01\x24\x01\xb9\x02\x3d\x01"
		.ascii  "\x6b\x01\x05\x03\xe8\x03\xaf\x03"
		.ascii  "\xfa\x00\xa4\x01\xa7\x03\xad\x01"
		.ascii  "\x5a\x01\x8b\x03\x95\x00\x94\x00"
		.ascii  "\x4a\x01\x9b\x00\x7f\x02\xcc\x03"
		.ascii  "\x13\x01\x66\x00\xeb\x03\xfb\x00"
		.ascii  "\xdd\x00\x57\x00\x1c\x02\x82\x03"
		.ascii  "\x9e\x03\x0f\x01\x75\x02\x93\x03"
		.ascii  "\x9f\x02\x55\x00\x10\x02\x4a\x03"
		.ascii  "\x64\x03\xf4\x02\x74\x02\x30\x02"
		.ascii  "\xe5\x03\xee\x03\x41\x00\x77\x01"
		.ascii  "\xeb\x02\x63\x00\xb9\x02\x5a\x01"
		.ascii  "\x76\x00\x84\x01\x02\x01\x04\x02"
		.ascii  "\x14\x00\xfc\x03\x01\x00\x54\x00"
		.ascii  "\xfd\x00\x2b\x02\xb0\x01\xe1\x00"
		.ascii  "\xd6\x01\x95\x00\xd1\x00\xa9\x01"
		.ascii  "\x09\x00\xdb\x01\xd2\x01\xba\x00"
		.ascii  "\x0a\x00"

_097138_data:
		.ascii  "\x07\x03\x1b\x07\x07\x03\x1b\x03"
		.ascii  "\x03\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x03\x07\x03\x03\x03\x0f"
		.ascii  "\x07\x07\x07\x03\x03\x03\x03\x0f"
		.ascii  "\x0b\x07\x03\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x03\x07\x03\x07\x07"
		.ascii  "\x1b\x07\x07\x03\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x03\x03\x07\x07\x0b\x0b"
		.ascii  "\x03\x07\x03\x03\x0b\x07\x03\x03"
		.ascii  "\x07\x07\x07\x07\x00\x07\x07\x07"
		.ascii  "\x0f\x07\x1f\x07\x07\x03\x03\x03"
		.ascii  "\x03\x03\x03\x1b\x03\x07\x03\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x1b\x03\x03\x03\x07\x0f"
		.ascii  "\x07\x07\x07\x07\x07\x1b\x03\x07"
		.ascii  "\x1b\x07\x07\x07\x07\x07\x07\x0b"
		.ascii  "\x03\x0b\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x07\x07\x07\x07\x07\x07\x07"
		.ascii  "\x07\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x03\x03\x07\x07\x07\x07\x07\x0f"
		.ascii  "\x07\x1b\x07\x07\x03\x03\x03\x03"
		.ascii  "\x07\x03\x03\x03\x03\x03\x03\x07"
		.ascii  "\x03\x07\x03\x07\x03\x03\x03\x03"
		.ascii  "\x04\x04\x07\x03\x07\x07\x03\x07"
		.ascii  "\x07\x1b\x07\x03\x00\x1f\x07\x07"
		.ascii  "\x03\x07\x07\x07\x03\x07\x07\x03"
		.ascii  "\x07\x07\x07\x03\x07\x1b\x1f\x03"
		.ascii  "\x03\x03\x03\x03\x03\x03\x03\x03"
		.ascii  "\x07\x03\x03\x03\x07\x07\x07\x0f"
		.ascii  "\x03\x03\x07\x07\x04\x1b\x04\x07"
		.ascii  "\x07\x07\x03\x03\x03\x03\x07\x07"

_097238_data:
		.ascii  "\x00\x00\x00\x02"
		.fill   0xb
		.ascii  "\x14\x1c\x00\x01\x02\x00\x00\x00"
		.ascii  "\x22"
		.fill   0x12
		.ascii  "\x01\x07\x02"
		.fill   0x5
		.ascii  "\x1e\x0f\x00\x02\x00\x00\x01"
		.fill   0xd
		.ascii  "\x28"
		.fill   0xb
		.ascii  "\x0a"
		.fill   0x5
		.ascii  "\x1e\x36"
		.fill   0xa
		.ascii  "\x28"
		.fill   0x4
		.ascii  "\x1e\x3c\x00\x3c\x28"
		.fill   0x7
		.ascii  "\x14\x00\x3c\x01"
		.fill   0x4
		.ascii  "\x09"
		.fill   0x9
		.ascii  "\x0a\x00\x0b"
		.fill   0x4
		.ascii  "\x1f\x19\x1e"
		.fill   0x6
		.ascii  "\x28\x00\x4b\x00\x00\x00\x32"
		.fill   0x9
		.ascii  "\x50"
		.fill   0x6
		.ascii  "\x3c"
		.fill   0x18
		.ascii  "\x01\x00\x00\x0c"
		.fill   0xf
		.ascii  "\x1e"
		.fill   0x7
		.ascii  "\x2d"
		.fill   0xb
		.ascii  "\x0f\x46"
		.fill   0xa
		.ascii  "\x07\x14"
		.fill   0x4

_097338_data:
		.fill   0x2a
		.ascii  "\x41"
		.fill   0xd
		.ascii  "\x28"
		.fill   0x3f
		.ascii  "\x23"
		.fill   0x10
		.ascii  "\x15"
		.fill   0x3d
		.ascii  "\x28"
		.fill   0x26
		.ascii  "\x1d\x0f"
		.fill   0xb
		.ascii  "\x14"
		.fill   0x4

_097438_data:
		.fill   0x54
		.ascii  "\x2a"
		.fill   0x1b
		.ascii  "\x38"
		.fill   0x7f
		.ascii  "\x78"
		.fill   0x21
		.ascii  "\x89"
		.fill   0x7b
		.ascii  "\xc7"
		.fill   0x4d
		.ascii  "\xee\x00\x17"
		.fill   0x17
		.ascii  "\x46"
		.fill   0x9

_097638_data:
		.ascii  "\x00"

_097639_data:
		.ascii  "\xff"

_09763a_data:
		.ascii  "\x00"

_09763b_data:
		.ascii  "\x7f\x35\x0f\x00\x50\x35\x00\x00"
		.ascii  "\x5a\x35\xff\x00\x5a\x3c\xff\x00"
		.ascii  "\x7f\x35\x05\x00\x73\x37\x03\x00"
		.ascii  "\x32\x35\xff\x00\x50\x35\x08\x00"
		.ascii  "\x37\x35\x0c\x00\x32\x35\xff\x00"
		.ascii  "\x50\x48\x06\x00\x5a\x35\x08\x00"
		.ascii  "\x3c\x41\x01\x00\x3c"

_097670_data:
		.ascii  "\x35"

_097671_data:
		.ascii  "\x07"

_097672_data:
		.ascii  "\x00\x50"

_097674_data:
		.ascii  "\x3a"

_097675_data:
		.ascii  "\x0d"

_097676_data:
		.ascii  "\x00\x50\x36\x04\x00\x50\x35\x1f"
		.ascii  "\x00\x50\x37\x1e\x00\x50"

_097684_data:
		.ascii  "\x3e"

_097685_data:
		.ascii  "\x10"

_097686_data:
		.ascii  "\x00\x50\x37\x15\x00\x41\x35\x16"
		.ascii  "\x00\x50\x31\x17\x00\x50\x3c\x19"
		.ascii  "\x00\x3c\x37\x18\x00\x4b\x35\x4c"
		.ascii  "\x00\x50\x35\xff\x00\x50\x38\xff"
		.ascii  "\x00\x50\x35\x47\x00\x3c\x35\x48"
		.ascii  "\x00\x41\x35\x49\x00\x50\x35\x4a"
		.ascii  "\x00\x50\x3c\x4b\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x35\x68\x00\x2d\x37\x4f"
		.ascii  "\x00\x3c\x36\x50\x00\x3c\x39\x51"
		.ascii  "\x00\x3c\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\x1a\x00\x50\x35\x55"
		.ascii  "\x00\x3c\x35\x5d\x00\x28\x35\x57"
		.ascii  "\x00\x50\x35\x58\x00\x50\x35\x59"
		.ascii  "\x00\x64\x35\x5a\x00\x50"

_0976f4_data:
		.ascii  "\x35"

_0976f5_data:
		.ascii  "\x5b"

_0976f6_data:
		.ascii  "\x00\x3c\x35\x5c\x00\x50\x35\x46"
		.ascii  "\x00\x46\x38\x1b\x00\x50\x33\x05"
		.ascii  "\x00\x50\x39\x60\x00\x50"

_09770c_data:
		.ascii  "\x35"

_09770d_data:
		.ascii  "\x01"

_09770e_data:
		.ascii  "\x00\x5a\x38\x56\x00\x50\x3c\x27"
		.ascii  "\x00\x50\x41\x27\x00\x50\x46\x27"
		.ascii  "\x00\x50\x35\x15\x00\x32\x35\x16"
		.ascii  "\x00\x3c\x35\x20\x00\x1e\x35\x21"
		.ascii  "\x00\x3c\x35\x6a\x00\x50\x35\x63"
		.ascii  "\x00\x50\x35\x6b\x00\x50\x35\x6b"
		.ascii  "\x00\x50\x35\x49\x00\x50\x35\x54"
		.ascii  "\x00\x46\x35\x0c\x00\x28\x35\x0b"
		.ascii  "\x00\x46\x3a\x5e\x00\x50\x33\x5f"
		.ascii  "\x00\x7f\x35\x60\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x35\xff\x00\x50\x35\x69"
		.ascii  "\x00\x2d\x35\x61\x00\x50\x35\x5f"
		.ascii  "\x00\x5f\x35\x15\x00\x50\x35\x16"
		.ascii  "\x00\x50"

_097778_data:
		.ascii  "\x35"

_097779_data:
		.ascii  "\x52"

_09777a_data:
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x54"
		.ascii  "\x00\x50\x35\x33\x00\x5f\x36\x34"
		.ascii  "\x00\x46\x35\x46\x00\x50\x35\x47"
		.ascii  "\x00\x28\x35\x48\x00\x3c\x38\x49"
		.ascii  "\x00\x7f\x35\x4a\x00\x50\x35\x4b"
		.ascii  "\x00\x50\x35\x3d\x00\x50\x35\x3e"
		.ascii  "\x00\x3c\x35\x36\x00\x50\x35\x37"
		.ascii  "\x00\x32\x30\x38\x00\x7f\x35\x4d"
		.ascii  "\x00\x50\x35\x4e\x00\x73\x35\x4f"
		.ascii  "\x00\x64\x35\x32\x00\x2d\x35\x50"
		.ascii  "\x00\x73\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x61"
		.ascii  "\x00\x7f\x35\x62\x00\x50\x35\x63"
		.ascii  "\x00\x50\x37\x64\x00\x50\x35\x65"
		.ascii  "\x00\x50\x35\x66\x00\x50\x35\x47"
		.ascii  "\x00\x46\x37\x46\x00\x46\x31\x47"
		.ascii  "\x00\x46\x35\x67\x00\x50\x35\x4b"
		.ascii  "\x00\x73\x32\x5e\x00\x7f\x33\x48"
		.ascii  "\x00\x50\x35\x49\x00\x50\x39\xff"
		.ascii  "\x00\x50\x35\x4b\x00\x78\x37\x4c"
		.ascii  "\x00\x7f\x35\x4d\x00\x6e\x35\x4e"
		.ascii  "\x00\x50\x35\x50\x00\x50\x38\x4f"
		.ascii  "\x00\x37\x37\x51\x00\x50\x3f\x52"
		.ascii  "\x00\x37\x35\xff\x00\x50\x3e\x54"
		.ascii  "\x00\x2d\x39\x55\x00\x50\x3c\x56"
		.ascii  "\x00\x50\x35\x57\x00\x5a\x35\x58"
		.ascii  "\x00\x7f\x35\xff\x00\x50\x35\x13"
		.ascii  "\x00\x25\x35\x0f\x00\x41\x35\x24"
		.ascii  "\x00\x5a\x35\x22\x00\x50\x35\x23"
		.ascii  "\x00\x50\x35\x62\x00\x2d\x37\x62"
		.ascii  "\x00\x2d\x35\xff\x00\x50\x35\x49"
		.ascii  "\x00\x50\x32\x4a\x00\x50\x41\x4b"
		.ascii  "\x00\x50\x35\x67\x00\x64\x37\x4c"
		.ascii  "\x00\x1e\x3b\x4d\x00\x28\x35\xff"
		.ascii  "\x00\x50\x35\x4f\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\x51\x00\x50\x35\xff"
		.ascii  "\x00\x50\x3d\x53\x00\x78\x35\x54"
		.ascii  "\x00\x2d\x35\x55\x00\x50\x35\x56"
		.ascii  "\x00\x50\x35\x33\x00\x5f\x35\x57"
		.ascii  "\x00\x50\x35\x58\x00\x50\x35\x59"
		.ascii  "\x00\x55\x35\x5a\x00\x37\x3c\x48"
		.ascii  "\x00\x46\x3c\x48\x00\x46\x35\x49"
		.ascii  "\x00\x50\x3c\x33\x00\x46\x35\xff"
		.ascii  "\x00\x50\x35\x3f\x00\x6e\x35\x4c"
		.ascii  "\x00\x50\x35\x4d\x00\x37"

_0978e0_data:
		.ascii  "\x35"

_0978e1_data:
		.ascii  "\x4e"

_0978e2_data:
		.ascii  "\x00\x50\x35\x4f\x00\x50\x35\x50"
		.ascii  "\x00\x50\x32\xff\x00\x50\x35\x52"
		.ascii  "\x00\x50\x37\x53\x00\x50\x30\x54"
		.ascii  "\x00\x5a\x2e\x55\x00\x50\x32\xff"
		.ascii  "\x00\x50\x35\x56\x00\x50\x35\x46"
		.ascii  "\x00\x28\x35\x47\x00\x28\x35\x48"
		.ascii  "\x00\x50\x35\x49\x00\x50\x35\x4a"
		.ascii  "\x00\x37\x35\x4b\x00\x50\x35\x4c"
		.ascii  "\x00\x50\x35\x4d\x00\x50\x35\x4e"
		.ascii  "\x00\x64\x35\x4f\x00\x7f\x35\x50"
		.ascii  "\x00\x50\x35\x51\x00\x50\x32\x25"
		.ascii  "\x00\x41\x35\x26\x00\x3c\x35\x0b"
		.ascii  "\x00\x50\x25\x68\x00\x1e\x3c\xff"
		.ascii  "\x00\x7f\x35\x08\x00\x50\x35\x64"
		.ascii  "\x00\x50\x38\x01\x00\x50\x35\x35"
		.ascii  "\x00\x32\x35\x3c\x00\x2d\x35\x4c"
		.ascii  "\x00\x50\x35\x62\x00\x64\x35\x29"
		.ascii  "\x00\x28\x35\x39\x00\x50\x35\x28"
		.ascii  "\x00\x64\x3c\x27\x00\x69\x35\x62"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\xff"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x4c"
		.ascii  "\x00\x7f\x3c\x60\x00\x50\x35\x2a"
		.ascii  "\x00\x50\x35\xff\x00\x50\x35\x2b"
		.ascii  "\x00\x50\x35\xff\x00\x50\x2e\x5a"
		.ascii  "\x00\x5a\x35\x5c\x00\x50\x35\x5f"
		.ascii  "\x00\x28\x35\x5e\x00\x32\x35\x5e"
		.ascii  "\x00\x50\x35\x52\x00\x50\x35\x53"
		.ascii  "\x00\x50\x32\x54\x00\x46\x34\x4d"
		.ascii  "\x00\x50\x38\x4a\x00\x50\x32\x4a"
		.ascii  "\x00\x50\x35\x5a\x00\x50\x35\x59"
		.ascii  "\x00\x50\x35\x55\x00\x50\x30\x56"
		.ascii  "\x00\x50\x35\x57\x00\x50\x39\x58"
		.ascii  "\x00\x50\x32\x4c\x00\x50\x3c\xff"
		.ascii  "\x00\x7f\x3c\xff\x00\x7f\x35\x33"
		.ascii  "\x00\x7f\x3c\x19\x00\x3c\x41\x15"
		.ascii  "\x00\x32\x41\x16\x00\x3c\x35\x5d"
		.ascii  "\x00\x37\x35\x5e\x00\x7f\x35\x5e"
		.ascii  "\x00\x7f"

_097a0c_data:
		.ascii  "\x35"

_097a0d_data:
		.ascii  "\x5c"

_097a0e_data:
		.ascii  "\x00\x28\x37\x5f\x00\x7f\x35\x37"
		.ascii  "\x00\x50\x46\x61\x00\x37\x3c\x61"
		.ascii  "\x00\x32\x3c\x67\x00\x50\x3a\x65"
		.ascii  "\x00\x50\x35\x66\x00\x50\x35\x13"
		.ascii  "\x00\x50\x3c\xff\x00\x7f\x3c\xff"
		.ascii  "\x00\x7f"

_097a38_data:
		.fill   0x4
		.ascii  "\x01"
		.fill   0x14
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x00"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x00\x00\x01\x00\x01"
		.fill   0x7
		.ascii  "\x01\x01\x01\x01\x01\x01\x00\x00"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x00"
		.ascii  "\x00\x00\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01"
		.fill   0x6
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01"
		.fill   0x6
		.ascii  "\x01\x01\x01\x01\x01\x01\x00\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01"
		.fill   0x4
		.ascii  "\x01\x00\x01\x00\x01\x01\x01\x01"
		.ascii  "\x00\x01\x00\x00\x01\x01\x01\x01"
		.ascii  "\x01\x00\x00\x01\x00\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01"
		.fill   0x4
		.ascii  "\x01\x01\x00\x01\x01\x01\x01\x01"
		.ascii  "\x01\x01\x00\x01\x01"

_097b38_data:
		.fill   0x12

_097b4a_data:
		.fill   0xc

_097b56_data:
		.ascii  "\x00\x00"

_097b58_data:
		.ascii  "\x7f"
		.fill   0x5
		.ascii  "\x01"
		.fill   0x4
		.ascii  "\x02\x04\x05\x07\x09\x0b\x0c"

_097b6a_data:
		.ascii  "\x00\x00"

_097b6c_data:
		.ascii  "\x00"

_097b6d_data:
		.ascii  "\x00\x00\x00"

_097b70_data:
		.ascii  "\x00\x00"

_097b72_data:
		.ascii  "\x01\x00"

_097b74_data:
		.ascii  "\xff\xff"

_097b76_data:
		.fill   0x4
		.ascii  "\x01\x00\x01\x00\xfd\xff\x3c\x00"
		.ascii  "\x00\x00\x02\x00\x02\x00\xfe\xff"
		.fill   0x4
		.ascii  "\x01\x00\x03\x00\xfc\xff\x1e\x00"
		.ascii  "\x00\x00\x01\x00\x02\x00\xfc\xff"
		.ascii  "\x1e\x00\x00\x00\x01\x00\x02\x00"
		.ascii  "\xfd\xff\x2a\x00\x00\x00\x01\x00"
		.ascii  "\x01\x00\xfc\xff\x50\x00\x00\x00"

_097bb6_data:
		.ascii  "\x01\x01\x00\x00\x03\xff\x00\x00"
		.ascii  "\x01\x01"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x1d
		.ascii  "\x09\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x03\xff\x00\x00\x05"
		.fill   0x5
		.ascii  "\x01"
		.fill   0x19
		.ascii  "\x02\x01\x00\x00\x07\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x08\x00\x00\x00"
		.ascii  "\x01\xff"
		.fill   0x4
		.ascii  "\x01"
		.fill   0x15
		.ascii  "\x03\xff\x00\x00\x04\xff\x00\x00"
		.ascii  "\x06\x01\x00\x00\x09\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x09"
		.fill   0x7
		.ascii  "\x09\x00\x01"
		.fill   0xb
		.ascii  "\x01\x00\x02\x00\x03\x00\x04\x00"
		.ascii  "\x00\x00\x06\x00\x06\x00\x00\x00"

_097c78_data:
		.ascii  "\x00\x00\x01\x02\x02\x00\x01\x02"
		.ascii  "\x02\x02\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x02\x02\x02\x00\x00\x01\x00"
		.ascii  "\x00\x01\x02\x00\x02\x02\x00\x00"
		.ascii  "\x02\x02"
		.fill   0x4
		.ascii  "\x02\x02"
		.fill   0x4
		.ascii  "\x02\x00\x02\x02\x02\x02\x00\x00"
		.ascii  "\x02\x00\x00\x02\x02\x02\x02\x02"

_097cb4_data:
		.ascii  "\x01\x01\x01\x01\x01\x04\x04\x01"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x04"
		.ascii  "\x01\x01\x01\x01\x01\x01\x01\x01"
		.ascii  "\x02\x0a\x01\x02\x01\x01\x01\x01"
		.ascii  "\x01\x01\x01\x02\x04\x05\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x03\x01\x01"
		.ascii  "\x01\x01\x01\x01\x01\x02\x03\x01"
		.ascii  "\x01\x01\x01\x01"

_097cf0_data:
		.ascii  "\x20\x01"

_097cf2_data:
		.ascii  "\x02\x00"

_097cf4_data:
		.ascii  "\x00\x00"

_097cf6_data:
		.fill   0x95a
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x40\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x58\x00\x04\x00\x04\x00\x04\x00"
		.ascii  "\x6e\x00\x04"
		.fill   0x5
		.ascii  "\x0f\x00\x03"
		.fill   0x5
		.ascii  "\x4b\x00\x02"
		.fill   0x94d
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\xc0\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x945
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xa8\x00\x04\x00\x04\x00\x05\x00"
		.ascii  "\x46\x00\x04"
		.fill   0x5
		.ascii  "\x32\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x40\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x01"
		.fill   0x95d
		.ascii  "\x9f\x00\x04"
		.fill   0x5
		.ascii  "\x81\x00\x02"
		.fill   0x955
		.ascii  "\x0c\x00\x06"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x38\x00\x06"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x40\x00\x02"
		.fill   0x5
		.ascii  "\x14\x00\x04"
		.fill   0x5
		.ascii  "\x1c\x00\x06"
		.fill   0x5
		.ascii  "\x10\x00\x08"
		.fill   0x915
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x54\x00\x04"
		.fill   0x5
		.ascii  "\xcc\x00\x02"
		.fill   0x955
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xb1\x00\x04"
		.fill   0x5
		.ascii  "\x6f\x00\x02"
		.fill   0x955
		.ascii  "\xb3"
		.fill   0x5
		.ascii  "\x03\x00\x14\x00\x00\x00\x10\x00"
		.ascii  "\x01\x00\x01\x00\x00\x00\x20\x00"
		.ascii  "\x01\x00\x28"
		.fill   0x5
		.ascii  "\x03"
		.fill   0x941
		.ascii  "\xb7\x00\x04\x00\x04\x00\x04\x00"
		.ascii  "\x05\x00\x08"
		.fill   0x5
		.ascii  "\x15\x00\x06"
		.fill   0x5
		.ascii  "\x4e\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x93d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x6d\x00\x06"
		.fill   0x5
		.ascii  "\xb2\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\xd5\x00\x04"
		.fill   0x5
		.ascii  "\x4b\x00\x02"
		.fill   0x955
		.ascii  "\xc8\x00\x06"
		.fill   0x5
		.ascii  "\x57\x00\x04"
		.fill   0x5
		.ascii  "\x01\x00\x02"
		.fill   0x94d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d
		.ascii  "\x20\x01\x02"
		.fill   0x95d

_0baf70_data:
		.fill   0x5
		.ascii  "\x0e\x09"
		.fill   0x8
		.ascii  "\x0f"
		.fill   0x8
		.ascii  "\x04\x00\x00\x02"
		.fill   0x7
		.ascii  "\x03\x0a\x0c"
		.fill   0x7
		.ascii  "\x0b"
		.fill   0x7
		.ascii  "\x06\x0d"
		.fill   0x5

_0bafac_data:
		.ascii  "\x00\x00"

_0bafae_data:
		.ascii  "\x00\x00"

_0bafb0_data:
		.fill   0x31e
		.ascii  "\x46\x00\x01\x00\x00\x00\x35\x00"
		.ascii  "\x40\x00\x01\x00\x00\x00\x59\x00"
		.ascii  "\x24\x00\x01\x00\x00\x00\x79\x00"
		.ascii  "\x31\x00\x01\x00\x00\x00\x95\x00"
		.ascii  "\x47\x00\x01\x00\x00\x00\xc3\x00"
		.ascii  "\x3b\x00\x01\x00\x00\x00\xef\x00"
		.ascii  "\x18\x00\x01\x00\x00\x00\x17\x01"
		.ascii  "\x00\x00\x01\x00\x00\x00\x48\x01"
		.ascii  "\x47\x00\x01\x00\x00\x00\x2b\x01"
		.ascii  "\xaf\x00\x02\x00\x00\x00\xaf\x00"
		.ascii  "\xaa\x00\x02\x00\x00\x00\x26\x00"
		.ascii  "\xae\x00\x02\x00\x00\x00\x06\x01"
		.ascii  "\xb9\x00\x03\x00\x00\x00\x6c\x01"
		.ascii  "\x94\x00\x03"
		.fill   0x33
		.ascii  "\x40\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x40\x00\x78\x00\x01\x00\x00\x00"
		.ascii  "\xc0\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\xc0\x00\x78\x00\x03"
		.fill   0xd
		.ascii  "\x99"
		.fill   0x5
		.ascii  "\x28\x01"
		.fill   0x6
		.ascii  "\x28\x01\x35"
		.fill   0x5
		.ascii  "\x28\x01\x8d"
		.fill   0x55d
		.ascii  "\xaa\x00\x61\x00\x01\x00\x00\x00"
		.ascii  "\xea\x00\x4b\x00\x01\x00\x00\x00"
		.ascii  "\x2a\x01\x88\x00\x01\x00\x00\x00"
		.ascii  "\x6a\x01\x88\x00\x01\x00\x00\x00"
		.ascii  "\x2a\x00\x79\x00\x01\x00\x00\x00"
		.ascii  "\x6a\x00\x75\x00\x01\x00\x00\x00"
		.ascii  "\xaa\x00\xe3\x00\x02\x00\x00\x00"
		.ascii  "\xd8\x00\xe5\x00\x02\x00\x00\x00"
		.ascii  "\x32\x01\xe1\x00\x02\x00\x00\x00"
		.ascii  "\x72\x01\x6b\x00\x02\x00\x00\x00"
		.ascii  "\x32\x00\x7f\x00\x02\x00\x00\x00"
		.ascii  "\x52\x00\xcd\x00\x02\x00\x00\x00"
		.ascii  "\x8a\x00\xdd\x00\x02\x00\x00\x00"
		.ascii  "\x68\x01\xe1\x00\x03\x00\x00\x00"
		.ascii  "\x28\x00\x0f\x01\x03"
		.fill   0x52b
		.ascii  "\x3f\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\x70\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\xff\x00\x8f\x00\x01\x00\x00\x00"
		.ascii  "\x30\x01\x8f\x00\x01"
		.fill   0x1c3
		.ascii  "\x06\x00\x42\x00\x01\x00\x00\x00"
		.ascii  "\x08\x01\x39\x00\x01"
		.fill   0x4f3
		.ascii  "\x8a\x00\x8d\x00\x01\x00\x00\x00"
		.ascii  "\xca\x00\x93\x00\x01\x00\x00\x00"
		.ascii  "\x0a\x01\x97\x00\x01"
		.fill   0x8d
		.ascii  "\x7b\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\x89\x00\x01\x00\x00\x00\x80\x00"
		.ascii  "\x83\x00\x01\x00\x00\x00\xc0\x00"
		.ascii  "\x8d\x00\x01"
		.fill   0x4
		.ascii  "\x01\xa1\x00\x01"
		.fill   0x5
		.ascii  "\xb9\x00\x02\x00\x00\x00\x40\x00"
		.ascii  "\xa6\x00\x02\x00\x00\x00\x80\x00"
		.ascii  "\xa4\x00\x02\x00\x00\x00\xc0\x00"
		.ascii  "\xa4\x00\x02"
		.fill   0x4
		.ascii  "\x01\xb0\x00\x02"
		.fill   0x55
		.ascii  "\x93\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\xad\x00\x01\x00\x00\x00\x80\x00"
		.ascii  "\x84\x00\x01\x00\x00\x00\xc0\x00"
		.ascii  "\x70\x00\x01"
		.fill   0x4
		.ascii  "\x01\x72\x00\x01\x00\x00\x00\x40"
		.ascii  "\x01\x7f\x00\x01"
		.fill   0x5
		.ascii  "\xde\x00\x04\x00\x00\x00\x40\x00"
		.ascii  "\xec\x00\x04\x00\x00\x00\x80\x00"
		.ascii  "\xdb\x00\x04\x00\x00\x00\xc0\x00"
		.ascii  "\xe3\x00\x04"
		.fill   0x4
		.ascii  "\x01\xe9\x00\x04\x00\x00\x00\x40"
		.ascii  "\x01\xe7\x00\x04"
		.fill   0x4a5
		.ascii  "\x55\x00\x01\x00\x00\x00\x40\x00"
		.ascii  "\x52\x00\x01\x00\x00\x00\x93\x00"
		.ascii  "\x2c\x00\x01\x00\x00\x00\xd3\x00"
		.ascii  "\x2c\x00\x01\x00\x00\x00\x4c\x01"
		.ascii  "\x60\x00\x01"
		.fill   0x5
		.ascii  "\xd8\x00\x02\x00\x00\x00\x40\x00"
		.ascii  "\xd0\x00\x02\x00\x00\x00\x80\x00"
		.ascii  "\xd7\x00\x02\x00\x00\x00\xc0\x00"
		.ascii  "\xec\x00\x02"
		.fill   0x4
		.ascii  "\x01\xe3\x00\x02\x00\x00\x00\x40"
		.ascii  "\x01\xe1\x00\x02"
		.fill   0x4ab
		.ascii  "\x43\x00\xb9\x00\x01\x00\x00\x00"
		.ascii  "\x73\x00\xa2\x00\x01\x00\x00\x00"
		.ascii  "\xd3\x00\xa6\x00\x01\x00\x00\x00"
		.ascii  "\x03\x01\x75\x00\x01\x00\x00\x00"
		.ascii  "\x43\x01\x6f\x00\x01\x00\x00\x00"
		.ascii  "\x59\x01\xab\x00\x01"
		.fill   0x73
		.ascii  "\x19\x00\x69\x00\x01\x00\x00\x00"
		.ascii  "\xa2\x00\xb6\x00\x01\x00\x00\x00"
		.ascii  "\xd6\x00\xa8\x00\x01\x00\x00\x00"
		.ascii  "\x4a\x01\xad\x00\x01"
		.fill   0x5
		.ascii  "\x0a\x01\x02\x00\x00\x00\x20\x00"
		.ascii  "\xe3\x00\x02\x00\x00\x00\x41\x00"
		.ascii  "\x83\x00\x02\x00\x00\x00\x54\x00"
		.ascii  "\xfb\x00\x02\x00\x00\x00\xa4\x00"
		.ascii  "\xea\x00\x02\x00\x00\x00\xd8\x00"
		.ascii  "\x00\x01\x02\x00\x00\x00\xef\x00"
		.ascii  "\xad\x00\x02\x00\x00\x00\x1c\x01"
		.ascii  "\x10\x01\x02\x00\x00\x00\x58\x01"
		.ascii  "\xfe\x00\x02"
		.fill   0x35b

_0bd52c_data:
		.ascii  "\x00\x00\x00\x01\x03\x05\x07"
		.ascii   "\t\n\n\n\t"
		.ascii  "\x07\x05\x03\x01"

_0bd53c_data:
		.fill   0x4

_0bd540_data:
		.ascii  "\x04\x00\x02\x00\x00\x00\xfe\xff"
		.ascii  "\xfc\xff\x02\x00\x00\x00\xfe\xff"

_0bd550_data:
		.ascii  "\x00\x00\x02\x00\x04\x00\x02\x00"
		.ascii  "\x00\x00\xfe\xff\xfc\xff\xfe\xff"

_0bd560_data:
		.fill   0x4

_0bd564_data:
		.fill   0x4

_0bd568_data:
		.fill   0x4

_0bd56c_data:
		.ascii  "\x00\x00"

_0bd56e_data:
		.ascii  "\x00\x00"

_0bd570_data:
		.fill   0x4

_0bd574_data:
		.ascii  "\x00\x00"

_0bd576_data:
		.ascii  "\x00\x00"

_0bd578_data:
		.fill   0x4

_0bd57c_data:
		.ascii  "\x00\x00"

_0bd57e_data:
		.ascii  "\x00\x00"

_0bd580_data:
		.fill   0x4

_0bd584_data:
		.ascii  "\x00\x00"

_0bd586_data:
		.ascii  "\x00\x00"

_0bd588_data:
		.fill   0x4

_0bd58c_data:
		.long   _07bcae_jump

_0bd590_data:
		.long   _07bcae_jump

_0bd594_data:
		.long   _07bcae_jump

_0bd598_data:
		.fill   0x4

_0bd59c_data:
		.ascii  "\x20\x00\x00\x00"

_0bd5a0_data:
		.fill   0x4

_0bd5a4_data:
		.fill   0x4

_0bd5a8_data:
		.ascii  "\x01\x00\x00\x00"

_0bd5ac_data:
		.fill   0x4

_0bd5b0_data:
		.fill   0x4

_0bd5b4_data:
		.fill   0x4

_0bd5b8_data:
		.ascii  "\x00"

_0bd5b9_data:
		.ascii  "\x00\x00\x00"

_0bd5bc_data:
		.fill   0xc
		.ascii  "\x01"
		.fill   0xd

_0bd5d6_data:
		.fill   0xc
		.ascii  "\x02\x00\x00\x00\x01"
		.fill   0x15
		.ascii  "\x02"

_0bd5fd_data:
		.ascii  "\x00\x00\x00\x02"
		.fill   0x15
		.ascii  "\x03\x00\x00\x00\x03"
		.fill   0x15
		.ascii  "\x02\x00\x00\x00\x04"
		.fill   0x9

_0bd63e_data:
		.fill   0x186

_0bd7c4_data:
		.ascii  "\x61"

_0bd7c5_data:
		.ascii  "\x00\x01\x00\x00"
		.long   _0e5e30_data

_0bd7cd_data:
		.fill   0x4
		.ascii  "\x09\x01\x01\x0b\x06\x04\x05\x05"
		.ascii  "\x05\x02\x03\xff\xff\x07\x08\x06"
		.ascii  "\x08\x01\xff"

_0bd7e4_data:
		.fill   0x4

_0bd7e8_data:
		.fill   0x4

_0bd7ec_data:
		.fill   0x4

_0bd7f0_data:
		.fill   0x4

_0bd7f4_data:
		.fill   0x4

_0bd7f8_data:
		.fill   0x4

_0bd7fc_data:
		.fill   0x4

_0bd800_data:
		.fill   0x4

_0bd804_data:
		.fill   0x4

_0bd808_data:
		.fill   0xc

_0bd814_data:
		.ascii  "\x00\x00"

_0bd816_data:
		.ascii  "\x00"

_0bd817_data:
		.ascii  "\x00"

_0bd818_data:
		.ascii  "\x00"

_0bd819_data:
		.fill   0x4

_0bd81d_data:
		.ascii  "\x00\x00"

_0bd81f_data:
		.ascii  "\x00"

_0bd820_data:
		.ascii  "\x00"

_0bd821_data:
		.ascii  "\xee\x1c\x08"

_0bd824_data:
		.fill   0x4
		.long   _0c106c_data
		.long   _0c1071_data
		.long   _0c1076_data
		.long   _0c107b_data
		.long   _0c107f_data
		.long   _0c1084_data
		.long   _0c1089_data
		.long   _0c108d_data
		.long   _0c1093_data
		.long   _0c1098_data
		.long   _0c109c_data
		.long   _0c10a2_data
		.long   _0c10a8_data
		.long   _0c10ae_data
		.long   _0c10b3_data
		.long   _0c10b9_data
		.long   _0c10bd_data
		.long   _0c10c1_data
		.long   _0c10c5_data
		.long   _0c10c8_data
		.long   _0c10cb_data
		.long   _0c10ce_data
		.long   _0c10d2_data

_0bd884_data:
		.fill   0x4

_0bd888_data:
		.fill   0x4

_0bd88c_data:
		.ascii  "\x14\x00\x00\x00"

_0bd890_data:
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x02\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x02"
		.fill   0x3f

_0bd8e0_data:
		.long   _0bd890_data

_0bd8e4_data:
		.fill   0x4

_0bd8e8_data:
		.fill   0x14

_0bd8fc_data:
		.fill   0x14

_0bd910_data:
		.fill   0x4

_0bd914_data:
		.fill   0x1a

_0bd92e_data:
		.fill   0x4

_0bd932_data:
		.fill   0x1a

_0bd94c_data:
		.fill   0x14

_0bd960_data:
		.fill   0x14

_0bd974_data:
		.fill   0x4

_0bd978_data:
		.fill   0x1a

_0bd992_data:
		.fill   0x4

_0bd996_data:
		.fill   0x1a

_0bd9b0_data:
		.fill   0x14

_0bd9c4_data:
		.fill   0x14

_0bd9d8_data:
		.fill   0x14

_0bd9ec_data:
		.fill   0x14

_0bda00_data:
		.fill   0x14

_0bda14_data:
		.ascii  "\xf8\x2a\x00\x00\xf8\x2a\x00\x00"
		.ascii  "\xf8\x2a\x00\x00\xf8\x2a\x00\x00"
		.ascii  "\xe8\x03\x00\x00"

_0bda28_data:
		.fill   0x14

_0bda3c_data:
		.fill   0x4

_0bda40_data:
		.fill   0x1a

_0bda5a_data:
		.fill   0x14

_0bda6e_data:
		.fill   0x14

_0bda82_data:
		.fill   0x14

_0bda96_data:
		.fill   0x4

_0bda9a_data:
		.fill   0x1a

_0bdab4_data:
		.fill   0x4

_0bdab8_data:
		.fill   0x3bc

_0bde74_data:
		.fill   0x4

_0bde78_data:
		.fill   0x1e

_0bde96_data:
		.fill   0x18

_0bdeae_data:
		.fill   0x24

_0bded2_data:
		.fill   0x19

_0bdeeb_data:
		.fill   0x2b

_0bdf16_data:
		.fill   0x220

_0be136_data:
		.ascii  "\x01\x00\x00\x00\x03\x00\x00\x00"
		.ascii  "\x05\x00\x00\x00\x07\x00\x00\x00"
		.ascii  "\xc2\x00\x00\x00\xc6\x00\x00\x00"
		.ascii  "\xca\x00\x00\x00\xce\x00\x00\x00"

_0be156_data:
		.fill   0x5

_0be15b_data:
		.fill   0x4

_0be15f_data:
		.fill   0x4

_0be163_data:
		.fill   0x4

_0be167_data:
		.fill   0x4

_0be16b_data:
		.fill   0x4

_0be16f_data:
		.fill   0x4

_0be173_data:
		.fill   0x4

_0be177_data:
		.fill   0x4

_0be17b_data:
		.fill   0x4

_0be17f_data:
		.fill   0x4

_0be183_data:
		.fill   0x4

_0be187_data:
		.fill   0x4

_0be18b_data:
		.fill   0x4

_0be18f_data:
		.fill   0x4

_0be193_data:
		.fill   0x4

_0be197_data:
		.fill   0x4

_0be19b_data:
		.fill   0x4

_0be19f_data:
		.fill   0x13c

_0be2db_data:
		.ascii  "\xff\xff\xff\xff"

_0be2df_data:
		.fill   0x4

_0be2e3_data:
		.fill   0x56

_0be339_data:
		.fill   0x4

_0be33d_data:
		.ascii  "\x00\x00"

_0be33f_data:
		.fill   0x3c

_0be37b_data:
		.fill   0x4

_0be37f_data:
		.fill   0x3c

_0be3bb_data:
		.fill   0x4

_0be3bf_data:
		.ascii  "\x00\x00"

_0be3c1_data:
		.fill   0x3e

_0be3ff_data:
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"
		.ascii  "\xff\xff\xff\xff\xff\xff\xff\xff"

_0be40f_data:
		.ascii  "\x00"

_0be410_data:
		.fill   0xff

_0be50f_data:
		.fill   0xff

_0be60e_data:
		.fill   0x4

_0be612_data:
		.fill   0x20

_0be632_data:
		.fill   0x8

_0be63a_data:
		.fill   0x4

_0be63e_data:
		.fill   0x24

_0be662_data:
		.fill   0x4

_0be666_data:
		.fill   0x5

_0be66b_data:
		.ascii  "\x00\x00\x00"

_0be66e_data:
		.fill   0x4

_0be672_data:
		.fill   0x4

_0be676_data:
		.ascii  "\x00\x00"

_0be678_data:
		.fill   0x4

_0be67c_data:
		.ascii  "\x00\x00"

_0be67e_data:
		.fill   0x4

_0be682_data:
		.fill   0x4

_0be686_data:
		.fill   0x4

_0be68a_data:
		.fill   0x4

_0be68e_data:
		.fill   0x4

_0be692_data:
		.fill   0x4

_0be696_data:
		.ascii  "\x00\x00"

_0be698_data:
		.fill   0x3c

_0be6d4_data:
		.ascii  "\x00"

_0be6d5_data:
		.fill   0x2f

_0be704_data:
		.long   _0c10d8_data
		.long   _0c10fe_data
		.long   _0c111d_data
		.long   _0c1137_data
		.long   _0c115f_data
		.long   _0c1171_data
		.long   _0c118b_data
		.long   _0c119d_data
		.long   _0c11ae_data
		.long   _0c11d7_data
		.long   _0c1204_data
		.long   _0c1213_data
		.long   _0c1228_data
		.long   _0c1240_data
		.long   _0c1254_data
		.long   _0c1266_data
		.long   _0c1281_data
		.long   _0c1290_data
		.long   _0c129e_data
		.long   _0c12ac_data

_0be754_data:
		.fill   0x14

_0be768_data:
		.fill   0x4

_0be76c_data:
		.fill   0xc

_0be778_data:
		.fill   0x4

_0be77c_data:
		.fill   0x4

_0be780_data:
		.fill   0x4

_0be784_data:
		.fill   0x4

_0be788_data:
		.fill   0x4

_0be78c_data:
		.fill   0x4

_0be790_data:
		.fill   0xc

_0be79c_data:
		.fill   0x20

_0be7bc_data:
		.fill   0xc

_0be7c8_data:
		.fill   0x24

_0be7ec_data:
		.fill   0x4

_0be7f0_data:
		.fill   0x5

_0be7f5_data:
		.ascii  "\x00\x00\x00"

_0be7f8_data:
		.fill   0x4

_0be7fc_data:
		.fill   0x4

_0be800_data:
		.fill   0x4

_0be804_data:
		.fill   0x4

_0be808_data:
		.fill   0x8

_0be810_data:
		.fill   0x4

_0be814_data:
		.fill   0x4

_0be818_data:
		.ascii  "\x00\x00"

_0be81a_data:
		.long   _0bf82a_data

_0be81e_data:
		.fill   0x4

_0be822_data:
		.fill   0x4

_0be826_data:
		.fill   0x1004

_0bf82a_data:
		.fill   0x4

_0bf82e_data:
		.fill   0x4

_0bf832_data:
		.ascii  "\x00\x00"

_0bf834_data:
		.fill   0x4

_0bf838_data:
		.fill   0x4

_0bf83c_data:
		.fill   0x4

_0bf840_data:
		.fill   0x4

_0bf844_data:
		.fill   0x50

_0bf894_data:
		.fill   0x4

_0bf898_data:
		.fill   0x4

_0bf89c_data:
		.fill   0x4

_0bf8a0_data:
		.fill   0x4

_0bf8a4_data:
		.fill   0x3c

_0bf8e0_data:
		.fill   0x50

_0bf930_data:
		.fill   0x4

_0bf934_data:
		.fill   0x4

_0bf938_data:
		.fill   0x4

_0bf93c_data:
		.fill   0x4

_0bf940_data:
		.fill   0x4

_0bf944_data:
		.long   _0862c2_func

_0bf948_data:
		.long   _0862c2_func

_0bf94c_data:
		.long   _087840_func

_0bf950_data:
		.fill   0x4

_0bf954_data:
		.fill   0x4

_0bf958_data:
		.fill   0x8
		.ascii  "\x02\x00\x00\x00\x01\x00\x00\x00"
		.ascii  "\x03"
		.fill   0x13

_0bf97c_data:
		.fill   0x4

_0bf980_data:
		.fill   0x4

_0bf984_data:
		.ascii  "\x01\x00\x00\x00\x05\x00\x00\x00"
		.ascii  "\x09"
		.fill   0x13

_0bf9a0_data:
		.ascii  "\x50\x46\x00\x00"

_0bf9a4_data:
		.ascii  "\x10\x0e\x00\x00"

_0bf9a8_data:
		.ascii  "\x01\x00\x00\x00"

_0bf9ac_data:
		.ascii  "\x45\x53\x54"
		.fill   0x1c

_0bf9cb_data:
		.ascii  "\x45\x44\x54"
		.fill   0x1c
		.long   _0bf9ac_data

_0bf9ee_data:
		.long   _0bf9cb_data

_0bf9f2_data:
		.ascii  "\x01"
		.fill   0x5

_0bf9f8_data:
		.ascii  "\x01\x00\x00\x00"

_0bf9fc_data:
		.ascii  "\x10\x00\x00\x00"

_0bfa00_data:
		.long   _087232_jump

_0bfa04_data:
		.long   _087232_jump

_0bfa08_data:
		.ascii  "\x7f\x12\x00\x00"

_0bfa0c_data:
		.ascii  "\x11\x00\x00\x00"

_0bfa10_data:
		.fill   0x4

_0bfa14_data:
		.fill   0x4

_0bfa18_data:
		.string "/michel ancel/"
		.ascii  "\x00"

_0bfa28_data:
		.string "/frederic houde/"
		.ascii  "\x00\x00\x00"

_0bfa3c_data:
		.string "/alexandra steible/"

_0bfa50_data:
		.string "/serge hascoet/"

_0bfa60_data:
		.string "/bruno bouvret/"

_0bfa70_data:
		.string "/gunther galipot/"
		.ascii  "\x00\x00"

_0bfa84_data:
		.string "/sacha gentilhomme/"

_0bfa98_data:
		.string "/michael guez/"
		.ascii  "\x00"

_0bfaa8_data:
		.string "/christophe thibaut/"
		.ascii  "\x00\x00\x00"

_0bfac0_data:
		.string "/kamal aitmihoub/"
		.ascii  "\x00\x00"

_0bfad4_data:
		.string "/david gilson/"
		.ascii  "\x00"

_0bfae4_data:
		.string "/sophie esturgie/"
		.ascii  "\x00\x00"

_0bfaf8_data:
		.string "/jacques exertie/"
		.ascii  "\x00\x00"

_0bfb0c_data:
		.string "/gregoire pons/"

_0bfb1c_data:
		.string "/veronique rondello/"
		.ascii  "\x00\x00\x00"

_0bfb34_data:
		.string "/beatrice sauterau/"

_0bfb48_data:
		.string "/philippe vindolet"
		.ascii  "\x00"

_0bfb5c_data:
		.string "/christian volckman/"
		.ascii  "\x00\x00\x00"

_0bfb74_data:
		.string "/eric pelatan/"
		.ascii  "\x00"

_0bfb84_data:
		.string "/sylvaine jenny/"
		.ascii  "\x00\x00\x00"

_0bfb98_data:
		.string "/jean christophe alessandri/"
		.ascii  "\x00\x00\x00"

_0bfbb8_data:
		.string "/sophie ancel/"
		.ascii  "\x00"

_0bfbc8_data:
		.string "/olivier bechard/"
		.ascii  "\x00\x00"

_0bfbdc_data:
		.string "/nicolas bocquillon/"
		.ascii  "\x00\x00\x00"

_0bfbf4_data:
		.string "/jean marc geffroy/"

_0bfc08_data:
		.string "/laurent rettig/"
		.ascii  "\x00\x00\x00"

_0bfc1c_data:
		.string "/olivier soleil/"
		.ascii  "\x00\x00\x00"

_0bfc30_data:
		.string "/bertrand helias/"
		.ascii  "\x00\x00"

_0bfc44_data:
		.string "/yann le tensorer/"
		.ascii  "\x00"

_0bfc58_data:
		.string "/daniel palix/"
		.ascii  "\x00"

_0bfc68_data:
		.string "/cyril cauchois/"
		.ascii  "\x00\x00\x00"

_0bfc7c_data:
		.string "/olivier couvreur/"
		.ascii  "\x00"

_0bfc90_data:
		.string "/antoine dodens/"
		.ascii  "\x00\x00\x00"

_0bfca4_data:
		.string "/antonio ferreira/"
		.ascii  "\x00"

_0bfcb8_data:
		.string "/philippe fuentes/"
		.ascii  "\x00"

_0bfccc_data:
		.string "/benoit germain/"
		.ascii  "\x00\x00\x00"

_0bfce0_data:
		.string "/christophe giraud/"

_0bfcf4_data:
		.string "/francois mahieu/"
		.ascii  "\x00\x00"

_0bfd08_data:
		.string "/christian mihalache/"
		.ascii  "\x00\x00"

_0bfd20_data:
		.string "/sebastien morin/"
		.ascii  "\x00\x00"

_0bfd34_data:
		.string "/bogdan radusi/"

_0bfd44_data:
		.string "/daniel raviart/"
		.ascii  "\x00\x00\x00"

_0bfd58_data:
		.string "/olivier rozier/"
		.ascii  "\x00\x00\x00"

_0bfd6c_data:
		.string "/jozef skrabo/"
		.ascii  "\x00"

_0bfd7c_data:
		.string "/gilles vanwalleghem/"
		.ascii  "\x00\x00"

_0bfd94_data:
		.string "/stephane bellanger/"
		.ascii  "\x00\x00\x00"

_0bfdac_data:
		.string "/didier lord/"
		.ascii  "\x00\x00"

_0bfdbc_data:
		.string "/olivier amiaud/"
		.ascii  "\x00\x00\x00"

_0bfdd0_data:
		.string "/sylvain brunet/"
		.ascii  "\x00\x00\x00"

_0bfde4_data:
		.string "/nathalie drouet/"
		.ascii  "\x00\x00"

_0bfdf8_data:
		.string "/dominique dumont/"
		.ascii  "\x00"

_0bfe0c_data:
		.string "/kamel feunas/"
		.ascii  "\x00"

_0bfe1c_data:
		.string "/remy gazel/"
		.ascii  "\x00\x00\x00"

_0bfe2c_data:
		.string "/didier leglise/"
		.ascii  "\x00\x00\x00"

_0bfe40_data:
		.string "/jean marc litchmann/"
		.ascii  "\x00\x00"

_0bfe58_data:
		.string "/frederic louvre/"
		.ascii  "\x00\x00"

_0bfe6c_data:
		.string "/guillaume michel/"
		.ascii  "\x00"

_0bfe80_data:
		.string "/olivier mortier/"
		.ascii  "\x00\x00"

_0bfe94_data:
		.string "/frederic prados/"
		.ascii  "\x00\x00"

_0bfea8_data:
		.string "/stephane ronse/"
		.ascii  "\x00\x00\x00"

_0bfebc_data:
		.string "/rene de wael/"
		.ascii  "\x00"

_0bfecc_data:
		.string "/emmanuelle cosso/"
		.ascii  "\x00"

_0bfee0_data:
		.string "/mitsuyuki bando/"
		.ascii  "\x00\x00"

_0bfef4_data:
		.string "/chris benard/"
		.ascii  "\x00"

_0bff04_data:
		.string "/patrice dozier/"
		.ascii  "\x00\x00\x00"

_0bff18_data:
		.string "/douglas rand/"
		.ascii  "\x00"

_0bff28_data:
		.string "/steven perkinson/"
		.ascii  "\x00"

_0bff3c_data:
		.string "/christian stonner/"

_0bff50_data:
		.string "/bruno barone/"
		.ascii  "\x00"

_0bff60_data:
		.string "/thomas belmont/"
		.ascii  "\x00\x00\x00"

_0bff74_data:
		.string "/christophe cavelan/"
		.ascii  "\x00\x00\x00"

_0bff8c_data:
		.string "/marc gioan/"
		.ascii  "\x00\x00\x00"

_0bff9c_data:
		.string "/benoit macon/"
		.ascii  "\x00"

_0bffac_data:
		.string "/lionel rico/"
		.ascii  "\x00\x00"

_0bffbc_data:
		.string "/emmanuel texandier/"
		.ascii  "\x00\x00\x00"

_0bffd4_data:
		.string "/dorian thibaut/"
		.ascii  "\x00\x00\x00"

_0bffe8_data:
		.string "/agnes haegel/"
		.ascii  "\x00"

_0bfff8_data:
		.string "/ludimedia : gerard guillemot/"
		.ascii  "\x00"

_0c0018_data:
		.string "/ubi studios : michel guillemot/"
		.ascii  "\x00\x00\x00"

_0c003c_data:
		.string "/ubi soft :  yves guillemot/"
		.ascii  "\x00\x00\x00"

_0c005c_data:
		.string "rayman"
		.ascii  "\x00"

_0c0064_data:
		.ascii  "\x2e\x5c\x00\x00"

_0c0068_data:
		.string "SAVE"
		.ascii  "\x00\x00\x00"

_0c0070_data:
		.string "Missing = in rayman's argument (save=pathname).\n"
		.ascii  "\x00\x00\x00"

_0c00a4_data:
		.ascii  "\x5c\x00\x00\x00"

_0c00a8_data:
		.string "FREQ70"
		.ascii  "\x00"

_0c00b0_data:
		.string "\nLeft memory available = %.3f Mo.\n\n"

_0c00d4_data:
		.string "386 processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c00f0_data:
		.string "Rayman requires a 486 or more.\n"

_0c0110_data:
		.string "486 processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c012c_data:
		.string "Pentium processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c014c_data:
		.string "Pentium %1d processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c0170_data:
		.string "Unknown processor detected.\n"
		.ascii  "\x00\x00\x00"

_0c0190_data:
		.string "No windows detected.\n"
		.ascii  "\x00\x00"

_0c01a8_data:
		.string "Windows real mode detected.\n"
		.ascii  "\x00\x00\x00"

_0c01c8_data:
		.string "Windows standard mode detected.\n"
		.ascii  "\x00\x00\x00"

_0c01ec_data:
		.string "Windows/386 V 2.x detected.\n"
		.ascii  "\x00\x00\x00"

_0c020c_data:
		.string "Windows 95 detected.\n"
		.ascii  "\x00\x00"

_0c0224_data:
		.string "Windows V %d.%d detected.\n"
		.ascii  "\x00"

_0c0240_data:
		.string "Not enough memory."
		.ascii  "\x00"

_0c0254_data:
		.string "\nTry to detect sound card.\n"

_0c0270_data:
		.string "Found a %s sound card.\n"

_0c0288_data:
		.string "   PORT = %d\n"
		.ascii  "\x00\x00"

_0c0298_data:
		.string "   IRQ  = %d\n"
		.ascii  "\x00\x00"

_0c02a8_data:
		.string "   DMA  = %d\n"
		.ascii  "\x00\x00"

_0c02b8_data:
		.string "Sorry, no sound card detected.\n"

_0c02d8_data:
		.ascii  "\x0a\x00\x00\x00"

_0c02dc_data:
		.string "Normal and X mode available.\n"
		.ascii  "\x00\x00"

_0c02fc_data:
		.string "Only X mode available.\n"

_0c0314_data:
		.string "Sound and CD music.\n"
		.ascii  "\x00\x00\x00"

_0c032c_data:
		.string "Only sound, no CD music.\n"
		.ascii  "\x00\x00"

_0c0348_data:
		.string "Only CD music, no sound.\n"
		.ascii  "\x00\x00"

_0c0364_data:
		.string "no CD music, no sound.\n"

_0c037c_data:
		.string "Background available.\n"
		.ascii  "\x00"

_0c0394_data:
		.string "No background.\n"

_0c03a4_data:
		.string "Allocation error in variables.\n"

_0c03c4_data:
		.string "Allocation error in variables.\n"

_0c03e4_data:
		.string "RAYMAN (EU) v1.10"
		.ascii  "\x00\x00"

_0c03f8_data:
		.string "(C) 1994-1995 UBI STUDIOS, FRANCE"
		.ascii  "\x00\x00"

_0c041c_data:
		.ascii  "\x0a\x0a\x00\x00"

_0c0420_data:
		.string "rayman.cfg"
		.ascii  "\x00"

_0c042c_data:
		.string "c:\\raytmp.tmp"
		.ascii  "\x00\x00"

_0c043c_data:
		.string "CD ROM's Initialization.\n"
		.ascii  "\x00\x00"

_0c0458_data:
		.string "/limited version/"
		.ascii  "\x00\x00"

_0c046c_data:
		.string "/install rayman with cdrom/"

_0c0488_data:
		.string "/hi master/"

_0c0494_data:
		.string "/happy to see you/"
		.ascii  "\x00"

_0c04a8_data:
		.ascii  "\x25\x00\x00\x00"

_0c04ac_data:
		.string "/go !/"
		.ascii  "\x00"

_0c04b4_data:
		.string "''game over''"
		.ascii  "\x00\x00"

_0c04c4_data:
		.string "game over"
		.ascii  "\x00\x00"

_0c04d0_data:
		.ascii  "\x3a\x00\x00\x00"

_0c04d4_data:
		.fill   0x4

_0c04d8_data:
		.string "Rayman says fatal error :\n%s\n"
		.ascii  "\x00\x00"

_0c04f8_data:
		.string "\nPress a key to exit.\n"
		.ascii  "\x00"

_0c0510_data:
		.string "/%2d : %02d/"
		.ascii  "\x00\x00\x00"

_0c0520_data:
		.string "/%s/"
		.ascii  "\x00\x00\x00"

_0c0528_data:
		.string "Write Protect Violation"

_0c0540_data:
		.string "Unknown unit"
		.ascii  "\x00\x00\x00"

_0c0550_data:
		.string "Drive not ready"

_0c0560_data:
		.string "Unknown command"

_0c0570_data:
		.string "CRC error"
		.ascii  "\x00\x00"

_0c057c_data:
		.string "Bad drive request structure length"
		.ascii  "\x00"

_0c05a0_data:
		.string "Seek error"
		.ascii  "\x00"

_0c05ac_data:
		.string "Unknown media"
		.ascii  "\x00\x00"

_0c05bc_data:
		.string "Sector not found"
		.ascii  "\x00\x00\x00"

_0c05d0_data:
		.string "Printer out of paper"
		.ascii  "\x00\x00\x00"

_0c05e8_data:
		.string "Write fault"

_0c05f4_data:
		.string "Read fault"
		.ascii  "\x00"

_0c0600_data:
		.string "General failure"

_0c0610_data:
		.string "Reserved"
		.ascii  "\x00\x00\x00"

_0c061c_data:
		.string "Invalid disk change"

_0c0630_data:
		.string "CD ROM drive found on %c:\n"
		.ascii  "\x00"

_0c064c_data:
		.string "Differential method"

_0c0660_data:
		.string "Source file checksum error\n"

_0c067c_data:
		.string "Corrupted source file\n"
		.ascii  "\x00"

_0c0694_data:
		.string "Fatal error: "
		.ascii  "\x00\x00"

_0c06a4_data:
		.fill   0x4

_0c06a8_data:
		.ascii  "\x7e\x00\x00\x00\x7a"

_0c06ad_data:
		.ascii  "\x00\x00\x00"

_0c06b0_data:
		.string "level "
		.ascii  "\x00"

_0c06b8_data:
		.string "conclu.dat"
		.ascii  "\x00"

_0c06c4_data:
		.string "Memory error in draw_buffer.\n"
		.ascii  "\x00\x00"

_0c06e4_data:
		.ascii  "\x52\x41\x59\x00"

_0c06e8_data:
		.string ".LEV"
		.ascii  "\x00\x00\x00"

_0c06f0_data:
		.string ".WLD"
		.ascii  "\x00\x00\x00"

_0c06f8_data:
		.string "RAYMAN"
		.ascii  "\x00"

_0c0700_data:
		.string ".SAV"
		.ascii  "\x00\x00\x00"

_0c0708_data:
		.string "\n%s\n"
		.ascii  "\x00\x00\x00"

_0c0710_data:
		.string "intro.dat"
		.ascii  "\x00\x00"

_0c071c_data:
		.ascii  "\x2e\x5c\x00\x00"

_0c0720_data:
		.ascii  "\x72\x62\x00\x00"

_0c0724_data:
		.string "Rayman sound says fatal error :\n%s\n"

_0c0748_data:
		.ascii  "\x72\x62\x00\x00"

_0c074c_data:
		.string "SNDH8B.DAT"
		.ascii  "\x00"

_0c0758_data:
		.string "Fichier header introuvable (SNDH8B.DAT).\n"
		.ascii  "\x00\x00"

_0c0784_data:
		.string "Load error in sndh8b.dat.\n"
		.ascii  "\x00"

_0c07a0_data:
		.string "SNDD8B.DAT"
		.ascii  "\x00"

_0c07ac_data:
		.string "Fichier data introuvable.\n"
		.ascii  "\x00"

_0c07c8_data:
		.ascii  "\x4d\x82"
		.string "moire insuffisante pour charger les samples.\n"

_0c07f8_data:
		.string "Load error in sndd8b.dat.\n"
		.ascii  "\x00"

_0c0814_data:
		.string "FILE NOT FOUND: %s\n"

_0c0828_data:
		.string "DANY"
		.ascii  "\x00\x00\x00"

_0c0830_data:
		.string " tu veux voir comment y joue Monsieur Daniel ?\n"

_0c0860_data:
		.string " NaMe oF fILe ? (DEfAuLT:%s) \n"
		.ascii  "\x00"

_0c0880_data:
		.string ".REC"
		.ascii  "\x00\x00\x00"

_0c0888_data:
		.string "Pas de Jumelle"
		.ascii  "\x00"

_0c0898_data:
		.ascii  "\x2e\x2e\x5c\x00"

_0c089c_data:
		.string "PCMAP"
		.ascii  "\x00\x00"

_0c08a4_data:
		.ascii  "\x5c\x00\x00\x00"

_0c08a8_data:
		.ascii  "\x72\x62\x00\x00"

_0c08ac_data:
		.string "Can not open file %s (load_world).\n"

_0c08d0_data:
		.string "%s : File integrity fault.\n"

_0c08ec_data:
		.string "Can not open file %s (load_level).\n"

_0c0910_data:
		.string "%s : File integrity fault (Block Normal).\n"
		.ascii  "\x00"

_0c093c_data:
		.string "bray.dat"
		.ascii  "\x00\x00\x00"

_0c0948_data:
		.string "Can not open file %s (load_big_ray).\n"
		.ascii  "\x00\x00"

_0c0970_data:
		.string "ALLFIX.DAT"
		.ascii  "\x00"

_0c097c_data:
		.string "Can not open file %s (load_all_fix).\n"
		.ascii  "\x00\x00"

_0c09a4_data:
		.string "VIGNET.DAT"
		.ascii  "\x00"

_0c09b0_data:
		.string "%s : Can not open.\n"

_0c09c4_data:
		.string "%s : File integrity fault (%d).\n"
		.ascii  "\x00\x00\x00"

_0c09e8_data:
		.string "No memory allocated for it (load_pcx) !!"
		.ascii  "\x00\x00\x00"

_0c0a14_data:
		.string "%s : File integrity fault (%d).\n"
		.ascii  "\x00\x00\x00"

_0c0a38_data:
		.string "No memory allocated (load_plan0)."
		.ascii  "\x00\x00"

_0c0a5c_data:
		.string "No memory allocated (PLAN0FND_to_bits_planes)."
		.ascii  "\x00"

_0c0a8c_data:
		.string "RAY.LNG"

_0c0a94_data:
		.string "Memory error in LoadLanguageTxt"

_0c0ab4_data:
		.string "%s : File integrity fault (%d).\n"
		.ascii  "\x00\x00\x00"

_0c0ad8_data:
		.string "No memory allocated for it (load_pcx) !!"
		.ascii  "\x00\x00\x00"

_0c0b04_data:
		.string "320x200"

_0c0b0c_data:
		.string "312x196"

_0c0b14_data:
		.string "304x192"

_0c0b1c_data:
		.string "300x188"

_0c0b24_data:
		.ascii  "\x36\x30\x00\x00"

_0c0b28_data:
		.ascii  "\x35\x30\x00\x00"

_0c0b2c_data:
		.ascii  "\x33\x30\x00\x00"

_0c0b30_data:
		.ascii  "\x32\x35\x00\x00"

_0c0b34_data:
		.string "mode dieu"
		.ascii  "\x00\x00"

_0c0b40_data:
		.ascii  "\x31\x00\x00\x00"

_0c0b44_data:
		.ascii  "\x32\x00\x00\x00"

_0c0b48_data:
		.ascii  "\x33\x00\x00\x00"

_0c0b4c_data:
		.ascii  "\x34\x00\x00\x00"

_0c0b50_data:
		.ascii  "\x35\x00\x00\x00"

_0c0b54_data:
		.ascii  "\x36\x00\x00\x00"

_0c0b58_data:
		.ascii  "\x37\x00\x00\x00"

_0c0b5c_data:
		.ascii  "\x38\x00\x00\x00"

_0c0b60_data:
		.ascii  "\x39\x00\x00\x00"

_0c0b64_data:
		.ascii  "\x30\x00\x00\x00"

_0c0b68_data:
		.ascii  "\x61\x00\x00\x00"

_0c0b6c_data:
		.ascii  "\x7a\x00\x00\x00"

_0c0b70_data:
		.ascii  "\x65\x00\x00\x00"

_0c0b74_data:
		.ascii  "\x72\x00\x00\x00"

_0c0b78_data:
		.ascii  "\x74\x00\x00\x00"

_0c0b7c_data:
		.ascii  "\x79\x00\x00\x00"

_0c0b80_data:
		.ascii  "\x75\x00\x00\x00"

_0c0b84_data:
		.ascii  "\x69\x00\x00\x00"

_0c0b88_data:
		.ascii  "\x6f\x00\x00\x00"

_0c0b8c_data:
		.ascii  "\x70\x00\x00\x00"

_0c0b90_data:
		.ascii  "\x71\x00\x00\x00"

_0c0b94_data:
		.ascii  "\x73\x00\x00\x00"

_0c0b98_data:
		.ascii  "\x64\x00\x00\x00"

_0c0b9c_data:
		.ascii  "\x66\x00\x00\x00"

_0c0ba0_data:
		.ascii  "\x67\x00\x00\x00"

_0c0ba4_data:
		.ascii  "\x68\x00\x00\x00"

_0c0ba8_data:
		.ascii  "\x6a\x00\x00\x00"

_0c0bac_data:
		.ascii  "\x6b\x00\x00\x00"

_0c0bb0_data:
		.ascii  "\x6c\x00\x00\x00"

_0c0bb4_data:
		.ascii  "\x6d\x00\x00\x00"

_0c0bb8_data:
		.ascii  "\x77\x00\x00\x00"

_0c0bbc_data:
		.ascii  "\x78\x00\x00\x00"

_0c0bc0_data:
		.ascii  "\x63\x00\x00\x00"

_0c0bc4_data:
		.ascii  "\x76\x00\x00\x00"

_0c0bc8_data:
		.ascii  "\x62\x00\x00\x00"

_0c0bcc_data:
		.ascii  "\x6e\x00\x00\x00"

_0c0bd0_data:
		.ascii  "\x3f\x00\x00\x00"

_0c0bd4_data:
		.ascii  "\x2e\x00\x00\x00"

_0c0bd8_data:
		.ascii  "\x3a\x00\x00\x00"

_0c0bdc_data:
		.ascii  "\x61\x2f\x00\x00"

_0c0be0_data:
		.ascii  "\x62\x2f\x00\x00"

_0c0be4_data:
		.ascii  "\x63\x2f\x00\x00"

_0c0be8_data:
		.ascii  "\x64\x2f\x00\x00"

_0c0bec_data:
		.string "pci1"
		.ascii  "\x00\x00\x00"

_0c0bf4_data:
		.string "pci2"
		.ascii  "\x00\x00\x00"

_0c0bfc_data:
		.string "vesa"
		.ascii  "\x00\x00\x00"

_0c0c04_data:
		.ascii  "\x7c\x00\x00\x00"

_0c0c08_data:
		.ascii  "\x6f\x6b\x00\x00"

_0c0c0c_data:
		.string "/......./"
		.ascii  "\x00\x00"

_0c0c18_data:
		.string "Error On MAX_ACTOBJ."
		.ascii  "\x00\x00\x00"

_0c0c30_data:
		.string "Augmenter MAX_NB_SCROLL_PER_MAP"

_0c0c50_data:
		.ascii  "\x2f\x00\x00\x00"

_0c0c54_data:
		.ascii  "\x61\x61\x61\x00"

_0c0c58_data:
		.ascii  "\x61\x00\x00\x00"

_0c0c5c_data:
		.ascii  "\x62\x00\x00\x00"

_0c0c60_data:
		.ascii  "\x64\x00\x00\x00"

_0c0c64_data:
		.ascii  "\x63\x00\x00\x00"

_0c0c68_data:
		.string "/you have done it !/"
		.ascii  "\x00\x00\x00"

_0c0c80_data:
		.string "/you have saved the world !/"
		.ascii  "\x00\x00\x00"

_0c0ca0_data:
		.string "%c:\\"
		.ascii  "\x00\x00\x00"

_0c0ca8_data:
		.ascii  "\x72\x00\x00\x00"

_0c0cac_data:
		.string "Information sur le bloc_malloc.\n"
		.ascii  "\x00\x00\x00"

_0c0cd0_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e fixes                           : %u\n"
		.ascii  "\x00\x00"

_0c0d0c_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e fixes   (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0c0d54_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e mondes                          : %u\n"
		.ascii  "\x00\x00"

_0c0d90_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e mondes  (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0c0dd8_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e maps                            : %u\n"
		.ascii  "\x00\x00"

_0c0e14_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e maps    (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0c0e5c_data:
		.ascii   "   - Taille allou"
		.ascii  "\x82"
		.string "e sprites                         : %u\n"
		.ascii  "\x00\x00"

_0c0e98_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e sprites (w=%3d, l=%3d) : %u (%u*1024L)\n"
		.ascii  "\x00\x00\x00"

_0c0ee0_data:
		.ascii  "\x0a\x00\x00\x00"

_0c0ee4_data:
		.string "Information sur le temp_malloc.\n"
		.ascii  "\x00\x00\x00"

_0c0f08_data:
		.ascii   "   - Taille de la m"
		.ascii  "\x82"
		.ascii   "moire allou"
		.ascii  "\x82"
		.string "e            : %u\n"
		.ascii  "\x00"

_0c0f3c_data:
		.ascii   "   - Taille maximum utilis"
		.ascii  "\x82"
		.string "e                 : %u (%u*1024L)\n"
		.ascii  "\x00\x00"

_0c0f7c_data:
		.string "Left memory = %d\n"
		.ascii  "\x00\x00"

_0c0f90_data:
		.ascii  "\x66\x69\x78\x00"

_0c0f94_data:
		.string "world"
		.ascii  "\x00\x00"

_0c0f9c_data:
		.string "level"
		.ascii  "\x00\x00"

_0c0fa4_data:
		.string "sprite"
		.ascii  "\x00"

_0c0fac_data:
		.string "unknown mem"

_0c0fb8_data:
		.string "Memory error in block_malloc : %s = %p, size = %ul.\n"
		.ascii  "\x00\x00\x00"

_0c0ff0_data:
		.string "Can not allocate %d bytes in memory.\n"
		.ascii  "\x00\x00"

_0c1018_data:
		.string "not enough memory in pool.\nMemory error in tmp_malloc : size = %ul.\n"
		.ascii  "\x00\x00\x00"

_0c1060_data:
		.string "hmidet.386"
		.ascii  "\x00"

_0c106c_data:
		.string "acos"

_0c1071_data:
		.string "asin"

_0c1076_data:
		.string "sqrt"

_0c107b_data:
		.ascii  "\x65\x78\x70\x00"

_0c107f_data:
		.string "cosh"

_0c1084_data:
		.string "sinh"

_0c1089_data:
		.ascii  "\x70\x6f\x77\x00"

_0c108d_data:
		.string "acosh"

_0c1093_data:
		.string "log2"

_0c1098_data:
		.ascii  "\x6c\x6f\x67\x00"

_0c109c_data:
		.string "log10"

_0c10a2_data:
		.string "atanh"

_0c10a8_data:
		.string "atan2"

_0c10ae_data:
		.string "ipow"

_0c10b3_data:
		.string "dpowi"

_0c10b9_data:
		.ascii  "\x63\x6f\x73\x00"

_0c10bd_data:
		.ascii  "\x73\x69\x6e\x00"

_0c10c1_data:
		.ascii  "\x74\x61\x6e\x00"

_0c10c5_data:
		.ascii  "\x79\x30\x00"

_0c10c8_data:
		.ascii  "\x79\x31\x00"

_0c10cb_data:
		.ascii  "\x79\x6e\x00"

_0c10ce_data:
		.ascii  "\x6d\x6f\x64\x00"

_0c10d2_data:
		.string "cotan"

_0c10d8_data:
		.string "Error Code Does Not Indicate An Error"

_0c10fe_data:
		.string "Specified Driver Is Not Loaded"

_0c111d_data:
		.string "Specified Pointer Is NULL"

_0c1137_data:
		.string "Detection System Is Already Initialized"

_0c115f_data:
		.string "File Open Failure"

_0c1171_data:
		.string "Memory Allocation Failure"

_0c118b_data:
		.string "Invalid Driver ID"

_0c119d_data:
		.string "Driver Not Found"

_0c11ae_data:
		.string "Detection System Failed To Find Hardware"

_0c11d7_data:
		.string "Driver Already Loaded Using Specified Handle"

_0c1204_data:
		.string "Invalid Handle"

_0c1213_data:
		.string "No Handles Available"

_0c1228_data:
		.string "Hardware Already Paused"

_0c1240_data:
		.string "Hardware Not Paused"

_0c1254_data:
		.string "Data Is Not Valid"

_0c1266_data:
		.string "HMI*.386 File Open Failure"

_0c1281_data:
		.string "Incorrect Port"

_0c1290_data:
		.string "Incorrect IRQ"

_0c129e_data:
		.string "Incorrect DMA"

_0c12ac_data:
		.string "Incorrect DMA/IRQ"
		.ascii  "\x00\x00"

_0c12c0_data:
		.string "hmidrv.386"
		.ascii  "\x00"

_0c12cc_data:
		.string "Floating-point support not loaded\r\n"

_0c12f0_data:
		.string "Domain error"

_0c12fd_data:
		.string "Argument singularity"

_0c1312_data:
		.string "Overflow range error"

_0c1327_data:
		.string "Underflow range error"

_0c133d_data:
		.string "Total loss of significance"

_0c1358_data:
		.string "Partial loss of significance"

_0c1375_data:
		.string " in "
		.ascii  "\x00\x00"

_0c137c_data:
		.ascii  "\x3a\x8c\x30\xe2\x8e\x79\x45\x3e"

_0c1384_data:
		.string "Not enough memory to allocate file structures\r\n"

_0c13b4_data:
		.ascii  "\x54\x5a\x00\x00"

_0c13b8_data:
		.ascii  "\x69\x6e\x66\x00"

_0c13bc_data:
		.ascii  "\x6e\x61\x6e\x00"

_0c13c0_data:
		.ascii  "\x49\xad\x30\x70\xc7\x52\xe9\x3c"
		.ascii  "\x1f\xb8\x33\xe7\xf3\xe7\x6a\xbd"
		.ascii  "\x08\x6d\xa8\x13\x46\x12\xe6\x3d"
		.ascii  "\xe5\x44\xf5\x67\x45\xe6\x5a\xbe"
		.ascii  "\x36\xc7\x56\xa5\xe3\x1d\xc7\x3e"
		.ascii  "\x1a\xa0\x01\x1a\xa0\x01\x2a\xbf"
		.ascii  "\x11\x11\x11\x11\x11\x11\x81"
		.ascii   "?SUUUUU"
		.ascii  "\xc5\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c1408_data:
		.ascii  "\x1f\xb8\x33\xe7\xf3\xe7\x2a\x3d"
		.ascii  "\x9a\x7c\xc0\xa8\x74\x39\xa9\xbd"
		.ascii  "\x98\xd8\xf8\xef\xd8\xee\x21\x3e"
		.ascii  "\x5c\x9f\x78\xb7\x4f\x7e\x92\xbe"
		.ascii  "\x1a\xa0\x01\x1a\xa0\x01\xfa\x3e"
		.ascii  "\x17\x6c\xc1\x16\x6c\xc1\x56\xbf"
		.ascii   "TUUUUU"
		.ascii  "\xa5\x3f"
		.fill   0x6
		.ascii  "\xe0\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c1450_data:
		.fill   0x4
		.ascii  "\x01\x00\x00\x00\x02\x00\x00\x00"
		.ascii  "\x03\x00\x00\x00\x04\x00\x00\x00"
		.ascii  "\x04\x00\x00\x00\x05\x00\x00\x00"
		.ascii  "\x05\x00\x00\x00\x06\x00\x00\x00"

_0c1474_data:
		.ascii  "\x11\x00\x00\x00\x12\x00\x00\x00"
		.ascii  "\x10\x00\x00\x00"

_0c1480_data:
		.ascii  "\x10\x89\xf9\x6c\x58\xb5\xf0"
		.ascii   "?|Q}<"
		.ascii  "\xb8\x72\xf1\x3f\x15\xb7\x31\x0a"
		.ascii  "\xfe\x06\xf3\x3f\xcc\x3b\x7f\x66"
		.ascii  "\x9e\xa0\xf6\x3f"

_0c14a0_data:
		.fill   0x4

_0c14a4_data:
		.ascii  "\x00\x00\xf0\x7f"

_0c14a8_data:
		.ascii  "\xc3\x1c\x98\xfc\x38\xba\xa6\x3f"
		.ascii  "\x21\x00\x01\x61\xd3\x98\xb0\xbf"
		.ascii  "\xa5\x98\xcd\x45\xc0\xa8\xb3\x3f"
		.ascii  "\x73\x4d\xa1\x33\x77\x45\xb7\xbf"
		.ascii  "\x62\xa5\xf2\xe4\xc4\x71\xbc\x3f"
		.ascii  "\x8b\xb3\x5b\x8e\x24\x49\xc2\xbf"
		.ascii  "\x76\x9d\x92\x99\x99\x99\xc9\x3f"
		.ascii  "\xf0"
		.ascii   "RUUUU"
		.ascii  "\xd5\xbf"
		.fill   0x6
		.ascii  "\xf0\x3f"

_0c14f0_data:
		.fill   0x4
		.long   _0c12f0_data
		.long   _0c12fd_data
		.long   _0c1312_data
		.long   _0c1327_data
		.long   _0c133d_data
		.ascii  "\x58\x13"

_0c150a_data:
		.ascii  "\x0c\x00"

_0c150c_data:
		.ascii  "\x00\x00"

_0c150e_data:
		.ascii  "\x1f\x00\x3b\x00\x5a\x00\x78\x00"
		.ascii  "\x97\x00\xb5\x00\xd4\x00\xf3\x00"
		.ascii  "\x11\x01\x30\x01\x4e\x01"

_0c1524_data:
		.ascii  "\x6d\x01"

_0c1526_data:
		.ascii  "\x00\x00\x1f\x00\x3c\x00\x5b\x00"
		.ascii  "\x79\x00\x98\x00\xb6\x00\xd5\x00"
		.ascii  "\xf4\x00\x12\x01\x31\x01\x4f\x01"
		.ascii  "\x6e\x01"

_0c1540_data:
		.fill   0x4

_0c1544_data:
		.ascii  "\x00\x00\xf0\x7f"

_0c1548_data:
		.fill   0x4

_0c154c_data:
		.ascii  "\x00\x00\xf0\xff"

_0c1550_data:
		.ascii  "\xff\xff\xff\xff"

_0c1554_data:
		.ascii  "\xff\xff\xef\x7f"

_0c1558_data:
		.ascii  "\xff\xff\xff\xff"

_0c155c_data:
		.ascii  "\xff\xff\xef\xff"

_0c1560_data:
		.ascii  "\x29\xbd\x56\xb3\x15\x44\xe9\xbf"
		.ascii  "\xee\xaf\x16"
		.ascii   " Jb0@"
		.ascii  "\x9a\xb5\xb3\x12\xff\x07\x50\xc0"

_0c1578_data:
		.fill   0x6
		.ascii  "\xf0\x3f\x0e\xce\x67\x4b\x80\xd5"
		.ascii  "\x41\xc0\x7f\x26\x15\xfa\x83\x80"
		.ascii  "\x73\x40\x77\x90\x0d\x9c\xfe\x0b"
		.ascii  "\x88\xc0"

_0c1598_data:
		.ascii  "\xd8\x00"

_0c159a_data:
		.ascii  "\xc6\xf9\xc6\x40"

_0c159e_data:
		.ascii  "\xe9\x34\xc7\x6c\x6c\x00\x12\x4e"
		.ascii  "\x83\xcc"
		.string "=@[V6"
		.ascii  "\xce\xc9\x14\x88\x87\xe1\x24\x4b"
		.ascii  "\x1b\x00\x02\x84\xfe\xe4\x71\xd9"
		.ascii  "\x89\x45\x0e\x00\x00\x00\x90\x1e"
		.ascii  "\xc4\xbc\xd6\x42\x08"
		.fill   0x5
		.ascii  "\x84\xd7\x97\x41\x04"
		.fill   0x6
		.ascii  "\x88\xc3\x40\x01"
		.fill   0x7
		.ascii  "\x24\x40"

_0c15e8_data:
		.ascii  "\x00\x20"
		.long   _081b21_func
		.ascii  "\x00\x20"
		.long   _081cef_func
		.ascii  "\x00\x20"
		.long   _081d0a_func
		.ascii  "\x00\x02"
		.long   _0860e8_func
		.ascii  "\x00\x20"
		.long   _086466_func
		.ascii  "\x00\x03"
		.long   _086411_func
		.ascii  "\x00\x20"
		.long   _0878df_func

_0c1612_data:
		.ascii  "\x00\x20"
		.long   _0864dd_func

_0c1618_data:
		.ascii  "\x00\x01\x00\x00\x04\x00\x00\x07"
		.ascii  "\x00\x00\x0a\x00\x00\x0d\x00\x00"

_0c1628_data:
		.ascii  "\x00\x00\x70\x3f"

_0c162c_data:
		.ascii  "\x00\x00\x88\x3f"

_0c1630_data:
		.ascii  "\x00\x00\x00\x5f"

_0c1634_data:
		.long   _083221_func
		.long   _083227_func
		.long   _08322c_jump
		.long   _083232_func
		.long   _083237_jump
		.long   _08323d_func
		.long   _083243_func
		.long   _083249_func
		.long   _08324f_func
		.long   _08326b_func
		.long   _083270_jump
		.long   _083286_func
		.long   _08328b_jump
		.long   _0832a7_func
		.long   _0832b7_func
		.long   _0832cb_func
		.long   _0832db_func
		.long   _0832fb_func
		.long   _083300_jump
		.long   _08331a_func
		.long   _08331f_jump
		.long   _08333f_func
		.long   _083353_func
		.long   _08336b_func
		.long   _08337f_func
		.long   _08339f_func
		.long   _0833a4_jump
		.long   _0833be_func
		.long   _0833c3_jump
		.long   _0833e3_func
		.long   _0833f7_func
		.long   _08340f_func
		.long   _083423_func
		.long   _083443_func
		.long   _083448_jump
		.long   _083462_func
		.long   _083467_jump
		.long   _083487_func
		.long   _08349b_func
		.long   _0834b3_func
		.long   _0834c7_func
		.long   _0834e7_func
		.long   _0834ec_jump
		.long   _083506_func
		.long   _08350b_jump
		.long   _08352b_func
		.long   _08353f_func
		.long   _083557_func
		.long   _08356b_func
		.long   _08358b_func
		.long   _083590_jump
		.long   _0835aa_func
		.long   _0835af_jump
		.long   _0835cf_func
		.long   _0835e3_func
		.long   _0835fb_func
		.long   _08360f_func
		.long   _08362f_func
		.long   _083634_jump
		.long   _08364e_func
		.long   _083653_jump
		.long   _083673_func
		.long   _083687_func
		.long   _08369f_func

_0c1734_data:
		.ascii  "\x00\x01\x00\x00\x04\x00\x00\x07"
		.ascii  "\x00\x00\x0a\x00\x00\x0d\x00\x00"

_0c1744_data:
		.ascii  "\x00\x00\x70\x3f"

_0c1748_data:
		.ascii  "\x00\x00\x00\x5f"

_0c174c_data:
		.fill   0x6
		.ascii  "\xf0\x3f"
		.fill   0x6
		.ascii  "\xf0\xbf"

_0c175c_data:
		.long   _087fc0_func
		.long   _087fcb_func
		.long   _087fd8_func
		.long   _087feb_func
		.long   _088000_func
		.long   _088013_func
		.long   _088028_func
		.long   _08803b_func

_0c177c_data:
		.ascii  "\x35\xc2\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\x00\x40"

_0c1786_data:
		.ascii  "\x35\xc2\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xff\x3f"

_0c1790_data:
		.ascii  "\x00\x00\x80\x41"

_0c1794_data:
		.ascii  "\x00\x00\x80\x3d"

_0c1798_data:
		.ascii  "\xa8\xaa\xaa\xaa\xaa\xaa\xaa\xaa"
		.ascii  "\xfd\xbf"

_0c17a2_data:
		.ascii  "\x6e\x2d\xcc\xcc\xcc\xcc\xcc\xcc"
		.ascii  "\xfc\x3f"

_0c17ac_data:
		.ascii  "\x92\x48\xf9\x41\x92\x24\x49\x92"
		.ascii  "\xfc\xbf"

_0c17b6_data:
		.ascii  "\x92\xc5\xec\xcd\x97\x38\x8e\xe3"
		.ascii  "\xfb\x3f"

_0c17c0_data:
		.ascii  "\xdd\x5d\x62\xc1\x7b\xc1\x2d\xba"
		.ascii  "\xfb\xbf"

_0c17ca_data:
		.ascii  "\x54\x48\x8e\xc7\xc7\x77\x80\x9c"
		.ascii  "\xfb\x3f"

_0c17d4_data:
		.fill   0x10
		.ascii  "\x37\x4e\xef\x67\xb9\xdd\xaa\xff"
		.ascii  "\xfa\x3f"
		.fill   0x6
		.ascii   "3n{a"
		.ascii  "\xd5\xd4\xad\xfe\xfb\x3f"
		.fill   0x6
		.ascii  "\x35\x11\xd8\x72\x5e\xda\xcb\xbd"
		.ascii  "\xfc\x3f"
		.fill   0x6
		.ascii  "\x15\xeb\x06\x64\xc9\xaf\xdb\xfa"
		.ascii  "\xfc\x3f"
		.fill   0x6
		.ascii   "j^^?"
		.ascii  "\xb8\xb9\x13\x9b\xfd\x3f"
		.fill   0x6
		.ascii  "\x74\x84\xf7\x26\x0f\xca\xb0\xb7"
		.ascii  "\xfd\x3f"
		.fill   0x6
		.ascii  "\xb6\xe5\x1f\x61\x1e\x76\x27\xd3"
		.ascii  "\xfd\x3f"
		.fill   0x6
		.ascii  "\x45\x7b\xda"
		.ascii   "\r+8c"
		.ascii  "\xed\xfd\x3f"
		.fill   0x6
		.ascii  "\x2a\x7e\x86\xd9\xa6\xf4\x2b\x83"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x9b\x9f\xf5\xf7\x5e\x5d\x00\x8f"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x20\xda\xbd\x71\xe6\x80\x2f\x9a"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x24\x09\xf7\x34\x19\x7d\xbc\xa4"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x80\xc0\xd8\xb4\x38\x4c\xac\xae"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x74\x9e\x31\xc2\x2b\x3e\x05\xb8"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x41\x66\x52\xac\xb8\x85\xce\xc0"
		.ascii  "\xfe\x3f"
		.fill   0x6
		.ascii  "\x35\xc2\x68\x21\xa2\xda\x0f\xc9"
		.ascii  "\xfe\x3f"
		.fill   0x12

_0c18f0_data:
		.fill   0x2e

_0c191e_data:
		.ascii  "\x00\x00"

_0c1920_data:
		.ascii  "\x00\x00"

_0c1922_data:
		.ascii  "\x00\x00"

_0c1924_data:
		.fill   0x4

_0c1928_data:
		.fill   0x4

_0c192c_data:
		.fill   0x4

_0c1930_data:
		.fill   0x4

_0c1934_data:
		.fill   0x4

_0c1938_data:
		.fill   0x4

_0c193c_data:
		.fill   0x4c

_0c1988_data:
		.fill   0x78

_0c1a00_data:
		.fill   0x20

_0c1a20_data:
		.fill   0x78

_0c1a98_data:
		.fill   0x78

_0c1b10_data:
		.fill   0x78

_0c1b88_data:
		.fill   0xc8

_0c1c50_data:
		.fill   0xc8

_0c1d18_data:
		.fill   0xc8

_0c1de0_data:
		.fill   0xc8

_0c1ea8_data:
		.fill   0x100

_0c1fa8_data:
		.fill   0x100

_0c20a8_data:
		.fill   0x100

_0c21a8_data:
		.fill   0x100

_0c22a8_data:
		.fill   0x60

_0c2308_data:
		.fill   0x4

_0c230c_data:
		.fill   0x4

_0c2310_data:
		.fill   0x4

_0c2314_data:
		.fill   0x4

_0c2318_data:
		.fill   0x4

_0c231c_data:
		.fill   0x4

_0c2320_data:
		.fill   0x4

_0c2324_data:
		.fill   0x4

_0c2328_data:
		.fill   0x4

_0c232c_data:
		.fill   0x4

_0c2330_data:
		.fill   0x4

_0c2334_data:
		.fill   0x4

_0c2338_data:
		.fill   0x4

_0c233c_data:
		.fill   0x4

_0c2340_data:
		.fill   0x4

_0c2344_data:
		.fill   0x4

_0c2348_data:
		.fill   0x4

_0c234c_data:
		.fill   0x4

_0c2350_data:
		.fill   0x4

_0c2354_data:
		.fill   0x4

_0c2358_data:
		.fill   0x4

_0c235c_data:
		.fill   0x4

_0c2360_data:
		.fill   0x4

_0c2364_data:
		.fill   0x4

_0c2368_data:
		.fill   0x4

_0c236c_data:
		.fill   0x4

_0c2370_data:
		.fill   0x4

_0c2374_data:
		.fill   0x4

_0c2378_data:
		.fill   0x4

_0c237c_data:
		.fill   0x4

_0c2380_data:
		.fill   0x4

_0c2384_data:
		.fill   0x4

_0c2388_data:
		.fill   0x4

_0c238c_data:
		.fill   0x4

_0c2390_data:
		.fill   0x4

_0c2394_data:
		.fill   0x4

_0c2398_data:
		.fill   0x4

_0c239c_data:
		.fill   0x4

_0c23a0_data:
		.fill   0x4

_0c23a4_data:
		.fill   0x4

_0c23a8_data:
		.fill   0x4

_0c23ac_data:
		.fill   0x4

_0c23b0_data:
		.fill   0x4

_0c23b4_data:
		.fill   0x4

_0c23b8_data:
		.fill   0x4

_0c23bc_data:
		.fill   0x4

_0c23c0_data:
		.fill   0x4

_0c23c4_data:
		.fill   0x4

_0c23c8_data:
		.fill   0x4

_0c23cc_data:
		.fill   0x4

_0c23d0_data:
		.fill   0x4

_0c23d4_data:
		.fill   0x4

_0c23d8_data:
		.fill   0x4

_0c23dc_data:
		.fill   0x4

_0c23e0_data:
		.fill   0x4

_0c23e4_data:
		.fill   0x4

_0c23e8_data:
		.fill   0x4

_0c23ec_data:
		.fill   0x4

_0c23f0_data:
		.fill   0x4

_0c23f4_data:
		.fill   0x4

_0c23f8_data:
		.fill   0x4

_0c23fc_data:
		.fill   0x4

_0c2400_data:
		.fill   0x4

_0c2404_data:
		.fill   0x4

_0c2408_data:
		.fill   0x4

_0c240c_data:
		.fill   0x4

_0c2410_data:
		.fill   0x4

_0c2414_data:
		.fill   0x4

_0c2418_data:
		.fill   0x4

_0c241c_data:
		.fill   0x8

_0c2424_data:
		.fill   0x4

_0c2428_data:
		.fill   0x4

_0c242c_data:
		.fill   0x4

_0c2430_data:
		.fill   0x4

_0c2434_data:
		.fill   0x28

_0c245c_data:
		.fill   0x4

_0c2460_data:
		.fill   0x48

_0c24a8_data:
		.fill   0x4

_0c24ac_data:
		.fill   0x4

_0c24b0_data:
		.fill   0x4

_0c24b4_data:
		.fill   0x4

_0c24b8_data:
		.fill   0x4

_0c24bc_data:
		.fill   0x4

_0c24c0_data:
		.fill   0x4

_0c24c4_data:
		.fill   0x4

_0c24c8_data:
		.fill   0x2c

_0c24f4_data:
		.fill   0x4

_0c24f8_data:
		.fill   0x4

_0c24fc_data:
		.fill   0x4

_0c2500_data:
		.fill   0x4

_0c2504_data:
		.fill   0x4

_0c2508_data:
		.fill   0x8

_0c2510_data:
		.fill   0x4

_0c2514_data:
		.fill   0x4

_0c2518_data:
		.fill   0x4

_0c251c_data:
		.fill   0x4

_0c2520_data:
		.fill   0x4

_0c2524_data:
		.fill   0x4

_0c2528_data:
		.fill   0x4

_0c252c_data:
		.fill   0x4c

_0c2578_data:
		.fill   0x4

_0c257c_data:
		.fill   0x4

_0c2580_data:
		.fill   0xc

_0c258c_data:
		.fill   0xc

_0c2598_data:
		.fill   0x8

_0c25a0_data:
		.fill   0x8

_0c25a8_data:
		.fill   0x4

_0c25ac_data:
		.fill   0x4

_0c25b0_data:
		.fill   0x8

_0c25b8_data:
		.fill   0x1c

_0c25d4_data:
		.fill   0x4

_0c25d8_data:
		.fill   0x4

_0c25dc_data:
		.fill   0x4

_0c25e0_data:
		.fill   0x4

_0c25e4_data:
		.fill   0x4

_0c25e8_data:
		.fill   0x4

_0c25ec_data:
		.fill   0x4

_0c25f0_data:
		.fill   0x4

_0c25f4_data:
		.fill   0x4

_0c25f8_data:
		.fill   0x4

_0c25fc_data:
		.fill   0x4

_0c2600_data:
		.fill   0x4

_0c2604_data:
		.fill   0x4

_0c2608_data:
		.fill   0x4

_0c260c_data:
		.fill   0x4

_0c2610_data:
		.fill   0x4

_0c2614_data:
		.fill   0x4

_0c2618_data:
		.fill   0x4

_0c261c_data:
		.fill   0x4

_0c2620_data:
		.fill   0x4

_0c2624_data:
		.fill   0xc

_0c2630_data:
		.fill   0x10

_0c2640_data:
		.fill   0x4

_0c2644_data:
		.fill   0x74

_0c26b8_data:
		.fill   0x8

_0c26c0_data:
		.fill   0x4

_0c26c4_data:
		.fill   0x4

_0c26c8_data:
		.fill   0x12c0

_0c3988_data:
		.fill   0x12c0

_0c4c48_data:
		.fill   0x20

_0c4c68_data:
		.fill   0x4

_0c4c6c_data:
		.fill   0x4

_0c4c70_data:
		.fill   0x4

_0c4c74_data:
		.ascii  "\x00\x00"

_0c4c76_data:
		.ascii  "\x00\x00"

_0c4c78_data:
		.ascii  "\x00\x00"

_0c4c7a_data:
		.ascii  "\x00\x00"

_0c4c7c_data:
		.ascii  "\x00\x00"

_0c4c7e_data:
		.ascii  "\x00\x00"

_0c4c80_data:
		.ascii  "\x00\x00"

_0c4c82_data:
		.ascii  "\x00\x00"

_0c4c84_data:
		.fill   0x4

_0c4c88_data:
		.fill   0x1500

_0c6188_data:
		.fill   0x300

_0c6488_data:
		.fill   0x300

_0c6788_data:
		.fill   0x5ff

_0c6d87_data:
		.ascii  "\x00"

_0c6d88_data:
		.ascii  "\x00"

_0c6d89_data:
		.fill   0x2ff

_0c7088_data:
		.ascii  "\x00"

_0c7089_data:
		.ascii  "\x00"

_0c708a_data:
		.fill   0x2fb

_0c7385_data:
		.ascii  "\x00"

_0c7386_data:
		.ascii  "\x00"

_0c7387_data:
		.ascii  "\x00"

_0c7388_data:
		.ascii  "\x00"

_0c7389_data:
		.ascii  "\x00"

_0c738a_data:
		.fill   0x8fe

_0c7c88_data:
		.fill   0x700

_0c8388_data:
		.fill   0x80

_0c8408_data:
		.fill   0x680

_0c8a88_data:
		.fill   0x4

_0c8a8c_data:
		.fill   0x4

_0c8a90_data:
		.fill   0x160

_0c8bf0_data:
		.ascii  "\x00\x00"

_0c8bf2_data:
		.ascii  "\x00\x00"

_0c8bf4_data:
		.ascii  "\x00\x00"

_0c8bf6_data:
		.ascii  "\x00\x00"

_0c8bf8_data:
		.ascii  "\x00\x00"

_0c8bfa_data:
		.fill   0x1fe

_0c8df8_data:
		.fill   0x78

_0c8e70_data:
		.fill   0x280

_0c90f0_data:
		.fill   0x1190

_0ca280_data:
		.fill   0x80

_0ca300_data:
		.fill   0x4

_0ca304_data:
		.fill   0x4

_0ca308_data:
		.fill   0x4

_0ca30c_data:
		.fill   0x4

_0ca310_data:
		.fill   0x4

_0ca314_data:
		.ascii  "\x00"

_0ca315_data:
		.ascii  "\x00"

_0ca316_data:
		.ascii  "\x00\x00"

_0ca318_data:
		.fill   0x10

_0ca328_data:
		.fill   0x10

_0ca338_data:
		.fill   0x10

_0ca348_data:
		.fill   0x10

_0ca358_data:
		.ascii  "\x00\x00"

_0ca35a_data:
		.ascii  "\x00\x00"

_0ca35c_data:
		.ascii  "\x00\x00"

_0ca35e_data:
		.ascii  "\x00\x00"

_0ca360_data:
		.ascii  "\x00\x00"

_0ca362_data:
		.ascii  "\x00\x00"

_0ca364_data:
		.ascii  "\x00\x00"

_0ca366_data:
		.ascii  "\x00\x00"

_0ca368_data:
		.fill   0x10

_0ca378_data:
		.ascii  "\x00\x00"

_0ca37a_data:
		.ascii  "\x00\x00"

_0ca37c_data:
		.ascii  "\x00\x00"

_0ca37e_data:
		.ascii  "\x00\x00"

_0ca380_data:
		.ascii  "\x00\x00"

_0ca382_data:
		.ascii  "\x00\x00"

_0ca384_data:
		.ascii  "\x00\x00"

_0ca386_data:
		.ascii  "\x00\x00"

_0ca388_data:
		.fill   0x180

_0ca508_data:
		.fill   0x17

_0ca51f_data:
		.ascii  "\x00"

_0ca520_data:
		.fill   0x18

_0ca538_data:
		.fill   0xd0

_0ca608_data:
		.ascii  "\x00\x00"

_0ca60a_data:
		.ascii  "\x00\x00"

_0ca60c_data:
		.ascii  "\x00"

_0ca60d_data:
		.ascii  "\x00"

_0ca60e_data:
		.ascii  "\x00\x00"

_0ca610_data:
		.fill   0xd0

_0ca6e0_data:
		.ascii  "\x00\x00"

_0ca6e2_data:
		.ascii  "\x00\x00"

_0ca6e4_data:
		.ascii  "\x00"

_0ca6e5_data:
		.ascii  "\x00"

_0ca6e6_data:
		.ascii  "\x00\x00"

_0ca6e8_data:
		.fill   0xc8

_0ca7b0_data:
		.fill   0x6

_0ca7b6_data:
		.ascii  "\x00\x00"

_0ca7b8_data:
		.ascii  "\x00\x00"

_0ca7ba_data:
		.ascii  "\x00\x00"

_0ca7bc_data:
		.ascii  "\x00"

_0ca7bd_data:
		.ascii  "\x00"

_0ca7be_data:
		.ascii  "\x00"

_0ca7bf_data:
		.fill   0x6bb

_0cae7a_data:
		.fill   0x6

_0cae80_data:
		.fill   0xd0

_0caf50_data:
		.ascii  "\x00\x00"

_0caf52_data:
		.ascii  "\x00\x00"

_0caf54_data:
		.ascii  "\x00"

_0caf55_data:
		.ascii  "\x00"

_0caf56_data:
		.ascii  "\x00"

_0caf57_data:
		.ascii  "\x00"

_0caf58_data:
		.fill   0x948

_0cb8a0_data:
		.fill   0xd5

_0cb975_data:
		.ascii  "\x00"

_0cb976_data:
		.ascii  "\x00\x00"

_0cb978_data:
		.fill   0xc6

_0cba3e_data:
		.ascii  "\x00\x00"

_0cba40_data:
		.ascii  "\x00\x00"

_0cba42_data:
		.ascii  "\x00\x00"

_0cba44_data:
		.ascii  "\x00\x00"

_0cba46_data:
		.ascii  "\x00\x00"

_0cba48_data:
		.ascii  "\x00\x00"

_0cba4a_data:
		.ascii  "\x00\x00"

_0cba4c_data:
		.ascii  "\x00"

_0cba4d_data:
		.ascii  "\x00"

_0cba4e_data:
		.ascii  "\x00"

_0cba4f_data:
		.ascii  "\x00"

_0cba50_data:
		.fill   0xc6

_0cbb16_data:
		.fill   0x4

_0cbb1a_data:
		.fill   0x4

_0cbb1e_data:
		.ascii  "\x00\x00"

_0cbb20_data:
		.ascii  "\x00\x00"

_0cbb22_data:
		.ascii  "\x00\x00"

_0cbb24_data:
		.ascii  "\x00"

_0cbb25_data:
		.ascii  "\x00"

_0cbb26_data:
		.ascii  "\x00"

_0cbb27_data:
		.ascii  "\x00"

_0cbb28_data:
		.fill   0xc6

_0cbbee_data:
		.ascii  "\x00\x00"

_0cbbf0_data:
		.ascii  "\x00\x00"

_0cbbf2_data:
		.ascii  "\x00\x00"

_0cbbf4_data:
		.ascii  "\x00\x00"

_0cbbf6_data:
		.ascii  "\x00\x00"

_0cbbf8_data:
		.ascii  "\x00\x00"

_0cbbfa_data:
		.ascii  "\x00\x00"

_0cbbfc_data:
		.ascii  "\x00"

_0cbbfd_data:
		.ascii  "\x00"

_0cbbfe_data:
		.ascii  "\x00"

_0cbbff_data:
		.ascii  "\x00"

_0cbc00_data:
		.fill   0xc6

_0cbcc6_data:
		.fill   0x4

_0cbcca_data:
		.fill   0x4

_0cbcce_data:
		.ascii  "\x00\x00"

_0cbcd0_data:
		.ascii  "\x00\x00"

_0cbcd2_data:
		.ascii  "\x00\x00"

_0cbcd4_data:
		.ascii  "\x00"

_0cbcd5_data:
		.ascii  "\x00"

_0cbcd6_data:
		.ascii  "\x00"

_0cbcd7_data:
		.ascii  "\x00"

_0cbcd8_data:
		.fill   0xd8

_0cbdb0_data:
		.fill   0xd8

_0cbe88_data:
		.fill   0xd8

_0cbf60_data:
		.fill   0xd8

_0cc038_data:
		.fill   0xd8

_0cc110_data:
		.fill   0xd0

_0cc1e0_data:
		.ascii  "\x00\x00"

_0cc1e2_data:
		.ascii  "\x00\x00"

_0cc1e4_data:
		.ascii  "\x00"

_0cc1e5_data:
		.ascii  "\x00"

_0cc1e6_data:
		.ascii  "\x00"

_0cc1e7_data:
		.ascii  "\x00"

_0cc1e8_data:
		.fill   0x4

_0cc1ec_data:
		.fill   0x4

_0cc1f0_data:
		.ascii  "\x00\x00"

_0cc1f2_data:
		.ascii  "\x00\x00"

_0cc1f4_data:
		.fill   0x4

_0cc1f8_data:
		.ascii  "\x00\x00"

_0cc1fa_data:
		.ascii  "\x00\x00"

_0cc1fc_data:
		.ascii  "\x00\x00\x00"

_0cc1ff_data:
		.ascii  "\x00"

_0cc200_data:
		.ascii  "\x00"

_0cc201_data:
		.fill   0x7

_0cc208_data:
		.fill   0x190

_0cc398_data:
		.fill   0x40

_0cc3d8_data:
		.fill   0x4

_0cc3dc_data:
		.fill   0x64

_0cc440_data:
		.fill   0x4

_0cc444_data:
		.fill   0x4

_0cc448_data:
		.fill   0x4

_0cc44c_data:
		.fill   0x4

_0cc450_data:
		.fill   0x4

_0cc454_data:
		.fill   0x4

_0cc458_data:
		.fill   0x4

_0cc45c_data:
		.fill   0x4

_0cc460_data:
		.fill   0x4

_0cc464_data:
		.fill   0x4

_0cc468_data:
		.fill   0x4

_0cc46c_data:
		.fill   0x4

_0cc470_data:
		.fill   0x4

_0cc474_data:
		.fill   0x4

_0cc478_data:
		.fill   0x4

_0cc47c_data:
		.fill   0x4

_0cc480_data:
		.fill   0x4

_0cc484_data:
		.fill   0x4

_0cc488_data:
		.fill   0x4

_0cc48c_data:
		.fill   0x4

_0cc490_data:
		.fill   0x4

_0cc494_data:
		.ascii  "\x00\x00"

_0cc496_data:
		.ascii  "\x00\x00"

_0cc498_data:
		.ascii  "\x00\x00"

_0cc49a_data:
		.ascii  "\x00\x00"

_0cc49c_data:
		.ascii  "\x00\x00"

_0cc49e_data:
		.ascii  "\x00\x00"

_0cc4a0_data:
		.ascii  "\x00\x00"

_0cc4a2_data:
		.ascii  "\x00\x00"

_0cc4a4_data:
		.fill   0x4

_0cc4a8_data:
		.fill   0x4

_0cc4ac_data:
		.fill   0x4

_0cc4b0_data:
		.fill   0x4

_0cc4b4_data:
		.fill   0x4

_0cc4b8_data:
		.fill   0x4

_0cc4bc_data:
		.fill   0x4

_0cc4c0_data:
		.fill   0x4

_0cc4c4_data:
		.fill   0x4

_0cc4c8_data:
		.fill   0x4

_0cc4cc_data:
		.fill   0x4

_0cc4d0_data:
		.fill   0x4

_0cc4d4_data:
		.fill   0x4

_0cc4d8_data:
		.fill   0x4

_0cc4dc_data:
		.fill   0x4

_0cc4e0_data:
		.fill   0x4

_0cc4e4_data:
		.fill   0x4

_0cc4e8_data:
		.fill   0x4

_0cc4ec_data:
		.fill   0x4

_0cc4f0_data:
		.fill   0x4

_0cc4f4_data:
		.fill   0x4

_0cc4f8_data:
		.fill   0x4

_0cc4fc_data:
		.fill   0x4

_0cc500_data:
		.fill   0x4

_0cc504_data:
		.fill   0x4

_0cc508_data:
		.fill   0x4

_0cc50c_data:
		.fill   0x4

_0cc510_data:
		.fill   0x4

_0cc514_data:
		.fill   0x4

_0cc518_data:
		.fill   0x4

_0cc51c_data:
		.fill   0x4

_0cc520_data:
		.fill   0x4

_0cc524_data:
		.fill   0x4

_0cc528_data:
		.fill   0x4

_0cc52c_data:
		.fill   0x4

_0cc530_data:
		.fill   0x4

_0cc534_data:
		.fill   0x4

_0cc538_data:
		.ascii  "\x00\x00"

_0cc53a_data:
		.ascii  "\x00\x00"

_0cc53c_data:
		.ascii  "\x00\x00"

_0cc53e_data:
		.ascii  "\x00\x00"

_0cc540_data:
		.ascii  "\x00\x00"

_0cc542_data:
		.ascii  "\x00\x00"

_0cc544_data:
		.ascii  "\x00\x00"

_0cc546_data:
		.ascii  "\x00\x00"

_0cc548_data:
		.ascii  "\x00"

_0cc549_data:
		.fill   0x64a

_0ccb93_data:
		.ascii  "\x00"

_0ccb94_data:
		.fill   0x4

_0ccb98_data:
		.fill   0x4

_0ccb9c_data:
		.fill   0x4

_0ccba0_data:
		.fill   0x4

_0ccba4_data:
		.fill   0x4

_0ccba8_data:
		.ascii  "\x00\x00"

_0ccbaa_data:
		.ascii  "\x00\x00"

_0ccbac_data:
		.ascii  "\x00\x00"

_0ccbae_data:
		.ascii  "\x00\x00"

_0ccbb0_data:
		.ascii  "\x00\x00"

_0ccbb2_data:
		.ascii  "\x00\x00"

_0ccbb4_data:
		.ascii  "\x00\x00"

_0ccbb6_data:
		.ascii  "\x00\x00"

_0ccbb8_data:
		.fill   0x8

_0ccbc0_data:
		.fill   0x1c

_0ccbdc_data:
		.fill   0x1c

_0ccbf8_data:
		.fill   0x4

_0ccbfc_data:
		.fill   0x4

_0ccc00_data:
		.fill   0x4

_0ccc04_data:
		.fill   0x4

_0ccc08_data:
		.fill   0x4

_0ccc0c_data:
		.fill   0x4

_0ccc10_data:
		.fill   0x4

_0ccc14_data:
		.fill   0x4

_0ccc18_data:
		.fill   0x4

_0ccc1c_data:
		.fill   0x4

_0ccc20_data:
		.fill   0x4

_0ccc24_data:
		.fill   0x4

_0ccc28_data:
		.fill   0x4

_0ccc2c_data:
		.fill   0x4

_0ccc30_data:
		.fill   0x4

_0ccc34_data:
		.fill   0x4

_0ccc38_data:
		.fill   0x4

_0ccc3c_data:
		.fill   0x4

_0ccc40_data:
		.fill   0x1c

_0ccc5c_data:
		.fill   0x4

_0ccc60_data:
		.fill   0x4

_0ccc64_data:
		.fill   0x14

_0ccc78_data:
		.fill   0x4

_0ccc7c_data:
		.fill   0x4

_0ccc80_data:
		.fill   0x14

_0ccc94_data:
		.fill   0x4

_0ccc98_data:
		.fill   0x4

_0ccc9c_data:
		.fill   0x4

_0ccca0_data:
		.fill   0x4

_0ccca4_data:
		.fill   0x4

_0ccca8_data:
		.fill   0x8

_0cccb0_data:
		.fill   0x4

_0cccb4_data:
		.fill   0x4

_0cccb8_data:
		.fill   0x4

_0cccbc_data:
		.fill   0x8

_0cccc4_data:
		.fill   0x4

_0cccc8_data:
		.fill   0x8

_0cccd0_data:
		.fill   0x4

_0cccd4_data:
		.fill   0x4

_0cccd8_data:
		.fill   0x4

_0cccdc_data:
		.fill   0x4

_0ccce0_data:
		.fill   0x4

_0ccce4_data:
		.fill   0x4

_0ccce8_data:
		.fill   0x4

_0cccec_data:
		.fill   0x4

_0cccf0_data:
		.fill   0xc

_0cccfc_data:
		.fill   0x4

_0ccd00_data:
		.fill   0x4

_0ccd04_data:
		.ascii  "\x00"

_0ccd05_data:
		.ascii  "\x00"

_0ccd06_data:
		.ascii  "\x00"

_0ccd07_data:
		.ascii  "\x00"

_0ccd08_data:
		.ascii  "\x00\x00"

_0ccd0a_data:
		.ascii  "\x00"

_0ccd0b_data:
		.fill   0x9

_0ccd14_data:
		.fill   0x4

_0ccd18_data:
		.fill   0x4

_0ccd1c_data:
		.fill   0x36

_0ccd52_data:
		.ascii  "\x00\x00"

_0ccd54_data:
		.fill   0x30

_0ccd84_data:
		.ascii  "\x00"

_0ccd85_data:
		.fill   0x16

_0ccd9b_data:
		.ascii  "\x00\x00"

_0ccd9d_data:
		.fill   0xc63

_0cda00_data:
		.fill   0x4

_0cda04_data:
		.fill   0x4

_0cda08_data:
		.ascii  "\x00\x00"

_0cda0a_data:
		.ascii  "\x00\x00"

_0cda0c_data:
		.ascii  "\x00\x00"

_0cda0e_data:
		.fill   0x10

_0cda1e_data:
		.ascii  "\x00\x00"

_0cda20_data:
		.ascii  "\x00\x00"

_0cda22_data:
		.ascii  "\x00\x00"

_0cda24_data:
		.fill   0x62

_0cda86_data:
		.ascii  "\x00\x00"

_0cda88_data:
		.ascii  "\x00\x00"

_0cda8a_data:
		.ascii  "\x00\x00"

_0cda8c_data:
		.fill   0x4

_0cda90_data:
		.fill   0x4

_0cda94_data:
		.fill   0x4

_0cda98_data:
		.fill   0x4

_0cda9c_data:
		.fill   0x4

_0cdaa0_data:
		.fill   0x18

_0cdab8_data:
		.fill   0x4

_0cdabc_data:
		.fill   0x4

_0cdac0_data:
		.fill   0x8

_0cdac8_data:
		.ascii  "\x00\x00"

_0cdaca_data:
		.ascii  "\x00\x00"

_0cdacc_data:
		.fill   0x6

_0cdad2_data:
		.ascii  "\x00\x00"

_0cdad4_data:
		.ascii  "\x00\x00"

_0cdad6_data:
		.ascii  "\x00\x00"

_0cdad8_data:
		.fill   0x4

_0cdadc_data:
		.ascii  "\x00\x00"

_0cdade_data:
		.fill   0x4

_0cdae2_data:
		.ascii  "\x00\x00"

_0cdae4_data:
		.ascii  "\x00\x00"

_0cdae6_data:
		.ascii  "\x00\x00"

_0cdae8_data:
		.ascii  "\x00\x00"

_0cdaea_data:
		.ascii  "\x00\x00"

_0cdaec_data:
		.ascii  "\x00\x00"

_0cdaee_data:
		.fill   0x6

_0cdaf4_data:
		.ascii  "\x00"

_0cdaf5_data:
		.ascii  "\x00"

_0cdaf6_data:
		.ascii  "\x00"

_0cdaf7_data:
		.ascii  "\x00"

_0cdaf8_data:
		.ascii  "\x00"

_0cdaf9_data:
		.ascii  "\x00"

_0cdafa_data:
		.ascii  "\x00\x00"

_0cdafc_data:
		.ascii  "\x00"

_0cdafd_data:
		.ascii  "\x00"

_0cdafe_data:
		.ascii  "\x00"

_0cdaff_data:
		.ascii  "\x00"

_0cdb00_data:
		.ascii  "\x00"

_0cdb01_data:
		.ascii  "\x00\x00\x00"

_0cdb04_data:
		.ascii  "\x00"

_0cdb05_data:
		.ascii  "\x00"

_0cdb06_data:
		.ascii  "\x00\x00"

_0cdb08_data:
		.ascii  "\x00\x00"

_0cdb0a_data:
		.ascii  "\x00"

_0cdb0b_data:
		.ascii  "\x00\x00"

_0cdb0d_data:
		.fill   0x4

_0cdb11_data:
		.ascii  "\x00\x00"

_0cdb13_data:
		.ascii  "\x00\x00"

_0cdb15_data:
		.ascii  "\x00\x00\x00"

_0cdb18_data:
		.fill   0x4

_0cdb1c_data:
		.fill   0x4

_0cdb20_data:
		.fill   0x4

_0cdb24_data:
		.fill   0x4

_0cdb28_data:
		.fill   0x4

_0cdb2c_data:
		.fill   0x4

_0cdb30_data:
		.fill   0x84

_0cdbb4_data:
		.fill   0x4

_0cdbb8_data:
		.ascii  "\x00\x00"

_0cdbba_data:
		.ascii  "\x00\x00"

_0cdbbc_data:
		.ascii  "\x00\x00"

_0cdbbe_data:
		.ascii  "\x00\x00"

_0cdbc0_data:
		.ascii  "\x00"

_0cdbc1_data:
		.ascii  "\x00"

_0cdbc2_data:
		.ascii  "\x00"

_0cdbc3_data:
		.ascii  "\x00"

_0cdbc4_data:
		.ascii  "\x00"

_0cdbc5_data:
		.ascii  "\x00\x00\x00"

_0cdbc8_data:
		.fill   0xc

_0cdbd4_data:
		.fill   0x28

_0cdbfc_data:
		.ascii  "\x00\x00"

_0cdbfe_data:
		.ascii  "\x00\x00"

_0cdc00_data:
		.fill   0x8

_0cdc08_data:
		.fill   0x28

_0cdc30_data:
		.ascii  "\x00"

_0cdc31_data:
		.ascii  "\x00\x00"

_0cdc33_data:
		.ascii  "\x00"

_0cdc34_data:
		.ascii  "\x00"

_0cdc35_data:
		.ascii  "\x00\x00\x00"

_0cdc38_data:
		.fill   0xf

_0cdc47_data:
		.ascii  "\x00\x00"

_0cdc49_data:
		.ascii  "\x00\x00\x00"

_0cdc4c_data:
		.fill   0x8

_0cdc54_data:
		.fill   0x3c

_0cdc90_data:
		.fill   0x40

_0cdcd0_data:
		.fill   0x44

_0cdd14_data:
		.ascii  "\x00\x00"

_0cdd16_data:
		.ascii  "\x00\x00"

_0cdd18_data:
		.fill   0x20b

_0cdf23_data:
		.ascii  "\x00"

_0cdf24_data:
		.fill   0x5

_0cdf29_data:
		.ascii  "\x00\x00\x00"

_0cdf2c_data:
		.fill   0x25c

_0ce188_data:
		.fill   0x4

_0ce18c_data:
		.fill   0x28

_0ce1b4_data:
		.fill   0x4

_0ce1b8_data:
		.fill   0x58

_0ce210_data:
		.fill   0x4

_0ce214_data:
		.fill   0x4

_0ce218_data:
		.fill   0x4

_0ce21c_data:
		.fill   0x4

_0ce220_data:
		.fill   0x4

_0ce224_data:
		.fill   0x20

_0ce244_data:
		.fill   0x4

_0ce248_data:
		.fill   0xa

_0ce252_data:
		.ascii  "\x00\x00"

_0ce254_data:
		.fill   0x8

_0ce25c_data:
		.ascii  "\x00\x00"

_0ce25e_data:
		.fill   0x8

_0ce266_data:
		.fill   0x6

_0ce26c_data:
		.ascii  "\x00\x00"

_0ce26e_data:
		.fill   0x4

_0ce272_data:
		.fill   0x12

_0ce284_data:
		.ascii  "\x00"

_0ce285_data:
		.ascii  "\x00"

_0ce286_data:
		.ascii  "\x00"

_0ce287_data:
		.ascii  "\x00"

_0ce288_data:
		.ascii  "\x00"

_0ce289_data:
		.fill   0x7

_0ce290_data:
		.ascii  "\x00\x00"

_0ce292_data:
		.ascii  "\x00"

_0ce293_data:
		.ascii  "\x00\x00"

_0ce295_data:
		.fill   0x4

_0ce299_data:
		.ascii  "\x00\x00"

_0ce29b_data:
		.ascii  "\x00\x00"

_0ce29d_data:
		.ascii  "\x00\x00\x00"

_0ce2a0_data:
		.fill   0x8

_0ce2a8_data:
		.fill   0x3c

_0ce2e4_data:
		.fill   0x32

_0ce316_data:
		.ascii  "\x00"

_0ce317_data:
		.ascii  "\x00\x00"

_0ce319_data:
		.fill   0xb

_0ce324_data:
		.fill   0x4

_0ce328_data:
		.fill   0x14

_0ce33c_data:
		.fill   0x4

_0ce340_data:
		.fill   0x1e

_0ce35e_data:
		.fill   0x2f

_0ce38d_data:
		.ascii  "\x00\x00"

_0ce38f_data:
		.fill   0x9

_0ce398_data:
		.ascii  "\x00\x00"

_0ce39a_data:
		.ascii  "\x00\x00"

_0ce39c_data:
		.ascii  "\x00"

_0ce39d_data:
		.ascii  "\x00"

_0ce39e_data:
		.ascii  "\x00"

_0ce39f_data:
		.ascii  "\x00"

_0ce3a0_data:
		.ascii  "\x00"

_0ce3a1_data:
		.ascii  "\x00"

_0ce3a2_data:
		.ascii  "\x00"

_0ce3a3_data:
		.ascii  "\x00"

_0ce3a4_data:
		.ascii  "\x00\x00"

_0ce3a6_data:
		.fill   0xc4

_0ce46a_data:
		.ascii  "\x00\x00"

_0ce46c_data:
		.ascii  "\x00\x00"

_0ce46e_data:
		.fill   0x718

_0ceb86_data:
		.ascii  "\x00\x00"

_0ceb88_data:
		.ascii  "\x00\x00"

_0ceb8a_data:
		.ascii  "\x00\x00"

_0ceb8c_data:
		.ascii  "\x00\x00"

_0ceb8e_data:
		.ascii  "\x00\x00"

_0ceb90_data:
		.ascii  "\x00\x00"

_0ceb92_data:
		.ascii  "\x00\x00"

_0ceb94_data:
		.ascii  "\x00\x00"

_0ceb96_data:
		.ascii  "\x00\x00"

_0ceb98_data:
		.ascii  "\x00\x00"

_0ceb9a_data:
		.ascii  "\x00\x00"

_0ceb9c_data:
		.ascii  "\x00\x00"

_0ceb9e_data:
		.ascii  "\x00\x00"

_0ceba0_data:
		.ascii  "\x00\x00"

_0ceba2_data:
		.ascii  "\x00\x00"

_0ceba4_data:
		.ascii  "\x00\x00"

_0ceba6_data:
		.ascii  "\x00\x00"

_0ceba8_data:
		.ascii  "\x00\x00"

_0cebaa_data:
		.ascii  "\x00\x00"

_0cebac_data:
		.ascii  "\x00\x00"

_0cebae_data:
		.ascii  "\x00\x00"

_0cebb0_data:
		.ascii  "\x00\x00"

_0cebb2_data:
		.ascii  "\x00\x00"

_0cebb4_data:
		.fill   0x4

_0cebb8_data:
		.ascii  "\x00\x00"

_0cebba_data:
		.ascii  "\x00\x00"

_0cebbc_data:
		.ascii  "\x00\x00"

_0cebbe_data:
		.ascii  "\x00\x00"

_0cebc0_data:
		.ascii  "\x00\x00"

_0cebc2_data:
		.ascii  "\x00\x00"

_0cebc4_data:
		.ascii  "\x00\x00"

_0cebc6_data:
		.ascii  "\x00\x00"

_0cebc8_data:
		.ascii  "\x00\x00"

_0cebca_data:
		.ascii  "\x00\x00"

_0cebcc_data:
		.ascii  "\x00\x00"

_0cebce_data:
		.ascii  "\x00\x00"

_0cebd0_data:
		.ascii  "\x00\x00"

_0cebd2_data:
		.ascii  "\x00\x00"

_0cebd4_data:
		.ascii  "\x00\x00"

_0cebd6_data:
		.ascii  "\x00\x00"

_0cebd8_data:
		.ascii  "\x00\x00"

_0cebda_data:
		.fill   0x4

_0cebde_data:
		.ascii  "\x00\x00"

_0cebe0_data:
		.ascii  "\x00\x00"

_0cebe2_data:
		.ascii  "\x00\x00"

_0cebe4_data:
		.ascii  "\x00\x00"

_0cebe6_data:
		.ascii  "\x00\x00"

_0cebe8_data:
		.ascii  "\x00\x00"

_0cebea_data:
		.ascii  "\x00\x00"

_0cebec_data:
		.ascii  "\x00\x00"

_0cebee_data:
		.ascii  "\x00\x00"

_0cebf0_data:
		.ascii  "\x00\x00"

_0cebf2_data:
		.ascii  "\x00\x00"

_0cebf4_data:
		.ascii  "\x00\x00"

_0cebf6_data:
		.ascii  "\x00\x00"

_0cebf8_data:
		.ascii  "\x00\x00"

_0cebfa_data:
		.ascii  "\x00\x00"

_0cebfc_data:
		.ascii  "\x00\x00"

_0cebfe_data:
		.ascii  "\x00\x00"

_0cec00_data:
		.ascii  "\x00\x00"

_0cec02_data:
		.ascii  "\x00\x00"

_0cec04_data:
		.ascii  "\x00\x00"

_0cec06_data:
		.ascii  "\x00\x00"

_0cec08_data:
		.ascii  "\x00\x00"

_0cec0a_data:
		.ascii  "\x00\x00"

_0cec0c_data:
		.ascii  "\x00\x00"

_0cec0e_data:
		.ascii  "\x00\x00"

_0cec10_data:
		.ascii  "\x00\x00"

_0cec12_data:
		.ascii  "\x00\x00"

_0cec14_data:
		.ascii  "\x00\x00"

_0cec16_data:
		.ascii  "\x00\x00"

_0cec18_data:
		.ascii  "\x00\x00"

_0cec1a_data:
		.ascii  "\x00\x00"

_0cec1c_data:
		.ascii  "\x00\x00"

_0cec1e_data:
		.ascii  "\x00\x00"

_0cec20_data:
		.ascii  "\x00\x00"

_0cec22_data:
		.ascii  "\x00\x00"

_0cec24_data:
		.ascii  "\x00\x00"

_0cec26_data:
		.ascii  "\x00\x00"

_0cec28_data:
		.ascii  "\x00\x00"

_0cec2a_data:
		.ascii  "\x00\x00"

_0cec2c_data:
		.ascii  "\x00\x00"

_0cec2e_data:
		.ascii  "\x00\x00"

_0cec30_data:
		.fill   0x4

_0cec34_data:
		.ascii  "\x00\x00"

_0cec36_data:
		.ascii  "\x00\x00"

_0cec38_data:
		.ascii  "\x00\x00"

_0cec3a_data:
		.ascii  "\x00\x00"

_0cec3c_data:
		.ascii  "\x00\x00"

_0cec3e_data:
		.ascii  "\x00\x00"

_0cec40_data:
		.ascii  "\x00\x00"

_0cec42_data:
		.ascii  "\x00\x00"

_0cec44_data:
		.ascii  "\x00\x00"

_0cec46_data:
		.ascii  "\x00\x00"

_0cec48_data:
		.ascii  "\x00\x00"

_0cec4a_data:
		.ascii  "\x00\x00"

_0cec4c_data:
		.ascii  "\x00\x00"

_0cec4e_data:
		.ascii  "\x00\x00"

_0cec50_data:
		.ascii  "\x00\x00"

_0cec52_data:
		.ascii  "\x00\x00"

_0cec54_data:
		.ascii  "\x00\x00"

_0cec56_data:
		.ascii  "\x00\x00"

_0cec58_data:
		.ascii  "\x00\x00"

_0cec5a_data:
		.ascii  "\x00\x00"

_0cec5c_data:
		.ascii  "\x00\x00"

_0cec5e_data:
		.ascii  "\x00\x00"

_0cec60_data:
		.ascii  "\x00\x00"

_0cec62_data:
		.ascii  "\x00\x00"

_0cec64_data:
		.ascii  "\x00\x00"

_0cec66_data:
		.ascii  "\x00\x00"

_0cec68_data:
		.ascii  "\x00\x00"

_0cec6a_data:
		.ascii  "\x00\x00"

_0cec6c_data:
		.ascii  "\x00\x00"

_0cec6e_data:
		.ascii  "\x00\x00"

_0cec70_data:
		.ascii  "\x00"

_0cec71_data:
		.ascii  "\x00"

_0cec72_data:
		.ascii  "\x00\x00"

_0cec74_data:
		.ascii  "\x00\x00"

_0cec76_data:
		.ascii  "\x00\x00"

_0cec78_data:
		.ascii  "\x00"

_0cec79_data:
		.ascii  "\x00"

_0cec7a_data:
		.ascii  "\x00\x00"

_0cec7c_data:
		.ascii  "\x00\x00"

_0cec7e_data:
		.ascii  "\x00\x00"

_0cec80_data:
		.ascii  "\x00\x00"

_0cec82_data:
		.ascii  "\x00\x00"

_0cec84_data:
		.ascii  "\x00\x00"

_0cec86_data:
		.ascii  "\x00\x00"

_0cec88_data:
		.ascii  "\x00\x00"

_0cec8a_data:
		.ascii  "\x00\x00"

_0cec8c_data:
		.ascii  "\x00\x00"

_0cec8e_data:
		.ascii  "\x00\x00"

_0cec90_data:
		.ascii  "\x00\x00"

_0cec92_data:
		.ascii  "\x00\x00"

_0cec94_data:
		.ascii  "\x00\x00"

_0cec96_data:
		.ascii  "\x00\x00"

_0cec98_data:
		.ascii  "\x00\x00"

_0cec9a_data:
		.ascii  "\x00\x00"

_0cec9c_data:
		.ascii  "\x00\x00"

_0cec9e_data:
		.ascii  "\x00\x00"

_0ceca0_data:
		.ascii  "\x00\x00"

_0ceca2_data:
		.ascii  "\x00\x00"

_0ceca4_data:
		.ascii  "\x00\x00"

_0ceca6_data:
		.ascii  "\x00\x00"

_0ceca8_data:
		.ascii  "\x00\x00"

_0cecaa_data:
		.ascii  "\x00\x00"

_0cecac_data:
		.ascii  "\x00\x00"

_0cecae_data:
		.ascii  "\x00\x00"

_0cecb0_data:
		.ascii  "\x00\x00"

_0cecb2_data:
		.ascii  "\x00\x00"

_0cecb4_data:
		.ascii  "\x00\x00"

_0cecb6_data:
		.ascii  "\x00\x00"

_0cecb8_data:
		.ascii  "\x00\x00"

_0cecba_data:
		.ascii  "\x00\x00"

_0cecbc_data:
		.ascii  "\x00\x00"

_0cecbe_data:
		.ascii  "\x00\x00"

_0cecc0_data:
		.ascii  "\x00\x00"

_0cecc2_data:
		.ascii  "\x00\x00"

_0cecc4_data:
		.ascii  "\x00\x00"

_0cecc6_data:
		.ascii  "\x00\x00"

_0cecc8_data:
		.ascii  "\x00\x00"

_0cecca_data:
		.ascii  "\x00\x00"

_0ceccc_data:
		.ascii  "\x00\x00"

_0cecce_data:
		.ascii  "\x00\x00"

_0cecd0_data:
		.ascii  "\x00\x00"

_0cecd2_data:
		.ascii  "\x00\x00"

_0cecd4_data:
		.ascii  "\x00\x00"

_0cecd6_data:
		.ascii  "\x00\x00"

_0cecd8_data:
		.ascii  "\x00\x00"

_0cecda_data:
		.ascii  "\x00\x00"

_0cecdc_data:
		.ascii  "\x00\x00"

_0cecde_data:
		.ascii  "\x00\x00"

_0cece0_data:
		.ascii  "\x00\x00"

_0cece2_data:
		.ascii  "\x00\x00"

_0cece4_data:
		.ascii  "\x00\x00"

_0cece6_data:
		.ascii  "\x00\x00"

_0cece8_data:
		.ascii  "\x00\x00"

_0cecea_data:
		.ascii  "\x00\x00"

_0cecec_data:
		.ascii  "\x00\x00"

_0cecee_data:
		.ascii  "\x00\x00"

_0cecf0_data:
		.ascii  "\x00\x00"

_0cecf2_data:
		.ascii  "\x00\x00"

_0cecf4_data:
		.ascii  "\x00\x00"

_0cecf6_data:
		.ascii  "\x00\x00"

_0cecf8_data:
		.ascii  "\x00\x00"

_0cecfa_data:
		.ascii  "\x00\x00"

_0cecfc_data:
		.ascii  "\x00\x00"

_0cecfe_data:
		.ascii  "\x00\x00"

_0ced00_data:
		.ascii  "\x00\x00"

_0ced02_data:
		.ascii  "\x00\x00"

_0ced04_data:
		.ascii  "\x00\x00"

_0ced06_data:
		.ascii  "\x00\x00"

_0ced08_data:
		.ascii  "\x00\x00"

_0ced0a_data:
		.ascii  "\x00\x00"

_0ced0c_data:
		.ascii  "\x00\x00"

_0ced0e_data:
		.ascii  "\x00\x00"

_0ced10_data:
		.ascii  "\x00\x00"

_0ced12_data:
		.ascii  "\x00\x00"

_0ced14_data:
		.ascii  "\x00\x00"

_0ced16_data:
		.ascii  "\x00\x00"

_0ced18_data:
		.ascii  "\x00\x00"

_0ced1a_data:
		.ascii  "\x00\x00"

_0ced1c_data:
		.ascii  "\x00\x00"

_0ced1e_data:
		.ascii  "\x00\x00"

_0ced20_data:
		.ascii  "\x00\x00"

_0ced22_data:
		.ascii  "\x00\x00"

_0ced24_data:
		.ascii  "\x00\x00"

_0ced26_data:
		.ascii  "\x00\x00"

_0ced28_data:
		.ascii  "\x00\x00"

_0ced2a_data:
		.ascii  "\x00\x00"

_0ced2c_data:
		.ascii  "\x00\x00"

_0ced2e_data:
		.ascii  "\x00\x00"

_0ced30_data:
		.ascii  "\x00\x00"

_0ced32_data:
		.ascii  "\x00\x00"

_0ced34_data:
		.ascii  "\x00\x00"

_0ced36_data:
		.ascii  "\x00\x00"

_0ced38_data:
		.ascii  "\x00\x00"

_0ced3a_data:
		.ascii  "\x00\x00"

_0ced3c_data:
		.ascii  "\x00\x00"

_0ced3e_data:
		.fill   0xff

_0cee3d_data:
		.ascii  "\x00"

_0cee3e_data:
		.ascii  "\x00"

_0cee3f_data:
		.ascii  "\x00"

_0cee40_data:
		.ascii  "\x00"

_0cee41_data:
		.ascii  "\x00"

_0cee42_data:
		.ascii  "\x00"

_0cee43_data:
		.ascii  "\x00\x00"

_0cee45_data:
		.ascii  "\x00\x00"

_0cee47_data:
		.fill   0xa

_0cee51_data:
		.fill   0x5

_0cee56_data:
		.ascii  "\x00"

_0cee57_data:
		.ascii  "\x00"

_0cee58_data:
		.ascii  "\x00\x00"

_0cee5a_data:
		.ascii  "\x00"

_0cee5b_data:
		.ascii  "\x00"

_0cee5c_data:
		.ascii  "\x00"

_0cee5d_data:
		.ascii  "\x00"

_0cee5e_data:
		.ascii  "\x00"

_0cee5f_data:
		.ascii  "\x00"

_0cee60_data:
		.ascii  "\x00"

_0cee61_data:
		.ascii  "\x00"

_0cee62_data:
		.ascii  "\x00"

_0cee63_data:
		.ascii  "\x00"

_0cee64_data:
		.ascii  "\x00\x00"

_0cee66_data:
		.ascii  "\x00\x00\x00"

_0cee69_data:
		.ascii  "\x00"

_0cee6a_data:
		.ascii  "\x00"

_0cee6b_data:
		.ascii  "\x00"

_0cee6c_data:
		.ascii  "\x00"

_0cee6d_data:
		.ascii  "\x00"

_0cee6e_data:
		.ascii  "\x00"

_0cee6f_data:
		.ascii  "\x00"

_0cee70_data:
		.ascii  "\x00"

_0cee71_data:
		.ascii  "\x00"

_0cee72_data:
		.ascii  "\x00"

_0cee73_data:
		.ascii  "\x00"

_0cee74_data:
		.ascii  "\x00"

_0cee75_data:
		.ascii  "\x00"

_0cee76_data:
		.ascii  "\x00"

_0cee77_data:
		.ascii  "\x00"

_0cee78_data:
		.ascii  "\x00"

_0cee79_data:
		.ascii  "\x00"

_0cee7a_data:
		.ascii  "\x00"

_0cee7b_data:
		.ascii  "\x00"

_0cee7c_data:
		.ascii  "\x00"

_0cee7d_data:
		.ascii  "\x00"

_0cee7e_data:
		.ascii  "\x00"

_0cee7f_data:
		.ascii  "\x00"

_0cee80_data:
		.ascii  "\x00"

_0cee81_data:
		.ascii  "\x00"

_0cee82_data:
		.ascii  "\x00"

_0cee83_data:
		.ascii  "\x00"

_0cee84_data:
		.ascii  "\x00"

_0cee85_data:
		.ascii  "\x00"

_0cee86_data:
		.ascii  "\x00"

_0cee87_data:
		.ascii  "\x00"

_0cee88_data:
		.ascii  "\x00"

_0cee89_data:
		.ascii  "\x00"

_0cee8a_data:
		.ascii  "\x00"

_0cee8b_data:
		.ascii  "\x00"

_0cee8c_data:
		.ascii  "\x00"

_0cee8d_data:
		.ascii  "\x00"

_0cee8e_data:
		.ascii  "\x00"

_0cee8f_data:
		.ascii  "\x00"

_0cee90_data:
		.ascii  "\x00"

_0cee91_data:
		.ascii  "\x00"

_0cee92_data:
		.ascii  "\x00"

_0cee93_data:
		.ascii  "\x00"

_0cee94_data:
		.ascii  "\x00"

_0cee95_data:
		.ascii  "\x00"

_0cee96_data:
		.ascii  "\x00"

_0cee97_data:
		.ascii  "\x00"

_0cee98_data:
		.ascii  "\x00"

_0cee99_data:
		.ascii  "\x00"

_0cee9a_data:
		.ascii  "\x00"

_0cee9b_data:
		.ascii  "\x00"

_0cee9c_data:
		.ascii  "\x00"

_0cee9d_data:
		.ascii  "\x00"

_0cee9e_data:
		.ascii  "\x00"

_0cee9f_data:
		.ascii  "\x00"

_0ceea0_data:
		.ascii  "\x00"

_0ceea1_data:
		.ascii  "\x00"

_0ceea2_data:
		.ascii  "\x00"

_0ceea3_data:
		.ascii  "\x00"

_0ceea4_data:
		.ascii  "\x00"

_0ceea5_data:
		.ascii  "\x00"

_0ceea6_data:
		.ascii  "\x00"

_0ceea7_data:
		.ascii  "\x00"

_0ceea8_data:
		.ascii  "\x00"

_0ceea9_data:
		.ascii  "\x00"

_0ceeaa_data:
		.ascii  "\x00"

_0ceeab_data:
		.ascii  "\x00"

_0ceeac_data:
		.ascii  "\x00"

_0ceead_data:
		.ascii  "\x00"

_0ceeae_data:
		.ascii  "\x00"

_0ceeaf_data:
		.ascii  "\x00"

_0ceeb0_data:
		.ascii  "\x00"

_0ceeb1_data:
		.ascii  "\x00"

_0ceeb2_data:
		.ascii  "\x00"

_0ceeb3_data:
		.ascii  "\x00"

_0ceeb4_data:
		.ascii  "\x00"

_0ceeb5_data:
		.ascii  "\x00"

_0ceeb6_data:
		.ascii  "\x00"

_0ceeb7_data:
		.ascii  "\x00"

_0ceeb8_data:
		.ascii  "\x00"

_0ceeb9_data:
		.ascii  "\x00"

_0ceeba_data:
		.ascii  "\x00"

_0ceebb_data:
		.ascii  "\x00"

_0ceebc_data:
		.ascii  "\x00"

_0ceebd_data:
		.ascii  "\x00"

_0ceebe_data:
		.ascii  "\x00"

_0ceebf_data:
		.ascii  "\x00"

_0ceec0_data:
		.ascii  "\x00"

_0ceec1_data:
		.ascii  "\x00"

_0ceec2_data:
		.ascii  "\x00"

_0ceec3_data:
		.ascii  "\x00"

_0ceec4_data:
		.ascii  "\x00"

_0ceec5_data:
		.ascii  "\x00"

_0ceec6_data:
		.ascii  "\x00"

_0ceec7_data:
		.ascii  "\x00"

_0ceec8_data:
		.ascii  "\x00"

_0ceec9_data:
		.ascii  "\x00"

_0ceeca_data:
		.ascii  "\x00"

_0ceecb_data:
		.ascii  "\x00"

_0ceecc_data:
		.ascii  "\x00"

_0ceecd_data:
		.ascii  "\x00"

_0ceece_data:
		.ascii  "\x00"

_0ceecf_data:
		.ascii  "\x00"

_0ceed0_data:
		.ascii  "\x00"

_0ceed1_data:
		.ascii  "\x00"

_0ceed2_data:
		.ascii  "\x00"

_0ceed3_data:
		.ascii  "\x00"

_0ceed4_data:
		.ascii  "\x00"

_0ceed5_data:
		.ascii  "\x00"

_0ceed6_data:
		.ascii  "\x00"

_0ceed7_data:
		.ascii  "\x00"

_0ceed8_data:
		.ascii  "\x00"

_0ceed9_data:
		.ascii  "\x00"

_0ceeda_data:
		.ascii  "\x00"

_0ceedb_data:
		.ascii  "\x00"

_0ceedc_data:
		.ascii  "\x00"

_0ceedd_data:
		.ascii  "\x00"

_0ceede_data:
		.ascii  "\x00"

_0ceedf_data:
		.ascii  "\x00"

_0ceee0_data:
		.fill   0x4

_0ceee4_data:
		.fill   0x4

_0ceee8_data:
		.ascii  "\x00\x00"

_0ceeea_data:
		.ascii  "\x00\x00"

_0ceeec_data:
		.ascii  "\x00\x00"

_0ceeee_data:
		.ascii  "\x00\x00"

_0ceef0_data:
		.ascii  "\x00"

_0ceef1_data:
		.ascii  "\x00"

_0ceef2_data:
		.ascii  "\x00\x00"

_0ceef4_data:
		.ascii  "\x00\x00"

_0ceef6_data:
		.ascii  "\x00\x00"

_0ceef8_data:
		.ascii  "\x00\x00"

_0ceefa_data:
		.ascii  "\x00\x00"

_0ceefc_data:
		.ascii  "\x00\x00"

_0ceefe_data:
		.ascii  "\x00\x00"

_0cef00_data:
		.ascii  "\x00\x00"

_0cef02_data:
		.ascii  "\x00\x00"

_0cef04_data:
		.ascii  "\x00\x00"

_0cef06_data:
		.ascii  "\x00\x00"

_0cef08_data:
		.ascii  "\x00\x00"

_0cef0a_data:
		.ascii  "\x00\x00"

_0cef0c_data:
		.fill   0x14

_0cef20_data:
		.ascii  "\x00\x00"

_0cef22_data:
		.ascii  "\x00\x00"

_0cef24_data:
		.fill   0xa410

_0d9334_data:
		.fill   0x4000

_0dd334_data:
		.ascii  "\x00"

_0dd335_data:
		.ascii  "\x00"

_0dd336_data:
		.fill   0x5e

_0dd394_data:
		.ascii  "\x00"

_0dd395_data:
		.ascii  "\x00"

_0dd396_data:
		.fill   0x10

_0dd3a6_data:
		.ascii  "\x00"

_0dd3a7_data:
		.ascii  "\x00"

_0dd3a8_data:
		.fill   0x28c

_0dd634_data:
		.ascii  "\x00\x00"

_0dd636_data:
		.ascii  "\x00\x00"

_0dd638_data:
		.ascii  "\x00\x00"

_0dd63a_data:
		.ascii  "\x00\x00"

_0dd63c_data:
		.ascii  "\x00\x00"

_0dd63e_data:
		.ascii  "\x00\x00"

_0dd640_data:
		.ascii  "\x00\x00"

_0dd642_data:
		.ascii  "\x00\x00"

_0dd644_data:
		.fill   0xc

_0dd650_data:
		.ascii  "\x00\x00"

_0dd652_data:
		.ascii  "\x00\x00"

_0dd654_data:
		.ascii  "\x00\x00"

_0dd656_data:
		.ascii  "\x00\x00"

_0dd658_data:
		.ascii  "\x00\x00"

_0dd65a_data:
		.ascii  "\x00\x00"

_0dd65c_data:
		.ascii  "\x00\x00"

_0dd65e_data:
		.ascii  "\x00\x00"

_0dd660_data:
		.ascii  "\x00"

_0dd661_data:
		.ascii  "\x00"

_0dd662_data:
		.ascii  "\x00\x00"

_0dd664_data:
		.ascii  "\x00\x00"

_0dd666_data:
		.ascii  "\x00\x00"

_0dd668_data:
		.ascii  "\x00\x00"

_0dd66a_data:
		.fill   0x9c

_0dd706_data:
		.ascii  "\x00\x00"

_0dd708_data:
		.fill   0x8

_0dd710_data:
		.ascii  "\x00\x00"

_0dd712_data:
		.ascii  "\x00\x00"

_0dd714_data:
		.ascii  "\x00\x00"

_0dd716_data:
		.ascii  "\x00\x00"

_0dd718_data:
		.ascii  "\x00\x00"

_0dd71a_data:
		.ascii  "\x00\x00"

_0dd71c_data:
		.ascii  "\x00\x00"

_0dd71e_data:
		.ascii  "\x00\x00"

_0dd720_data:
		.ascii  "\x00\x00"

_0dd722_data:
		.ascii  "\x00\x00"

_0dd724_data:
		.fill   0xc

_0dd730_data:
		.fill   0x4

_0dd734_data:
		.fill   0x4

_0dd738_data:
		.fill   0x4

_0dd73c_data:
		.fill   0x4

_0dd740_data:
		.fill   0x4

_0dd744_data:
		.fill   0x4

_0dd748_data:
		.fill   0x4

_0dd74c_data:
		.fill   0x4

_0dd750_data:
		.fill   0x4

_0dd754_data:
		.fill   0x4

_0dd758_data:
		.fill   0x8

_0dd760_data:
		.fill   0x4

_0dd764_data:
		.ascii  "\x00\x00"

_0dd766_data:
		.fill   0x4

_0dd76a_data:
		.ascii  "\x00\x00"

_0dd76c_data:
		.fill   0x4

_0dd770_data:
		.ascii  "\x00\x00"

_0dd772_data:
		.fill   0x4

_0dd776_data:
		.ascii  "\x00\x00"

_0dd778_data:
		.fill   0x4

_0dd77c_data:
		.ascii  "\x00\x00"

_0dd77e_data:
		.fill   0x4

_0dd782_data:
		.ascii  "\x00\x00"

_0dd784_data:
		.fill   0x4

_0dd788_data:
		.ascii  "\x00\x00"

_0dd78a_data:
		.fill   0x4

_0dd78e_data:
		.ascii  "\x00\x00"

_0dd790_data:
		.fill   0x4

_0dd794_data:
		.ascii  "\x00\x00"

_0dd796_data:
		.fill   0x4

_0dd79a_data:
		.ascii  "\x00\x00"

_0dd79c_data:
		.fill   0x4

_0dd7a0_data:
		.ascii  "\x00\x00"

_0dd7a2_data:
		.ascii  "\x00\x00"

_0dd7a4_data:
		.ascii  "\x00\x00"

_0dd7a6_data:
		.fill   0xe

_0dd7b4_data:
		.fill   0x4

_0dd7b8_data:
		.ascii  "\x00\x00"

_0dd7ba_data:
		.ascii  "\x00\x00"

_0dd7bc_data:
		.fill   0x104

_0dd8c0_data:
		.ascii  "\x00"

_0dd8c1_data:
		.ascii  "\x00"

_0dd8c2_data:
		.ascii  "\x00"

_0dd8c3_data:
		.fill   0x4

_0dd8c7_data:
		.fill   0x4

_0dd8cb_data:
		.fill   0x18c

_0dda57_data:
		.fill   0x4

_0dda5b_data:
		.fill   0x190

_0ddbeb_data:
		.fill   0x190

_0ddd7b_data:
		.fill   0x64

_0ddddf_data:
		.ascii  "\x00"

_0ddde0_data:
		.fill   0x1a

_0dddfa_data:
		.ascii  "\x00"

_0dddfb_data:
		.ascii  "\x00"

_0dddfc_data:
		.ascii  "\x00"

_0dddfd_data:
		.ascii  "\x00"

_0dddfe_data:
		.ascii  "\x00"

_0dddff_data:
		.ascii  "\x00"

_0dde00_data:
		.ascii  "\x00"

_0dde01_data:
		.ascii  "\x00\x00"

_0dde03_data:
		.ascii  "\x00"

_0dde04_data:
		.fill   0x7ff

_0de603_data:
		.ascii  "\x00"

_0de604_data:
		.fill   0x8

_0de60c_data:
		.fill   0x4

_0de610_data:
		.ascii  "\x00\x00"

_0de612_data:
		.ascii  "\x00\x00"

_0de614_data:
		.ascii  "\x00"

_0de615_data:
		.ascii  "\x00"

_0de616_data:
		.ascii  "\x00"

_0de617_data:
		.ascii  "\x00"

_0de618_data:
		.fill   0x28

_0de640_data:
		.ascii  "\x00\x00"

_0de642_data:
		.ascii  "\x00\x00"

_0de644_data:
		.ascii  "\x00\x00"

_0de646_data:
		.ascii  "\x00\x00"

_0de648_data:
		.ascii  "\x00\x00"

_0de64a_data:
		.ascii  "\x00\x00"

_0de64c_data:
		.ascii  "\x00\x00"

_0de64e_data:
		.ascii  "\x00\x00"

_0de650_data:
		.fill   0x6

_0de656_data:
		.ascii  "\x00"

_0de657_data:
		.fill   0x69

_0de6c0_data:
		.fill   0x4

_0de6c4_data:
		.fill   0x4

_0de6c8_data:
		.fill   0x4

_0de6cc_data:
		.fill   0x4

_0de6d0_data:
		.fill   0x4

_0de6d4_data:
		.fill   0x4

_0de6d8_data:
		.fill   0x4

_0de6dc_data:
		.ascii  "\x00\x00\x00"

_0de6df_data:
		.ascii  "\x00"

_0de6e0_data:
		.ascii  "\x00"

_0de6e1_data:
		.ascii  "\x00"

_0de6e2_data:
		.fill   0x2fe

_0de9e0_data:
		.fill   0x4

_0de9e4_data:
		.fill   0x4

_0de9e8_data:
		.fill   0x4

_0de9ec_data:
		.fill   0x4

_0de9f0_data:
		.fill   0x4

_0de9f4_data:
		.fill   0x4

_0de9f8_data:
		.fill   0x4

_0de9fc_data:
		.fill   0x4

_0dea00_data:
		.fill   0x4

_0dea04_data:
		.fill   0xc

_0dea10_data:
		.ascii  "\x00"

_0dea11_data:
		.ascii  "\x00"

_0dea12_data:
		.ascii  "\x00"

_0dea13_data:
		.ascii  "\x00"

_0dea14_data:
		.ascii  "\x00"

_0dea15_data:
		.fill   0xb

_0dea20_data:
		.fill   0x4

_0dea24_data:
		.fill   0x4

_0dea28_data:
		.fill   0x4

_0dea2c_data:
		.fill   0x7f4

_0df220_data:
		.fill   0x4

_0df224_data:
		.fill   0x4

_0df228_data:
		.fill   0x4

_0df22c_data:
		.fill   0x4

_0df230_data:
		.fill   0x4

_0df234_data:
		.fill   0x4

_0df238_data:
		.fill   0x4

_0df23c_data:
		.fill   0x7fe

_0dfa3a_data:
		.fill   0x64

_0dfa9e_data:
		.fill   0xa

_0dfaa8_data:
		.fill   0x4

_0dfaac_data:
		.ascii  "\x00\x00"

_0dfaae_data:
		.fill   0x6

_0dfab4_data:
		.fill   0x4

_0dfab8_data:
		.fill   0x64

_0dfb1c_data:
		.fill   0x4

_0dfb20_data:
		.fill   0x4

_0dfb24_data:
		.ascii  "\x00\x00"

_0dfb26_data:
		.ascii  "\x00\x00"

_0dfb28_data:
		.ascii  "\x00\x00"

_0dfb2a_data:
		.ascii  "\x00\x00"

_0dfb2c_data:
		.ascii  "\x00\x00"

_0dfb2e_data:
		.ascii  "\x00\x00"

_0dfb30_data:
		.ascii  "\x00\x00"

_0dfb32_data:
		.ascii  "\x00\x00"

_0dfb34_data:
		.ascii  "\x00\x00"

_0dfb36_data:
		.ascii  "\x00\x00"

_0dfb38_data:
		.ascii  "\x00\x00"

_0dfb3a_data:
		.ascii  "\x00\x00"

_0dfb3c_data:
		.ascii  "\x00\x00"

_0dfb3e_data:
		.ascii  "\x00\x00"

_0dfb40_data:
		.ascii  "\x00\x00"

_0dfb42_data:
		.ascii  "\x00\x00"

_0dfb44_data:
		.ascii  "\x00\x00"

_0dfb46_data:
		.ascii  "\x00\x00"

_0dfb48_data:
		.ascii  "\x00\x00"

_0dfb4a_data:
		.ascii  "\x00\x00"

_0dfb4c_data:
		.ascii  "\x00\x00"

_0dfb4e_data:
		.ascii  "\x00\x00"

_0dfb50_data:
		.ascii  "\x00\x00"

_0dfb52_data:
		.ascii  "\x00"

_0dfb53_data:
		.ascii  "\x00"

_0dfb54_data:
		.ascii  "\x00"

_0dfb55_data:
		.ascii  "\x00"

_0dfb56_data:
		.ascii  "\x00"

_0dfb57_data:
		.ascii  "\x00"

_0dfb58_data:
		.ascii  "\x00"

_0dfb59_data:
		.fill   0x7

_0dfb60_data:
		.fill   0x80

_0dfbe0_data:
		.fill   0x4

_0dfbe4_data:
		.fill   0x4

_0dfbe8_data:
		.ascii  "\x00\x00"

_0dfbea_data:
		.ascii  "\x00\x00"

_0dfbec_data:
		.ascii  "\x00\x00"

_0dfbee_data:
		.ascii  "\x00\x00"

_0dfbf0_data:
		.ascii  "\x00\x00"

_0dfbf2_data:
		.ascii  "\x00\x00"

_0dfbf4_data:
		.ascii  "\x00\x00"

_0dfbf6_data:
		.ascii  "\x00\x00"

_0dfbf8_data:
		.ascii  "\x00\x00"

_0dfbfa_data:
		.ascii  "\x00\x00"

_0dfbfc_data:
		.ascii  "\x00\x00"

_0dfbfe_data:
		.ascii  "\x00\x00"

_0dfc00_data:
		.ascii  "\x00\x00"

_0dfc02_data:
		.ascii  "\x00\x00"

_0dfc04_data:
		.ascii  "\x00\x00"

_0dfc06_data:
		.ascii  "\x00\x00"

_0dfc08_data:
		.fill   0x4

_0dfc0c_data:
		.fill   0x4

_0dfc10_data:
		.fill   0x4

_0dfc14_data:
		.fill   0x4

_0dfc18_data:
		.fill   0x4

_0dfc1c_data:
		.fill   0x4

_0dfc20_data:
		.fill   0x4

_0dfc24_data:
		.fill   0x4

_0dfc28_data:
		.fill   0x4

_0dfc2c_data:
		.fill   0x4

_0dfc30_data:
		.fill   0x4

_0dfc34_data:
		.fill   0x4

_0dfc38_data:
		.fill   0x4

_0dfc3c_data:
		.fill   0x4

_0dfc40_data:
		.fill   0x4

_0dfc44_data:
		.fill   0x4

_0dfc48_data:
		.fill   0x4

_0dfc4c_data:
		.fill   0x4

_0dfc50_data:
		.fill   0x4

_0dfc54_data:
		.fill   0x1c

_0dfc70_data:
		.fill   0x1c

_0dfc8c_data:
		.fill   0x3c

_0dfcc8_data:
		.fill   0x3311

_0e2fd9_data:
		.ascii  "\x00\x00\x00"

_0e2fdc_data:
		.ascii  "\x00"

_0e2fdd_data:
		.ascii  "\x00"

_0e2fde_data:
		.fill   0x2fe

_0e32dc_data:
		.fill   0x300

_0e35dc_data:
		.fill   0x300

_0e38dc_data:
		.ascii  "\x00"

_0e38dd_data:
		.ascii  "\x00"

_0e38de_data:
		.fill   0x2fe

_0e3bdc_data:
		.fill   0x4

_0e3be0_data:
		.fill   0x4

_0e3be4_data:
		.fill   0x4

_0e3be8_data:
		.fill   0x4

_0e3bec_data:
		.fill   0x4

_0e3bf0_data:
		.fill   0x4

_0e3bf4_data:
		.fill   0x4

_0e3bf8_data:
		.fill   0x4

_0e3bfc_data:
		.fill   0x4

_0e3c00_data:
		.fill   0x4

_0e3c04_data:
		.fill   0x4

_0e3c08_data:
		.ascii  "\x00"

_0e3c09_data:
		.fill   0x7

_0e3c10_data:
		.ascii  "\x00\x00"

_0e3c12_data:
		.ascii  "\x00\x00"

_0e3c14_data:
		.ascii  "\x00\x00"

_0e3c16_data:
		.ascii  "\x00\x00"

_0e3c18_data:
		.ascii  "\x00\x00"

_0e3c1a_data:
		.ascii  "\x00\x00"

_0e3c1c_data:
		.ascii  "\x00\x00"

_0e3c1e_data:
		.ascii  "\x00\x00"

_0e3c20_data:
		.ascii  "\x00\x00"

_0e3c22_data:
		.ascii  "\x00\x00"

_0e3c24_data:
		.ascii  "\x00\x00"

_0e3c26_data:
		.ascii  "\x00"

_0e3c27_data:
		.ascii  "\x00"

_0e3c28_data:
		.ascii  "\x00"

_0e3c29_data:
		.ascii  "\x00\x00"

_0e3c2b_data:
		.ascii  "\x00"

_0e3c2c_data:
		.ascii  "\x00"

_0e3c2d_data:
		.ascii  "\x00"

_0e3c2e_data:
		.ascii  "\x00"

_0e3c2f_data:
		.ascii  "\x00"

_0e3c30_data:
		.fill   0x80

_0e3cb0_data:
		.fill   0x8

_0e3cb8_data:
		.ascii  "\x00\x00"

_0e3cba_data:
		.ascii  "\x00\x00"

_0e3cbc_data:
		.ascii  "\x00\x00"

_0e3cbe_data:
		.ascii  "\x00\x00"

_0e3cc0_data:
		.ascii  "\x00\x00"

_0e3cc2_data:
		.ascii  "\x00\x00"

_0e3cc4_data:
		.ascii  "\x00\x00"

_0e3cc6_data:
		.ascii  "\x00\x00"

_0e3cc8_data:
		.ascii  "\x00"

_0e3cc9_data:
		.ascii  "\x00"

_0e3cca_data:
		.ascii  "\x00"

_0e3ccb_data:
		.ascii  "\x00"

_0e3ccc_data:
		.fill   0x4

_0e3cd0_data:
		.ascii  "\x00"

_0e3cd1_data:
		.ascii  "\x00"

_0e3cd2_data:
		.ascii  "\x00\x00"

_0e3cd4_data:
		.ascii  "\x00\x00"

_0e3cd6_data:
		.ascii  "\x00\x00"

_0e3cd8_data:
		.ascii  "\x00\x00"

_0e3cda_data:
		.ascii  "\x00\x00"

_0e3cdc_data:
		.ascii  "\x00\x00"

_0e3cde_data:
		.ascii  "\x00\x00"

_0e3ce0_data:
		.ascii  "\x00\x00"

_0e3ce2_data:
		.ascii  "\x00\x00"

_0e3ce4_data:
		.ascii  "\x00\x00"

_0e3ce6_data:
		.ascii  "\x00\x00"

_0e3ce8_data:
		.ascii  "\x00\x00"

_0e3cea_data:
		.ascii  "\x00\x00"

_0e3cec_data:
		.ascii  "\x00"

_0e3ced_data:
		.ascii  "\x00"

_0e3cee_data:
		.fill   0x52

_0e3d40_data:
		.ascii  "\x00\x00"

_0e3d42_data:
		.ascii  "\x00\x00"

_0e3d44_data:
		.ascii  "\x00"

_0e3d45_data:
		.ascii  "\x00"

_0e3d46_data:
		.ascii  "\x00"

_0e3d47_data:
		.ascii  "\x00"

_0e3d48_data:
		.ascii  "\x00"

_0e3d49_data:
		.ascii  "\x00"

_0e3d4a_data:
		.ascii  "\x00\x00"

_0e3d4c_data:
		.fill   0x4

_0e3d50_data:
		.ascii  "\x00"

_0e3d51_data:
		.ascii  "\x00\x00\x00"

_0e3d54_data:
		.fill   0x4

_0e3d58_data:
		.fill   0x8

_0e3d60_data:
		.fill   0x4

_0e3d64_data:
		.fill   0x4

_0e3d68_data:
		.fill   0x4

_0e3d6c_data:
		.fill   0xc

_0e3d78_data:
		.fill   0x4

_0e3d7c_data:
		.fill   0x4

_0e3d80_data:
		.fill   0x4

_0e3d84_data:
		.fill   0x4

_0e3d88_data:
		.ascii  "\x00\x00"

_0e3d8a_data:
		.ascii  "\x00\x00"

_0e3d8c_data:
		.fill   0x8

_0e3d94_data:
		.fill   0x4

_0e3d98_data:
		.fill   0x4

_0e3d9c_data:
		.fill   0xc

_0e3da8_data:
		.fill   0x4

_0e3dac_data:
		.ascii  "\x00\x00"

_0e3dae_data:
		.ascii  "\x00\x00"

_0e3db0_data:
		.fill   0x26

_0e3dd6_data:
		.ascii  "\x00\x00"

_0e3dd8_data:
		.fill   0x26

_0e3dfe_data:
		.ascii  "\x00\x00"

_0e3e00_data:
		.ascii  "\x00\x00"

_0e3e02_data:
		.ascii  "\x00\x00"

_0e3e04_data:
		.ascii  "\x00\x00"

_0e3e06_data:
		.ascii  "\x00\x00"

_0e3e08_data:
		.ascii  "\x00\x00"

_0e3e0a_data:
		.ascii  "\x00\x00"

_0e3e0c_data:
		.ascii  "\x00\x00"

_0e3e0e_data:
		.ascii  "\x00\x00"

_0e3e10_data:
		.fill   0x4

_0e3e14_data:
		.fill   0xd0

_0e3ee4_data:
		.fill   0xc

_0e3ef0_data:
		.ascii  "\x00\x00"

_0e3ef2_data:
		.ascii  "\x00\x00"

_0e3ef4_data:
		.ascii  "\x00\x00"

_0e3ef6_data:
		.fill   0x17a

_0e4070_data:
		.fill   0x4

_0e4074_data:
		.ascii  "\x00\x00"

_0e4076_data:
		.fill   0x4

_0e407a_data:
		.fill   0x6

_0e4080_data:
		.fill   0x4

_0e4084_data:
		.ascii  "\x00"

_0e4085_data:
		.ascii  "\x00"

_0e4086_data:
		.ascii  "\x00\x00"

_0e4088_data:
		.ascii  "\x00\x00"

_0e408a_data:
		.ascii  "\x00\x00"

_0e408c_data:
		.ascii  "\x00\x00"

_0e408e_data:
		.ascii  "\x00\x00"

_0e4090_data:
		.ascii  "\x00\x00"

_0e4092_data:
		.ascii  "\x00\x00"

_0e4094_data:
		.ascii  "\x00"

_0e4095_data:
		.ascii  "\x00"

_0e4096_data:
		.ascii  "\x00"

_0e4097_data:
		.ascii  "\x00"

_0e4098_data:
		.ascii  "\x00\x00"

_0e409a_data:
		.ascii  "\x00\x00"

_0e409c_data:
		.ascii  "\x00\x00"

_0e409e_data:
		.ascii  "\x00\x00"

_0e40a0_data:
		.ascii  "\x00\x00"

_0e40a2_data:
		.ascii  "\x00\x00"

_0e40a4_data:
		.ascii  "\x00\x00"

_0e40a6_data:
		.ascii  "\x00\x00"

_0e40a8_data:
		.fill   0x9c

_0e4144_data:
		.ascii  "\x00\x00"

_0e4146_data:
		.ascii  "\x00\x00"

_0e4148_data:
		.ascii  "\x00\x00"

_0e414a_data:
		.ascii  "\x00\x00"

_0e414c_data:
		.ascii  "\x00"

_0e414d_data:
		.ascii  "\x00\x00\x00"

_0e4150_data:
		.fill   0x4

_0e4154_data:
		.fill   0x4

_0e4158_data:
		.fill   0x1c0c

_0e5d64_data:
		.ascii  "\x00\x00"

_0e5d66_data:
		.ascii  "\x00\x00"

_0e5d68_data:
		.ascii  "\x00\x00"

_0e5d6a_data:
		.ascii  "\x00\x00"

_0e5d6c_data:
		.fill   0x4

_0e5d70_data:
		.fill   0x4

_0e5d74_data:
		.fill   0xc

_0e5d80_data:
		.fill   0x4

_0e5d84_data:
		.fill   0xc

_0e5d90_data:
		.fill   0x4

_0e5d94_data:
		.fill   0x4

_0e5d98_data:
		.fill   0x80

_0e5e18_data:
		.fill   0x4

_0e5e1c_data:
		.fill   0x4

_0e5e20_data:
		.fill   0x4

_0e5e24_data:
		.fill   0x4

_0e5e28_data:
		.fill   0x4

_0e5e2c_data:
		.fill   0x4

_0e5e30_data:
		.fill   0x4

_0e5e34_data:
		.fill   0x4

_0e5e38_data:
		.fill   0x4

_0e5e3c_data:
		.fill   0x4

_0e5e40_data:
		.fill   0x24

_0e5e64_data:
		.ascii  "\x00\x00"

_0e5e66_data:
		.ascii  "\x00\x00"

_0e5e68_data:
		.fill   0x2008
